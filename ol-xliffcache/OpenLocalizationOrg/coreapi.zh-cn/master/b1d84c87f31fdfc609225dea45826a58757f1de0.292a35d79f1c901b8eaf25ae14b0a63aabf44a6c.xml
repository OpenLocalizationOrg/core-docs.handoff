{"nodes":[{"pos":[559,577],"content":"NewArrayExpression","needQuote":true,"nodes":[{"content":"NewArrayExpression","pos":[0,18]}]},{"pos":[41940,41951],"content":"Expressions","needQuote":true,"nodes":[{"content":"Expressions","pos":[0,11]}]},{"pos":[43970,43974],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[45551,45576],"content":"Accept(ExpressionVisitor)","needQuote":true,"nodes":[{"content":"Accept(ExpressionVisitor)","pos":[0,25]}]},{"content":"\\n&lt;p&gt;The visitor to visit this node with.&lt;/p&gt;\\n","pos":[46710,46757],"source":"\\n<p>The visitor to visit this node with.</p>\\n"},{"content":"\\n&lt;p&gt;The result of visiting this node.&lt;/p&gt;\\n","pos":[46838,46882],"source":"\\n<p>The result of visiting this node.</p>\\n"},{"pos":[47586,47617],"content":"Update(IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"Update(IEnumerable&lt;Expression&gt;)","pos":[0,31],"source":"Update(IEnumerable<Expression>)"}]},{"content":"\\n&lt;p&gt;This expression if no children are changed or an expression with the updated children.&lt;/p&gt;\\n","pos":[48874,48971],"source":"\\n<p>This expression if no children are changed or an expression with the updated children.</p>\\n"},{"pos":[49432,49455],"content":"System.Linq.Expressions","needQuote":true,"nodes":[{"content":"System.Linq.Expressions","pos":[0,23]}]},{"pos":[49637,49643],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[49826,49836],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[50086,50095],"content":"CanReduce","needQuote":true,"nodes":[{"content":"CanReduce","pos":[0,9]}]},{"pos":[50374,50382],"content":"NodeType","needQuote":true,"nodes":[{"content":"NodeType","pos":[0,8]}]},{"pos":[50724,50751],"content":"Add(Expression, Expression)","needQuote":true,"nodes":[{"content":"Add(Expression, Expression)","pos":[0,27]}]},{"pos":[51019,51022],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[51086,51087],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[51158,51168],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[51229,51230]},{"pos":[51306,51316],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[51376,51377],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[51534,51537],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[51601,51602],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[51673,51683],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[51744,51745]},{"pos":[51821,51831],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[51891,51892],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[52307,52346],"content":"Add(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"Add(Expression, Expression, MethodInfo)","pos":[0,39]}]},{"pos":[52673,52676],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[52740,52741],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[52812,52822],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[52883,52884]},{"pos":[52960,52970],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[53031,53032]},{"pos":[53102,53112],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[53187,53188],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[53374,53377],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[53441,53442],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[53513,53523],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[53584,53585]},{"pos":[53661,53671],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[53732,53733]},{"pos":[53803,53813],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[53888,53889],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[54323,54356],"content":"AddAssign(Expression, Expression)","needQuote":true,"nodes":[{"content":"AddAssign(Expression, Expression)","pos":[0,33]}]},{"pos":[54636,54645],"content":"AddAssign","needQuote":true,"nodes":[{"content":"AddAssign","pos":[0,9]}]},{"pos":[54715,54716],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[54787,54797],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[54858,54859]},{"pos":[54935,54945],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[55005,55006],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[55169,55178],"content":"AddAssign","needQuote":true,"nodes":[{"content":"AddAssign","pos":[0,9]}]},{"pos":[55248,55249],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[55320,55330],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[55391,55392]},{"pos":[55468,55478],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[55538,55539],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[55972,56017],"content":"AddAssign(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"AddAssign(Expression, Expression, MethodInfo)","pos":[0,45]}]},{"pos":[56356,56365],"content":"AddAssign","needQuote":true,"nodes":[{"content":"AddAssign","pos":[0,9]}]},{"pos":[56435,56436],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[56507,56517],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[56578,56579]},{"pos":[56655,56665],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[56726,56727]},{"pos":[56797,56807],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[56882,56883],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[57075,57084],"content":"AddAssign","needQuote":true,"nodes":[{"content":"AddAssign","pos":[0,9]}]},{"pos":[57154,57155],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[57226,57236],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[57297,57298]},{"pos":[57374,57384],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[57445,57446]},{"pos":[57516,57526],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[57601,57602],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[58117,58180],"content":"AddAssign(Expression, Expression, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"AddAssign(Expression, Expression, MethodInfo, LambdaExpression)","pos":[0,63]}]},{"pos":[58602,58611],"content":"AddAssign","needQuote":true,"nodes":[{"content":"AddAssign","pos":[0,9]}]},{"pos":[58681,58682],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[58753,58763],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[58824,58825]},{"pos":[58901,58911],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[58972,58973]},{"pos":[59043,59053],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[59129,59130]},{"pos":[59212,59228],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[59294,59295],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[59528,59537],"content":"AddAssign","needQuote":true,"nodes":[{"content":"AddAssign","pos":[0,9]}]},{"pos":[59607,59608],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[59679,59689],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[59750,59751]},{"pos":[59827,59837],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[59898,59899]},{"pos":[59969,59979],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[60055,60056]},{"pos":[60138,60154],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[60220,60221],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[60733,60773],"content":"AddAssignChecked(Expression, Expression)","needQuote":true,"nodes":[{"content":"AddAssignChecked(Expression, Expression)","pos":[0,40]}]},{"pos":[61067,61083],"content":"AddAssignChecked","needQuote":true,"nodes":[{"content":"AddAssignChecked","pos":[0,16]}]},{"pos":[61160,61161],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[61232,61242],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[61303,61304]},{"pos":[61380,61390],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[61450,61451],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[61621,61637],"content":"AddAssignChecked","needQuote":true,"nodes":[{"content":"AddAssignChecked","pos":[0,16]}]},{"pos":[61714,61715],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[61786,61796],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[61857,61858]},{"pos":[61934,61944],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[62004,62005],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[62459,62511],"content":"AddAssignChecked(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"AddAssignChecked(Expression, Expression, MethodInfo)","pos":[0,52]}]},{"pos":[62864,62880],"content":"AddAssignChecked","needQuote":true,"nodes":[{"content":"AddAssignChecked","pos":[0,16]}]},{"pos":[62957,62958],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[63029,63039],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[63100,63101]},{"pos":[63177,63187],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[63248,63249]},{"pos":[63319,63329],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[63404,63405],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[63604,63620],"content":"AddAssignChecked","needQuote":true,"nodes":[{"content":"AddAssignChecked","pos":[0,16]}]},{"pos":[63697,63698],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[63769,63779],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[63840,63841]},{"pos":[63917,63927],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[63988,63989]},{"pos":[64059,64069],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[64144,64145],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[64681,64751],"content":"AddAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"AddAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)","pos":[0,70]}]},{"pos":[65187,65203],"content":"AddAssignChecked","needQuote":true,"nodes":[{"content":"AddAssignChecked","pos":[0,16]}]},{"pos":[65280,65281],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[65352,65362],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[65423,65424]},{"pos":[65500,65510],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[65571,65572]},{"pos":[65642,65652],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[65728,65729]},{"pos":[65811,65827],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[65893,65894],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[66134,66150],"content":"AddAssignChecked","needQuote":true,"nodes":[{"content":"AddAssignChecked","pos":[0,16]}]},{"pos":[66227,66228],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[66299,66309],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[66370,66371]},{"pos":[66447,66457],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[66518,66519]},{"pos":[66589,66599],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[66675,66676]},{"pos":[66758,66774],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[66840,66841],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[67361,67395],"content":"AddChecked(Expression, Expression)","needQuote":true,"nodes":[{"content":"AddChecked(Expression, Expression)","pos":[0,34]}]},{"pos":[67677,67687],"content":"AddChecked","needQuote":true,"nodes":[{"content":"AddChecked","pos":[0,10]}]},{"pos":[67758,67759],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[67830,67840],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[67901,67902]},{"pos":[67978,67988],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[68048,68049],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[68213,68223],"content":"AddChecked","needQuote":true,"nodes":[{"content":"AddChecked","pos":[0,10]}]},{"pos":[68294,68295],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[68366,68376],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[68437,68438]},{"pos":[68514,68524],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[68584,68585],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[69021,69067],"content":"AddChecked(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"AddChecked(Expression, Expression, MethodInfo)","pos":[0,46]}]},{"pos":[69408,69418],"content":"AddChecked","needQuote":true,"nodes":[{"content":"AddChecked","pos":[0,10]}]},{"pos":[69489,69490],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[69561,69571],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[69632,69633]},{"pos":[69709,69719],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[69780,69781]},{"pos":[69851,69861],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[69936,69937],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[70130,70140],"content":"AddChecked","needQuote":true,"nodes":[{"content":"AddChecked","pos":[0,10]}]},{"pos":[70211,70212],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[70283,70293],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[70354,70355]},{"pos":[70431,70441],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[70502,70503]},{"pos":[70573,70583],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[70658,70659],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[71101,71128],"content":"And(Expression, Expression)","needQuote":true,"nodes":[{"content":"And(Expression, Expression)","pos":[0,27]}]},{"pos":[71396,71399],"content":"And","needQuote":true,"nodes":[{"content":"And","pos":[0,3]}]},{"pos":[71463,71464],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[71535,71545],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[71606,71607]},{"pos":[71683,71693],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[71753,71754],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[71911,71914],"content":"And","needQuote":true,"nodes":[{"content":"And","pos":[0,3]}]},{"pos":[71978,71979],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[72050,72060],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[72121,72122]},{"pos":[72198,72208],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[72268,72269],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[72684,72723],"content":"And(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"And(Expression, Expression, MethodInfo)","pos":[0,39]}]},{"pos":[73050,73053],"content":"And","needQuote":true,"nodes":[{"content":"And","pos":[0,3]}]},{"pos":[73117,73118],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[73189,73199],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[73260,73261]},{"pos":[73337,73347],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[73408,73409]},{"pos":[73479,73489],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[73564,73565],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[73751,73754],"content":"And","needQuote":true,"nodes":[{"content":"And","pos":[0,3]}]},{"pos":[73818,73819],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[73890,73900],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[73961,73962]},{"pos":[74038,74048],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[74109,74110]},{"pos":[74180,74190],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[74265,74266],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[74698,74729],"content":"AndAlso(Expression, Expression)","needQuote":true,"nodes":[{"content":"AndAlso(Expression, Expression)","pos":[0,31]}]},{"pos":[75005,75012],"content":"AndAlso","needQuote":true,"nodes":[{"content":"AndAlso","pos":[0,7]}]},{"pos":[75080,75081],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[75152,75162],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[75223,75224]},{"pos":[75300,75310],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[75370,75371],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[75532,75539],"content":"AndAlso","needQuote":true,"nodes":[{"content":"AndAlso","pos":[0,7]}]},{"pos":[75607,75608],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[75679,75689],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[75750,75751]},{"pos":[75827,75837],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[75897,75898],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[76325,76368],"content":"AndAlso(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"AndAlso(Expression, Expression, MethodInfo)","pos":[0,43]}]},{"pos":[76703,76710],"content":"AndAlso","needQuote":true,"nodes":[{"content":"AndAlso","pos":[0,7]}]},{"pos":[76778,76779],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[76850,76860],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[76921,76922]},{"pos":[76998,77008],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[77069,77070]},{"pos":[77140,77150],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[77225,77226],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[77416,77423],"content":"AndAlso","needQuote":true,"nodes":[{"content":"AndAlso","pos":[0,7]}]},{"pos":[77491,77492],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[77563,77573],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[77634,77635]},{"pos":[77711,77721],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[77782,77783]},{"pos":[77853,77863],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[77938,77939],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[78381,78414],"content":"AndAssign(Expression, Expression)","needQuote":true,"nodes":[{"content":"AndAssign(Expression, Expression)","pos":[0,33]}]},{"pos":[78694,78703],"content":"AndAssign","needQuote":true,"nodes":[{"content":"AndAssign","pos":[0,9]}]},{"pos":[78773,78774],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[78845,78855],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[78916,78917]},{"pos":[78993,79003],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[79063,79064],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[79227,79236],"content":"AndAssign","needQuote":true,"nodes":[{"content":"AndAssign","pos":[0,9]}]},{"pos":[79306,79307],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[79378,79388],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[79449,79450]},{"pos":[79526,79536],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[79596,79597],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[80030,80075],"content":"AndAssign(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"AndAssign(Expression, Expression, MethodInfo)","pos":[0,45]}]},{"pos":[80414,80423],"content":"AndAssign","needQuote":true,"nodes":[{"content":"AndAssign","pos":[0,9]}]},{"pos":[80493,80494],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[80565,80575],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[80636,80637]},{"pos":[80713,80723],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[80784,80785]},{"pos":[80855,80865],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[80940,80941],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[81133,81142],"content":"AndAssign","needQuote":true,"nodes":[{"content":"AndAssign","pos":[0,9]}]},{"pos":[81212,81213],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[81284,81294],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[81355,81356]},{"pos":[81432,81442],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[81503,81504]},{"pos":[81574,81584],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[81659,81660],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[82175,82238],"content":"AndAssign(Expression, Expression, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"AndAssign(Expression, Expression, MethodInfo, LambdaExpression)","pos":[0,63]}]},{"pos":[82660,82669],"content":"AndAssign","needQuote":true,"nodes":[{"content":"AndAssign","pos":[0,9]}]},{"pos":[82739,82740],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[82811,82821],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[82882,82883]},{"pos":[82959,82969],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[83030,83031]},{"pos":[83101,83111],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[83187,83188]},{"pos":[83270,83286],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[83352,83353],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[83586,83595],"content":"AndAssign","needQuote":true,"nodes":[{"content":"AndAssign","pos":[0,9]}]},{"pos":[83665,83666],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[83737,83747],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[83808,83809]},{"pos":[83885,83895],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[83956,83957]},{"pos":[84027,84037],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[84113,84114]},{"pos":[84196,84212],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[84278,84279],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[84825,84873],"content":"ArrayAccess(Expression, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"ArrayAccess(Expression, IEnumerable&lt;Expression&gt;)","pos":[0,48],"source":"ArrayAccess(Expression, IEnumerable<Expression>)"}]},{"pos":[85477,85488],"content":"ArrayAccess","needQuote":true,"nodes":[{"content":"ArrayAccess","pos":[0,11]}]},{"pos":[85560,85561],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[85632,85642],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[85703,85704]},{"pos":[85786,85797],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[85882,85883],"content":"<","needQuote":true,"nodes":[]},{"pos":[85954,85964],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[86056,86057],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[86262,86273],"content":"ArrayAccess","needQuote":true,"nodes":[{"content":"ArrayAccess","pos":[0,11]}]},{"pos":[86345,86346],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[86417,86427],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[86488,86489]},{"pos":[86571,86582],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[86668,86671]},{"pos":[86749,86759],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[86819,86820],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[86847,86848],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[87396,87433],"content":"ArrayAccess(Expression, Expression[])","needQuote":true,"nodes":[{"content":"ArrayAccess(Expression, Expression[])","pos":[0,37]}]},{"pos":[87906,87917],"content":"ArrayAccess","needQuote":true,"nodes":[{"content":"ArrayAccess","pos":[0,11]}]},{"pos":[87989,87990],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[88061,88071],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[88132,88133]},{"pos":[88209,88219],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[88280,88282]},{"pos":[88313,88314],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[88481,88492],"content":"ArrayAccess","needQuote":true,"nodes":[{"content":"ArrayAccess","pos":[0,11]}]},{"pos":[88564,88565],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[88636,88646],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[88707,88708]},{"pos":[88784,88794],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[88854,88856],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[88884,88885],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[89406,89453],"content":"ArrayIndex(Expression, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"ArrayIndex(Expression, IEnumerable&lt;Expression&gt;)","pos":[0,47],"source":"ArrayIndex(Expression, IEnumerable<Expression>)"}]},{"pos":[90053,90063],"content":"ArrayIndex","needQuote":true,"nodes":[{"content":"ArrayIndex","pos":[0,10]}]},{"pos":[90134,90135],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[90206,90216],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[90277,90278]},{"pos":[90360,90371],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[90456,90457],"content":"<","needQuote":true,"nodes":[]},{"pos":[90528,90538],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[90630,90631],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[90835,90845],"content":"ArrayIndex","needQuote":true,"nodes":[{"content":"ArrayIndex","pos":[0,10]}]},{"pos":[90916,90917],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[90988,90998],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[91059,91060]},{"pos":[91142,91153],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[91239,91242]},{"pos":[91320,91330],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[91390,91391],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[91418,91419],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[91961,91995],"content":"ArrayIndex(Expression, Expression)","needQuote":true,"nodes":[{"content":"ArrayIndex(Expression, Expression)","pos":[0,34]}]},{"pos":[92277,92287],"content":"ArrayIndex","needQuote":true,"nodes":[{"content":"ArrayIndex","pos":[0,10]}]},{"pos":[92358,92359],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[92430,92440],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[92501,92502]},{"pos":[92578,92588],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[92648,92649],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[92813,92823],"content":"ArrayIndex","needQuote":true,"nodes":[{"content":"ArrayIndex","pos":[0,10]}]},{"pos":[92894,92895],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[92966,92976],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[93037,93038]},{"pos":[93114,93124],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[93184,93185],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[93595,93631],"content":"ArrayIndex(Expression, Expression[])","needQuote":true,"nodes":[{"content":"ArrayIndex(Expression, Expression[])","pos":[0,36]}]},{"pos":[94100,94110],"content":"ArrayIndex","needQuote":true,"nodes":[{"content":"ArrayIndex","pos":[0,10]}]},{"pos":[94181,94182],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[94253,94263],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[94324,94325]},{"pos":[94401,94411],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[94472,94474]},{"pos":[94505,94506],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[94672,94682],"content":"ArrayIndex","needQuote":true,"nodes":[{"content":"ArrayIndex","pos":[0,10]}]},{"pos":[94753,94754],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[94825,94835],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[94896,94897]},{"pos":[94973,94983],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[95043,95045],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[95073,95074],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[95519,95542],"content":"ArrayLength(Expression)","needQuote":true,"nodes":[{"content":"ArrayLength(Expression)","pos":[0,23]}]},{"pos":[95755,95766],"content":"ArrayLength","needQuote":true,"nodes":[{"content":"ArrayLength","pos":[0,11]}]},{"pos":[95838,95839],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[95910,95920],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[95980,95981],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[96111,96122],"content":"ArrayLength","needQuote":true,"nodes":[{"content":"ArrayLength","pos":[0,11]}]},{"pos":[96194,96195],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[96266,96276],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[96336,96337],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[96696,96726],"content":"Assign(Expression, Expression)","needQuote":true,"nodes":[{"content":"Assign(Expression, Expression)","pos":[0,30]}]},{"pos":[97000,97006],"content":"Assign","needQuote":true,"nodes":[{"content":"Assign","pos":[0,6]}]},{"pos":[97073,97074],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[97145,97155],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[97216,97217]},{"pos":[97293,97303],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[97363,97364],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[97524,97530],"content":"Assign","needQuote":true,"nodes":[{"content":"Assign","pos":[0,6]}]},{"pos":[97597,97598],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[97669,97679],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[97740,97741]},{"pos":[97817,97827],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[97887,97888],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[98275,98303],"content":"Bind(MemberInfo, Expression)","needQuote":true,"nodes":[{"content":"Bind(MemberInfo, Expression)","pos":[0,28]}]},{"pos":[98561,98565],"content":"Bind","needQuote":true,"nodes":[{"content":"Bind","pos":[0,4]}]},{"pos":[98630,98631],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[98696,98706],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[98782,98783]},{"pos":[98859,98869],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[98929,98930],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[99082,99086],"content":"Bind","needQuote":true,"nodes":[{"content":"Bind","pos":[0,4]}]},{"pos":[99151,99152],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[99217,99227],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[99303,99304]},{"pos":[99380,99390],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[99450,99451],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[99828,99856],"content":"Bind(MethodInfo, Expression)","needQuote":true,"nodes":[{"content":"Bind(MethodInfo, Expression)","pos":[0,28]}]},{"pos":[100114,100118],"content":"Bind","needQuote":true,"nodes":[{"content":"Bind","pos":[0,4]}]},{"pos":[100183,100184],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[100249,100259],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[100335,100336]},{"pos":[100412,100422],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[100482,100483],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[100635,100639],"content":"Bind","needQuote":true,"nodes":[{"content":"Bind","pos":[0,4]}]},{"pos":[100704,100705],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[100770,100780],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[100856,100857]},{"pos":[100933,100943],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[101003,101004],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[101393,101423],"content":"Block(IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"Block(IEnumerable&lt;Expression&gt;)","pos":[0,30],"source":"Block(IEnumerable<Expression>)"}]},{"pos":[101884,101889],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[101955,101956],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[102033,102044],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[102129,102130],"content":"<","needQuote":true,"nodes":[]},{"pos":[102201,102211],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[102303,102304],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[102468,102473],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[102539,102540],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[102617,102628],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[102714,102717]},{"pos":[102795,102805],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[102865,102866],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[102893,102894],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[103445,103509],"content":"Block(IEnumerable<ParameterExpression>, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"Block(IEnumerable&lt;ParameterExpression&gt;, IEnumerable&lt;Expression&gt;)","pos":[0,64],"source":"Block(IEnumerable<ParameterExpression>, IEnumerable<Expression>)"}]},{"pos":[104264,104269],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[104335,104336],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[104413,104424],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[104509,104510],"content":"<","needQuote":true,"nodes":[]},{"pos":[104590,104609],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":",","pos":[104711,104712]},{"pos":[104794,104805],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[104890,104891],"content":"<","needQuote":true,"nodes":[]},{"pos":[104962,104972],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[105064,105065],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[105313,105318],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[105384,105385],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[105462,105473],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[105559,105562]},{"pos":[105649,105668],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[105737,105738],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[105766,105767]},{"pos":[105849,105860],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[105946,105949]},{"pos":[106027,106037],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[106097,106098],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[106125,106126],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[106794,106847],"content":"Block(IEnumerable<ParameterExpression>, Expression[])","needQuote":true,"nodes":[{"content":"Block(IEnumerable&lt;ParameterExpression&gt;, Expression[])","pos":[0,53],"source":"Block(IEnumerable<ParameterExpression>, Expression[])"}]},{"pos":[107471,107476],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[107542,107543],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[107620,107631],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[107716,107717],"content":"<","needQuote":true,"nodes":[]},{"pos":[107797,107816],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":",","pos":[107918,107919]},{"pos":[107995,108005],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[108066,108068]},{"pos":[108099,108100],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[108310,108315],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[108381,108382],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[108459,108470],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[108556,108559]},{"pos":[108646,108665],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[108734,108735],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[108763,108764]},{"pos":[108840,108850],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[108910,108912],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[108940,108941],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[109496,109525],"content":"Block(Expression, Expression)","needQuote":true,"nodes":[{"content":"Block(Expression, Expression)","pos":[0,29]}]},{"pos":[109797,109802],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[109868,109869],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[109940,109950],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[110011,110012]},{"pos":[110088,110098],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[110158,110159],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[110318,110323],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[110389,110390],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[110461,110471],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[110532,110533]},{"pos":[110609,110619],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[110679,110680],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[111108,111149],"content":"Block(Expression, Expression, Expression)","needQuote":true,"nodes":[{"content":"Block(Expression, Expression, Expression)","pos":[0,41]}]},{"pos":[111492,111497],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[111563,111564],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[111635,111645],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[111706,111707]},{"pos":[111783,111793],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[111854,111855]},{"pos":[111931,111941],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[112001,112002],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[112196,112201],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[112267,112268],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[112339,112349],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[112410,112411]},{"pos":[112487,112497],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[112558,112559]},{"pos":[112635,112645],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[112705,112706],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[113216,113269],"content":"Block(Expression, Expression, Expression, Expression)","needQuote":true,"nodes":[{"content":"Block(Expression, Expression, Expression, Expression)","pos":[0,53]}]},{"pos":[113683,113688],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[113754,113755],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[113826,113836],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[113897,113898]},{"pos":[113974,113984],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[114045,114046]},{"pos":[114122,114132],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[114193,114194]},{"pos":[114270,114280],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[114340,114341],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[114570,114575],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[114641,114642],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[114713,114723],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[114784,114785]},{"pos":[114861,114871],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[114932,114933]},{"pos":[115009,115019],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[115080,115081]},{"pos":[115157,115167],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[115227,115228],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[115820,115885],"content":"Block(Expression, Expression, Expression, Expression, Expression)","needQuote":true,"nodes":[{"content":"Block(Expression, Expression, Expression, Expression, Expression)","pos":[0,65]}]},{"pos":[116370,116375],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[116441,116442],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[116513,116523],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[116584,116585]},{"pos":[116661,116671],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[116732,116733]},{"pos":[116809,116819],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[116880,116881]},{"pos":[116957,116967],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[117028,117029]},{"pos":[117105,117115],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[117175,117176],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[117440,117445],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[117511,117512],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[117583,117593],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[117654,117655]},{"pos":[117731,117741],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[117802,117803]},{"pos":[117879,117889],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[117950,117951]},{"pos":[118027,118037],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[118098,118099]},{"pos":[118175,118185],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[118245,118246],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[118747,118766],"content":"Block(Expression[])","needQuote":true,"nodes":[{"content":"Block(Expression[])","pos":[0,19]}]},{"pos":[119096,119101],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[119167,119168],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[119239,119249],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[119310,119312]},{"pos":[119343,119344],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[119470,119475],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[119541,119542],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[119613,119623],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[119683,119685],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[119713,119714],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[120130,120166],"content":"Block(Type, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"Block(Type, IEnumerable&lt;Expression&gt;)","pos":[0,36],"source":"Block(Type, IEnumerable<Expression>)"}]},{"pos":[120671,120676],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[120742,120743],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[120791,120795],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[120854,120855]},{"pos":[120937,120948],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[121033,121034],"content":"<","needQuote":true,"nodes":[]},{"pos":[121105,121115],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[121207,121208],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[121384,121389],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[121455,121456],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[121504,121508],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[121567,121568]},{"pos":[121650,121661],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[121747,121750]},{"pos":[121828,121838],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[121898,121899],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[121926,121927],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[122514,122584],"content":"Block(Type, IEnumerable<ParameterExpression>, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"Block(Type, IEnumerable&lt;ParameterExpression&gt;, IEnumerable&lt;Expression&gt;)","pos":[0,70],"source":"Block(Type, IEnumerable<ParameterExpression>, IEnumerable<Expression>)"}]},{"pos":[123383,123388],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[123454,123455],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[123503,123507],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[123566,123567]},{"pos":[123649,123660],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[123745,123746],"content":"<","needQuote":true,"nodes":[]},{"pos":[123826,123845],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":",","pos":[123947,123948]},{"pos":[124030,124041],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[124126,124127],"content":"<","needQuote":true,"nodes":[]},{"pos":[124198,124208],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[124300,124301],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[124561,124566],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[124632,124633],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[124681,124685],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[124744,124745]},{"pos":[124827,124838],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[124924,124927]},{"pos":[125014,125033],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[125102,125103],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[125131,125132]},{"pos":[125214,125225],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[125311,125314]},{"pos":[125392,125402],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[125462,125463],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[125490,125491],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[126195,126254],"content":"Block(Type, IEnumerable<ParameterExpression>, Expression[])","needQuote":true,"nodes":[{"content":"Block(Type, IEnumerable&lt;ParameterExpression&gt;, Expression[])","pos":[0,59],"source":"Block(Type, IEnumerable<ParameterExpression>, Expression[])"}]},{"pos":[126922,126927],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[126993,126994],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[127042,127046],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[127105,127106]},{"pos":[127188,127199],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[127284,127285],"content":"<","needQuote":true,"nodes":[]},{"pos":[127365,127384],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":",","pos":[127486,127487]},{"pos":[127563,127573],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[127634,127636]},{"pos":[127667,127668],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[127890,127895],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[127961,127962],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[128010,128014],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[128073,128074]},{"pos":[128156,128167],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[128253,128256]},{"pos":[128343,128362],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[128431,128432],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[128460,128461]},{"pos":[128537,128547],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[128607,128609],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[128637,128638],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[129195,129220],"content":"Block(Type, Expression[])","needQuote":true,"nodes":[{"content":"Block(Type, Expression[])","pos":[0,25]}]},{"pos":[129594,129599],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[129665,129666],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[129714,129718],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[129777,129778]},{"pos":[129854,129864],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[129925,129927]},{"pos":[129958,129959],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[130097,130102],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[130168,130169],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[130217,130221],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[130280,130281]},{"pos":[130357,130367],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[130427,130429],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[130457,130458],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[130848,130866],"content":"Break(LabelTarget)","needQuote":true,"nodes":[{"content":"Break(LabelTarget)","pos":[0,18]}]},{"pos":[131069,131074],"content":"Break","needQuote":true,"nodes":[{"content":"Break","pos":[0,5]}]},{"pos":[131140,131141],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[131213,131224],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[131285,131286],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[131411,131416],"content":"Break","needQuote":true,"nodes":[{"content":"Break","pos":[0,5]}]},{"pos":[131482,131483],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[131555,131566],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[131627,131628],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[131977,132007],"content":"Break(LabelTarget, Expression)","needQuote":true,"nodes":[{"content":"Break(LabelTarget, Expression)","pos":[0,30]}]},{"pos":[132281,132286],"content":"Break","needQuote":true,"nodes":[{"content":"Break","pos":[0,5]}]},{"pos":[132352,132353],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[132425,132436],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[132498,132499]},{"pos":[132575,132585],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[132645,132646],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[132806,132811],"content":"Break","needQuote":true,"nodes":[{"content":"Break","pos":[0,5]}]},{"pos":[132877,132878],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[132950,132961],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[133023,133024]},{"pos":[133100,133110],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[133170,133171],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[133578,133614],"content":"Break(LabelTarget, Expression, Type)","needQuote":true,"nodes":[{"content":"Break(LabelTarget, Expression, Type)","pos":[0,36]}]},{"pos":[133913,133918],"content":"Break","needQuote":true,"nodes":[{"content":"Break","pos":[0,5]}]},{"pos":[133984,133985],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[134057,134068],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[134130,134131]},{"pos":[134207,134217],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[134278,134279]},{"pos":[134332,134336],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[134394,134395],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[134567,134572],"content":"Break","needQuote":true,"nodes":[{"content":"Break","pos":[0,5]}]},{"pos":[134638,134639],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[134711,134722],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[134784,134785]},{"pos":[134861,134871],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[134932,134933]},{"pos":[134986,134990],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[135048,135049],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[135439,135463],"content":"Break(LabelTarget, Type)","needQuote":true,"nodes":[{"content":"Break(LabelTarget, Type)","pos":[0,24]}]},{"pos":[135691,135696],"content":"Break","needQuote":true,"nodes":[{"content":"Break","pos":[0,5]}]},{"pos":[135762,135763],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[135835,135846],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[135908,135909]},{"pos":[135962,135966],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[136024,136025],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[136162,136167],"content":"Break","needQuote":true,"nodes":[{"content":"Break","pos":[0,5]}]},{"pos":[136233,136234],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[136306,136317],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[136379,136380]},{"pos":[136433,136437],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[136495,136496],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[136854,136882],"content":"Call(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"Call(Expression, MethodInfo)","pos":[0,28]}]},{"pos":[137140,137144],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[137209,137210],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[137281,137291],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[137352,137353]},{"pos":[137423,137433],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[137508,137509],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[137661,137665],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[137730,137731],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[137802,137812],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[137873,137874]},{"pos":[137944,137954],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[138029,138030],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[138482,138535],"content":"Call(Expression, MethodInfo, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"Call(Expression, MethodInfo, IEnumerable&lt;Expression&gt;)","pos":[0,53],"source":"Call(Expression, MethodInfo, IEnumerable<Expression>)"}]},{"pos":[139212,139216],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[139281,139282],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[139353,139363],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[139424,139425]},{"pos":[139495,139505],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[139581,139582]},{"pos":[139664,139675],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[139760,139761],"content":"<","needQuote":true,"nodes":[]},{"pos":[139832,139842],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[139934,139935],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[140162,140166],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[140231,140232],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[140303,140313],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[140374,140375]},{"pos":[140445,140455],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[140531,140532]},{"pos":[140614,140625],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[140711,140714]},{"pos":[140792,140802],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[140862,140863],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[140890,140891],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[141525,141577],"content":"Call(Expression, MethodInfo, Expression, Expression)","needQuote":true,"nodes":[{"content":"Call(Expression, MethodInfo, Expression, Expression)","pos":[0,52]}]},{"pos":[141977,141981],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[142046,142047],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[142118,142128],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[142189,142190]},{"pos":[142260,142270],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[142346,142347]},{"pos":[142423,142433],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[142494,142495]},{"pos":[142571,142581],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[142641,142642],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[142864,142868],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[142933,142934],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[143005,143015],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[143076,143077]},{"pos":[143147,143157],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[143233,143234]},{"pos":[143310,143320],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[143381,143382]},{"pos":[143458,143468],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[143528,143529],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[144105,144169],"content":"Call(Expression, MethodInfo, Expression, Expression, Expression)","needQuote":true,"nodes":[{"content":"Call(Expression, MethodInfo, Expression, Expression, Expression)","pos":[0,64]}]},{"pos":[144640,144644],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[144709,144710],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[144781,144791],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[144852,144853]},{"pos":[144923,144933],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[145009,145010]},{"pos":[145086,145096],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[145157,145158]},{"pos":[145234,145244],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[145305,145306]},{"pos":[145382,145392],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[145452,145453],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[145710,145714],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[145779,145780],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[145851,145861],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[145922,145923]},{"pos":[145993,146003],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[146079,146080]},{"pos":[146156,146166],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[146227,146228]},{"pos":[146304,146314],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[146375,146376]},{"pos":[146452,146462],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[146522,146523],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[147078,147120],"content":"Call(Expression, MethodInfo, Expression[])","needQuote":true,"nodes":[{"content":"Call(Expression, MethodInfo, Expression[])","pos":[0,42]}]},{"pos":[147666,147670],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[147735,147736],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[147807,147817],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[147878,147879]},{"pos":[147949,147959],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[148035,148036]},{"pos":[148112,148122],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[148183,148185]},{"pos":[148216,148217],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[148406,148410],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[148475,148476],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[148547,148557],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[148618,148619]},{"pos":[148689,148699],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[148775,148776]},{"pos":[148852,148862],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[148922,148924],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[148952,148953],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[149490,149536],"content":"Call(Expression, String, Type[], Expression[])","needQuote":true,"nodes":[{"content":"Call(Expression, String, Type[], Expression[])","pos":[0,46]}]},{"pos":[150085,150089],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[150154,150155],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[150226,150236],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[150297,150298]},{"pos":[150353,150359],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[150420,150421]},{"pos":[150474,150478],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[150537,150539]},{"content":",","pos":[150571,150572]},{"pos":[150648,150658],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[150719,150721]},{"pos":[150752,150753],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[150941,150945],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[151010,151011],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[151082,151092],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[151153,151154]},{"pos":[151209,151215],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[151276,151277]},{"pos":[151330,151334],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[151392,151394],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[151423,151424]},{"pos":[151500,151510],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[151570,151572],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[151600,151601],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[152149,152190],"content":"Call(MethodInfo, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"Call(MethodInfo, IEnumerable&lt;Expression&gt;)","pos":[0,41],"source":"Call(MethodInfo, IEnumerable<Expression>)"}]},{"pos":[152748,152752],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[152817,152818],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[152883,152893],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[152969,152970]},{"pos":[153052,153063],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[153148,153149],"content":"<","needQuote":true,"nodes":[]},{"pos":[153220,153230],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[153322,153323],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[153515,153519],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[153584,153585],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[153650,153660],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[153736,153737]},{"pos":[153819,153830],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[153916,153919]},{"pos":[153997,154007],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[154067,154068],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[154095,154096],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[154601,154629],"content":"Call(MethodInfo, Expression)","needQuote":true,"nodes":[{"content":"Call(MethodInfo, Expression)","pos":[0,28]}]},{"pos":[154887,154891],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[154956,154957],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[155022,155032],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[155108,155109]},{"pos":[155185,155195],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[155255,155256],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[155408,155412],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[155477,155478],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[155543,155553],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[155629,155630]},{"pos":[155706,155716],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[155776,155777],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[156189,156229],"content":"Call(MethodInfo, Expression, Expression)","needQuote":true,"nodes":[{"content":"Call(MethodInfo, Expression, Expression)","pos":[0,40]}]},{"pos":[156558,156562],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[156627,156628],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[156693,156703],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[156779,156780]},{"pos":[156856,156866],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[156927,156928]},{"pos":[157004,157014],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[157074,157075],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[157262,157266],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[157331,157332],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[157397,157407],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[157483,157484]},{"pos":[157560,157570],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[157631,157632]},{"pos":[157708,157718],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[157778,157779],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[158273,158325],"content":"Call(MethodInfo, Expression, Expression, Expression)","needQuote":true,"nodes":[{"content":"Call(MethodInfo, Expression, Expression, Expression)","pos":[0,52]}]},{"pos":[158725,158729],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[158794,158795],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[158860,158870],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[158946,158947]},{"pos":[159023,159033],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[159094,159095]},{"pos":[159171,159181],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[159242,159243]},{"pos":[159319,159329],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[159389,159390],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[159612,159616],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[159681,159682],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[159747,159757],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[159833,159834]},{"pos":[159910,159920],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[159981,159982]},{"pos":[160058,160068],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[160129,160130]},{"pos":[160206,160216],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[160276,160277],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[160853,160917],"content":"Call(MethodInfo, Expression, Expression, Expression, Expression)","needQuote":true,"nodes":[{"content":"Call(MethodInfo, Expression, Expression, Expression, Expression)","pos":[0,64]}]},{"pos":[161388,161392],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[161457,161458],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[161523,161533],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[161609,161610]},{"pos":[161686,161696],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[161757,161758]},{"pos":[161834,161844],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[161905,161906]},{"pos":[161982,161992],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[162053,162054]},{"pos":[162130,162140],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[162200,162201],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[162458,162462],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[162527,162528],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[162593,162603],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[162679,162680]},{"pos":[162756,162766],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[162827,162828]},{"pos":[162904,162914],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[162975,162976]},{"pos":[163052,163062],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[163123,163124]},{"pos":[163200,163210],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[163270,163271],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[163929,164005],"content":"Call(MethodInfo, Expression, Expression, Expression, Expression, Expression)","needQuote":true,"nodes":[{"content":"Call(MethodInfo, Expression, Expression, Expression, Expression, Expression)","pos":[0,76]}]},{"pos":[164547,164551],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[164616,164617],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[164682,164692],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[164768,164769]},{"pos":[164845,164855],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[164916,164917]},{"pos":[164993,165003],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[165064,165065]},{"pos":[165141,165151],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[165212,165213]},{"pos":[165289,165299],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[165360,165361]},{"pos":[165437,165447],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[165507,165508],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[165800,165804],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[165869,165870],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[165935,165945],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[166021,166022]},{"pos":[166098,166108],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[166169,166170]},{"pos":[166246,166256],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[166317,166318]},{"pos":[166394,166404],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[166465,166466]},{"pos":[166542,166552],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[166613,166614]},{"pos":[166690,166700],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[166760,166761],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[167328,167358],"content":"Call(MethodInfo, Expression[])","needQuote":true,"nodes":[{"content":"Call(MethodInfo, Expression[])","pos":[0,30]}]},{"pos":[167785,167789],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[167854,167855],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[167920,167930],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[168006,168007]},{"pos":[168083,168093],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[168154,168156]},{"pos":[168187,168188],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[168342,168346],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[168411,168412],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[168477,168487],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[168563,168564]},{"pos":[168640,168650],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[168710,168712],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[168740,168741],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[169196,169236],"content":"Call(Type, String, Type[], Expression[])","needQuote":true,"nodes":[{"content":"Call(Type, String, Type[], Expression[])","pos":[0,40]}]},{"pos":[169710,169714],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[169779,169780],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[169828,169832],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[169891,169892]},{"pos":[169947,169953],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[170014,170015]},{"pos":[170068,170072],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[170131,170133]},{"content":",","pos":[170165,170166]},{"pos":[170242,170252],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[170313,170315]},{"pos":[170346,170347],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[170512,170516],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[170581,170582],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[170630,170634],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[170693,170694]},{"pos":[170749,170755],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[170816,170817]},{"pos":[170870,170874],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[170932,170934],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[170963,170964]},{"pos":[171040,171050],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[171110,171112],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[171140,171141],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[171631,171669],"content":"Catch(ParameterExpression, Expression)","needQuote":true,"nodes":[{"content":"Catch(ParameterExpression, Expression)","pos":[0,38]}]},{"pos":[171959,171964],"content":"Catch","needQuote":true,"nodes":[{"content":"Catch","pos":[0,5]}]},{"pos":[172030,172031],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[172111,172130],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":",","pos":[172200,172201]},{"pos":[172277,172287],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[172347,172348],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[172516,172521],"content":"Catch","needQuote":true,"nodes":[{"content":"Catch","pos":[0,5]}]},{"pos":[172587,172588],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[172668,172687],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":",","pos":[172757,172758]},{"pos":[172834,172844],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[172904,172905],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[173360,173410],"content":"Catch(ParameterExpression, Expression, Expression)","needQuote":true,"nodes":[{"content":"Catch(ParameterExpression, Expression, Expression)","pos":[0,50]}]},{"pos":[173771,173776],"content":"Catch","needQuote":true,"nodes":[{"content":"Catch","pos":[0,5]}]},{"pos":[173842,173843],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[173923,173942],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":",","pos":[174012,174013]},{"pos":[174089,174099],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[174160,174161]},{"pos":[174237,174247],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[174307,174308],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[174511,174516],"content":"Catch","needQuote":true,"nodes":[{"content":"Catch","pos":[0,5]}]},{"pos":[174582,174583],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[174663,174682],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":",","pos":[174752,174753]},{"pos":[174829,174839],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[174900,174901]},{"pos":[174977,174987],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[175047,175048],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[175482,175505],"content":"Catch(Type, Expression)","needQuote":true,"nodes":[{"content":"Catch(Type, Expression)","pos":[0,23]}]},{"pos":[175731,175736],"content":"Catch","needQuote":true,"nodes":[{"content":"Catch","pos":[0,5]}]},{"pos":[175802,175803],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[175851,175855],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[175914,175915]},{"pos":[175991,176001],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[176061,176062],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[176198,176203],"content":"Catch","needQuote":true,"nodes":[{"content":"Catch","pos":[0,5]}]},{"pos":[176269,176270],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[176318,176322],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[176381,176382]},{"pos":[176458,176468],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[176528,176529],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[176904,176939],"content":"Catch(Type, Expression, Expression)","needQuote":true,"nodes":[{"content":"Catch(Type, Expression, Expression)","pos":[0,35]}]},{"pos":[177236,177241],"content":"Catch","needQuote":true,"nodes":[{"content":"Catch","pos":[0,5]}]},{"pos":[177307,177308],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[177356,177360],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[177419,177420]},{"pos":[177496,177506],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[177567,177568]},{"pos":[177644,177654],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[177714,177715],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[177886,177891],"content":"Catch","needQuote":true,"nodes":[{"content":"Catch","pos":[0,5]}]},{"pos":[177957,177958],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[178006,178010],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[178069,178070]},{"pos":[178146,178156],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[178217,178218]},{"pos":[178294,178304],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[178364,178365],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[178758,178792],"content":"ClearDebugInfo(SymbolDocumentInfo)","needQuote":true,"nodes":[{"content":"ClearDebugInfo(SymbolDocumentInfo)","pos":[0,34]}]},{"pos":[179027,179041],"content":"ClearDebugInfo","needQuote":true,"nodes":[{"content":"ClearDebugInfo","pos":[0,14]}]},{"pos":[179116,179117],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[179196,179214],"content":"SymbolDocumentInfo","needQuote":true,"nodes":[{"content":"SymbolDocumentInfo","pos":[0,18]}]},{"pos":[179282,179283],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[179424,179438],"content":"ClearDebugInfo","needQuote":true,"nodes":[{"content":"ClearDebugInfo","pos":[0,14]}]},{"pos":[179513,179514],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[179593,179611],"content":"SymbolDocumentInfo","needQuote":true,"nodes":[{"content":"SymbolDocumentInfo","pos":[0,18]}]},{"pos":[179679,179680],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[180063,180095],"content":"Coalesce(Expression, Expression)","needQuote":true,"nodes":[{"content":"Coalesce(Expression, Expression)","pos":[0,32]}]},{"pos":[180373,180381],"content":"Coalesce","needQuote":true,"nodes":[{"content":"Coalesce","pos":[0,8]}]},{"pos":[180450,180451],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[180522,180532],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[180593,180594]},{"pos":[180670,180680],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[180740,180741],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[180903,180911],"content":"Coalesce","needQuote":true,"nodes":[{"content":"Coalesce","pos":[0,8]}]},{"pos":[180980,180981],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[181052,181062],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[181123,181124]},{"pos":[181200,181210],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[181270,181271],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[181714,181764],"content":"Coalesce(Expression, Expression, LambdaExpression)","needQuote":true,"nodes":[{"content":"Coalesce(Expression, Expression, LambdaExpression)","pos":[0,50]}]},{"pos":[182125,182133],"content":"Coalesce","needQuote":true,"nodes":[{"content":"Coalesce","pos":[0,8]}]},{"pos":[182202,182203],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[182274,182284],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[182345,182346]},{"pos":[182422,182432],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[182493,182494]},{"pos":[182576,182592],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[182658,182659],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[182862,182870],"content":"Coalesce","needQuote":true,"nodes":[{"content":"Coalesce","pos":[0,8]}]},{"pos":[182939,182940],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[183011,183021],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[183082,183083]},{"pos":[183159,183169],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[183230,183231]},{"pos":[183313,183329],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[183395,183396],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[183893,183938],"content":"Condition(Expression, Expression, Expression)","needQuote":true,"nodes":[{"content":"Condition(Expression, Expression, Expression)","pos":[0,45]}]},{"pos":[184289,184298],"content":"Condition","needQuote":true,"nodes":[{"content":"Condition","pos":[0,9]}]},{"pos":[184368,184369],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[184440,184450],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[184511,184512]},{"pos":[184588,184598],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[184659,184660]},{"pos":[184736,184746],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[184806,184807],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[185005,185014],"content":"Condition","needQuote":true,"nodes":[{"content":"Condition","pos":[0,9]}]},{"pos":[185084,185085],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[185156,185166],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[185227,185228]},{"pos":[185304,185314],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[185375,185376]},{"pos":[185452,185462],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[185522,185523],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[186021,186072],"content":"Condition(Expression, Expression, Expression, Type)","needQuote":true,"nodes":[{"content":"Condition(Expression, Expression, Expression, Type)","pos":[0,51]}]},{"pos":[186448,186457],"content":"Condition","needQuote":true,"nodes":[{"content":"Condition","pos":[0,9]}]},{"pos":[186527,186528],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[186599,186609],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[186670,186671]},{"pos":[186747,186757],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[186818,186819]},{"pos":[186895,186905],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[186966,186967]},{"pos":[187020,187024],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[187082,187083],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[187293,187302],"content":"Condition","needQuote":true,"nodes":[{"content":"Condition","pos":[0,9]}]},{"pos":[187372,187373],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[187444,187454],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[187515,187516]},{"pos":[187592,187602],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[187663,187664]},{"pos":[187740,187750],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[187811,187812]},{"pos":[187865,187869],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[187927,187928],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[188340,188356],"content":"Constant(Object)","needQuote":true,"nodes":[{"content":"Constant(Object)","pos":[0,16]}]},{"pos":[188521,188529],"content":"Constant","needQuote":true,"nodes":[{"content":"Constant","pos":[0,8]}]},{"pos":[188598,188599],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[188649,188655],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[188715,188716],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[188822,188830],"content":"Constant","needQuote":true,"nodes":[{"content":"Constant","pos":[0,8]}]},{"pos":[188899,188900],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[188950,188956],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[189016,189017],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[189302,189324],"content":"Constant(Object, Type)","needQuote":true,"nodes":[{"content":"Constant(Object, Type)","pos":[0,22]}]},{"pos":[189514,189522],"content":"Constant","needQuote":true,"nodes":[{"content":"Constant","pos":[0,8]}]},{"pos":[189591,189592],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[189642,189648],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[189709,189710]},{"pos":[189763,189767],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[189825,189826],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[189944,189952],"content":"Constant","needQuote":true,"nodes":[{"content":"Constant","pos":[0,8]}]},{"pos":[190021,190022],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[190072,190078],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[190139,190140]},{"pos":[190193,190197],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[190255,190256],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[190570,190591],"content":"Continue(LabelTarget)","needQuote":true,"nodes":[{"content":"Continue(LabelTarget)","pos":[0,21]}]},{"pos":[190800,190808],"content":"Continue","needQuote":true,"nodes":[{"content":"Continue","pos":[0,8]}]},{"pos":[190877,190878],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[190950,190961],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[191022,191023],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[191151,191159],"content":"Continue","needQuote":true,"nodes":[{"content":"Continue","pos":[0,8]}]},{"pos":[191228,191229],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[191301,191312],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[191373,191374],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[191708,191735],"content":"Continue(LabelTarget, Type)","needQuote":true,"nodes":[{"content":"Continue(LabelTarget, Type)","pos":[0,27]}]},{"pos":[191969,191977],"content":"Continue","needQuote":true,"nodes":[{"content":"Continue","pos":[0,8]}]},{"pos":[192046,192047],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[192119,192130],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[192192,192193]},{"pos":[192246,192250],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[192308,192309],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[192449,192457],"content":"Continue","needQuote":true,"nodes":[{"content":"Continue","pos":[0,8]}]},{"pos":[192526,192527],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[192599,192610],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[192672,192673]},{"pos":[192726,192730],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[192788,192789],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[193139,193164],"content":"Convert(Expression, Type)","needQuote":true,"nodes":[{"content":"Convert(Expression, Type)","pos":[0,25]}]},{"pos":[193394,193401],"content":"Convert","needQuote":true,"nodes":[{"content":"Convert","pos":[0,7]}]},{"pos":[193469,193470],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[193541,193551],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[193612,193613]},{"pos":[193666,193670],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[193728,193729],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[193867,193874],"content":"Convert","needQuote":true,"nodes":[{"content":"Convert","pos":[0,7]}]},{"pos":[193942,193943],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[194014,194024],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[194085,194086]},{"pos":[194139,194143],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[194201,194202],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[194577,194614],"content":"Convert(Expression, Type, MethodInfo)","needQuote":true,"nodes":[{"content":"Convert(Expression, Type, MethodInfo)","pos":[0,37]}]},{"pos":[194903,194910],"content":"Convert","needQuote":true,"nodes":[{"content":"Convert","pos":[0,7]}]},{"pos":[194978,194979],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[195050,195060],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[195121,195122]},{"pos":[195175,195179],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[195238,195239]},{"pos":[195309,195319],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[195394,195395],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[195562,195569],"content":"Convert","needQuote":true,"nodes":[{"content":"Convert","pos":[0,7]}]},{"pos":[195637,195638],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[195709,195719],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[195780,195781]},{"pos":[195834,195838],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[195897,195898]},{"pos":[195968,195978],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[196053,196054],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[196448,196480],"content":"ConvertChecked(Expression, Type)","needQuote":true,"nodes":[{"content":"ConvertChecked(Expression, Type)","pos":[0,32]}]},{"pos":[196724,196738],"content":"ConvertChecked","needQuote":true,"nodes":[{"content":"ConvertChecked","pos":[0,14]}]},{"pos":[196813,196814],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[196885,196895],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[196956,196957]},{"pos":[197010,197014],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[197072,197073],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[197218,197232],"content":"ConvertChecked","needQuote":true,"nodes":[{"content":"ConvertChecked","pos":[0,14]}]},{"pos":[197307,197308],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[197379,197389],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[197450,197451]},{"pos":[197504,197508],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[197566,197567],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[197963,198007],"content":"ConvertChecked(Expression, Type, MethodInfo)","needQuote":true,"nodes":[{"content":"ConvertChecked(Expression, Type, MethodInfo)","pos":[0,44]}]},{"pos":[198310,198324],"content":"ConvertChecked","needQuote":true,"nodes":[{"content":"ConvertChecked","pos":[0,14]}]},{"pos":[198399,198400],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[198471,198481],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[198542,198543]},{"pos":[198596,198600],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[198659,198660]},{"pos":[198730,198740],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[198815,198816],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[198990,199004],"content":"ConvertChecked","needQuote":true,"nodes":[{"content":"ConvertChecked","pos":[0,14]}]},{"pos":[199079,199080],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[199151,199161],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[199222,199223]},{"pos":[199276,199280],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[199339,199340]},{"pos":[199410,199420],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[199495,199496],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[199947,200004],"content":"DebugInfo(SymbolDocumentInfo, Int32, Int32, Int32, Int32)","needQuote":true,"nodes":[{"content":"DebugInfo(SymbolDocumentInfo, Int32, Int32, Int32, Int32)","pos":[0,57]}]},{"pos":[200337,200346],"content":"DebugInfo","needQuote":true,"nodes":[{"content":"DebugInfo","pos":[0,9]}]},{"pos":[200416,200417],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[200496,200514],"content":"SymbolDocumentInfo","needQuote":true,"nodes":[{"content":"SymbolDocumentInfo","pos":[0,18]}]},{"content":",","pos":[200583,200584]},{"pos":[200638,200643],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[200703,200704]},{"pos":[200758,200763],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[200823,200824]},{"pos":[200878,200883],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[200943,200944]},{"pos":[200998,201003],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[201062,201063],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[201251,201260],"content":"DebugInfo","needQuote":true,"nodes":[{"content":"DebugInfo","pos":[0,9]}]},{"pos":[201330,201331],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[201410,201428],"content":"SymbolDocumentInfo","needQuote":true,"nodes":[{"content":"SymbolDocumentInfo","pos":[0,18]}]},{"content":",","pos":[201497,201498]},{"pos":[201552,201557],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[201617,201618]},{"pos":[201672,201677],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[201737,201738]},{"pos":[201792,201797],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[201857,201858]},{"pos":[201912,201917],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[201976,201977],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[202396,202417],"content":"Decrement(Expression)","needQuote":true,"nodes":[{"content":"Decrement(Expression)","pos":[0,21]}]},{"pos":[202626,202635],"content":"Decrement","needQuote":true,"nodes":[{"content":"Decrement","pos":[0,9]}]},{"pos":[202705,202706],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[202777,202787],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[202847,202848],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[202976,202985],"content":"Decrement","needQuote":true,"nodes":[{"content":"Decrement","pos":[0,9]}]},{"pos":[203055,203056],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[203127,203137],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[203197,203198],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[203549,203582],"content":"Decrement(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"Decrement(Expression, MethodInfo)","pos":[0,33]}]},{"pos":[203850,203859],"content":"Decrement","needQuote":true,"nodes":[{"content":"Decrement","pos":[0,9]}]},{"pos":[203929,203930],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[204001,204011],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[204072,204073]},{"pos":[204143,204153],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[204228,204229],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[204386,204395],"content":"Decrement","needQuote":true,"nodes":[{"content":"Decrement","pos":[0,9]}]},{"pos":[204465,204466],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[204537,204547],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[204608,204609]},{"pos":[204679,204689],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[204764,204765],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[205103,205116],"content":"Default(Type)","needQuote":true,"nodes":[{"content":"Default(Type)","pos":[0,13]}]},{"pos":[205275,205282],"content":"Default","needQuote":true,"nodes":[{"content":"Default","pos":[0,7]}]},{"pos":[205350,205351],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[205399,205403],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[205461,205462],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[205565,205572],"content":"Default","needQuote":true,"nodes":[{"content":"Default","pos":[0,7]}]},{"pos":[205640,205641],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[205689,205693],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[205751,205752],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[206074,206104],"content":"Divide(Expression, Expression)","needQuote":true,"nodes":[{"content":"Divide(Expression, Expression)","pos":[0,30]}]},{"pos":[206378,206384],"content":"Divide","needQuote":true,"nodes":[{"content":"Divide","pos":[0,6]}]},{"pos":[206451,206452],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[206523,206533],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[206594,206595]},{"pos":[206671,206681],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[206741,206742],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[206902,206908],"content":"Divide","needQuote":true,"nodes":[{"content":"Divide","pos":[0,6]}]},{"pos":[206975,206976],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[207047,207057],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[207118,207119]},{"pos":[207195,207205],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[207265,207266],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[207690,207732],"content":"Divide(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"Divide(Expression, Expression, MethodInfo)","pos":[0,42]}]},{"pos":[208065,208071],"content":"Divide","needQuote":true,"nodes":[{"content":"Divide","pos":[0,6]}]},{"pos":[208138,208139],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[208210,208220],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[208281,208282]},{"pos":[208358,208368],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[208429,208430]},{"pos":[208500,208510],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[208585,208586],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[208775,208781],"content":"Divide","needQuote":true,"nodes":[{"content":"Divide","pos":[0,6]}]},{"pos":[208848,208849],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[208920,208930],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[208991,208992]},{"pos":[209068,209078],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[209139,209140]},{"pos":[209210,209220],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[209295,209296],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[209739,209775],"content":"DivideAssign(Expression, Expression)","needQuote":true,"nodes":[{"content":"DivideAssign(Expression, Expression)","pos":[0,36]}]},{"pos":[210061,210073],"content":"DivideAssign","needQuote":true,"nodes":[{"content":"DivideAssign","pos":[0,12]}]},{"pos":[210146,210147],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[210218,210228],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[210289,210290]},{"pos":[210366,210376],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[210436,210437],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[210603,210615],"content":"DivideAssign","needQuote":true,"nodes":[{"content":"DivideAssign","pos":[0,12]}]},{"pos":[210688,210689],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[210760,210770],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[210831,210832]},{"pos":[210908,210918],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[210978,210979],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[211421,211469],"content":"DivideAssign(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"DivideAssign(Expression, Expression, MethodInfo)","pos":[0,48]}]},{"pos":[211814,211826],"content":"DivideAssign","needQuote":true,"nodes":[{"content":"DivideAssign","pos":[0,12]}]},{"pos":[211899,211900],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[211971,211981],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[212042,212043]},{"pos":[212119,212129],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[212190,212191]},{"pos":[212261,212271],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[212346,212347],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[212542,212554],"content":"DivideAssign","needQuote":true,"nodes":[{"content":"DivideAssign","pos":[0,12]}]},{"pos":[212627,212628],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[212699,212709],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[212770,212771]},{"pos":[212847,212857],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[212918,212919]},{"pos":[212989,212999],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[213074,213075],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[213599,213665],"content":"DivideAssign(Expression, Expression, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"DivideAssign(Expression, Expression, MethodInfo, LambdaExpression)","pos":[0,66]}]},{"pos":[214093,214105],"content":"DivideAssign","needQuote":true,"nodes":[{"content":"DivideAssign","pos":[0,12]}]},{"pos":[214178,214179],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[214250,214260],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[214321,214322]},{"pos":[214398,214408],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[214469,214470]},{"pos":[214540,214550],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[214626,214627]},{"pos":[214709,214725],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[214791,214792],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[215028,215040],"content":"DivideAssign","needQuote":true,"nodes":[{"content":"DivideAssign","pos":[0,12]}]},{"pos":[215113,215114],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[215185,215195],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[215256,215257]},{"pos":[215333,215343],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[215404,215405]},{"pos":[215475,215485],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[215561,215562]},{"pos":[215644,215660],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[215726,215727],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[216273,216321],"content":"ElementInit(MethodInfo, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"ElementInit(MethodInfo, IEnumerable&lt;Expression&gt;)","pos":[0,48],"source":"ElementInit(MethodInfo, IEnumerable<Expression>)"}]},{"pos":[216907,216918],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"pos":[216990,216991],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[217056,217066],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[217142,217143]},{"pos":[217225,217236],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[217321,217322],"content":"<","needQuote":true,"nodes":[]},{"pos":[217393,217403],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[217495,217496],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[217695,217706],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"pos":[217778,217779],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[217844,217854],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[217930,217931]},{"pos":[218013,218024],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[218110,218113]},{"pos":[218191,218201],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[218261,218262],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[218289,218290],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[218825,218862],"content":"ElementInit(MethodInfo, Expression[])","needQuote":true,"nodes":[{"content":"ElementInit(MethodInfo, Expression[])","pos":[0,37]}]},{"pos":[219317,219328],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"pos":[219400,219401],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[219466,219476],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[219552,219553]},{"pos":[219629,219639],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[219700,219702]},{"pos":[219733,219734],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[219895,219906],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"pos":[219978,219979],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[220044,220054],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[220130,220131]},{"pos":[220207,220217],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[220277,220279],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[220307,220308],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[220708,220715],"content":"Empty()","needQuote":true,"nodes":[{"content":"Empty()","pos":[0,7]}]},{"pos":[220846,220851],"content":"Empty","needQuote":true,"nodes":[{"content":"Empty","pos":[0,5]}]},{"pos":[220917,220918],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[220945,220946],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[221034,221039],"content":"Empty","needQuote":true,"nodes":[{"content":"Empty","pos":[0,5]}]},{"pos":[221105,221106],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[221133,221134],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[221434,221463],"content":"Equal(Expression, Expression)","needQuote":true,"nodes":[{"content":"Equal(Expression, Expression)","pos":[0,29]}]},{"pos":[221735,221740],"content":"Equal","needQuote":true,"nodes":[{"content":"Equal","pos":[0,5]}]},{"pos":[221806,221807],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[221878,221888],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[221949,221950]},{"pos":[222026,222036],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[222096,222097],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[222256,222261],"content":"Equal","needQuote":true,"nodes":[{"content":"Equal","pos":[0,5]}]},{"pos":[222327,222328],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[222399,222409],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[222470,222471]},{"pos":[222547,222557],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[222617,222618],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[223054,223104],"content":"Equal(Expression, Expression, Boolean, MethodInfo)","needQuote":true,"nodes":[{"content":"Equal(Expression, Expression, Boolean, MethodInfo)","pos":[0,50]}]},{"pos":[223466,223471],"content":"Equal","needQuote":true,"nodes":[{"content":"Equal","pos":[0,5]}]},{"pos":[223537,223538],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[223609,223619],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[223680,223681]},{"pos":[223757,223767],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[223828,223829]},{"pos":[223885,223892],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[223954,223955]},{"pos":[224025,224035],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[224110,224111],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[224314,224319],"content":"Equal","needQuote":true,"nodes":[{"content":"Equal","pos":[0,5]}]},{"pos":[224385,224386],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[224457,224467],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[224528,224529]},{"pos":[224605,224615],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[224676,224677]},{"pos":[224733,224740],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[224802,224803]},{"pos":[224873,224883],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[224958,224959],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[225423,225458],"content":"ExclusiveOr(Expression, Expression)","needQuote":true,"nodes":[{"content":"ExclusiveOr(Expression, Expression)","pos":[0,35]}]},{"pos":[225742,225753],"content":"ExclusiveOr","needQuote":true,"nodes":[{"content":"ExclusiveOr","pos":[0,11]}]},{"pos":[225825,225826],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[225897,225907],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[225968,225969]},{"pos":[226045,226055],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[226115,226116],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[226281,226292],"content":"ExclusiveOr","needQuote":true,"nodes":[{"content":"ExclusiveOr","pos":[0,11]}]},{"pos":[226364,226365],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[226436,226446],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[226507,226508]},{"pos":[226584,226594],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[226654,226655],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[227094,227141],"content":"ExclusiveOr(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"ExclusiveOr(Expression, Expression, MethodInfo)","pos":[0,47]}]},{"pos":[227484,227495],"content":"ExclusiveOr","needQuote":true,"nodes":[{"content":"ExclusiveOr","pos":[0,11]}]},{"pos":[227567,227568],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[227639,227649],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[227710,227711]},{"pos":[227787,227797],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[227858,227859]},{"pos":[227929,227939],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[228014,228015],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[228209,228220],"content":"ExclusiveOr","needQuote":true,"nodes":[{"content":"ExclusiveOr","pos":[0,11]}]},{"pos":[228292,228293],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[228364,228374],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[228435,228436]},{"pos":[228512,228522],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[228583,228584]},{"pos":[228654,228664],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[228739,228740],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[229198,229239],"content":"ExclusiveOrAssign(Expression, Expression)","needQuote":true,"nodes":[{"content":"ExclusiveOrAssign(Expression, Expression)","pos":[0,41]}]},{"pos":[229535,229552],"content":"ExclusiveOrAssign","needQuote":true,"nodes":[{"content":"ExclusiveOrAssign","pos":[0,17]}]},{"pos":[229630,229631],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[229702,229712],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[229773,229774]},{"pos":[229850,229860],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[229920,229921],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[230092,230109],"content":"ExclusiveOrAssign","needQuote":true,"nodes":[{"content":"ExclusiveOrAssign","pos":[0,17]}]},{"pos":[230187,230188],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[230259,230269],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[230330,230331]},{"pos":[230407,230417],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[230477,230478],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[230935,230988],"content":"ExclusiveOrAssign(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"ExclusiveOrAssign(Expression, Expression, MethodInfo)","pos":[0,53]}]},{"pos":[231343,231360],"content":"ExclusiveOrAssign","needQuote":true,"nodes":[{"content":"ExclusiveOrAssign","pos":[0,17]}]},{"pos":[231438,231439],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[231510,231520],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[231581,231582]},{"pos":[231658,231668],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[231729,231730]},{"pos":[231800,231810],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[231885,231886],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[232086,232103],"content":"ExclusiveOrAssign","needQuote":true,"nodes":[{"content":"ExclusiveOrAssign","pos":[0,17]}]},{"pos":[232181,232182],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[232253,232263],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[232324,232325]},{"pos":[232401,232411],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[232472,232473]},{"pos":[232543,232553],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[232628,232629],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[233168,233239],"content":"ExclusiveOrAssign(Expression, Expression, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"ExclusiveOrAssign(Expression, Expression, MethodInfo, LambdaExpression)","pos":[0,71]}]},{"pos":[233677,233694],"content":"ExclusiveOrAssign","needQuote":true,"nodes":[{"content":"ExclusiveOrAssign","pos":[0,17]}]},{"pos":[233772,233773],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[233844,233854],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[233915,233916]},{"pos":[233992,234002],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[234063,234064]},{"pos":[234134,234144],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[234220,234221]},{"pos":[234303,234319],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[234385,234386],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[234627,234644],"content":"ExclusiveOrAssign","needQuote":true,"nodes":[{"content":"ExclusiveOrAssign","pos":[0,17]}]},{"pos":[234722,234723],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[234794,234804],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[234865,234866]},{"pos":[234942,234952],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[235013,235014]},{"pos":[235084,235094],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[235170,235171]},{"pos":[235253,235269],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[235335,235336],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[235845,235873],"content":"Field(Expression, FieldInfo)","needQuote":true,"nodes":[{"content":"Field(Expression, FieldInfo)","pos":[0,28]}]},{"pos":[236131,236136],"content":"Field","needQuote":true,"nodes":[{"content":"Field","pos":[0,5]}]},{"pos":[236202,236203],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[236274,236284],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[236345,236346]},{"pos":[236415,236424],"content":"FieldInfo","needQuote":true,"nodes":[{"content":"FieldInfo","pos":[0,9]}]},{"pos":[236498,236499],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[236651,236656],"content":"Field","needQuote":true,"nodes":[{"content":"Field","pos":[0,5]}]},{"pos":[236722,236723],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[236794,236804],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[236865,236866]},{"pos":[236935,236944],"content":"FieldInfo","needQuote":true,"nodes":[{"content":"FieldInfo","pos":[0,9]}]},{"pos":[237018,237019],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[237382,237407],"content":"Field(Expression, String)","needQuote":true,"nodes":[{"content":"Field(Expression, String)","pos":[0,25]}]},{"pos":[237637,237642],"content":"Field","needQuote":true,"nodes":[{"content":"Field","pos":[0,5]}]},{"pos":[237708,237709],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[237780,237790],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[237851,237852]},{"pos":[237907,237913],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[237973,237974],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[238112,238117],"content":"Field","needQuote":true,"nodes":[{"content":"Field","pos":[0,5]}]},{"pos":[238183,238184],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[238255,238265],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[238326,238327]},{"pos":[238382,238388],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[238448,238449],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[238807,238838],"content":"Field(Expression, Type, String)","needQuote":true,"nodes":[{"content":"Field(Expression, Type, String)","pos":[0,31]}]},{"pos":[239093,239098],"content":"Field","needQuote":true,"nodes":[{"content":"Field","pos":[0,5]}]},{"pos":[239164,239165],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[239236,239246],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[239307,239308]},{"pos":[239361,239365],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[239424,239425]},{"pos":[239480,239486],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[239546,239547],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[239697,239702],"content":"Field","needQuote":true,"nodes":[{"content":"Field","pos":[0,5]}]},{"pos":[239768,239769],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[239840,239850],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[239911,239912]},{"pos":[239965,239969],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[240028,240029]},{"pos":[240084,240090],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[240150,240151],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[240488,240509],"content":"GetActionType(Type[])","needQuote":true,"nodes":[{"content":"GetActionType(Type[])","pos":[0,21]}]},{"pos":[240796,240809],"content":"GetActionType","needQuote":true,"nodes":[{"content":"GetActionType","pos":[0,13]}]},{"pos":[240883,240884],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[240932,240936],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[240995,240997]},{"pos":[241028,241029],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[241140,241153],"content":"GetActionType","needQuote":true,"nodes":[{"content":"GetActionType","pos":[0,13]}]},{"pos":[241227,241228],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[241276,241280],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[241338,241340],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[241368,241369],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[241711,241734],"content":"GetDelegateType(Type[])","needQuote":true,"nodes":[{"content":"GetDelegateType(Type[])","pos":[0,23]}]},{"pos":[242029,242044],"content":"GetDelegateType","needQuote":true,"nodes":[{"content":"GetDelegateType","pos":[0,15]}]},{"pos":[242120,242121],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[242169,242173],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[242232,242234]},{"pos":[242265,242266],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[242379,242394],"content":"GetDelegateType","needQuote":true,"nodes":[{"content":"GetDelegateType","pos":[0,15]}]},{"pos":[242470,242471],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[242519,242523],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[242581,242583],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[242611,242612],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[242956,242975],"content":"GetFuncType(Type[])","needQuote":true,"nodes":[{"content":"GetFuncType(Type[])","pos":[0,19]}]},{"pos":[243254,243265],"content":"GetFuncType","needQuote":true,"nodes":[{"content":"GetFuncType","pos":[0,11]}]},{"pos":[243337,243338],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[243386,243390],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[243449,243451]},{"pos":[243482,243483],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[243592,243603],"content":"GetFuncType","needQuote":true,"nodes":[{"content":"GetFuncType","pos":[0,11]}]},{"pos":[243675,243676],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[243724,243728],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[243786,243788],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[243816,243817],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[244165,244182],"content":"Goto(LabelTarget)","needQuote":true,"nodes":[{"content":"Goto(LabelTarget)","pos":[0,17]}]},{"pos":[244383,244387],"content":"Goto","needQuote":true,"nodes":[{"content":"Goto","pos":[0,4]}]},{"pos":[244452,244453],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[244525,244536],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[244597,244598],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[244722,244726],"content":"Goto","needQuote":true,"nodes":[{"content":"Goto","pos":[0,4]}]},{"pos":[244791,244792],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[244864,244875],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[244936,244937],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[245283,245312],"content":"Goto(LabelTarget, Expression)","needQuote":true,"nodes":[{"content":"Goto(LabelTarget, Expression)","pos":[0,29]}]},{"pos":[245584,245588],"content":"Goto","needQuote":true,"nodes":[{"content":"Goto","pos":[0,4]}]},{"pos":[245653,245654],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[245726,245737],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[245799,245800]},{"pos":[245876,245886],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[245946,245947],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[246106,246110],"content":"Goto","needQuote":true,"nodes":[{"content":"Goto","pos":[0,4]}]},{"pos":[246175,246176],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[246248,246259],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[246321,246322]},{"pos":[246398,246408],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[246468,246469],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[246873,246908],"content":"Goto(LabelTarget, Expression, Type)","needQuote":true,"nodes":[{"content":"Goto(LabelTarget, Expression, Type)","pos":[0,35]}]},{"pos":[247205,247209],"content":"Goto","needQuote":true,"nodes":[{"content":"Goto","pos":[0,4]}]},{"pos":[247274,247275],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[247347,247358],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[247420,247421]},{"pos":[247497,247507],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[247568,247569]},{"pos":[247622,247626],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[247684,247685],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[247856,247860],"content":"Goto","needQuote":true,"nodes":[{"content":"Goto","pos":[0,4]}]},{"pos":[247925,247926],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[247998,248009],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[248071,248072]},{"pos":[248148,248158],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[248219,248220]},{"pos":[248273,248277],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[248335,248336],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[248723,248746],"content":"Goto(LabelTarget, Type)","needQuote":true,"nodes":[{"content":"Goto(LabelTarget, Type)","pos":[0,23]}]},{"pos":[248972,248976],"content":"Goto","needQuote":true,"nodes":[{"content":"Goto","pos":[0,4]}]},{"pos":[249041,249042],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[249114,249125],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[249187,249188]},{"pos":[249241,249245],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[249303,249304],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[249440,249444],"content":"Goto","needQuote":true,"nodes":[{"content":"Goto","pos":[0,4]}]},{"pos":[249509,249510],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[249582,249593],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[249655,249656]},{"pos":[249709,249713],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[249771,249772],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[250142,250177],"content":"GreaterThan(Expression, Expression)","needQuote":true,"nodes":[{"content":"GreaterThan(Expression, Expression)","pos":[0,35]}]},{"pos":[250461,250472],"content":"GreaterThan","needQuote":true,"nodes":[{"content":"GreaterThan","pos":[0,11]}]},{"pos":[250544,250545],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[250616,250626],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[250687,250688]},{"pos":[250764,250774],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[250834,250835],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[251000,251011],"content":"GreaterThan","needQuote":true,"nodes":[{"content":"GreaterThan","pos":[0,11]}]},{"pos":[251083,251084],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[251155,251165],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[251226,251227]},{"pos":[251303,251313],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[251373,251374],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[251828,251884],"content":"GreaterThan(Expression, Expression, Boolean, MethodInfo)","needQuote":true,"nodes":[{"content":"GreaterThan(Expression, Expression, Boolean, MethodInfo)","pos":[0,56]}]},{"pos":[252258,252269],"content":"GreaterThan","needQuote":true,"nodes":[{"content":"GreaterThan","pos":[0,11]}]},{"pos":[252341,252342],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[252413,252423],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[252484,252485]},{"pos":[252561,252571],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[252632,252633]},{"pos":[252689,252696],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[252758,252759]},{"pos":[252829,252839],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[252914,252915],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[253124,253135],"content":"GreaterThan","needQuote":true,"nodes":[{"content":"GreaterThan","pos":[0,11]}]},{"pos":[253207,253208],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[253279,253289],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[253350,253351]},{"pos":[253427,253437],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[253498,253499]},{"pos":[253555,253562],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[253624,253625]},{"pos":[253695,253705],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[253780,253781],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[254264,254306],"content":"GreaterThanOrEqual(Expression, Expression)","needQuote":true,"nodes":[{"content":"GreaterThanOrEqual(Expression, Expression)","pos":[0,42]}]},{"pos":[254604,254622],"content":"GreaterThanOrEqual","needQuote":true,"nodes":[{"content":"GreaterThanOrEqual","pos":[0,18]}]},{"pos":[254701,254702],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[254773,254783],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[254844,254845]},{"pos":[254921,254931],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[254991,254992],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[255164,255182],"content":"GreaterThanOrEqual","needQuote":true,"nodes":[{"content":"GreaterThanOrEqual","pos":[0,18]}]},{"pos":[255261,255262],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[255333,255343],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[255404,255405]},{"pos":[255481,255491],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[255551,255552],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[256027,256090],"content":"GreaterThanOrEqual(Expression, Expression, Boolean, MethodInfo)","needQuote":true,"nodes":[{"content":"GreaterThanOrEqual(Expression, Expression, Boolean, MethodInfo)","pos":[0,63]}]},{"pos":[256478,256496],"content":"GreaterThanOrEqual","needQuote":true,"nodes":[{"content":"GreaterThanOrEqual","pos":[0,18]}]},{"pos":[256575,256576],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[256647,256657],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[256718,256719]},{"pos":[256795,256805],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[256866,256867]},{"pos":[256923,256930],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[256992,256993]},{"pos":[257063,257073],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[257148,257149],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[257365,257383],"content":"GreaterThanOrEqual","needQuote":true,"nodes":[{"content":"GreaterThanOrEqual","pos":[0,18]}]},{"pos":[257462,257463],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[257534,257544],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[257605,257606]},{"pos":[257682,257692],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[257753,257754]},{"pos":[257810,257817],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[257879,257880]},{"pos":[257950,257960],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[258035,258036],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[258521,258551],"content":"IfThen(Expression, Expression)","needQuote":true,"nodes":[{"content":"IfThen(Expression, Expression)","pos":[0,30]}]},{"pos":[258825,258831],"content":"IfThen","needQuote":true,"nodes":[{"content":"IfThen","pos":[0,6]}]},{"pos":[258898,258899],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[258970,258980],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[259041,259042]},{"pos":[259118,259128],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[259188,259189],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[259349,259355],"content":"IfThen","needQuote":true,"nodes":[{"content":"IfThen","pos":[0,6]}]},{"pos":[259422,259423],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[259494,259504],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[259565,259566]},{"pos":[259642,259652],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[259712,259713],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[260148,260194],"content":"IfThenElse(Expression, Expression, Expression)","needQuote":true,"nodes":[{"content":"IfThenElse(Expression, Expression, Expression)","pos":[0,46]}]},{"pos":[260547,260557],"content":"IfThenElse","needQuote":true,"nodes":[{"content":"IfThenElse","pos":[0,10]}]},{"pos":[260628,260629],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[260700,260710],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[260771,260772]},{"pos":[260848,260858],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[260919,260920]},{"pos":[260996,261006],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[261066,261067],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[261266,261276],"content":"IfThenElse","needQuote":true,"nodes":[{"content":"IfThenElse","pos":[0,10]}]},{"pos":[261347,261348],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[261419,261429],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[261490,261491]},{"pos":[261567,261577],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[261638,261639]},{"pos":[261715,261725],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[261785,261786],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[262205,262226],"content":"Increment(Expression)","needQuote":true,"nodes":[{"content":"Increment(Expression)","pos":[0,21]}]},{"pos":[262435,262444],"content":"Increment","needQuote":true,"nodes":[{"content":"Increment","pos":[0,9]}]},{"pos":[262514,262515],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[262586,262596],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[262656,262657],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[262785,262794],"content":"Increment","needQuote":true,"nodes":[{"content":"Increment","pos":[0,9]}]},{"pos":[262864,262865],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[262936,262946],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[263006,263007],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[263358,263391],"content":"Increment(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"Increment(Expression, MethodInfo)","pos":[0,33]}]},{"pos":[263659,263668],"content":"Increment","needQuote":true,"nodes":[{"content":"Increment","pos":[0,9]}]},{"pos":[263738,263739],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[263810,263820],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[263881,263882]},{"pos":[263952,263962],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[264037,264038],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[264195,264204],"content":"Increment","needQuote":true,"nodes":[{"content":"Increment","pos":[0,9]}]},{"pos":[264274,264275],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[264346,264356],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[264417,264418]},{"pos":[264488,264498],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[264573,264574],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[265009,265052],"content":"Invoke(Expression, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"Invoke(Expression, IEnumerable&lt;Expression&gt;)","pos":[0,43],"source":"Invoke(Expression, IEnumerable<Expression>)"}]},{"pos":[265636,265642],"content":"Invoke","needQuote":true,"nodes":[{"content":"Invoke","pos":[0,6]}]},{"pos":[265709,265710],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[265781,265791],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[265852,265853]},{"pos":[265935,265946],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[266031,266032],"content":"<","needQuote":true,"nodes":[]},{"pos":[266103,266113],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[266205,266206],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[266406,266412],"content":"Invoke","needQuote":true,"nodes":[{"content":"Invoke","pos":[0,6]}]},{"pos":[266479,266480],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[266551,266561],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[266622,266623]},{"pos":[266705,266716],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[266802,266805]},{"pos":[266883,266893],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[266953,266954],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[266981,266982],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[267510,267542],"content":"Invoke(Expression, Expression[])","needQuote":true,"nodes":[{"content":"Invoke(Expression, Expression[])","pos":[0,32]}]},{"pos":[267995,268001],"content":"Invoke","needQuote":true,"nodes":[{"content":"Invoke","pos":[0,6]}]},{"pos":[268068,268069],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[268140,268150],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[268211,268212]},{"pos":[268288,268298],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[268359,268361]},{"pos":[268392,268393],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[268555,268561],"content":"Invoke","needQuote":true,"nodes":[{"content":"Invoke","pos":[0,6]}]},{"pos":[268628,268629],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[268700,268710],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[268771,268772]},{"pos":[268848,268858],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[268918,268920],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[268948,268949],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[269378,269397],"content":"IsFalse(Expression)","needQuote":true,"nodes":[{"content":"IsFalse(Expression)","pos":[0,19]}]},{"pos":[269602,269609],"content":"IsFalse","needQuote":true,"nodes":[{"content":"IsFalse","pos":[0,7]}]},{"pos":[269677,269678],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[269749,269759],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[269819,269820],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[269946,269953],"content":"IsFalse","needQuote":true,"nodes":[{"content":"IsFalse","pos":[0,7]}]},{"pos":[270021,270022],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[270093,270103],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[270163,270164],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[270509,270540],"content":"IsFalse(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"IsFalse(Expression, MethodInfo)","pos":[0,31]}]},{"pos":[270804,270811],"content":"IsFalse","needQuote":true,"nodes":[{"content":"IsFalse","pos":[0,7]}]},{"pos":[270879,270880],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[270951,270961],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[271022,271023]},{"pos":[271093,271103],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[271178,271179],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[271334,271341],"content":"IsFalse","needQuote":true,"nodes":[{"content":"IsFalse","pos":[0,7]}]},{"pos":[271409,271410],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[271481,271491],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[271552,271553]},{"pos":[271623,271633],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[271708,271709],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[272066,272084],"content":"IsTrue(Expression)","needQuote":true,"nodes":[{"content":"IsTrue(Expression)","pos":[0,18]}]},{"pos":[272287,272293],"content":"IsTrue","needQuote":true,"nodes":[{"content":"IsTrue","pos":[0,6]}]},{"pos":[272360,272361],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[272432,272442],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[272502,272503],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[272628,272634],"content":"IsTrue","needQuote":true,"nodes":[{"content":"IsTrue","pos":[0,6]}]},{"pos":[272701,272702],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[272773,272783],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[272843,272844],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[273186,273216],"content":"IsTrue(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"IsTrue(Expression, MethodInfo)","pos":[0,30]}]},{"pos":[273478,273484],"content":"IsTrue","needQuote":true,"nodes":[{"content":"IsTrue","pos":[0,6]}]},{"pos":[273551,273552],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[273623,273633],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[273694,273695]},{"pos":[273765,273775],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[273850,273851],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[274005,274011],"content":"IsTrue","needQuote":true,"nodes":[{"content":"IsTrue","pos":[0,6]}]},{"pos":[274078,274079],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[274150,274160],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[274221,274222]},{"pos":[274292,274302],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[274377,274378],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[274696,274703],"content":"Label()","needQuote":true,"nodes":[{"content":"Label()","pos":[0,7]}]},{"pos":[274834,274839],"content":"Label","needQuote":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[274905,274906],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[274933,274934],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[275022,275027],"content":"Label","needQuote":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[275093,275094],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[275121,275122],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[275388,275406],"content":"Label(LabelTarget)","needQuote":true,"nodes":[{"content":"Label(LabelTarget)","pos":[0,18]}]},{"pos":[275609,275614],"content":"Label","needQuote":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[275680,275681],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[275753,275764],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[275825,275826],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[275951,275956],"content":"Label","needQuote":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[276022,276023],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[276095,276106],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[276167,276168],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[276517,276547],"content":"Label(LabelTarget, Expression)","needQuote":true,"nodes":[{"content":"Label(LabelTarget, Expression)","pos":[0,30]}]},{"pos":[276821,276826],"content":"Label","needQuote":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[276892,276893],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[276965,276976],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[277038,277039]},{"pos":[277115,277125],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[277185,277186],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[277346,277351],"content":"Label","needQuote":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[277417,277418],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[277490,277501],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[277563,277564]},{"pos":[277640,277650],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[277710,277711],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[278049,278062],"content":"Label(String)","needQuote":true,"nodes":[{"content":"Label(String)","pos":[0,13]}]},{"pos":[278221,278226],"content":"Label","needQuote":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[278292,278293],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[278343,278349],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[278409,278410],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[278513,278518],"content":"Label","needQuote":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[278584,278585],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[278635,278641],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[278701,278702],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[278964,278975],"content":"Label(Type)","needQuote":true,"nodes":[{"content":"Label(Type)","pos":[0,11]}]},{"pos":[279130,279135],"content":"Label","needQuote":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[279201,279202],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[279250,279254],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[279312,279313],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[279414,279419],"content":"Label","needQuote":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[279485,279486],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[279534,279538],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[279596,279597],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[279869,279888],"content":"Label(Type, String)","needQuote":true,"nodes":[{"content":"Label(Type, String)","pos":[0,19]}]},{"pos":[280072,280077],"content":"Label","needQuote":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[280143,280144],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[280192,280196],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[280255,280256]},{"pos":[280311,280317],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[280377,280378],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[280493,280498],"content":"Label","needQuote":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[280564,280565],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[280613,280617],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[280676,280677]},{"pos":[280732,280738],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[280798,280799],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[281202,281263],"content":"Lambda(Expression, Boolean, IEnumerable<ParameterExpression>)","needQuote":true,"nodes":[{"content":"Lambda(Expression, Boolean, IEnumerable&lt;ParameterExpression&gt;)","pos":[0,61],"source":"Lambda(Expression, Boolean, IEnumerable<ParameterExpression>)"}]},{"pos":[281939,281945],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[282012,282013],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[282084,282094],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[282155,282156]},{"pos":[282212,282219],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[282281,282282]},{"pos":[282364,282375],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[282460,282461],"content":"<","needQuote":true,"nodes":[]},{"pos":[282541,282560],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[282661,282662],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[282886,282892],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[282959,282960],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[283031,283041],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[283102,283103]},{"pos":[283159,283166],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[283228,283229]},{"pos":[283311,283322],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[283408,283411]},{"pos":[283498,283517],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[283586,283587],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[283614,283615],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[284226,284276],"content":"Lambda(Expression, Boolean, ParameterExpression[])","needQuote":true,"nodes":[{"content":"Lambda(Expression, Boolean, ParameterExpression[])","pos":[0,50]}]},{"pos":[284821,284827],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[284894,284895],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[284966,284976],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[285037,285038]},{"pos":[285094,285101],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[285163,285164]},{"pos":[285249,285268],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":"[]","pos":[285338,285340]},{"pos":[285371,285372],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[285558,285564],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[285631,285632],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[285703,285713],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[285774,285775]},{"pos":[285831,285838],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[285900,285901]},{"pos":[285986,286005],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[286074,286076],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[286104,286105],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[286676,286728],"content":"Lambda(Expression, IEnumerable<ParameterExpression>)","needQuote":true,"nodes":[{"content":"Lambda(Expression, IEnumerable&lt;ParameterExpression&gt;)","pos":[0,52],"source":"Lambda(Expression, IEnumerable<ParameterExpression>)"}]},{"pos":[287348,287354],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[287421,287422],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[287493,287503],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[287564,287565]},{"pos":[287647,287658],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[287743,287744],"content":"<","needQuote":true,"nodes":[]},{"pos":[287824,287843],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[287944,287945],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[288154,288160],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[288227,288228],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[288299,288309],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[288370,288371]},{"pos":[288453,288464],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[288550,288553]},{"pos":[288640,288659],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[288728,288729],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[288756,288757],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[289321,289362],"content":"Lambda(Expression, ParameterExpression[])","needQuote":true,"nodes":[{"content":"Lambda(Expression, ParameterExpression[])","pos":[0,41]}]},{"pos":[289851,289857],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[289924,289925],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[289996,290006],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[290067,290068]},{"pos":[290153,290172],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":"[]","pos":[290242,290244]},{"pos":[290275,290276],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[290447,290453],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[290520,290521],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[290592,290602],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[290663,290664]},{"pos":[290749,290768],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[290837,290839],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[290867,290868],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[291435,291504],"content":"Lambda(Expression, String, Boolean, IEnumerable<ParameterExpression>)","needQuote":true,"nodes":[{"content":"Lambda(Expression, String, Boolean, IEnumerable&lt;ParameterExpression&gt;)","pos":[0,69],"source":"Lambda(Expression, String, Boolean, IEnumerable<ParameterExpression>)"}]},{"pos":[292232,292238],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[292305,292306],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[292377,292387],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[292448,292449]},{"pos":[292504,292510],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[292571,292572]},{"pos":[292628,292635],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[292697,292698]},{"pos":[292780,292791],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[292876,292877],"content":"<","needQuote":true,"nodes":[]},{"pos":[292957,292976],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[293077,293078],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[293316,293322],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[293389,293390],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[293461,293471],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[293532,293533]},{"pos":[293588,293594],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[293655,293656]},{"pos":[293712,293719],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[293781,293782]},{"pos":[293864,293875],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[293961,293964]},{"pos":[294051,294070],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[294139,294140],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[294167,294168],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[294846,294906],"content":"Lambda(Expression, String, IEnumerable<ParameterExpression>)","needQuote":true,"nodes":[{"content":"Lambda(Expression, String, IEnumerable&lt;ParameterExpression&gt;)","pos":[0,60],"source":"Lambda(Expression, String, IEnumerable<ParameterExpression>)"}]},{"pos":[295578,295584],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[295651,295652],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[295723,295733],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[295794,295795]},{"pos":[295850,295856],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[295917,295918]},{"pos":[296000,296011],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[296096,296097],"content":"<","needQuote":true,"nodes":[]},{"pos":[296177,296196],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[296297,296298],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[296521,296527],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[296594,296595],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[296666,296676],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[296737,296738]},{"pos":[296793,296799],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[296860,296861]},{"pos":[296943,296954],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[297040,297043]},{"pos":[297130,297149],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[297218,297219],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[297246,297247],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[297905,297972],"content":"Lambda(Type, Expression, Boolean, IEnumerable<ParameterExpression>)","needQuote":true,"nodes":[{"content":"Lambda(Type, Expression, Boolean, IEnumerable&lt;ParameterExpression&gt;)","pos":[0,67],"source":"Lambda(Type, Expression, Boolean, IEnumerable<ParameterExpression>)"}]},{"pos":[298692,298698],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[298765,298766],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[298814,298818],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[298877,298878]},{"pos":[298954,298964],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[299025,299026]},{"pos":[299082,299089],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[299151,299152]},{"pos":[299234,299245],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[299330,299331],"content":"<","needQuote":true,"nodes":[]},{"pos":[299411,299430],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[299531,299532],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[299768,299774],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[299841,299842],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[299890,299894],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[299953,299954]},{"pos":[300030,300040],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[300101,300102]},{"pos":[300158,300165],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[300227,300228]},{"pos":[300310,300321],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[300407,300410]},{"pos":[300497,300516],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[300585,300586],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[300613,300614],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[301261,301317],"content":"Lambda(Type, Expression, Boolean, ParameterExpression[])","needQuote":true,"nodes":[{"content":"Lambda(Type, Expression, Boolean, ParameterExpression[])","pos":[0,56]}]},{"pos":[301906,301912],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[301979,301980],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[302028,302032],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[302091,302092]},{"pos":[302168,302178],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[302239,302240]},{"pos":[302296,302303],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[302365,302366]},{"pos":[302451,302470],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":"[]","pos":[302540,302542]},{"pos":[302573,302574],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[302772,302778],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[302845,302846],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[302894,302898],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[302957,302958]},{"pos":[303034,303044],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[303105,303106]},{"pos":[303162,303169],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[303231,303232]},{"pos":[303317,303336],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[303405,303407],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[303435,303436],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[304043,304101],"content":"Lambda(Type, Expression, IEnumerable<ParameterExpression>)","needQuote":true,"nodes":[{"content":"Lambda(Type, Expression, IEnumerable&lt;ParameterExpression&gt;)","pos":[0,58],"source":"Lambda(Type, Expression, IEnumerable<ParameterExpression>)"}]},{"pos":[304765,304771],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[304838,304839],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[304887,304891],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[304950,304951]},{"pos":[305027,305037],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[305098,305099]},{"pos":[305181,305192],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[305277,305278],"content":"<","needQuote":true,"nodes":[]},{"pos":[305358,305377],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[305478,305479],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[305700,305706],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[305773,305774],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[305822,305826],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[305885,305886]},{"pos":[305962,305972],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[306033,306034]},{"pos":[306116,306127],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[306213,306216]},{"pos":[306303,306322],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[306391,306392],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[306419,306420],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[307019,307066],"content":"Lambda(Type, Expression, ParameterExpression[])","needQuote":true,"nodes":[{"content":"Lambda(Type, Expression, ParameterExpression[])","pos":[0,47]}]},{"pos":[307599,307605],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[307672,307673],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[307721,307725],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[307784,307785]},{"pos":[307861,307871],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[307932,307933]},{"pos":[308018,308037],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":"[]","pos":[308107,308109]},{"pos":[308140,308141],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[308324,308330],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[308397,308398],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[308446,308450],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[308509,308510]},{"pos":[308586,308596],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[308657,308658]},{"pos":[308743,308762],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[308831,308833],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[308861,308862],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[309465,309540],"content":"Lambda(Type, Expression, String, Boolean, IEnumerable<ParameterExpression>)","needQuote":true,"nodes":[{"content":"Lambda(Type, Expression, String, Boolean, IEnumerable&lt;ParameterExpression&gt;)","pos":[0,75],"source":"Lambda(Type, Expression, String, Boolean, IEnumerable<ParameterExpression>)"}]},{"pos":[310312,310318],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[310385,310386],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[310434,310438],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[310497,310498]},{"pos":[310574,310584],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[310645,310646]},{"pos":[310701,310707],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[310768,310769]},{"pos":[310825,310832],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[310894,310895]},{"pos":[310977,310988],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[311073,311074],"content":"<","needQuote":true,"nodes":[]},{"pos":[311154,311173],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[311274,311275],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[311525,311531],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[311598,311599],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[311647,311651],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[311710,311711]},{"pos":[311787,311797],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[311858,311859]},{"pos":[311914,311920],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[311981,311982]},{"pos":[312038,312045],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[312107,312108]},{"pos":[312190,312201],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[312287,312290]},{"pos":[312377,312396],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[312465,312466],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[312493,312494],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[313208,313274],"content":"Lambda(Type, Expression, String, IEnumerable<ParameterExpression>)","needQuote":true,"nodes":[{"content":"Lambda(Type, Expression, String, IEnumerable&lt;ParameterExpression&gt;)","pos":[0,66],"source":"Lambda(Type, Expression, String, IEnumerable<ParameterExpression>)"}]},{"pos":[313990,313996],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[314063,314064],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[314112,314116],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[314175,314176]},{"pos":[314252,314262],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[314323,314324]},{"pos":[314379,314385],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[314446,314447]},{"pos":[314529,314540],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[314625,314626],"content":"<","needQuote":true,"nodes":[]},{"pos":[314706,314725],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[314826,314827],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[315062,315068],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[315135,315136],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[315184,315188],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[315247,315248]},{"pos":[315324,315334],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[315395,315396]},{"pos":[315451,315457],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[315518,315519]},{"pos":[315601,315612],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[315698,315701]},{"pos":[315788,315807],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[315876,315877],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[315904,315905],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[316578,316650],"content":"Lambda<TDelegate>(Expression, Boolean, IEnumerable<ParameterExpression>)","needQuote":true,"nodes":[{"content":"Lambda&lt;TDelegate&gt;(Expression, Boolean, IEnumerable&lt;ParameterExpression&gt;)","pos":[0,72],"source":"Lambda<TDelegate>(Expression, Boolean, IEnumerable<ParameterExpression>)"}]},{"pos":[317368,317385],"content":"Lambda<TDelegate>","needQuote":true,"nodes":[{"content":"Lambda&lt;TDelegate&gt;","pos":[0,17],"source":"Lambda<TDelegate>"}]},{"pos":[317463,317464],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[317535,317545],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[317606,317607]},{"pos":[317663,317670],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[317732,317733]},{"pos":[317815,317826],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[317911,317912],"content":"<","needQuote":true,"nodes":[]},{"pos":[317992,318011],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[318112,318113],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[318340,318360],"content":"Lambda(Of TDelegate)","needQuote":true,"nodes":[{"content":"Lambda(Of TDelegate)","pos":[0,20]}]},{"pos":[318441,318442],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[318513,318523],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[318584,318585]},{"pos":[318641,318648],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[318710,318711]},{"pos":[318793,318804],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[318890,318893]},{"pos":[318980,318999],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[319068,319069],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[319096,319097],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[319739,319800],"content":"Lambda<TDelegate>(Expression, Boolean, ParameterExpression[])","needQuote":true,"nodes":[{"content":"Lambda&lt;TDelegate&gt;(Expression, Boolean, ParameterExpression[])","pos":[0,61],"source":"Lambda<TDelegate>(Expression, Boolean, ParameterExpression[])"}]},{"pos":[320387,320404],"content":"Lambda<TDelegate>","needQuote":true,"nodes":[{"content":"Lambda&lt;TDelegate&gt;","pos":[0,17],"source":"Lambda<TDelegate>"}]},{"pos":[320482,320483],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[320554,320564],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[320625,320626]},{"pos":[320682,320689],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[320751,320752]},{"pos":[320837,320856],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":"[]","pos":[320926,320928]},{"pos":[320959,320960],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[321149,321169],"content":"Lambda(Of TDelegate)","needQuote":true,"nodes":[{"content":"Lambda(Of TDelegate)","pos":[0,20]}]},{"pos":[321250,321251],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[321322,321332],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[321393,321394]},{"pos":[321450,321457],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[321519,321520]},{"pos":[321605,321624],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[321693,321695],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[321723,321724],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[322326,322389],"content":"Lambda<TDelegate>(Expression, IEnumerable<ParameterExpression>)","needQuote":true,"nodes":[{"content":"Lambda&lt;TDelegate&gt;(Expression, IEnumerable&lt;ParameterExpression&gt;)","pos":[0,63],"source":"Lambda<TDelegate>(Expression, IEnumerable<ParameterExpression>)"}]},{"pos":[323051,323068],"content":"Lambda<TDelegate>","needQuote":true,"nodes":[{"content":"Lambda&lt;TDelegate&gt;","pos":[0,17],"source":"Lambda<TDelegate>"}]},{"pos":[323146,323147],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[323218,323228],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[323289,323290]},{"pos":[323372,323383],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[323468,323469],"content":"<","needQuote":true,"nodes":[]},{"pos":[323549,323568],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[323669,323670],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[323882,323902],"content":"Lambda(Of TDelegate)","needQuote":true,"nodes":[{"content":"Lambda(Of TDelegate)","pos":[0,20]}]},{"pos":[323983,323984],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[324055,324065],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[324126,324127]},{"pos":[324209,324220],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[324306,324309]},{"pos":[324396,324415],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[324484,324485],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[324512,324513],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[325108,325160],"content":"Lambda<TDelegate>(Expression, ParameterExpression[])","needQuote":true,"nodes":[{"content":"Lambda&lt;TDelegate&gt;(Expression, ParameterExpression[])","pos":[0,52],"source":"Lambda<TDelegate>(Expression, ParameterExpression[])"}]},{"pos":[325691,325708],"content":"Lambda<TDelegate>","needQuote":true,"nodes":[{"content":"Lambda&lt;TDelegate&gt;","pos":[0,17],"source":"Lambda<TDelegate>"}]},{"pos":[325786,325787],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[325858,325868],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[325929,325930]},{"pos":[326015,326034],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":"[]","pos":[326104,326106]},{"pos":[326137,326138],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[326312,326332],"content":"Lambda(Of TDelegate)","needQuote":true,"nodes":[{"content":"Lambda(Of TDelegate)","pos":[0,20]}]},{"pos":[326413,326414],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[326485,326495],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[326556,326557]},{"pos":[326642,326661],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[326730,326732],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[326760,326761],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[327359,327439],"content":"Lambda<TDelegate>(Expression, String, Boolean, IEnumerable<ParameterExpression>)","needQuote":true,"nodes":[{"content":"Lambda&lt;TDelegate&gt;(Expression, String, Boolean, IEnumerable&lt;ParameterExpression&gt;)","pos":[0,80],"source":"Lambda<TDelegate>(Expression, String, Boolean, IEnumerable<ParameterExpression>)"}]},{"pos":[328209,328226],"content":"Lambda<TDelegate>","needQuote":true,"nodes":[{"content":"Lambda&lt;TDelegate&gt;","pos":[0,17],"source":"Lambda<TDelegate>"}]},{"pos":[328304,328305],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[328376,328386],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[328447,328448]},{"pos":[328503,328509],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[328570,328571]},{"pos":[328627,328634],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[328696,328697]},{"pos":[328779,328790],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[328875,328876],"content":"<","needQuote":true,"nodes":[]},{"pos":[328956,328975],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[329076,329077],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[329318,329338],"content":"Lambda(Of TDelegate)","needQuote":true,"nodes":[{"content":"Lambda(Of TDelegate)","pos":[0,20]}]},{"pos":[329419,329420],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[329491,329501],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[329562,329563]},{"pos":[329618,329624],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[329685,329686]},{"pos":[329742,329749],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[329811,329812]},{"pos":[329894,329905],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[329991,329994]},{"pos":[330081,330100],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[330169,330170],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[330197,330198],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[330907,330978],"content":"Lambda<TDelegate>(Expression, String, IEnumerable<ParameterExpression>)","needQuote":true,"nodes":[{"content":"Lambda&lt;TDelegate&gt;(Expression, String, IEnumerable&lt;ParameterExpression&gt;)","pos":[0,71],"source":"Lambda<TDelegate>(Expression, String, IEnumerable<ParameterExpression>)"}]},{"pos":[331692,331709],"content":"Lambda<TDelegate>","needQuote":true,"nodes":[{"content":"Lambda&lt;TDelegate&gt;","pos":[0,17],"source":"Lambda<TDelegate>"}]},{"pos":[331787,331788],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[331859,331869],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[331930,331931]},{"pos":[331986,331992],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[332053,332054]},{"pos":[332136,332147],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[332232,332233],"content":"<","needQuote":true,"nodes":[]},{"pos":[332313,332332],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[332433,332434],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[332660,332680],"content":"Lambda(Of TDelegate)","needQuote":true,"nodes":[{"content":"Lambda(Of TDelegate)","pos":[0,20]}]},{"pos":[332761,332762],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[332833,332843],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[332904,332905]},{"pos":[332960,332966],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[333027,333028]},{"pos":[333110,333121],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[333207,333210]},{"pos":[333297,333316],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[333385,333386],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[333413,333414],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[334028,334061],"content":"LeftShift(Expression, Expression)","needQuote":true,"nodes":[{"content":"LeftShift(Expression, Expression)","pos":[0,33]}]},{"pos":[334341,334350],"content":"LeftShift","needQuote":true,"nodes":[{"content":"LeftShift","pos":[0,9]}]},{"pos":[334420,334421],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[334492,334502],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[334563,334564]},{"pos":[334640,334650],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[334710,334711],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[334874,334883],"content":"LeftShift","needQuote":true,"nodes":[{"content":"LeftShift","pos":[0,9]}]},{"pos":[334953,334954],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[335025,335035],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[335096,335097]},{"pos":[335173,335183],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[335243,335244],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[335677,335722],"content":"LeftShift(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"LeftShift(Expression, Expression, MethodInfo)","pos":[0,45]}]},{"pos":[336061,336070],"content":"LeftShift","needQuote":true,"nodes":[{"content":"LeftShift","pos":[0,9]}]},{"pos":[336140,336141],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[336212,336222],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[336283,336284]},{"pos":[336360,336370],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[336431,336432]},{"pos":[336502,336512],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[336587,336588],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[336780,336789],"content":"LeftShift","needQuote":true,"nodes":[{"content":"LeftShift","pos":[0,9]}]},{"pos":[336859,336860],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[336931,336941],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[337002,337003]},{"pos":[337079,337089],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[337150,337151]},{"pos":[337221,337231],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[337306,337307],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[337759,337798],"content":"LeftShiftAssign(Expression, Expression)","needQuote":true,"nodes":[{"content":"LeftShiftAssign(Expression, Expression)","pos":[0,39]}]},{"pos":[338090,338105],"content":"LeftShiftAssign","needQuote":true,"nodes":[{"content":"LeftShiftAssign","pos":[0,15]}]},{"pos":[338181,338182],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[338253,338263],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[338324,338325]},{"pos":[338401,338411],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[338471,338472],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[338641,338656],"content":"LeftShiftAssign","needQuote":true,"nodes":[{"content":"LeftShiftAssign","pos":[0,15]}]},{"pos":[338732,338733],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[338804,338814],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[338875,338876]},{"pos":[338952,338962],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[339022,339023],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[339474,339525],"content":"LeftShiftAssign(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"LeftShiftAssign(Expression, Expression, MethodInfo)","pos":[0,51]}]},{"pos":[339876,339891],"content":"LeftShiftAssign","needQuote":true,"nodes":[{"content":"LeftShiftAssign","pos":[0,15]}]},{"pos":[339967,339968],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[340039,340049],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[340110,340111]},{"pos":[340187,340197],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[340258,340259]},{"pos":[340329,340339],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[340414,340415],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[340613,340628],"content":"LeftShiftAssign","needQuote":true,"nodes":[{"content":"LeftShiftAssign","pos":[0,15]}]},{"pos":[340704,340705],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[340776,340786],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[340847,340848]},{"pos":[340924,340934],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[340995,340996]},{"pos":[341066,341076],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[341151,341152],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[341685,341754],"content":"LeftShiftAssign(Expression, Expression, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"LeftShiftAssign(Expression, Expression, MethodInfo, LambdaExpression)","pos":[0,69]}]},{"pos":[342188,342203],"content":"LeftShiftAssign","needQuote":true,"nodes":[{"content":"LeftShiftAssign","pos":[0,15]}]},{"pos":[342279,342280],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[342351,342361],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[342422,342423]},{"pos":[342499,342509],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[342570,342571]},{"pos":[342641,342651],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[342727,342728]},{"pos":[342810,342826],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[342892,342893],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[343132,343147],"content":"LeftShiftAssign","needQuote":true,"nodes":[{"content":"LeftShiftAssign","pos":[0,15]}]},{"pos":[343223,343224],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[343295,343305],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[343366,343367]},{"pos":[343443,343453],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[343514,343515]},{"pos":[343585,343595],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[343671,343672]},{"pos":[343754,343770],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[343836,343837],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[344353,344385],"content":"LessThan(Expression, Expression)","needQuote":true,"nodes":[{"content":"LessThan(Expression, Expression)","pos":[0,32]}]},{"pos":[344663,344671],"content":"LessThan","needQuote":true,"nodes":[{"content":"LessThan","pos":[0,8]}]},{"pos":[344740,344741],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[344812,344822],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[344883,344884]},{"pos":[344960,344970],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[345030,345031],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[345193,345201],"content":"LessThan","needQuote":true,"nodes":[{"content":"LessThan","pos":[0,8]}]},{"pos":[345270,345271],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[345342,345352],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[345413,345414]},{"pos":[345490,345500],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[345560,345561],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[346006,346059],"content":"LessThan(Expression, Expression, Boolean, MethodInfo)","needQuote":true,"nodes":[{"content":"LessThan(Expression, Expression, Boolean, MethodInfo)","pos":[0,53]}]},{"pos":[346427,346435],"content":"LessThan","needQuote":true,"nodes":[{"content":"LessThan","pos":[0,8]}]},{"pos":[346504,346505],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[346576,346586],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[346647,346648]},{"pos":[346724,346734],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[346795,346796]},{"pos":[346852,346859],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[346921,346922]},{"pos":[346992,347002],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[347077,347078],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[347284,347292],"content":"LessThan","needQuote":true,"nodes":[{"content":"LessThan","pos":[0,8]}]},{"pos":[347361,347362],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[347433,347443],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[347504,347505]},{"pos":[347581,347591],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[347652,347653]},{"pos":[347709,347716],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[347778,347779]},{"pos":[347849,347859],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[347934,347935],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[348409,348448],"content":"LessThanOrEqual(Expression, Expression)","needQuote":true,"nodes":[{"content":"LessThanOrEqual(Expression, Expression)","pos":[0,39]}]},{"pos":[348740,348755],"content":"LessThanOrEqual","needQuote":true,"nodes":[{"content":"LessThanOrEqual","pos":[0,15]}]},{"pos":[348831,348832],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[348903,348913],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[348974,348975]},{"pos":[349051,349061],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[349121,349122],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[349291,349306],"content":"LessThanOrEqual","needQuote":true,"nodes":[{"content":"LessThanOrEqual","pos":[0,15]}]},{"pos":[349382,349383],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[349454,349464],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[349525,349526]},{"pos":[349602,349612],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[349672,349673],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[350139,350199],"content":"LessThanOrEqual(Expression, Expression, Boolean, MethodInfo)","needQuote":true,"nodes":[{"content":"LessThanOrEqual(Expression, Expression, Boolean, MethodInfo)","pos":[0,60]}]},{"pos":[350581,350596],"content":"LessThanOrEqual","needQuote":true,"nodes":[{"content":"LessThanOrEqual","pos":[0,15]}]},{"pos":[350672,350673],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[350744,350754],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[350815,350816]},{"pos":[350892,350902],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[350963,350964]},{"pos":[351020,351027],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[351089,351090]},{"pos":[351160,351170],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[351245,351246],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[351459,351474],"content":"LessThanOrEqual","needQuote":true,"nodes":[{"content":"LessThanOrEqual","pos":[0,15]}]},{"pos":[351550,351551],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[351622,351632],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[351693,351694]},{"pos":[351770,351780],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[351841,351842]},{"pos":[351898,351905],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[351967,351968]},{"pos":[352038,352048],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[352123,352124],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[352639,352685],"content":"ListBind(MemberInfo, IEnumerable<ElementInit>)","needQuote":true,"nodes":[{"content":"ListBind(MemberInfo, IEnumerable&lt;ElementInit&gt;)","pos":[0,46],"source":"ListBind(MemberInfo, IEnumerable<ElementInit>)"}]},{"pos":[353263,353271],"content":"ListBind","needQuote":true,"nodes":[{"content":"ListBind","pos":[0,8]}]},{"pos":[353340,353341],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[353406,353416],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[353492,353493]},{"pos":[353575,353586],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[353671,353672],"content":"<","needQuote":true,"nodes":[]},{"pos":[353744,353755],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"pos":[353848,353849],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[354046,354054],"content":"ListBind","needQuote":true,"nodes":[{"content":"ListBind","pos":[0,8]}]},{"pos":[354123,354124],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[354189,354199],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[354275,354276]},{"pos":[354358,354369],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[354455,354458]},{"pos":[354537,354548],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"pos":[354609,354610],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[354637,354638],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[355165,355200],"content":"ListBind(MemberInfo, ElementInit[])","needQuote":true,"nodes":[{"content":"ListBind(MemberInfo, ElementInit[])","pos":[0,35]}]},{"pos":[355647,355655],"content":"ListBind","needQuote":true,"nodes":[{"content":"ListBind","pos":[0,8]}]},{"pos":[355724,355725],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[355790,355800],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[355876,355877]},{"pos":[355954,355965],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"content":"[]","pos":[356027,356029]},{"pos":[356060,356061],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[356220,356228],"content":"ListBind","needQuote":true,"nodes":[{"content":"ListBind","pos":[0,8]}]},{"pos":[356297,356298],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[356363,356373],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[356449,356450]},{"pos":[356527,356538],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"pos":[356599,356601],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[356629,356630],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[357132,357178],"content":"ListBind(MethodInfo, IEnumerable<ElementInit>)","needQuote":true,"nodes":[{"content":"ListBind(MethodInfo, IEnumerable&lt;ElementInit&gt;)","pos":[0,46],"source":"ListBind(MethodInfo, IEnumerable<ElementInit>)"}]},{"pos":[357756,357764],"content":"ListBind","needQuote":true,"nodes":[{"content":"ListBind","pos":[0,8]}]},{"pos":[357833,357834],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[357899,357909],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[357985,357986]},{"pos":[358068,358079],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[358164,358165],"content":"<","needQuote":true,"nodes":[]},{"pos":[358237,358248],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"pos":[358341,358342],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[358539,358547],"content":"ListBind","needQuote":true,"nodes":[{"content":"ListBind","pos":[0,8]}]},{"pos":[358616,358617],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[358682,358692],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[358768,358769]},{"pos":[358851,358862],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[358948,358951]},{"pos":[359030,359041],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"pos":[359102,359103],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[359130,359131],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[359658,359693],"content":"ListBind(MethodInfo, ElementInit[])","needQuote":true,"nodes":[{"content":"ListBind(MethodInfo, ElementInit[])","pos":[0,35]}]},{"pos":[360140,360148],"content":"ListBind","needQuote":true,"nodes":[{"content":"ListBind","pos":[0,8]}]},{"pos":[360217,360218],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[360283,360293],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[360369,360370]},{"pos":[360447,360458],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"content":"[]","pos":[360520,360522]},{"pos":[360553,360554],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[360713,360721],"content":"ListBind","needQuote":true,"nodes":[{"content":"ListBind","pos":[0,8]}]},{"pos":[360790,360791],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[360856,360866],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[360942,360943]},{"pos":[361020,361031],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"pos":[361092,361094],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[361122,361123],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[361634,361683],"content":"ListInit(NewExpression, IEnumerable<ElementInit>)","needQuote":true,"nodes":[{"content":"ListInit(NewExpression, IEnumerable&lt;ElementInit&gt;)","pos":[0,49],"source":"ListInit(NewExpression, IEnumerable<ElementInit>)"}]},{"pos":[362291,362299],"content":"ListInit","needQuote":true,"nodes":[{"content":"ListInit","pos":[0,8]}]},{"pos":[362368,362369],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[362443,362456],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[362520,362521]},{"pos":[362603,362614],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[362699,362700],"content":"<","needQuote":true,"nodes":[]},{"pos":[362772,362783],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"pos":[362876,362877],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[363083,363091],"content":"ListInit","needQuote":true,"nodes":[{"content":"ListInit","pos":[0,8]}]},{"pos":[363160,363161],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[363235,363248],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[363312,363313]},{"pos":[363395,363406],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[363492,363495]},{"pos":[363574,363585],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"pos":[363646,363647],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[363674,363675],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[364263,364311],"content":"ListInit(NewExpression, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"ListInit(NewExpression, IEnumerable&lt;Expression&gt;)","pos":[0,48],"source":"ListInit(NewExpression, IEnumerable<Expression>)"}]},{"pos":[364915,364923],"content":"ListInit","needQuote":true,"nodes":[{"content":"ListInit","pos":[0,8]}]},{"pos":[364992,364993],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[365067,365080],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[365144,365145]},{"pos":[365227,365238],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[365323,365324],"content":"<","needQuote":true,"nodes":[]},{"pos":[365395,365405],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[365497,365498],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[365703,365711],"content":"ListInit","needQuote":true,"nodes":[{"content":"ListInit","pos":[0,8]}]},{"pos":[365780,365781],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[365855,365868],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[365932,365933]},{"pos":[366015,366026],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[366112,366115]},{"pos":[366193,366203],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[366263,366264],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[366291,366292],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[366841,366879],"content":"ListInit(NewExpression, ElementInit[])","needQuote":true,"nodes":[{"content":"ListInit(NewExpression, ElementInit[])","pos":[0,38]}]},{"pos":[367356,367364],"content":"ListInit","needQuote":true,"nodes":[{"content":"ListInit","pos":[0,8]}]},{"pos":[367433,367434],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[367508,367521],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[367585,367586]},{"pos":[367663,367674],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"content":"[]","pos":[367736,367738]},{"pos":[367769,367770],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[367938,367946],"content":"ListInit","needQuote":true,"nodes":[{"content":"ListInit","pos":[0,8]}]},{"pos":[368015,368016],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[368090,368103],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[368167,368168]},{"pos":[368245,368256],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"pos":[368317,368319],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[368347,368348],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[368836,368873],"content":"ListInit(NewExpression, Expression[])","needQuote":true,"nodes":[{"content":"ListInit(NewExpression, Expression[])","pos":[0,37]}]},{"pos":[369346,369354],"content":"ListInit","needQuote":true,"nodes":[{"content":"ListInit","pos":[0,8]}]},{"pos":[369423,369424],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[369498,369511],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[369575,369576]},{"pos":[369652,369662],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[369723,369725]},{"pos":[369756,369757],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[369924,369932],"content":"ListInit","needQuote":true,"nodes":[{"content":"ListInit","pos":[0,8]}]},{"pos":[370001,370002],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[370076,370089],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[370153,370154]},{"pos":[370230,370240],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[370300,370302],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[370330,370331],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[370882,370942],"content":"ListInit(NewExpression, MethodInfo, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"ListInit(NewExpression, MethodInfo, IEnumerable&lt;Expression&gt;)","pos":[0,60],"source":"ListInit(NewExpression, MethodInfo, IEnumerable<Expression>)"}]},{"pos":[371647,371655],"content":"ListInit","needQuote":true,"nodes":[{"content":"ListInit","pos":[0,8]}]},{"pos":[371724,371725],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[371799,371812],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[371876,371877]},{"pos":[371947,371957],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[372033,372034]},{"pos":[372116,372127],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[372212,372213],"content":"<","needQuote":true,"nodes":[]},{"pos":[372284,372294],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[372386,372387],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[372621,372629],"content":"ListInit","needQuote":true,"nodes":[{"content":"ListInit","pos":[0,8]}]},{"pos":[372698,372699],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[372773,372786],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[372850,372851]},{"pos":[372921,372931],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[373007,373008]},{"pos":[373090,373101],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[373187,373190]},{"pos":[373268,373278],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[373338,373339],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[373366,373367],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[373996,374045],"content":"ListInit(NewExpression, MethodInfo, Expression[])","needQuote":true,"nodes":[{"content":"ListInit(NewExpression, MethodInfo, Expression[])","pos":[0,49]}]},{"pos":[374619,374627],"content":"ListInit","needQuote":true,"nodes":[{"content":"ListInit","pos":[0,8]}]},{"pos":[374696,374697],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[374771,374784],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[374848,374849]},{"pos":[374919,374929],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[375005,375006]},{"pos":[375082,375092],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[375153,375155]},{"pos":[375186,375187],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[375383,375391],"content":"ListInit","needQuote":true,"nodes":[{"content":"ListInit","pos":[0,8]}]},{"pos":[375460,375461],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[375535,375548],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[375612,375613]},{"pos":[375683,375693],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[375769,375770]},{"pos":[375846,375856],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[375916,375918],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[375946,375947],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[376441,376457],"content":"Loop(Expression)","needQuote":true,"nodes":[{"content":"Loop(Expression)","pos":[0,16]}]},{"pos":[376656,376660],"content":"Loop","needQuote":true,"nodes":[{"content":"Loop","pos":[0,4]}]},{"pos":[376725,376726],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[376797,376807],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[376867,376868],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[376991,376995],"content":"Loop","needQuote":true,"nodes":[{"content":"Loop","pos":[0,4]}]},{"pos":[377060,377061],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[377132,377142],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[377202,377203],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[377547,377576],"content":"Loop(Expression, LabelTarget)","needQuote":true,"nodes":[{"content":"Loop(Expression, LabelTarget)","pos":[0,29]}]},{"pos":[377848,377852],"content":"Loop","needQuote":true,"nodes":[{"content":"Loop","pos":[0,4]}]},{"pos":[377917,377918],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[377989,377999],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[378060,378061]},{"pos":[378138,378149],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[378210,378211],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[378370,378374],"content":"Loop","needQuote":true,"nodes":[{"content":"Loop","pos":[0,4]}]},{"pos":[378439,378440],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[378511,378521],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[378582,378583]},{"pos":[378660,378671],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[378732,378733],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[379162,379204],"content":"Loop(Expression, LabelTarget, LabelTarget)","needQuote":true,"nodes":[{"content":"Loop(Expression, LabelTarget, LabelTarget)","pos":[0,42]}]},{"pos":[379549,379553],"content":"Loop","needQuote":true,"nodes":[{"content":"Loop","pos":[0,4]}]},{"pos":[379618,379619],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[379690,379700],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[379761,379762]},{"pos":[379839,379850],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[379912,379913]},{"pos":[379990,380001],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[380062,380063],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[380258,380262],"content":"Loop","needQuote":true,"nodes":[{"content":"Loop","pos":[0,4]}]},{"pos":[380327,380328],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[380399,380409],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[380470,380471]},{"pos":[380548,380559],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[380621,380622]},{"pos":[380699,380710],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[380771,380772],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[381258,381308],"content":"MakeBinary(ExpressionType, Expression, Expression)","needQuote":true,"nodes":[{"content":"MakeBinary(ExpressionType, Expression, Expression)","pos":[0,50]}]},{"pos":[381669,381679],"content":"MakeBinary","needQuote":true,"nodes":[{"content":"MakeBinary","pos":[0,10]}]},{"pos":[381750,381751],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[381826,381840],"content":"ExpressionType","needQuote":true,"nodes":[{"content":"ExpressionType","pos":[0,14]}]},{"content":",","pos":[381905,381906]},{"pos":[381982,381992],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[382053,382054]},{"pos":[382130,382140],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[382200,382201],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[382404,382414],"content":"MakeBinary","needQuote":true,"nodes":[{"content":"MakeBinary","pos":[0,10]}]},{"pos":[382485,382486],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[382561,382575],"content":"ExpressionType","needQuote":true,"nodes":[{"content":"ExpressionType","pos":[0,14]}]},{"content":",","pos":[382640,382641]},{"pos":[382717,382727],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[382788,382789]},{"pos":[382865,382875],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[382935,382936],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[383481,383552],"content":"MakeBinary(ExpressionType, Expression, Expression, Boolean, MethodInfo)","needQuote":true,"nodes":[{"content":"MakeBinary(ExpressionType, Expression, Expression, Boolean, MethodInfo)","pos":[0,71]}]},{"pos":[384003,384013],"content":"MakeBinary","needQuote":true,"nodes":[{"content":"MakeBinary","pos":[0,10]}]},{"pos":[384084,384085],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[384160,384174],"content":"ExpressionType","needQuote":true,"nodes":[{"content":"ExpressionType","pos":[0,14]}]},{"content":",","pos":[384239,384240]},{"pos":[384316,384326],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[384387,384388]},{"pos":[384464,384474],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[384535,384536]},{"pos":[384592,384599],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[384661,384662]},{"pos":[384732,384742],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[384817,384818],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[385065,385075],"content":"MakeBinary","needQuote":true,"nodes":[{"content":"MakeBinary","pos":[0,10]}]},{"pos":[385146,385147],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[385222,385236],"content":"ExpressionType","needQuote":true,"nodes":[{"content":"ExpressionType","pos":[0,14]}]},{"content":",","pos":[385301,385302]},{"pos":[385378,385388],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[385449,385450]},{"pos":[385526,385536],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[385597,385598]},{"pos":[385654,385661],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[385723,385724]},{"pos":[385794,385804],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[385879,385880],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[386531,386620],"content":"MakeBinary(ExpressionType, Expression, Expression, Boolean, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"MakeBinary(ExpressionType, Expression, Expression, Boolean, MethodInfo, LambdaExpression)","pos":[0,89]}]},{"pos":[387154,387164],"content":"MakeBinary","needQuote":true,"nodes":[{"content":"MakeBinary","pos":[0,10]}]},{"pos":[387235,387236],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[387311,387325],"content":"ExpressionType","needQuote":true,"nodes":[{"content":"ExpressionType","pos":[0,14]}]},{"content":",","pos":[387390,387391]},{"pos":[387467,387477],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[387538,387539]},{"pos":[387615,387625],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[387686,387687]},{"pos":[387743,387750],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[387812,387813]},{"pos":[387883,387893],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[387969,387970]},{"pos":[388052,388068],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[388134,388135],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[388423,388433],"content":"MakeBinary","needQuote":true,"nodes":[{"content":"MakeBinary","pos":[0,10]}]},{"pos":[388504,388505],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[388580,388594],"content":"ExpressionType","needQuote":true,"nodes":[{"content":"ExpressionType","pos":[0,14]}]},{"content":",","pos":[388659,388660]},{"pos":[388736,388746],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[388807,388808]},{"pos":[388884,388894],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[388955,388956]},{"pos":[389012,389019],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[389081,389082]},{"pos":[389152,389162],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[389238,389239]},{"pos":[389321,389337],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[389403,389404],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[390050,390115],"content":"MakeCatchBlock(Type, ParameterExpression, Expression, Expression)","needQuote":true,"nodes":[{"content":"MakeCatchBlock(Type, ParameterExpression, Expression, Expression)","pos":[0,65]}]},{"pos":[390519,390533],"content":"MakeCatchBlock","needQuote":true,"nodes":[{"content":"MakeCatchBlock","pos":[0,14]}]},{"pos":[390608,390609],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[390657,390661],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[390720,390721]},{"pos":[390806,390825],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":",","pos":[390895,390896]},{"pos":[390972,390982],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[391043,391044]},{"pos":[391120,391130],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[391190,391191],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[391415,391429],"content":"MakeCatchBlock","needQuote":true,"nodes":[{"content":"MakeCatchBlock","pos":[0,14]}]},{"pos":[391504,391505],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[391553,391557],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[391616,391617]},{"pos":[391702,391721],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":",","pos":[391791,391792]},{"pos":[391868,391878],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[391939,391940]},{"pos":[392016,392026],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[392086,392087],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[392639,392698],"content":"MakeGoto(GotoExpressionKind, LabelTarget, Expression, Type)","needQuote":true,"nodes":[{"content":"MakeGoto(GotoExpressionKind, LabelTarget, Expression, Type)","pos":[0,59]}]},{"pos":[393090,393098],"content":"MakeGoto","needQuote":true,"nodes":[{"content":"MakeGoto","pos":[0,8]}]},{"pos":[393167,393168],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[393247,393265],"content":"GotoExpressionKind","needQuote":true,"nodes":[{"content":"GotoExpressionKind","pos":[0,18]}]},{"content":",","pos":[393334,393335]},{"pos":[393412,393423],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[393485,393486]},{"pos":[393562,393572],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[393633,393634]},{"pos":[393687,393691],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[393749,393750],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[393968,393976],"content":"MakeGoto","needQuote":true,"nodes":[{"content":"MakeGoto","pos":[0,8]}]},{"pos":[394045,394046],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[394125,394143],"content":"GotoExpressionKind","needQuote":true,"nodes":[{"content":"GotoExpressionKind","pos":[0,18]}]},{"content":",","pos":[394212,394213]},{"pos":[394290,394301],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[394363,394364]},{"pos":[394440,394450],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[394511,394512]},{"pos":[394565,394569],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[394627,394628],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[395184,395244],"content":"MakeIndex(Expression, PropertyInfo, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"MakeIndex(Expression, PropertyInfo, IEnumerable&lt;Expression&gt;)","pos":[0,60],"source":"MakeIndex(Expression, PropertyInfo, IEnumerable<Expression>)"}]},{"pos":[395949,395958],"content":"MakeIndex","needQuote":true,"nodes":[{"content":"MakeIndex","pos":[0,9]}]},{"pos":[396028,396029],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[396100,396110],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[396171,396172]},{"pos":[396244,396256],"content":"PropertyInfo","needQuote":true,"nodes":[{"content":"PropertyInfo","pos":[0,12]}]},{"content":",","pos":[396334,396335]},{"pos":[396417,396428],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[396513,396514],"content":"<","needQuote":true,"nodes":[]},{"pos":[396585,396595],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[396687,396688],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[396922,396931],"content":"MakeIndex","needQuote":true,"nodes":[{"content":"MakeIndex","pos":[0,9]}]},{"pos":[397001,397002],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[397073,397083],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[397144,397145]},{"pos":[397217,397229],"content":"PropertyInfo","needQuote":true,"nodes":[{"content":"PropertyInfo","pos":[0,12]}]},{"content":",","pos":[397307,397308]},{"pos":[397390,397401],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[397487,397490]},{"pos":[397568,397578],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[397638,397639],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[397666,397667],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[398264,398304],"content":"MakeMemberAccess(Expression, MemberInfo)","needQuote":true,"nodes":[{"content":"MakeMemberAccess(Expression, MemberInfo)","pos":[0,40]}]},{"pos":[398586,398602],"content":"MakeMemberAccess","needQuote":true,"nodes":[{"content":"MakeMemberAccess","pos":[0,16]}]},{"pos":[398679,398680],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[398751,398761],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[398822,398823]},{"pos":[398893,398903],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"pos":[398978,398979],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[399143,399159],"content":"MakeMemberAccess","needQuote":true,"nodes":[{"content":"MakeMemberAccess","pos":[0,16]}]},{"pos":[399236,399237],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[399308,399318],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[399379,399380]},{"pos":[399450,399460],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"pos":[399535,399536],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[400068,400142],"content":"MakeTry(Type, Expression, Expression, Expression, IEnumerable<CatchBlock>)","needQuote":true,"nodes":[{"content":"MakeTry(Type, Expression, Expression, Expression, IEnumerable&lt;CatchBlock&gt;)","pos":[0,74],"source":"MakeTry(Type, Expression, Expression, Expression, IEnumerable<CatchBlock>)"}]},{"pos":[401012,401019],"content":"MakeTry","needQuote":true,"nodes":[{"content":"MakeTry","pos":[0,7]}]},{"pos":[401087,401088],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[401136,401140],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[401199,401200]},{"pos":[401276,401286],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[401347,401348]},{"pos":[401424,401434],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[401495,401496]},{"pos":[401572,401582],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[401643,401644]},{"pos":[401726,401737],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[401822,401823],"content":"<","needQuote":true,"nodes":[]},{"pos":[401894,401904],"content":"CatchBlock","needQuote":true,"nodes":[{"content":"CatchBlock","pos":[0,10]}]},{"pos":[401996,401997],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[402280,402287],"content":"MakeTry","needQuote":true,"nodes":[{"content":"MakeTry","pos":[0,7]}]},{"pos":[402355,402356],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[402404,402408],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[402467,402468]},{"pos":[402544,402554],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[402615,402616]},{"pos":[402692,402702],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[402763,402764]},{"pos":[402840,402850],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[402911,402912]},{"pos":[402994,403005],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[403091,403094]},{"pos":[403172,403182],"content":"CatchBlock","needQuote":true,"nodes":[{"content":"CatchBlock","pos":[0,10]}]},{"pos":[403242,403243],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[403270,403271],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[403960,404003],"content":"MakeUnary(ExpressionType, Expression, Type)","needQuote":true,"nodes":[{"content":"MakeUnary(ExpressionType, Expression, Type)","pos":[0,43]}]},{"pos":[404316,404325],"content":"MakeUnary","needQuote":true,"nodes":[{"content":"MakeUnary","pos":[0,9]}]},{"pos":[404395,404396],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[404471,404485],"content":"ExpressionType","needQuote":true,"nodes":[{"content":"ExpressionType","pos":[0,14]}]},{"content":",","pos":[404550,404551]},{"pos":[404627,404637],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[404698,404699]},{"pos":[404752,404756],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[404814,404815],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[404994,405003],"content":"MakeUnary","needQuote":true,"nodes":[{"content":"MakeUnary","pos":[0,9]}]},{"pos":[405073,405074],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[405149,405163],"content":"ExpressionType","needQuote":true,"nodes":[{"content":"ExpressionType","pos":[0,14]}]},{"content":",","pos":[405228,405229]},{"pos":[405305,405315],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[405376,405377]},{"pos":[405430,405434],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[405492,405493],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[405968,406023],"content":"MakeUnary(ExpressionType, Expression, Type, MethodInfo)","needQuote":true,"nodes":[{"content":"MakeUnary(ExpressionType, Expression, Type, MethodInfo)","pos":[0,55]}]},{"pos":[406395,406404],"content":"MakeUnary","needQuote":true,"nodes":[{"content":"MakeUnary","pos":[0,9]}]},{"pos":[406474,406475],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[406550,406564],"content":"ExpressionType","needQuote":true,"nodes":[{"content":"ExpressionType","pos":[0,14]}]},{"content":",","pos":[406629,406630]},{"pos":[406706,406716],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[406777,406778]},{"pos":[406831,406835],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[406894,406895]},{"pos":[406965,406975],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[407050,407051],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[407259,407268],"content":"MakeUnary","needQuote":true,"nodes":[{"content":"MakeUnary","pos":[0,9]}]},{"pos":[407338,407339],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[407414,407428],"content":"ExpressionType","needQuote":true,"nodes":[{"content":"ExpressionType","pos":[0,14]}]},{"content":",","pos":[407493,407494]},{"pos":[407570,407580],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[407641,407642]},{"pos":[407695,407699],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[407758,407759]},{"pos":[407829,407839],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[407914,407915],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[408424,408474],"content":"MemberBind(MemberInfo, IEnumerable<MemberBinding>)","needQuote":true,"nodes":[{"content":"MemberBind(MemberInfo, IEnumerable&lt;MemberBinding&gt;)","pos":[0,50],"source":"MemberBind(MemberInfo, IEnumerable<MemberBinding>)"}]},{"pos":[409068,409078],"content":"MemberBind","needQuote":true,"nodes":[{"content":"MemberBind","pos":[0,10]}]},{"pos":[409149,409150],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[409215,409225],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[409301,409302]},{"pos":[409384,409395],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[409480,409481],"content":"<","needQuote":true,"nodes":[]},{"pos":[409555,409568],"content":"MemberBinding","needQuote":true,"nodes":[{"content":"MemberBinding","pos":[0,13]}]},{"pos":[409663,409664],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[409865,409875],"content":"MemberBind","needQuote":true,"nodes":[{"content":"MemberBind","pos":[0,10]}]},{"pos":[409946,409947],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[410012,410022],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[410098,410099]},{"pos":[410181,410192],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[410278,410281]},{"pos":[410362,410375],"content":"MemberBinding","needQuote":true,"nodes":[{"content":"MemberBinding","pos":[0,13]}]},{"pos":[410438,410439],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[410466,410467],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[411010,411049],"content":"MemberBind(MemberInfo, MemberBinding[])","needQuote":true,"nodes":[{"content":"MemberBind(MemberInfo, MemberBinding[])","pos":[0,39]}]},{"pos":[411512,411522],"content":"MemberBind","needQuote":true,"nodes":[{"content":"MemberBind","pos":[0,10]}]},{"pos":[411593,411594],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[411659,411669],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[411745,411746]},{"pos":[411825,411838],"content":"MemberBinding","needQuote":true,"nodes":[{"content":"MemberBinding","pos":[0,13]}]},{"content":"[]","pos":[411902,411904]},{"pos":[411935,411936],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[412099,412109],"content":"MemberBind","needQuote":true,"nodes":[{"content":"MemberBind","pos":[0,10]}]},{"pos":[412180,412181],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[412246,412256],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[412332,412333]},{"pos":[412412,412425],"content":"MemberBinding","needQuote":true,"nodes":[{"content":"MemberBinding","pos":[0,13]}]},{"pos":[412488,412490],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[412518,412519],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[413037,413087],"content":"MemberBind(MethodInfo, IEnumerable<MemberBinding>)","needQuote":true,"nodes":[{"content":"MemberBind(MethodInfo, IEnumerable&lt;MemberBinding&gt;)","pos":[0,50],"source":"MemberBind(MethodInfo, IEnumerable<MemberBinding>)"}]},{"pos":[413681,413691],"content":"MemberBind","needQuote":true,"nodes":[{"content":"MemberBind","pos":[0,10]}]},{"pos":[413762,413763],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[413828,413838],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[413914,413915]},{"pos":[413997,414008],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[414093,414094],"content":"<","needQuote":true,"nodes":[]},{"pos":[414168,414181],"content":"MemberBinding","needQuote":true,"nodes":[{"content":"MemberBinding","pos":[0,13]}]},{"pos":[414276,414277],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[414478,414488],"content":"MemberBind","needQuote":true,"nodes":[{"content":"MemberBind","pos":[0,10]}]},{"pos":[414559,414560],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[414625,414635],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[414711,414712]},{"pos":[414794,414805],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[414891,414894]},{"pos":[414975,414988],"content":"MemberBinding","needQuote":true,"nodes":[{"content":"MemberBinding","pos":[0,13]}]},{"pos":[415051,415052],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[415079,415080],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[415623,415662],"content":"MemberBind(MethodInfo, MemberBinding[])","needQuote":true,"nodes":[{"content":"MemberBind(MethodInfo, MemberBinding[])","pos":[0,39]}]},{"pos":[416125,416135],"content":"MemberBind","needQuote":true,"nodes":[{"content":"MemberBind","pos":[0,10]}]},{"pos":[416206,416207],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[416272,416282],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[416358,416359]},{"pos":[416438,416451],"content":"MemberBinding","needQuote":true,"nodes":[{"content":"MemberBinding","pos":[0,13]}]},{"content":"[]","pos":[416515,416517]},{"pos":[416548,416549],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[416712,416722],"content":"MemberBind","needQuote":true,"nodes":[{"content":"MemberBind","pos":[0,10]}]},{"pos":[416793,416794],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[416859,416869],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[416945,416946]},{"pos":[417025,417038],"content":"MemberBinding","needQuote":true,"nodes":[{"content":"MemberBinding","pos":[0,13]}]},{"pos":[417101,417103],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[417131,417132],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[417659,417712],"content":"MemberInit(NewExpression, IEnumerable<MemberBinding>)","needQuote":true,"nodes":[{"content":"MemberInit(NewExpression, IEnumerable&lt;MemberBinding&gt;)","pos":[0,53],"source":"MemberInit(NewExpression, IEnumerable<MemberBinding>)"}]},{"pos":[418336,418346],"content":"MemberInit","needQuote":true,"nodes":[{"content":"MemberInit","pos":[0,10]}]},{"pos":[418417,418418],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[418492,418505],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[418569,418570]},{"pos":[418652,418663],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[418748,418749],"content":"<","needQuote":true,"nodes":[]},{"pos":[418823,418836],"content":"MemberBinding","needQuote":true,"nodes":[{"content":"MemberBinding","pos":[0,13]}]},{"pos":[418931,418932],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[419142,419152],"content":"MemberInit","needQuote":true,"nodes":[{"content":"MemberInit","pos":[0,10]}]},{"pos":[419223,419224],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[419298,419311],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[419375,419376]},{"pos":[419458,419469],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[419555,419558]},{"pos":[419639,419652],"content":"MemberBinding","needQuote":true,"nodes":[{"content":"MemberBinding","pos":[0,13]}]},{"pos":[419715,419716],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[419743,419744],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[420312,420354],"content":"MemberInit(NewExpression, MemberBinding[])","needQuote":true,"nodes":[{"content":"MemberInit(NewExpression, MemberBinding[])","pos":[0,42]}]},{"pos":[420847,420857],"content":"MemberInit","needQuote":true,"nodes":[{"content":"MemberInit","pos":[0,10]}]},{"pos":[420928,420929],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[421003,421016],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[421080,421081]},{"pos":[421160,421173],"content":"MemberBinding","needQuote":true,"nodes":[{"content":"MemberBinding","pos":[0,13]}]},{"content":"[]","pos":[421237,421239]},{"pos":[421270,421271],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[421443,421453],"content":"MemberInit","needQuote":true,"nodes":[{"content":"MemberInit","pos":[0,10]}]},{"pos":[421524,421525],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[421599,421612],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[421676,421677]},{"pos":[421756,421769],"content":"MemberBinding","needQuote":true,"nodes":[{"content":"MemberBinding","pos":[0,13]}]},{"pos":[421832,421834],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[421862,421863],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[422356,422386],"content":"Modulo(Expression, Expression)","needQuote":true,"nodes":[{"content":"Modulo(Expression, Expression)","pos":[0,30]}]},{"pos":[422660,422666],"content":"Modulo","needQuote":true,"nodes":[{"content":"Modulo","pos":[0,6]}]},{"pos":[422733,422734],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[422805,422815],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[422876,422877]},{"pos":[422953,422963],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[423023,423024],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[423184,423190],"content":"Modulo","needQuote":true,"nodes":[{"content":"Modulo","pos":[0,6]}]},{"pos":[423257,423258],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[423329,423339],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[423400,423401]},{"pos":[423477,423487],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[423547,423548],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[423972,424014],"content":"Modulo(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"Modulo(Expression, Expression, MethodInfo)","pos":[0,42]}]},{"pos":[424347,424353],"content":"Modulo","needQuote":true,"nodes":[{"content":"Modulo","pos":[0,6]}]},{"pos":[424420,424421],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[424492,424502],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[424563,424564]},{"pos":[424640,424650],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[424711,424712]},{"pos":[424782,424792],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[424867,424868],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[425057,425063],"content":"Modulo","needQuote":true,"nodes":[{"content":"Modulo","pos":[0,6]}]},{"pos":[425130,425131],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[425202,425212],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[425273,425274]},{"pos":[425350,425360],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[425421,425422]},{"pos":[425492,425502],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[425577,425578],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[426021,426057],"content":"ModuloAssign(Expression, Expression)","needQuote":true,"nodes":[{"content":"ModuloAssign(Expression, Expression)","pos":[0,36]}]},{"pos":[426343,426355],"content":"ModuloAssign","needQuote":true,"nodes":[{"content":"ModuloAssign","pos":[0,12]}]},{"pos":[426428,426429],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[426500,426510],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[426571,426572]},{"pos":[426648,426658],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[426718,426719],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[426885,426897],"content":"ModuloAssign","needQuote":true,"nodes":[{"content":"ModuloAssign","pos":[0,12]}]},{"pos":[426970,426971],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[427042,427052],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[427113,427114]},{"pos":[427190,427200],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[427260,427261],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[427703,427751],"content":"ModuloAssign(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"ModuloAssign(Expression, Expression, MethodInfo)","pos":[0,48]}]},{"pos":[428096,428108],"content":"ModuloAssign","needQuote":true,"nodes":[{"content":"ModuloAssign","pos":[0,12]}]},{"pos":[428181,428182],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[428253,428263],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[428324,428325]},{"pos":[428401,428411],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[428472,428473]},{"pos":[428543,428553],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[428628,428629],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[428824,428836],"content":"ModuloAssign","needQuote":true,"nodes":[{"content":"ModuloAssign","pos":[0,12]}]},{"pos":[428909,428910],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[428981,428991],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[429052,429053]},{"pos":[429129,429139],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[429200,429201]},{"pos":[429271,429281],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[429356,429357],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[429881,429947],"content":"ModuloAssign(Expression, Expression, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"ModuloAssign(Expression, Expression, MethodInfo, LambdaExpression)","pos":[0,66]}]},{"pos":[430375,430387],"content":"ModuloAssign","needQuote":true,"nodes":[{"content":"ModuloAssign","pos":[0,12]}]},{"pos":[430460,430461],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[430532,430542],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[430603,430604]},{"pos":[430680,430690],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[430751,430752]},{"pos":[430822,430832],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[430908,430909]},{"pos":[430991,431007],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[431073,431074],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[431310,431322],"content":"ModuloAssign","needQuote":true,"nodes":[{"content":"ModuloAssign","pos":[0,12]}]},{"pos":[431395,431396],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[431467,431477],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[431538,431539]},{"pos":[431615,431625],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[431686,431687]},{"pos":[431757,431767],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[431843,431844]},{"pos":[431926,431942],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[432008,432009],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[432519,432551],"content":"Multiply(Expression, Expression)","needQuote":true,"nodes":[{"content":"Multiply(Expression, Expression)","pos":[0,32]}]},{"pos":[432829,432837],"content":"Multiply","needQuote":true,"nodes":[{"content":"Multiply","pos":[0,8]}]},{"pos":[432906,432907],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[432978,432988],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[433049,433050]},{"pos":[433126,433136],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[433196,433197],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[433359,433367],"content":"Multiply","needQuote":true,"nodes":[{"content":"Multiply","pos":[0,8]}]},{"pos":[433436,433437],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[433508,433518],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[433579,433580]},{"pos":[433656,433666],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[433726,433727],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[434157,434201],"content":"Multiply(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"Multiply(Expression, Expression, MethodInfo)","pos":[0,44]}]},{"pos":[434538,434546],"content":"Multiply","needQuote":true,"nodes":[{"content":"Multiply","pos":[0,8]}]},{"pos":[434615,434616],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[434687,434697],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[434758,434759]},{"pos":[434835,434845],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[434906,434907]},{"pos":[434977,434987],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[435062,435063],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[435254,435262],"content":"Multiply","needQuote":true,"nodes":[{"content":"Multiply","pos":[0,8]}]},{"pos":[435331,435332],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[435403,435413],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[435474,435475]},{"pos":[435551,435561],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[435622,435623]},{"pos":[435693,435703],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[435778,435779],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[436228,436266],"content":"MultiplyAssign(Expression, Expression)","needQuote":true,"nodes":[{"content":"MultiplyAssign(Expression, Expression)","pos":[0,38]}]},{"pos":[436556,436570],"content":"MultiplyAssign","needQuote":true,"nodes":[{"content":"MultiplyAssign","pos":[0,14]}]},{"pos":[436645,436646],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[436717,436727],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[436788,436789]},{"pos":[436865,436875],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[436935,436936],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[437104,437118],"content":"MultiplyAssign","needQuote":true,"nodes":[{"content":"MultiplyAssign","pos":[0,14]}]},{"pos":[437193,437194],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[437265,437275],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[437336,437337]},{"pos":[437413,437423],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[437483,437484],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[437932,437982],"content":"MultiplyAssign(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"MultiplyAssign(Expression, Expression, MethodInfo)","pos":[0,50]}]},{"pos":[438331,438345],"content":"MultiplyAssign","needQuote":true,"nodes":[{"content":"MultiplyAssign","pos":[0,14]}]},{"pos":[438420,438421],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[438492,438502],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[438563,438564]},{"pos":[438640,438650],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[438711,438712]},{"pos":[438782,438792],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[438867,438868],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[439065,439079],"content":"MultiplyAssign","needQuote":true,"nodes":[{"content":"MultiplyAssign","pos":[0,14]}]},{"pos":[439154,439155],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[439226,439236],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[439297,439298]},{"pos":[439374,439384],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[439445,439446]},{"pos":[439516,439526],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[439601,439602],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[440132,440200],"content":"MultiplyAssign(Expression, Expression, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"MultiplyAssign(Expression, Expression, MethodInfo, LambdaExpression)","pos":[0,68]}]},{"pos":[440632,440646],"content":"MultiplyAssign","needQuote":true,"nodes":[{"content":"MultiplyAssign","pos":[0,14]}]},{"pos":[440721,440722],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[440793,440803],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[440864,440865]},{"pos":[440941,440951],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[441012,441013]},{"pos":[441083,441093],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[441169,441170]},{"pos":[441252,441268],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[441334,441335],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[441573,441587],"content":"MultiplyAssign","needQuote":true,"nodes":[{"content":"MultiplyAssign","pos":[0,14]}]},{"pos":[441662,441663],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[441734,441744],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[441805,441806]},{"pos":[441882,441892],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[441953,441954]},{"pos":[442024,442034],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[442110,442111]},{"pos":[442193,442209],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[442275,442276],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[442803,442848],"content":"MultiplyAssignChecked(Expression, Expression)","needQuote":true,"nodes":[{"content":"MultiplyAssignChecked(Expression, Expression)","pos":[0,45]}]},{"pos":[443152,443173],"content":"MultiplyAssignChecked","needQuote":true,"nodes":[{"content":"MultiplyAssignChecked","pos":[0,21]}]},{"pos":[443255,443256],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[443327,443337],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[443398,443399]},{"pos":[443475,443485],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[443545,443546],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[443721,443742],"content":"MultiplyAssignChecked","needQuote":true,"nodes":[{"content":"MultiplyAssignChecked","pos":[0,21]}]},{"pos":[443824,443825],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[443896,443906],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[443967,443968]},{"pos":[444044,444054],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[444114,444115],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[444584,444641],"content":"MultiplyAssignChecked(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"MultiplyAssignChecked(Expression, Expression, MethodInfo)","pos":[0,57]}]},{"pos":[445004,445025],"content":"MultiplyAssignChecked","needQuote":true,"nodes":[{"content":"MultiplyAssignChecked","pos":[0,21]}]},{"pos":[445107,445108],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[445179,445189],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[445250,445251]},{"pos":[445327,445337],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[445398,445399]},{"pos":[445469,445479],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[445554,445555],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[445759,445780],"content":"MultiplyAssignChecked","needQuote":true,"nodes":[{"content":"MultiplyAssignChecked","pos":[0,21]}]},{"pos":[445862,445863],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[445934,445944],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[446005,446006]},{"pos":[446082,446092],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[446153,446154]},{"pos":[446224,446234],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[446309,446310],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[446861,446936],"content":"MultiplyAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"MultiplyAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)","pos":[0,75]}]},{"pos":[447382,447403],"content":"MultiplyAssignChecked","needQuote":true,"nodes":[{"content":"MultiplyAssignChecked","pos":[0,21]}]},{"pos":[447485,447486],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[447557,447567],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[447628,447629]},{"pos":[447705,447715],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[447776,447777]},{"pos":[447847,447857],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[447933,447934]},{"pos":[448016,448032],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[448098,448099],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[448344,448365],"content":"MultiplyAssignChecked","needQuote":true,"nodes":[{"content":"MultiplyAssignChecked","pos":[0,21]}]},{"pos":[448447,448448],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[448519,448529],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[448590,448591]},{"pos":[448667,448677],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[448738,448739]},{"pos":[448809,448819],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[448895,448896]},{"pos":[448978,448994],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[449060,449061],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[449596,449635],"content":"MultiplyChecked(Expression, Expression)","needQuote":true,"nodes":[{"content":"MultiplyChecked(Expression, Expression)","pos":[0,39]}]},{"pos":[449927,449942],"content":"MultiplyChecked","needQuote":true,"nodes":[{"content":"MultiplyChecked","pos":[0,15]}]},{"pos":[450018,450019],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[450090,450100],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[450161,450162]},{"pos":[450238,450248],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[450308,450309],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[450478,450493],"content":"MultiplyChecked","needQuote":true,"nodes":[{"content":"MultiplyChecked","pos":[0,15]}]},{"pos":[450569,450570],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[450641,450651],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[450712,450713]},{"pos":[450789,450799],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[450859,450860],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[451311,451362],"content":"MultiplyChecked(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"MultiplyChecked(Expression, Expression, MethodInfo)","pos":[0,51]}]},{"pos":[451713,451728],"content":"MultiplyChecked","needQuote":true,"nodes":[{"content":"MultiplyChecked","pos":[0,15]}]},{"pos":[451804,451805],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[451876,451886],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[451947,451948]},{"pos":[452024,452034],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[452095,452096]},{"pos":[452166,452176],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[452251,452252],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[452450,452465],"content":"MultiplyChecked","needQuote":true,"nodes":[{"content":"MultiplyChecked","pos":[0,15]}]},{"pos":[452541,452542],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[452613,452623],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[452684,452685]},{"pos":[452761,452771],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[452832,452833]},{"pos":[452903,452913],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[452988,452989],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[453409,453427],"content":"Negate(Expression)","needQuote":true,"nodes":[{"content":"Negate(Expression)","pos":[0,18]}]},{"pos":[453630,453636],"content":"Negate","needQuote":true,"nodes":[{"content":"Negate","pos":[0,6]}]},{"pos":[453703,453704],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[453775,453785],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[453845,453846],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[453971,453977],"content":"Negate","needQuote":true,"nodes":[{"content":"Negate","pos":[0,6]}]},{"pos":[454044,454045],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[454116,454126],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[454186,454187],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[454529,454559],"content":"Negate(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"Negate(Expression, MethodInfo)","pos":[0,30]}]},{"pos":[454821,454827],"content":"Negate","needQuote":true,"nodes":[{"content":"Negate","pos":[0,6]}]},{"pos":[454894,454895],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[454966,454976],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[455037,455038]},{"pos":[455108,455118],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[455193,455194],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[455348,455354],"content":"Negate","needQuote":true,"nodes":[{"content":"Negate","pos":[0,6]}]},{"pos":[455421,455422],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[455493,455503],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[455564,455565]},{"pos":[455635,455645],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[455720,455721],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[456083,456108],"content":"NegateChecked(Expression)","needQuote":true,"nodes":[{"content":"NegateChecked(Expression)","pos":[0,25]}]},{"pos":[456325,456338],"content":"NegateChecked","needQuote":true,"nodes":[{"content":"NegateChecked","pos":[0,13]}]},{"pos":[456412,456413],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[456484,456494],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[456554,456555],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[456687,456700],"content":"NegateChecked","needQuote":true,"nodes":[{"content":"NegateChecked","pos":[0,13]}]},{"pos":[456774,456775],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[456846,456856],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[456916,456917],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[457280,457317],"content":"NegateChecked(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"NegateChecked(Expression, MethodInfo)","pos":[0,37]}]},{"pos":[457593,457606],"content":"NegateChecked","needQuote":true,"nodes":[{"content":"NegateChecked","pos":[0,13]}]},{"pos":[457680,457681],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[457752,457762],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[457823,457824]},{"pos":[457894,457904],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[457979,457980],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[458141,458154],"content":"NegateChecked","needQuote":true,"nodes":[{"content":"NegateChecked","pos":[0,13]}]},{"pos":[458228,458229],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[458300,458310],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[458371,458372]},{"pos":[458442,458452],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[458527,458528],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[458892,458912],"content":"New(ConstructorInfo)","needQuote":true,"nodes":[{"content":"New(ConstructorInfo)","pos":[0,20]}]},{"pos":[459107,459110],"content":"New","needQuote":true,"nodes":[{"content":"New","pos":[0,3]}]},{"pos":[459174,459175],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[459245,459260],"content":"ConstructorInfo","needQuote":true,"nodes":[{"content":"ConstructorInfo","pos":[0,15]}]},{"pos":[459340,459341],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[459462,459465],"content":"New","needQuote":true,"nodes":[{"content":"New","pos":[0,3]}]},{"pos":[459529,459530],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[459600,459615],"content":"ConstructorInfo","needQuote":true,"nodes":[{"content":"ConstructorInfo","pos":[0,15]}]},{"pos":[459695,459696],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[460078,460123],"content":"New(ConstructorInfo, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"New(ConstructorInfo, IEnumerable&lt;Expression&gt;)","pos":[0,45],"source":"New(ConstructorInfo, IEnumerable<Expression>)"}]},{"pos":[460697,460700],"content":"New","needQuote":true,"nodes":[{"content":"New","pos":[0,3]}]},{"pos":[460764,460765],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[460835,460850],"content":"ConstructorInfo","needQuote":true,"nodes":[{"content":"ConstructorInfo","pos":[0,15]}]},{"content":",","pos":[460931,460932]},{"pos":[461014,461025],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[461110,461111],"content":"<","needQuote":true,"nodes":[]},{"pos":[461182,461192],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[461284,461285],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[461481,461484],"content":"New","needQuote":true,"nodes":[{"content":"New","pos":[0,3]}]},{"pos":[461548,461549],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[461619,461634],"content":"ConstructorInfo","needQuote":true,"nodes":[{"content":"ConstructorInfo","pos":[0,15]}]},{"content":",","pos":[461715,461716]},{"pos":[461798,461809],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[461895,461898]},{"pos":[461976,461986],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[462046,462047],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[462074,462075],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[462705,462775],"content":"New(ConstructorInfo, IEnumerable<Expression>, IEnumerable<MemberInfo>)","needQuote":true,"nodes":[{"content":"New(ConstructorInfo, IEnumerable&lt;Expression&gt;, IEnumerable&lt;MemberInfo&gt;)","pos":[0,70],"source":"New(ConstructorInfo, IEnumerable<Expression>, IEnumerable<MemberInfo>)"}]},{"pos":[463589,463592],"content":"New","needQuote":true,"nodes":[{"content":"New","pos":[0,3]}]},{"pos":[463656,463657],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[463727,463742],"content":"ConstructorInfo","needQuote":true,"nodes":[{"content":"ConstructorInfo","pos":[0,15]}]},{"content":",","pos":[463823,463824]},{"pos":[463906,463917],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[464002,464003],"content":"<","needQuote":true,"nodes":[]},{"pos":[464074,464084],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[464177,464178]},{"pos":[464260,464271],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[464356,464357],"content":"<","needQuote":true,"nodes":[]},{"pos":[464422,464432],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"pos":[464539,464540],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[464805,464808],"content":"New","needQuote":true,"nodes":[{"content":"New","pos":[0,3]}]},{"pos":[464872,464873],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[464943,464958],"content":"ConstructorInfo","needQuote":true,"nodes":[{"content":"ConstructorInfo","pos":[0,15]}]},{"content":",","pos":[465039,465040]},{"pos":[465122,465133],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[465219,465222]},{"pos":[465300,465310],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[465370,465371],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[465399,465400]},{"pos":[465482,465493],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[465579,465582]},{"pos":[465654,465664],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"pos":[465739,465740],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[465767,465768],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[466482,466541],"content":"New(ConstructorInfo, IEnumerable<Expression>, MemberInfo[])","needQuote":true,"nodes":[{"content":"New(ConstructorInfo, IEnumerable&lt;Expression&gt;, MemberInfo[])","pos":[0,59],"source":"New(ConstructorInfo, IEnumerable<Expression>, MemberInfo[])"}]},{"pos":[467224,467227],"content":"New","needQuote":true,"nodes":[{"content":"New","pos":[0,3]}]},{"pos":[467291,467292],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[467362,467377],"content":"ConstructorInfo","needQuote":true,"nodes":[{"content":"ConstructorInfo","pos":[0,15]}]},{"content":",","pos":[467458,467459]},{"pos":[467541,467552],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[467637,467638],"content":"<","needQuote":true,"nodes":[]},{"pos":[467709,467719],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[467812,467813]},{"pos":[467883,467893],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":"[]","pos":[467969,467971]},{"pos":[468002,468003],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[468230,468233],"content":"New","needQuote":true,"nodes":[{"content":"New","pos":[0,3]}]},{"pos":[468297,468298],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[468368,468383],"content":"ConstructorInfo","needQuote":true,"nodes":[{"content":"ConstructorInfo","pos":[0,15]}]},{"content":",","pos":[468464,468465]},{"pos":[468547,468558],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[468644,468647]},{"pos":[468725,468735],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[468795,468796],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[468824,468825]},{"pos":[468895,468905],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"pos":[468980,468982],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[469010,469011],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[469593,469627],"content":"New(ConstructorInfo, Expression[])","needQuote":true,"nodes":[{"content":"New(ConstructorInfo, Expression[])","pos":[0,34]}]},{"pos":[470070,470073],"content":"New","needQuote":true,"nodes":[{"content":"New","pos":[0,3]}]},{"pos":[470137,470138],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[470208,470223],"content":"ConstructorInfo","needQuote":true,"nodes":[{"content":"ConstructorInfo","pos":[0,15]}]},{"content":",","pos":[470304,470305]},{"pos":[470381,470391],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[470452,470454]},{"pos":[470485,470486],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[470644,470647],"content":"New","needQuote":true,"nodes":[{"content":"New","pos":[0,3]}]},{"pos":[470711,470712],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[470782,470797],"content":"ConstructorInfo","needQuote":true,"nodes":[{"content":"ConstructorInfo","pos":[0,15]}]},{"content":",","pos":[470878,470879]},{"pos":[470955,470965],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[471025,471027],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[471055,471056],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[471457,471466],"content":"New(Type)","needQuote":true,"nodes":[{"content":"New(Type)","pos":[0,9]}]},{"pos":[471617,471620],"content":"New","needQuote":true,"nodes":[{"content":"New","pos":[0,3]}]},{"pos":[471684,471685],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[471733,471737],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[471795,471796],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[471895,471898],"content":"New","needQuote":true,"nodes":[{"content":"New","pos":[0,3]}]},{"pos":[471962,471963],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[472011,472015],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[472073,472074],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[472412,472457],"content":"NewArrayBounds(Type, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"NewArrayBounds(Type, IEnumerable&lt;Expression&gt;)","pos":[0,45],"source":"NewArrayBounds(Type, IEnumerable<Expression>)"}]},{"pos":[472998,473012],"content":"NewArrayBounds","needQuote":true,"nodes":[{"content":"NewArrayBounds","pos":[0,14]}]},{"pos":[473087,473088],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[473136,473140],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[473199,473200]},{"pos":[473282,473293],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[473378,473379],"content":"<","needQuote":true,"nodes":[]},{"pos":[473450,473460],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[473552,473553],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[473738,473752],"content":"NewArrayBounds","needQuote":true,"nodes":[{"content":"NewArrayBounds","pos":[0,14]}]},{"pos":[473827,473828],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[473876,473880],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[473939,473940]},{"pos":[474022,474033],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[474119,474122]},{"pos":[474200,474210],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[474270,474271],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[474298,474299],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[474800,474834],"content":"NewArrayBounds(Type, Expression[])","needQuote":true,"nodes":[{"content":"NewArrayBounds(Type, Expression[])","pos":[0,34]}]},{"pos":[475244,475258],"content":"NewArrayBounds","needQuote":true,"nodes":[{"content":"NewArrayBounds","pos":[0,14]}]},{"pos":[475333,475334],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[475382,475386],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[475445,475446]},{"pos":[475522,475532],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[475593,475595]},{"pos":[475626,475627],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[475774,475788],"content":"NewArrayBounds","needQuote":true,"nodes":[{"content":"NewArrayBounds","pos":[0,14]}]},{"pos":[475863,475864],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[475912,475916],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[475975,475976]},{"pos":[476052,476062],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[476122,476124],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[476152,476153],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[476627,476670],"content":"NewArrayInit(Type, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"NewArrayInit(Type, IEnumerable&lt;Expression&gt;)","pos":[0,43],"source":"NewArrayInit(Type, IEnumerable<Expression>)"}]},{"pos":[477203,477215],"content":"NewArrayInit","needQuote":true,"nodes":[{"content":"NewArrayInit","pos":[0,12]}]},{"pos":[477288,477289],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[477337,477341],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[477400,477401]},{"pos":[477483,477494],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[477579,477580],"content":"<","needQuote":true,"nodes":[]},{"pos":[477651,477661],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[477753,477754],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[477937,477949],"content":"NewArrayInit","needQuote":true,"nodes":[{"content":"NewArrayInit","pos":[0,12]}]},{"pos":[478022,478023],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[478071,478075],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[478134,478135]},{"pos":[478217,478228],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[478314,478317]},{"pos":[478395,478405],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[478465,478466],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[478493,478494],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[478987,479019],"content":"NewArrayInit(Type, Expression[])","needQuote":true,"nodes":[{"content":"NewArrayInit(Type, Expression[])","pos":[0,32]}]},{"pos":[479421,479433],"content":"NewArrayInit","needQuote":true,"nodes":[{"content":"NewArrayInit","pos":[0,12]}]},{"pos":[479506,479507],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[479555,479559],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[479618,479619]},{"pos":[479695,479705],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[479766,479768]},{"pos":[479799,479800],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[479945,479957],"content":"NewArrayInit","needQuote":true,"nodes":[{"content":"NewArrayInit","pos":[0,12]}]},{"pos":[480030,480031],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[480079,480083],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[480142,480143]},{"pos":[480219,480229],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[480289,480291],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[480319,480320],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[480728,480743],"content":"Not(Expression)","needQuote":true,"nodes":[{"content":"Not(Expression)","pos":[0,15]}]},{"pos":[480940,480943],"content":"Not","needQuote":true,"nodes":[{"content":"Not","pos":[0,3]}]},{"pos":[481007,481008],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[481079,481089],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[481149,481150],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[481272,481275],"content":"Not","needQuote":true,"nodes":[{"content":"Not","pos":[0,3]}]},{"pos":[481339,481340],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[481411,481421],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[481481,481482],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[481815,481842],"content":"Not(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"Not(Expression, MethodInfo)","pos":[0,27]}]},{"pos":[482098,482101],"content":"Not","needQuote":true,"nodes":[{"content":"Not","pos":[0,3]}]},{"pos":[482165,482166],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[482237,482247],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[482308,482309]},{"pos":[482379,482389],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[482464,482465],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[482616,482619],"content":"Not","needQuote":true,"nodes":[{"content":"Not","pos":[0,3]}]},{"pos":[482683,482684],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[482755,482765],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[482826,482827]},{"pos":[482897,482907],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[482982,482983],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[483369,483401],"content":"NotEqual(Expression, Expression)","needQuote":true,"nodes":[{"content":"NotEqual(Expression, Expression)","pos":[0,32]}]},{"pos":[483679,483687],"content":"NotEqual","needQuote":true,"nodes":[{"content":"NotEqual","pos":[0,8]}]},{"pos":[483756,483757],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[483828,483838],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[483899,483900]},{"pos":[483976,483986],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[484046,484047],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[484209,484217],"content":"NotEqual","needQuote":true,"nodes":[{"content":"NotEqual","pos":[0,8]}]},{"pos":[484286,484287],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[484358,484368],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[484429,484430]},{"pos":[484506,484516],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[484576,484577],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[485022,485075],"content":"NotEqual(Expression, Expression, Boolean, MethodInfo)","needQuote":true,"nodes":[{"content":"NotEqual(Expression, Expression, Boolean, MethodInfo)","pos":[0,53]}]},{"pos":[485443,485451],"content":"NotEqual","needQuote":true,"nodes":[{"content":"NotEqual","pos":[0,8]}]},{"pos":[485520,485521],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[485592,485602],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[485663,485664]},{"pos":[485740,485750],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[485811,485812]},{"pos":[485868,485875],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[485937,485938]},{"pos":[486008,486018],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[486093,486094],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[486300,486308],"content":"NotEqual","needQuote":true,"nodes":[{"content":"NotEqual","pos":[0,8]}]},{"pos":[486377,486378],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[486449,486459],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[486520,486521]},{"pos":[486597,486607],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[486668,486669]},{"pos":[486725,486732],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[486794,486795]},{"pos":[486865,486875],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[486950,486951],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[487389,487415],"content":"OnesComplement(Expression)","needQuote":true,"nodes":[{"content":"OnesComplement(Expression)","pos":[0,26]}]},{"pos":[487634,487648],"content":"OnesComplement","needQuote":true,"nodes":[{"content":"OnesComplement","pos":[0,14]}]},{"pos":[487723,487724],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[487795,487805],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[487865,487866],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[487999,488013],"content":"OnesComplement","needQuote":true,"nodes":[{"content":"OnesComplement","pos":[0,14]}]},{"pos":[488088,488089],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[488160,488170],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[488230,488231],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[488597,488635],"content":"OnesComplement(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"OnesComplement(Expression, MethodInfo)","pos":[0,38]}]},{"pos":[488913,488927],"content":"OnesComplement","needQuote":true,"nodes":[{"content":"OnesComplement","pos":[0,14]}]},{"pos":[489002,489003],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[489074,489084],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[489145,489146]},{"pos":[489216,489226],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[489301,489302],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[489464,489478],"content":"OnesComplement","needQuote":true,"nodes":[{"content":"OnesComplement","pos":[0,14]}]},{"pos":[489553,489554],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[489625,489635],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[489696,489697]},{"pos":[489767,489777],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[489852,489853],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[490255,490281],"content":"Or(Expression, Expression)","needQuote":true,"nodes":[{"content":"Or(Expression, Expression)","pos":[0,26]}]},{"pos":[490547,490549],"content":"Or","needQuote":true,"nodes":[{"content":"Or","pos":[0,2]}]},{"pos":[490612,490613],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[490684,490694],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[490755,490756]},{"pos":[490832,490842],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[490902,490903],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[491059,491061],"content":"Or","needQuote":true,"nodes":[{"content":"Or","pos":[0,2]}]},{"pos":[491124,491125],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[491196,491206],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[491267,491268]},{"pos":[491344,491354],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[491414,491415],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[491827,491865],"content":"Or(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"Or(Expression, Expression, MethodInfo)","pos":[0,38]}]},{"pos":[492190,492192],"content":"Or","needQuote":true,"nodes":[{"content":"Or","pos":[0,2]}]},{"pos":[492255,492256],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[492327,492337],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[492398,492399]},{"pos":[492475,492485],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[492546,492547]},{"pos":[492617,492627],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[492702,492703],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[492888,492890],"content":"Or","needQuote":true,"nodes":[{"content":"Or","pos":[0,2]}]},{"pos":[492953,492954],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[493025,493035],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[493096,493097]},{"pos":[493173,493183],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[493244,493245]},{"pos":[493315,493325],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[493400,493401],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[493832,493864],"content":"OrAssign(Expression, Expression)","needQuote":true,"nodes":[{"content":"OrAssign(Expression, Expression)","pos":[0,32]}]},{"pos":[494142,494150],"content":"OrAssign","needQuote":true,"nodes":[{"content":"OrAssign","pos":[0,8]}]},{"pos":[494219,494220],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[494291,494301],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[494362,494363]},{"pos":[494439,494449],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[494509,494510],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[494672,494680],"content":"OrAssign","needQuote":true,"nodes":[{"content":"OrAssign","pos":[0,8]}]},{"pos":[494749,494750],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[494821,494831],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[494892,494893]},{"pos":[494969,494979],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[495039,495040],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[495470,495514],"content":"OrAssign(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"OrAssign(Expression, Expression, MethodInfo)","pos":[0,44]}]},{"pos":[495851,495859],"content":"OrAssign","needQuote":true,"nodes":[{"content":"OrAssign","pos":[0,8]}]},{"pos":[495928,495929],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[496000,496010],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[496071,496072]},{"pos":[496148,496158],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[496219,496220]},{"pos":[496290,496300],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[496375,496376],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[496567,496575],"content":"OrAssign","needQuote":true,"nodes":[{"content":"OrAssign","pos":[0,8]}]},{"pos":[496644,496645],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[496716,496726],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[496787,496788]},{"pos":[496864,496874],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[496935,496936]},{"pos":[497006,497016],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[497091,497092],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[497604,497666],"content":"OrAssign(Expression, Expression, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"OrAssign(Expression, Expression, MethodInfo, LambdaExpression)","pos":[0,62]}]},{"pos":[498086,498094],"content":"OrAssign","needQuote":true,"nodes":[{"content":"OrAssign","pos":[0,8]}]},{"pos":[498163,498164],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[498235,498245],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[498306,498307]},{"pos":[498383,498393],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[498454,498455]},{"pos":[498525,498535],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[498611,498612]},{"pos":[498694,498710],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[498776,498777],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[499009,499017],"content":"OrAssign","needQuote":true,"nodes":[{"content":"OrAssign","pos":[0,8]}]},{"pos":[499086,499087],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[499158,499168],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[499229,499230]},{"pos":[499306,499316],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[499377,499378]},{"pos":[499448,499458],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[499534,499535]},{"pos":[499617,499633],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[499699,499700],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[500200,500230],"content":"OrElse(Expression, Expression)","needQuote":true,"nodes":[{"content":"OrElse(Expression, Expression)","pos":[0,30]}]},{"pos":[500504,500510],"content":"OrElse","needQuote":true,"nodes":[{"content":"OrElse","pos":[0,6]}]},{"pos":[500577,500578],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[500649,500659],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[500720,500721]},{"pos":[500797,500807],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[500867,500868],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[501028,501034],"content":"OrElse","needQuote":true,"nodes":[{"content":"OrElse","pos":[0,6]}]},{"pos":[501101,501102],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[501173,501183],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[501244,501245]},{"pos":[501321,501331],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[501391,501392],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[501816,501858],"content":"OrElse(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"OrElse(Expression, Expression, MethodInfo)","pos":[0,42]}]},{"pos":[502191,502197],"content":"OrElse","needQuote":true,"nodes":[{"content":"OrElse","pos":[0,6]}]},{"pos":[502264,502265],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[502336,502346],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[502407,502408]},{"pos":[502484,502494],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[502555,502556]},{"pos":[502626,502636],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[502711,502712],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[502901,502907],"content":"OrElse","needQuote":true,"nodes":[{"content":"OrElse","pos":[0,6]}]},{"pos":[502974,502975],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[503046,503056],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[503117,503118]},{"pos":[503194,503204],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[503265,503266]},{"pos":[503336,503346],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[503421,503422],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[503803,503818],"content":"Parameter(Type)","needQuote":true,"nodes":[{"content":"Parameter(Type)","pos":[0,15]}]},{"pos":[503981,503990],"content":"Parameter","needQuote":true,"nodes":[{"content":"Parameter","pos":[0,9]}]},{"pos":[504060,504061],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[504109,504113],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[504171,504172],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[504277,504286],"content":"Parameter","needQuote":true,"nodes":[{"content":"Parameter","pos":[0,9]}]},{"pos":[504356,504357],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[504405,504409],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[504467,504468],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[504752,504775],"content":"Parameter(Type, String)","needQuote":true,"nodes":[{"content":"Parameter(Type, String)","pos":[0,23]}]},{"pos":[504967,504976],"content":"Parameter","needQuote":true,"nodes":[{"content":"Parameter","pos":[0,9]}]},{"pos":[505046,505047],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[505095,505099],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[505158,505159]},{"pos":[505214,505220],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[505280,505281],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[505400,505409],"content":"Parameter","needQuote":true,"nodes":[{"content":"Parameter","pos":[0,9]}]},{"pos":[505479,505480],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[505528,505532],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[505591,505592]},{"pos":[505647,505653],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[505713,505714],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[506040,506071],"content":"PostDecrementAssign(Expression)","needQuote":true,"nodes":[{"content":"PostDecrementAssign(Expression)","pos":[0,31]}]},{"pos":[506300,506319],"content":"PostDecrementAssign","needQuote":true,"nodes":[{"content":"PostDecrementAssign","pos":[0,19]}]},{"pos":[506399,506400],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[506471,506481],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[506541,506542],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[506680,506699],"content":"PostDecrementAssign","needQuote":true,"nodes":[{"content":"PostDecrementAssign","pos":[0,19]}]},{"pos":[506779,506780],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[506851,506861],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[506921,506922],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[507303,507346],"content":"PostDecrementAssign(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"PostDecrementAssign(Expression, MethodInfo)","pos":[0,43]}]},{"pos":[507634,507653],"content":"PostDecrementAssign","needQuote":true,"nodes":[{"content":"PostDecrementAssign","pos":[0,19]}]},{"pos":[507733,507734],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[507805,507815],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[507876,507877]},{"pos":[507947,507957],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[508032,508033],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[508200,508219],"content":"PostDecrementAssign","needQuote":true,"nodes":[{"content":"PostDecrementAssign","pos":[0,19]}]},{"pos":[508299,508300],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[508371,508381],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[508442,508443]},{"pos":[508513,508523],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[508598,508599],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[508993,509024],"content":"PostIncrementAssign(Expression)","needQuote":true,"nodes":[{"content":"PostIncrementAssign(Expression)","pos":[0,31]}]},{"pos":[509253,509272],"content":"PostIncrementAssign","needQuote":true,"nodes":[{"content":"PostIncrementAssign","pos":[0,19]}]},{"pos":[509352,509353],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[509424,509434],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[509494,509495],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[509633,509652],"content":"PostIncrementAssign","needQuote":true,"nodes":[{"content":"PostIncrementAssign","pos":[0,19]}]},{"pos":[509732,509733],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[509804,509814],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[509874,509875],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[510256,510299],"content":"PostIncrementAssign(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"PostIncrementAssign(Expression, MethodInfo)","pos":[0,43]}]},{"pos":[510587,510606],"content":"PostIncrementAssign","needQuote":true,"nodes":[{"content":"PostIncrementAssign","pos":[0,19]}]},{"pos":[510686,510687],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[510758,510768],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[510829,510830]},{"pos":[510900,510910],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[510985,510986],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[511153,511172],"content":"PostIncrementAssign","needQuote":true,"nodes":[{"content":"PostIncrementAssign","pos":[0,19]}]},{"pos":[511252,511253],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[511324,511334],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[511395,511396]},{"pos":[511466,511476],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[511551,511552],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[511967,511996],"content":"Power(Expression, Expression)","needQuote":true,"nodes":[{"content":"Power(Expression, Expression)","pos":[0,29]}]},{"pos":[512268,512273],"content":"Power","needQuote":true,"nodes":[{"content":"Power","pos":[0,5]}]},{"pos":[512339,512340],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[512411,512421],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[512482,512483]},{"pos":[512559,512569],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[512629,512630],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[512789,512794],"content":"Power","needQuote":true,"nodes":[{"content":"Power","pos":[0,5]}]},{"pos":[512860,512861],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[512932,512942],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[513003,513004]},{"pos":[513080,513090],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[513150,513151],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[513572,513613],"content":"Power(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"Power(Expression, Expression, MethodInfo)","pos":[0,41]}]},{"pos":[513944,513949],"content":"Power","needQuote":true,"nodes":[{"content":"Power","pos":[0,5]}]},{"pos":[514015,514016],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[514087,514097],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[514158,514159]},{"pos":[514235,514245],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[514306,514307]},{"pos":[514377,514387],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[514462,514463],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[514651,514656],"content":"Power","needQuote":true,"nodes":[{"content":"Power","pos":[0,5]}]},{"pos":[514722,514723],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[514794,514804],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[514865,514866]},{"pos":[514942,514952],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[515013,515014]},{"pos":[515084,515094],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[515169,515170],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[515610,515645],"content":"PowerAssign(Expression, Expression)","needQuote":true,"nodes":[{"content":"PowerAssign(Expression, Expression)","pos":[0,35]}]},{"pos":[515929,515940],"content":"PowerAssign","needQuote":true,"nodes":[{"content":"PowerAssign","pos":[0,11]}]},{"pos":[516012,516013],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[516084,516094],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[516155,516156]},{"pos":[516232,516242],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[516302,516303],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[516468,516479],"content":"PowerAssign","needQuote":true,"nodes":[{"content":"PowerAssign","pos":[0,11]}]},{"pos":[516551,516552],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[516623,516633],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[516694,516695]},{"pos":[516771,516781],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[516841,516842],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[517281,517328],"content":"PowerAssign(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"PowerAssign(Expression, Expression, MethodInfo)","pos":[0,47]}]},{"pos":[517671,517682],"content":"PowerAssign","needQuote":true,"nodes":[{"content":"PowerAssign","pos":[0,11]}]},{"pos":[517754,517755],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[517826,517836],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[517897,517898]},{"pos":[517974,517984],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[518045,518046]},{"pos":[518116,518126],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[518201,518202],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[518396,518407],"content":"PowerAssign","needQuote":true,"nodes":[{"content":"PowerAssign","pos":[0,11]}]},{"pos":[518479,518480],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[518551,518561],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[518622,518623]},{"pos":[518699,518709],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[518770,518771]},{"pos":[518841,518851],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[518926,518927],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[519448,519513],"content":"PowerAssign(Expression, Expression, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"PowerAssign(Expression, Expression, MethodInfo, LambdaExpression)","pos":[0,65]}]},{"pos":[519939,519950],"content":"PowerAssign","needQuote":true,"nodes":[{"content":"PowerAssign","pos":[0,11]}]},{"pos":[520022,520023],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[520094,520104],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[520165,520166]},{"pos":[520242,520252],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[520313,520314]},{"pos":[520384,520394],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[520470,520471]},{"pos":[520553,520569],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[520635,520636],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[520871,520882],"content":"PowerAssign","needQuote":true,"nodes":[{"content":"PowerAssign","pos":[0,11]}]},{"pos":[520954,520955],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[521026,521036],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[521097,521098]},{"pos":[521174,521184],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[521245,521246]},{"pos":[521316,521326],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[521402,521403]},{"pos":[521485,521501],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[521567,521568],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[522051,522081],"content":"PreDecrementAssign(Expression)","needQuote":true,"nodes":[{"content":"PreDecrementAssign(Expression)","pos":[0,30]}]},{"pos":[522308,522326],"content":"PreDecrementAssign","needQuote":true,"nodes":[{"content":"PreDecrementAssign","pos":[0,18]}]},{"pos":[522405,522406],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[522477,522487],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[522547,522548],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[522685,522703],"content":"PreDecrementAssign","needQuote":true,"nodes":[{"content":"PreDecrementAssign","pos":[0,18]}]},{"pos":[522782,522783],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[522854,522864],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[522924,522925],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[523303,523345],"content":"PreDecrementAssign(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"PreDecrementAssign(Expression, MethodInfo)","pos":[0,42]}]},{"pos":[523631,523649],"content":"PreDecrementAssign","needQuote":true,"nodes":[{"content":"PreDecrementAssign","pos":[0,18]}]},{"pos":[523728,523729],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[523800,523810],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[523871,523872]},{"pos":[523942,523952],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[524027,524028],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[524194,524212],"content":"PreDecrementAssign","needQuote":true,"nodes":[{"content":"PreDecrementAssign","pos":[0,18]}]},{"pos":[524291,524292],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[524363,524373],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[524434,524435]},{"pos":[524505,524515],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[524590,524591],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[524982,525012],"content":"PreIncrementAssign(Expression)","needQuote":true,"nodes":[{"content":"PreIncrementAssign(Expression)","pos":[0,30]}]},{"pos":[525239,525257],"content":"PreIncrementAssign","needQuote":true,"nodes":[{"content":"PreIncrementAssign","pos":[0,18]}]},{"pos":[525336,525337],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[525408,525418],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[525478,525479],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[525616,525634],"content":"PreIncrementAssign","needQuote":true,"nodes":[{"content":"PreIncrementAssign","pos":[0,18]}]},{"pos":[525713,525714],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[525785,525795],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[525855,525856],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[526234,526276],"content":"PreIncrementAssign(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"PreIncrementAssign(Expression, MethodInfo)","pos":[0,42]}]},{"pos":[526562,526580],"content":"PreIncrementAssign","needQuote":true,"nodes":[{"content":"PreIncrementAssign","pos":[0,18]}]},{"pos":[526659,526660],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[526731,526741],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[526802,526803]},{"pos":[526873,526883],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[526958,526959],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[527125,527143],"content":"PreIncrementAssign","needQuote":true,"nodes":[{"content":"PreIncrementAssign","pos":[0,18]}]},{"pos":[527222,527223],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[527294,527304],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[527365,527366]},{"pos":[527436,527446],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[527521,527522],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[527931,527963],"content":"Property(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"Property(Expression, MethodInfo)","pos":[0,32]}]},{"pos":[528229,528237],"content":"Property","needQuote":true,"nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[528306,528307],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[528378,528388],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[528449,528450]},{"pos":[528520,528530],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[528605,528606],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[528762,528770],"content":"Property","needQuote":true,"nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[528839,528840],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[528911,528921],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[528982,528983]},{"pos":[529053,529063],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[529138,529139],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[529530,529564],"content":"Property(Expression, PropertyInfo)","needQuote":true,"nodes":[{"content":"Property(Expression, PropertyInfo)","pos":[0,34]}]},{"pos":[529834,529842],"content":"Property","needQuote":true,"nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[529911,529912],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[529983,529993],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[530054,530055]},{"pos":[530127,530139],"content":"PropertyInfo","needQuote":true,"nodes":[{"content":"PropertyInfo","pos":[0,12]}]},{"pos":[530216,530217],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[530375,530383],"content":"Property","needQuote":true,"nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[530452,530453],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[530524,530534],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[530595,530596]},{"pos":[530668,530680],"content":"PropertyInfo","needQuote":true,"nodes":[{"content":"PropertyInfo","pos":[0,12]}]},{"pos":[530757,530758],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[531228,531287],"content":"Property(Expression, PropertyInfo, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"Property(Expression, PropertyInfo, IEnumerable&lt;Expression&gt;)","pos":[0,59],"source":"Property(Expression, PropertyInfo, IEnumerable<Expression>)"}]},{"pos":[531988,531996],"content":"Property","needQuote":true,"nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[532065,532066],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[532137,532147],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[532208,532209]},{"pos":[532281,532293],"content":"PropertyInfo","needQuote":true,"nodes":[{"content":"PropertyInfo","pos":[0,12]}]},{"content":",","pos":[532371,532372]},{"pos":[532454,532465],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[532550,532551],"content":"<","needQuote":true,"nodes":[]},{"pos":[532622,532632],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[532724,532725],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[532958,532966],"content":"Property","needQuote":true,"nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[533035,533036],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[533107,533117],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[533178,533179]},{"pos":[533251,533263],"content":"PropertyInfo","needQuote":true,"nodes":[{"content":"PropertyInfo","pos":[0,12]}]},{"content":",","pos":[533341,533342]},{"pos":[533424,533435],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[533521,533524]},{"pos":[533602,533612],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[533672,533673],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[533700,533701],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[534326,534374],"content":"Property(Expression, PropertyInfo, Expression[])","needQuote":true,"nodes":[{"content":"Property(Expression, PropertyInfo, Expression[])","pos":[0,48]}]},{"pos":[534944,534952],"content":"Property","needQuote":true,"nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[535021,535022],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[535093,535103],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[535164,535165]},{"pos":[535237,535249],"content":"PropertyInfo","needQuote":true,"nodes":[{"content":"PropertyInfo","pos":[0,12]}]},{"content":",","pos":[535327,535328]},{"pos":[535404,535414],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[535475,535477]},{"pos":[535508,535509],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[535704,535712],"content":"Property","needQuote":true,"nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[535781,535782],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[535853,535863],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[535924,535925]},{"pos":[535997,536009],"content":"PropertyInfo","needQuote":true,"nodes":[{"content":"PropertyInfo","pos":[0,12]}]},{"content":",","pos":[536087,536088]},{"pos":[536164,536174],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[536234,536236],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[536264,536265],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[536773,536801],"content":"Property(Expression, String)","needQuote":true,"nodes":[{"content":"Property(Expression, String)","pos":[0,28]}]},{"pos":[537037,537045],"content":"Property","needQuote":true,"nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[537114,537115],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[537186,537196],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[537257,537258]},{"pos":[537313,537319],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[537379,537380],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[537521,537529],"content":"Property","needQuote":true,"nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[537598,537599],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[537670,537680],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[537741,537742]},{"pos":[537797,537803],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[537863,537864],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[538256,538298],"content":"Property(Expression, String, Expression[])","needQuote":true,"nodes":[{"content":"Property(Expression, String, Expression[])","pos":[0,42]}]},{"pos":[538811,538819],"content":"Property","needQuote":true,"nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[538888,538889],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[538960,538970],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[539031,539032]},{"pos":[539087,539093],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[539154,539155]},{"pos":[539231,539241],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[539302,539304]},{"pos":[539335,539336],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[539514,539522],"content":"Property","needQuote":true,"nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[539591,539592],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[539663,539673],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[539734,539735]},{"pos":[539790,539796],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[539857,539858]},{"pos":[539934,539944],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[540004,540006],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[540034,540035],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[540526,540560],"content":"Property(Expression, Type, String)","needQuote":true,"nodes":[{"content":"Property(Expression, Type, String)","pos":[0,34]}]},{"pos":[540821,540829],"content":"Property","needQuote":true,"nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[540898,540899],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[540970,540980],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[541041,541042]},{"pos":[541095,541099],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[541158,541159]},{"pos":[541214,541220],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[541280,541281],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[541434,541442],"content":"Property","needQuote":true,"nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[541511,541512],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[541583,541593],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[541654,541655]},{"pos":[541708,541712],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[541771,541772]},{"pos":[541827,541833],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[541893,541894],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[542274,542309],"content":"PropertyOrField(Expression, String)","needQuote":true,"nodes":[{"content":"PropertyOrField(Expression, String)","pos":[0,35]}]},{"pos":[542559,542574],"content":"PropertyOrField","needQuote":true,"nodes":[{"content":"PropertyOrField","pos":[0,15]}]},{"pos":[542650,542651],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[542722,542732],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[542793,542794]},{"pos":[542849,542855],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[542915,542916],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[543064,543079],"content":"PropertyOrField","needQuote":true,"nodes":[{"content":"PropertyOrField","pos":[0,15]}]},{"pos":[543155,543156],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[543227,543237],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[543298,543299]},{"pos":[543354,543360],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[543420,543421],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[543774,543791],"content":"Quote(Expression)","needQuote":true,"nodes":[{"content":"Quote(Expression)","pos":[0,17]}]},{"pos":[543992,543997],"content":"Quote","needQuote":true,"nodes":[{"content":"Quote","pos":[0,5]}]},{"pos":[544063,544064],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[544135,544145],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[544205,544206],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[544330,544335],"content":"Quote","needQuote":true,"nodes":[{"content":"Quote","pos":[0,5]}]},{"pos":[544401,544402],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[544473,544483],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[544543,544544],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[544820,544828],"content":"Reduce()","needQuote":true,"nodes":[{"content":"Reduce()","pos":[0,8]}]},{"pos":[544961,544967],"content":"Reduce","needQuote":true,"nodes":[{"content":"Reduce","pos":[0,6]}]},{"pos":[545034,545035],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[545062,545063],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[545152,545158],"content":"Reduce","needQuote":true,"nodes":[{"content":"Reduce","pos":[0,6]}]},{"pos":[545225,545226],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[545253,545254],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[545494,545510],"content":"ReduceAndCheck()","needQuote":true,"nodes":[{"content":"ReduceAndCheck()","pos":[0,16]}]},{"pos":[545659,545673],"content":"ReduceAndCheck","needQuote":true,"nodes":[{"content":"ReduceAndCheck","pos":[0,14]}]},{"pos":[545748,545749],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[545776,545777],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[545874,545888],"content":"ReduceAndCheck","needQuote":true,"nodes":[{"content":"ReduceAndCheck","pos":[0,14]}]},{"pos":[545963,545964],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[545991,545992],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[546250,546268],"content":"ReduceExtensions()","needQuote":true,"nodes":[{"content":"ReduceExtensions()","pos":[0,18]}]},{"pos":[546421,546437],"content":"ReduceExtensions","needQuote":true,"nodes":[{"content":"ReduceExtensions","pos":[0,16]}]},{"pos":[546514,546515],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[546542,546543],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[546642,546658],"content":"ReduceExtensions","needQuote":true,"nodes":[{"content":"ReduceExtensions","pos":[0,16]}]},{"pos":[546735,546736],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[546763,546764],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[547095,547133],"content":"ReferenceEqual(Expression, Expression)","needQuote":true,"nodes":[{"content":"ReferenceEqual(Expression, Expression)","pos":[0,38]}]},{"pos":[547423,547437],"content":"ReferenceEqual","needQuote":true,"nodes":[{"content":"ReferenceEqual","pos":[0,14]}]},{"pos":[547512,547513],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[547584,547594],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[547655,547656]},{"pos":[547732,547742],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[547802,547803],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[547971,547985],"content":"ReferenceEqual","needQuote":true,"nodes":[{"content":"ReferenceEqual","pos":[0,14]}]},{"pos":[548060,548061],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[548132,548142],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[548203,548204]},{"pos":[548280,548290],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[548350,548351],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[548774,548815],"content":"ReferenceNotEqual(Expression, Expression)","needQuote":true,"nodes":[{"content":"ReferenceNotEqual(Expression, Expression)","pos":[0,41]}]},{"pos":[549111,549128],"content":"ReferenceNotEqual","needQuote":true,"nodes":[{"content":"ReferenceNotEqual","pos":[0,17]}]},{"pos":[549206,549207],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[549278,549288],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[549349,549350]},{"pos":[549426,549436],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[549496,549497],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[549668,549685],"content":"ReferenceNotEqual","needQuote":true,"nodes":[{"content":"ReferenceNotEqual","pos":[0,17]}]},{"pos":[549763,549764],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[549835,549845],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[549906,549907]},{"pos":[549983,549993],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[550053,550054],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[550402,550411],"content":"Rethrow()","needQuote":true,"nodes":[{"content":"Rethrow()","pos":[0,9]}]},{"pos":[550546,550553],"content":"Rethrow","needQuote":true,"nodes":[{"content":"Rethrow","pos":[0,7]}]},{"pos":[550621,550622],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[550649,550650],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[550740,550747],"content":"Rethrow","needQuote":true,"nodes":[{"content":"Rethrow","pos":[0,7]}]},{"pos":[550815,550816],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[550843,550844],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[551091,551104],"content":"Rethrow(Type)","needQuote":true,"nodes":[{"content":"Rethrow(Type)","pos":[0,13]}]},{"pos":[551263,551270],"content":"Rethrow","needQuote":true,"nodes":[{"content":"Rethrow","pos":[0,7]}]},{"pos":[551338,551339],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[551387,551391],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[551449,551450],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[551553,551560],"content":"Rethrow","needQuote":true,"nodes":[{"content":"Rethrow","pos":[0,7]}]},{"pos":[551628,551629],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[551677,551681],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[551739,551740],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[552028,552047],"content":"Return(LabelTarget)","needQuote":true,"nodes":[{"content":"Return(LabelTarget)","pos":[0,19]}]},{"pos":[552252,552258],"content":"Return","needQuote":true,"nodes":[{"content":"Return","pos":[0,6]}]},{"pos":[552325,552326],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[552398,552409],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[552470,552471],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[552597,552603],"content":"Return","needQuote":true,"nodes":[{"content":"Return","pos":[0,6]}]},{"pos":[552670,552671],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[552743,552754],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[552815,552816],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[553168,553199],"content":"Return(LabelTarget, Expression)","needQuote":true,"nodes":[{"content":"Return(LabelTarget, Expression)","pos":[0,31]}]},{"pos":[553475,553481],"content":"Return","needQuote":true,"nodes":[{"content":"Return","pos":[0,6]}]},{"pos":[553548,553549],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[553621,553632],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[553694,553695]},{"pos":[553771,553781],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[553841,553842],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[554003,554009],"content":"Return","needQuote":true,"nodes":[{"content":"Return","pos":[0,6]}]},{"pos":[554076,554077],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[554149,554160],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[554222,554223]},{"pos":[554299,554309],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[554369,554370],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[554780,554817],"content":"Return(LabelTarget, Expression, Type)","needQuote":true,"nodes":[{"content":"Return(LabelTarget, Expression, Type)","pos":[0,37]}]},{"pos":[555118,555124],"content":"Return","needQuote":true,"nodes":[{"content":"Return","pos":[0,6]}]},{"pos":[555191,555192],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[555264,555275],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[555337,555338]},{"pos":[555414,555424],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[555485,555486]},{"pos":[555539,555543],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[555601,555602],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[555775,555781],"content":"Return","needQuote":true,"nodes":[{"content":"Return","pos":[0,6]}]},{"pos":[555848,555849],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[555921,555932],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[555994,555995]},{"pos":[556071,556081],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[556142,556143]},{"pos":[556196,556200],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[556258,556259],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[556652,556677],"content":"Return(LabelTarget, Type)","needQuote":true,"nodes":[{"content":"Return(LabelTarget, Type)","pos":[0,25]}]},{"pos":[556907,556913],"content":"Return","needQuote":true,"nodes":[{"content":"Return","pos":[0,6]}]},{"pos":[556980,556981],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[557053,557064],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[557126,557127]},{"pos":[557180,557184],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[557242,557243],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[557381,557387],"content":"Return","needQuote":true,"nodes":[{"content":"Return","pos":[0,6]}]},{"pos":[557454,557455],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[557527,557538],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[557600,557601]},{"pos":[557654,557658],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[557716,557717],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[558090,558124],"content":"RightShift(Expression, Expression)","needQuote":true,"nodes":[{"content":"RightShift(Expression, Expression)","pos":[0,34]}]},{"pos":[558406,558416],"content":"RightShift","needQuote":true,"nodes":[{"content":"RightShift","pos":[0,10]}]},{"pos":[558487,558488],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[558559,558569],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[558630,558631]},{"pos":[558707,558717],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[558777,558778],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[558942,558952],"content":"RightShift","needQuote":true,"nodes":[{"content":"RightShift","pos":[0,10]}]},{"pos":[559023,559024],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[559095,559105],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[559166,559167]},{"pos":[559243,559253],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[559313,559314],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[559750,559796],"content":"RightShift(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"RightShift(Expression, Expression, MethodInfo)","pos":[0,46]}]},{"pos":[560137,560147],"content":"RightShift","needQuote":true,"nodes":[{"content":"RightShift","pos":[0,10]}]},{"pos":[560218,560219],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[560290,560300],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[560361,560362]},{"pos":[560438,560448],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[560509,560510]},{"pos":[560580,560590],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[560665,560666],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[560859,560869],"content":"RightShift","needQuote":true,"nodes":[{"content":"RightShift","pos":[0,10]}]},{"pos":[560940,560941],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[561012,561022],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[561083,561084]},{"pos":[561160,561170],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[561231,561232]},{"pos":[561302,561312],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[561387,561388],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[561843,561883],"content":"RightShiftAssign(Expression, Expression)","needQuote":true,"nodes":[{"content":"RightShiftAssign(Expression, Expression)","pos":[0,40]}]},{"pos":[562177,562193],"content":"RightShiftAssign","needQuote":true,"nodes":[{"content":"RightShiftAssign","pos":[0,16]}]},{"pos":[562270,562271],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[562342,562352],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[562413,562414]},{"pos":[562490,562500],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[562560,562561],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[562731,562747],"content":"RightShiftAssign","needQuote":true,"nodes":[{"content":"RightShiftAssign","pos":[0,16]}]},{"pos":[562824,562825],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[562896,562906],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[562967,562968]},{"pos":[563044,563054],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[563114,563115],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[563569,563621],"content":"RightShiftAssign(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"RightShiftAssign(Expression, Expression, MethodInfo)","pos":[0,52]}]},{"pos":[563974,563990],"content":"RightShiftAssign","needQuote":true,"nodes":[{"content":"RightShiftAssign","pos":[0,16]}]},{"pos":[564067,564068],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[564139,564149],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[564210,564211]},{"pos":[564287,564297],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[564358,564359]},{"pos":[564429,564439],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[564514,564515],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[564714,564730],"content":"RightShiftAssign","needQuote":true,"nodes":[{"content":"RightShiftAssign","pos":[0,16]}]},{"pos":[564807,564808],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[564879,564889],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[564950,564951]},{"pos":[565027,565037],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[565098,565099]},{"pos":[565169,565179],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[565254,565255],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[565791,565861],"content":"RightShiftAssign(Expression, Expression, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"RightShiftAssign(Expression, Expression, MethodInfo, LambdaExpression)","pos":[0,70]}]},{"pos":[566297,566313],"content":"RightShiftAssign","needQuote":true,"nodes":[{"content":"RightShiftAssign","pos":[0,16]}]},{"pos":[566390,566391],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[566462,566472],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[566533,566534]},{"pos":[566610,566620],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[566681,566682]},{"pos":[566752,566762],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[566838,566839]},{"pos":[566921,566937],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[567003,567004],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[567244,567260],"content":"RightShiftAssign","needQuote":true,"nodes":[{"content":"RightShiftAssign","pos":[0,16]}]},{"pos":[567337,567338],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[567409,567419],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[567480,567481]},{"pos":[567557,567567],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[567628,567629]},{"pos":[567699,567709],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[567785,567786]},{"pos":[567868,567884],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[567950,567951],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[568490,568540],"content":"RuntimeVariables(IEnumerable<ParameterExpression>)","needQuote":true,"nodes":[{"content":"RuntimeVariables(IEnumerable&lt;ParameterExpression&gt;)","pos":[0,50],"source":"RuntimeVariables(IEnumerable<ParameterExpression>)"}]},{"pos":[569081,569097],"content":"RuntimeVariables","needQuote":true,"nodes":[{"content":"RuntimeVariables","pos":[0,16]}]},{"pos":[569174,569175],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[569252,569263],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[569348,569349],"content":"<","needQuote":true,"nodes":[]},{"pos":[569429,569448],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[569549,569550],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[569734,569750],"content":"RuntimeVariables","needQuote":true,"nodes":[{"content":"RuntimeVariables","pos":[0,16]}]},{"pos":[569827,569828],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[569905,569916],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[570002,570005]},{"pos":[570092,570111],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[570180,570181],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[570208,570209],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[570719,570758],"content":"RuntimeVariables(ParameterExpression[])","needQuote":true,"nodes":[{"content":"RuntimeVariables(ParameterExpression[])","pos":[0,39]}]},{"pos":[571168,571184],"content":"RuntimeVariables","needQuote":true,"nodes":[{"content":"RuntimeVariables","pos":[0,16]}]},{"pos":[571261,571262],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[571342,571361],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":"[]","pos":[571431,571433]},{"pos":[571464,571465],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[571611,571627],"content":"RuntimeVariables","needQuote":true,"nodes":[{"content":"RuntimeVariables","pos":[0,16]}]},{"pos":[571704,571705],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[571785,571804],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[571873,571875],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[571903,571904],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[572367,572399],"content":"Subtract(Expression, Expression)","needQuote":true,"nodes":[{"content":"Subtract(Expression, Expression)","pos":[0,32]}]},{"pos":[572677,572685],"content":"Subtract","needQuote":true,"nodes":[{"content":"Subtract","pos":[0,8]}]},{"pos":[572754,572755],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[572826,572836],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[572897,572898]},{"pos":[572974,572984],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[573044,573045],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[573207,573215],"content":"Subtract","needQuote":true,"nodes":[{"content":"Subtract","pos":[0,8]}]},{"pos":[573284,573285],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[573356,573366],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[573427,573428]},{"pos":[573504,573514],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[573574,573575],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[574005,574049],"content":"Subtract(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"Subtract(Expression, Expression, MethodInfo)","pos":[0,44]}]},{"pos":[574386,574394],"content":"Subtract","needQuote":true,"nodes":[{"content":"Subtract","pos":[0,8]}]},{"pos":[574463,574464],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[574535,574545],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[574606,574607]},{"pos":[574683,574693],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[574754,574755]},{"pos":[574825,574835],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[574910,574911],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[575102,575110],"content":"Subtract","needQuote":true,"nodes":[{"content":"Subtract","pos":[0,8]}]},{"pos":[575179,575180],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[575251,575261],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[575322,575323]},{"pos":[575399,575409],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[575470,575471]},{"pos":[575541,575551],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[575626,575627],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[576076,576114],"content":"SubtractAssign(Expression, Expression)","needQuote":true,"nodes":[{"content":"SubtractAssign(Expression, Expression)","pos":[0,38]}]},{"pos":[576404,576418],"content":"SubtractAssign","needQuote":true,"nodes":[{"content":"SubtractAssign","pos":[0,14]}]},{"pos":[576493,576494],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[576565,576575],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[576636,576637]},{"pos":[576713,576723],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[576783,576784],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[576952,576966],"content":"SubtractAssign","needQuote":true,"nodes":[{"content":"SubtractAssign","pos":[0,14]}]},{"pos":[577041,577042],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[577113,577123],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[577184,577185]},{"pos":[577261,577271],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[577331,577332],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[577780,577830],"content":"SubtractAssign(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"SubtractAssign(Expression, Expression, MethodInfo)","pos":[0,50]}]},{"pos":[578179,578193],"content":"SubtractAssign","needQuote":true,"nodes":[{"content":"SubtractAssign","pos":[0,14]}]},{"pos":[578268,578269],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[578340,578350],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[578411,578412]},{"pos":[578488,578498],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[578559,578560]},{"pos":[578630,578640],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[578715,578716],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[578913,578927],"content":"SubtractAssign","needQuote":true,"nodes":[{"content":"SubtractAssign","pos":[0,14]}]},{"pos":[579002,579003],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[579074,579084],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[579145,579146]},{"pos":[579222,579232],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[579293,579294]},{"pos":[579364,579374],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[579449,579450],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[579980,580048],"content":"SubtractAssign(Expression, Expression, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"SubtractAssign(Expression, Expression, MethodInfo, LambdaExpression)","pos":[0,68]}]},{"pos":[580480,580494],"content":"SubtractAssign","needQuote":true,"nodes":[{"content":"SubtractAssign","pos":[0,14]}]},{"pos":[580569,580570],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[580641,580651],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[580712,580713]},{"pos":[580789,580799],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[580860,580861]},{"pos":[580931,580941],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[581017,581018]},{"pos":[581100,581116],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[581182,581183],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[581421,581435],"content":"SubtractAssign","needQuote":true,"nodes":[{"content":"SubtractAssign","pos":[0,14]}]},{"pos":[581510,581511],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[581582,581592],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[581653,581654]},{"pos":[581730,581740],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[581801,581802]},{"pos":[581872,581882],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[581958,581959]},{"pos":[582041,582057],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[582123,582124],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[582651,582696],"content":"SubtractAssignChecked(Expression, Expression)","needQuote":true,"nodes":[{"content":"SubtractAssignChecked(Expression, Expression)","pos":[0,45]}]},{"pos":[583000,583021],"content":"SubtractAssignChecked","needQuote":true,"nodes":[{"content":"SubtractAssignChecked","pos":[0,21]}]},{"pos":[583103,583104],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[583175,583185],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[583246,583247]},{"pos":[583323,583333],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[583393,583394],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[583569,583590],"content":"SubtractAssignChecked","needQuote":true,"nodes":[{"content":"SubtractAssignChecked","pos":[0,21]}]},{"pos":[583672,583673],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[583744,583754],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[583815,583816]},{"pos":[583892,583902],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[583962,583963],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[584432,584489],"content":"SubtractAssignChecked(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"SubtractAssignChecked(Expression, Expression, MethodInfo)","pos":[0,57]}]},{"pos":[584852,584873],"content":"SubtractAssignChecked","needQuote":true,"nodes":[{"content":"SubtractAssignChecked","pos":[0,21]}]},{"pos":[584955,584956],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[585027,585037],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[585098,585099]},{"pos":[585175,585185],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[585246,585247]},{"pos":[585317,585327],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[585402,585403],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[585607,585628],"content":"SubtractAssignChecked","needQuote":true,"nodes":[{"content":"SubtractAssignChecked","pos":[0,21]}]},{"pos":[585710,585711],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[585782,585792],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[585853,585854]},{"pos":[585930,585940],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[586001,586002]},{"pos":[586072,586082],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[586157,586158],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[586709,586784],"content":"SubtractAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"SubtractAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)","pos":[0,75]}]},{"pos":[587230,587251],"content":"SubtractAssignChecked","needQuote":true,"nodes":[{"content":"SubtractAssignChecked","pos":[0,21]}]},{"pos":[587333,587334],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[587405,587415],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[587476,587477]},{"pos":[587553,587563],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[587624,587625]},{"pos":[587695,587705],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[587781,587782]},{"pos":[587864,587880],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[587946,587947],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[588192,588213],"content":"SubtractAssignChecked","needQuote":true,"nodes":[{"content":"SubtractAssignChecked","pos":[0,21]}]},{"pos":[588295,588296],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[588367,588377],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[588438,588439]},{"pos":[588515,588525],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[588586,588587]},{"pos":[588657,588667],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[588743,588744]},{"pos":[588826,588842],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[588908,588909],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[589444,589483],"content":"SubtractChecked(Expression, Expression)","needQuote":true,"nodes":[{"content":"SubtractChecked(Expression, Expression)","pos":[0,39]}]},{"pos":[589775,589790],"content":"SubtractChecked","needQuote":true,"nodes":[{"content":"SubtractChecked","pos":[0,15]}]},{"pos":[589866,589867],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[589938,589948],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[590009,590010]},{"pos":[590086,590096],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[590156,590157],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[590326,590341],"content":"SubtractChecked","needQuote":true,"nodes":[{"content":"SubtractChecked","pos":[0,15]}]},{"pos":[590417,590418],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[590489,590499],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[590560,590561]},{"pos":[590637,590647],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[590707,590708],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[591159,591210],"content":"SubtractChecked(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"SubtractChecked(Expression, Expression, MethodInfo)","pos":[0,51]}]},{"pos":[591561,591576],"content":"SubtractChecked","needQuote":true,"nodes":[{"content":"SubtractChecked","pos":[0,15]}]},{"pos":[591652,591653],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[591724,591734],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[591795,591796]},{"pos":[591872,591882],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[591943,591944]},{"pos":[592014,592024],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[592099,592100],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[592298,592313],"content":"SubtractChecked","needQuote":true,"nodes":[{"content":"SubtractChecked","pos":[0,15]}]},{"pos":[592389,592390],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[592461,592471],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[592532,592533]},{"pos":[592609,592619],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[592680,592681]},{"pos":[592751,592761],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[592836,592837],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[593329,593373],"content":"Switch(Expression, Expression, SwitchCase[])","needQuote":true,"nodes":[{"content":"Switch(Expression, Expression, SwitchCase[])","pos":[0,44]}]},{"pos":[593945,593951],"content":"Switch","needQuote":true,"nodes":[{"content":"Switch","pos":[0,6]}]},{"pos":[594018,594019],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[594090,594100],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[594161,594162]},{"pos":[594238,594248],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[594309,594310]},{"pos":[594386,594396],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"content":"[]","pos":[594457,594459]},{"pos":[594490,594491],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[594688,594694],"content":"Switch","needQuote":true,"nodes":[{"content":"Switch","pos":[0,6]}]},{"pos":[594761,594762],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[594833,594843],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[594904,594905]},{"pos":[594981,594991],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[595052,595053]},{"pos":[595129,595139],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"pos":[595199,595201],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[595229,595230],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[595855,595922],"content":"Switch(Expression, Expression, MethodInfo, IEnumerable<SwitchCase>)","needQuote":true,"nodes":[{"content":"Switch(Expression, Expression, MethodInfo, IEnumerable&lt;SwitchCase&gt;)","pos":[0,67],"source":"Switch(Expression, Expression, MethodInfo, IEnumerable<SwitchCase>)"}]},{"pos":[596726,596732],"content":"Switch","needQuote":true,"nodes":[{"content":"Switch","pos":[0,6]}]},{"pos":[596799,596800],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[596871,596881],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[596942,596943]},{"pos":[597019,597029],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[597090,597091]},{"pos":[597161,597171],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[597247,597248]},{"pos":[597330,597341],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[597426,597427],"content":"<","needQuote":true,"nodes":[]},{"pos":[597498,597508],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"pos":[597600,597601],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[597865,597871],"content":"Switch","needQuote":true,"nodes":[{"content":"Switch","pos":[0,6]}]},{"pos":[597938,597939],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[598010,598020],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[598081,598082]},{"pos":[598158,598168],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[598229,598230]},{"pos":[598300,598310],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[598386,598387]},{"pos":[598469,598480],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[598566,598569]},{"pos":[598647,598657],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"pos":[598717,598718],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[598745,598746],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[599449,599505],"content":"Switch(Expression, Expression, MethodInfo, SwitchCase[])","needQuote":true,"nodes":[{"content":"Switch(Expression, Expression, MethodInfo, SwitchCase[])","pos":[0,56]}]},{"pos":[600178,600184],"content":"Switch","needQuote":true,"nodes":[{"content":"Switch","pos":[0,6]}]},{"pos":[600251,600252],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[600323,600333],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[600394,600395]},{"pos":[600471,600481],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[600542,600543]},{"pos":[600613,600623],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[600699,600700]},{"pos":[600776,600786],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"content":"[]","pos":[600847,600849]},{"pos":[600880,600881],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[601107,601113],"content":"Switch","needQuote":true,"nodes":[{"content":"Switch","pos":[0,6]}]},{"pos":[601180,601181],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[601252,601262],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[601323,601324]},{"pos":[601400,601410],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[601471,601472]},{"pos":[601542,601552],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[601628,601629]},{"pos":[601705,601715],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"pos":[601775,601777],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[601805,601806],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[602383,602415],"content":"Switch(Expression, SwitchCase[])","needQuote":true,"nodes":[{"content":"Switch(Expression, SwitchCase[])","pos":[0,32]}]},{"pos":[602868,602874],"content":"Switch","needQuote":true,"nodes":[{"content":"Switch","pos":[0,6]}]},{"pos":[602941,602942],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[603013,603023],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[603084,603085]},{"pos":[603161,603171],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"content":"[]","pos":[603232,603234]},{"pos":[603265,603266],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[603428,603434],"content":"Switch","needQuote":true,"nodes":[{"content":"Switch","pos":[0,6]}]},{"pos":[603501,603502],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[603573,603583],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[603644,603645]},{"pos":[603721,603731],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"pos":[603791,603793],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[603821,603822],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[604400,604473],"content":"Switch(Type, Expression, Expression, MethodInfo, IEnumerable<SwitchCase>)","needQuote":true,"nodes":[{"content":"Switch(Type, Expression, Expression, MethodInfo, IEnumerable&lt;SwitchCase&gt;)","pos":[0,73],"source":"Switch(Type, Expression, Expression, MethodInfo, IEnumerable<SwitchCase>)"}]},{"pos":[605321,605327],"content":"Switch","needQuote":true,"nodes":[{"content":"Switch","pos":[0,6]}]},{"pos":[605394,605395],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[605443,605447],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[605506,605507]},{"pos":[605583,605593],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[605654,605655]},{"pos":[605731,605741],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[605802,605803]},{"pos":[605873,605883],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[605959,605960]},{"pos":[606042,606053],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[606138,606139],"content":"<","needQuote":true,"nodes":[]},{"pos":[606210,606220],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"pos":[606312,606313],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[606589,606595],"content":"Switch","needQuote":true,"nodes":[{"content":"Switch","pos":[0,6]}]},{"pos":[606662,606663],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[606711,606715],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[606774,606775]},{"pos":[606851,606861],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[606922,606923]},{"pos":[606999,607009],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[607070,607071]},{"pos":[607141,607151],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[607227,607228]},{"pos":[607310,607321],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[607407,607410]},{"pos":[607488,607498],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"pos":[607558,607559],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[607586,607587],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[608326,608388],"content":"Switch(Type, Expression, Expression, MethodInfo, SwitchCase[])","needQuote":true,"nodes":[{"content":"Switch(Type, Expression, Expression, MethodInfo, SwitchCase[])","pos":[0,62]}]},{"pos":[609105,609111],"content":"Switch","needQuote":true,"nodes":[{"content":"Switch","pos":[0,6]}]},{"pos":[609178,609179],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[609227,609231],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[609290,609291]},{"pos":[609367,609377],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[609438,609439]},{"pos":[609515,609525],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[609586,609587]},{"pos":[609657,609667],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[609743,609744]},{"pos":[609820,609830],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"content":"[]","pos":[609891,609893]},{"pos":[609924,609925],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[610163,610169],"content":"Switch","needQuote":true,"nodes":[{"content":"Switch","pos":[0,6]}]},{"pos":[610236,610237],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[610285,610289],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[610348,610349]},{"pos":[610425,610435],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[610496,610497]},{"pos":[610573,610583],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[610644,610645]},{"pos":[610715,610725],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[610801,610802]},{"pos":[610878,610888],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"pos":[610948,610950],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[610978,610979],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[611621,611668],"content":"SwitchCase(Expression, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"SwitchCase(Expression, IEnumerable&lt;Expression&gt;)","pos":[0,47],"source":"SwitchCase(Expression, IEnumerable<Expression>)"}]},{"pos":[612268,612278],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"pos":[612349,612350],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[612421,612431],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[612492,612493]},{"pos":[612575,612586],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[612671,612672],"content":"<","needQuote":true,"nodes":[]},{"pos":[612743,612753],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[612845,612846],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[613050,613060],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"pos":[613131,613132],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[613203,613213],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[613274,613275]},{"pos":[613357,613368],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[613454,613457]},{"pos":[613535,613545],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[613605,613606],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[613633,613634],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[614178,614214],"content":"SwitchCase(Expression, Expression[])","needQuote":true,"nodes":[{"content":"SwitchCase(Expression, Expression[])","pos":[0,36]}]},{"pos":[614683,614693],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"pos":[614764,614765],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[614836,614846],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[614907,614908]},{"pos":[614984,614994],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[615055,615057]},{"pos":[615088,615089],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[615255,615265],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"pos":[615336,615337],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[615408,615418],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[615479,615480]},{"pos":[615556,615566],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[615626,615628],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[615656,615657],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[616083,616105],"content":"SymbolDocument(String)","needQuote":true,"nodes":[{"content":"SymbolDocument(String)","pos":[0,22]}]},{"pos":[616282,616296],"content":"SymbolDocument","needQuote":true,"nodes":[{"content":"SymbolDocument","pos":[0,14]}]},{"pos":[616371,616372],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[616422,616428],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[616488,616489],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[616601,616615],"content":"SymbolDocument","needQuote":true,"nodes":[{"content":"SymbolDocument","pos":[0,14]}]},{"pos":[616690,616691],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[616741,616747],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[616807,616808],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[617111,617139],"content":"SymbolDocument(String, Guid)","needQuote":true,"nodes":[{"content":"SymbolDocument(String, Guid)","pos":[0,28]}]},{"pos":[617341,617355],"content":"SymbolDocument","needQuote":true,"nodes":[{"content":"SymbolDocument","pos":[0,14]}]},{"pos":[617430,617431],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[617481,617487],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[617548,617549]},{"pos":[617602,617606],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[617664,617665],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[617789,617803],"content":"SymbolDocument","needQuote":true,"nodes":[{"content":"SymbolDocument","pos":[0,14]}]},{"pos":[617878,617879],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[617929,617935],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[617996,617997]},{"pos":[618050,618054],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[618112,618113],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[618446,618480],"content":"SymbolDocument(String, Guid, Guid)","needQuote":true,"nodes":[{"content":"SymbolDocument(String, Guid, Guid)","pos":[0,34]}]},{"pos":[618707,618721],"content":"SymbolDocument","needQuote":true,"nodes":[{"content":"SymbolDocument","pos":[0,14]}]},{"pos":[618796,618797],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[618847,618853],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[618914,618915]},{"pos":[618968,618972],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"content":",","pos":[619031,619032]},{"pos":[619085,619089],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[619147,619148],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[619284,619298],"content":"SymbolDocument","needQuote":true,"nodes":[{"content":"SymbolDocument","pos":[0,14]}]},{"pos":[619373,619374],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[619424,619430],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[619491,619492]},{"pos":[619545,619549],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"content":",","pos":[619608,619609]},{"pos":[619662,619666],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[619724,619725],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[620088,620128],"content":"SymbolDocument(String, Guid, Guid, Guid)","needQuote":true,"nodes":[{"content":"SymbolDocument(String, Guid, Guid, Guid)","pos":[0,40]}]},{"pos":[620380,620394],"content":"SymbolDocument","needQuote":true,"nodes":[{"content":"SymbolDocument","pos":[0,14]}]},{"pos":[620469,620470],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[620520,620526],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[620587,620588]},{"pos":[620641,620645],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"content":",","pos":[620704,620705]},{"pos":[620758,620762],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"content":",","pos":[620821,620822]},{"pos":[620875,620879],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[620937,620938],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[621086,621100],"content":"SymbolDocument","needQuote":true,"nodes":[{"content":"SymbolDocument","pos":[0,14]}]},{"pos":[621175,621176],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[621226,621232],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[621293,621294]},{"pos":[621347,621351],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"content":",","pos":[621410,621411]},{"pos":[621464,621468],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"content":",","pos":[621527,621528]},{"pos":[621581,621585],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[621643,621644],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[622002,622019],"content":"Throw(Expression)","needQuote":true,"nodes":[{"content":"Throw(Expression)","pos":[0,17]}]},{"pos":[622220,622225],"content":"Throw","needQuote":true,"nodes":[{"content":"Throw","pos":[0,5]}]},{"pos":[622291,622292],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[622363,622373],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[622433,622434],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[622558,622563],"content":"Throw","needQuote":true,"nodes":[{"content":"Throw","pos":[0,5]}]},{"pos":[622629,622630],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[622701,622711],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[622771,622772],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[623094,623117],"content":"Throw(Expression, Type)","needQuote":true,"nodes":[{"content":"Throw(Expression, Type)","pos":[0,23]}]},{"pos":[623343,623348],"content":"Throw","needQuote":true,"nodes":[{"content":"Throw","pos":[0,5]}]},{"pos":[623414,623415],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[623486,623496],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[623557,623558]},{"pos":[623611,623615],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[623673,623674],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[623810,623815],"content":"Throw","needQuote":true,"nodes":[{"content":"Throw","pos":[0,5]}]},{"pos":[623881,623882],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[623953,623963],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[624024,624025]},{"pos":[624078,624082],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[624140,624141],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[624437,624447],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[624584,624592],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[624661,624662],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[624689,624690],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[624781,624789],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[624858,624859],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[624886,624887],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[625198,625232],"content":"TryCatch(Expression, CatchBlock[])","needQuote":true,"nodes":[{"content":"TryCatch(Expression, CatchBlock[])","pos":[0,34]}]},{"pos":[625693,625701],"content":"TryCatch","needQuote":true,"nodes":[{"content":"TryCatch","pos":[0,8]}]},{"pos":[625770,625771],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[625842,625852],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[625913,625914]},{"pos":[625990,626000],"content":"CatchBlock","needQuote":true,"nodes":[{"content":"CatchBlock","pos":[0,10]}]},{"content":"[]","pos":[626061,626063]},{"pos":[626094,626095],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[626259,626267],"content":"TryCatch","needQuote":true,"nodes":[{"content":"TryCatch","pos":[0,8]}]},{"pos":[626336,626337],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[626408,626418],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[626479,626480]},{"pos":[626556,626566],"content":"CatchBlock","needQuote":true,"nodes":[{"content":"CatchBlock","pos":[0,10]}]},{"pos":[626626,626628],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[626656,626657],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[627172,627225],"content":"TryCatchFinally(Expression, Expression, CatchBlock[])","needQuote":true,"nodes":[{"content":"TryCatchFinally(Expression, Expression, CatchBlock[])","pos":[0,53]}]},{"pos":[627833,627848],"content":"TryCatchFinally","needQuote":true,"nodes":[{"content":"TryCatchFinally","pos":[0,15]}]},{"pos":[627924,627925],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[627996,628006],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[628067,628068]},{"pos":[628144,628154],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[628215,628216]},{"pos":[628292,628302],"content":"CatchBlock","needQuote":true,"nodes":[{"content":"CatchBlock","pos":[0,10]}]},{"content":"[]","pos":[628363,628365]},{"pos":[628396,628397],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[628603,628618],"content":"TryCatchFinally","needQuote":true,"nodes":[{"content":"TryCatchFinally","pos":[0,15]}]},{"pos":[628694,628695],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[628766,628776],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[628837,628838]},{"pos":[628914,628924],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[628985,628986]},{"pos":[629062,629072],"content":"CatchBlock","needQuote":true,"nodes":[{"content":"CatchBlock","pos":[0,10]}]},{"pos":[629132,629134],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[629162,629163],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[629714,629746],"content":"TryFault(Expression, Expression)","needQuote":true,"nodes":[{"content":"TryFault(Expression, Expression)","pos":[0,32]}]},{"pos":[630024,630032],"content":"TryFault","needQuote":true,"nodes":[{"content":"TryFault","pos":[0,8]}]},{"pos":[630101,630102],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[630173,630183],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[630244,630245]},{"pos":[630321,630331],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[630391,630392],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[630554,630562],"content":"TryFault","needQuote":true,"nodes":[{"content":"TryFault","pos":[0,8]}]},{"pos":[630631,630632],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[630703,630713],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[630774,630775]},{"pos":[630851,630861],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[630921,630922],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[631326,631360],"content":"TryFinally(Expression, Expression)","needQuote":true,"nodes":[{"content":"TryFinally(Expression, Expression)","pos":[0,34]}]},{"pos":[631642,631652],"content":"TryFinally","needQuote":true,"nodes":[{"content":"TryFinally","pos":[0,10]}]},{"pos":[631723,631724],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[631795,631805],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[631866,631867]},{"pos":[631943,631953],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[632013,632014],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[632178,632188],"content":"TryFinally","needQuote":true,"nodes":[{"content":"TryFinally","pos":[0,10]}]},{"pos":[632259,632260],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[632331,632341],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[632402,632403]},{"pos":[632479,632489],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[632549,632550],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[632920,632950],"content":"TryGetActionType(Type[], Type)","needQuote":true,"nodes":[{"content":"TryGetActionType(Type[], Type)","pos":[0,30]}]},{"pos":[633294,633310],"content":"TryGetActionType","needQuote":true,"nodes":[{"content":"TryGetActionType","pos":[0,16]}]},{"pos":[633387,633388],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[633436,633440],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[633499,633501]},{"content":",","pos":[633533,633534]},{"pos":[633587,633591],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[633649,633650],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[633777,633793],"content":"TryGetActionType","needQuote":true,"nodes":[{"content":"TryGetActionType","pos":[0,16]}]},{"pos":[633870,633871],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[633919,633923],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[633981,633983],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[634012,634013]},{"pos":[634066,634070],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[634128,634129],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[634517,634545],"content":"TryGetFuncType(Type[], Type)","needQuote":true,"nodes":[{"content":"TryGetFuncType(Type[], Type)","pos":[0,28]}]},{"pos":[634881,634895],"content":"TryGetFuncType","needQuote":true,"nodes":[{"content":"TryGetFuncType","pos":[0,14]}]},{"pos":[634970,634971],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[635019,635023],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[635082,635084]},{"content":",","pos":[635116,635117]},{"pos":[635170,635174],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[635232,635233],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[635358,635372],"content":"TryGetFuncType","needQuote":true,"nodes":[{"content":"TryGetFuncType","pos":[0,14]}]},{"pos":[635447,635448],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[635496,635500],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[635558,635560],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[635589,635590]},{"pos":[635643,635647],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[635705,635706],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[636100,636124],"content":"TypeAs(Expression, Type)","needQuote":true,"nodes":[{"content":"TypeAs(Expression, Type)","pos":[0,24]}]},{"pos":[636352,636358],"content":"TypeAs","needQuote":true,"nodes":[{"content":"TypeAs","pos":[0,6]}]},{"pos":[636425,636426],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[636497,636507],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[636568,636569]},{"pos":[636622,636626],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[636684,636685],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[636822,636828],"content":"TypeAs","needQuote":true,"nodes":[{"content":"TypeAs","pos":[0,6]}]},{"pos":[636895,636896],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[636967,636977],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[637038,637039]},{"pos":[637092,637096],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[637154,637155],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[637501,637528],"content":"TypeEqual(Expression, Type)","needQuote":true,"nodes":[{"content":"TypeEqual(Expression, Type)","pos":[0,27]}]},{"pos":[637762,637771],"content":"TypeEqual","needQuote":true,"nodes":[{"content":"TypeEqual","pos":[0,9]}]},{"pos":[637841,637842],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[637913,637923],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[637984,637985]},{"pos":[638038,638042],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[638100,638101],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[638241,638250],"content":"TypeEqual","needQuote":true,"nodes":[{"content":"TypeEqual","pos":[0,9]}]},{"pos":[638320,638321],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[638392,638402],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[638463,638464]},{"pos":[638517,638521],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[638579,638580],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[638929,638953],"content":"TypeIs(Expression, Type)","needQuote":true,"nodes":[{"content":"TypeIs(Expression, Type)","pos":[0,24]}]},{"pos":[639181,639187],"content":"TypeIs","needQuote":true,"nodes":[{"content":"TypeIs","pos":[0,6]}]},{"pos":[639254,639255],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[639326,639336],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[639397,639398]},{"pos":[639451,639455],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[639513,639514],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[639651,639657],"content":"TypeIs","needQuote":true,"nodes":[{"content":"TypeIs","pos":[0,6]}]},{"pos":[639724,639725],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[639796,639806],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[639867,639868]},{"pos":[639921,639925],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[639983,639984],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[640319,640340],"content":"UnaryPlus(Expression)","needQuote":true,"nodes":[{"content":"UnaryPlus(Expression)","pos":[0,21]}]},{"pos":[640549,640558],"content":"UnaryPlus","needQuote":true,"nodes":[{"content":"UnaryPlus","pos":[0,9]}]},{"pos":[640628,640629],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[640700,640710],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[640770,640771],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[640899,640908],"content":"UnaryPlus","needQuote":true,"nodes":[{"content":"UnaryPlus","pos":[0,9]}]},{"pos":[640978,640979],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[641050,641060],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[641120,641121],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[641472,641505],"content":"UnaryPlus(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"UnaryPlus(Expression, MethodInfo)","pos":[0,33]}]},{"pos":[641773,641782],"content":"UnaryPlus","needQuote":true,"nodes":[{"content":"UnaryPlus","pos":[0,9]}]},{"pos":[641852,641853],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[641924,641934],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[641995,641996]},{"pos":[642066,642076],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[642151,642152],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[642309,642318],"content":"UnaryPlus","needQuote":true,"nodes":[{"content":"UnaryPlus","pos":[0,9]}]},{"pos":[642388,642389],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[642460,642470],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[642531,642532]},{"pos":[642602,642612],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[642687,642688],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[643059,643082],"content":"Unbox(Expression, Type)","needQuote":true,"nodes":[{"content":"Unbox(Expression, Type)","pos":[0,23]}]},{"pos":[643308,643313],"content":"Unbox","needQuote":true,"nodes":[{"content":"Unbox","pos":[0,5]}]},{"pos":[643379,643380],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[643451,643461],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[643522,643523]},{"pos":[643576,643580],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[643638,643639],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[643775,643780],"content":"Unbox","needQuote":true,"nodes":[{"content":"Unbox","pos":[0,5]}]},{"pos":[643846,643847],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[643918,643928],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[643989,643990]},{"pos":[644043,644047],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[644105,644106],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[644414,644428],"content":"Variable(Type)","needQuote":true,"nodes":[{"content":"Variable(Type)","pos":[0,14]}]},{"pos":[644589,644597],"content":"Variable","needQuote":true,"nodes":[{"content":"Variable","pos":[0,8]}]},{"pos":[644666,644667],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[644715,644719],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[644777,644778],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[644882,644890],"content":"Variable","needQuote":true,"nodes":[{"content":"Variable","pos":[0,8]}]},{"pos":[644959,644960],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[645008,645012],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[645070,645071],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[645352,645374],"content":"Variable(Type, String)","needQuote":true,"nodes":[{"content":"Variable(Type, String)","pos":[0,22]}]},{"pos":[645564,645572],"content":"Variable","needQuote":true,"nodes":[{"content":"Variable","pos":[0,8]}]},{"pos":[645641,645642],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[645690,645694],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[645753,645754]},{"pos":[645809,645815],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[645875,645876],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[645994,646002],"content":"Variable","needQuote":true,"nodes":[{"content":"Variable","pos":[0,8]}]},{"pos":[646071,646072],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[646120,646124],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[646183,646184]},{"pos":[646239,646245],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[646305,646306],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[646631,646663],"content":"VisitChildren(ExpressionVisitor)","needQuote":true,"nodes":[{"content":"VisitChildren(ExpressionVisitor)","pos":[0,32]}]},{"pos":[646894,646907],"content":"VisitChildren","needQuote":true,"nodes":[{"content":"VisitChildren","pos":[0,13]}]},{"pos":[646981,646982],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[647060,647077],"content":"ExpressionVisitor","needQuote":true,"nodes":[{"content":"ExpressionVisitor","pos":[0,17]}]},{"pos":[647144,647145],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[647284,647297],"content":"VisitChildren","needQuote":true,"nodes":[{"content":"VisitChildren","pos":[0,13]}]},{"pos":[647371,647372],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[647450,647467],"content":"ExpressionVisitor","needQuote":true,"nodes":[{"content":"ExpressionVisitor","pos":[0,17]}]},{"pos":[647534,647535],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[647813,647827],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[647946,647952],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[648019,648020],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[648070,648076],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[648136,648137],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[648220,648226],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[648293,648294],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[648344,648350],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[648410,648411],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[648625,648647],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[648795,648801],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[648868,648869],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[648919,648925],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[648986,648987]},{"pos":[649042,649048],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[649108,649109],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[649206,649212],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[649279,649280],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[649330,649336],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[649397,649398]},{"pos":[649453,649459],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[649519,649520],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[649765,649796],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[649962,649977],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[650053,650054],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[650104,650110],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[650171,650172]},{"pos":[650227,650233],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[650293,650294],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[650400,650415],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[650491,650492],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[650542,650548],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[650609,650610]},{"pos":[650665,650671],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[650731,650732],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[650962,650975],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[651076,651087],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[651159,651160],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[651187,651188],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[651261,651272],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[651344,651345],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[651372,651373],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[651548,651557],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[651650,651657],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[651725,651726],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[651753,651754],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[651823,651830],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[651898,651899],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[651926,651927],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[652102,652119],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[652228,652243],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[652319,652320],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[652347,652348],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[652425,652440],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[652516,652517],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[652544,652545],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[652690,652696],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[652969,652999],"content":"ReadOnlyCollection<Expression>","needQuote":true,"nodes":[{"content":"ReadOnlyCollection&lt;Expression&gt;","pos":[0,30],"source":"ReadOnlyCollection<Expression>"}]},{"pos":[653333,653351],"content":"ReadOnlyCollection","needQuote":true,"nodes":[{"content":"ReadOnlyCollection","pos":[0,18]}]},{"pos":[653447,653448],"content":"<","needQuote":true,"nodes":[]},{"pos":[653519,653529],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[653693,653711],"content":"ReadOnlyCollection","needQuote":true,"nodes":[{"content":"ReadOnlyCollection","pos":[0,18]}]},{"content":"(Of","pos":[653808,653811]},{"pos":[653889,653899],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[653959,653960],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[654265,654286],"content":"ReadOnlyCollection<T>","needQuote":true,"nodes":[{"content":"ReadOnlyCollection&lt;T&gt;","pos":[0,21],"source":"ReadOnlyCollection<T>"}]},{"pos":[654545,654563],"content":"ReadOnlyCollection","needQuote":true,"nodes":[{"content":"ReadOnlyCollection","pos":[0,18]}]},{"pos":[654638,654639],"content":"<","needQuote":true,"nodes":[]},{"pos":[654666,654667],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[654798,654816],"content":"ReadOnlyCollection","needQuote":true,"nodes":[{"content":"ReadOnlyCollection","pos":[0,18]}]},{"content":"(Of","pos":[654892,654895]},{"pos":[654929,654930],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[654957,654958],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[655190,655220],"content":"System.Collections.ObjectModel","needQuote":true,"nodes":[{"content":"System.Collections.ObjectModel","pos":[0,30]}]},{"pos":[655477,655481],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[655685,655689],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[655927,655952],"content":"Accept(ExpressionVisitor)","needQuote":true,"nodes":[{"content":"Accept(ExpressionVisitor)","pos":[0,25]}]},{"pos":[656169,656175],"content":"Accept","needQuote":true,"nodes":[{"content":"Accept","pos":[0,6]}]},{"pos":[656242,656243],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[656321,656338],"content":"ExpressionVisitor","needQuote":true,"nodes":[{"content":"ExpressionVisitor","pos":[0,17]}]},{"pos":[656405,656406],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[656538,656544],"content":"Accept","needQuote":true,"nodes":[{"content":"Accept","pos":[0,6]}]},{"pos":[656611,656612],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[656690,656707],"content":"ExpressionVisitor","needQuote":true,"nodes":[{"content":"ExpressionVisitor","pos":[0,17]}]},{"pos":[656774,656775],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[657056,657073],"content":"ExpressionVisitor","needQuote":true,"nodes":[{"content":"ExpressionVisitor","pos":[0,17]}]},{"pos":[657401,657424],"content":"IEnumerable<Expression>","needQuote":true,"nodes":[{"content":"IEnumerable&lt;Expression&gt;","pos":[0,23],"source":"IEnumerable<Expression>"}]},{"pos":[657718,657729],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[657814,657815],"content":"<","needQuote":true,"nodes":[]},{"pos":[657886,657896],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[658049,658060],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[658146,658149]},{"pos":[658227,658237],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[658297,658298],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[658603,658621],"content":"NewArrayExpression","needQuote":true,"nodes":[{"content":"NewArrayExpression","pos":[0,18]}]},{"pos":[658846,658860],"content":"IEnumerable<T>","needQuote":true,"nodes":[{"content":"IEnumerable&lt;T&gt;","pos":[0,14],"source":"IEnumerable<T>"}]},{"pos":[659079,659090],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[659154,659155],"content":"<","needQuote":true,"nodes":[]},{"pos":[659182,659183],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[659303,659314],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[659379,659382]},{"pos":[659416,659417],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[659444,659445],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[659648,659674],"content":"System.Collections.Generic","needQuote":true,"nodes":[{"content":"System.Collections.Generic","pos":[0,26]}]}],"content":"items:\n- uid: System.Linq.Expressions.NewArrayExpression\n  commentId: T:System.Linq.Expressions.NewArrayExpression\n  id: NewArrayExpression\n  parent: System.Linq.Expressions\n  children:\n  - System.Linq.Expressions.NewArrayExpression.Accept(System.Linq.Expressions.ExpressionVisitor)\n  - System.Linq.Expressions.NewArrayExpression.Expressions\n  - System.Linq.Expressions.NewArrayExpression.Type\n  - System.Linq.Expressions.NewArrayExpression.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  langs:\n  - csharp\n  - vb\n  name: NewArrayExpression\n  fullName: System.Linq.Expressions.NewArrayExpression\n  type: Class\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: NewArrayExpression\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 739\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  summary: \"\\n<p>Represents creating a new array and possibly initializing the elements of the new array.</p>\\n\"\n  syntax:\n    content: 'public class NewArrayExpression : Expression'\n    content.vb: >-\n      Public Class NewArrayExpression\n          Inherits Expression\n  inheritance:\n  - System.Object\n  - System.Linq.Expressions.Expression\n  inheritedMembers:\n  - System.Linq.Expressions.Expression.CanReduce\n  - System.Linq.Expressions.Expression.NodeType\n  - System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.ArrayLength(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Assign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Bind(System.Reflection.MemberInfo,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Bind(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.Block(System.Type,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget)\n  - System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n  - System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Type)\n  - System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.String,System.Type[],System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.Call(System.Type,System.String,System.Type[],System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.ClearDebugInfo(System.Linq.Expressions.SymbolDocumentInfo)\n  - System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Type)\n  - System.Linq.Expressions.Expression.Constant(System.Object)\n  - System.Linq.Expressions.Expression.Constant(System.Object,System.Type)\n  - System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget)\n  - System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget,System.Type)\n  - System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type)\n  - System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type)\n  - System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.DebugInfo(System.Linq.Expressions.SymbolDocumentInfo,System.Int32,System.Int32,System.Int32,System.Int32)\n  - System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.Default(System.Type)\n  - System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.Empty\n  - System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)\n  - System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.String)\n  - System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Type,System.String)\n  - System.Linq.Expressions.Expression.GetActionType(System.Type[])\n  - System.Linq.Expressions.Expression.GetDelegateType(System.Type[])\n  - System.Linq.Expressions.Expression.GetFuncType(System.Type[])\n  - System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget)\n  - System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n  - System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Type)\n  - System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.IfThen(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.IfThenElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.Label\n  - System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget)\n  - System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Label(System.String)\n  - System.Linq.Expressions.Expression.Label(System.Type)\n  - System.Linq.Expressions.Expression.Label(System.Type,System.String)\n  - System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  - System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n  - System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  - System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n  - System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  - System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  - System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  - System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n  - System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  - System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n  - System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  - System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  - System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  - System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n  - System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  - System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n  - System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  - System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  - System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n  - System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Linq.Expressions.ElementInit[])\n  - System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n  - System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Linq.Expressions.ElementInit[])\n  - System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n  - System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.ElementInit[])\n  - System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget)\n  - System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.LabelTarget)\n  - System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.MakeCatchBlock(System.Type,System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.MakeGoto(System.Linq.Expressions.GotoExpressionKind,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n  - System.Linq.Expressions.Expression.MakeIndex(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.MakeMemberAccess(System.Linq.Expressions.Expression,System.Reflection.MemberInfo)\n  - System.Linq.Expressions.Expression.MakeTry(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.CatchBlock})\n  - System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type)\n  - System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n  - System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Linq.Expressions.MemberBinding[])\n  - System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n  - System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Linq.Expressions.MemberBinding[])\n  - System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n  - System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.MemberBinding[])\n  - System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo)\n  - System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo})\n  - System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Reflection.MemberInfo[])\n  - System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.New(System.Type)\n  - System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.Parameter(System.Type)\n  - System.Linq.Expressions.Expression.Parameter(System.Type,System.String)\n  - System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo)\n  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String)\n  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Type,System.String)\n  - System.Linq.Expressions.Expression.PropertyOrField(System.Linq.Expressions.Expression,System.String)\n  - System.Linq.Expressions.Expression.Quote(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Reduce\n  - System.Linq.Expressions.Expression.ReduceAndCheck\n  - System.Linq.Expressions.Expression.ReduceExtensions\n  - System.Linq.Expressions.Expression.ReferenceEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.ReferenceNotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Rethrow\n  - System.Linq.Expressions.Expression.Rethrow(System.Type)\n  - System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget)\n  - System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n  - System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Type)\n  - System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.RuntimeVariables(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  - System.Linq.Expressions.Expression.RuntimeVariables(System.Linq.Expressions.ParameterExpression[])\n  - System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])\n  - System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})\n  - System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])\n  - System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])\n  - System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})\n  - System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])\n  - System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.SymbolDocument(System.String)\n  - System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid)\n  - System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid)\n  - System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid,System.Guid)\n  - System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression,System.Type)\n  - System.Linq.Expressions.Expression.ToString\n  - System.Linq.Expressions.Expression.TryCatch(System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])\n  - System.Linq.Expressions.Expression.TryCatchFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])\n  - System.Linq.Expressions.Expression.TryFault(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.TryFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.TryGetActionType(System.Type[],System.Type@)\n  - System.Linq.Expressions.Expression.TryGetFuncType(System.Type[],System.Type@)\n  - System.Linq.Expressions.Expression.TypeAs(System.Linq.Expressions.Expression,System.Type)\n  - System.Linq.Expressions.Expression.TypeEqual(System.Linq.Expressions.Expression,System.Type)\n  - System.Linq.Expressions.Expression.TypeIs(System.Linq.Expressions.Expression,System.Type)\n  - System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.Unbox(System.Linq.Expressions.Expression,System.Type)\n  - System.Linq.Expressions.Expression.Variable(System.Type)\n  - System.Linq.Expressions.Expression.Variable(System.Type,System.String)\n  - System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: NewArrayExpression\n- uid: System.Linq.Expressions.NewArrayExpression.Expressions\n  commentId: P:System.Linq.Expressions.NewArrayExpression.Expressions\n  id: Expressions\n  parent: System.Linq.Expressions.NewArrayExpression\n  langs:\n  - csharp\n  - vb\n  name: Expressions\n  fullName: System.Linq.Expressions.NewArrayExpression.Expressions\n  type: Property\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Expressions\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 742\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  summary: \"\\n<p>Gets the bounds of the array if the value of the <xref href=\\\"System.Linq.Expressions.Expression.NodeType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is <xref href=\\\"System.Linq.Expressions.ExpressionType.NewArrayBounds\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, or the values to initialize the elements of the new array if the value of the <xref href=\\\"System.Linq.Expressions.Expression.NodeType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is <xref href=\\\"System.Linq.Expressions.ExpressionType.NewArrayInit\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public ReadOnlyCollection<Expression> Expressions { get; }\n    content.vb: Public ReadOnly Property Expressions As ReadOnlyCollection(Of Expression)\n    parameters: []\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression}\n      description: \"\\n<p>A <xref href=\\\"System.Collections.ObjectModel.ReadOnlyCollection`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of <xref href=\\\"System.Linq.Expressions.Expression\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects which represent either the bounds of the array or the initialization values.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: NewArrayExpression.Expressions\n- uid: System.Linq.Expressions.NewArrayExpression.Type\n  commentId: P:System.Linq.Expressions.NewArrayExpression.Type\n  id: Type\n  parent: System.Linq.Expressions.NewArrayExpression\n  langs:\n  - csharp\n  - vb\n  name: Type\n  fullName: System.Linq.Expressions.NewArrayExpression.Type\n  type: Property\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Type\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 743\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  summary: \"\\n<p>Gets the static type of the expression that this <xref href=\\\"System.Linq.Expressions.Expression\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> represents.</p>\\n\"\n  syntax:\n    content: public override sealed Type Type { get; }\n    content.vb: Public NotOverridable Overrides ReadOnly Property Type As Type\n    parameters: []\n    return:\n      type: System.Type\n      description: \"\\n<p>The <xref href=\\\"System.Linq.Expressions.NewArrayExpression.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents the static type of the expression.</p>\\n\"\n  overridden: System.Linq.Expressions.Expression.Type\n  modifiers.csharp:\n  - public\n  - override\n  - sealed\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - NotOverridable\n  - ReadOnly\n  nameWithType: NewArrayExpression.Type\n- uid: System.Linq.Expressions.NewArrayExpression.Accept(System.Linq.Expressions.ExpressionVisitor)\n  commentId: M:System.Linq.Expressions.NewArrayExpression.Accept(System.Linq.Expressions.ExpressionVisitor)\n  id: Accept(System.Linq.Expressions.ExpressionVisitor)\n  parent: System.Linq.Expressions.NewArrayExpression\n  langs:\n  - csharp\n  - vb\n  name: Accept(ExpressionVisitor)\n  fullName: System.Linq.Expressions.NewArrayExpression.Accept(System.Linq.Expressions.ExpressionVisitor)\n  type: Method\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Accept\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 744\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  summary: \"\\n<p>Dispatches to the specific visit method for this node type. For example, <xref href=\\\"System.Linq.Expressions.MethodCallExpression\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> calls the <xref href=\\\"System.Linq.Expressions.ExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: protected override Expression Accept(ExpressionVisitor visitor)\n    content.vb: Protected Overrides Function Accept(visitor As ExpressionVisitor) As Expression\n    parameters:\n    - id: visitor\n      type: System.Linq.Expressions.ExpressionVisitor\n      description: \"\\n<p>The visitor to visit this node with.</p>\\n\"\n    return:\n      type: System.Linq.Expressions.Expression\n      description: \"\\n<p>The result of visiting this node.</p>\\n\"\n  overridden: System.Linq.Expressions.Expression.Accept(System.Linq.Expressions.ExpressionVisitor)\n  modifiers.csharp:\n  - protected\n  - override\n  modifiers.vb:\n  - Protected\n  - Overrides\n  nameWithType: NewArrayExpression.Accept(ExpressionVisitor)\n- uid: System.Linq.Expressions.NewArrayExpression.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  commentId: M:System.Linq.Expressions.NewArrayExpression.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  id: Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.NewArrayExpression\n  langs:\n  - csharp\n  - vb\n  name: Update(IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.NewArrayExpression.Update(System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  type: Method\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Update\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 745\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  summary: \"\\n<p>Creates a new expression that is like this one, but using the supplied children. If all of the children are the same, it will return this expression.</p>\\n\"\n  syntax:\n    content: public NewArrayExpression Update(IEnumerable<Expression> expressions)\n    content.vb: Public Function Update(expressions As IEnumerable(Of Expression)) As NewArrayExpression\n    parameters:\n    - id: expressions\n      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}\n      description: \"\\n<p>The <xref href=\\\"System.Linq.Expressions.NewArrayExpression.Expressions\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property of the result.</p>\\n\"\n    return:\n      type: System.Linq.Expressions.NewArrayExpression\n      description: \"\\n<p>This expression if no children are changed or an expression with the updated children.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Linq.Expressions.NewArrayExpression.Update(System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: Update(IEnumerable(Of Expression))\n  nameWithType: NewArrayExpression.Update(IEnumerable<Expression>)\n  nameWithType.vb: NewArrayExpression.Update(IEnumerable(Of Expression))\nreferences:\n- uid: System.Linq.Expressions\n  isExternal: false\n  name: System.Linq.Expressions\n  fullName: System.Linq.Expressions\n  commentId: N:System.Linq.Expressions\n  nameWithType: System.Linq.Expressions\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Linq.Expressions.Expression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression\n  fullName: System.Linq.Expressions.Expression\n  commentId: T:System.Linq.Expressions.Expression\n  nameWithType: Expression\n- uid: System.Linq.Expressions.Expression.CanReduce\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: CanReduce\n  fullName: System.Linq.Expressions.Expression.CanReduce\n  commentId: P:System.Linq.Expressions.Expression.CanReduce\n  nameWithType: Expression.CanReduce\n- uid: System.Linq.Expressions.Expression.NodeType\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: NodeType\n  fullName: System.Linq.Expressions.Expression.NodeType\n  commentId: P:System.Linq.Expressions.Expression.NodeType\n  nameWithType: Expression.NodeType\n- uid: System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Add(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Add\n    fullName: System.Linq.Expressions.Expression.Add\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Add\n    fullName: System.Linq.Expressions.Expression.Add\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Add(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Add(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Add\n    fullName: System.Linq.Expressions.Expression.Add\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Add\n    fullName: System.Linq.Expressions.Expression.Add\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.Add(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: AddAssign(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: AddAssign\n    fullName: System.Linq.Expressions.Expression.AddAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: AddAssign\n    fullName: System.Linq.Expressions.Expression.AddAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.AddAssign(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: AddAssign(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: AddAssign\n    fullName: System.Linq.Expressions.Expression.AddAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: AddAssign\n    fullName: System.Linq.Expressions.Expression.AddAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.AddAssign(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: AddAssign(Expression, Expression, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: AddAssign\n    fullName: System.Linq.Expressions.Expression.AddAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: AddAssign\n    fullName: System.Linq.Expressions.Expression.AddAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.AddAssign(Expression, Expression, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: AddAssignChecked(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: AddAssignChecked\n    fullName: System.Linq.Expressions.Expression.AddAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: AddAssignChecked\n    fullName: System.Linq.Expressions.Expression.AddAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.AddAssignChecked(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: AddAssignChecked(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: AddAssignChecked\n    fullName: System.Linq.Expressions.Expression.AddAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: AddAssignChecked\n    fullName: System.Linq.Expressions.Expression.AddAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.AddAssignChecked(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: AddAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: AddAssignChecked\n    fullName: System.Linq.Expressions.Expression.AddAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: AddAssignChecked\n    fullName: System.Linq.Expressions.Expression.AddAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.AddAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: AddChecked(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: AddChecked\n    fullName: System.Linq.Expressions.Expression.AddChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: AddChecked\n    fullName: System.Linq.Expressions.Expression.AddChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.AddChecked(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: AddChecked(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: AddChecked\n    fullName: System.Linq.Expressions.Expression.AddChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: AddChecked\n    fullName: System.Linq.Expressions.Expression.AddChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.AddChecked(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: And(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: And\n    fullName: System.Linq.Expressions.Expression.And\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: And\n    fullName: System.Linq.Expressions.Expression.And\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.And(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: And(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: And\n    fullName: System.Linq.Expressions.Expression.And\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: And\n    fullName: System.Linq.Expressions.Expression.And\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.And(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: AndAlso(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: AndAlso\n    fullName: System.Linq.Expressions.Expression.AndAlso\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: AndAlso\n    fullName: System.Linq.Expressions.Expression.AndAlso\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.AndAlso(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: AndAlso(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: AndAlso\n    fullName: System.Linq.Expressions.Expression.AndAlso\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: AndAlso\n    fullName: System.Linq.Expressions.Expression.AndAlso\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.AndAlso(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: AndAssign(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: AndAssign\n    fullName: System.Linq.Expressions.Expression.AndAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: AndAssign\n    fullName: System.Linq.Expressions.Expression.AndAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.AndAssign(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: AndAssign(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: AndAssign\n    fullName: System.Linq.Expressions.Expression.AndAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: AndAssign\n    fullName: System.Linq.Expressions.Expression.AndAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.AndAssign(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: AndAssign(Expression, Expression, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: AndAssign\n    fullName: System.Linq.Expressions.Expression.AndAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: AndAssign\n    fullName: System.Linq.Expressions.Expression.AndAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.AndAssign(Expression, Expression, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ArrayAccess(Expression, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: ArrayAccess(Expression, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: ArrayAccess\n    fullName: System.Linq.Expressions.Expression.ArrayAccess\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: ArrayAccess\n    fullName: System.Linq.Expressions.Expression.ArrayAccess\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.ArrayAccess(Expression, IEnumerable<Expression>)\n  nameWithType.vb: Expression.ArrayAccess(Expression, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ArrayAccess(Expression, Expression[])\n  fullName: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression())\n  name.vb: ArrayAccess(Expression, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n    name: ArrayAccess\n    fullName: System.Linq.Expressions.Expression.ArrayAccess\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n    name: ArrayAccess\n    fullName: System.Linq.Expressions.Expression.ArrayAccess\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.ArrayAccess(Expression, Expression[])\n  nameWithType.vb: Expression.ArrayAccess(Expression, Expression())\n- uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ArrayIndex(Expression, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: ArrayIndex(Expression, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: ArrayIndex\n    fullName: System.Linq.Expressions.Expression.ArrayIndex\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: ArrayIndex\n    fullName: System.Linq.Expressions.Expression.ArrayIndex\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.ArrayIndex(Expression, IEnumerable<Expression>)\n  nameWithType.vb: Expression.ArrayIndex(Expression, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ArrayIndex(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: ArrayIndex\n    fullName: System.Linq.Expressions.Expression.ArrayIndex\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: ArrayIndex\n    fullName: System.Linq.Expressions.Expression.ArrayIndex\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.ArrayIndex(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ArrayIndex(Expression, Expression[])\n  fullName: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression())\n  name.vb: ArrayIndex(Expression, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n    name: ArrayIndex\n    fullName: System.Linq.Expressions.Expression.ArrayIndex\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n    name: ArrayIndex\n    fullName: System.Linq.Expressions.Expression.ArrayIndex\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.ArrayIndex(Expression, Expression[])\n  nameWithType.vb: Expression.ArrayIndex(Expression, Expression())\n- uid: System.Linq.Expressions.Expression.ArrayLength(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ArrayLength(Expression)\n  fullName: System.Linq.Expressions.Expression.ArrayLength(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ArrayLength(System.Linq.Expressions.Expression)\n    name: ArrayLength\n    fullName: System.Linq.Expressions.Expression.ArrayLength\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ArrayLength(System.Linq.Expressions.Expression)\n    name: ArrayLength\n    fullName: System.Linq.Expressions.Expression.ArrayLength\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ArrayLength(System.Linq.Expressions.Expression)\n  nameWithType: Expression.ArrayLength(Expression)\n- uid: System.Linq.Expressions.Expression.Assign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Assign(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Assign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Assign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Assign\n    fullName: System.Linq.Expressions.Expression.Assign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Assign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Assign\n    fullName: System.Linq.Expressions.Expression.Assign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Assign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Assign(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Bind(System.Reflection.MemberInfo,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Bind(MemberInfo, Expression)\n  fullName: System.Linq.Expressions.Expression.Bind(System.Reflection.MemberInfo, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Bind(System.Reflection.MemberInfo,System.Linq.Expressions.Expression)\n    name: Bind\n    fullName: System.Linq.Expressions.Expression.Bind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Bind(System.Reflection.MemberInfo,System.Linq.Expressions.Expression)\n    name: Bind\n    fullName: System.Linq.Expressions.Expression.Bind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Bind(System.Reflection.MemberInfo,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Bind(MemberInfo, Expression)\n- uid: System.Linq.Expressions.Expression.Bind(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Bind(MethodInfo, Expression)\n  fullName: System.Linq.Expressions.Expression.Bind(System.Reflection.MethodInfo, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Bind(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)\n    name: Bind\n    fullName: System.Linq.Expressions.Expression.Bind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Bind(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)\n    name: Bind\n    fullName: System.Linq.Expressions.Expression.Bind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Bind(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Bind(MethodInfo, Expression)\n- uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Block(IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: Block(IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.Block(IEnumerable<Expression>)\n  nameWithType.vb: Expression.Block(IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Block(IEnumerable<ParameterExpression>, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression), System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: Block(IEnumerable(Of ParameterExpression), IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.Block(IEnumerable<ParameterExpression>, IEnumerable<Expression>)\n  nameWithType.vb: Expression.Block(IEnumerable(Of ParameterExpression), IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Block(IEnumerable<ParameterExpression>, Expression[])\n  fullName: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression), System.Linq.Expressions.Expression())\n  name.vb: Block(IEnumerable(Of ParameterExpression), Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])\n  nameWithType: Expression.Block(IEnumerable<ParameterExpression>, Expression[])\n  nameWithType.vb: Expression.Block(IEnumerable(Of ParameterExpression), Expression())\n- uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Block(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Block(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Block(Expression, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Block(Expression, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Block(Expression, Expression, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Block(Expression, Expression, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Block(Expression, Expression, Expression, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Block(Expression, Expression, Expression, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Block(Expression[])\n  fullName: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression())\n  name.vb: Block(Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression[])\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression[])\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression[])\n  nameWithType: Expression.Block(Expression[])\n  nameWithType.vb: Expression.Block(Expression())\n- uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Block(Type, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.Block(System.Type, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.Block(System.Type, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: Block(Type, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.Block(Type, IEnumerable<Expression>)\n  nameWithType.vb: Expression.Block(Type, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Block(Type, IEnumerable<ParameterExpression>, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.Block(System.Type, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.Block(System.Type, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression), System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: Block(Type, IEnumerable(Of ParameterExpression), IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.Block(Type, IEnumerable<ParameterExpression>, IEnumerable<Expression>)\n  nameWithType.vb: Expression.Block(Type, IEnumerable(Of ParameterExpression), IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Block(Type, IEnumerable<ParameterExpression>, Expression[])\n  fullName: System.Linq.Expressions.Expression.Block(System.Type, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.Block(System.Type, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression), System.Linq.Expressions.Expression())\n  name.vb: Block(Type, IEnumerable(Of ParameterExpression), Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])\n  nameWithType: Expression.Block(Type, IEnumerable<ParameterExpression>, Expression[])\n  nameWithType.vb: Expression.Block(Type, IEnumerable(Of ParameterExpression), Expression())\n- uid: System.Linq.Expressions.Expression.Block(System.Type,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Block(Type, Expression[])\n  fullName: System.Linq.Expressions.Expression.Block(System.Type, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.Block(System.Type, System.Linq.Expressions.Expression())\n  name.vb: Block(Type, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Block(System.Type,System.Linq.Expressions.Expression[])\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Block(System.Type,System.Linq.Expressions.Expression[])\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Block(System.Type,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.Block(Type, Expression[])\n  nameWithType.vb: Expression.Block(Type, Expression())\n- uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Break(LabelTarget)\n  fullName: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget)\n    name: Break\n    fullName: System.Linq.Expressions.Expression.Break\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget)\n    name: Break\n    fullName: System.Linq.Expressions.Expression.Break\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget)\n  nameWithType: Expression.Break(LabelTarget)\n- uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Break(LabelTarget, Expression)\n  fullName: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n    name: Break\n    fullName: System.Linq.Expressions.Expression.Break\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n    name: Break\n    fullName: System.Linq.Expressions.Expression.Break\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Break(LabelTarget, Expression)\n- uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Break(LabelTarget, Expression, Type)\n  fullName: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget, System.Linq.Expressions.Expression, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n    name: Break\n    fullName: System.Linq.Expressions.Expression.Break\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n    name: Break\n    fullName: System.Linq.Expressions.Expression.Break\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n  nameWithType: Expression.Break(LabelTarget, Expression, Type)\n- uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Break(LabelTarget, Type)\n  fullName: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Type)\n    name: Break\n    fullName: System.Linq.Expressions.Expression.Break\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Type)\n    name: Break\n    fullName: System.Linq.Expressions.Expression.Break\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Type)\n  nameWithType: Expression.Break(LabelTarget, Type)\n- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Call(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.Call(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Call(Expression, MethodInfo, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: Call(Expression, MethodInfo, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.Call(Expression, MethodInfo, IEnumerable<Expression>)\n  nameWithType.vb: Expression.Call(Expression, MethodInfo, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Call(Expression, MethodInfo, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Call(Expression, MethodInfo, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Call(Expression, MethodInfo, Expression, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Call(Expression, MethodInfo, Expression, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Call(Expression, MethodInfo, Expression[])\n  fullName: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.Expression())\n  name.vb: Call(Expression, MethodInfo, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.Call(Expression, MethodInfo, Expression[])\n  nameWithType.vb: Expression.Call(Expression, MethodInfo, Expression())\n- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.String,System.Type[],System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Call(Expression, String, Type[], Expression[])\n  fullName: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.String, System.Type[], System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.String, System.Type(), System.Linq.Expressions.Expression())\n  name.vb: Call(Expression, String, Type(), Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.String,System.Type[],System.Linq.Expressions.Expression[])\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.String,System.Type[],System.Linq.Expressions.Expression[])\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.String,System.Type[],System.Linq.Expressions.Expression[])\n  nameWithType: Expression.Call(Expression, String, Type[], Expression[])\n  nameWithType.vb: Expression.Call(Expression, String, Type(), Expression())\n- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Call(MethodInfo, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: Call(MethodInfo, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.Call(MethodInfo, IEnumerable<Expression>)\n  nameWithType.vb: Expression.Call(MethodInfo, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Call(MethodInfo, Expression)\n  fullName: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Call(MethodInfo, Expression)\n- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Call(MethodInfo, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Call(MethodInfo, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Call(MethodInfo, Expression, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Call(MethodInfo, Expression, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Call(MethodInfo, Expression, Expression, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Call(MethodInfo, Expression, Expression, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Call(MethodInfo, Expression, Expression, Expression, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Call(MethodInfo, Expression, Expression, Expression, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Call(MethodInfo, Expression[])\n  fullName: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Linq.Expressions.Expression())\n  name.vb: Call(MethodInfo, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.Call(MethodInfo, Expression[])\n  nameWithType.vb: Expression.Call(MethodInfo, Expression())\n- uid: System.Linq.Expressions.Expression.Call(System.Type,System.String,System.Type[],System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Call(Type, String, Type[], Expression[])\n  fullName: System.Linq.Expressions.Expression.Call(System.Type, System.String, System.Type[], System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.Call(System.Type, System.String, System.Type(), System.Linq.Expressions.Expression())\n  name.vb: Call(Type, String, Type(), Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Call(System.Type,System.String,System.Type[],System.Linq.Expressions.Expression[])\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Call(System.Type,System.String,System.Type[],System.Linq.Expressions.Expression[])\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Call(System.Type,System.String,System.Type[],System.Linq.Expressions.Expression[])\n  nameWithType: Expression.Call(Type, String, Type[], Expression[])\n  nameWithType.vb: Expression.Call(Type, String, Type(), Expression())\n- uid: System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Catch(ParameterExpression, Expression)\n  fullName: System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)\n    name: Catch\n    fullName: System.Linq.Expressions.Expression.Catch\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)\n    name: Catch\n    fullName: System.Linq.Expressions.Expression.Catch\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Catch(ParameterExpression, Expression)\n- uid: System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Catch(ParameterExpression, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Catch\n    fullName: System.Linq.Expressions.Expression.Catch\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Catch\n    fullName: System.Linq.Expressions.Expression.Catch\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Catch(ParameterExpression, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Catch(Type, Expression)\n  fullName: System.Linq.Expressions.Expression.Catch(System.Type, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression)\n    name: Catch\n    fullName: System.Linq.Expressions.Expression.Catch\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression)\n    name: Catch\n    fullName: System.Linq.Expressions.Expression.Catch\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Catch(Type, Expression)\n- uid: System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Catch(Type, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Catch(System.Type, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Catch\n    fullName: System.Linq.Expressions.Expression.Catch\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Catch\n    fullName: System.Linq.Expressions.Expression.Catch\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Catch(Type, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.ClearDebugInfo(System.Linq.Expressions.SymbolDocumentInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ClearDebugInfo(SymbolDocumentInfo)\n  fullName: System.Linq.Expressions.Expression.ClearDebugInfo(System.Linq.Expressions.SymbolDocumentInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ClearDebugInfo(System.Linq.Expressions.SymbolDocumentInfo)\n    name: ClearDebugInfo\n    fullName: System.Linq.Expressions.Expression.ClearDebugInfo\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.SymbolDocumentInfo\n    name: SymbolDocumentInfo\n    fullName: System.Linq.Expressions.SymbolDocumentInfo\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ClearDebugInfo(System.Linq.Expressions.SymbolDocumentInfo)\n    name: ClearDebugInfo\n    fullName: System.Linq.Expressions.Expression.ClearDebugInfo\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.SymbolDocumentInfo\n    name: SymbolDocumentInfo\n    fullName: System.Linq.Expressions.SymbolDocumentInfo\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ClearDebugInfo(System.Linq.Expressions.SymbolDocumentInfo)\n  nameWithType: Expression.ClearDebugInfo(SymbolDocumentInfo)\n- uid: System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Coalesce(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Coalesce\n    fullName: System.Linq.Expressions.Expression.Coalesce\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Coalesce\n    fullName: System.Linq.Expressions.Expression.Coalesce\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Coalesce(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Coalesce(Expression, Expression, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)\n    name: Coalesce\n    fullName: System.Linq.Expressions.Expression.Coalesce\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)\n    name: Coalesce\n    fullName: System.Linq.Expressions.Expression.Coalesce\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.Coalesce(Expression, Expression, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Condition(Expression, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Condition\n    fullName: System.Linq.Expressions.Expression.Condition\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Condition\n    fullName: System.Linq.Expressions.Expression.Condition\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Condition(Expression, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Condition(Expression, Expression, Expression, Type)\n  fullName: System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Type)\n    name: Condition\n    fullName: System.Linq.Expressions.Expression.Condition\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Type)\n    name: Condition\n    fullName: System.Linq.Expressions.Expression.Condition\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Type)\n  nameWithType: Expression.Condition(Expression, Expression, Expression, Type)\n- uid: System.Linq.Expressions.Expression.Constant(System.Object)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Constant(Object)\n  fullName: System.Linq.Expressions.Expression.Constant(System.Object)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Constant(System.Object)\n    name: Constant\n    fullName: System.Linq.Expressions.Expression.Constant\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Constant(System.Object)\n    name: Constant\n    fullName: System.Linq.Expressions.Expression.Constant\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Constant(System.Object)\n  nameWithType: Expression.Constant(Object)\n- uid: System.Linq.Expressions.Expression.Constant(System.Object,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Constant(Object, Type)\n  fullName: System.Linq.Expressions.Expression.Constant(System.Object, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Constant(System.Object,System.Type)\n    name: Constant\n    fullName: System.Linq.Expressions.Expression.Constant\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Constant(System.Object,System.Type)\n    name: Constant\n    fullName: System.Linq.Expressions.Expression.Constant\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Constant(System.Object,System.Type)\n  nameWithType: Expression.Constant(Object, Type)\n- uid: System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Continue(LabelTarget)\n  fullName: System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget)\n    name: Continue\n    fullName: System.Linq.Expressions.Expression.Continue\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget)\n    name: Continue\n    fullName: System.Linq.Expressions.Expression.Continue\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget)\n  nameWithType: Expression.Continue(LabelTarget)\n- uid: System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Continue(LabelTarget, Type)\n  fullName: System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget,System.Type)\n    name: Continue\n    fullName: System.Linq.Expressions.Expression.Continue\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget,System.Type)\n    name: Continue\n    fullName: System.Linq.Expressions.Expression.Continue\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget,System.Type)\n  nameWithType: Expression.Continue(LabelTarget, Type)\n- uid: System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Convert(Expression, Type)\n  fullName: System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type)\n    name: Convert\n    fullName: System.Linq.Expressions.Expression.Convert\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type)\n    name: Convert\n    fullName: System.Linq.Expressions.Expression.Convert\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type)\n  nameWithType: Expression.Convert(Expression, Type)\n- uid: System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Convert(Expression, Type, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression, System.Type, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n    name: Convert\n    fullName: System.Linq.Expressions.Expression.Convert\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n    name: Convert\n    fullName: System.Linq.Expressions.Expression.Convert\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n  nameWithType: Expression.Convert(Expression, Type, MethodInfo)\n- uid: System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ConvertChecked(Expression, Type)\n  fullName: System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type)\n    name: ConvertChecked\n    fullName: System.Linq.Expressions.Expression.ConvertChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type)\n    name: ConvertChecked\n    fullName: System.Linq.Expressions.Expression.ConvertChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type)\n  nameWithType: Expression.ConvertChecked(Expression, Type)\n- uid: System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ConvertChecked(Expression, Type, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression, System.Type, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n    name: ConvertChecked\n    fullName: System.Linq.Expressions.Expression.ConvertChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n    name: ConvertChecked\n    fullName: System.Linq.Expressions.Expression.ConvertChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n  nameWithType: Expression.ConvertChecked(Expression, Type, MethodInfo)\n- uid: System.Linq.Expressions.Expression.DebugInfo(System.Linq.Expressions.SymbolDocumentInfo,System.Int32,System.Int32,System.Int32,System.Int32)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: DebugInfo(SymbolDocumentInfo, Int32, Int32, Int32, Int32)\n  fullName: System.Linq.Expressions.Expression.DebugInfo(System.Linq.Expressions.SymbolDocumentInfo, System.Int32, System.Int32, System.Int32, System.Int32)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.DebugInfo(System.Linq.Expressions.SymbolDocumentInfo,System.Int32,System.Int32,System.Int32,System.Int32)\n    name: DebugInfo\n    fullName: System.Linq.Expressions.Expression.DebugInfo\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.SymbolDocumentInfo\n    name: SymbolDocumentInfo\n    fullName: System.Linq.Expressions.SymbolDocumentInfo\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.DebugInfo(System.Linq.Expressions.SymbolDocumentInfo,System.Int32,System.Int32,System.Int32,System.Int32)\n    name: DebugInfo\n    fullName: System.Linq.Expressions.Expression.DebugInfo\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.SymbolDocumentInfo\n    name: SymbolDocumentInfo\n    fullName: System.Linq.Expressions.SymbolDocumentInfo\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.DebugInfo(System.Linq.Expressions.SymbolDocumentInfo,System.Int32,System.Int32,System.Int32,System.Int32)\n  nameWithType: Expression.DebugInfo(SymbolDocumentInfo, Int32, Int32, Int32, Int32)\n- uid: System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Decrement(Expression)\n  fullName: System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression)\n    name: Decrement\n    fullName: System.Linq.Expressions.Expression.Decrement\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression)\n    name: Decrement\n    fullName: System.Linq.Expressions.Expression.Decrement\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression)\n  nameWithType: Expression.Decrement(Expression)\n- uid: System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Decrement(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Decrement\n    fullName: System.Linq.Expressions.Expression.Decrement\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Decrement\n    fullName: System.Linq.Expressions.Expression.Decrement\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.Decrement(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.Default(System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Default(Type)\n  fullName: System.Linq.Expressions.Expression.Default(System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Default(System.Type)\n    name: Default\n    fullName: System.Linq.Expressions.Expression.Default\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Default(System.Type)\n    name: Default\n    fullName: System.Linq.Expressions.Expression.Default\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Default(System.Type)\n  nameWithType: Expression.Default(Type)\n- uid: System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Divide(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Divide\n    fullName: System.Linq.Expressions.Expression.Divide\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Divide\n    fullName: System.Linq.Expressions.Expression.Divide\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Divide(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Divide(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Divide\n    fullName: System.Linq.Expressions.Expression.Divide\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Divide\n    fullName: System.Linq.Expressions.Expression.Divide\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.Divide(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: DivideAssign(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: DivideAssign\n    fullName: System.Linq.Expressions.Expression.DivideAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: DivideAssign\n    fullName: System.Linq.Expressions.Expression.DivideAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.DivideAssign(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: DivideAssign(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: DivideAssign\n    fullName: System.Linq.Expressions.Expression.DivideAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: DivideAssign\n    fullName: System.Linq.Expressions.Expression.DivideAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.DivideAssign(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: DivideAssign(Expression, Expression, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: DivideAssign\n    fullName: System.Linq.Expressions.Expression.DivideAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: DivideAssign\n    fullName: System.Linq.Expressions.Expression.DivideAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.DivideAssign(Expression, Expression, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ElementInit(MethodInfo, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: ElementInit(MethodInfo, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: ElementInit\n    fullName: System.Linq.Expressions.Expression.ElementInit\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: ElementInit\n    fullName: System.Linq.Expressions.Expression.ElementInit\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.ElementInit(MethodInfo, IEnumerable<Expression>)\n  nameWithType.vb: Expression.ElementInit(MethodInfo, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ElementInit(MethodInfo, Expression[])\n  fullName: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo, System.Linq.Expressions.Expression())\n  name.vb: ElementInit(MethodInfo, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n    name: ElementInit\n    fullName: System.Linq.Expressions.Expression.ElementInit\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n    name: ElementInit\n    fullName: System.Linq.Expressions.Expression.ElementInit\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.ElementInit(MethodInfo, Expression[])\n  nameWithType.vb: Expression.ElementInit(MethodInfo, Expression())\n- uid: System.Linq.Expressions.Expression.Empty\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Empty()\n  fullName: System.Linq.Expressions.Expression.Empty()\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Empty\n    name: Empty\n    fullName: System.Linq.Expressions.Expression.Empty\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Empty\n    name: Empty\n    fullName: System.Linq.Expressions.Expression.Empty\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Empty\n  nameWithType: Expression.Empty()\n- uid: System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Equal(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Equal\n    fullName: System.Linq.Expressions.Expression.Equal\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Equal\n    fullName: System.Linq.Expressions.Expression.Equal\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Equal(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Equal(Expression, Expression, Boolean, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Boolean, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n    name: Equal\n    fullName: System.Linq.Expressions.Expression.Equal\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n    name: Equal\n    fullName: System.Linq.Expressions.Expression.Equal\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  nameWithType: Expression.Equal(Expression, Expression, Boolean, MethodInfo)\n- uid: System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ExclusiveOr(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: ExclusiveOr\n    fullName: System.Linq.Expressions.Expression.ExclusiveOr\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: ExclusiveOr\n    fullName: System.Linq.Expressions.Expression.ExclusiveOr\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.ExclusiveOr(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ExclusiveOr(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: ExclusiveOr\n    fullName: System.Linq.Expressions.Expression.ExclusiveOr\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: ExclusiveOr\n    fullName: System.Linq.Expressions.Expression.ExclusiveOr\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.ExclusiveOr(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ExclusiveOrAssign(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: ExclusiveOrAssign\n    fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: ExclusiveOrAssign\n    fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.ExclusiveOrAssign(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ExclusiveOrAssign(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: ExclusiveOrAssign\n    fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: ExclusiveOrAssign\n    fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.ExclusiveOrAssign(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ExclusiveOrAssign(Expression, Expression, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: ExclusiveOrAssign\n    fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: ExclusiveOrAssign\n    fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.ExclusiveOrAssign(Expression, Expression, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Field(Expression, FieldInfo)\n  fullName: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression, System.Reflection.FieldInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)\n    name: Field\n    fullName: System.Linq.Expressions.Expression.Field\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.FieldInfo\n    name: FieldInfo\n    fullName: System.Reflection.FieldInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)\n    name: Field\n    fullName: System.Linq.Expressions.Expression.Field\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.FieldInfo\n    name: FieldInfo\n    fullName: System.Reflection.FieldInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)\n  nameWithType: Expression.Field(Expression, FieldInfo)\n- uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.String)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Field(Expression, String)\n  fullName: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression, System.String)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.String)\n    name: Field\n    fullName: System.Linq.Expressions.Expression.Field\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.String)\n    name: Field\n    fullName: System.Linq.Expressions.Expression.Field\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.String)\n  nameWithType: Expression.Field(Expression, String)\n- uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Type,System.String)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Field(Expression, Type, String)\n  fullName: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression, System.Type, System.String)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Type,System.String)\n    name: Field\n    fullName: System.Linq.Expressions.Expression.Field\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Type,System.String)\n    name: Field\n    fullName: System.Linq.Expressions.Expression.Field\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Type,System.String)\n  nameWithType: Expression.Field(Expression, Type, String)\n- uid: System.Linq.Expressions.Expression.GetActionType(System.Type[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: GetActionType(Type[])\n  fullName: System.Linq.Expressions.Expression.GetActionType(System.Type[])\n  fullname.vb: System.Linq.Expressions.Expression.GetActionType(System.Type())\n  name.vb: GetActionType(Type())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.GetActionType(System.Type[])\n    name: GetActionType\n    fullName: System.Linq.Expressions.Expression.GetActionType\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.GetActionType(System.Type[])\n    name: GetActionType\n    fullName: System.Linq.Expressions.Expression.GetActionType\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.GetActionType(System.Type[])\n  nameWithType: Expression.GetActionType(Type[])\n  nameWithType.vb: Expression.GetActionType(Type())\n- uid: System.Linq.Expressions.Expression.GetDelegateType(System.Type[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: GetDelegateType(Type[])\n  fullName: System.Linq.Expressions.Expression.GetDelegateType(System.Type[])\n  fullname.vb: System.Linq.Expressions.Expression.GetDelegateType(System.Type())\n  name.vb: GetDelegateType(Type())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.GetDelegateType(System.Type[])\n    name: GetDelegateType\n    fullName: System.Linq.Expressions.Expression.GetDelegateType\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.GetDelegateType(System.Type[])\n    name: GetDelegateType\n    fullName: System.Linq.Expressions.Expression.GetDelegateType\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.GetDelegateType(System.Type[])\n  nameWithType: Expression.GetDelegateType(Type[])\n  nameWithType.vb: Expression.GetDelegateType(Type())\n- uid: System.Linq.Expressions.Expression.GetFuncType(System.Type[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: GetFuncType(Type[])\n  fullName: System.Linq.Expressions.Expression.GetFuncType(System.Type[])\n  fullname.vb: System.Linq.Expressions.Expression.GetFuncType(System.Type())\n  name.vb: GetFuncType(Type())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.GetFuncType(System.Type[])\n    name: GetFuncType\n    fullName: System.Linq.Expressions.Expression.GetFuncType\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.GetFuncType(System.Type[])\n    name: GetFuncType\n    fullName: System.Linq.Expressions.Expression.GetFuncType\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.GetFuncType(System.Type[])\n  nameWithType: Expression.GetFuncType(Type[])\n  nameWithType.vb: Expression.GetFuncType(Type())\n- uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Goto(LabelTarget)\n  fullName: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget)\n    name: Goto\n    fullName: System.Linq.Expressions.Expression.Goto\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget)\n    name: Goto\n    fullName: System.Linq.Expressions.Expression.Goto\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget)\n  nameWithType: Expression.Goto(LabelTarget)\n- uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Goto(LabelTarget, Expression)\n  fullName: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n    name: Goto\n    fullName: System.Linq.Expressions.Expression.Goto\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n    name: Goto\n    fullName: System.Linq.Expressions.Expression.Goto\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Goto(LabelTarget, Expression)\n- uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Goto(LabelTarget, Expression, Type)\n  fullName: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget, System.Linq.Expressions.Expression, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n    name: Goto\n    fullName: System.Linq.Expressions.Expression.Goto\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n    name: Goto\n    fullName: System.Linq.Expressions.Expression.Goto\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n  nameWithType: Expression.Goto(LabelTarget, Expression, Type)\n- uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Goto(LabelTarget, Type)\n  fullName: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Type)\n    name: Goto\n    fullName: System.Linq.Expressions.Expression.Goto\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Type)\n    name: Goto\n    fullName: System.Linq.Expressions.Expression.Goto\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Type)\n  nameWithType: Expression.Goto(LabelTarget, Type)\n- uid: System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: GreaterThan(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: GreaterThan\n    fullName: System.Linq.Expressions.Expression.GreaterThan\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: GreaterThan\n    fullName: System.Linq.Expressions.Expression.GreaterThan\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.GreaterThan(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: GreaterThan(Expression, Expression, Boolean, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Boolean, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n    name: GreaterThan\n    fullName: System.Linq.Expressions.Expression.GreaterThan\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n    name: GreaterThan\n    fullName: System.Linq.Expressions.Expression.GreaterThan\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  nameWithType: Expression.GreaterThan(Expression, Expression, Boolean, MethodInfo)\n- uid: System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: GreaterThanOrEqual(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: GreaterThanOrEqual\n    fullName: System.Linq.Expressions.Expression.GreaterThanOrEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: GreaterThanOrEqual\n    fullName: System.Linq.Expressions.Expression.GreaterThanOrEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.GreaterThanOrEqual(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: GreaterThanOrEqual(Expression, Expression, Boolean, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Boolean, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n    name: GreaterThanOrEqual\n    fullName: System.Linq.Expressions.Expression.GreaterThanOrEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n    name: GreaterThanOrEqual\n    fullName: System.Linq.Expressions.Expression.GreaterThanOrEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  nameWithType: Expression.GreaterThanOrEqual(Expression, Expression, Boolean, MethodInfo)\n- uid: System.Linq.Expressions.Expression.IfThen(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: IfThen(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.IfThen(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.IfThen(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: IfThen\n    fullName: System.Linq.Expressions.Expression.IfThen\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.IfThen(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: IfThen\n    fullName: System.Linq.Expressions.Expression.IfThen\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.IfThen(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.IfThen(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.IfThenElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: IfThenElse(Expression, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.IfThenElse(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.IfThenElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: IfThenElse\n    fullName: System.Linq.Expressions.Expression.IfThenElse\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.IfThenElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: IfThenElse\n    fullName: System.Linq.Expressions.Expression.IfThenElse\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.IfThenElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.IfThenElse(Expression, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Increment(Expression)\n  fullName: System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression)\n    name: Increment\n    fullName: System.Linq.Expressions.Expression.Increment\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression)\n    name: Increment\n    fullName: System.Linq.Expressions.Expression.Increment\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression)\n  nameWithType: Expression.Increment(Expression)\n- uid: System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Increment(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Increment\n    fullName: System.Linq.Expressions.Expression.Increment\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Increment\n    fullName: System.Linq.Expressions.Expression.Increment\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.Increment(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Invoke(Expression, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: Invoke(Expression, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Invoke\n    fullName: System.Linq.Expressions.Expression.Invoke\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Invoke\n    fullName: System.Linq.Expressions.Expression.Invoke\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.Invoke(Expression, IEnumerable<Expression>)\n  nameWithType.vb: Expression.Invoke(Expression, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Invoke(Expression, Expression[])\n  fullName: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression())\n  name.vb: Invoke(Expression, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n    name: Invoke\n    fullName: System.Linq.Expressions.Expression.Invoke\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n    name: Invoke\n    fullName: System.Linq.Expressions.Expression.Invoke\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.Invoke(Expression, Expression[])\n  nameWithType.vb: Expression.Invoke(Expression, Expression())\n- uid: System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: IsFalse(Expression)\n  fullName: System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression)\n    name: IsFalse\n    fullName: System.Linq.Expressions.Expression.IsFalse\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression)\n    name: IsFalse\n    fullName: System.Linq.Expressions.Expression.IsFalse\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression)\n  nameWithType: Expression.IsFalse(Expression)\n- uid: System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: IsFalse(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: IsFalse\n    fullName: System.Linq.Expressions.Expression.IsFalse\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: IsFalse\n    fullName: System.Linq.Expressions.Expression.IsFalse\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.IsFalse(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: IsTrue(Expression)\n  fullName: System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression)\n    name: IsTrue\n    fullName: System.Linq.Expressions.Expression.IsTrue\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression)\n    name: IsTrue\n    fullName: System.Linq.Expressions.Expression.IsTrue\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression)\n  nameWithType: Expression.IsTrue(Expression)\n- uid: System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: IsTrue(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: IsTrue\n    fullName: System.Linq.Expressions.Expression.IsTrue\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: IsTrue\n    fullName: System.Linq.Expressions.Expression.IsTrue\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.IsTrue(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.Label\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Label()\n  fullName: System.Linq.Expressions.Expression.Label()\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Label\n    name: Label\n    fullName: System.Linq.Expressions.Expression.Label\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Label\n    name: Label\n    fullName: System.Linq.Expressions.Expression.Label\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Label\n  nameWithType: Expression.Label()\n- uid: System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Label(LabelTarget)\n  fullName: System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget)\n    name: Label\n    fullName: System.Linq.Expressions.Expression.Label\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget)\n    name: Label\n    fullName: System.Linq.Expressions.Expression.Label\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget)\n  nameWithType: Expression.Label(LabelTarget)\n- uid: System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Label(LabelTarget, Expression)\n  fullName: System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n    name: Label\n    fullName: System.Linq.Expressions.Expression.Label\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n    name: Label\n    fullName: System.Linq.Expressions.Expression.Label\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Label(LabelTarget, Expression)\n- uid: System.Linq.Expressions.Expression.Label(System.String)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Label(String)\n  fullName: System.Linq.Expressions.Expression.Label(System.String)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Label(System.String)\n    name: Label\n    fullName: System.Linq.Expressions.Expression.Label\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Label(System.String)\n    name: Label\n    fullName: System.Linq.Expressions.Expression.Label\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Label(System.String)\n  nameWithType: Expression.Label(String)\n- uid: System.Linq.Expressions.Expression.Label(System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Label(Type)\n  fullName: System.Linq.Expressions.Expression.Label(System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Label(System.Type)\n    name: Label\n    fullName: System.Linq.Expressions.Expression.Label\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Label(System.Type)\n    name: Label\n    fullName: System.Linq.Expressions.Expression.Label\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Label(System.Type)\n  nameWithType: Expression.Label(Type)\n- uid: System.Linq.Expressions.Expression.Label(System.Type,System.String)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Label(Type, String)\n  fullName: System.Linq.Expressions.Expression.Label(System.Type, System.String)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Label(System.Type,System.String)\n    name: Label\n    fullName: System.Linq.Expressions.Expression.Label\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Label(System.Type,System.String)\n    name: Label\n    fullName: System.Linq.Expressions.Expression.Label\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Label(System.Type,System.String)\n  nameWithType: Expression.Label(Type, String)\n- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda(Expression, Boolean, IEnumerable<ParameterExpression>)\n  fullName: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.Boolean, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.Boolean, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))\n  name.vb: Lambda(Expression, Boolean, IEnumerable(Of ParameterExpression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  nameWithType: Expression.Lambda(Expression, Boolean, IEnumerable<ParameterExpression>)\n  nameWithType.vb: Expression.Lambda(Expression, Boolean, IEnumerable(Of ParameterExpression))\n- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda(Expression, Boolean, ParameterExpression[])\n  fullName: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.Boolean, System.Linq.Expressions.ParameterExpression[])\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.Boolean, System.Linq.Expressions.ParameterExpression())\n  name.vb: Lambda(Expression, Boolean, ParameterExpression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n  nameWithType: Expression.Lambda(Expression, Boolean, ParameterExpression[])\n  nameWithType.vb: Expression.Lambda(Expression, Boolean, ParameterExpression())\n- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda(Expression, IEnumerable<ParameterExpression>)\n  fullName: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))\n  name.vb: Lambda(Expression, IEnumerable(Of ParameterExpression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  nameWithType: Expression.Lambda(Expression, IEnumerable<ParameterExpression>)\n  nameWithType.vb: Expression.Lambda(Expression, IEnumerable(Of ParameterExpression))\n- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Lambda(Expression, ParameterExpression[])\n  fullName: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.Linq.Expressions.ParameterExpression[])\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.Linq.Expressions.ParameterExpression())\n  name.vb: Lambda(Expression, ParameterExpression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n  nameWithType: Expression.Lambda(Expression, ParameterExpression[])\n  nameWithType.vb: Expression.Lambda(Expression, ParameterExpression())\n- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda(Expression, String, Boolean, IEnumerable<ParameterExpression>)\n  fullName: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.String, System.Boolean, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.String, System.Boolean, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))\n  name.vb: Lambda(Expression, String, Boolean, IEnumerable(Of ParameterExpression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  nameWithType: Expression.Lambda(Expression, String, Boolean, IEnumerable<ParameterExpression>)\n  nameWithType.vb: Expression.Lambda(Expression, String, Boolean, IEnumerable(Of ParameterExpression))\n- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda(Expression, String, IEnumerable<ParameterExpression>)\n  fullName: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.String, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.String, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))\n  name.vb: Lambda(Expression, String, IEnumerable(Of ParameterExpression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  nameWithType: Expression.Lambda(Expression, String, IEnumerable<ParameterExpression>)\n  nameWithType.vb: Expression.Lambda(Expression, String, IEnumerable(Of ParameterExpression))\n- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda(Type, Expression, Boolean, IEnumerable<ParameterExpression>)\n  fullName: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.Boolean, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.Boolean, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))\n  name.vb: Lambda(Type, Expression, Boolean, IEnumerable(Of ParameterExpression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  nameWithType: Expression.Lambda(Type, Expression, Boolean, IEnumerable<ParameterExpression>)\n  nameWithType.vb: Expression.Lambda(Type, Expression, Boolean, IEnumerable(Of ParameterExpression))\n- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda(Type, Expression, Boolean, ParameterExpression[])\n  fullName: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.Boolean, System.Linq.Expressions.ParameterExpression[])\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.Boolean, System.Linq.Expressions.ParameterExpression())\n  name.vb: Lambda(Type, Expression, Boolean, ParameterExpression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n  nameWithType: Expression.Lambda(Type, Expression, Boolean, ParameterExpression[])\n  nameWithType.vb: Expression.Lambda(Type, Expression, Boolean, ParameterExpression())\n- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda(Type, Expression, IEnumerable<ParameterExpression>)\n  fullName: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))\n  name.vb: Lambda(Type, Expression, IEnumerable(Of ParameterExpression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  nameWithType: Expression.Lambda(Type, Expression, IEnumerable<ParameterExpression>)\n  nameWithType.vb: Expression.Lambda(Type, Expression, IEnumerable(Of ParameterExpression))\n- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda(Type, Expression, ParameterExpression[])\n  fullName: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.Linq.Expressions.ParameterExpression[])\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.Linq.Expressions.ParameterExpression())\n  name.vb: Lambda(Type, Expression, ParameterExpression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n  nameWithType: Expression.Lambda(Type, Expression, ParameterExpression[])\n  nameWithType.vb: Expression.Lambda(Type, Expression, ParameterExpression())\n- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda(Type, Expression, String, Boolean, IEnumerable<ParameterExpression>)\n  fullName: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.String, System.Boolean, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.String, System.Boolean, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))\n  name.vb: Lambda(Type, Expression, String, Boolean, IEnumerable(Of ParameterExpression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  nameWithType: Expression.Lambda(Type, Expression, String, Boolean, IEnumerable<ParameterExpression>)\n  nameWithType.vb: Expression.Lambda(Type, Expression, String, Boolean, IEnumerable(Of ParameterExpression))\n- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda(Type, Expression, String, IEnumerable<ParameterExpression>)\n  fullName: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.String, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.String, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))\n  name.vb: Lambda(Type, Expression, String, IEnumerable(Of ParameterExpression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  nameWithType: Expression.Lambda(Type, Expression, String, IEnumerable<ParameterExpression>)\n  nameWithType.vb: Expression.Lambda(Type, Expression, String, IEnumerable(Of ParameterExpression))\n- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda<TDelegate>(Expression, Boolean, IEnumerable<ParameterExpression>)\n  fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, System.Boolean, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(Of TDelegate)(System.Linq.Expressions.Expression, System.Boolean, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))\n  name.vb: Lambda(Of TDelegate)(Expression, Boolean, IEnumerable(Of ParameterExpression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda<TDelegate>\n    fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda(Of TDelegate)\n    fullName: System.Linq.Expressions.Expression.Lambda(Of TDelegate)\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  nameWithType: Expression.Lambda<TDelegate>(Expression, Boolean, IEnumerable<ParameterExpression>)\n  nameWithType.vb: Expression.Lambda(Of TDelegate)(Expression, Boolean, IEnumerable(Of ParameterExpression))\n- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda<TDelegate>(Expression, Boolean, ParameterExpression[])\n  fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, System.Boolean, System.Linq.Expressions.ParameterExpression[])\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(Of TDelegate)(System.Linq.Expressions.Expression, System.Boolean, System.Linq.Expressions.ParameterExpression())\n  name.vb: Lambda(Of TDelegate)(Expression, Boolean, ParameterExpression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n    name: Lambda<TDelegate>\n    fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n    name: Lambda(Of TDelegate)\n    fullName: System.Linq.Expressions.Expression.Lambda(Of TDelegate)\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n  nameWithType: Expression.Lambda<TDelegate>(Expression, Boolean, ParameterExpression[])\n  nameWithType.vb: Expression.Lambda(Of TDelegate)(Expression, Boolean, ParameterExpression())\n- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda<TDelegate>(Expression, IEnumerable<ParameterExpression>)\n  fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(Of TDelegate)(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))\n  name.vb: Lambda(Of TDelegate)(Expression, IEnumerable(Of ParameterExpression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda<TDelegate>\n    fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda(Of TDelegate)\n    fullName: System.Linq.Expressions.Expression.Lambda(Of TDelegate)\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  nameWithType: Expression.Lambda<TDelegate>(Expression, IEnumerable<ParameterExpression>)\n  nameWithType.vb: Expression.Lambda(Of TDelegate)(Expression, IEnumerable(Of ParameterExpression))\n- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Lambda<TDelegate>(Expression, ParameterExpression[])\n  fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, System.Linq.Expressions.ParameterExpression[])\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(Of TDelegate)(System.Linq.Expressions.Expression, System.Linq.Expressions.ParameterExpression())\n  name.vb: Lambda(Of TDelegate)(Expression, ParameterExpression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n    name: Lambda<TDelegate>\n    fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n    name: Lambda(Of TDelegate)\n    fullName: System.Linq.Expressions.Expression.Lambda(Of TDelegate)\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n  nameWithType: Expression.Lambda<TDelegate>(Expression, ParameterExpression[])\n  nameWithType.vb: Expression.Lambda(Of TDelegate)(Expression, ParameterExpression())\n- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda<TDelegate>(Expression, String, Boolean, IEnumerable<ParameterExpression>)\n  fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, System.String, System.Boolean, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(Of TDelegate)(System.Linq.Expressions.Expression, System.String, System.Boolean, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))\n  name.vb: Lambda(Of TDelegate)(Expression, String, Boolean, IEnumerable(Of ParameterExpression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda<TDelegate>\n    fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda(Of TDelegate)\n    fullName: System.Linq.Expressions.Expression.Lambda(Of TDelegate)\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  nameWithType: Expression.Lambda<TDelegate>(Expression, String, Boolean, IEnumerable<ParameterExpression>)\n  nameWithType.vb: Expression.Lambda(Of TDelegate)(Expression, String, Boolean, IEnumerable(Of ParameterExpression))\n- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda<TDelegate>(Expression, String, IEnumerable<ParameterExpression>)\n  fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, System.String, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(Of TDelegate)(System.Linq.Expressions.Expression, System.String, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))\n  name.vb: Lambda(Of TDelegate)(Expression, String, IEnumerable(Of ParameterExpression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda<TDelegate>\n    fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda(Of TDelegate)\n    fullName: System.Linq.Expressions.Expression.Lambda(Of TDelegate)\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  nameWithType: Expression.Lambda<TDelegate>(Expression, String, IEnumerable<ParameterExpression>)\n  nameWithType.vb: Expression.Lambda(Of TDelegate)(Expression, String, IEnumerable(Of ParameterExpression))\n- uid: System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: LeftShift(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: LeftShift\n    fullName: System.Linq.Expressions.Expression.LeftShift\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: LeftShift\n    fullName: System.Linq.Expressions.Expression.LeftShift\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.LeftShift(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: LeftShift(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: LeftShift\n    fullName: System.Linq.Expressions.Expression.LeftShift\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: LeftShift\n    fullName: System.Linq.Expressions.Expression.LeftShift\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.LeftShift(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: LeftShiftAssign(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: LeftShiftAssign\n    fullName: System.Linq.Expressions.Expression.LeftShiftAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: LeftShiftAssign\n    fullName: System.Linq.Expressions.Expression.LeftShiftAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.LeftShiftAssign(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: LeftShiftAssign(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: LeftShiftAssign\n    fullName: System.Linq.Expressions.Expression.LeftShiftAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: LeftShiftAssign\n    fullName: System.Linq.Expressions.Expression.LeftShiftAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.LeftShiftAssign(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: LeftShiftAssign(Expression, Expression, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: LeftShiftAssign\n    fullName: System.Linq.Expressions.Expression.LeftShiftAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: LeftShiftAssign\n    fullName: System.Linq.Expressions.Expression.LeftShiftAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.LeftShiftAssign(Expression, Expression, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: LessThan(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: LessThan\n    fullName: System.Linq.Expressions.Expression.LessThan\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: LessThan\n    fullName: System.Linq.Expressions.Expression.LessThan\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.LessThan(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: LessThan(Expression, Expression, Boolean, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Boolean, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n    name: LessThan\n    fullName: System.Linq.Expressions.Expression.LessThan\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n    name: LessThan\n    fullName: System.Linq.Expressions.Expression.LessThan\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  nameWithType: Expression.LessThan(Expression, Expression, Boolean, MethodInfo)\n- uid: System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: LessThanOrEqual(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: LessThanOrEqual\n    fullName: System.Linq.Expressions.Expression.LessThanOrEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: LessThanOrEqual\n    fullName: System.Linq.Expressions.Expression.LessThanOrEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.LessThanOrEqual(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: LessThanOrEqual(Expression, Expression, Boolean, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Boolean, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n    name: LessThanOrEqual\n    fullName: System.Linq.Expressions.Expression.LessThanOrEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n    name: LessThanOrEqual\n    fullName: System.Linq.Expressions.Expression.LessThanOrEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  nameWithType: Expression.LessThanOrEqual(Expression, Expression, Boolean, MethodInfo)\n- uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ListBind(MemberInfo, IEnumerable<ElementInit>)\n  fullName: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ElementInit>)\n  fullname.vb: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ElementInit))\n  name.vb: ListBind(MemberInfo, IEnumerable(Of ElementInit))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n    name: ListBind\n    fullName: System.Linq.Expressions.Expression.ListBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ElementInit\n    name: ElementInit\n    fullName: System.Linq.Expressions.ElementInit\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n    name: ListBind\n    fullName: System.Linq.Expressions.Expression.ListBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ElementInit\n    name: ElementInit\n    fullName: System.Linq.Expressions.ElementInit\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n  nameWithType: Expression.ListBind(MemberInfo, IEnumerable<ElementInit>)\n  nameWithType.vb: Expression.ListBind(MemberInfo, IEnumerable(Of ElementInit))\n- uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Linq.Expressions.ElementInit[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ListBind(MemberInfo, ElementInit[])\n  fullName: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo, System.Linq.Expressions.ElementInit[])\n  fullname.vb: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo, System.Linq.Expressions.ElementInit())\n  name.vb: ListBind(MemberInfo, ElementInit())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Linq.Expressions.ElementInit[])\n    name: ListBind\n    fullName: System.Linq.Expressions.Expression.ListBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ElementInit\n    name: ElementInit\n    fullName: System.Linq.Expressions.ElementInit\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Linq.Expressions.ElementInit[])\n    name: ListBind\n    fullName: System.Linq.Expressions.Expression.ListBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ElementInit\n    name: ElementInit\n    fullName: System.Linq.Expressions.ElementInit\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Linq.Expressions.ElementInit[])\n  nameWithType: Expression.ListBind(MemberInfo, ElementInit[])\n  nameWithType.vb: Expression.ListBind(MemberInfo, ElementInit())\n- uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ListBind(MethodInfo, IEnumerable<ElementInit>)\n  fullName: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ElementInit>)\n  fullname.vb: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ElementInit))\n  name.vb: ListBind(MethodInfo, IEnumerable(Of ElementInit))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n    name: ListBind\n    fullName: System.Linq.Expressions.Expression.ListBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ElementInit\n    name: ElementInit\n    fullName: System.Linq.Expressions.ElementInit\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n    name: ListBind\n    fullName: System.Linq.Expressions.Expression.ListBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ElementInit\n    name: ElementInit\n    fullName: System.Linq.Expressions.ElementInit\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n  nameWithType: Expression.ListBind(MethodInfo, IEnumerable<ElementInit>)\n  nameWithType.vb: Expression.ListBind(MethodInfo, IEnumerable(Of ElementInit))\n- uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Linq.Expressions.ElementInit[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ListBind(MethodInfo, ElementInit[])\n  fullName: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo, System.Linq.Expressions.ElementInit[])\n  fullname.vb: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo, System.Linq.Expressions.ElementInit())\n  name.vb: ListBind(MethodInfo, ElementInit())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Linq.Expressions.ElementInit[])\n    name: ListBind\n    fullName: System.Linq.Expressions.Expression.ListBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ElementInit\n    name: ElementInit\n    fullName: System.Linq.Expressions.ElementInit\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Linq.Expressions.ElementInit[])\n    name: ListBind\n    fullName: System.Linq.Expressions.Expression.ListBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ElementInit\n    name: ElementInit\n    fullName: System.Linq.Expressions.ElementInit\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Linq.Expressions.ElementInit[])\n  nameWithType: Expression.ListBind(MethodInfo, ElementInit[])\n  nameWithType.vb: Expression.ListBind(MethodInfo, ElementInit())\n- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ListInit(NewExpression, IEnumerable<ElementInit>)\n  fullName: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ElementInit>)\n  fullname.vb: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ElementInit))\n  name.vb: ListInit(NewExpression, IEnumerable(Of ElementInit))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n    name: ListInit\n    fullName: System.Linq.Expressions.Expression.ListInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ElementInit\n    name: ElementInit\n    fullName: System.Linq.Expressions.ElementInit\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n    name: ListInit\n    fullName: System.Linq.Expressions.Expression.ListInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ElementInit\n    name: ElementInit\n    fullName: System.Linq.Expressions.ElementInit\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n  nameWithType: Expression.ListInit(NewExpression, IEnumerable<ElementInit>)\n  nameWithType.vb: Expression.ListInit(NewExpression, IEnumerable(Of ElementInit))\n- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ListInit(NewExpression, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: ListInit(NewExpression, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: ListInit\n    fullName: System.Linq.Expressions.Expression.ListInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: ListInit\n    fullName: System.Linq.Expressions.Expression.ListInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.ListInit(NewExpression, IEnumerable<Expression>)\n  nameWithType.vb: Expression.ListInit(NewExpression, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.ElementInit[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ListInit(NewExpression, ElementInit[])\n  fullName: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Linq.Expressions.ElementInit[])\n  fullname.vb: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Linq.Expressions.ElementInit())\n  name.vb: ListInit(NewExpression, ElementInit())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.ElementInit[])\n    name: ListInit\n    fullName: System.Linq.Expressions.Expression.ListInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ElementInit\n    name: ElementInit\n    fullName: System.Linq.Expressions.ElementInit\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.ElementInit[])\n    name: ListInit\n    fullName: System.Linq.Expressions.Expression.ListInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ElementInit\n    name: ElementInit\n    fullName: System.Linq.Expressions.ElementInit\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.ElementInit[])\n  nameWithType: Expression.ListInit(NewExpression, ElementInit[])\n  nameWithType.vb: Expression.ListInit(NewExpression, ElementInit())\n- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ListInit(NewExpression, Expression[])\n  fullName: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Linq.Expressions.Expression())\n  name.vb: ListInit(NewExpression, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.Expression[])\n    name: ListInit\n    fullName: System.Linq.Expressions.Expression.ListInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.Expression[])\n    name: ListInit\n    fullName: System.Linq.Expressions.Expression.ListInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.ListInit(NewExpression, Expression[])\n  nameWithType.vb: Expression.ListInit(NewExpression, Expression())\n- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ListInit(NewExpression, MethodInfo, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: ListInit(NewExpression, MethodInfo, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: ListInit\n    fullName: System.Linq.Expressions.Expression.ListInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: ListInit\n    fullName: System.Linq.Expressions.Expression.ListInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.ListInit(NewExpression, MethodInfo, IEnumerable<Expression>)\n  nameWithType.vb: Expression.ListInit(NewExpression, MethodInfo, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ListInit(NewExpression, MethodInfo, Expression[])\n  fullName: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Reflection.MethodInfo, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Reflection.MethodInfo, System.Linq.Expressions.Expression())\n  name.vb: ListInit(NewExpression, MethodInfo, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n    name: ListInit\n    fullName: System.Linq.Expressions.Expression.ListInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n    name: ListInit\n    fullName: System.Linq.Expressions.Expression.ListInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.ListInit(NewExpression, MethodInfo, Expression[])\n  nameWithType.vb: Expression.ListInit(NewExpression, MethodInfo, Expression())\n- uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Loop(Expression)\n  fullName: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression)\n    name: Loop\n    fullName: System.Linq.Expressions.Expression.Loop\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression)\n    name: Loop\n    fullName: System.Linq.Expressions.Expression.Loop\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression)\n  nameWithType: Expression.Loop(Expression)\n- uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Loop(Expression, LabelTarget)\n  fullName: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression, System.Linq.Expressions.LabelTarget)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget)\n    name: Loop\n    fullName: System.Linq.Expressions.Expression.Loop\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget)\n    name: Loop\n    fullName: System.Linq.Expressions.Expression.Loop\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget)\n  nameWithType: Expression.Loop(Expression, LabelTarget)\n- uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.LabelTarget)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Loop(Expression, LabelTarget, LabelTarget)\n  fullName: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression, System.Linq.Expressions.LabelTarget, System.Linq.Expressions.LabelTarget)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.LabelTarget)\n    name: Loop\n    fullName: System.Linq.Expressions.Expression.Loop\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.LabelTarget)\n    name: Loop\n    fullName: System.Linq.Expressions.Expression.Loop\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.LabelTarget)\n  nameWithType: Expression.Loop(Expression, LabelTarget, LabelTarget)\n- uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: MakeBinary(ExpressionType, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: MakeBinary\n    fullName: System.Linq.Expressions.Expression.MakeBinary\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ExpressionType\n    name: ExpressionType\n    fullName: System.Linq.Expressions.ExpressionType\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: MakeBinary\n    fullName: System.Linq.Expressions.Expression.MakeBinary\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ExpressionType\n    name: ExpressionType\n    fullName: System.Linq.Expressions.ExpressionType\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.MakeBinary(ExpressionType, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MakeBinary(ExpressionType, Expression, Expression, Boolean, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Boolean, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n    name: MakeBinary\n    fullName: System.Linq.Expressions.Expression.MakeBinary\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ExpressionType\n    name: ExpressionType\n    fullName: System.Linq.Expressions.ExpressionType\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n    name: MakeBinary\n    fullName: System.Linq.Expressions.Expression.MakeBinary\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ExpressionType\n    name: ExpressionType\n    fullName: System.Linq.Expressions.ExpressionType\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  nameWithType: Expression.MakeBinary(ExpressionType, Expression, Expression, Boolean, MethodInfo)\n- uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MakeBinary(ExpressionType, Expression, Expression, Boolean, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Boolean, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: MakeBinary\n    fullName: System.Linq.Expressions.Expression.MakeBinary\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ExpressionType\n    name: ExpressionType\n    fullName: System.Linq.Expressions.ExpressionType\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: MakeBinary\n    fullName: System.Linq.Expressions.Expression.MakeBinary\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ExpressionType\n    name: ExpressionType\n    fullName: System.Linq.Expressions.ExpressionType\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.MakeBinary(ExpressionType, Expression, Expression, Boolean, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.MakeCatchBlock(System.Type,System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MakeCatchBlock(Type, ParameterExpression, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.MakeCatchBlock(System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MakeCatchBlock(System.Type,System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: MakeCatchBlock\n    fullName: System.Linq.Expressions.Expression.MakeCatchBlock\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MakeCatchBlock(System.Type,System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: MakeCatchBlock\n    fullName: System.Linq.Expressions.Expression.MakeCatchBlock\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MakeCatchBlock(System.Type,System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.MakeCatchBlock(Type, ParameterExpression, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.MakeGoto(System.Linq.Expressions.GotoExpressionKind,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MakeGoto(GotoExpressionKind, LabelTarget, Expression, Type)\n  fullName: System.Linq.Expressions.Expression.MakeGoto(System.Linq.Expressions.GotoExpressionKind, System.Linq.Expressions.LabelTarget, System.Linq.Expressions.Expression, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MakeGoto(System.Linq.Expressions.GotoExpressionKind,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n    name: MakeGoto\n    fullName: System.Linq.Expressions.Expression.MakeGoto\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.GotoExpressionKind\n    name: GotoExpressionKind\n    fullName: System.Linq.Expressions.GotoExpressionKind\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MakeGoto(System.Linq.Expressions.GotoExpressionKind,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n    name: MakeGoto\n    fullName: System.Linq.Expressions.Expression.MakeGoto\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.GotoExpressionKind\n    name: GotoExpressionKind\n    fullName: System.Linq.Expressions.GotoExpressionKind\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MakeGoto(System.Linq.Expressions.GotoExpressionKind,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n  nameWithType: Expression.MakeGoto(GotoExpressionKind, LabelTarget, Expression, Type)\n- uid: System.Linq.Expressions.Expression.MakeIndex(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MakeIndex(Expression, PropertyInfo, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.MakeIndex(System.Linq.Expressions.Expression, System.Reflection.PropertyInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.MakeIndex(System.Linq.Expressions.Expression, System.Reflection.PropertyInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: MakeIndex(Expression, PropertyInfo, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MakeIndex(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: MakeIndex\n    fullName: System.Linq.Expressions.Expression.MakeIndex\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.PropertyInfo\n    name: PropertyInfo\n    fullName: System.Reflection.PropertyInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MakeIndex(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: MakeIndex\n    fullName: System.Linq.Expressions.Expression.MakeIndex\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.PropertyInfo\n    name: PropertyInfo\n    fullName: System.Reflection.PropertyInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MakeIndex(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.MakeIndex(Expression, PropertyInfo, IEnumerable<Expression>)\n  nameWithType.vb: Expression.MakeIndex(Expression, PropertyInfo, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.MakeMemberAccess(System.Linq.Expressions.Expression,System.Reflection.MemberInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MakeMemberAccess(Expression, MemberInfo)\n  fullName: System.Linq.Expressions.Expression.MakeMemberAccess(System.Linq.Expressions.Expression, System.Reflection.MemberInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MakeMemberAccess(System.Linq.Expressions.Expression,System.Reflection.MemberInfo)\n    name: MakeMemberAccess\n    fullName: System.Linq.Expressions.Expression.MakeMemberAccess\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MakeMemberAccess(System.Linq.Expressions.Expression,System.Reflection.MemberInfo)\n    name: MakeMemberAccess\n    fullName: System.Linq.Expressions.Expression.MakeMemberAccess\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MakeMemberAccess(System.Linq.Expressions.Expression,System.Reflection.MemberInfo)\n  nameWithType: Expression.MakeMemberAccess(Expression, MemberInfo)\n- uid: System.Linq.Expressions.Expression.MakeTry(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.CatchBlock})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MakeTry(Type, Expression, Expression, Expression, IEnumerable<CatchBlock>)\n  fullName: System.Linq.Expressions.Expression.MakeTry(System.Type, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.CatchBlock>)\n  fullname.vb: System.Linq.Expressions.Expression.MakeTry(System.Type, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.CatchBlock))\n  name.vb: MakeTry(Type, Expression, Expression, Expression, IEnumerable(Of CatchBlock))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MakeTry(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.CatchBlock})\n    name: MakeTry\n    fullName: System.Linq.Expressions.Expression.MakeTry\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.CatchBlock\n    name: CatchBlock\n    fullName: System.Linq.Expressions.CatchBlock\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MakeTry(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.CatchBlock})\n    name: MakeTry\n    fullName: System.Linq.Expressions.Expression.MakeTry\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.CatchBlock\n    name: CatchBlock\n    fullName: System.Linq.Expressions.CatchBlock\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MakeTry(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.CatchBlock})\n  nameWithType: Expression.MakeTry(Type, Expression, Expression, Expression, IEnumerable<CatchBlock>)\n  nameWithType.vb: Expression.MakeTry(Type, Expression, Expression, Expression, IEnumerable(Of CatchBlock))\n- uid: System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MakeUnary(ExpressionType, Expression, Type)\n  fullName: System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType, System.Linq.Expressions.Expression, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type)\n    name: MakeUnary\n    fullName: System.Linq.Expressions.Expression.MakeUnary\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ExpressionType\n    name: ExpressionType\n    fullName: System.Linq.Expressions.ExpressionType\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type)\n    name: MakeUnary\n    fullName: System.Linq.Expressions.Expression.MakeUnary\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ExpressionType\n    name: ExpressionType\n    fullName: System.Linq.Expressions.ExpressionType\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type)\n  nameWithType: Expression.MakeUnary(ExpressionType, Expression, Type)\n- uid: System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MakeUnary(ExpressionType, Expression, Type, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType, System.Linq.Expressions.Expression, System.Type, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n    name: MakeUnary\n    fullName: System.Linq.Expressions.Expression.MakeUnary\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ExpressionType\n    name: ExpressionType\n    fullName: System.Linq.Expressions.ExpressionType\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n    name: MakeUnary\n    fullName: System.Linq.Expressions.Expression.MakeUnary\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ExpressionType\n    name: ExpressionType\n    fullName: System.Linq.Expressions.ExpressionType\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n  nameWithType: Expression.MakeUnary(ExpressionType, Expression, Type, MethodInfo)\n- uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MemberBind(MemberInfo, IEnumerable<MemberBinding>)\n  fullName: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.MemberBinding>)\n  fullname.vb: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.MemberBinding))\n  name.vb: MemberBind(MemberInfo, IEnumerable(Of MemberBinding))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n    name: MemberBind\n    fullName: System.Linq.Expressions.Expression.MemberBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.MemberBinding\n    name: MemberBinding\n    fullName: System.Linq.Expressions.MemberBinding\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n    name: MemberBind\n    fullName: System.Linq.Expressions.Expression.MemberBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.MemberBinding\n    name: MemberBinding\n    fullName: System.Linq.Expressions.MemberBinding\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n  nameWithType: Expression.MemberBind(MemberInfo, IEnumerable<MemberBinding>)\n  nameWithType.vb: Expression.MemberBind(MemberInfo, IEnumerable(Of MemberBinding))\n- uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Linq.Expressions.MemberBinding[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MemberBind(MemberInfo, MemberBinding[])\n  fullName: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo, System.Linq.Expressions.MemberBinding[])\n  fullname.vb: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo, System.Linq.Expressions.MemberBinding())\n  name.vb: MemberBind(MemberInfo, MemberBinding())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Linq.Expressions.MemberBinding[])\n    name: MemberBind\n    fullName: System.Linq.Expressions.Expression.MemberBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.MemberBinding\n    name: MemberBinding\n    fullName: System.Linq.Expressions.MemberBinding\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Linq.Expressions.MemberBinding[])\n    name: MemberBind\n    fullName: System.Linq.Expressions.Expression.MemberBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.MemberBinding\n    name: MemberBinding\n    fullName: System.Linq.Expressions.MemberBinding\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Linq.Expressions.MemberBinding[])\n  nameWithType: Expression.MemberBind(MemberInfo, MemberBinding[])\n  nameWithType.vb: Expression.MemberBind(MemberInfo, MemberBinding())\n- uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MemberBind(MethodInfo, IEnumerable<MemberBinding>)\n  fullName: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.MemberBinding>)\n  fullname.vb: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.MemberBinding))\n  name.vb: MemberBind(MethodInfo, IEnumerable(Of MemberBinding))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n    name: MemberBind\n    fullName: System.Linq.Expressions.Expression.MemberBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.MemberBinding\n    name: MemberBinding\n    fullName: System.Linq.Expressions.MemberBinding\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n    name: MemberBind\n    fullName: System.Linq.Expressions.Expression.MemberBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.MemberBinding\n    name: MemberBinding\n    fullName: System.Linq.Expressions.MemberBinding\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n  nameWithType: Expression.MemberBind(MethodInfo, IEnumerable<MemberBinding>)\n  nameWithType.vb: Expression.MemberBind(MethodInfo, IEnumerable(Of MemberBinding))\n- uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Linq.Expressions.MemberBinding[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MemberBind(MethodInfo, MemberBinding[])\n  fullName: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo, System.Linq.Expressions.MemberBinding[])\n  fullname.vb: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo, System.Linq.Expressions.MemberBinding())\n  name.vb: MemberBind(MethodInfo, MemberBinding())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Linq.Expressions.MemberBinding[])\n    name: MemberBind\n    fullName: System.Linq.Expressions.Expression.MemberBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.MemberBinding\n    name: MemberBinding\n    fullName: System.Linq.Expressions.MemberBinding\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Linq.Expressions.MemberBinding[])\n    name: MemberBind\n    fullName: System.Linq.Expressions.Expression.MemberBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.MemberBinding\n    name: MemberBinding\n    fullName: System.Linq.Expressions.MemberBinding\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Linq.Expressions.MemberBinding[])\n  nameWithType: Expression.MemberBind(MethodInfo, MemberBinding[])\n  nameWithType.vb: Expression.MemberBind(MethodInfo, MemberBinding())\n- uid: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MemberInit(NewExpression, IEnumerable<MemberBinding>)\n  fullName: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.MemberBinding>)\n  fullname.vb: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.MemberBinding))\n  name.vb: MemberInit(NewExpression, IEnumerable(Of MemberBinding))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n    name: MemberInit\n    fullName: System.Linq.Expressions.Expression.MemberInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.MemberBinding\n    name: MemberBinding\n    fullName: System.Linq.Expressions.MemberBinding\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n    name: MemberInit\n    fullName: System.Linq.Expressions.Expression.MemberInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.MemberBinding\n    name: MemberBinding\n    fullName: System.Linq.Expressions.MemberBinding\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n  nameWithType: Expression.MemberInit(NewExpression, IEnumerable<MemberBinding>)\n  nameWithType.vb: Expression.MemberInit(NewExpression, IEnumerable(Of MemberBinding))\n- uid: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.MemberBinding[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: MemberInit(NewExpression, MemberBinding[])\n  fullName: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression, System.Linq.Expressions.MemberBinding[])\n  fullname.vb: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression, System.Linq.Expressions.MemberBinding())\n  name.vb: MemberInit(NewExpression, MemberBinding())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.MemberBinding[])\n    name: MemberInit\n    fullName: System.Linq.Expressions.Expression.MemberInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.MemberBinding\n    name: MemberBinding\n    fullName: System.Linq.Expressions.MemberBinding\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.MemberBinding[])\n    name: MemberInit\n    fullName: System.Linq.Expressions.Expression.MemberInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.MemberBinding\n    name: MemberBinding\n    fullName: System.Linq.Expressions.MemberBinding\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.MemberBinding[])\n  nameWithType: Expression.MemberInit(NewExpression, MemberBinding[])\n  nameWithType.vb: Expression.MemberInit(NewExpression, MemberBinding())\n- uid: System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Modulo(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Modulo\n    fullName: System.Linq.Expressions.Expression.Modulo\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Modulo\n    fullName: System.Linq.Expressions.Expression.Modulo\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Modulo(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Modulo(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Modulo\n    fullName: System.Linq.Expressions.Expression.Modulo\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Modulo\n    fullName: System.Linq.Expressions.Expression.Modulo\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.Modulo(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ModuloAssign(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: ModuloAssign\n    fullName: System.Linq.Expressions.Expression.ModuloAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: ModuloAssign\n    fullName: System.Linq.Expressions.Expression.ModuloAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.ModuloAssign(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ModuloAssign(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: ModuloAssign\n    fullName: System.Linq.Expressions.Expression.ModuloAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: ModuloAssign\n    fullName: System.Linq.Expressions.Expression.ModuloAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.ModuloAssign(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ModuloAssign(Expression, Expression, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: ModuloAssign\n    fullName: System.Linq.Expressions.Expression.ModuloAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: ModuloAssign\n    fullName: System.Linq.Expressions.Expression.ModuloAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.ModuloAssign(Expression, Expression, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Multiply(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Multiply\n    fullName: System.Linq.Expressions.Expression.Multiply\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Multiply\n    fullName: System.Linq.Expressions.Expression.Multiply\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Multiply(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Multiply(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Multiply\n    fullName: System.Linq.Expressions.Expression.Multiply\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Multiply\n    fullName: System.Linq.Expressions.Expression.Multiply\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.Multiply(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: MultiplyAssign(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: MultiplyAssign\n    fullName: System.Linq.Expressions.Expression.MultiplyAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: MultiplyAssign\n    fullName: System.Linq.Expressions.Expression.MultiplyAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.MultiplyAssign(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MultiplyAssign(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: MultiplyAssign\n    fullName: System.Linq.Expressions.Expression.MultiplyAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: MultiplyAssign\n    fullName: System.Linq.Expressions.Expression.MultiplyAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.MultiplyAssign(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MultiplyAssign(Expression, Expression, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: MultiplyAssign\n    fullName: System.Linq.Expressions.Expression.MultiplyAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: MultiplyAssign\n    fullName: System.Linq.Expressions.Expression.MultiplyAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.MultiplyAssign(Expression, Expression, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: MultiplyAssignChecked(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: MultiplyAssignChecked\n    fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: MultiplyAssignChecked\n    fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.MultiplyAssignChecked(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MultiplyAssignChecked(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: MultiplyAssignChecked\n    fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: MultiplyAssignChecked\n    fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.MultiplyAssignChecked(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MultiplyAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: MultiplyAssignChecked\n    fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: MultiplyAssignChecked\n    fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.MultiplyAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: MultiplyChecked(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: MultiplyChecked\n    fullName: System.Linq.Expressions.Expression.MultiplyChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: MultiplyChecked\n    fullName: System.Linq.Expressions.Expression.MultiplyChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.MultiplyChecked(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MultiplyChecked(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: MultiplyChecked\n    fullName: System.Linq.Expressions.Expression.MultiplyChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: MultiplyChecked\n    fullName: System.Linq.Expressions.Expression.MultiplyChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.MultiplyChecked(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Negate(Expression)\n  fullName: System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression)\n    name: Negate\n    fullName: System.Linq.Expressions.Expression.Negate\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression)\n    name: Negate\n    fullName: System.Linq.Expressions.Expression.Negate\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression)\n  nameWithType: Expression.Negate(Expression)\n- uid: System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Negate(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Negate\n    fullName: System.Linq.Expressions.Expression.Negate\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Negate\n    fullName: System.Linq.Expressions.Expression.Negate\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.Negate(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: NegateChecked(Expression)\n  fullName: System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression)\n    name: NegateChecked\n    fullName: System.Linq.Expressions.Expression.NegateChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression)\n    name: NegateChecked\n    fullName: System.Linq.Expressions.Expression.NegateChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression)\n  nameWithType: Expression.NegateChecked(Expression)\n- uid: System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: NegateChecked(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: NegateChecked\n    fullName: System.Linq.Expressions.Expression.NegateChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: NegateChecked\n    fullName: System.Linq.Expressions.Expression.NegateChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.NegateChecked(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: New(ConstructorInfo)\n  fullName: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo)\n    name: New\n    fullName: System.Linq.Expressions.Expression.New\n  - name: (\n    fullName: (\n  - uid: System.Reflection.ConstructorInfo\n    name: ConstructorInfo\n    fullName: System.Reflection.ConstructorInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo)\n    name: New\n    fullName: System.Linq.Expressions.Expression.New\n  - name: (\n    fullName: (\n  - uid: System.Reflection.ConstructorInfo\n    name: ConstructorInfo\n    fullName: System.Reflection.ConstructorInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo)\n  nameWithType: Expression.New(ConstructorInfo)\n- uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: New(ConstructorInfo, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: New(ConstructorInfo, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: New\n    fullName: System.Linq.Expressions.Expression.New\n  - name: (\n    fullName: (\n  - uid: System.Reflection.ConstructorInfo\n    name: ConstructorInfo\n    fullName: System.Reflection.ConstructorInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: New\n    fullName: System.Linq.Expressions.Expression.New\n  - name: (\n    fullName: (\n  - uid: System.Reflection.ConstructorInfo\n    name: ConstructorInfo\n    fullName: System.Reflection.ConstructorInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.New(ConstructorInfo, IEnumerable<Expression>)\n  nameWithType.vb: Expression.New(ConstructorInfo, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: New(ConstructorInfo, IEnumerable<Expression>, IEnumerable<MemberInfo>)\n  fullName: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>, System.Collections.Generic.IEnumerable<System.Reflection.MemberInfo>)\n  fullname.vb: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression), System.Collections.Generic.IEnumerable(Of System.Reflection.MemberInfo))\n  name.vb: New(ConstructorInfo, IEnumerable(Of Expression), IEnumerable(Of MemberInfo))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo})\n    name: New\n    fullName: System.Linq.Expressions.Expression.New\n  - name: (\n    fullName: (\n  - uid: System.Reflection.ConstructorInfo\n    name: ConstructorInfo\n    fullName: System.Reflection.ConstructorInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo})\n    name: New\n    fullName: System.Linq.Expressions.Expression.New\n  - name: (\n    fullName: (\n  - uid: System.Reflection.ConstructorInfo\n    name: ConstructorInfo\n    fullName: System.Reflection.ConstructorInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo})\n  nameWithType: Expression.New(ConstructorInfo, IEnumerable<Expression>, IEnumerable<MemberInfo>)\n  nameWithType.vb: Expression.New(ConstructorInfo, IEnumerable(Of Expression), IEnumerable(Of MemberInfo))\n- uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Reflection.MemberInfo[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: New(ConstructorInfo, IEnumerable<Expression>, MemberInfo[])\n  fullName: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>, System.Reflection.MemberInfo[])\n  fullname.vb: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression), System.Reflection.MemberInfo())\n  name.vb: New(ConstructorInfo, IEnumerable(Of Expression), MemberInfo())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Reflection.MemberInfo[])\n    name: New\n    fullName: System.Linq.Expressions.Expression.New\n  - name: (\n    fullName: (\n  - uid: System.Reflection.ConstructorInfo\n    name: ConstructorInfo\n    fullName: System.Reflection.ConstructorInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Reflection.MemberInfo[])\n    name: New\n    fullName: System.Linq.Expressions.Expression.New\n  - name: (\n    fullName: (\n  - uid: System.Reflection.ConstructorInfo\n    name: ConstructorInfo\n    fullName: System.Reflection.ConstructorInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Reflection.MemberInfo[])\n  nameWithType: Expression.New(ConstructorInfo, IEnumerable<Expression>, MemberInfo[])\n  nameWithType.vb: Expression.New(ConstructorInfo, IEnumerable(Of Expression), MemberInfo())\n- uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: New(ConstructorInfo, Expression[])\n  fullName: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo, System.Linq.Expressions.Expression())\n  name.vb: New(ConstructorInfo, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Linq.Expressions.Expression[])\n    name: New\n    fullName: System.Linq.Expressions.Expression.New\n  - name: (\n    fullName: (\n  - uid: System.Reflection.ConstructorInfo\n    name: ConstructorInfo\n    fullName: System.Reflection.ConstructorInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Linq.Expressions.Expression[])\n    name: New\n    fullName: System.Linq.Expressions.Expression.New\n  - name: (\n    fullName: (\n  - uid: System.Reflection.ConstructorInfo\n    name: ConstructorInfo\n    fullName: System.Reflection.ConstructorInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.New(ConstructorInfo, Expression[])\n  nameWithType.vb: Expression.New(ConstructorInfo, Expression())\n- uid: System.Linq.Expressions.Expression.New(System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: New(Type)\n  fullName: System.Linq.Expressions.Expression.New(System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.New(System.Type)\n    name: New\n    fullName: System.Linq.Expressions.Expression.New\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.New(System.Type)\n    name: New\n    fullName: System.Linq.Expressions.Expression.New\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.New(System.Type)\n  nameWithType: Expression.New(Type)\n- uid: System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: NewArrayBounds(Type, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.NewArrayBounds(System.Type, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.NewArrayBounds(System.Type, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: NewArrayBounds(Type, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: NewArrayBounds\n    fullName: System.Linq.Expressions.Expression.NewArrayBounds\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: NewArrayBounds\n    fullName: System.Linq.Expressions.Expression.NewArrayBounds\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.NewArrayBounds(Type, IEnumerable<Expression>)\n  nameWithType.vb: Expression.NewArrayBounds(Type, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: NewArrayBounds(Type, Expression[])\n  fullName: System.Linq.Expressions.Expression.NewArrayBounds(System.Type, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.NewArrayBounds(System.Type, System.Linq.Expressions.Expression())\n  name.vb: NewArrayBounds(Type, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Linq.Expressions.Expression[])\n    name: NewArrayBounds\n    fullName: System.Linq.Expressions.Expression.NewArrayBounds\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Linq.Expressions.Expression[])\n    name: NewArrayBounds\n    fullName: System.Linq.Expressions.Expression.NewArrayBounds\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.NewArrayBounds(Type, Expression[])\n  nameWithType.vb: Expression.NewArrayBounds(Type, Expression())\n- uid: System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: NewArrayInit(Type, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.NewArrayInit(System.Type, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.NewArrayInit(System.Type, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: NewArrayInit(Type, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: NewArrayInit\n    fullName: System.Linq.Expressions.Expression.NewArrayInit\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: NewArrayInit\n    fullName: System.Linq.Expressions.Expression.NewArrayInit\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.NewArrayInit(Type, IEnumerable<Expression>)\n  nameWithType.vb: Expression.NewArrayInit(Type, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: NewArrayInit(Type, Expression[])\n  fullName: System.Linq.Expressions.Expression.NewArrayInit(System.Type, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.NewArrayInit(System.Type, System.Linq.Expressions.Expression())\n  name.vb: NewArrayInit(Type, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Linq.Expressions.Expression[])\n    name: NewArrayInit\n    fullName: System.Linq.Expressions.Expression.NewArrayInit\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Linq.Expressions.Expression[])\n    name: NewArrayInit\n    fullName: System.Linq.Expressions.Expression.NewArrayInit\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.NewArrayInit(Type, Expression[])\n  nameWithType.vb: Expression.NewArrayInit(Type, Expression())\n- uid: System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Not(Expression)\n  fullName: System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression)\n    name: Not\n    fullName: System.Linq.Expressions.Expression.Not\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression)\n    name: Not\n    fullName: System.Linq.Expressions.Expression.Not\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression)\n  nameWithType: Expression.Not(Expression)\n- uid: System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Not(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Not\n    fullName: System.Linq.Expressions.Expression.Not\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Not\n    fullName: System.Linq.Expressions.Expression.Not\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.Not(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: NotEqual(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: NotEqual\n    fullName: System.Linq.Expressions.Expression.NotEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: NotEqual\n    fullName: System.Linq.Expressions.Expression.NotEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.NotEqual(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: NotEqual(Expression, Expression, Boolean, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Boolean, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n    name: NotEqual\n    fullName: System.Linq.Expressions.Expression.NotEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n    name: NotEqual\n    fullName: System.Linq.Expressions.Expression.NotEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  nameWithType: Expression.NotEqual(Expression, Expression, Boolean, MethodInfo)\n- uid: System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: OnesComplement(Expression)\n  fullName: System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression)\n    name: OnesComplement\n    fullName: System.Linq.Expressions.Expression.OnesComplement\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression)\n    name: OnesComplement\n    fullName: System.Linq.Expressions.Expression.OnesComplement\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression)\n  nameWithType: Expression.OnesComplement(Expression)\n- uid: System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: OnesComplement(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: OnesComplement\n    fullName: System.Linq.Expressions.Expression.OnesComplement\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: OnesComplement\n    fullName: System.Linq.Expressions.Expression.OnesComplement\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.OnesComplement(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Or(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Or\n    fullName: System.Linq.Expressions.Expression.Or\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Or\n    fullName: System.Linq.Expressions.Expression.Or\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Or(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Or(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Or\n    fullName: System.Linq.Expressions.Expression.Or\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Or\n    fullName: System.Linq.Expressions.Expression.Or\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.Or(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: OrAssign(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: OrAssign\n    fullName: System.Linq.Expressions.Expression.OrAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: OrAssign\n    fullName: System.Linq.Expressions.Expression.OrAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.OrAssign(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: OrAssign(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: OrAssign\n    fullName: System.Linq.Expressions.Expression.OrAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: OrAssign\n    fullName: System.Linq.Expressions.Expression.OrAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.OrAssign(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: OrAssign(Expression, Expression, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: OrAssign\n    fullName: System.Linq.Expressions.Expression.OrAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: OrAssign\n    fullName: System.Linq.Expressions.Expression.OrAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.OrAssign(Expression, Expression, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: OrElse(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: OrElse\n    fullName: System.Linq.Expressions.Expression.OrElse\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: OrElse\n    fullName: System.Linq.Expressions.Expression.OrElse\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.OrElse(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: OrElse(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: OrElse\n    fullName: System.Linq.Expressions.Expression.OrElse\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: OrElse\n    fullName: System.Linq.Expressions.Expression.OrElse\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.OrElse(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.Parameter(System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Parameter(Type)\n  fullName: System.Linq.Expressions.Expression.Parameter(System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Parameter(System.Type)\n    name: Parameter\n    fullName: System.Linq.Expressions.Expression.Parameter\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Parameter(System.Type)\n    name: Parameter\n    fullName: System.Linq.Expressions.Expression.Parameter\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Parameter(System.Type)\n  nameWithType: Expression.Parameter(Type)\n- uid: System.Linq.Expressions.Expression.Parameter(System.Type,System.String)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Parameter(Type, String)\n  fullName: System.Linq.Expressions.Expression.Parameter(System.Type, System.String)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Parameter(System.Type,System.String)\n    name: Parameter\n    fullName: System.Linq.Expressions.Expression.Parameter\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Parameter(System.Type,System.String)\n    name: Parameter\n    fullName: System.Linq.Expressions.Expression.Parameter\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Parameter(System.Type,System.String)\n  nameWithType: Expression.Parameter(Type, String)\n- uid: System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: PostDecrementAssign(Expression)\n  fullName: System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression)\n    name: PostDecrementAssign\n    fullName: System.Linq.Expressions.Expression.PostDecrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression)\n    name: PostDecrementAssign\n    fullName: System.Linq.Expressions.Expression.PostDecrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression)\n  nameWithType: Expression.PostDecrementAssign(Expression)\n- uid: System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: PostDecrementAssign(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: PostDecrementAssign\n    fullName: System.Linq.Expressions.Expression.PostDecrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: PostDecrementAssign\n    fullName: System.Linq.Expressions.Expression.PostDecrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.PostDecrementAssign(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: PostIncrementAssign(Expression)\n  fullName: System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression)\n    name: PostIncrementAssign\n    fullName: System.Linq.Expressions.Expression.PostIncrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression)\n    name: PostIncrementAssign\n    fullName: System.Linq.Expressions.Expression.PostIncrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression)\n  nameWithType: Expression.PostIncrementAssign(Expression)\n- uid: System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: PostIncrementAssign(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: PostIncrementAssign\n    fullName: System.Linq.Expressions.Expression.PostIncrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: PostIncrementAssign\n    fullName: System.Linq.Expressions.Expression.PostIncrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.PostIncrementAssign(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Power(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Power\n    fullName: System.Linq.Expressions.Expression.Power\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Power\n    fullName: System.Linq.Expressions.Expression.Power\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Power(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Power(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Power\n    fullName: System.Linq.Expressions.Expression.Power\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Power\n    fullName: System.Linq.Expressions.Expression.Power\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.Power(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: PowerAssign(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: PowerAssign\n    fullName: System.Linq.Expressions.Expression.PowerAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: PowerAssign\n    fullName: System.Linq.Expressions.Expression.PowerAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.PowerAssign(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: PowerAssign(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: PowerAssign\n    fullName: System.Linq.Expressions.Expression.PowerAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: PowerAssign\n    fullName: System.Linq.Expressions.Expression.PowerAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.PowerAssign(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: PowerAssign(Expression, Expression, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: PowerAssign\n    fullName: System.Linq.Expressions.Expression.PowerAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: PowerAssign\n    fullName: System.Linq.Expressions.Expression.PowerAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.PowerAssign(Expression, Expression, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: PreDecrementAssign(Expression)\n  fullName: System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression)\n    name: PreDecrementAssign\n    fullName: System.Linq.Expressions.Expression.PreDecrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression)\n    name: PreDecrementAssign\n    fullName: System.Linq.Expressions.Expression.PreDecrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression)\n  nameWithType: Expression.PreDecrementAssign(Expression)\n- uid: System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: PreDecrementAssign(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: PreDecrementAssign\n    fullName: System.Linq.Expressions.Expression.PreDecrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: PreDecrementAssign\n    fullName: System.Linq.Expressions.Expression.PreDecrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.PreDecrementAssign(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: PreIncrementAssign(Expression)\n  fullName: System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression)\n    name: PreIncrementAssign\n    fullName: System.Linq.Expressions.Expression.PreIncrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression)\n    name: PreIncrementAssign\n    fullName: System.Linq.Expressions.Expression.PreIncrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression)\n  nameWithType: Expression.PreIncrementAssign(Expression)\n- uid: System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: PreIncrementAssign(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: PreIncrementAssign\n    fullName: System.Linq.Expressions.Expression.PreIncrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: PreIncrementAssign\n    fullName: System.Linq.Expressions.Expression.PreIncrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.PreIncrementAssign(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Property(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Property\n    fullName: System.Linq.Expressions.Expression.Property\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Property\n    fullName: System.Linq.Expressions.Expression.Property\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.Property(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Property(Expression, PropertyInfo)\n  fullName: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.Reflection.PropertyInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo)\n    name: Property\n    fullName: System.Linq.Expressions.Expression.Property\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.PropertyInfo\n    name: PropertyInfo\n    fullName: System.Reflection.PropertyInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo)\n    name: Property\n    fullName: System.Linq.Expressions.Expression.Property\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.PropertyInfo\n    name: PropertyInfo\n    fullName: System.Reflection.PropertyInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo)\n  nameWithType: Expression.Property(Expression, PropertyInfo)\n- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Property(Expression, PropertyInfo, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.Reflection.PropertyInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.Reflection.PropertyInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: Property(Expression, PropertyInfo, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Property\n    fullName: System.Linq.Expressions.Expression.Property\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.PropertyInfo\n    name: PropertyInfo\n    fullName: System.Reflection.PropertyInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Property\n    fullName: System.Linq.Expressions.Expression.Property\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.PropertyInfo\n    name: PropertyInfo\n    fullName: System.Reflection.PropertyInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.Property(Expression, PropertyInfo, IEnumerable<Expression>)\n  nameWithType.vb: Expression.Property(Expression, PropertyInfo, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Property(Expression, PropertyInfo, Expression[])\n  fullName: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.Reflection.PropertyInfo, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.Reflection.PropertyInfo, System.Linq.Expressions.Expression())\n  name.vb: Property(Expression, PropertyInfo, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Linq.Expressions.Expression[])\n    name: Property\n    fullName: System.Linq.Expressions.Expression.Property\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.PropertyInfo\n    name: PropertyInfo\n    fullName: System.Reflection.PropertyInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Linq.Expressions.Expression[])\n    name: Property\n    fullName: System.Linq.Expressions.Expression.Property\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.PropertyInfo\n    name: PropertyInfo\n    fullName: System.Reflection.PropertyInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.Property(Expression, PropertyInfo, Expression[])\n  nameWithType.vb: Expression.Property(Expression, PropertyInfo, Expression())\n- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Property(Expression, String)\n  fullName: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.String)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String)\n    name: Property\n    fullName: System.Linq.Expressions.Expression.Property\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String)\n    name: Property\n    fullName: System.Linq.Expressions.Expression.Property\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String)\n  nameWithType: Expression.Property(Expression, String)\n- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Property(Expression, String, Expression[])\n  fullName: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.String, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.String, System.Linq.Expressions.Expression())\n  name.vb: Property(Expression, String, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String,System.Linq.Expressions.Expression[])\n    name: Property\n    fullName: System.Linq.Expressions.Expression.Property\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String,System.Linq.Expressions.Expression[])\n    name: Property\n    fullName: System.Linq.Expressions.Expression.Property\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.Property(Expression, String, Expression[])\n  nameWithType.vb: Expression.Property(Expression, String, Expression())\n- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Type,System.String)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Property(Expression, Type, String)\n  fullName: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.Type, System.String)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Type,System.String)\n    name: Property\n    fullName: System.Linq.Expressions.Expression.Property\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Type,System.String)\n    name: Property\n    fullName: System.Linq.Expressions.Expression.Property\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Type,System.String)\n  nameWithType: Expression.Property(Expression, Type, String)\n- uid: System.Linq.Expressions.Expression.PropertyOrField(System.Linq.Expressions.Expression,System.String)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: PropertyOrField(Expression, String)\n  fullName: System.Linq.Expressions.Expression.PropertyOrField(System.Linq.Expressions.Expression, System.String)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.PropertyOrField(System.Linq.Expressions.Expression,System.String)\n    name: PropertyOrField\n    fullName: System.Linq.Expressions.Expression.PropertyOrField\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.PropertyOrField(System.Linq.Expressions.Expression,System.String)\n    name: PropertyOrField\n    fullName: System.Linq.Expressions.Expression.PropertyOrField\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.PropertyOrField(System.Linq.Expressions.Expression,System.String)\n  nameWithType: Expression.PropertyOrField(Expression, String)\n- uid: System.Linq.Expressions.Expression.Quote(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Quote(Expression)\n  fullName: System.Linq.Expressions.Expression.Quote(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Quote(System.Linq.Expressions.Expression)\n    name: Quote\n    fullName: System.Linq.Expressions.Expression.Quote\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Quote(System.Linq.Expressions.Expression)\n    name: Quote\n    fullName: System.Linq.Expressions.Expression.Quote\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Quote(System.Linq.Expressions.Expression)\n  nameWithType: Expression.Quote(Expression)\n- uid: System.Linq.Expressions.Expression.Reduce\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Reduce()\n  fullName: System.Linq.Expressions.Expression.Reduce()\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Reduce\n    name: Reduce\n    fullName: System.Linq.Expressions.Expression.Reduce\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Reduce\n    name: Reduce\n    fullName: System.Linq.Expressions.Expression.Reduce\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Reduce\n  nameWithType: Expression.Reduce()\n- uid: System.Linq.Expressions.Expression.ReduceAndCheck\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ReduceAndCheck()\n  fullName: System.Linq.Expressions.Expression.ReduceAndCheck()\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ReduceAndCheck\n    name: ReduceAndCheck\n    fullName: System.Linq.Expressions.Expression.ReduceAndCheck\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ReduceAndCheck\n    name: ReduceAndCheck\n    fullName: System.Linq.Expressions.Expression.ReduceAndCheck\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ReduceAndCheck\n  nameWithType: Expression.ReduceAndCheck()\n- uid: System.Linq.Expressions.Expression.ReduceExtensions\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ReduceExtensions()\n  fullName: System.Linq.Expressions.Expression.ReduceExtensions()\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ReduceExtensions\n    name: ReduceExtensions\n    fullName: System.Linq.Expressions.Expression.ReduceExtensions\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ReduceExtensions\n    name: ReduceExtensions\n    fullName: System.Linq.Expressions.Expression.ReduceExtensions\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ReduceExtensions\n  nameWithType: Expression.ReduceExtensions()\n- uid: System.Linq.Expressions.Expression.ReferenceEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ReferenceEqual(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.ReferenceEqual(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ReferenceEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: ReferenceEqual\n    fullName: System.Linq.Expressions.Expression.ReferenceEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ReferenceEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: ReferenceEqual\n    fullName: System.Linq.Expressions.Expression.ReferenceEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ReferenceEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.ReferenceEqual(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.ReferenceNotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ReferenceNotEqual(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.ReferenceNotEqual(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ReferenceNotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: ReferenceNotEqual\n    fullName: System.Linq.Expressions.Expression.ReferenceNotEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ReferenceNotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: ReferenceNotEqual\n    fullName: System.Linq.Expressions.Expression.ReferenceNotEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ReferenceNotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.ReferenceNotEqual(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Rethrow\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Rethrow()\n  fullName: System.Linq.Expressions.Expression.Rethrow()\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Rethrow\n    name: Rethrow\n    fullName: System.Linq.Expressions.Expression.Rethrow\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Rethrow\n    name: Rethrow\n    fullName: System.Linq.Expressions.Expression.Rethrow\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Rethrow\n  nameWithType: Expression.Rethrow()\n- uid: System.Linq.Expressions.Expression.Rethrow(System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Rethrow(Type)\n  fullName: System.Linq.Expressions.Expression.Rethrow(System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Rethrow(System.Type)\n    name: Rethrow\n    fullName: System.Linq.Expressions.Expression.Rethrow\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Rethrow(System.Type)\n    name: Rethrow\n    fullName: System.Linq.Expressions.Expression.Rethrow\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Rethrow(System.Type)\n  nameWithType: Expression.Rethrow(Type)\n- uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Return(LabelTarget)\n  fullName: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget)\n    name: Return\n    fullName: System.Linq.Expressions.Expression.Return\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget)\n    name: Return\n    fullName: System.Linq.Expressions.Expression.Return\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget)\n  nameWithType: Expression.Return(LabelTarget)\n- uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Return(LabelTarget, Expression)\n  fullName: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n    name: Return\n    fullName: System.Linq.Expressions.Expression.Return\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n    name: Return\n    fullName: System.Linq.Expressions.Expression.Return\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Return(LabelTarget, Expression)\n- uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Return(LabelTarget, Expression, Type)\n  fullName: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget, System.Linq.Expressions.Expression, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n    name: Return\n    fullName: System.Linq.Expressions.Expression.Return\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n    name: Return\n    fullName: System.Linq.Expressions.Expression.Return\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n  nameWithType: Expression.Return(LabelTarget, Expression, Type)\n- uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Return(LabelTarget, Type)\n  fullName: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Type)\n    name: Return\n    fullName: System.Linq.Expressions.Expression.Return\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Type)\n    name: Return\n    fullName: System.Linq.Expressions.Expression.Return\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Type)\n  nameWithType: Expression.Return(LabelTarget, Type)\n- uid: System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: RightShift(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: RightShift\n    fullName: System.Linq.Expressions.Expression.RightShift\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: RightShift\n    fullName: System.Linq.Expressions.Expression.RightShift\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.RightShift(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: RightShift(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: RightShift\n    fullName: System.Linq.Expressions.Expression.RightShift\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: RightShift\n    fullName: System.Linq.Expressions.Expression.RightShift\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.RightShift(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: RightShiftAssign(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: RightShiftAssign\n    fullName: System.Linq.Expressions.Expression.RightShiftAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: RightShiftAssign\n    fullName: System.Linq.Expressions.Expression.RightShiftAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.RightShiftAssign(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: RightShiftAssign(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: RightShiftAssign\n    fullName: System.Linq.Expressions.Expression.RightShiftAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: RightShiftAssign\n    fullName: System.Linq.Expressions.Expression.RightShiftAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.RightShiftAssign(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: RightShiftAssign(Expression, Expression, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: RightShiftAssign\n    fullName: System.Linq.Expressions.Expression.RightShiftAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: RightShiftAssign\n    fullName: System.Linq.Expressions.Expression.RightShiftAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.RightShiftAssign(Expression, Expression, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.RuntimeVariables(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: RuntimeVariables(IEnumerable<ParameterExpression>)\n  fullName: System.Linq.Expressions.Expression.RuntimeVariables(System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)\n  fullname.vb: System.Linq.Expressions.Expression.RuntimeVariables(System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))\n  name.vb: RuntimeVariables(IEnumerable(Of ParameterExpression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.RuntimeVariables(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: RuntimeVariables\n    fullName: System.Linq.Expressions.Expression.RuntimeVariables\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.RuntimeVariables(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: RuntimeVariables\n    fullName: System.Linq.Expressions.Expression.RuntimeVariables\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.RuntimeVariables(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  nameWithType: Expression.RuntimeVariables(IEnumerable<ParameterExpression>)\n  nameWithType.vb: Expression.RuntimeVariables(IEnumerable(Of ParameterExpression))\n- uid: System.Linq.Expressions.Expression.RuntimeVariables(System.Linq.Expressions.ParameterExpression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: RuntimeVariables(ParameterExpression[])\n  fullName: System.Linq.Expressions.Expression.RuntimeVariables(System.Linq.Expressions.ParameterExpression[])\n  fullname.vb: System.Linq.Expressions.Expression.RuntimeVariables(System.Linq.Expressions.ParameterExpression())\n  name.vb: RuntimeVariables(ParameterExpression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.RuntimeVariables(System.Linq.Expressions.ParameterExpression[])\n    name: RuntimeVariables\n    fullName: System.Linq.Expressions.Expression.RuntimeVariables\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.RuntimeVariables(System.Linq.Expressions.ParameterExpression[])\n    name: RuntimeVariables\n    fullName: System.Linq.Expressions.Expression.RuntimeVariables\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.RuntimeVariables(System.Linq.Expressions.ParameterExpression[])\n  nameWithType: Expression.RuntimeVariables(ParameterExpression[])\n  nameWithType.vb: Expression.RuntimeVariables(ParameterExpression())\n- uid: System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Subtract(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Subtract\n    fullName: System.Linq.Expressions.Expression.Subtract\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Subtract\n    fullName: System.Linq.Expressions.Expression.Subtract\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Subtract(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Subtract(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Subtract\n    fullName: System.Linq.Expressions.Expression.Subtract\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Subtract\n    fullName: System.Linq.Expressions.Expression.Subtract\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.Subtract(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: SubtractAssign(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: SubtractAssign\n    fullName: System.Linq.Expressions.Expression.SubtractAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: SubtractAssign\n    fullName: System.Linq.Expressions.Expression.SubtractAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.SubtractAssign(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: SubtractAssign(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: SubtractAssign\n    fullName: System.Linq.Expressions.Expression.SubtractAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: SubtractAssign\n    fullName: System.Linq.Expressions.Expression.SubtractAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.SubtractAssign(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: SubtractAssign(Expression, Expression, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: SubtractAssign\n    fullName: System.Linq.Expressions.Expression.SubtractAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: SubtractAssign\n    fullName: System.Linq.Expressions.Expression.SubtractAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.SubtractAssign(Expression, Expression, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: SubtractAssignChecked(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: SubtractAssignChecked\n    fullName: System.Linq.Expressions.Expression.SubtractAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: SubtractAssignChecked\n    fullName: System.Linq.Expressions.Expression.SubtractAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.SubtractAssignChecked(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: SubtractAssignChecked(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: SubtractAssignChecked\n    fullName: System.Linq.Expressions.Expression.SubtractAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: SubtractAssignChecked\n    fullName: System.Linq.Expressions.Expression.SubtractAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.SubtractAssignChecked(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: SubtractAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: SubtractAssignChecked\n    fullName: System.Linq.Expressions.Expression.SubtractAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: SubtractAssignChecked\n    fullName: System.Linq.Expressions.Expression.SubtractAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.SubtractAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: SubtractChecked(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: SubtractChecked\n    fullName: System.Linq.Expressions.Expression.SubtractChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: SubtractChecked\n    fullName: System.Linq.Expressions.Expression.SubtractChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.SubtractChecked(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: SubtractChecked(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: SubtractChecked\n    fullName: System.Linq.Expressions.Expression.SubtractChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: SubtractChecked\n    fullName: System.Linq.Expressions.Expression.SubtractChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.SubtractChecked(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Switch(Expression, Expression, SwitchCase[])\n  fullName: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.SwitchCase[])\n  fullname.vb: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.SwitchCase())\n  name.vb: Switch(Expression, Expression, SwitchCase())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])\n    name: Switch\n    fullName: System.Linq.Expressions.Expression.Switch\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.SwitchCase\n    name: SwitchCase\n    fullName: System.Linq.Expressions.SwitchCase\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])\n    name: Switch\n    fullName: System.Linq.Expressions.Expression.Switch\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.SwitchCase\n    name: SwitchCase\n    fullName: System.Linq.Expressions.SwitchCase\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])\n  nameWithType: Expression.Switch(Expression, Expression, SwitchCase[])\n  nameWithType.vb: Expression.Switch(Expression, Expression, SwitchCase())\n- uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Switch(Expression, Expression, MethodInfo, IEnumerable<SwitchCase>)\n  fullName: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.SwitchCase>)\n  fullname.vb: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.SwitchCase))\n  name.vb: Switch(Expression, Expression, MethodInfo, IEnumerable(Of SwitchCase))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})\n    name: Switch\n    fullName: System.Linq.Expressions.Expression.Switch\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.SwitchCase\n    name: SwitchCase\n    fullName: System.Linq.Expressions.SwitchCase\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})\n    name: Switch\n    fullName: System.Linq.Expressions.Expression.Switch\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.SwitchCase\n    name: SwitchCase\n    fullName: System.Linq.Expressions.SwitchCase\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})\n  nameWithType: Expression.Switch(Expression, Expression, MethodInfo, IEnumerable<SwitchCase>)\n  nameWithType.vb: Expression.Switch(Expression, Expression, MethodInfo, IEnumerable(Of SwitchCase))\n- uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Switch(Expression, Expression, MethodInfo, SwitchCase[])\n  fullName: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.SwitchCase[])\n  fullname.vb: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.SwitchCase())\n  name.vb: Switch(Expression, Expression, MethodInfo, SwitchCase())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])\n    name: Switch\n    fullName: System.Linq.Expressions.Expression.Switch\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.SwitchCase\n    name: SwitchCase\n    fullName: System.Linq.Expressions.SwitchCase\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])\n    name: Switch\n    fullName: System.Linq.Expressions.Expression.Switch\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.SwitchCase\n    name: SwitchCase\n    fullName: System.Linq.Expressions.SwitchCase\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])\n  nameWithType: Expression.Switch(Expression, Expression, MethodInfo, SwitchCase[])\n  nameWithType.vb: Expression.Switch(Expression, Expression, MethodInfo, SwitchCase())\n- uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Switch(Expression, SwitchCase[])\n  fullName: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression, System.Linq.Expressions.SwitchCase[])\n  fullname.vb: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression, System.Linq.Expressions.SwitchCase())\n  name.vb: Switch(Expression, SwitchCase())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])\n    name: Switch\n    fullName: System.Linq.Expressions.Expression.Switch\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.SwitchCase\n    name: SwitchCase\n    fullName: System.Linq.Expressions.SwitchCase\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])\n    name: Switch\n    fullName: System.Linq.Expressions.Expression.Switch\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.SwitchCase\n    name: SwitchCase\n    fullName: System.Linq.Expressions.SwitchCase\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])\n  nameWithType: Expression.Switch(Expression, SwitchCase[])\n  nameWithType.vb: Expression.Switch(Expression, SwitchCase())\n- uid: System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Switch(Type, Expression, Expression, MethodInfo, IEnumerable<SwitchCase>)\n  fullName: System.Linq.Expressions.Expression.Switch(System.Type, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.SwitchCase>)\n  fullname.vb: System.Linq.Expressions.Expression.Switch(System.Type, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.SwitchCase))\n  name.vb: Switch(Type, Expression, Expression, MethodInfo, IEnumerable(Of SwitchCase))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})\n    name: Switch\n    fullName: System.Linq.Expressions.Expression.Switch\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.SwitchCase\n    name: SwitchCase\n    fullName: System.Linq.Expressions.SwitchCase\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})\n    name: Switch\n    fullName: System.Linq.Expressions.Expression.Switch\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.SwitchCase\n    name: SwitchCase\n    fullName: System.Linq.Expressions.SwitchCase\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})\n  nameWithType: Expression.Switch(Type, Expression, Expression, MethodInfo, IEnumerable<SwitchCase>)\n  nameWithType.vb: Expression.Switch(Type, Expression, Expression, MethodInfo, IEnumerable(Of SwitchCase))\n- uid: System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Switch(Type, Expression, Expression, MethodInfo, SwitchCase[])\n  fullName: System.Linq.Expressions.Expression.Switch(System.Type, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.SwitchCase[])\n  fullname.vb: System.Linq.Expressions.Expression.Switch(System.Type, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.SwitchCase())\n  name.vb: Switch(Type, Expression, Expression, MethodInfo, SwitchCase())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])\n    name: Switch\n    fullName: System.Linq.Expressions.Expression.Switch\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.SwitchCase\n    name: SwitchCase\n    fullName: System.Linq.Expressions.SwitchCase\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])\n    name: Switch\n    fullName: System.Linq.Expressions.Expression.Switch\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.SwitchCase\n    name: SwitchCase\n    fullName: System.Linq.Expressions.SwitchCase\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])\n  nameWithType: Expression.Switch(Type, Expression, Expression, MethodInfo, SwitchCase[])\n  nameWithType.vb: Expression.Switch(Type, Expression, Expression, MethodInfo, SwitchCase())\n- uid: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: SwitchCase(Expression, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: SwitchCase(Expression, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: SwitchCase\n    fullName: System.Linq.Expressions.Expression.SwitchCase\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: SwitchCase\n    fullName: System.Linq.Expressions.Expression.SwitchCase\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.SwitchCase(Expression, IEnumerable<Expression>)\n  nameWithType.vb: Expression.SwitchCase(Expression, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: SwitchCase(Expression, Expression[])\n  fullName: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression())\n  name.vb: SwitchCase(Expression, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n    name: SwitchCase\n    fullName: System.Linq.Expressions.Expression.SwitchCase\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n    name: SwitchCase\n    fullName: System.Linq.Expressions.Expression.SwitchCase\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.SwitchCase(Expression, Expression[])\n  nameWithType.vb: Expression.SwitchCase(Expression, Expression())\n- uid: System.Linq.Expressions.Expression.SymbolDocument(System.String)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: SymbolDocument(String)\n  fullName: System.Linq.Expressions.Expression.SymbolDocument(System.String)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.SymbolDocument(System.String)\n    name: SymbolDocument\n    fullName: System.Linq.Expressions.Expression.SymbolDocument\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.SymbolDocument(System.String)\n    name: SymbolDocument\n    fullName: System.Linq.Expressions.Expression.SymbolDocument\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.SymbolDocument(System.String)\n  nameWithType: Expression.SymbolDocument(String)\n- uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: SymbolDocument(String, Guid)\n  fullName: System.Linq.Expressions.Expression.SymbolDocument(System.String, System.Guid)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid)\n    name: SymbolDocument\n    fullName: System.Linq.Expressions.Expression.SymbolDocument\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid)\n    name: SymbolDocument\n    fullName: System.Linq.Expressions.Expression.SymbolDocument\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid)\n  nameWithType: Expression.SymbolDocument(String, Guid)\n- uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: SymbolDocument(String, Guid, Guid)\n  fullName: System.Linq.Expressions.Expression.SymbolDocument(System.String, System.Guid, System.Guid)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid)\n    name: SymbolDocument\n    fullName: System.Linq.Expressions.Expression.SymbolDocument\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid)\n    name: SymbolDocument\n    fullName: System.Linq.Expressions.Expression.SymbolDocument\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid)\n  nameWithType: Expression.SymbolDocument(String, Guid, Guid)\n- uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid,System.Guid)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: SymbolDocument(String, Guid, Guid, Guid)\n  fullName: System.Linq.Expressions.Expression.SymbolDocument(System.String, System.Guid, System.Guid, System.Guid)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid,System.Guid)\n    name: SymbolDocument\n    fullName: System.Linq.Expressions.Expression.SymbolDocument\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid,System.Guid)\n    name: SymbolDocument\n    fullName: System.Linq.Expressions.Expression.SymbolDocument\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid,System.Guid)\n  nameWithType: Expression.SymbolDocument(String, Guid, Guid, Guid)\n- uid: System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Throw(Expression)\n  fullName: System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression)\n    name: Throw\n    fullName: System.Linq.Expressions.Expression.Throw\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression)\n    name: Throw\n    fullName: System.Linq.Expressions.Expression.Throw\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression)\n  nameWithType: Expression.Throw(Expression)\n- uid: System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Throw(Expression, Type)\n  fullName: System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression,System.Type)\n    name: Throw\n    fullName: System.Linq.Expressions.Expression.Throw\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression,System.Type)\n    name: Throw\n    fullName: System.Linq.Expressions.Expression.Throw\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression,System.Type)\n  nameWithType: Expression.Throw(Expression, Type)\n- uid: System.Linq.Expressions.Expression.ToString\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ToString()\n  fullName: System.Linq.Expressions.Expression.ToString()\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ToString\n    name: ToString\n    fullName: System.Linq.Expressions.Expression.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ToString\n    name: ToString\n    fullName: System.Linq.Expressions.Expression.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ToString\n  nameWithType: Expression.ToString()\n- uid: System.Linq.Expressions.Expression.TryCatch(System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: TryCatch(Expression, CatchBlock[])\n  fullName: System.Linq.Expressions.Expression.TryCatch(System.Linq.Expressions.Expression, System.Linq.Expressions.CatchBlock[])\n  fullname.vb: System.Linq.Expressions.Expression.TryCatch(System.Linq.Expressions.Expression, System.Linq.Expressions.CatchBlock())\n  name.vb: TryCatch(Expression, CatchBlock())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.TryCatch(System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])\n    name: TryCatch\n    fullName: System.Linq.Expressions.Expression.TryCatch\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.CatchBlock\n    name: CatchBlock\n    fullName: System.Linq.Expressions.CatchBlock\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.TryCatch(System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])\n    name: TryCatch\n    fullName: System.Linq.Expressions.Expression.TryCatch\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.CatchBlock\n    name: CatchBlock\n    fullName: System.Linq.Expressions.CatchBlock\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.TryCatch(System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])\n  nameWithType: Expression.TryCatch(Expression, CatchBlock[])\n  nameWithType.vb: Expression.TryCatch(Expression, CatchBlock())\n- uid: System.Linq.Expressions.Expression.TryCatchFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: TryCatchFinally(Expression, Expression, CatchBlock[])\n  fullName: System.Linq.Expressions.Expression.TryCatchFinally(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.CatchBlock[])\n  fullname.vb: System.Linq.Expressions.Expression.TryCatchFinally(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.CatchBlock())\n  name.vb: TryCatchFinally(Expression, Expression, CatchBlock())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.TryCatchFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])\n    name: TryCatchFinally\n    fullName: System.Linq.Expressions.Expression.TryCatchFinally\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.CatchBlock\n    name: CatchBlock\n    fullName: System.Linq.Expressions.CatchBlock\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.TryCatchFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])\n    name: TryCatchFinally\n    fullName: System.Linq.Expressions.Expression.TryCatchFinally\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.CatchBlock\n    name: CatchBlock\n    fullName: System.Linq.Expressions.CatchBlock\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.TryCatchFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])\n  nameWithType: Expression.TryCatchFinally(Expression, Expression, CatchBlock[])\n  nameWithType.vb: Expression.TryCatchFinally(Expression, Expression, CatchBlock())\n- uid: System.Linq.Expressions.Expression.TryFault(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: TryFault(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.TryFault(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.TryFault(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: TryFault\n    fullName: System.Linq.Expressions.Expression.TryFault\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.TryFault(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: TryFault\n    fullName: System.Linq.Expressions.Expression.TryFault\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.TryFault(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.TryFault(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.TryFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: TryFinally(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.TryFinally(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.TryFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: TryFinally\n    fullName: System.Linq.Expressions.Expression.TryFinally\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.TryFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: TryFinally\n    fullName: System.Linq.Expressions.Expression.TryFinally\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.TryFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.TryFinally(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.TryGetActionType(System.Type[],System.Type@)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: TryGetActionType(Type[], Type)\n  fullName: System.Linq.Expressions.Expression.TryGetActionType(System.Type[], System.Type)\n  fullname.vb: System.Linq.Expressions.Expression.TryGetActionType(System.Type(), System.Type)\n  name.vb: TryGetActionType(Type(), Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.TryGetActionType(System.Type[],System.Type@)\n    name: TryGetActionType\n    fullName: System.Linq.Expressions.Expression.TryGetActionType\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.TryGetActionType(System.Type[],System.Type@)\n    name: TryGetActionType\n    fullName: System.Linq.Expressions.Expression.TryGetActionType\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.TryGetActionType(System.Type[],System.Type@)\n  nameWithType: Expression.TryGetActionType(Type[], Type)\n  nameWithType.vb: Expression.TryGetActionType(Type(), Type)\n- uid: System.Linq.Expressions.Expression.TryGetFuncType(System.Type[],System.Type@)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: TryGetFuncType(Type[], Type)\n  fullName: System.Linq.Expressions.Expression.TryGetFuncType(System.Type[], System.Type)\n  fullname.vb: System.Linq.Expressions.Expression.TryGetFuncType(System.Type(), System.Type)\n  name.vb: TryGetFuncType(Type(), Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.TryGetFuncType(System.Type[],System.Type@)\n    name: TryGetFuncType\n    fullName: System.Linq.Expressions.Expression.TryGetFuncType\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.TryGetFuncType(System.Type[],System.Type@)\n    name: TryGetFuncType\n    fullName: System.Linq.Expressions.Expression.TryGetFuncType\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.TryGetFuncType(System.Type[],System.Type@)\n  nameWithType: Expression.TryGetFuncType(Type[], Type)\n  nameWithType.vb: Expression.TryGetFuncType(Type(), Type)\n- uid: System.Linq.Expressions.Expression.TypeAs(System.Linq.Expressions.Expression,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: TypeAs(Expression, Type)\n  fullName: System.Linq.Expressions.Expression.TypeAs(System.Linq.Expressions.Expression, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.TypeAs(System.Linq.Expressions.Expression,System.Type)\n    name: TypeAs\n    fullName: System.Linq.Expressions.Expression.TypeAs\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.TypeAs(System.Linq.Expressions.Expression,System.Type)\n    name: TypeAs\n    fullName: System.Linq.Expressions.Expression.TypeAs\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.TypeAs(System.Linq.Expressions.Expression,System.Type)\n  nameWithType: Expression.TypeAs(Expression, Type)\n- uid: System.Linq.Expressions.Expression.TypeEqual(System.Linq.Expressions.Expression,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: TypeEqual(Expression, Type)\n  fullName: System.Linq.Expressions.Expression.TypeEqual(System.Linq.Expressions.Expression, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.TypeEqual(System.Linq.Expressions.Expression,System.Type)\n    name: TypeEqual\n    fullName: System.Linq.Expressions.Expression.TypeEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.TypeEqual(System.Linq.Expressions.Expression,System.Type)\n    name: TypeEqual\n    fullName: System.Linq.Expressions.Expression.TypeEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.TypeEqual(System.Linq.Expressions.Expression,System.Type)\n  nameWithType: Expression.TypeEqual(Expression, Type)\n- uid: System.Linq.Expressions.Expression.TypeIs(System.Linq.Expressions.Expression,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: TypeIs(Expression, Type)\n  fullName: System.Linq.Expressions.Expression.TypeIs(System.Linq.Expressions.Expression, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.TypeIs(System.Linq.Expressions.Expression,System.Type)\n    name: TypeIs\n    fullName: System.Linq.Expressions.Expression.TypeIs\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.TypeIs(System.Linq.Expressions.Expression,System.Type)\n    name: TypeIs\n    fullName: System.Linq.Expressions.Expression.TypeIs\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.TypeIs(System.Linq.Expressions.Expression,System.Type)\n  nameWithType: Expression.TypeIs(Expression, Type)\n- uid: System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: UnaryPlus(Expression)\n  fullName: System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression)\n    name: UnaryPlus\n    fullName: System.Linq.Expressions.Expression.UnaryPlus\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression)\n    name: UnaryPlus\n    fullName: System.Linq.Expressions.Expression.UnaryPlus\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression)\n  nameWithType: Expression.UnaryPlus(Expression)\n- uid: System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: UnaryPlus(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: UnaryPlus\n    fullName: System.Linq.Expressions.Expression.UnaryPlus\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: UnaryPlus\n    fullName: System.Linq.Expressions.Expression.UnaryPlus\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.UnaryPlus(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.Unbox(System.Linq.Expressions.Expression,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Unbox(Expression, Type)\n  fullName: System.Linq.Expressions.Expression.Unbox(System.Linq.Expressions.Expression, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Unbox(System.Linq.Expressions.Expression,System.Type)\n    name: Unbox\n    fullName: System.Linq.Expressions.Expression.Unbox\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Unbox(System.Linq.Expressions.Expression,System.Type)\n    name: Unbox\n    fullName: System.Linq.Expressions.Expression.Unbox\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Unbox(System.Linq.Expressions.Expression,System.Type)\n  nameWithType: Expression.Unbox(Expression, Type)\n- uid: System.Linq.Expressions.Expression.Variable(System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Variable(Type)\n  fullName: System.Linq.Expressions.Expression.Variable(System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Variable(System.Type)\n    name: Variable\n    fullName: System.Linq.Expressions.Expression.Variable\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Variable(System.Type)\n    name: Variable\n    fullName: System.Linq.Expressions.Expression.Variable\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Variable(System.Type)\n  nameWithType: Expression.Variable(Type)\n- uid: System.Linq.Expressions.Expression.Variable(System.Type,System.String)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Variable(Type, String)\n  fullName: System.Linq.Expressions.Expression.Variable(System.Type, System.String)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Variable(System.Type,System.String)\n    name: Variable\n    fullName: System.Linq.Expressions.Expression.Variable\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Variable(System.Type,System.String)\n    name: Variable\n    fullName: System.Linq.Expressions.Expression.Variable\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Variable(System.Type,System.String)\n  nameWithType: Expression.Variable(Type, String)\n- uid: System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: VisitChildren(ExpressionVisitor)\n  fullName: System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)\n    name: VisitChildren\n    fullName: System.Linq.Expressions.Expression.VisitChildren\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ExpressionVisitor\n    name: ExpressionVisitor\n    fullName: System.Linq.Expressions.ExpressionVisitor\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)\n    name: VisitChildren\n    fullName: System.Linq.Expressions.Expression.VisitChildren\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ExpressionVisitor\n    name: ExpressionVisitor\n    fullName: System.Linq.Expressions.ExpressionVisitor\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)\n  nameWithType: Expression.VisitChildren(ExpressionVisitor)\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression}\n  parent: System.Collections.ObjectModel\n  definition: System.Collections.ObjectModel.ReadOnlyCollection`1\n  name: ReadOnlyCollection<Expression>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Linq.Expressions.Expression>\n  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of System.Linq.Expressions.Expression)\n  name.vb: ReadOnlyCollection(Of Expression)\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression}\n  nameWithType: ReadOnlyCollection<Expression>\n  nameWithType.vb: ReadOnlyCollection(Of Expression)\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: ReadOnlyCollection<T>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>\n  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T)\n  name.vb: ReadOnlyCollection(Of T)\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection`1\n  nameWithType: ReadOnlyCollection<T>\n  nameWithType.vb: ReadOnlyCollection(Of T)\n- uid: System.Collections.ObjectModel\n  isExternal: false\n  name: System.Collections.ObjectModel\n  fullName: System.Collections.ObjectModel\n  commentId: N:System.Collections.ObjectModel\n  nameWithType: System.Collections.ObjectModel\n- uid: System.Linq.Expressions.Expression.Type\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Type\n  fullName: System.Linq.Expressions.Expression.Type\n  commentId: P:System.Linq.Expressions.Expression.Type\n  nameWithType: Expression.Type\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  fullName: System.Type\n  commentId: T:System.Type\n  nameWithType: Type\n- uid: System.Linq.Expressions.Expression.Accept(System.Linq.Expressions.ExpressionVisitor)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Accept(ExpressionVisitor)\n  fullName: System.Linq.Expressions.Expression.Accept(System.Linq.Expressions.ExpressionVisitor)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Accept(System.Linq.Expressions.ExpressionVisitor)\n    name: Accept\n    fullName: System.Linq.Expressions.Expression.Accept\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ExpressionVisitor\n    name: ExpressionVisitor\n    fullName: System.Linq.Expressions.ExpressionVisitor\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Accept(System.Linq.Expressions.ExpressionVisitor)\n    name: Accept\n    fullName: System.Linq.Expressions.Expression.Accept\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ExpressionVisitor\n    name: ExpressionVisitor\n    fullName: System.Linq.Expressions.ExpressionVisitor\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Accept(System.Linq.Expressions.ExpressionVisitor)\n  nameWithType: Expression.Accept(ExpressionVisitor)\n- uid: System.Linq.Expressions.ExpressionVisitor\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: ExpressionVisitor\n  fullName: System.Linq.Expressions.ExpressionVisitor\n  commentId: T:System.Linq.Expressions.ExpressionVisitor\n  nameWithType: ExpressionVisitor\n- uid: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<Expression>\n  fullName: System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>\n  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression)\n  name.vb: IEnumerable(Of Expression)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: T:System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}\n  nameWithType: IEnumerable<Expression>\n  nameWithType.vb: IEnumerable(Of Expression)\n- uid: System.Linq.Expressions.NewArrayExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: NewArrayExpression\n  fullName: System.Linq.Expressions.NewArrayExpression\n  commentId: T:System.Linq.Expressions.NewArrayExpression\n  nameWithType: NewArrayExpression\n- uid: System.Collections.Generic.IEnumerable`1\n  isExternal: false\n  name: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n  fullname.vb: System.Collections.Generic.IEnumerable(Of T)\n  name.vb: IEnumerable(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  commentId: T:System.Collections.Generic.IEnumerable`1\n  nameWithType: IEnumerable<T>\n  nameWithType.vb: IEnumerable(Of T)\n- uid: System.Collections.Generic\n  isExternal: false\n  name: System.Collections.Generic\n  fullName: System.Collections.Generic\n  commentId: N:System.Collections.Generic\n  nameWithType: System.Collections.Generic\n"}