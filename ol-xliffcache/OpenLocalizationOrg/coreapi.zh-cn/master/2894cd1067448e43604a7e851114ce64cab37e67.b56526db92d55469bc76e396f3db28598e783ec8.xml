{"nodes":[{"pos":[1514,1537],"content":"CustomReflectionContext","needQuote":true,"nodes":[{"content":"CustomReflectionContext","pos":[0,23]}]},{"pos":[3088,3113],"content":"CustomReflectionContext()","needQuote":true,"nodes":[{"content":"CustomReflectionContext()","pos":[0,25]}]},{"pos":[4329,4371],"content":"CustomReflectionContext(ReflectionContext)","needQuote":true,"nodes":[{"content":"CustomReflectionContext(ReflectionContext)","pos":[0,42]}]},{"content":"\\n&lt;p&gt;The reflection context to use as a base.&lt;/p&gt;\\n","pos":[5340,5391],"source":"\\n<p>The reflection context to use as a base.</p>\\n"},{"pos":[5844,5863],"content":"AddProperties(Type)","needQuote":true,"nodes":[{"content":"AddProperties(Type)","pos":[0,19]}]},{"content":"\\n&lt;p&gt;The type to add properties to.&lt;/p&gt;\\n","pos":[6779,6820],"source":"\\n<p>The type to add properties to.</p>\\n"},{"content":"\\n&lt;p&gt;A collection of additional properties for the specified type.&lt;/p&gt;\\n","pos":[6937,7009],"source":"\\n<p>A collection of additional properties for the specified type.</p>\\n"},{"pos":[7764,7838],"content":"CreateProperty(Type, String, Func<Object, Object>, Action<Object, Object>)","needQuote":true,"nodes":[{"content":"CreateProperty(Type, String, Func&lt;Object, Object&gt;, Action&lt;Object, Object&gt;)","pos":[0,74],"source":"CreateProperty(Type, String, Func<Object, Object>, Action<Object, Object>)"}]},{"content":"\\n&lt;p&gt;The type of the property to create.&lt;/p&gt;\\n","pos":[9080,9126],"source":"\\n<p>The type of the property to create.</p>\\n"},{"content":"\\n&lt;p&gt;The name of the property to create.&lt;/p&gt;\\n","pos":[9189,9235],"source":"\\n<p>The name of the property to create.</p>\\n"},{"content":"\\n&lt;p&gt;An object that represents the property's &lt;strong&gt;get&lt;/strong&gt; accessor.&lt;/p&gt;\\n","pos":[9327,9409],"source":"\\n<p>An object that represents the property's <strong>get</strong> accessor.</p>\\n"},{"content":"\\n&lt;p&gt;An object that represents the property's &lt;strong&gt;set&lt;/strong&gt; accessor.&lt;/p&gt;\\n","pos":[9503,9585],"source":"\\n<p>An object that represents the property's <strong>set</strong> accessor.</p>\\n"},{"content":"\\n&lt;p&gt;An object that represents the property.&lt;/p&gt;\\n","pos":[9662,9712],"source":"\\n<p>An object that represents the property.</p>\\n"},{"pos":[11425,11571],"content":"CreateProperty(Type, String, Func<Object, Object>, Action<Object, Object>, IEnumerable<Attribute>, IEnumerable<Attribute>, IEnumerable<Attribute>)","needQuote":true,"nodes":[{"content":"CreateProperty(Type, String, Func&lt;Object, Object&gt;, Action&lt;Object, Object&gt;, IEnumerable&lt;Attribute&gt;, IEnumerable&lt;Attribute&gt;, IEnumerable&lt;Attribute&gt;)","pos":[0,146],"source":"CreateProperty(Type, String, Func<Object, Object>, Action<Object, Object>, IEnumerable<Attribute>, IEnumerable<Attribute>, IEnumerable<Attribute>)"}]},{"content":"\\n&lt;p&gt;The type of the property to create.&lt;/p&gt;\\n","pos":[13333,13379],"source":"\\n<p>The type of the property to create.</p>\\n"},{"content":"\\n&lt;p&gt;The name of the property to create.&lt;/p&gt;\\n","pos":[13442,13488],"source":"\\n<p>The name of the property to create.</p>\\n"},{"content":"\\n&lt;p&gt;An object that represents the property's &lt;strong&gt;get&lt;/strong&gt; accessor.&lt;/p&gt;\\n","pos":[13580,13662],"source":"\\n<p>An object that represents the property's <strong>get</strong> accessor.</p>\\n"},{"content":"\\n&lt;p&gt;An object that represents the property's &lt;strong&gt;set&lt;/strong&gt; accessor.&lt;/p&gt;\\n","pos":[13756,13838],"source":"\\n<p>An object that represents the property's <strong>set</strong> accessor.</p>\\n"},{"content":"\\n&lt;p&gt;A collection of custom attributes to apply to the property.&lt;/p&gt;\\n","pos":[13964,14034],"source":"\\n<p>A collection of custom attributes to apply to the property.</p>\\n"},{"content":"\\n&lt;p&gt;A collection of custom attributes to apply to the property's &lt;strong&gt;get&lt;/strong&gt; accessor.&lt;/p&gt;\\n","pos":[14158,14260],"source":"\\n<p>A collection of custom attributes to apply to the property's <strong>get</strong> accessor.</p>\\n"},{"content":"\\n&lt;p&gt;A collection of custom attributes to apply to the property's &lt;strong&gt;set&lt;/strong&gt; accessor.&lt;/p&gt;\\n","pos":[14384,14486],"source":"\\n<p>A collection of custom attributes to apply to the property's <strong>set</strong> accessor.</p>\\n"},{"content":"\\n&lt;p&gt;An object that represents the property.&lt;/p&gt;\\n","pos":[14563,14613],"source":"\\n<p>An object that represents the property.</p>\\n"},{"pos":[16164,16216],"content":"GetCustomAttributes(MemberInfo, IEnumerable<Object>)","needQuote":true,"nodes":[{"content":"GetCustomAttributes(MemberInfo, IEnumerable&lt;Object&gt;)","pos":[0,52],"source":"GetCustomAttributes(MemberInfo, IEnumerable<Object>)"}]},{"content":"\\n&lt;p&gt;The member whose custom attributes will be returned.&lt;/p&gt;\\n","pos":[17329,17392],"source":"\\n<p>The member whose custom attributes will be returned.</p>\\n"},{"content":"\\n&lt;p&gt;A collection of the member's attributes in its current context.&lt;/p&gt;\\n","pos":[17509,17583],"source":"\\n<p>A collection of the member's attributes in its current context.</p>\\n"},{"content":"\\n&lt;p&gt;A collection that represents the custom attributes of the specified member in this reflection context.&lt;/p&gt;\\n","pos":[17683,17796],"source":"\\n<p>A collection that represents the custom attributes of the specified member in this reflection context.</p>\\n"},{"pos":[18866,18921],"content":"GetCustomAttributes(ParameterInfo, IEnumerable<Object>)","needQuote":true,"nodes":[{"content":"GetCustomAttributes(ParameterInfo, IEnumerable&lt;Object&gt;)","pos":[0,55],"source":"GetCustomAttributes(ParameterInfo, IEnumerable<Object>)"}]},{"content":"\\n&lt;p&gt;The parameter whose custom attributes will be returned.&lt;/p&gt;\\n","pos":[20058,20124],"source":"\\n<p>The parameter whose custom attributes will be returned.</p>\\n"},{"content":"\\n&lt;p&gt;A collection of the parameter's attributes in its current context.&lt;/p&gt;\\n","pos":[20241,20318],"source":"\\n<p>A collection of the parameter's attributes in its current context.</p>\\n"},{"content":"\\n&lt;p&gt;A collection that represents the custom attributes of the specified parameter in this reflection context.&lt;/p&gt;\\n","pos":[20418,20534],"source":"\\n<p>A collection that represents the custom attributes of the specified parameter in this reflection context.</p>\\n"},{"pos":[21415,21436],"content":"MapAssembly(Assembly)","needQuote":true,"nodes":[{"content":"MapAssembly(Assembly)","pos":[0,21]}]},{"content":"\\n&lt;p&gt;The external representation of the assembly to represent in this context.&lt;/p&gt;\\n","pos":[22335,22419],"source":"\\n<p>The external representation of the assembly to represent in this context.</p>\\n"},{"content":"\\n&lt;p&gt;The representation of the assembly in this reflection context.&lt;/p&gt;\\n","pos":[22492,22565],"source":"\\n<p>The representation of the assembly in this reflection context.</p>\\n"},{"pos":[23135,23152],"content":"MapType(TypeInfo)","needQuote":true,"nodes":[{"content":"MapType(TypeInfo)","pos":[0,17]}]},{"content":"\\n&lt;p&gt;The external representation of the type to represent in this context.","pos":[24010,24084],"source":"\\n<p>The external representation of the type to represent in this context."},{"content":"&lt;/p&gt;\\n","pos":[24085,24091],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The representation of the type in this reflection context.","pos":[24164,24227],"source":"\\n<p>The representation of the type in this reflection context."},{"content":"&lt;/p&gt;\\n","pos":[24228,24234],"source":" </p>\\n"},{"pos":[24538,24563],"content":"System.Reflection.Context","needQuote":true,"nodes":[{"content":"System.Reflection.Context","pos":[0,25]}]},{"pos":[24751,24757],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[24935,24952],"content":"ReflectionContext","needQuote":true,"nodes":[{"content":"ReflectionContext","pos":[0,17]}]},{"pos":[25234,25258],"content":"GetTypeForObject(Object)","needQuote":true,"nodes":[{"content":"GetTypeForObject(Object)","pos":[0,24]}]},{"pos":[25441,25457],"content":"GetTypeForObject","needQuote":true,"nodes":[{"content":"GetTypeForObject","pos":[0,16]}]},{"pos":[25556,25557],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25607,25613],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[25673,25674],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25789,25805],"content":"GetTypeForObject","needQuote":true,"nodes":[{"content":"GetTypeForObject","pos":[0,16]}]},{"pos":[25904,25905],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25955,25961],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[26021,26022],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26262,26272],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[26367,26375],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[26444,26445],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26472,26473],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26543,26551],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[26620,26621],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26648,26649],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26832,26846],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[26965,26971],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[27038,27039],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27089,27095],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[27155,27156],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27239,27245],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[27312,27313],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27363,27369],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[27429,27430],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27644,27666],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[27814,27820],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[27887,27888],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27938,27944],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[28005,28006]},{"pos":[28061,28067],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[28127,28128],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28225,28231],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[28298,28299],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28349,28355],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[28416,28417]},{"pos":[28472,28478],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[28538,28539],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28784,28815],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[28981,28996],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[29072,29073],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29123,29129],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[29190,29191]},{"pos":[29246,29252],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[29312,29313],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29419,29434],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[29510,29511],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29561,29567],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[29628,29629]},{"pos":[29684,29690],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[29750,29751],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29981,29994],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[30095,30106],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[30178,30179],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30206,30207],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30280,30291],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[30363,30364],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30391,30392],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30567,30576],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[30669,30676],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[30744,30745],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30772,30773],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30842,30849],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[30917,30918],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30945,30946],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31121,31138],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[31247,31262],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[31338,31339],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31366,31367],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31444,31459],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[31535,31536],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31563,31564],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31709,31715],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[31833,31850],"content":"System.Reflection","needQuote":true,"nodes":[{"content":"System.Reflection","pos":[0,17]}]},{"pos":[32012,32016],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[32267,32292],"content":"IEnumerable<PropertyInfo>","needQuote":true,"nodes":[{"content":"IEnumerable&lt;PropertyInfo&gt;","pos":[0,25],"source":"IEnumerable<PropertyInfo>"}]},{"pos":[32580,32591],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[32676,32677],"content":"<","needQuote":true,"nodes":[]},{"pos":[32744,32756],"content":"PropertyInfo","needQuote":true,"nodes":[{"content":"PropertyInfo","pos":[0,12]}]},{"pos":[32905,32916],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[33002,33005]},{"pos":[33079,33091],"content":"PropertyInfo","needQuote":true,"nodes":[{"content":"PropertyInfo","pos":[0,12]}]},{"pos":[33147,33148],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[33417,33431],"content":"IEnumerable<T>","needQuote":true,"nodes":[{"content":"IEnumerable&lt;T&gt;","pos":[0,14],"source":"IEnumerable<T>"}]},{"pos":[33650,33661],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[33725,33726],"content":"<","needQuote":true,"nodes":[]},{"pos":[33753,33754],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[33874,33885],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[33950,33953]},{"pos":[33987,33988],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[34015,34016],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34219,34245],"content":"System.Collections.Generic","needQuote":true,"nodes":[{"content":"System.Collections.Generic","pos":[0,26]}]},{"pos":[34436,34442],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[34622,34642],"content":"Func<Object, Object>","needQuote":true,"nodes":[{"content":"Func&lt;Object, Object&gt;","pos":[0,20],"source":"Func<Object, Object>"}]},{"pos":[34840,34844],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[34902,34903],"content":"<","needQuote":true,"nodes":[]},{"pos":[34953,34959],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[35020,35021]},{"pos":[35076,35082],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[35208,35212],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[35271,35274]},{"pos":[35331,35337],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[35398,35399]},{"pos":[35454,35460],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[35520,35521],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[35779,35801],"content":"Action<Object, Object>","needQuote":true,"nodes":[{"content":"Action&lt;Object, Object&gt;","pos":[0,22],"source":"Action<Object, Object>"}]},{"pos":[36007,36013],"content":"Action","needQuote":true,"nodes":[{"content":"Action","pos":[0,6]}]},{"pos":[36073,36074],"content":"<","needQuote":true,"nodes":[]},{"pos":[36124,36130],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[36191,36192]},{"pos":[36247,36253],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[36381,36387],"content":"Action","needQuote":true,"nodes":[{"content":"Action","pos":[0,6]}]},{"content":"(Of","pos":[36448,36451]},{"pos":[36508,36514],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[36575,36576]},{"pos":[36631,36637],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[36697,36698],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[36951,36963],"content":"PropertyInfo","needQuote":true,"nodes":[{"content":"PropertyInfo","pos":[0,12]}]},{"pos":[37131,37147],"content":"Func<T, TResult>","needQuote":true,"nodes":[{"content":"Func&lt;T, TResult&gt;","pos":[0,16],"source":"Func<T, TResult>"}]},{"pos":[37305,37309],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[37346,37347],"content":"<","needQuote":true,"nodes":[]},{"pos":[37374,37375],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[37403,37404]},{"pos":[37436,37443],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[37542,37546],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[37584,37587]},{"pos":[37621,37622],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[37650,37651]},{"pos":[37683,37690],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[37723,37724],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[37893,37907],"content":"Action<T1, T2>","needQuote":true,"nodes":[{"content":"Action&lt;T1, T2&gt;","pos":[0,14],"source":"Action<T1, T2>"}]},{"pos":[38061,38067],"content":"Action","needQuote":true,"nodes":[{"content":"Action","pos":[0,6]}]},{"pos":[38106,38107],"content":"<","needQuote":true,"nodes":[]},{"pos":[38134,38136],"content":"T1","needQuote":true,"nodes":[{"content":"T1","pos":[0,2]}]},{"content":",","pos":[38165,38166]},{"pos":[38198,38200],"content":"T2","needQuote":true,"nodes":[{"content":"T2","pos":[0,2]}]},{"pos":[38296,38302],"content":"Action","needQuote":true,"nodes":[{"content":"Action","pos":[0,6]}]},{"content":"(Of","pos":[38342,38345]},{"pos":[38379,38381],"content":"T1","needQuote":true,"nodes":[{"content":"T1","pos":[0,2]}]},{"content":",","pos":[38410,38411]},{"pos":[38443,38445],"content":"T2","needQuote":true,"nodes":[{"content":"T2","pos":[0,2]}]},{"pos":[38473,38474],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[38754,38776],"content":"IEnumerable<Attribute>","needQuote":true,"nodes":[{"content":"IEnumerable&lt;Attribute&gt;","pos":[0,22],"source":"IEnumerable<Attribute>"}]},{"pos":[39033,39044],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[39129,39130],"content":"<","needQuote":true,"nodes":[]},{"pos":[39183,39192],"content":"Attribute","needQuote":true,"nodes":[{"content":"Attribute","pos":[0,9]}]},{"pos":[39348,39359],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[39445,39448]},{"pos":[39508,39517],"content":"Attribute","needQuote":true,"nodes":[{"content":"Attribute","pos":[0,9]}]},{"pos":[39580,39581],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[39846,39856],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"pos":[40130,40149],"content":"IEnumerable<Object>","needQuote":true,"nodes":[{"content":"IEnumerable&lt;Object&gt;","pos":[0,19],"source":"IEnumerable<Object>"}]},{"pos":[40397,40408],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[40493,40494],"content":"<","needQuote":true,"nodes":[]},{"pos":[40544,40550],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[40703,40714],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[40800,40803]},{"pos":[40860,40866],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[40926,40927],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[41186,41199],"content":"ParameterInfo","needQuote":true,"nodes":[{"content":"ParameterInfo","pos":[0,13]}]},{"pos":[41477,41498],"content":"MapAssembly(Assembly)","needQuote":true,"nodes":[{"content":"MapAssembly(Assembly)","pos":[0,21]}]},{"pos":[41697,41708],"content":"MapAssembly","needQuote":true,"nodes":[{"content":"MapAssembly","pos":[0,11]}]},{"pos":[41802,41803],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[41866,41874],"content":"Assembly","needQuote":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[41947,41948],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[42071,42082],"content":"MapAssembly","needQuote":true,"nodes":[{"content":"MapAssembly","pos":[0,11]}]},{"pos":[42176,42177],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[42240,42248],"content":"Assembly","needQuote":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[42321,42322],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[42576,42584],"content":"Assembly","needQuote":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[42843,42860],"content":"MapType(TypeInfo)","needQuote":true,"nodes":[{"content":"MapType(TypeInfo)","pos":[0,17]}]},{"pos":[43051,43058],"content":"MapType","needQuote":true,"nodes":[{"content":"MapType","pos":[0,7]}]},{"pos":[43148,43149],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[43212,43220],"content":"TypeInfo","needQuote":true,"nodes":[{"content":"TypeInfo","pos":[0,8]}]},{"pos":[43293,43294],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[43413,43420],"content":"MapType","needQuote":true,"nodes":[{"content":"MapType","pos":[0,7]}]},{"pos":[43510,43511],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[43574,43582],"content":"TypeInfo","needQuote":true,"nodes":[{"content":"TypeInfo","pos":[0,8]}]},{"pos":[43655,43656],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[43902,43910],"content":"TypeInfo","needQuote":true,"nodes":[{"content":"TypeInfo","pos":[0,8]}]}],"content":"items:\n- uid: System.Reflection.Context.CustomReflectionContext\n  commentId: T:System.Reflection.Context.CustomReflectionContext\n  id: CustomReflectionContext\n  parent: System.Reflection.Context\n  children:\n  - System.Reflection.Context.CustomReflectionContext.#ctor\n  - System.Reflection.Context.CustomReflectionContext.#ctor(System.Reflection.ReflectionContext)\n  - System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)\n  - System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object})\n  - System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})\n  - System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Object})\n  - System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.ParameterInfo,System.Collections.Generic.IEnumerable{System.Object})\n  - System.Reflection.Context.CustomReflectionContext.MapAssembly(System.Reflection.Assembly)\n  - System.Reflection.Context.CustomReflectionContext.MapType(System.Reflection.TypeInfo)\n  langs:\n  - csharp\n  - vb\n  name: CustomReflectionContext\n  fullName: System.Reflection.Context.CustomReflectionContext\n  type: Class\n  source:\n    remote:\n      path: src/System.Reflection.Context/ref/System.Reflection.Context.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CustomReflectionContext\n    path: src/System.Reflection.Context/ref/System.Reflection.Context.cs\n    startLine: 10\n  assemblies:\n  - System.Reflection.Context\n  namespace: System.Reflection.Context\n  summary: \"\\n<p>Represents a customizable reflection context.</p>\\n\"\n  syntax:\n    content: 'public abstract class CustomReflectionContext : ReflectionContext'\n    content.vb: >-\n      Public MustInherit Class CustomReflectionContext\n          Inherits ReflectionContext\n  inheritance:\n  - System.Object\n  - System.Reflection.ReflectionContext\n  inheritedMembers:\n  - System.Reflection.ReflectionContext.GetTypeForObject(System.Object)\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - abstract\n  - class\n  modifiers.vb:\n  - Public\n  - MustInherit\n  - Class\n  nameWithType: CustomReflectionContext\n- uid: System.Reflection.Context.CustomReflectionContext.#ctor\n  commentId: M:System.Reflection.Context.CustomReflectionContext.#ctor\n  id: '#ctor'\n  parent: System.Reflection.Context.CustomReflectionContext\n  langs:\n  - csharp\n  - vb\n  name: CustomReflectionContext()\n  fullName: System.Reflection.Context.CustomReflectionContext.CustomReflectionContext()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Reflection.Context/ref/System.Reflection.Context.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Reflection.Context/ref/System.Reflection.Context.cs\n    startLine: 12\n  assemblies:\n  - System.Reflection.Context\n  namespace: System.Reflection.Context\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Reflection.Context.CustomReflectionContext\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: protected CustomReflectionContext()\n    content.vb: Protected Sub New\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: CustomReflectionContext.CustomReflectionContext()\n- uid: System.Reflection.Context.CustomReflectionContext.#ctor(System.Reflection.ReflectionContext)\n  commentId: M:System.Reflection.Context.CustomReflectionContext.#ctor(System.Reflection.ReflectionContext)\n  id: '#ctor(System.Reflection.ReflectionContext)'\n  parent: System.Reflection.Context.CustomReflectionContext\n  langs:\n  - csharp\n  - vb\n  name: CustomReflectionContext(ReflectionContext)\n  fullName: System.Reflection.Context.CustomReflectionContext.CustomReflectionContext(System.Reflection.ReflectionContext)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Reflection.Context/ref/System.Reflection.Context.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Reflection.Context/ref/System.Reflection.Context.cs\n    startLine: 13\n  assemblies:\n  - System.Reflection.Context\n  namespace: System.Reflection.Context\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Reflection.Context.CustomReflectionContext\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified reflection context as a base.</p>\\n\"\n  syntax:\n    content: protected CustomReflectionContext(ReflectionContext source)\n    content.vb: Protected Sub New(source As ReflectionContext)\n    parameters:\n    - id: source\n      type: System.Reflection.ReflectionContext\n      description: \"\\n<p>The reflection context to use as a base.</p>\\n\"\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: CustomReflectionContext.CustomReflectionContext(ReflectionContext)\n- uid: System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)\n  commentId: M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)\n  id: AddProperties(System.Type)\n  parent: System.Reflection.Context.CustomReflectionContext\n  langs:\n  - csharp\n  - vb\n  name: AddProperties(Type)\n  fullName: System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)\n  type: Method\n  source:\n    remote:\n      path: src/System.Reflection.Context/ref/System.Reflection.Context.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AddProperties\n    path: src/System.Reflection.Context/ref/System.Reflection.Context.cs\n    startLine: 14\n  assemblies:\n  - System.Reflection.Context\n  namespace: System.Reflection.Context\n  summary: \"\\n<p>When overridden in a derived class, provides a collection of additional properties for the specified type, as represented in this reflection context.</p>\\n\"\n  syntax:\n    content: protected virtual IEnumerable<PropertyInfo> AddProperties(Type type)\n    content.vb: Protected Overridable Function AddProperties(type As Type) As IEnumerable(Of PropertyInfo)\n    parameters:\n    - id: type\n      type: System.Type\n      description: \"\\n<p>The type to add properties to.</p>\\n\"\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Reflection.PropertyInfo}\n      description: \"\\n<p>A collection of additional properties for the specified type.</p>\\n\"\n  modifiers.csharp:\n  - protected\n  - virtual\n  modifiers.vb:\n  - Protected\n  - Overridable\n  nameWithType: CustomReflectionContext.AddProperties(Type)\n- uid: System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object})\n  commentId: M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object})\n  id: CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object})\n  parent: System.Reflection.Context.CustomReflectionContext\n  langs:\n  - csharp\n  - vb\n  name: CreateProperty(Type, String, Func<Object, Object>, Action<Object, Object>)\n  fullName: System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type, System.String, System.Func<System.Object, System.Object>, System.Action<System.Object, System.Object>)\n  type: Method\n  source:\n    remote:\n      path: src/System.Reflection.Context/ref/System.Reflection.Context.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CreateProperty\n    path: src/System.Reflection.Context/ref/System.Reflection.Context.cs\n    startLine: 15\n  assemblies:\n  - System.Reflection.Context\n  namespace: System.Reflection.Context\n  summary: \"\\n<p>Creates an object that represents a property to be added to a type, to be used with the <xref href=\\\"System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method.</p>\\n\"\n  syntax:\n    content: protected PropertyInfo CreateProperty(Type propertyType, string name, Func<object, object> getter, Action<object, object> setter)\n    content.vb: Protected Function CreateProperty(propertyType As Type, name As String, getter As Func(Of Object, Object), setter As Action(Of Object, Object)) As PropertyInfo\n    parameters:\n    - id: propertyType\n      type: System.Type\n      description: \"\\n<p>The type of the property to create.</p>\\n\"\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the property to create.</p>\\n\"\n    - id: getter\n      type: System.Func{System.Object,System.Object}\n      description: \"\\n<p>An object that represents the property's <strong>get</strong> accessor.</p>\\n\"\n    - id: setter\n      type: System.Action{System.Object,System.Object}\n      description: \"\\n<p>An object that represents the property's <strong>set</strong> accessor.</p>\\n\"\n    return:\n      type: System.Reflection.PropertyInfo\n      description: \"\\n<p>An object that represents the property.</p>\\n\"\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  fullName.vb: System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type, System.String, System.Func(Of System.Object, System.Object), System.Action(Of System.Object, System.Object))\n  name.vb: CreateProperty(Type, String, Func(Of Object, Object), Action(Of Object, Object))\n  nameWithType: CustomReflectionContext.CreateProperty(Type, String, Func<Object, Object>, Action<Object, Object>)\n  nameWithType.vb: CustomReflectionContext.CreateProperty(Type, String, Func(Of Object, Object), Action(Of Object, Object))\n- uid: System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})\n  commentId: M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})\n  id: CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})\n  parent: System.Reflection.Context.CustomReflectionContext\n  langs:\n  - csharp\n  - vb\n  name: CreateProperty(Type, String, Func<Object, Object>, Action<Object, Object>, IEnumerable<Attribute>, IEnumerable<Attribute>, IEnumerable<Attribute>)\n  fullName: System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type, System.String, System.Func<System.Object, System.Object>, System.Action<System.Object, System.Object>, System.Collections.Generic.IEnumerable<System.Attribute>, System.Collections.Generic.IEnumerable<System.Attribute>, System.Collections.Generic.IEnumerable<System.Attribute>)\n  type: Method\n  source:\n    remote:\n      path: src/System.Reflection.Context/ref/System.Reflection.Context.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CreateProperty\n    path: src/System.Reflection.Context/ref/System.Reflection.Context.cs\n    startLine: 16\n  assemblies:\n  - System.Reflection.Context\n  namespace: System.Reflection.Context\n  summary: \"\\n<p>Creates an object that represents a property to be added to a type, to be used with the <xref href=\\\"System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method and using the specified custom attributes.</p>\\n\"\n  syntax:\n    content: protected PropertyInfo CreateProperty(Type propertyType, string name, Func<object, object> getter, Action<object, object> setter, IEnumerable<Attribute> propertyCustomAttributes, IEnumerable<Attribute> getterCustomAttributes, IEnumerable<Attribute> setterCustomAttributes)\n    content.vb: Protected Function CreateProperty(propertyType As Type, name As String, getter As Func(Of Object, Object), setter As Action(Of Object, Object), propertyCustomAttributes As IEnumerable(Of Attribute), getterCustomAttributes As IEnumerable(Of Attribute), setterCustomAttributes As IEnumerable(Of Attribute)) As PropertyInfo\n    parameters:\n    - id: propertyType\n      type: System.Type\n      description: \"\\n<p>The type of the property to create.</p>\\n\"\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the property to create.</p>\\n\"\n    - id: getter\n      type: System.Func{System.Object,System.Object}\n      description: \"\\n<p>An object that represents the property's <strong>get</strong> accessor.</p>\\n\"\n    - id: setter\n      type: System.Action{System.Object,System.Object}\n      description: \"\\n<p>An object that represents the property's <strong>set</strong> accessor.</p>\\n\"\n    - id: propertyCustomAttributes\n      type: System.Collections.Generic.IEnumerable{System.Attribute}\n      description: \"\\n<p>A collection of custom attributes to apply to the property.</p>\\n\"\n    - id: getterCustomAttributes\n      type: System.Collections.Generic.IEnumerable{System.Attribute}\n      description: \"\\n<p>A collection of custom attributes to apply to the property's <strong>get</strong> accessor.</p>\\n\"\n    - id: setterCustomAttributes\n      type: System.Collections.Generic.IEnumerable{System.Attribute}\n      description: \"\\n<p>A collection of custom attributes to apply to the property's <strong>set</strong> accessor.</p>\\n\"\n    return:\n      type: System.Reflection.PropertyInfo\n      description: \"\\n<p>An object that represents the property.</p>\\n\"\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  fullName.vb: System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type, System.String, System.Func(Of System.Object, System.Object), System.Action(Of System.Object, System.Object), System.Collections.Generic.IEnumerable(Of System.Attribute), System.Collections.Generic.IEnumerable(Of System.Attribute), System.Collections.Generic.IEnumerable(Of System.Attribute))\n  name.vb: CreateProperty(Type, String, Func(Of Object, Object), Action(Of Object, Object), IEnumerable(Of Attribute), IEnumerable(Of Attribute), IEnumerable(Of Attribute))\n  nameWithType: CustomReflectionContext.CreateProperty(Type, String, Func<Object, Object>, Action<Object, Object>, IEnumerable<Attribute>, IEnumerable<Attribute>, IEnumerable<Attribute>)\n  nameWithType.vb: CustomReflectionContext.CreateProperty(Type, String, Func(Of Object, Object), Action(Of Object, Object), IEnumerable(Of Attribute), IEnumerable(Of Attribute), IEnumerable(Of Attribute))\n- uid: System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Object})\n  commentId: M:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Object})\n  id: GetCustomAttributes(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Object})\n  parent: System.Reflection.Context.CustomReflectionContext\n  langs:\n  - csharp\n  - vb\n  name: GetCustomAttributes(MemberInfo, IEnumerable<Object>)\n  fullName: System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.MemberInfo, System.Collections.Generic.IEnumerable<System.Object>)\n  type: Method\n  source:\n    remote:\n      path: src/System.Reflection.Context/ref/System.Reflection.Context.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetCustomAttributes\n    path: src/System.Reflection.Context/ref/System.Reflection.Context.cs\n    startLine: 17\n  assemblies:\n  - System.Reflection.Context\n  namespace: System.Reflection.Context\n  summary: \"\\n<p>When overridden in a derived class, provides a list of custom attributes for the specified member, as represented in this reflection context.</p>\\n\"\n  syntax:\n    content: protected virtual IEnumerable<object> GetCustomAttributes(MemberInfo member, IEnumerable<object> declaredAttributes)\n    content.vb: Protected Overridable Function GetCustomAttributes(member As MemberInfo, declaredAttributes As IEnumerable(Of Object)) As IEnumerable(Of Object)\n    parameters:\n    - id: member\n      type: System.Reflection.MemberInfo\n      description: \"\\n<p>The member whose custom attributes will be returned.</p>\\n\"\n    - id: declaredAttributes\n      type: System.Collections.Generic.IEnumerable{System.Object}\n      description: \"\\n<p>A collection of the member's attributes in its current context.</p>\\n\"\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Object}\n      description: \"\\n<p>A collection that represents the custom attributes of the specified member in this reflection context.</p>\\n\"\n  modifiers.csharp:\n  - protected\n  - virtual\n  modifiers.vb:\n  - Protected\n  - Overridable\n  fullName.vb: System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.MemberInfo, System.Collections.Generic.IEnumerable(Of System.Object))\n  name.vb: GetCustomAttributes(MemberInfo, IEnumerable(Of Object))\n  nameWithType: CustomReflectionContext.GetCustomAttributes(MemberInfo, IEnumerable<Object>)\n  nameWithType.vb: CustomReflectionContext.GetCustomAttributes(MemberInfo, IEnumerable(Of Object))\n- uid: System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.ParameterInfo,System.Collections.Generic.IEnumerable{System.Object})\n  commentId: M:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.ParameterInfo,System.Collections.Generic.IEnumerable{System.Object})\n  id: GetCustomAttributes(System.Reflection.ParameterInfo,System.Collections.Generic.IEnumerable{System.Object})\n  parent: System.Reflection.Context.CustomReflectionContext\n  langs:\n  - csharp\n  - vb\n  name: GetCustomAttributes(ParameterInfo, IEnumerable<Object>)\n  fullName: System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.ParameterInfo, System.Collections.Generic.IEnumerable<System.Object>)\n  type: Method\n  source:\n    remote:\n      path: src/System.Reflection.Context/ref/System.Reflection.Context.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetCustomAttributes\n    path: src/System.Reflection.Context/ref/System.Reflection.Context.cs\n    startLine: 18\n  assemblies:\n  - System.Reflection.Context\n  namespace: System.Reflection.Context\n  summary: \"\\n<p>When overridden in a derived class, provides a list of custom attributes for the specified parameter, as represented in this reflection context.</p>\\n\"\n  syntax:\n    content: protected virtual IEnumerable<object> GetCustomAttributes(ParameterInfo parameter, IEnumerable<object> declaredAttributes)\n    content.vb: Protected Overridable Function GetCustomAttributes(parameter As ParameterInfo, declaredAttributes As IEnumerable(Of Object)) As IEnumerable(Of Object)\n    parameters:\n    - id: parameter\n      type: System.Reflection.ParameterInfo\n      description: \"\\n<p>The parameter whose custom attributes will be returned.</p>\\n\"\n    - id: declaredAttributes\n      type: System.Collections.Generic.IEnumerable{System.Object}\n      description: \"\\n<p>A collection of the parameter's attributes in its current context.</p>\\n\"\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Object}\n      description: \"\\n<p>A collection that represents the custom attributes of the specified parameter in this reflection context.</p>\\n\"\n  modifiers.csharp:\n  - protected\n  - virtual\n  modifiers.vb:\n  - Protected\n  - Overridable\n  fullName.vb: System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.ParameterInfo, System.Collections.Generic.IEnumerable(Of System.Object))\n  name.vb: GetCustomAttributes(ParameterInfo, IEnumerable(Of Object))\n  nameWithType: CustomReflectionContext.GetCustomAttributes(ParameterInfo, IEnumerable<Object>)\n  nameWithType.vb: CustomReflectionContext.GetCustomAttributes(ParameterInfo, IEnumerable(Of Object))\n- uid: System.Reflection.Context.CustomReflectionContext.MapAssembly(System.Reflection.Assembly)\n  commentId: M:System.Reflection.Context.CustomReflectionContext.MapAssembly(System.Reflection.Assembly)\n  id: MapAssembly(System.Reflection.Assembly)\n  parent: System.Reflection.Context.CustomReflectionContext\n  langs:\n  - csharp\n  - vb\n  name: MapAssembly(Assembly)\n  fullName: System.Reflection.Context.CustomReflectionContext.MapAssembly(System.Reflection.Assembly)\n  type: Method\n  source:\n    remote:\n      path: src/System.Reflection.Context/ref/System.Reflection.Context.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: MapAssembly\n    path: src/System.Reflection.Context/ref/System.Reflection.Context.cs\n    startLine: 19\n  assemblies:\n  - System.Reflection.Context\n  namespace: System.Reflection.Context\n  summary: \"\\n<p>Gets the representation, in this reflection context, of an assembly that is represented by an object from another reflection context. </p>\\n\"\n  syntax:\n    content: public override Assembly MapAssembly(Assembly assembly)\n    content.vb: Public Overrides Function MapAssembly(assembly As Assembly) As Assembly\n    parameters:\n    - id: assembly\n      type: System.Reflection.Assembly\n      description: \"\\n<p>The external representation of the assembly to represent in this context.</p>\\n\"\n    return:\n      type: System.Reflection.Assembly\n      description: \"\\n<p>The representation of the assembly in this reflection context.</p>\\n\"\n  overridden: System.Reflection.ReflectionContext.MapAssembly(System.Reflection.Assembly)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: CustomReflectionContext.MapAssembly(Assembly)\n- uid: System.Reflection.Context.CustomReflectionContext.MapType(System.Reflection.TypeInfo)\n  commentId: M:System.Reflection.Context.CustomReflectionContext.MapType(System.Reflection.TypeInfo)\n  id: MapType(System.Reflection.TypeInfo)\n  parent: System.Reflection.Context.CustomReflectionContext\n  langs:\n  - csharp\n  - vb\n  name: MapType(TypeInfo)\n  fullName: System.Reflection.Context.CustomReflectionContext.MapType(System.Reflection.TypeInfo)\n  type: Method\n  source:\n    remote:\n      path: src/System.Reflection.Context/ref/System.Reflection.Context.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: MapType\n    path: src/System.Reflection.Context/ref/System.Reflection.Context.cs\n    startLine: 20\n  assemblies:\n  - System.Reflection.Context\n  namespace: System.Reflection.Context\n  summary: \"\\n<p>Gets the representation, in this reflection context, of a type represented by an object from another reflection context. </p>\\n\"\n  syntax:\n    content: public override TypeInfo MapType(TypeInfo type)\n    content.vb: Public Overrides Function MapType(type As TypeInfo) As TypeInfo\n    parameters:\n    - id: type\n      type: System.Reflection.TypeInfo\n      description: \"\\n<p>The external representation of the type to represent in this context. </p>\\n\"\n    return:\n      type: System.Reflection.TypeInfo\n      description: \"\\n<p>The representation of the type in this reflection context. </p>\\n\"\n  overridden: System.Reflection.ReflectionContext.MapType(System.Reflection.TypeInfo)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: CustomReflectionContext.MapType(TypeInfo)\nreferences:\n- uid: System.Reflection.Context\n  isExternal: false\n  name: System.Reflection.Context\n  fullName: System.Reflection.Context\n  commentId: N:System.Reflection.Context\n  nameWithType: System.Reflection.Context\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Reflection.ReflectionContext\n  parent: System.Reflection\n  isExternal: false\n  name: ReflectionContext\n  fullName: System.Reflection.ReflectionContext\n  commentId: T:System.Reflection.ReflectionContext\n  nameWithType: ReflectionContext\n- uid: System.Reflection.ReflectionContext.GetTypeForObject(System.Object)\n  parent: System.Reflection.ReflectionContext\n  isExternal: true\n  name: GetTypeForObject(Object)\n  fullName: System.Reflection.ReflectionContext.GetTypeForObject(System.Object)\n  spec.csharp:\n  - uid: System.Reflection.ReflectionContext.GetTypeForObject(System.Object)\n    name: GetTypeForObject\n    fullName: System.Reflection.ReflectionContext.GetTypeForObject\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.ReflectionContext.GetTypeForObject(System.Object)\n    name: GetTypeForObject\n    fullName: System.Reflection.ReflectionContext.GetTypeForObject\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Reflection.ReflectionContext.GetTypeForObject(System.Object)\n  nameWithType: ReflectionContext.GetTypeForObject(Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Reflection\n  isExternal: false\n  name: System.Reflection\n  fullName: System.Reflection\n  commentId: N:System.Reflection\n  nameWithType: System.Reflection\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  fullName: System.Type\n  commentId: T:System.Type\n  nameWithType: Type\n- uid: System.Collections.Generic.IEnumerable{System.Reflection.PropertyInfo}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<PropertyInfo>\n  fullName: System.Collections.Generic.IEnumerable<System.Reflection.PropertyInfo>\n  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Reflection.PropertyInfo)\n  name.vb: IEnumerable(Of PropertyInfo)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Reflection.PropertyInfo\n    name: PropertyInfo\n    fullName: System.Reflection.PropertyInfo\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Reflection.PropertyInfo\n    name: PropertyInfo\n    fullName: System.Reflection.PropertyInfo\n  - name: )\n    fullName: )\n  commentId: T:System.Collections.Generic.IEnumerable{System.Reflection.PropertyInfo}\n  nameWithType: IEnumerable<PropertyInfo>\n  nameWithType.vb: IEnumerable(Of PropertyInfo)\n- uid: System.Collections.Generic.IEnumerable`1\n  isExternal: false\n  name: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n  fullname.vb: System.Collections.Generic.IEnumerable(Of T)\n  name.vb: IEnumerable(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  commentId: T:System.Collections.Generic.IEnumerable`1\n  nameWithType: IEnumerable<T>\n  nameWithType.vb: IEnumerable(Of T)\n- uid: System.Collections.Generic\n  isExternal: false\n  name: System.Collections.Generic\n  fullName: System.Collections.Generic\n  commentId: N:System.Collections.Generic\n  nameWithType: System.Collections.Generic\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.Func{System.Object,System.Object}\n  parent: System\n  definition: System.Func`2\n  name: Func<Object, Object>\n  fullName: System.Func<System.Object, System.Object>\n  fullname.vb: System.Func(Of System.Object, System.Object)\n  name.vb: Func(Of Object, Object)\n  spec.csharp:\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: T:System.Func{System.Object,System.Object}\n  nameWithType: Func<Object, Object>\n  nameWithType.vb: Func(Of Object, Object)\n- uid: System.Action{System.Object,System.Object}\n  parent: System\n  definition: System.Action`2\n  name: Action<Object, Object>\n  fullName: System.Action<System.Object, System.Object>\n  fullname.vb: System.Action(Of System.Object, System.Object)\n  name.vb: Action(Of Object, Object)\n  spec.csharp:\n  - uid: System.Action`2\n    name: Action\n    fullName: System.Action\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Action`2\n    name: Action\n    fullName: System.Action\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: T:System.Action{System.Object,System.Object}\n  nameWithType: Action<Object, Object>\n  nameWithType.vb: Action(Of Object, Object)\n- uid: System.Reflection.PropertyInfo\n  parent: System.Reflection\n  isExternal: false\n  name: PropertyInfo\n  fullName: System.Reflection.PropertyInfo\n  commentId: T:System.Reflection.PropertyInfo\n  nameWithType: PropertyInfo\n- uid: System.Func`2\n  isExternal: false\n  name: Func<T, TResult>\n  fullName: System.Func<T, TResult>\n  fullname.vb: System.Func(Of T, TResult)\n  name.vb: Func(Of T, TResult)\n  spec.csharp:\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  commentId: T:System.Func`2\n  nameWithType: Func<T, TResult>\n  nameWithType.vb: Func(Of T, TResult)\n- uid: System.Action`2\n  isExternal: false\n  name: Action<T1, T2>\n  fullName: System.Action<T1, T2>\n  fullname.vb: System.Action(Of T1, T2)\n  name.vb: Action(Of T1, T2)\n  spec.csharp:\n  - uid: System.Action`2\n    name: Action\n    fullName: System.Action\n  - name: <\n    fullName: <\n  - name: T1\n    fullName: T1\n  - name: ', '\n    fullName: ', '\n  - name: T2\n    fullName: T2\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Action`2\n    name: Action\n    fullName: System.Action\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T1\n    fullName: T1\n  - name: ', '\n    fullName: ', '\n  - name: T2\n    fullName: T2\n  - name: )\n    fullName: )\n  commentId: T:System.Action`2\n  nameWithType: Action<T1, T2>\n  nameWithType.vb: Action(Of T1, T2)\n- uid: System.Collections.Generic.IEnumerable{System.Attribute}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<Attribute>\n  fullName: System.Collections.Generic.IEnumerable<System.Attribute>\n  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Attribute)\n  name.vb: IEnumerable(Of Attribute)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Attribute\n    name: Attribute\n    fullName: System.Attribute\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Attribute\n    name: Attribute\n    fullName: System.Attribute\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: T:System.Collections.Generic.IEnumerable{System.Attribute}\n  nameWithType: IEnumerable<Attribute>\n  nameWithType.vb: IEnumerable(Of Attribute)\n- uid: System.Reflection.MemberInfo\n  parent: System.Reflection\n  isExternal: false\n  name: MemberInfo\n  fullName: System.Reflection.MemberInfo\n  commentId: T:System.Reflection.MemberInfo\n  nameWithType: MemberInfo\n- uid: System.Collections.Generic.IEnumerable{System.Object}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<Object>\n  fullName: System.Collections.Generic.IEnumerable<System.Object>\n  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Object)\n  name.vb: IEnumerable(Of Object)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: T:System.Collections.Generic.IEnumerable{System.Object}\n  nameWithType: IEnumerable<Object>\n  nameWithType.vb: IEnumerable(Of Object)\n- uid: System.Reflection.ParameterInfo\n  parent: System.Reflection\n  isExternal: false\n  name: ParameterInfo\n  fullName: System.Reflection.ParameterInfo\n  commentId: T:System.Reflection.ParameterInfo\n  nameWithType: ParameterInfo\n- uid: System.Reflection.ReflectionContext.MapAssembly(System.Reflection.Assembly)\n  parent: System.Reflection.ReflectionContext\n  isExternal: true\n  name: MapAssembly(Assembly)\n  fullName: System.Reflection.ReflectionContext.MapAssembly(System.Reflection.Assembly)\n  spec.csharp:\n  - uid: System.Reflection.ReflectionContext.MapAssembly(System.Reflection.Assembly)\n    name: MapAssembly\n    fullName: System.Reflection.ReflectionContext.MapAssembly\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Reflection.Assembly\n    name: Assembly\n    fullName: System.Reflection.Assembly\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.ReflectionContext.MapAssembly(System.Reflection.Assembly)\n    name: MapAssembly\n    fullName: System.Reflection.ReflectionContext.MapAssembly\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Reflection.Assembly\n    name: Assembly\n    fullName: System.Reflection.Assembly\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Reflection.ReflectionContext.MapAssembly(System.Reflection.Assembly)\n  nameWithType: ReflectionContext.MapAssembly(Assembly)\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: false\n  name: Assembly\n  fullName: System.Reflection.Assembly\n  commentId: T:System.Reflection.Assembly\n  nameWithType: Assembly\n- uid: System.Reflection.ReflectionContext.MapType(System.Reflection.TypeInfo)\n  parent: System.Reflection.ReflectionContext\n  isExternal: true\n  name: MapType(TypeInfo)\n  fullName: System.Reflection.ReflectionContext.MapType(System.Reflection.TypeInfo)\n  spec.csharp:\n  - uid: System.Reflection.ReflectionContext.MapType(System.Reflection.TypeInfo)\n    name: MapType\n    fullName: System.Reflection.ReflectionContext.MapType\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Reflection.TypeInfo\n    name: TypeInfo\n    fullName: System.Reflection.TypeInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.ReflectionContext.MapType(System.Reflection.TypeInfo)\n    name: MapType\n    fullName: System.Reflection.ReflectionContext.MapType\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Reflection.TypeInfo\n    name: TypeInfo\n    fullName: System.Reflection.TypeInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Reflection.ReflectionContext.MapType(System.Reflection.TypeInfo)\n  nameWithType: ReflectionContext.MapType(TypeInfo)\n- uid: System.Reflection.TypeInfo\n  parent: System.Reflection\n  isExternal: false\n  name: TypeInfo\n  fullName: System.Reflection.TypeInfo\n  commentId: T:System.Reflection.TypeInfo\n  nameWithType: TypeInfo\n"}