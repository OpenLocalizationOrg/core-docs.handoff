{"nodes":[{"pos":[317,360],"content":"NativeObjectSecurity.ExceptionFromErrorCode","needQuote":true,"nodes":[{"content":"NativeObjectSecurity.ExceptionFromErrorCode","pos":[0,43]}]},{"content":"\\n&lt;p&gt;The numeric error code.&lt;/p&gt;\\n","pos":[1363,1397],"source":"\\n<p>The numeric error code.</p>\\n"},{"content":"\\n&lt;p&gt;An object that contains contextual information about the source or destination of the exception.&lt;/p&gt;\\n","pos":[2003,2110],"source":"\\n<p>An object that contains contextual information about the source or destination of the exception.</p>\\n"},{"pos":[2616,2645],"content":"System.Security.AccessControl","needQuote":true,"nodes":[{"content":"System.Security.AccessControl","pos":[0,29]}]},{"pos":[3017,3032],"content":"GetMethodInfo()","needQuote":true,"nodes":[{"content":"GetMethodInfo()","pos":[0,15]}]},{"pos":[3201,3214],"content":"GetMethodInfo","needQuote":true,"nodes":[{"content":"GetMethodInfo","pos":[0,13]}]},{"pos":[3299,3300],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[3327,3328],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[3435,3448],"content":"GetMethodInfo","needQuote":true,"nodes":[{"content":"GetMethodInfo","pos":[0,13]}]},{"pos":[3533,3534],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[3561,3562],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[3796,3801],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[3943,3949],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[4146,4156],"content":"SafeHandle","needQuote":true,"nodes":[{"content":"SafeHandle","pos":[0,10]}]},{"pos":[4361,4367],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[4515,4524],"content":"Exception","needQuote":true,"nodes":[{"content":"Exception","pos":[0,9]}]},{"pos":[4723,4746],"content":"GetMethodInfo(Delegate)","needQuote":true,"nodes":[{"content":"GetMethodInfo(Delegate)","pos":[0,23]}]},{"pos":[4947,4960],"content":"GetMethodInfo","needQuote":true,"nodes":[{"content":"GetMethodInfo","pos":[0,13]}]},{"pos":[5045,5046],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[5098,5106],"content":"Delegate","needQuote":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[5168,5169],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[5293,5306],"content":"GetMethodInfo","needQuote":true,"nodes":[{"content":"GetMethodInfo","pos":[0,13]}]},{"pos":[5391,5392],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[5444,5452],"content":"Delegate","needQuote":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[5514,5515],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[5801,5828],"content":"RuntimeReflectionExtensions","needQuote":true,"nodes":[{"content":"RuntimeReflectionExtensions","pos":[0,27]}]},{"pos":[6034,6040],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[6171,6201],"content":"System.Runtime.InteropServices","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices","pos":[0,30]}]},{"pos":[6391,6408],"content":"System.Reflection","needQuote":true,"nodes":[{"content":"System.Reflection","pos":[0,17]}]}],"content":"items:\n- uid: System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode\n  commentId: T:System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode\n  id: NativeObjectSecurity.ExceptionFromErrorCode\n  parent: System.Security.AccessControl\n  children: []\n  langs:\n  - csharp\n  - vb\n  name: NativeObjectSecurity.ExceptionFromErrorCode\n  fullName: System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode\n  type: Delegate\n  source:\n    remote:\n      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ExceptionFromErrorCode\n    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs\n    startLine: 335\n  assemblies:\n  - System.Security.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Provides a way for integrators to map numeric error codes to specific exceptions that they create.</p>\\n\"\n  syntax:\n    content: protected delegate Exception ExceptionFromErrorCode(int errorCode, string name, SafeHandle handle, object context);\n    content.vb: Protected Delegate Function ExceptionFromErrorCode(errorCode As Integer, name As String, handle As SafeHandle, context As Object) As Exception\n    parameters:\n    - id: errorCode\n      type: System.Int32\n      description: \"\\n<p>The numeric error code.</p>\\n\"\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the securable object with which the <xref href=\\\"System.Security.AccessControl.NativeObjectSecurity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is associated.</p>\\n\"\n    - id: handle\n      type: System.Runtime.InteropServices.SafeHandle\n      description: \"\\n<p>The handle of the securable object with which the <xref href=\\\"System.Security.AccessControl.NativeObjectSecurity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is associated.</p>\\n\"\n    - id: context\n      type: System.Object\n      description: \"\\n<p>An object that contains contextual information about the source or destination of the exception.</p>\\n\"\n    return:\n      type: System.Exception\n      description: \"\\n<p>The <xref href=\\\"System.Exception\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> this delegate creates.</p>\\n\"\n  modifiers.csharp:\n  - protected\n  - delegate\n  modifiers.vb:\n  - Protected\n  - Delegate\n  nameWithType: NativeObjectSecurity.ExceptionFromErrorCode\n  extensionMethods:\n  - System.Delegate.System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\nreferences:\n- uid: System.Security.AccessControl\n  isExternal: false\n  name: System.Security.AccessControl\n  fullName: System.Security.AccessControl\n  commentId: N:System.Security.AccessControl\n  nameWithType: System.Security.AccessControl\n- uid: System.Delegate.System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n  parent: System.Reflection.RuntimeReflectionExtensions\n  definition: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  name: GetMethodInfo()\n  fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo()\n  spec.csharp:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n    name: GetMethodInfo\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n    name: GetMethodInfo\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  nameWithType: RuntimeReflectionExtensions.GetMethodInfo()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  commentId: T:System.Int32\n  nameWithType: Int32\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.Runtime.InteropServices.SafeHandle\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: SafeHandle\n  fullName: System.Runtime.InteropServices.SafeHandle\n  commentId: T:System.Runtime.InteropServices.SafeHandle\n  nameWithType: SafeHandle\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  fullName: System.Exception\n  commentId: T:System.Exception\n  nameWithType: Exception\n- uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  isExternal: true\n  name: GetMethodInfo(Delegate)\n  fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  spec.csharp:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n    name: GetMethodInfo\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n  - name: (\n    fullName: (\n  - uid: System.Delegate\n    name: Delegate\n    fullName: System.Delegate\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n    name: GetMethodInfo\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n  - name: (\n    fullName: (\n  - uid: System.Delegate\n    name: Delegate\n    fullName: System.Delegate\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  nameWithType: RuntimeReflectionExtensions.GetMethodInfo(Delegate)\n- uid: System.Reflection.RuntimeReflectionExtensions\n  parent: System.Reflection\n  isExternal: false\n  name: RuntimeReflectionExtensions\n  fullName: System.Reflection.RuntimeReflectionExtensions\n  commentId: T:System.Reflection.RuntimeReflectionExtensions\n  nameWithType: RuntimeReflectionExtensions\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Runtime.InteropServices\n  isExternal: false\n  name: System.Runtime.InteropServices\n  fullName: System.Runtime.InteropServices\n  commentId: N:System.Runtime.InteropServices\n  nameWithType: System.Runtime.InteropServices\n- uid: System.Reflection\n  isExternal: false\n  name: System.Reflection\n  fullName: System.Reflection\n  commentId: N:System.Reflection\n  nameWithType: System.Reflection\n"}