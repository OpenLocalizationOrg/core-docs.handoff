{"nodes":[{"pos":[415,434],"content":"MemberMemberBinding","needQuote":true,"nodes":[{"content":"MemberMemberBinding","pos":[0,19]}]},{"pos":[2017,2025],"content":"Bindings","needQuote":true,"nodes":[{"content":"Bindings","pos":[0,8]}]},{"pos":[3759,3793],"content":"Update(IEnumerable<MemberBinding>)","needQuote":true,"nodes":[{"content":"Update(IEnumerable&lt;MemberBinding&gt;)","pos":[0,34],"source":"Update(IEnumerable<MemberBinding>)"}]},{"content":"\\n&lt;p&gt;This expression if no children are changed or an expression with the updated children.&lt;/p&gt;\\n","pos":[5055,5152],"source":"\\n<p>This expression if no children are changed or an expression with the updated children.</p>\\n"},{"pos":[5628,5651],"content":"System.Linq.Expressions","needQuote":true,"nodes":[{"content":"System.Linq.Expressions","pos":[0,23]}]},{"pos":[5833,5839],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6025,6038],"content":"MemberBinding","needQuote":true,"nodes":[{"content":"MemberBinding","pos":[0,13]}]},{"pos":[6305,6316],"content":"BindingType","needQuote":true,"nodes":[{"content":"BindingType","pos":[0,11]}]},{"pos":[6614,6620],"content":"Member","needQuote":true,"nodes":[{"content":"Member","pos":[0,6]}]},{"pos":[6905,6915],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[7058,7066],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[7138,7139],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7166,7167],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7261,7269],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[7341,7342],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7369,7370],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7584,7598],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[7717,7723],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[7790,7791],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7841,7847],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7907,7908],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7991,7997],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[8064,8065],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8115,8121],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8181,8182],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8396,8418],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[8566,8572],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[8639,8640],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8690,8696],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[8757,8758]},{"pos":[8813,8819],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8879,8880],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8977,8983],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[9050,9051],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9101,9107],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[9168,9169]},{"pos":[9224,9230],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9290,9291],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9536,9567],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[9733,9748],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[9824,9825],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9875,9881],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[9942,9943]},{"pos":[9998,10004],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10064,10065],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10171,10186],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[10262,10263],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10313,10319],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[10380,10381]},{"pos":[10436,10442],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10502,10503],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10733,10746],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[10847,10858],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[10930,10931],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10958,10959],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11032,11043],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[11115,11116],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11143,11144],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11319,11328],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[11421,11428],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[11496,11497],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11524,11525],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11594,11601],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[11669,11670],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11697,11698],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11873,11890],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[11999,12014],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[12090,12091],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12118,12119],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12196,12211],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[12287,12288],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12315,12316],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12461,12467],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[12743,12776],"content":"ReadOnlyCollection<MemberBinding>","needQuote":true,"nodes":[{"content":"ReadOnlyCollection&lt;MemberBinding&gt;","pos":[0,33],"source":"ReadOnlyCollection<MemberBinding>"}]},{"pos":[13119,13137],"content":"ReadOnlyCollection","needQuote":true,"nodes":[{"content":"ReadOnlyCollection","pos":[0,18]}]},{"pos":[13233,13234],"content":"<","needQuote":true,"nodes":[]},{"pos":[13308,13321],"content":"MemberBinding","needQuote":true,"nodes":[{"content":"MemberBinding","pos":[0,13]}]},{"pos":[13488,13506],"content":"ReadOnlyCollection","needQuote":true,"nodes":[{"content":"ReadOnlyCollection","pos":[0,18]}]},{"content":"(Of","pos":[13603,13606]},{"pos":[13687,13700],"content":"MemberBinding","needQuote":true,"nodes":[{"content":"MemberBinding","pos":[0,13]}]},{"pos":[13763,13764],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14078,14099],"content":"ReadOnlyCollection<T>","needQuote":true,"nodes":[{"content":"ReadOnlyCollection&lt;T&gt;","pos":[0,21],"source":"ReadOnlyCollection<T>"}]},{"pos":[14358,14376],"content":"ReadOnlyCollection","needQuote":true,"nodes":[{"content":"ReadOnlyCollection","pos":[0,18]}]},{"pos":[14451,14452],"content":"<","needQuote":true,"nodes":[]},{"pos":[14479,14480],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[14611,14629],"content":"ReadOnlyCollection","needQuote":true,"nodes":[{"content":"ReadOnlyCollection","pos":[0,18]}]},{"content":"(Of","pos":[14705,14708]},{"pos":[14742,14743],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[14770,14771],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15003,15033],"content":"System.Collections.ObjectModel","needQuote":true,"nodes":[{"content":"System.Collections.ObjectModel","pos":[0,30]}]},{"pos":[15355,15381],"content":"IEnumerable<MemberBinding>","needQuote":true,"nodes":[{"content":"IEnumerable&lt;MemberBinding&gt;","pos":[0,26],"source":"IEnumerable<MemberBinding>"}]},{"pos":[15684,15695],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[15780,15781],"content":"<","needQuote":true,"nodes":[]},{"pos":[15855,15868],"content":"MemberBinding","needQuote":true,"nodes":[{"content":"MemberBinding","pos":[0,13]}]},{"pos":[16024,16035],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[16121,16124]},{"pos":[16205,16218],"content":"MemberBinding","needQuote":true,"nodes":[{"content":"MemberBinding","pos":[0,13]}]},{"pos":[16281,16282],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16597,16616],"content":"MemberMemberBinding","needQuote":true,"nodes":[{"content":"MemberMemberBinding","pos":[0,19]}]},{"pos":[16844,16858],"content":"IEnumerable<T>","needQuote":true,"nodes":[{"content":"IEnumerable&lt;T&gt;","pos":[0,14],"source":"IEnumerable<T>"}]},{"pos":[17077,17088],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[17152,17153],"content":"<","needQuote":true,"nodes":[]},{"pos":[17180,17181],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[17301,17312],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[17377,17380]},{"pos":[17414,17415],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[17442,17443],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17646,17672],"content":"System.Collections.Generic","needQuote":true,"nodes":[{"content":"System.Collections.Generic","pos":[0,26]}]}],"content":"items:\n- uid: System.Linq.Expressions.MemberMemberBinding\n  commentId: T:System.Linq.Expressions.MemberMemberBinding\n  id: MemberMemberBinding\n  parent: System.Linq.Expressions\n  children:\n  - System.Linq.Expressions.MemberMemberBinding.Bindings\n  - System.Linq.Expressions.MemberMemberBinding.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n  langs:\n  - csharp\n  - vb\n  name: MemberMemberBinding\n  fullName: System.Linq.Expressions.MemberMemberBinding\n  type: Class\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: MemberMemberBinding\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 720\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  summary: \"\\n<p>Represents initializing members of a member of a newly created object.</p>\\n\"\n  syntax:\n    content: 'public sealed class MemberMemberBinding : MemberBinding'\n    content.vb: >-\n      Public NotInheritable Class MemberMemberBinding\n          Inherits MemberBinding\n  inheritance:\n  - System.Object\n  - System.Linq.Expressions.MemberBinding\n  inheritedMembers:\n  - System.Linq.Expressions.MemberBinding.BindingType\n  - System.Linq.Expressions.MemberBinding.Member\n  - System.Linq.Expressions.MemberBinding.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: MemberMemberBinding\n- uid: System.Linq.Expressions.MemberMemberBinding.Bindings\n  commentId: P:System.Linq.Expressions.MemberMemberBinding.Bindings\n  id: Bindings\n  parent: System.Linq.Expressions.MemberMemberBinding\n  langs:\n  - csharp\n  - vb\n  name: Bindings\n  fullName: System.Linq.Expressions.MemberMemberBinding.Bindings\n  type: Property\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Bindings\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 723\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  summary: \"\\n<p>Gets the bindings that describe how to initialize the members of a member.</p>\\n\"\n  syntax:\n    content: public ReadOnlyCollection<MemberBinding> Bindings { get; }\n    content.vb: Public ReadOnly Property Bindings As ReadOnlyCollection(Of MemberBinding)\n    parameters: []\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.MemberBinding}\n      description: \"\\n<p>A <xref href=\\\"System.Collections.ObjectModel.ReadOnlyCollection`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of <xref href=\\\"System.Linq.Expressions.MemberBinding\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects that describe how to initialize the members of the member.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: MemberMemberBinding.Bindings\n- uid: System.Linq.Expressions.MemberMemberBinding.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n  commentId: M:System.Linq.Expressions.MemberMemberBinding.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n  id: Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n  parent: System.Linq.Expressions.MemberMemberBinding\n  langs:\n  - csharp\n  - vb\n  name: Update(IEnumerable<MemberBinding>)\n  fullName: System.Linq.Expressions.MemberMemberBinding.Update(System.Collections.Generic.IEnumerable<System.Linq.Expressions.MemberBinding>)\n  type: Method\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Update\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 724\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  summary: \"\\n<p>Creates a new expression that is like this one, but using the supplied children. If all of the children are the same, it will return this expression.</p>\\n\"\n  syntax:\n    content: public MemberMemberBinding Update(IEnumerable<MemberBinding> bindings)\n    content.vb: Public Function Update(bindings As IEnumerable(Of MemberBinding)) As MemberMemberBinding\n    parameters:\n    - id: bindings\n      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding}\n      description: \"\\n<p>The <xref href=\\\"System.Linq.Expressions.MemberMemberBinding.Bindings\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property of the result.</p>\\n\"\n    return:\n      type: System.Linq.Expressions.MemberMemberBinding\n      description: \"\\n<p>This expression if no children are changed or an expression with the updated children.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Linq.Expressions.MemberMemberBinding.Update(System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.MemberBinding))\n  name.vb: Update(IEnumerable(Of MemberBinding))\n  nameWithType: MemberMemberBinding.Update(IEnumerable<MemberBinding>)\n  nameWithType.vb: MemberMemberBinding.Update(IEnumerable(Of MemberBinding))\nreferences:\n- uid: System.Linq.Expressions\n  isExternal: false\n  name: System.Linq.Expressions\n  fullName: System.Linq.Expressions\n  commentId: N:System.Linq.Expressions\n  nameWithType: System.Linq.Expressions\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Linq.Expressions.MemberBinding\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: MemberBinding\n  fullName: System.Linq.Expressions.MemberBinding\n  commentId: T:System.Linq.Expressions.MemberBinding\n  nameWithType: MemberBinding\n- uid: System.Linq.Expressions.MemberBinding.BindingType\n  parent: System.Linq.Expressions.MemberBinding\n  isExternal: false\n  name: BindingType\n  fullName: System.Linq.Expressions.MemberBinding.BindingType\n  commentId: P:System.Linq.Expressions.MemberBinding.BindingType\n  nameWithType: MemberBinding.BindingType\n- uid: System.Linq.Expressions.MemberBinding.Member\n  parent: System.Linq.Expressions.MemberBinding\n  isExternal: false\n  name: Member\n  fullName: System.Linq.Expressions.MemberBinding.Member\n  commentId: P:System.Linq.Expressions.MemberBinding.Member\n  nameWithType: MemberBinding.Member\n- uid: System.Linq.Expressions.MemberBinding.ToString\n  parent: System.Linq.Expressions.MemberBinding\n  isExternal: false\n  name: ToString()\n  fullName: System.Linq.Expressions.MemberBinding.ToString()\n  spec.csharp:\n  - uid: System.Linq.Expressions.MemberBinding.ToString\n    name: ToString\n    fullName: System.Linq.Expressions.MemberBinding.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.MemberBinding.ToString\n    name: ToString\n    fullName: System.Linq.Expressions.MemberBinding.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.MemberBinding.ToString\n  nameWithType: MemberBinding.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.MemberBinding}\n  parent: System.Collections.ObjectModel\n  definition: System.Collections.ObjectModel.ReadOnlyCollection`1\n  name: ReadOnlyCollection<MemberBinding>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Linq.Expressions.MemberBinding>\n  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of System.Linq.Expressions.MemberBinding)\n  name.vb: ReadOnlyCollection(Of MemberBinding)\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.MemberBinding\n    name: MemberBinding\n    fullName: System.Linq.Expressions.MemberBinding\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.MemberBinding\n    name: MemberBinding\n    fullName: System.Linq.Expressions.MemberBinding\n  - name: )\n    fullName: )\n  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.MemberBinding}\n  nameWithType: ReadOnlyCollection<MemberBinding>\n  nameWithType.vb: ReadOnlyCollection(Of MemberBinding)\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: ReadOnlyCollection<T>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>\n  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T)\n  name.vb: ReadOnlyCollection(Of T)\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection`1\n  nameWithType: ReadOnlyCollection<T>\n  nameWithType.vb: ReadOnlyCollection(Of T)\n- uid: System.Collections.ObjectModel\n  isExternal: false\n  name: System.Collections.ObjectModel\n  fullName: System.Collections.ObjectModel\n  commentId: N:System.Collections.ObjectModel\n  nameWithType: System.Collections.ObjectModel\n- uid: System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<MemberBinding>\n  fullName: System.Collections.Generic.IEnumerable<System.Linq.Expressions.MemberBinding>\n  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.MemberBinding)\n  name.vb: IEnumerable(Of MemberBinding)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.MemberBinding\n    name: MemberBinding\n    fullName: System.Linq.Expressions.MemberBinding\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.MemberBinding\n    name: MemberBinding\n    fullName: System.Linq.Expressions.MemberBinding\n  - name: )\n    fullName: )\n  commentId: T:System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding}\n  nameWithType: IEnumerable<MemberBinding>\n  nameWithType.vb: IEnumerable(Of MemberBinding)\n- uid: System.Linq.Expressions.MemberMemberBinding\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: MemberMemberBinding\n  fullName: System.Linq.Expressions.MemberMemberBinding\n  commentId: T:System.Linq.Expressions.MemberMemberBinding\n  nameWithType: MemberMemberBinding\n- uid: System.Collections.Generic.IEnumerable`1\n  isExternal: false\n  name: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n  fullname.vb: System.Collections.Generic.IEnumerable(Of T)\n  name.vb: IEnumerable(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  commentId: T:System.Collections.Generic.IEnumerable`1\n  nameWithType: IEnumerable<T>\n  nameWithType.vb: IEnumerable(Of T)\n- uid: System.Collections.Generic\n  isExternal: false\n  name: System.Collections.Generic\n  fullName: System.Collections.Generic\n  commentId: N:System.Collections.Generic\n  nameWithType: System.Collections.Generic\n"}