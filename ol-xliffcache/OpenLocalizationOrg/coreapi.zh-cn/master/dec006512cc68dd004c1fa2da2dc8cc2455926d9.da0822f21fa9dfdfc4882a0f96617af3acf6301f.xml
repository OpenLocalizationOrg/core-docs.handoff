{"nodes":[{"pos":[835,864],"content":"Tuple<T1, T2, T3, T4, T5, T6>","needQuote":true,"nodes":[{"content":"Tuple&lt;T1, T2, T3, T4, T5, T6&gt;","pos":[0,29],"source":"Tuple<T1, T2, T3, T4, T5, T6>"}]},{"content":"\\n&lt;p&gt;The type of the tuple's first component.&lt;/p&gt;\\n","pos":[1651,1702],"source":"\\n<p>The type of the tuple's first component.</p>\\n"},{"content":"\\n&lt;p&gt;The type of the tuple's second component.&lt;/p&gt;\\n","pos":[1737,1789],"source":"\\n<p>The type of the tuple's second component.</p>\\n"},{"content":"\\n&lt;p&gt;The type of the tuple's third component.&lt;/p&gt;\\n","pos":[1824,1875],"source":"\\n<p>The type of the tuple's third component.</p>\\n"},{"content":"\\n&lt;p&gt;The type of the tuple's fourth component.&lt;/p&gt;\\n","pos":[1910,1962],"source":"\\n<p>The type of the tuple's fourth component.</p>\\n"},{"content":"\\n&lt;p&gt;The type of the tuple's fifth component.&lt;/p&gt;\\n","pos":[1997,2048],"source":"\\n<p>The type of the tuple's fifth component.</p>\\n"},{"content":"\\n&lt;p&gt;The type of the tuple's sixth component.&lt;/p&gt;\\n","pos":[2083,2134],"source":"\\n<p>The type of the tuple's sixth component.</p>\\n"},{"pos":[3425,3454],"content":"Tuple(T1, T2, T3, T4, T5, T6)","needQuote":true,"nodes":[{"content":"Tuple(T1, T2, T3, T4, T5, T6)","pos":[0,29]}]},{"content":"\\n&lt;p&gt;The value of the tuple's first component.&lt;/p&gt;\\n","pos":[4237,4289],"source":"\\n<p>The value of the tuple's first component.</p>\\n"},{"content":"\\n&lt;p&gt;The value of the tuple's second component.&lt;/p&gt;\\n","pos":[4346,4399],"source":"\\n<p>The value of the tuple's second component.</p>\\n"},{"content":"\\n&lt;p&gt;The value of the tuple's third component.&lt;/p&gt;\\n","pos":[4456,4508],"source":"\\n<p>The value of the tuple's third component.</p>\\n"},{"content":"\\n&lt;p&gt;The value of the tuple's fourth component&lt;/p&gt;\\n","pos":[4565,4617],"source":"\\n<p>The value of the tuple's fourth component</p>\\n"},{"content":"\\n&lt;p&gt;The value of the tuple's fifth component.&lt;/p&gt;\\n","pos":[4674,4726],"source":"\\n<p>The value of the tuple's fifth component.</p>\\n"},{"content":"\\n&lt;p&gt;The value of the tuple's sixth component.&lt;/p&gt;\\n","pos":[4783,4835],"source":"\\n<p>The value of the tuple's sixth component.</p>\\n"},{"pos":[5274,5279],"content":"Item1","needQuote":true,"nodes":[{"content":"Item1","pos":[0,5]}]},{"pos":[6469,6474],"content":"Item2","needQuote":true,"nodes":[{"content":"Item2","pos":[0,5]}]},{"pos":[7666,7671],"content":"Item3","needQuote":true,"nodes":[{"content":"Item3","pos":[0,5]}]},{"pos":[8861,8866],"content":"Item4","needQuote":true,"nodes":[{"content":"Item4","pos":[0,5]}]},{"pos":[10058,10063],"content":"Item5","needQuote":true,"nodes":[{"content":"Item5","pos":[0,5]}]},{"pos":[11254,11259],"content":"Item6","needQuote":true,"nodes":[{"content":"Item6","pos":[0,5]}]},{"pos":[12497,12511],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"content":"\\n&lt;p&gt;The object to compare with this instance.&lt;/p&gt;\\n","pos":[13269,13321],"source":"\\n<p>The object to compare with this instance.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the current instance is equal to the specified object; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[13382,13509],"source":"\\n<p>\\n<strong>true</strong> if the current instance is equal to the specified object; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[14005,14018],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"content":"\\n&lt;p&gt;A 32-bit signed integer hash code.&lt;/p&gt;\\n","pos":[14694,14739],"source":"\\n<p>A 32-bit signed integer hash code.</p>\\n"},{"pos":[15478,15528],"content":"IStructuralComparable.CompareTo(Object, IComparer)","needQuote":true,"nodes":[{"content":"IStructuralComparable.CompareTo(Object, IComparer)","pos":[0,50]}]},{"content":"\\n&lt;p&gt;An object to compare with the current instance.&lt;/p&gt;\\n","pos":[16671,16729],"source":"\\n<p>An object to compare with the current instance.</p>\\n"},{"content":"\\n&lt;p&gt;An object that provides custom rules for comparison.&lt;/p&gt;\\n","pos":[16811,16874],"source":"\\n<p>An object that provides custom rules for comparison.</p>\\n"},{"content":"\\n&lt;p&gt;A signed integer that indicates the relative position of this instance and &lt;em&gt;other&lt;/em&gt; in the sort order, as shown in the following table.&lt;/p&gt;\\n&lt;p&gt;Value&lt;/p&gt;\\n&lt;p&gt;Description&lt;/p&gt;\\n&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;\\n&lt;p&gt;A negative integer&lt;/p&gt;\\n&lt;/td&gt;&lt;td&gt;\\n&lt;p&gt;This instance precedes &lt;em&gt;other&lt;/em&gt;.&lt;/p&gt;\\n&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;\\n&lt;p&gt;Zero&lt;/p&gt;\\n&lt;/td&gt;&lt;td&gt;\\n&lt;p&gt;This instance and &lt;em&gt;other&lt;/em&gt; have the same position in the sort order.&lt;/p&gt;\\n&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;\\n&lt;p&gt;A positive integer&lt;/p&gt;\\n&lt;/td&gt;&lt;td&gt;\\n&lt;p&gt;This instance follows &lt;em&gt;other&lt;/em&gt;.&lt;/p&gt;\\n&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\\n","pos":[16933,17487],"source":"\\n<p>A signed integer that indicates the relative position of this instance and <em>other</em> in the sort order, as shown in the following table.</p>\\n<p>Value</p>\\n<p>Description</p>\\n<table><tbody><tr><td>\\n<p>A negative integer</p>\\n</td><td>\\n<p>This instance precedes <em>other</em>.</p>\\n</td></tr><tr><td>\\n<p>Zero</p>\\n</td><td>\\n<p>This instance and <em>other</em> have the same position in the sort order.</p>\\n</td></tr><tr><td>\\n<p>A positive integer</p>\\n</td><td>\\n<p>This instance follows <em>other</em>.</p>\\n</td></tr></tbody></table>\\n"},{"pos":[18712,18766],"content":"IStructuralEquatable.Equals(Object, IEqualityComparer)","needQuote":true,"nodes":[{"content":"IStructuralEquatable.Equals(Object, IEqualityComparer)","pos":[0,54]}]},{"content":"\\n&lt;p&gt;The object to compare with this instance.&lt;/p&gt;\\n","pos":[19813,19865],"source":"\\n<p>The object to compare with this instance.</p>\\n"},{"content":"\\n&lt;p&gt;An object that defines the method to use to evaluate whether the two objects are equal.&lt;/p&gt;\\n","pos":[19955,20053],"source":"\\n<p>An object that defines the method to use to evaluate whether the two objects are equal.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the current instance is equal to the specified object; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[20114,20241],"source":"\\n<p>\\n<strong>true</strong> if the current instance is equal to the specified object; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[21229,21280],"content":"IStructuralEquatable.GetHashCode(IEqualityComparer)","needQuote":true,"nodes":[{"content":"IStructuralEquatable.GetHashCode(IEqualityComparer)","pos":[0,51]}]},{"content":"\\n&lt;p&gt;A 32-bit signed integer hash code.&lt;/p&gt;\\n","pos":[22631,22676],"source":"\\n<p>A 32-bit signed integer hash code.</p>\\n"},{"pos":[23498,23527],"content":"IComparable.CompareTo(Object)","needQuote":true,"nodes":[{"content":"IComparable.CompareTo(Object)","pos":[0,29]}]},{"content":"\\n&lt;p&gt;An object to compare with the current instance.&lt;/p&gt;\\n","pos":[24475,24533],"source":"\\n<p>An object to compare with the current instance.</p>\\n"},{"content":"\\n&lt;p&gt;A signed integer that indicates the relative position of this instance and &lt;em&gt;obj&lt;/em&gt; in the sort order, as shown in the following table.&lt;/p&gt;\\n&lt;p&gt;Value&lt;/p&gt;\\n&lt;p&gt;Description&lt;/p&gt;\\n&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;\\n&lt;p&gt;A negative integer&lt;/p&gt;\\n&lt;/td&gt;&lt;td&gt;\\n&lt;p&gt;This instance precedes &lt;em&gt;obj&lt;/em&gt;.&lt;/p&gt;\\n&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;\\n&lt;p&gt;Zero&lt;/p&gt;\\n&lt;/td&gt;&lt;td&gt;\\n&lt;p&gt;This instance and &lt;em&gt;obj&lt;/em&gt; have the same position in the sort order.&lt;/p&gt;\\n&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;\\n&lt;p&gt;A positive integer&lt;/p&gt;\\n&lt;/td&gt;&lt;td&gt;\\n&lt;p&gt;This instance follows &lt;em&gt;obj&lt;/em&gt;.&lt;/p&gt;\\n&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\\n","pos":[24592,25138],"source":"\\n<p>A signed integer that indicates the relative position of this instance and <em>obj</em> in the sort order, as shown in the following table.</p>\\n<p>Value</p>\\n<p>Description</p>\\n<table><tbody><tr><td>\\n<p>A negative integer</p>\\n</td><td>\\n<p>This instance precedes <em>obj</em>.</p>\\n</td></tr><tr><td>\\n<p>Zero</p>\\n</td><td>\\n<p>This instance and <em>obj</em> have the same position in the sort order.</p>\\n</td></tr><tr><td>\\n<p>A positive integer</p>\\n</td><td>\\n<p>This instance follows <em>obj</em>.</p>\\n</td></tr></tbody></table>\\n"},{"pos":[25887,25897],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[27070,27076],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[27207,27213],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[27397,27418],"content":"IStructuralComparable","needQuote":true,"nodes":[{"content":"IStructuralComparable","pos":[0,21]}]},{"pos":[27670,27690],"content":"IStructuralEquatable","needQuote":true,"nodes":[{"content":"IStructuralEquatable","pos":[0,20]}]},{"pos":[27906,27917],"content":"IComparable","needQuote":true,"nodes":[{"content":"IComparable","pos":[0,11]}]},{"pos":[28119,28141],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[28289,28295],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[28362,28363],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28413,28419],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[28480,28481]},{"pos":[28536,28542],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[28602,28603],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28700,28706],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[28773,28774],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28824,28830],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[28891,28892]},{"pos":[28947,28953],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[29013,29014],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29259,29290],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[29456,29471],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[29547,29548],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29598,29604],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[29665,29666]},{"pos":[29721,29727],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[29787,29788],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29894,29909],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[29985,29986],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30036,30042],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[30103,30104]},{"pos":[30159,30165],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[30225,30226],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30452,30461],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[30554,30561],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[30629,30630],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30657,30658],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30727,30734],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[30802,30803],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30830,30831],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31006,31023],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[31132,31147],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[31223,31224],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31251,31252],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31329,31344],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[31420,31421],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31448,31449],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31606,31624],"content":"System.Collections","needQuote":true,"nodes":[{"content":"System.Collections","pos":[0,18]}]},{"pos":[31764,31766],"content":"T1","needQuote":true,"nodes":[{"content":"T1","pos":[0,2]}]},{"pos":[31860,31862],"content":"T2","needQuote":true,"nodes":[{"content":"T2","pos":[0,2]}]},{"pos":[31956,31958],"content":"T3","needQuote":true,"nodes":[{"content":"T3","pos":[0,2]}]},{"pos":[32052,32054],"content":"T4","needQuote":true,"nodes":[{"content":"T4","pos":[0,2]}]},{"pos":[32148,32150],"content":"T5","needQuote":true,"nodes":[{"content":"T5","pos":[0,2]}]},{"pos":[32244,32246],"content":"T6","needQuote":true,"nodes":[{"content":"T6","pos":[0,2]}]},{"pos":[32339,32341],"content":"T1","needQuote":true,"nodes":[{"content":"T1","pos":[0,2]}]},{"pos":[32414,32416],"content":"T2","needQuote":true,"nodes":[{"content":"T2","pos":[0,2]}]},{"pos":[32489,32491],"content":"T3","needQuote":true,"nodes":[{"content":"T3","pos":[0,2]}]},{"pos":[32564,32566],"content":"T4","needQuote":true,"nodes":[{"content":"T4","pos":[0,2]}]},{"pos":[32639,32641],"content":"T5","needQuote":true,"nodes":[{"content":"T5","pos":[0,2]}]},{"pos":[32714,32716],"content":"T6","needQuote":true,"nodes":[{"content":"T6","pos":[0,2]}]},{"pos":[32845,32859],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[32978,32984],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[33051,33052],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[33102,33108],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[33168,33169],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[33252,33258],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[33325,33326],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[33376,33382],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[33442,33443],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[33616,33623],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[33789,33802],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[33903,33914],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[33986,33987],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[34014,34015],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34088,34099],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[34171,34172],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[34199,34200],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34360,34365],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[34621,34649],"content":"CompareTo(Object, IComparer)","needQuote":true,"nodes":[{"content":"CompareTo(Object, IComparer)","pos":[0,28]}]},{"pos":[34887,34896],"content":"CompareTo","needQuote":true,"nodes":[{"content":"CompareTo","pos":[0,9]}]},{"pos":[34972,34973],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[35023,35029],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[35090,35091]},{"pos":[35161,35170],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"pos":[35224,35225],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[35367,35376],"content":"CompareTo","needQuote":true,"nodes":[{"content":"CompareTo","pos":[0,9]}]},{"pos":[35452,35453],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[35503,35509],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[35570,35571]},{"pos":[35641,35650],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"pos":[35704,35705],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[35992,36001],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"pos":[36296,36329],"content":"Equals(Object, IEqualityComparer)","needQuote":true,"nodes":[{"content":"Equals(Object, IEqualityComparer)","pos":[0,33]}]},{"pos":[36575,36581],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[36653,36654],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[36704,36710],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[36771,36772]},{"pos":[36850,36867],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[36929,36930],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[37076,37082],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[37154,37155],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[37205,37211],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[37272,37273]},{"pos":[37351,37368],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[37430,37431],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[37734,37751],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[38062,38092],"content":"GetHashCode(IEqualityComparer)","needQuote":true,"nodes":[{"content":"GetHashCode(IEqualityComparer)","pos":[0,30]}]},{"pos":[38319,38330],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[38407,38408],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[38481,38498],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[38560,38561],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[38698,38709],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[38786,38787],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[38860,38877],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[38939,38940],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[39237,39254],"content":"CompareTo(Object)","needQuote":true,"nodes":[{"content":"CompareTo(Object)","pos":[0,17]}]},{"pos":[39389,39398],"content":"CompareTo","needQuote":true,"nodes":[{"content":"CompareTo","pos":[0,9]}]},{"pos":[39452,39453],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[39503,39509],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[39569,39570],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[39661,39670],"content":"CompareTo","needQuote":true,"nodes":[{"content":"CompareTo","pos":[0,9]}]},{"pos":[39724,39725],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[39775,39781],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[39841,39842],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[40045,40055],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[40150,40158],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[40227,40228],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[40255,40256],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[40326,40334],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[40403,40404],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[40431,40432],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[40587,40593],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[40749,40766],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]}],"content":"items:\n- uid: System.Tuple`6\n  commentId: T:System.Tuple`6\n  id: Tuple`6\n  parent: System\n  children:\n  - System.Tuple`6.#ctor(`0,`1,`2,`3,`4,`5)\n  - System.Tuple`6.Equals(System.Object)\n  - System.Tuple`6.GetHashCode\n  - System.Tuple`6.Item1\n  - System.Tuple`6.Item2\n  - System.Tuple`6.Item3\n  - System.Tuple`6.Item4\n  - System.Tuple`6.Item5\n  - System.Tuple`6.Item6\n  - System.Tuple`6.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)\n  - System.Tuple`6.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)\n  - System.Tuple`6.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)\n  - System.Tuple`6.System#IComparable#CompareTo(System.Object)\n  - System.Tuple`6.ToString\n  langs:\n  - csharp\n  - vb\n  name: Tuple<T1, T2, T3, T4, T5, T6>\n  fullName: System.Tuple<T1, T2, T3, T4, T5, T6>\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/Tuple.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Tuple\n    path: src/mscorlib/src/System/Tuple.cs\n    startLine: 547\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Represents a 6-tuple, or sextuple. </p>\\n\"\n  syntax:\n    content: >-\n      [Serializable]\n\n      public class Tuple<T1, T2, T3, T4, T5, T6> : IStructuralEquatable, IStructuralComparable, IComparable, ITuple\n    content.vb: >-\n      <Serializable>\n\n      Public Class Tuple(Of T1, T2, T3, T4, T5, T6)\n          Implements IStructuralEquatable, IStructuralComparable, IComparable, ITuple\n    typeParameters:\n    - id: T1\n      description: \"\\n<p>The type of the tuple's first component.</p>\\n\"\n    - id: T2\n      description: \"\\n<p>The type of the tuple's second component.</p>\\n\"\n    - id: T3\n      description: \"\\n<p>The type of the tuple's third component.</p>\\n\"\n    - id: T4\n      description: \"\\n<p>The type of the tuple's fourth component.</p>\\n\"\n    - id: T5\n      description: \"\\n<p>The type of the tuple's fifth component.</p>\\n\"\n    - id: T6\n      description: \"\\n<p>The type of the tuple's sixth component.</p>\\n\"\n  seealso:\n  - type: System.Tuple\n    commentId: T:System.Tuple\n  - type: System.Tuple`1\n    commentId: T:System.Tuple`1\n  - type: System.Tuple`2\n    commentId: T:System.Tuple`2\n  - type: System.Tuple`3\n    commentId: T:System.Tuple`3\n  - type: System.Tuple`4\n    commentId: T:System.Tuple`4\n  - type: System.Tuple`5\n    commentId: T:System.Tuple`5\n  - type: System.Tuple`7\n    commentId: T:System.Tuple`7\n  - type: System.Tuple`8\n    commentId: T:System.Tuple`8\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.IStructuralComparable\n  - System.Collections.IStructuralEquatable\n  - System.IComparable\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  fullName.vb: System.Tuple(Of T1, T2, T3, T4, T5, T6)\n  name.vb: Tuple(Of T1, T2, T3, T4, T5, T6)\n  nameWithType: Tuple<T1, T2, T3, T4, T5, T6>\n  nameWithType.vb: Tuple(Of T1, T2, T3, T4, T5, T6)\n- uid: System.Tuple`6.#ctor(`0,`1,`2,`3,`4,`5)\n  commentId: M:System.Tuple`6.#ctor(`0,`1,`2,`3,`4,`5)\n  id: '#ctor(`0,`1,`2,`3,`4,`5)'\n  parent: System.Tuple`6\n  langs:\n  - csharp\n  - vb\n  name: Tuple(T1, T2, T3, T4, T5, T6)\n  fullName: System.Tuple<T1, T2, T3, T4, T5, T6>.Tuple(T1, T2, T3, T4, T5, T6)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Tuple.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Tuple.cs\n    startLine: 564\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Tuple`6\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public Tuple(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6)\n    content.vb: Public Sub New(item1 As T1, item2 As T2, item3 As T3, item4 As T4, item5 As T5, item6 As T6)\n    parameters:\n    - id: item1\n      type: '{T1}'\n      description: \"\\n<p>The value of the tuple's first component.</p>\\n\"\n    - id: item2\n      type: '{T2}'\n      description: \"\\n<p>The value of the tuple's second component.</p>\\n\"\n    - id: item3\n      type: '{T3}'\n      description: \"\\n<p>The value of the tuple's third component.</p>\\n\"\n    - id: item4\n      type: '{T4}'\n      description: \"\\n<p>The value of the tuple's fourth component</p>\\n\"\n    - id: item5\n      type: '{T5}'\n      description: \"\\n<p>The value of the tuple's fifth component.</p>\\n\"\n    - id: item6\n      type: '{T6}'\n      description: \"\\n<p>The value of the tuple's sixth component.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Tuple(Of T1, T2, T3, T4, T5, T6).Tuple(T1, T2, T3, T4, T5, T6)\n  nameWithType: Tuple<T1, T2, T3, T4, T5, T6>.Tuple(T1, T2, T3, T4, T5, T6)\n  nameWithType.vb: Tuple(Of T1, T2, T3, T4, T5, T6).Tuple(T1, T2, T3, T4, T5, T6)\n- uid: System.Tuple`6.Item1\n  commentId: P:System.Tuple`6.Item1\n  id: Item1\n  parent: System.Tuple`6\n  langs:\n  - csharp\n  - vb\n  name: Item1\n  fullName: System.Tuple<T1, T2, T3, T4, T5, T6>.Item1\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Tuple.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Item1\n    path: src/mscorlib/src/System/Tuple.cs\n    startLine: 557\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Gets the value of the current <xref href=\\\"System.Tuple`6\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object's first component.</p>\\n\"\n  syntax:\n    content: public T1 Item1 { get; }\n    content.vb: Public ReadOnly Property Item1 As T1\n    parameters: []\n    return:\n      type: '{T1}'\n      description: \"\\n<p>The value of the current <xref href=\\\"System.Tuple`6\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object's first component.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  fullName.vb: System.Tuple(Of T1, T2, T3, T4, T5, T6).Item1\n  nameWithType: Tuple<T1, T2, T3, T4, T5, T6>.Item1\n  nameWithType.vb: Tuple(Of T1, T2, T3, T4, T5, T6).Item1\n- uid: System.Tuple`6.Item2\n  commentId: P:System.Tuple`6.Item2\n  id: Item2\n  parent: System.Tuple`6\n  langs:\n  - csharp\n  - vb\n  name: Item2\n  fullName: System.Tuple<T1, T2, T3, T4, T5, T6>.Item2\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Tuple.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Item2\n    path: src/mscorlib/src/System/Tuple.cs\n    startLine: 558\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Gets the value of the current <xref href=\\\"System.Tuple`6\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object's second component.</p>\\n\"\n  syntax:\n    content: public T2 Item2 { get; }\n    content.vb: Public ReadOnly Property Item2 As T2\n    parameters: []\n    return:\n      type: '{T2}'\n      description: \"\\n<p>The value of the current <xref href=\\\"System.Tuple`6\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object's second component.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  fullName.vb: System.Tuple(Of T1, T2, T3, T4, T5, T6).Item2\n  nameWithType: Tuple<T1, T2, T3, T4, T5, T6>.Item2\n  nameWithType.vb: Tuple(Of T1, T2, T3, T4, T5, T6).Item2\n- uid: System.Tuple`6.Item3\n  commentId: P:System.Tuple`6.Item3\n  id: Item3\n  parent: System.Tuple`6\n  langs:\n  - csharp\n  - vb\n  name: Item3\n  fullName: System.Tuple<T1, T2, T3, T4, T5, T6>.Item3\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Tuple.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Item3\n    path: src/mscorlib/src/System/Tuple.cs\n    startLine: 559\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Gets the value of the current <xref href=\\\"System.Tuple`6\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object's third component.</p>\\n\"\n  syntax:\n    content: public T3 Item3 { get; }\n    content.vb: Public ReadOnly Property Item3 As T3\n    parameters: []\n    return:\n      type: '{T3}'\n      description: \"\\n<p>The value of the current <xref href=\\\"System.Tuple`6\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object's third component.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  fullName.vb: System.Tuple(Of T1, T2, T3, T4, T5, T6).Item3\n  nameWithType: Tuple<T1, T2, T3, T4, T5, T6>.Item3\n  nameWithType.vb: Tuple(Of T1, T2, T3, T4, T5, T6).Item3\n- uid: System.Tuple`6.Item4\n  commentId: P:System.Tuple`6.Item4\n  id: Item4\n  parent: System.Tuple`6\n  langs:\n  - csharp\n  - vb\n  name: Item4\n  fullName: System.Tuple<T1, T2, T3, T4, T5, T6>.Item4\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Tuple.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Item4\n    path: src/mscorlib/src/System/Tuple.cs\n    startLine: 560\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Gets the value of the current <xref href=\\\"System.Tuple`6\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object's fourth component.</p>\\n\"\n  syntax:\n    content: public T4 Item4 { get; }\n    content.vb: Public ReadOnly Property Item4 As T4\n    parameters: []\n    return:\n      type: '{T4}'\n      description: \"\\n<p>The value of the current <xref href=\\\"System.Tuple`6\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object's fourth component.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  fullName.vb: System.Tuple(Of T1, T2, T3, T4, T5, T6).Item4\n  nameWithType: Tuple<T1, T2, T3, T4, T5, T6>.Item4\n  nameWithType.vb: Tuple(Of T1, T2, T3, T4, T5, T6).Item4\n- uid: System.Tuple`6.Item5\n  commentId: P:System.Tuple`6.Item5\n  id: Item5\n  parent: System.Tuple`6\n  langs:\n  - csharp\n  - vb\n  name: Item5\n  fullName: System.Tuple<T1, T2, T3, T4, T5, T6>.Item5\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Tuple.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Item5\n    path: src/mscorlib/src/System/Tuple.cs\n    startLine: 561\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Gets the value of the current <xref href=\\\"System.Tuple`6\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object's fifth component.</p>\\n\"\n  syntax:\n    content: public T5 Item5 { get; }\n    content.vb: Public ReadOnly Property Item5 As T5\n    parameters: []\n    return:\n      type: '{T5}'\n      description: \"\\n<p>The value of the current <xref href=\\\"System.Tuple`6\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object's fifth  component.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  fullName.vb: System.Tuple(Of T1, T2, T3, T4, T5, T6).Item5\n  nameWithType: Tuple<T1, T2, T3, T4, T5, T6>.Item5\n  nameWithType.vb: Tuple(Of T1, T2, T3, T4, T5, T6).Item5\n- uid: System.Tuple`6.Item6\n  commentId: P:System.Tuple`6.Item6\n  id: Item6\n  parent: System.Tuple`6\n  langs:\n  - csharp\n  - vb\n  name: Item6\n  fullName: System.Tuple<T1, T2, T3, T4, T5, T6>.Item6\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Tuple.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Item6\n    path: src/mscorlib/src/System/Tuple.cs\n    startLine: 562\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Gets the value of the current <xref href=\\\"System.Tuple`6\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object's sixth component.</p>\\n\"\n  syntax:\n    content: public T6 Item6 { get; }\n    content.vb: Public ReadOnly Property Item6 As T6\n    parameters: []\n    return:\n      type: '{T6}'\n      description: \"\\n<p>The value of the current <xref href=\\\"System.Tuple`6\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object's sixth component.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  fullName.vb: System.Tuple(Of T1, T2, T3, T4, T5, T6).Item6\n  nameWithType: Tuple<T1, T2, T3, T4, T5, T6>.Item6\n  nameWithType.vb: Tuple(Of T1, T2, T3, T4, T5, T6).Item6\n- uid: System.Tuple`6.Equals(System.Object)\n  commentId: M:System.Tuple`6.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Tuple`6\n  langs:\n  - csharp\n  - vb\n  name: Equals(Object)\n  fullName: System.Tuple<T1, T2, T3, T4, T5, T6>.Equals(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Tuple.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Equals\n    path: src/mscorlib/src/System/Tuple.cs\n    startLine: 573\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Returns a value that indicates whether the current <xref href=\\\"System.Tuple`6\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is equal to a specified object.</p>\\n\"\n  syntax:\n    content: public override bool Equals(object obj)\n    content.vb: Public Overrides Function Equals(obj As Object) As Boolean\n    parameters:\n    - id: obj\n      type: System.Object\n      description: \"\\n<p>The object to compare with this instance.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the current instance is equal to the specified object; otherwise, <strong>false</strong>.</p>\\n\"\n  overridden: System.Object.Equals(System.Object)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  fullName.vb: System.Tuple(Of T1, T2, T3, T4, T5, T6).Equals(System.Object)\n  nameWithType: Tuple<T1, T2, T3, T4, T5, T6>.Equals(Object)\n  nameWithType.vb: Tuple(Of T1, T2, T3, T4, T5, T6).Equals(Object)\n- uid: System.Tuple`6.GetHashCode\n  commentId: M:System.Tuple`6.GetHashCode\n  id: GetHashCode\n  parent: System.Tuple`6\n  langs:\n  - csharp\n  - vb\n  name: GetHashCode()\n  fullName: System.Tuple<T1, T2, T3, T4, T5, T6>.GetHashCode()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Tuple.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetHashCode\n    path: src/mscorlib/src/System/Tuple.cs\n    startLine: 627\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Returns the hash code for the current <xref href=\\\"System.Tuple`6\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public override int GetHashCode()\n    content.vb: Public Overrides Function GetHashCode As Integer\n    return:\n      type: System.Int32\n      description: \"\\n<p>A 32-bit signed integer hash code.</p>\\n\"\n  overridden: System.Object.GetHashCode\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  fullName.vb: System.Tuple(Of T1, T2, T3, T4, T5, T6).GetHashCode()\n  nameWithType: Tuple<T1, T2, T3, T4, T5, T6>.GetHashCode()\n  nameWithType.vb: Tuple(Of T1, T2, T3, T4, T5, T6).GetHashCode()\n- uid: System.Tuple`6.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)\n  commentId: M:System.Tuple`6.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)\n  id: System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)\n  isEii: true\n  parent: System.Tuple`6\n  langs:\n  - csharp\n  - vb\n  name: IStructuralComparable.CompareTo(Object, IComparer)\n  fullName: System.Tuple<T1, T2, T3, T4, T5, T6>.System.Collections.IStructuralComparable.CompareTo(System.Object, System.Collections.IComparer)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Tuple.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.Collections.IStructuralComparable.CompareTo\n    path: src/mscorlib/src/System/Tuple.cs\n    startLine: 593\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Compares the current <xref href=\\\"System.Tuple`6\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object to a specified object by using a specified comparer and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</p>\\n\"\n  syntax:\n    content: int IStructuralComparable.CompareTo(object other, IComparer comparer)\n    content.vb: Function System.Collections.IStructuralComparable.CompareTo(other As Object, comparer As IComparer) As Integer Implements IStructuralComparable.CompareTo\n    parameters:\n    - id: other\n      type: System.Object\n      description: \"\\n<p>An object to compare with the current instance.</p>\\n\"\n    - id: comparer\n      type: System.Collections.IComparer\n      description: \"\\n<p>An object that provides custom rules for comparison.</p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>A signed integer that indicates the relative position of this instance and <em>other</em> in the sort order, as shown in the following table.</p>\\n<p>Value</p>\\n<p>Description</p>\\n<table><tbody><tr><td>\\n<p>A negative integer</p>\\n</td><td>\\n<p>This instance precedes <em>other</em>.</p>\\n</td></tr><tr><td>\\n<p>Zero</p>\\n</td><td>\\n<p>This instance and <em>other</em> have the same position in the sort order.</p>\\n</td></tr><tr><td>\\n<p>A positive integer</p>\\n</td><td>\\n<p>This instance follows <em>other</em>.</p>\\n</td></tr></tbody></table>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>other</em> is not a <xref href=\\\"System.Tuple`6\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  implements:\n  - System.Collections.IStructuralComparable.CompareTo(System.Object,System.Collections.IComparer)\n  fullName.vb: System.Tuple(Of T1, T2, T3, T4, T5, T6).System.Collections.IStructuralComparable.CompareTo(System.Object, System.Collections.IComparer)\n  name.vb: System.Collections.IStructuralComparable.CompareTo(Object, IComparer)\n  nameWithType: Tuple<T1, T2, T3, T4, T5, T6>.IStructuralComparable.CompareTo(Object, IComparer)\n  nameWithType.vb: Tuple(Of T1, T2, T3, T4, T5, T6).System.Collections.IStructuralComparable.CompareTo(Object, IComparer)\n- uid: System.Tuple`6.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)\n  commentId: M:System.Tuple`6.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)\n  id: System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)\n  isEii: true\n  parent: System.Tuple`6\n  langs:\n  - csharp\n  - vb\n  name: IStructuralEquatable.Equals(Object, IEqualityComparer)\n  fullName: System.Tuple<T1, T2, T3, T4, T5, T6>.System.Collections.IStructuralEquatable.Equals(System.Object, System.Collections.IEqualityComparer)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Tuple.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.Collections.IStructuralEquatable.Equals\n    path: src/mscorlib/src/System/Tuple.cs\n    startLine: 577\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Returns a value that indicates whether the current <xref href=\\\"System.Tuple`6\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is equal to a specified object based on a specified comparison method.</p>\\n\"\n  syntax:\n    content: bool IStructuralEquatable.Equals(object other, IEqualityComparer comparer)\n    content.vb: Function System.Collections.IStructuralEquatable.Equals(other As Object, comparer As IEqualityComparer) As Boolean Implements IStructuralEquatable.Equals\n    parameters:\n    - id: other\n      type: System.Object\n      description: \"\\n<p>The object to compare with this instance.</p>\\n\"\n    - id: comparer\n      type: System.Collections.IEqualityComparer\n      description: \"\\n<p>An object that defines the method to use to evaluate whether the two objects are equal.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the current instance is equal to the specified object; otherwise, <strong>false</strong>.</p>\\n\"\n  implements:\n  - System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)\n  fullName.vb: System.Tuple(Of T1, T2, T3, T4, T5, T6).System.Collections.IStructuralEquatable.Equals(System.Object, System.Collections.IEqualityComparer)\n  name.vb: System.Collections.IStructuralEquatable.Equals(Object, IEqualityComparer)\n  nameWithType: Tuple<T1, T2, T3, T4, T5, T6>.IStructuralEquatable.Equals(Object, IEqualityComparer)\n  nameWithType.vb: Tuple(Of T1, T2, T3, T4, T5, T6).System.Collections.IStructuralEquatable.Equals(Object, IEqualityComparer)\n- uid: System.Tuple`6.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)\n  commentId: M:System.Tuple`6.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)\n  id: System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)\n  isEii: true\n  parent: System.Tuple`6\n  langs:\n  - csharp\n  - vb\n  name: IStructuralEquatable.GetHashCode(IEqualityComparer)\n  fullName: System.Tuple<T1, T2, T3, T4, T5, T6>.System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Tuple.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.Collections.IStructuralEquatable.GetHashCode\n    path: src/mscorlib/src/System/Tuple.cs\n    startLine: 631\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Calculates the hash code for the current <xref href=\\\"System.Tuple`6\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object by using a specified computation method.</p>\\n\"\n  syntax:\n    content: int IStructuralEquatable.GetHashCode(IEqualityComparer comparer)\n    content.vb: Function System.Collections.IStructuralEquatable.GetHashCode(comparer As IEqualityComparer) As Integer Implements IStructuralEquatable.GetHashCode\n    parameters:\n    - id: comparer\n      type: System.Collections.IEqualityComparer\n      description: \"\\n<p>An object whose <xref href=\\\"System.Collections.IEqualityComparer.GetHashCode(System.Object)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>  method calculates the hash code of the current <xref href=\\\"System.Tuple`6\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>A 32-bit signed integer hash code.</p>\\n\"\n  implements:\n  - System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)\n  fullName.vb: System.Tuple(Of T1, T2, T3, T4, T5, T6).System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)\n  name.vb: System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)\n  nameWithType: Tuple<T1, T2, T3, T4, T5, T6>.IStructuralEquatable.GetHashCode(IEqualityComparer)\n  nameWithType.vb: Tuple(Of T1, T2, T3, T4, T5, T6).System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)\n- uid: System.Tuple`6.System#IComparable#CompareTo(System.Object)\n  commentId: M:System.Tuple`6.System#IComparable#CompareTo(System.Object)\n  id: System#IComparable#CompareTo(System.Object)\n  isEii: true\n  parent: System.Tuple`6\n  langs:\n  - csharp\n  - vb\n  name: IComparable.CompareTo(Object)\n  fullName: System.Tuple<T1, T2, T3, T4, T5, T6>.System.IComparable.CompareTo(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Tuple.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.IComparable.CompareTo\n    path: src/mscorlib/src/System/Tuple.cs\n    startLine: 589\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Compares the current <xref href=\\\"System.Tuple`6\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object to a specified object and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</p>\\n\"\n  syntax:\n    content: int IComparable.CompareTo(object obj)\n    content.vb: Function System.IComparable.CompareTo(obj As Object) As Integer Implements IComparable.CompareTo\n    parameters:\n    - id: obj\n      type: System.Object\n      description: \"\\n<p>An object to compare with the current instance.</p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>A signed integer that indicates the relative position of this instance and <em>obj</em> in the sort order, as shown in the following table.</p>\\n<p>Value</p>\\n<p>Description</p>\\n<table><tbody><tr><td>\\n<p>A negative integer</p>\\n</td><td>\\n<p>This instance precedes <em>obj</em>.</p>\\n</td></tr><tr><td>\\n<p>Zero</p>\\n</td><td>\\n<p>This instance and <em>obj</em> have the same position in the sort order.</p>\\n</td></tr><tr><td>\\n<p>A positive integer</p>\\n</td><td>\\n<p>This instance follows <em>obj</em>.</p>\\n</td></tr></tbody></table>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>obj</em> is not a <xref href=\\\"System.Tuple`6\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  implements:\n  - System.IComparable.CompareTo(System.Object)\n  fullName.vb: System.Tuple(Of T1, T2, T3, T4, T5, T6).System.IComparable.CompareTo(System.Object)\n  name.vb: System.IComparable.CompareTo(Object)\n  nameWithType: Tuple<T1, T2, T3, T4, T5, T6>.IComparable.CompareTo(Object)\n  nameWithType.vb: Tuple(Of T1, T2, T3, T4, T5, T6).System.IComparable.CompareTo(Object)\n- uid: System.Tuple`6.ToString\n  commentId: M:System.Tuple`6.ToString\n  id: ToString\n  parent: System.Tuple`6\n  langs:\n  - csharp\n  - vb\n  name: ToString()\n  fullName: System.Tuple<T1, T2, T3, T4, T5, T6>.ToString()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Tuple.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ToString\n    path: src/mscorlib/src/System/Tuple.cs\n    startLine: 638\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Returns a string that represents the value of this <xref href=\\\"System.Tuple`6\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n  syntax:\n    content: public override string ToString()\n    content.vb: Public Overrides Function ToString As String\n    return:\n      type: System.String\n      description: \"\\n<p>The string representation of this <xref href=\\\"System.Tuple`6\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  overridden: System.Object.ToString\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  fullName.vb: System.Tuple(Of T1, T2, T3, T4, T5, T6).ToString()\n  nameWithType: Tuple<T1, T2, T3, T4, T5, T6>.ToString()\n  nameWithType.vb: Tuple(Of T1, T2, T3, T4, T5, T6).ToString()\nreferences:\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Collections.IStructuralComparable\n  parent: System.Collections\n  isExternal: false\n  name: IStructuralComparable\n  fullName: System.Collections.IStructuralComparable\n  nameWithType: IStructuralComparable\n  commentId: T:System.Collections.IStructuralComparable\n- uid: System.Collections.IStructuralEquatable\n  parent: System.Collections\n  isExternal: false\n  name: IStructuralEquatable\n  fullName: System.Collections.IStructuralEquatable\n  nameWithType: IStructuralEquatable\n  commentId: T:System.Collections.IStructuralEquatable\n- uid: System.IComparable\n  parent: System\n  isExternal: false\n  name: IComparable\n  fullName: System.IComparable\n  nameWithType: IComparable\n  commentId: T:System.IComparable\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System.Collections\n  isExternal: false\n  name: System.Collections\n  fullName: System.Collections\n  nameWithType: System.Collections\n  commentId: N:System.Collections\n- uid: '{T1}'\n  definition: T1\n  name: T1\n  fullName: T1\n  nameWithType: T1\n  commentId: '!:T1'\n- uid: '{T2}'\n  definition: T2\n  name: T2\n  fullName: T2\n  nameWithType: T2\n  commentId: '!:T2'\n- uid: '{T3}'\n  definition: T3\n  name: T3\n  fullName: T3\n  nameWithType: T3\n  commentId: '!:T3'\n- uid: '{T4}'\n  definition: T4\n  name: T4\n  fullName: T4\n  nameWithType: T4\n  commentId: '!:T4'\n- uid: '{T5}'\n  definition: T5\n  name: T5\n  fullName: T5\n  nameWithType: T5\n  commentId: '!:T5'\n- uid: '{T6}'\n  definition: T6\n  name: T6\n  fullName: T6\n  nameWithType: T6\n  commentId: '!:T6'\n- uid: T1\n  isExternal: false\n  name: T1\n  fullName: T1\n  nameWithType: T1\n- uid: T2\n  isExternal: false\n  name: T2\n  fullName: T2\n  nameWithType: T2\n- uid: T3\n  isExternal: false\n  name: T3\n  fullName: T3\n  nameWithType: T3\n- uid: T4\n  isExternal: false\n  name: T4\n  fullName: T4\n  nameWithType: T4\n- uid: T5\n  isExternal: false\n  name: T5\n  fullName: T5\n  nameWithType: T5\n- uid: T6\n  isExternal: false\n  name: T6\n  fullName: T6\n  nameWithType: T6\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.Collections.IStructuralComparable.CompareTo(System.Object,System.Collections.IComparer)\n  parent: System.Collections.IStructuralComparable\n  isExternal: true\n  name: CompareTo(Object, IComparer)\n  fullName: System.Collections.IStructuralComparable.CompareTo(System.Object, System.Collections.IComparer)\n  spec.csharp:\n  - uid: System.Collections.IStructuralComparable.CompareTo(System.Object,System.Collections.IComparer)\n    name: CompareTo\n    fullName: System.Collections.IStructuralComparable.CompareTo\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.IComparer\n    name: IComparer\n    fullName: System.Collections.IComparer\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.IStructuralComparable.CompareTo(System.Object,System.Collections.IComparer)\n    name: CompareTo\n    fullName: System.Collections.IStructuralComparable.CompareTo\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.IComparer\n    name: IComparer\n    fullName: System.Collections.IComparer\n  - name: )\n    fullName: )\n  nameWithType: IStructuralComparable.CompareTo(Object, IComparer)\n  commentId: M:System.Collections.IStructuralComparable.CompareTo(System.Object,System.Collections.IComparer)\n- uid: System.Collections.IComparer\n  parent: System.Collections\n  isExternal: false\n  name: IComparer\n  fullName: System.Collections.IComparer\n  nameWithType: IComparer\n  commentId: T:System.Collections.IComparer\n- uid: System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)\n  parent: System.Collections.IStructuralEquatable\n  isExternal: true\n  name: Equals(Object, IEqualityComparer)\n  fullName: System.Collections.IStructuralEquatable.Equals(System.Object, System.Collections.IEqualityComparer)\n  spec.csharp:\n  - uid: System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)\n    name: Equals\n    fullName: System.Collections.IStructuralEquatable.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.IEqualityComparer\n    name: IEqualityComparer\n    fullName: System.Collections.IEqualityComparer\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)\n    name: Equals\n    fullName: System.Collections.IStructuralEquatable.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.IEqualityComparer\n    name: IEqualityComparer\n    fullName: System.Collections.IEqualityComparer\n  - name: )\n    fullName: )\n  nameWithType: IStructuralEquatable.Equals(Object, IEqualityComparer)\n  commentId: M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)\n- uid: System.Collections.IEqualityComparer\n  parent: System.Collections\n  isExternal: false\n  name: IEqualityComparer\n  fullName: System.Collections.IEqualityComparer\n  nameWithType: IEqualityComparer\n  commentId: T:System.Collections.IEqualityComparer\n- uid: System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)\n  parent: System.Collections.IStructuralEquatable\n  isExternal: false\n  name: GetHashCode(IEqualityComparer)\n  fullName: System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)\n  spec.csharp:\n  - uid: System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)\n    name: GetHashCode\n    fullName: System.Collections.IStructuralEquatable.GetHashCode\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEqualityComparer\n    name: IEqualityComparer\n    fullName: System.Collections.IEqualityComparer\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)\n    name: GetHashCode\n    fullName: System.Collections.IStructuralEquatable.GetHashCode\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEqualityComparer\n    name: IEqualityComparer\n    fullName: System.Collections.IEqualityComparer\n  - name: )\n    fullName: )\n  nameWithType: IStructuralEquatable.GetHashCode(IEqualityComparer)\n  commentId: M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)\n- uid: System.IComparable.CompareTo(System.Object)\n  parent: System.IComparable\n  isExternal: true\n  name: CompareTo(Object)\n  fullName: System.IComparable.CompareTo(System.Object)\n  spec.csharp:\n  - uid: System.IComparable.CompareTo(System.Object)\n    name: CompareTo\n    fullName: System.IComparable.CompareTo\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IComparable.CompareTo(System.Object)\n    name: CompareTo\n    fullName: System.IComparable.CompareTo\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: IComparable.CompareTo(Object)\n  commentId: M:System.IComparable.CompareTo(System.Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n"}