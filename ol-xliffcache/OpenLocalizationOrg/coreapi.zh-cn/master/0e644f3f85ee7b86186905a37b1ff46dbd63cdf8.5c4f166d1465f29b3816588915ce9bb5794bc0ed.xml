{"nodes":[{"pos":[1972,1990],"content":"IPGlobalStatistics","needQuote":true,"nodes":[{"content":"IPGlobalStatistics","pos":[0,18]}]},{"pos":[3366,3386],"content":"IPGlobalStatistics()","needQuote":true,"nodes":[{"content":"IPGlobalStatistics()","pos":[0,20]}]},{"pos":[4504,4514],"content":"DefaultTtl","needQuote":true,"nodes":[{"content":"DefaultTtl","pos":[0,10]}]},{"pos":[5853,5870],"content":"ForwardingEnabled","needQuote":true,"nodes":[{"content":"ForwardingEnabled","pos":[0,17]}]},{"pos":[7366,7384],"content":"NumberOfInterfaces","needQuote":true,"nodes":[{"content":"NumberOfInterfaces","pos":[0,18]}]},{"pos":[8912,8931],"content":"NumberOfIPAddresses","needQuote":true,"nodes":[{"content":"NumberOfIPAddresses","pos":[0,19]}]},{"pos":[10448,10462],"content":"NumberOfRoutes","needQuote":true,"nodes":[{"content":"NumberOfRoutes","pos":[0,14]}]},{"pos":[11863,11883],"content":"OutputPacketRequests","needQuote":true,"nodes":[{"content":"OutputPacketRequests","pos":[0,20]}]},{"pos":[13311,13338],"content":"OutputPacketRoutingDiscards","needQuote":true,"nodes":[{"content":"OutputPacketRoutingDiscards","pos":[0,27]}]},{"pos":[14822,14844],"content":"OutputPacketsDiscarded","needQuote":true,"nodes":[{"content":"OutputPacketsDiscarded","pos":[0,22]}]},{"pos":[16326,16350],"content":"OutputPacketsWithNoRoute","needQuote":true,"nodes":[{"content":"OutputPacketsWithNoRoute","pos":[0,24]}]},{"pos":[17901,17923],"content":"PacketFragmentFailures","needQuote":true,"nodes":[{"content":"PacketFragmentFailures","pos":[0,22]}]},{"pos":[19436,19462],"content":"PacketReassembliesRequired","needQuote":true,"nodes":[{"content":"PacketReassembliesRequired","pos":[0,26]}]},{"pos":[20939,20963],"content":"PacketReassemblyFailures","needQuote":true,"nodes":[{"content":"PacketReassemblyFailures","pos":[0,24]}]},{"pos":[22450,22473],"content":"PacketReassemblyTimeout","needQuote":true,"nodes":[{"content":"PacketReassemblyTimeout","pos":[0,23]}]},{"pos":[24008,24025],"content":"PacketsFragmented","needQuote":true,"nodes":[{"content":"PacketsFragmented","pos":[0,17]}]},{"pos":[25415,25433],"content":"PacketsReassembled","needQuote":true,"nodes":[{"content":"PacketsReassembled","pos":[0,18]}]},{"pos":[26860,26875],"content":"ReceivedPackets","needQuote":true,"nodes":[{"content":"ReceivedPackets","pos":[0,15]}]},{"pos":[28272,28296],"content":"ReceivedPacketsDelivered","needQuote":true,"nodes":[{"content":"ReceivedPacketsDelivered","pos":[0,24]}]},{"pos":[29740,29764],"content":"ReceivedPacketsDiscarded","needQuote":true,"nodes":[{"content":"ReceivedPacketsDiscarded","pos":[0,24]}]},{"pos":[31257,31281],"content":"ReceivedPacketsForwarded","needQuote":true,"nodes":[{"content":"ReceivedPacketsForwarded","pos":[0,24]}]},{"pos":[32746,32778],"content":"ReceivedPacketsWithAddressErrors","needQuote":true,"nodes":[{"content":"ReceivedPacketsWithAddressErrors","pos":[0,32]}]},{"pos":[34363,34395],"content":"ReceivedPacketsWithHeadersErrors","needQuote":true,"nodes":[{"content":"ReceivedPacketsWithHeadersErrors","pos":[0,32]}]},{"pos":[35978,36012],"content":"ReceivedPacketsWithUnknownProtocol","needQuote":true,"nodes":[{"content":"ReceivedPacketsWithUnknownProtocol","pos":[0,34]}]},{"pos":[37371,37400],"content":"System.Net.NetworkInformation","needQuote":true,"nodes":[{"content":"System.Net.NetworkInformation","pos":[0,29]}]},{"pos":[37600,37606],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[37766,37776],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[37871,37879],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[37948,37949],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[37976,37977],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[38047,38055],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[38124,38125],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[38152,38153],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[38336,38350],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[38469,38475],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[38542,38543],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[38593,38599],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[38659,38660],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[38743,38749],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[38816,38817],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[38867,38873],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[38933,38934],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[39148,39170],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[39318,39324],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[39391,39392],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[39442,39448],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[39509,39510]},{"pos":[39565,39571],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[39631,39632],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[39729,39735],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[39802,39803],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[39853,39859],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[39920,39921]},{"pos":[39976,39982],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[40042,40043],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[40288,40319],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[40485,40500],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[40576,40577],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[40627,40633],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[40694,40695]},{"pos":[40750,40756],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[40816,40817],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[40923,40938],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[41014,41015],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[41065,41071],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[41132,41133]},{"pos":[41188,41194],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[41254,41255],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[41485,41498],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[41599,41610],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[41682,41683],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[41710,41711],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[41784,41795],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[41867,41868],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[41895,41896],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[42071,42080],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[42173,42180],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[42248,42249],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[42276,42277],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[42346,42353],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[42421,42422],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[42449,42450],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[42625,42642],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[42751,42766],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[42842,42843],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[42870,42871],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[42948,42963],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[43039,43040],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[43067,43068],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[43213,43219],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[43349,43354],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[43497,43504],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[43651,43656],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]}],"content":"items:\n- uid: System.Net.NetworkInformation.IPGlobalStatistics\n  commentId: T:System.Net.NetworkInformation.IPGlobalStatistics\n  id: IPGlobalStatistics\n  parent: System.Net.NetworkInformation\n  children:\n  - System.Net.NetworkInformation.IPGlobalStatistics.#ctor\n  - System.Net.NetworkInformation.IPGlobalStatistics.DefaultTtl\n  - System.Net.NetworkInformation.IPGlobalStatistics.ForwardingEnabled\n  - System.Net.NetworkInformation.IPGlobalStatistics.NumberOfInterfaces\n  - System.Net.NetworkInformation.IPGlobalStatistics.NumberOfIPAddresses\n  - System.Net.NetworkInformation.IPGlobalStatistics.NumberOfRoutes\n  - System.Net.NetworkInformation.IPGlobalStatistics.OutputPacketRequests\n  - System.Net.NetworkInformation.IPGlobalStatistics.OutputPacketRoutingDiscards\n  - System.Net.NetworkInformation.IPGlobalStatistics.OutputPacketsDiscarded\n  - System.Net.NetworkInformation.IPGlobalStatistics.OutputPacketsWithNoRoute\n  - System.Net.NetworkInformation.IPGlobalStatistics.PacketFragmentFailures\n  - System.Net.NetworkInformation.IPGlobalStatistics.PacketReassembliesRequired\n  - System.Net.NetworkInformation.IPGlobalStatistics.PacketReassemblyFailures\n  - System.Net.NetworkInformation.IPGlobalStatistics.PacketReassemblyTimeout\n  - System.Net.NetworkInformation.IPGlobalStatistics.PacketsFragmented\n  - System.Net.NetworkInformation.IPGlobalStatistics.PacketsReassembled\n  - System.Net.NetworkInformation.IPGlobalStatistics.ReceivedPackets\n  - System.Net.NetworkInformation.IPGlobalStatistics.ReceivedPacketsDelivered\n  - System.Net.NetworkInformation.IPGlobalStatistics.ReceivedPacketsDiscarded\n  - System.Net.NetworkInformation.IPGlobalStatistics.ReceivedPacketsForwarded\n  - System.Net.NetworkInformation.IPGlobalStatistics.ReceivedPacketsWithAddressErrors\n  - System.Net.NetworkInformation.IPGlobalStatistics.ReceivedPacketsWithHeadersErrors\n  - System.Net.NetworkInformation.IPGlobalStatistics.ReceivedPacketsWithUnknownProtocol\n  langs:\n  - csharp\n  - vb\n  name: IPGlobalStatistics\n  fullName: System.Net.NetworkInformation.IPGlobalStatistics\n  type: Class\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IPGlobalStatistics\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 146\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Provides Internet Protocol (IP) statistical data.</p>\\n\"\n  syntax:\n    content: public abstract class IPGlobalStatistics\n    content.vb: Public MustInherit Class IPGlobalStatistics\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - abstract\n  - class\n  modifiers.vb:\n  - Public\n  - MustInherit\n  - Class\n  nameWithType: IPGlobalStatistics\n- uid: System.Net.NetworkInformation.IPGlobalStatistics.#ctor\n  commentId: M:System.Net.NetworkInformation.IPGlobalStatistics.#ctor\n  id: '#ctor'\n  parent: System.Net.NetworkInformation.IPGlobalStatistics\n  langs:\n  - csharp\n  - vb\n  name: IPGlobalStatistics()\n  fullName: System.Net.NetworkInformation.IPGlobalStatistics.IPGlobalStatistics()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 148\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Net.NetworkInformation.IPGlobalStatistics\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: protected IPGlobalStatistics()\n    content.vb: Protected Sub New\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: IPGlobalStatistics.IPGlobalStatistics()\n- uid: System.Net.NetworkInformation.IPGlobalStatistics.DefaultTtl\n  commentId: P:System.Net.NetworkInformation.IPGlobalStatistics.DefaultTtl\n  id: DefaultTtl\n  parent: System.Net.NetworkInformation.IPGlobalStatistics\n  langs:\n  - csharp\n  - vb\n  name: DefaultTtl\n  fullName: System.Net.NetworkInformation.IPGlobalStatistics.DefaultTtl\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: DefaultTtl\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 149\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Gets the default time-to-live (TTL) value for Internet Protocol (IP) packets.</p>\\n\"\n  syntax:\n    content: public abstract int DefaultTtl { get; }\n    content.vb: Public MustOverride ReadOnly Property DefaultTtl As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>An <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that specifies the TTL.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: IPGlobalStatistics.DefaultTtl\n- uid: System.Net.NetworkInformation.IPGlobalStatistics.ForwardingEnabled\n  commentId: P:System.Net.NetworkInformation.IPGlobalStatistics.ForwardingEnabled\n  id: ForwardingEnabled\n  parent: System.Net.NetworkInformation.IPGlobalStatistics\n  langs:\n  - csharp\n  - vb\n  name: ForwardingEnabled\n  fullName: System.Net.NetworkInformation.IPGlobalStatistics.ForwardingEnabled\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ForwardingEnabled\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 150\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Gets a <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that specifies whether Internet Protocol (IP) packet forwarding is enabled.</p>\\n\"\n  syntax:\n    content: public abstract bool ForwardingEnabled { get; }\n    content.vb: Public MustOverride ReadOnly Property ForwardingEnabled As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>A <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that specifies whether packet forwarding is enabled.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: IPGlobalStatistics.ForwardingEnabled\n- uid: System.Net.NetworkInformation.IPGlobalStatistics.NumberOfInterfaces\n  commentId: P:System.Net.NetworkInformation.IPGlobalStatistics.NumberOfInterfaces\n  id: NumberOfInterfaces\n  parent: System.Net.NetworkInformation.IPGlobalStatistics\n  langs:\n  - csharp\n  - vb\n  name: NumberOfInterfaces\n  fullName: System.Net.NetworkInformation.IPGlobalStatistics.NumberOfInterfaces\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: NumberOfInterfaces\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 151\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Gets the number of network interfaces.</p>\\n\"\n  syntax:\n    content: public abstract int NumberOfInterfaces { get; }\n    content.vb: Public MustOverride ReadOnly Property NumberOfInterfaces As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>An <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value containing the number of network interfaces for the address family used to obtain this <xref href=\\\"System.Net.NetworkInformation.IPGlobalStatistics\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: IPGlobalStatistics.NumberOfInterfaces\n- uid: System.Net.NetworkInformation.IPGlobalStatistics.NumberOfIPAddresses\n  commentId: P:System.Net.NetworkInformation.IPGlobalStatistics.NumberOfIPAddresses\n  id: NumberOfIPAddresses\n  parent: System.Net.NetworkInformation.IPGlobalStatistics\n  langs:\n  - csharp\n  - vb\n  name: NumberOfIPAddresses\n  fullName: System.Net.NetworkInformation.IPGlobalStatistics.NumberOfIPAddresses\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: NumberOfIPAddresses\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 152\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Gets the number of Internet Protocol (IP) addresses assigned to the local computer.</p>\\n\"\n  syntax:\n    content: public abstract int NumberOfIPAddresses { get; }\n    content.vb: Public MustOverride ReadOnly Property NumberOfIPAddresses As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>An <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that indicates the number of IP addresses assigned to the address family (Internet Protocol version 4 or Internet Protocol version 6) described by this object.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: IPGlobalStatistics.NumberOfIPAddresses\n- uid: System.Net.NetworkInformation.IPGlobalStatistics.NumberOfRoutes\n  commentId: P:System.Net.NetworkInformation.IPGlobalStatistics.NumberOfRoutes\n  id: NumberOfRoutes\n  parent: System.Net.NetworkInformation.IPGlobalStatistics\n  langs:\n  - csharp\n  - vb\n  name: NumberOfRoutes\n  fullName: System.Net.NetworkInformation.IPGlobalStatistics.NumberOfRoutes\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: NumberOfRoutes\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 153\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Gets the number of routes in the Internet Protocol (IP) routing table.</p>\\n\"\n  syntax:\n    content: public abstract int NumberOfRoutes { get; }\n    content.vb: Public MustOverride ReadOnly Property NumberOfRoutes As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>An <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that specifies the total number of routes in the routing table.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: IPGlobalStatistics.NumberOfRoutes\n- uid: System.Net.NetworkInformation.IPGlobalStatistics.OutputPacketRequests\n  commentId: P:System.Net.NetworkInformation.IPGlobalStatistics.OutputPacketRequests\n  id: OutputPacketRequests\n  parent: System.Net.NetworkInformation.IPGlobalStatistics\n  langs:\n  - csharp\n  - vb\n  name: OutputPacketRequests\n  fullName: System.Net.NetworkInformation.IPGlobalStatistics.OutputPacketRequests\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: OutputPacketRequests\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 154\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Gets the number of outbound Internet Protocol (IP) packets.</p>\\n\"\n  syntax:\n    content: public abstract long OutputPacketRequests { get; }\n    content.vb: Public MustOverride ReadOnly Property OutputPacketRequests As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>An <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that specifies the total number of outgoing packets.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: IPGlobalStatistics.OutputPacketRequests\n- uid: System.Net.NetworkInformation.IPGlobalStatistics.OutputPacketRoutingDiscards\n  commentId: P:System.Net.NetworkInformation.IPGlobalStatistics.OutputPacketRoutingDiscards\n  id: OutputPacketRoutingDiscards\n  parent: System.Net.NetworkInformation.IPGlobalStatistics\n  langs:\n  - csharp\n  - vb\n  name: OutputPacketRoutingDiscards\n  fullName: System.Net.NetworkInformation.IPGlobalStatistics.OutputPacketRoutingDiscards\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: OutputPacketRoutingDiscards\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 155\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Gets the number of routes that have been discarded from the routing table.</p>\\n\"\n  syntax:\n    content: public abstract long OutputPacketRoutingDiscards { get; }\n    content.vb: Public MustOverride ReadOnly Property OutputPacketRoutingDiscards As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>An <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that specifies the total number of valid routes that have been discarded.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: IPGlobalStatistics.OutputPacketRoutingDiscards\n- uid: System.Net.NetworkInformation.IPGlobalStatistics.OutputPacketsDiscarded\n  commentId: P:System.Net.NetworkInformation.IPGlobalStatistics.OutputPacketsDiscarded\n  id: OutputPacketsDiscarded\n  parent: System.Net.NetworkInformation.IPGlobalStatistics\n  langs:\n  - csharp\n  - vb\n  name: OutputPacketsDiscarded\n  fullName: System.Net.NetworkInformation.IPGlobalStatistics.OutputPacketsDiscarded\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: OutputPacketsDiscarded\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 156\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Gets the number of transmitted Internet Protocol (IP) packets that have been discarded.</p>\\n\"\n  syntax:\n    content: public abstract long OutputPacketsDiscarded { get; }\n    content.vb: Public MustOverride ReadOnly Property OutputPacketsDiscarded As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>An <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that specifies the total number of outgoing packets that have been discarded.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: IPGlobalStatistics.OutputPacketsDiscarded\n- uid: System.Net.NetworkInformation.IPGlobalStatistics.OutputPacketsWithNoRoute\n  commentId: P:System.Net.NetworkInformation.IPGlobalStatistics.OutputPacketsWithNoRoute\n  id: OutputPacketsWithNoRoute\n  parent: System.Net.NetworkInformation.IPGlobalStatistics\n  langs:\n  - csharp\n  - vb\n  name: OutputPacketsWithNoRoute\n  fullName: System.Net.NetworkInformation.IPGlobalStatistics.OutputPacketsWithNoRoute\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: OutputPacketsWithNoRoute\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 157\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Gets the number of Internet Protocol (IP) packets for which the local computer could not determine a route to the destination address.</p>\\n\"\n  syntax:\n    content: public abstract long OutputPacketsWithNoRoute { get; }\n    content.vb: Public MustOverride ReadOnly Property OutputPacketsWithNoRoute As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>An <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that specifies the number of packets that could not be sent because a route could not be found.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: IPGlobalStatistics.OutputPacketsWithNoRoute\n- uid: System.Net.NetworkInformation.IPGlobalStatistics.PacketFragmentFailures\n  commentId: P:System.Net.NetworkInformation.IPGlobalStatistics.PacketFragmentFailures\n  id: PacketFragmentFailures\n  parent: System.Net.NetworkInformation.IPGlobalStatistics\n  langs:\n  - csharp\n  - vb\n  name: PacketFragmentFailures\n  fullName: System.Net.NetworkInformation.IPGlobalStatistics.PacketFragmentFailures\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: PacketFragmentFailures\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 158\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Gets the number of Internet Protocol (IP) packets that could not be fragmented.</p>\\n\"\n  syntax:\n    content: public abstract long PacketFragmentFailures { get; }\n    content.vb: Public MustOverride ReadOnly Property PacketFragmentFailures As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>An <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that specifies the total number of packets that required fragmentation but had the \\\"Don't Fragment\\\" bit set.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: IPGlobalStatistics.PacketFragmentFailures\n- uid: System.Net.NetworkInformation.IPGlobalStatistics.PacketReassembliesRequired\n  commentId: P:System.Net.NetworkInformation.IPGlobalStatistics.PacketReassembliesRequired\n  id: PacketReassembliesRequired\n  parent: System.Net.NetworkInformation.IPGlobalStatistics\n  langs:\n  - csharp\n  - vb\n  name: PacketReassembliesRequired\n  fullName: System.Net.NetworkInformation.IPGlobalStatistics.PacketReassembliesRequired\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: PacketReassembliesRequired\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 159\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Gets the number of Internet Protocol (IP) packets that required reassembly.</p>\\n\"\n  syntax:\n    content: public abstract long PacketReassembliesRequired { get; }\n    content.vb: Public MustOverride ReadOnly Property PacketReassembliesRequired As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>An <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that specifies the total number of packet reassemblies required.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: IPGlobalStatistics.PacketReassembliesRequired\n- uid: System.Net.NetworkInformation.IPGlobalStatistics.PacketReassemblyFailures\n  commentId: P:System.Net.NetworkInformation.IPGlobalStatistics.PacketReassemblyFailures\n  id: PacketReassemblyFailures\n  parent: System.Net.NetworkInformation.IPGlobalStatistics\n  langs:\n  - csharp\n  - vb\n  name: PacketReassemblyFailures\n  fullName: System.Net.NetworkInformation.IPGlobalStatistics.PacketReassemblyFailures\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: PacketReassemblyFailures\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 160\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Gets the number of Internet Protocol (IP) packets that were not successfully reassembled.</p>\\n\"\n  syntax:\n    content: public abstract long PacketReassemblyFailures { get; }\n    content.vb: Public MustOverride ReadOnly Property PacketReassemblyFailures As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>An <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that specifies the total number of packets that could not be reassembled.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: IPGlobalStatistics.PacketReassemblyFailures\n- uid: System.Net.NetworkInformation.IPGlobalStatistics.PacketReassemblyTimeout\n  commentId: P:System.Net.NetworkInformation.IPGlobalStatistics.PacketReassemblyTimeout\n  id: PacketReassemblyTimeout\n  parent: System.Net.NetworkInformation.IPGlobalStatistics\n  langs:\n  - csharp\n  - vb\n  name: PacketReassemblyTimeout\n  fullName: System.Net.NetworkInformation.IPGlobalStatistics.PacketReassemblyTimeout\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: PacketReassemblyTimeout\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 161\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Gets the maximum amount of time within which all fragments of an Internet Protocol (IP) packet must arrive.</p>\\n\"\n  syntax:\n    content: public abstract long PacketReassemblyTimeout { get; }\n    content.vb: Public MustOverride ReadOnly Property PacketReassemblyTimeout As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>An <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that specifies the maximum number of milliseconds within which all fragments of a packet must arrive to avoid being discarded.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: IPGlobalStatistics.PacketReassemblyTimeout\n- uid: System.Net.NetworkInformation.IPGlobalStatistics.PacketsFragmented\n  commentId: P:System.Net.NetworkInformation.IPGlobalStatistics.PacketsFragmented\n  id: PacketsFragmented\n  parent: System.Net.NetworkInformation.IPGlobalStatistics\n  langs:\n  - csharp\n  - vb\n  name: PacketsFragmented\n  fullName: System.Net.NetworkInformation.IPGlobalStatistics.PacketsFragmented\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: PacketsFragmented\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 162\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Gets the number of Internet Protocol (IP) packets fragmented.</p>\\n\"\n  syntax:\n    content: public abstract long PacketsFragmented { get; }\n    content.vb: Public MustOverride ReadOnly Property PacketsFragmented As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>An <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that specifies the total number of fragmented packets.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: IPGlobalStatistics.PacketsFragmented\n- uid: System.Net.NetworkInformation.IPGlobalStatistics.PacketsReassembled\n  commentId: P:System.Net.NetworkInformation.IPGlobalStatistics.PacketsReassembled\n  id: PacketsReassembled\n  parent: System.Net.NetworkInformation.IPGlobalStatistics\n  langs:\n  - csharp\n  - vb\n  name: PacketsReassembled\n  fullName: System.Net.NetworkInformation.IPGlobalStatistics.PacketsReassembled\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: PacketsReassembled\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 163\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Gets the number of Internet Protocol (IP) packets reassembled.</p>\\n\"\n  syntax:\n    content: public abstract long PacketsReassembled { get; }\n    content.vb: Public MustOverride ReadOnly Property PacketsReassembled As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>An <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that specifies the total number of fragmented packets that have been successfully reassembled.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: IPGlobalStatistics.PacketsReassembled\n- uid: System.Net.NetworkInformation.IPGlobalStatistics.ReceivedPackets\n  commentId: P:System.Net.NetworkInformation.IPGlobalStatistics.ReceivedPackets\n  id: ReceivedPackets\n  parent: System.Net.NetworkInformation.IPGlobalStatistics\n  langs:\n  - csharp\n  - vb\n  name: ReceivedPackets\n  fullName: System.Net.NetworkInformation.IPGlobalStatistics.ReceivedPackets\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReceivedPackets\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 164\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Gets the number of Internet Protocol (IP) packets received.</p>\\n\"\n  syntax:\n    content: public abstract long ReceivedPackets { get; }\n    content.vb: Public MustOverride ReadOnly Property ReceivedPackets As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>An <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that specifies the total number of IP packets received.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: IPGlobalStatistics.ReceivedPackets\n- uid: System.Net.NetworkInformation.IPGlobalStatistics.ReceivedPacketsDelivered\n  commentId: P:System.Net.NetworkInformation.IPGlobalStatistics.ReceivedPacketsDelivered\n  id: ReceivedPacketsDelivered\n  parent: System.Net.NetworkInformation.IPGlobalStatistics\n  langs:\n  - csharp\n  - vb\n  name: ReceivedPacketsDelivered\n  fullName: System.Net.NetworkInformation.IPGlobalStatistics.ReceivedPacketsDelivered\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReceivedPacketsDelivered\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 165\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Gets the number of Internet Protocol (IP) packets delivered.</p>\\n\"\n  syntax:\n    content: public abstract long ReceivedPacketsDelivered { get; }\n    content.vb: Public MustOverride ReadOnly Property ReceivedPacketsDelivered As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>An <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that specifies the total number of IP packets delivered.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: IPGlobalStatistics.ReceivedPacketsDelivered\n- uid: System.Net.NetworkInformation.IPGlobalStatistics.ReceivedPacketsDiscarded\n  commentId: P:System.Net.NetworkInformation.IPGlobalStatistics.ReceivedPacketsDiscarded\n  id: ReceivedPacketsDiscarded\n  parent: System.Net.NetworkInformation.IPGlobalStatistics\n  langs:\n  - csharp\n  - vb\n  name: ReceivedPacketsDiscarded\n  fullName: System.Net.NetworkInformation.IPGlobalStatistics.ReceivedPacketsDiscarded\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReceivedPacketsDiscarded\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 166\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Gets the number of Internet Protocol (IP) packets that have been received and discarded.</p>\\n\"\n  syntax:\n    content: public abstract long ReceivedPacketsDiscarded { get; }\n    content.vb: Public MustOverride ReadOnly Property ReceivedPacketsDiscarded As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>An <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that specifies the total number of incoming packets that have been discarded.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: IPGlobalStatistics.ReceivedPacketsDiscarded\n- uid: System.Net.NetworkInformation.IPGlobalStatistics.ReceivedPacketsForwarded\n  commentId: P:System.Net.NetworkInformation.IPGlobalStatistics.ReceivedPacketsForwarded\n  id: ReceivedPacketsForwarded\n  parent: System.Net.NetworkInformation.IPGlobalStatistics\n  langs:\n  - csharp\n  - vb\n  name: ReceivedPacketsForwarded\n  fullName: System.Net.NetworkInformation.IPGlobalStatistics.ReceivedPacketsForwarded\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReceivedPacketsForwarded\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 167\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Gets the number of Internet Protocol (IP) packets forwarded.</p>\\n\"\n  syntax:\n    content: public abstract long ReceivedPacketsForwarded { get; }\n    content.vb: Public MustOverride ReadOnly Property ReceivedPacketsForwarded As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>An <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that specifies the total number of forwarded packets.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: IPGlobalStatistics.ReceivedPacketsForwarded\n- uid: System.Net.NetworkInformation.IPGlobalStatistics.ReceivedPacketsWithAddressErrors\n  commentId: P:System.Net.NetworkInformation.IPGlobalStatistics.ReceivedPacketsWithAddressErrors\n  id: ReceivedPacketsWithAddressErrors\n  parent: System.Net.NetworkInformation.IPGlobalStatistics\n  langs:\n  - csharp\n  - vb\n  name: ReceivedPacketsWithAddressErrors\n  fullName: System.Net.NetworkInformation.IPGlobalStatistics.ReceivedPacketsWithAddressErrors\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReceivedPacketsWithAddressErrors\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 168\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Gets the number of Internet Protocol (IP) packets with address errors that were received.</p>\\n\"\n  syntax:\n    content: public abstract long ReceivedPacketsWithAddressErrors { get; }\n    content.vb: Public MustOverride ReadOnly Property ReceivedPacketsWithAddressErrors As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>An <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that specifies the total number of IP packets received with errors in the address portion of the header.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: IPGlobalStatistics.ReceivedPacketsWithAddressErrors\n- uid: System.Net.NetworkInformation.IPGlobalStatistics.ReceivedPacketsWithHeadersErrors\n  commentId: P:System.Net.NetworkInformation.IPGlobalStatistics.ReceivedPacketsWithHeadersErrors\n  id: ReceivedPacketsWithHeadersErrors\n  parent: System.Net.NetworkInformation.IPGlobalStatistics\n  langs:\n  - csharp\n  - vb\n  name: ReceivedPacketsWithHeadersErrors\n  fullName: System.Net.NetworkInformation.IPGlobalStatistics.ReceivedPacketsWithHeadersErrors\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReceivedPacketsWithHeadersErrors\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 169\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Gets the number of Internet Protocol (IP) packets with header errors that were received.</p>\\n\"\n  syntax:\n    content: public abstract long ReceivedPacketsWithHeadersErrors { get; }\n    content.vb: Public MustOverride ReadOnly Property ReceivedPacketsWithHeadersErrors As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>An <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that specifies the total number of IP packets received and discarded due to errors in the header.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: IPGlobalStatistics.ReceivedPacketsWithHeadersErrors\n- uid: System.Net.NetworkInformation.IPGlobalStatistics.ReceivedPacketsWithUnknownProtocol\n  commentId: P:System.Net.NetworkInformation.IPGlobalStatistics.ReceivedPacketsWithUnknownProtocol\n  id: ReceivedPacketsWithUnknownProtocol\n  parent: System.Net.NetworkInformation.IPGlobalStatistics\n  langs:\n  - csharp\n  - vb\n  name: ReceivedPacketsWithUnknownProtocol\n  fullName: System.Net.NetworkInformation.IPGlobalStatistics.ReceivedPacketsWithUnknownProtocol\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReceivedPacketsWithUnknownProtocol\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 170\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Gets the number of Internet Protocol (IP) packets received on the local machine with an unknown protocol in the header.</p>\\n\"\n  syntax:\n    content: public abstract long ReceivedPacketsWithUnknownProtocol { get; }\n    content.vb: Public MustOverride ReadOnly Property ReceivedPacketsWithUnknownProtocol As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>An <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that indicates the total number of IP packets received with an unknown protocol.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: IPGlobalStatistics.ReceivedPacketsWithUnknownProtocol\nreferences:\n- uid: System.Net.NetworkInformation\n  isExternal: false\n  name: System.Net.NetworkInformation\n  fullName: System.Net.NetworkInformation\n  commentId: N:System.Net.NetworkInformation\n  nameWithType: System.Net.NetworkInformation\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  commentId: T:System.Int32\n  nameWithType: Int32\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  fullName: System.Int64\n  commentId: T:System.Int64\n  nameWithType: Int64\n"}