{"nodes":[{"pos":[657,668],"content":"XsltContext","needQuote":true,"nodes":[{"content":"XsltContext","pos":[0,11]}]},{"pos":[1848,1861],"content":"XsltContext()","needQuote":true,"nodes":[{"content":"XsltContext()","pos":[0,13]}]},{"pos":[2858,2880],"content":"XsltContext(NameTable)","needQuote":true,"nodes":[{"content":"XsltContext(NameTable)","pos":[0,22]}]},{"pos":[4179,4189],"content":"Whitespace","needQuote":true,"nodes":[{"content":"Whitespace","pos":[0,10]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to check white space nodes in the source document for inclusion in the output; &lt;strong&gt;false&lt;/strong&gt; to not evaluate white space nodes.","pos":[4960,5125],"source":"\\n<p>\\n<strong>true</strong> to check white space nodes in the source document for inclusion in the output; <strong>false</strong> to not evaluate white space nodes."},{"content":"The default is &lt;strong&gt;true&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[5126,5169],"source":" The default is <strong>true</strong>.</p>\\n"},{"pos":[5608,5639],"content":"CompareDocument(String, String)","needQuote":true,"nodes":[{"content":"CompareDocument(String, String)","pos":[0,31]}]},{"content":"\\n&lt;p&gt;The base URI of the first document to compare.","pos":[6693,6744],"source":"\\n<p>The base URI of the first document to compare."},{"content":"&lt;/p&gt;\\n","pos":[6745,6751],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The base URI of the second document to compare.","pos":[6821,6873],"source":"\\n<p>The base URI of the second document to compare."},{"content":"&lt;/p&gt;\\n","pos":[6874,6880],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An integer value describing the relative order of the two base URIs: &lt;strong&gt;-&lt;/strong&gt;1 if &lt;em&gt;baseUri&lt;/em&gt; occurs before &lt;em&gt;nextbaseUri&lt;/em&gt;; 0 if the two base URIs are identical; and 1 if &lt;em&gt;baseUri&lt;/em&gt; occurs after &lt;em&gt;nextbaseUri&lt;/em&gt;.&lt;/p&gt;\\n","pos":[6939,7193],"source":"\\n<p>An integer value describing the relative order of the two base URIs: <strong>-</strong>1 if <em>baseUri</em> occurs before <em>nextbaseUri</em>; 0 if the two base URIs are identical; and 1 if <em>baseUri</em> occurs after <em>nextbaseUri</em>.</p>\\n"},{"pos":[7653,7693],"content":"PreserveWhitespace(XPath.XPathNavigator)","needQuote":true,"nodes":[{"content":"PreserveWhitespace(XPath.XPathNavigator)","pos":[0,40]}]},{"content":"\\n&lt;p&gt;The white space node that is to be preserved or stripped in the current context.","pos":[8592,8677],"source":"\\n<p>The white space node that is to be preserved or stripped in the current context."},{"content":"&lt;/p&gt;\\n","pos":[8678,8684],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;Returns &lt;strong&gt;true&lt;/strong&gt; if the white space is to be preserved or &lt;strong&gt;false&lt;/strong&gt; if the white space is to be stripped.&lt;/p&gt;\\n","pos":[8745,8887],"source":"\\n<p>Returns <strong>true</strong> if the white space is to be preserved or <strong>false</strong> if the white space is to be stripped.</p>\\n"},{"pos":[9440,9496],"content":"ResolveFunction(String, String, XPath.XPathResultType[])","needQuote":true,"nodes":[{"content":"ResolveFunction(String, String, XPath.XPathResultType[])","pos":[0,56]}]},{"content":"\\n&lt;p&gt;The prefix of the function as it appears in the XPath expression.","pos":[10755,10825],"source":"\\n<p>The prefix of the function as it appears in the XPath expression."},{"content":"&lt;/p&gt;\\n","pos":[10826,10832],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The name of the function.","pos":[10895,10925],"source":"\\n<p>The name of the function."},{"content":"&lt;/p&gt;\\n","pos":[10926,10932],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An array of argument types for the function being resolved.","pos":[11020,11084],"source":"\\n<p>An array of argument types for the function being resolved."},{"content":"This allows you to select between methods with the same name (for example, overloaded methods).","pos":[11085,11180]},{"content":"&lt;/p&gt;\\n","pos":[11181,11187],"source":" </p>\\n"},{"pos":[12149,12180],"content":"ResolveVariable(String, String)","needQuote":true,"nodes":[{"content":"ResolveVariable(String, String)","pos":[0,31]}]},{"content":"\\n&lt;p&gt;The prefix of the variable as it appears in the XPath expression.","pos":[13165,13235],"source":"\\n<p>The prefix of the variable as it appears in the XPath expression."},{"content":"&lt;/p&gt;\\n","pos":[13236,13242],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The name of the variable.","pos":[13305,13335],"source":"\\n<p>The name of the variable."},{"content":"&lt;/p&gt;\\n","pos":[13336,13342],"source":" </p>\\n"},{"pos":[13783,13797],"content":"System.Xml.Xsl","needQuote":true,"nodes":[{"content":"System.Xml.Xsl","pos":[0,14]}]},{"pos":[13952,13958],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14079,14085],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[14206,14215],"content":"NameTable","needQuote":true,"nodes":[{"content":"NameTable","pos":[0,9]}]},{"pos":[14378,14385],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[14533,14539],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[14683,14688],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[14858,14872],"content":"XPathNavigator","needQuote":true,"nodes":[{"content":"XPathNavigator","pos":[0,14]}]},{"pos":[15047,15063],"content":"System.Xml.XPath","needQuote":true,"nodes":[{"content":"System.Xml.XPath","pos":[0,16]}]},{"pos":[15208,15231],"content":"XPath.XPathResultType[]","needQuote":true,"nodes":[{"content":"XPath.XPathResultType[]","pos":[0,23]}]},{"pos":[15431,15452],"content":"XPath.XPathResultType","needQuote":true,"nodes":[{"content":"XPath.XPathResultType","pos":[0,21]}]},{"content":"[]","pos":[15532,15534]},{"pos":[15618,15639],"content":"XPath.XPathResultType","needQuote":true,"nodes":[{"content":"XPath.XPathResultType","pos":[0,21]}]},{"pos":[15718,15720],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[15917,15937],"content":"IXsltContextFunction","needQuote":true,"nodes":[{"content":"IXsltContextFunction","pos":[0,20]}]},{"pos":[16170,16190],"content":"IXsltContextVariable","needQuote":true,"nodes":[{"content":"IXsltContextVariable","pos":[0,20]}]}],"content":"items:\n- uid: System.Xml.Xsl.XsltContext\n  commentId: T:System.Xml.Xsl.XsltContext\n  id: XsltContext\n  parent: System.Xml.Xsl\n  children:\n  - System.Xml.Xsl.XsltContext.#ctor\n  - System.Xml.Xsl.XsltContext.#ctor(System.Xml.NameTable)\n  - System.Xml.Xsl.XsltContext.CompareDocument(System.String,System.String)\n  - System.Xml.Xsl.XsltContext.PreserveWhitespace(System.Xml.XPath.XPathNavigator)\n  - System.Xml.Xsl.XsltContext.ResolveFunction(System.String,System.String,System.Xml.XPath.XPathResultType[])\n  - System.Xml.Xsl.XsltContext.ResolveVariable(System.String,System.String)\n  - System.Xml.Xsl.XsltContext.Whitespace\n  langs:\n  - csharp\n  - vb\n  name: XsltContext\n  fullName: System.Xml.Xsl.XsltContext\n  type: Class\n  source:\n    remote:\n      path: src/System.Xml.Xsl.Primitives/ref/System.Xml.Xsl.Primitives.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: XsltContext\n    path: src/System.Xml.Xsl.Primitives/ref/System.Xml.Xsl.Primitives.cs\n    startLine: 25\n  assemblies:\n  - System.Xml.Xsl.Primitives\n  namespace: System.Xml.Xsl\n  summary: \"\\n<p>Encapsulates the current execution context of the Extensible Stylesheet Language for Transformations (XSLT) processor allowing XML Path Language (XPath) to resolve functions, parameters, and namespaces within XPath expressions.</p>\\n\"\n  syntax:\n    content: 'public abstract class XsltContext : XmlNamespaceManager'\n    content.vb: >-\n      Public MustInherit Class XsltContext\n          Inherits XmlNamespaceManager\n  inheritance:\n  - System.Object\n  modifiers.csharp:\n  - public\n  - abstract\n  - class\n  modifiers.vb:\n  - Public\n  - MustInherit\n  - Class\n  nameWithType: XsltContext\n- uid: System.Xml.Xsl.XsltContext.#ctor\n  commentId: M:System.Xml.Xsl.XsltContext.#ctor\n  id: '#ctor'\n  parent: System.Xml.Xsl.XsltContext\n  langs:\n  - csharp\n  - vb\n  name: XsltContext()\n  fullName: System.Xml.Xsl.XsltContext.XsltContext()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Xml.Xsl.Primitives/ref/System.Xml.Xsl.Primitives.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Xml.Xsl.Primitives/ref/System.Xml.Xsl.Primitives.cs\n    startLine: 27\n  assemblies:\n  - System.Xml.Xsl.Primitives\n  namespace: System.Xml.Xsl\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Xml.Xsl.XsltContext\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: protected XsltContext()\n    content.vb: Protected Sub New\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: XsltContext.XsltContext()\n- uid: System.Xml.Xsl.XsltContext.#ctor(System.Xml.NameTable)\n  commentId: M:System.Xml.Xsl.XsltContext.#ctor(System.Xml.NameTable)\n  id: '#ctor(System.Xml.NameTable)'\n  parent: System.Xml.Xsl.XsltContext\n  langs:\n  - csharp\n  - vb\n  name: XsltContext(NameTable)\n  fullName: System.Xml.Xsl.XsltContext.XsltContext(System.Xml.NameTable)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Xml.Xsl.Primitives/ref/System.Xml.Xsl.Primitives.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Xml.Xsl.Primitives/ref/System.Xml.Xsl.Primitives.cs\n    startLine: 28\n  assemblies:\n  - System.Xml.Xsl.Primitives\n  namespace: System.Xml.Xsl\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Xml.Xsl.XsltContext\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified <xref href=\\\"System.Xml.NameTable\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: protected XsltContext(NameTable table)\n    content.vb: Protected Sub New(table As NameTable)\n    parameters:\n    - id: table\n      type: System.Xml.NameTable\n      description: \"\\n<p>The <xref href=\\\"System.Xml.NameTable\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to use. </p>\\n\"\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: XsltContext.XsltContext(NameTable)\n- uid: System.Xml.Xsl.XsltContext.Whitespace\n  commentId: P:System.Xml.Xsl.XsltContext.Whitespace\n  id: Whitespace\n  parent: System.Xml.Xsl.XsltContext\n  langs:\n  - csharp\n  - vb\n  name: Whitespace\n  fullName: System.Xml.Xsl.XsltContext.Whitespace\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.Xsl.Primitives/ref/System.Xml.Xsl.Primitives.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Whitespace\n    path: src/System.Xml.Xsl.Primitives/ref/System.Xml.Xsl.Primitives.cs\n    startLine: 29\n  assemblies:\n  - System.Xml.Xsl.Primitives\n  namespace: System.Xml.Xsl\n  summary: \"\\n<p>When overridden in a derived class, gets a value indicating whether to include white space nodes in the output.</p>\\n\"\n  syntax:\n    content: public abstract bool Whitespace { get; }\n    content.vb: Public MustOverride ReadOnly Property Whitespace As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to check white space nodes in the source document for inclusion in the output; <strong>false</strong> to not evaluate white space nodes. The default is <strong>true</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: XsltContext.Whitespace\n- uid: System.Xml.Xsl.XsltContext.CompareDocument(System.String,System.String)\n  commentId: M:System.Xml.Xsl.XsltContext.CompareDocument(System.String,System.String)\n  id: CompareDocument(System.String,System.String)\n  parent: System.Xml.Xsl.XsltContext\n  langs:\n  - csharp\n  - vb\n  name: CompareDocument(String, String)\n  fullName: System.Xml.Xsl.XsltContext.CompareDocument(System.String, System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.Xsl.Primitives/ref/System.Xml.Xsl.Primitives.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CompareDocument\n    path: src/System.Xml.Xsl.Primitives/ref/System.Xml.Xsl.Primitives.cs\n    startLine: 30\n  assemblies:\n  - System.Xml.Xsl.Primitives\n  namespace: System.Xml.Xsl\n  summary: \"\\n<p>When overridden in a derived class, compares the base Uniform Resource Identifiers (URIs) of two documents based upon the order the documents were loaded by the XSLT processor (that is, the <xref href=\\\"System.Xml.Xsl.XslTransform\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class).</p>\\n\"\n  syntax:\n    content: public abstract int CompareDocument(string baseUri, string nextbaseUri)\n    content.vb: Public MustOverride Function CompareDocument(baseUri As String, nextbaseUri As String) As Integer\n    parameters:\n    - id: baseUri\n      type: System.String\n      description: \"\\n<p>The base URI of the first document to compare. </p>\\n\"\n    - id: nextbaseUri\n      type: System.String\n      description: \"\\n<p>The base URI of the second document to compare. </p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>An integer value describing the relative order of the two base URIs: <strong>-</strong>1 if <em>baseUri</em> occurs before <em>nextbaseUri</em>; 0 if the two base URIs are identical; and 1 if <em>baseUri</em> occurs after <em>nextbaseUri</em>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: XsltContext.CompareDocument(String, String)\n- uid: System.Xml.Xsl.XsltContext.PreserveWhitespace(System.Xml.XPath.XPathNavigator)\n  commentId: M:System.Xml.Xsl.XsltContext.PreserveWhitespace(System.Xml.XPath.XPathNavigator)\n  id: PreserveWhitespace(System.Xml.XPath.XPathNavigator)\n  parent: System.Xml.Xsl.XsltContext\n  langs:\n  - csharp\n  - vb\n  name: PreserveWhitespace(XPath.XPathNavigator)\n  fullName: System.Xml.Xsl.XsltContext.PreserveWhitespace(System.Xml.XPath.XPathNavigator)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.Xsl.Primitives/ref/System.Xml.Xsl.Primitives.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: PreserveWhitespace\n    path: src/System.Xml.Xsl.Primitives/ref/System.Xml.Xsl.Primitives.cs\n    startLine: 31\n  assemblies:\n  - System.Xml.Xsl.Primitives\n  namespace: System.Xml.Xsl\n  summary: \"\\n<p>When overridden in a derived class, evaluates whether to preserve white space nodes or strip them for the given context.</p>\\n\"\n  syntax:\n    content: public abstract bool PreserveWhitespace(XPath.XPathNavigator node)\n    content.vb: Public MustOverride Function PreserveWhitespace(node As XPath.XPathNavigator) As Boolean\n    parameters:\n    - id: node\n      type: System.Xml.XPath.XPathNavigator\n      description: \"\\n<p>The white space node that is to be preserved or stripped in the current context. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>Returns <strong>true</strong> if the white space is to be preserved or <strong>false</strong> if the white space is to be stripped.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: XsltContext.PreserveWhitespace(XPath.XPathNavigator)\n- uid: System.Xml.Xsl.XsltContext.ResolveFunction(System.String,System.String,System.Xml.XPath.XPathResultType[])\n  commentId: M:System.Xml.Xsl.XsltContext.ResolveFunction(System.String,System.String,System.Xml.XPath.XPathResultType[])\n  id: ResolveFunction(System.String,System.String,System.Xml.XPath.XPathResultType[])\n  parent: System.Xml.Xsl.XsltContext\n  langs:\n  - csharp\n  - vb\n  name: ResolveFunction(String, String, XPath.XPathResultType[])\n  fullName: System.Xml.Xsl.XsltContext.ResolveFunction(System.String, System.String, System.Xml.XPath.XPathResultType[])\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.Xsl.Primitives/ref/System.Xml.Xsl.Primitives.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ResolveFunction\n    path: src/System.Xml.Xsl.Primitives/ref/System.Xml.Xsl.Primitives.cs\n    startLine: 32\n  assemblies:\n  - System.Xml.Xsl.Primitives\n  namespace: System.Xml.Xsl\n  summary: \"\\n<p>When overridden in a derived class, resolves a function reference and returns an <xref href=\\\"System.Xml.Xsl.IXsltContextFunction\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> representing the function. The <xref href=\\\"System.Xml.Xsl.IXsltContextFunction\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is used at execution time to get the return value of the function.</p>\\n\"\n  syntax:\n    content: public abstract IXsltContextFunction ResolveFunction(string prefix, string name, XPath.XPathResultType[] ArgTypes)\n    content.vb: Public MustOverride Function ResolveFunction(prefix As String, name As String, ArgTypes As XPath.XPathResultType()) As IXsltContextFunction\n    parameters:\n    - id: prefix\n      type: System.String\n      description: \"\\n<p>The prefix of the function as it appears in the XPath expression. </p>\\n\"\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the function. </p>\\n\"\n    - id: ArgTypes\n      type: System.Xml.XPath.XPathResultType[]\n      description: \"\\n<p>An array of argument types for the function being resolved. This allows you to select between methods with the same name (for example, overloaded methods). </p>\\n\"\n    return:\n      type: System.Xml.Xsl.IXsltContextFunction\n      description: \"\\n<p>An <xref href=\\\"System.Xml.Xsl.IXsltContextFunction\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> representing the function.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  modifiers.vb:\n  - Public\n  - MustOverride\n  fullName.vb: System.Xml.Xsl.XsltContext.ResolveFunction(System.String, System.String, System.Xml.XPath.XPathResultType())\n  name.vb: ResolveFunction(String, String, XPath.XPathResultType())\n  nameWithType: XsltContext.ResolveFunction(String, String, XPath.XPathResultType[])\n  nameWithType.vb: XsltContext.ResolveFunction(String, String, XPath.XPathResultType())\n- uid: System.Xml.Xsl.XsltContext.ResolveVariable(System.String,System.String)\n  commentId: M:System.Xml.Xsl.XsltContext.ResolveVariable(System.String,System.String)\n  id: ResolveVariable(System.String,System.String)\n  parent: System.Xml.Xsl.XsltContext\n  langs:\n  - csharp\n  - vb\n  name: ResolveVariable(String, String)\n  fullName: System.Xml.Xsl.XsltContext.ResolveVariable(System.String, System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.Xsl.Primitives/ref/System.Xml.Xsl.Primitives.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ResolveVariable\n    path: src/System.Xml.Xsl.Primitives/ref/System.Xml.Xsl.Primitives.cs\n    startLine: 33\n  assemblies:\n  - System.Xml.Xsl.Primitives\n  namespace: System.Xml.Xsl\n  summary: \"\\n<p>When overridden in a derived class, resolves a variable reference and returns an <xref href=\\\"System.Xml.Xsl.IXsltContextVariable\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> representing the variable.</p>\\n\"\n  syntax:\n    content: public abstract IXsltContextVariable ResolveVariable(string prefix, string name)\n    content.vb: Public MustOverride Function ResolveVariable(prefix As String, name As String) As IXsltContextVariable\n    parameters:\n    - id: prefix\n      type: System.String\n      description: \"\\n<p>The prefix of the variable as it appears in the XPath expression. </p>\\n\"\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the variable. </p>\\n\"\n    return:\n      type: System.Xml.Xsl.IXsltContextVariable\n      description: \"\\n<p>An <xref href=\\\"System.Xml.Xsl.IXsltContextVariable\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> representing the variable at runtime.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: XsltContext.ResolveVariable(String, String)\nreferences:\n- uid: System.Xml.Xsl\n  isExternal: false\n  name: System.Xml.Xsl\n  fullName: System.Xml.Xsl\n  commentId: N:System.Xml.Xsl\n  nameWithType: System.Xml.Xsl\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Xml.NameTable\n  isExternal: false\n  name: NameTable\n  fullName: System.Xml.NameTable\n  commentId: T:System.Xml.NameTable\n  nameWithType: NameTable\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  commentId: T:System.Int32\n  nameWithType: Int32\n- uid: System.Xml.XPath.XPathNavigator\n  parent: System.Xml.XPath\n  isExternal: false\n  name: XPathNavigator\n  fullName: System.Xml.XPath.XPathNavigator\n  commentId: T:System.Xml.XPath.XPathNavigator\n  nameWithType: XPathNavigator\n- uid: System.Xml.XPath\n  isExternal: false\n  name: System.Xml.XPath\n  fullName: System.Xml.XPath\n  commentId: N:System.Xml.XPath\n  nameWithType: System.Xml.XPath\n- uid: System.Xml.XPath.XPathResultType[]\n  name: XPath.XPathResultType[]\n  fullName: System.Xml.XPath.XPathResultType[]\n  fullname.vb: System.Xml.XPath.XPathResultType()\n  name.vb: XPath.XPathResultType()\n  spec.csharp:\n  - uid: System.Xml.XPath.XPathResultType\n    name: XPath.XPathResultType\n    fullName: System.Xml.XPath.XPathResultType\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Xml.XPath.XPathResultType\n    name: XPath.XPathResultType\n    fullName: System.Xml.XPath.XPathResultType\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: XPath.XPathResultType[]\n  nameWithType.vb: XPath.XPathResultType()\n- uid: System.Xml.Xsl.IXsltContextFunction\n  parent: System.Xml.Xsl\n  isExternal: false\n  name: IXsltContextFunction\n  fullName: System.Xml.Xsl.IXsltContextFunction\n  commentId: T:System.Xml.Xsl.IXsltContextFunction\n  nameWithType: IXsltContextFunction\n- uid: System.Xml.Xsl.IXsltContextVariable\n  parent: System.Xml.Xsl\n  isExternal: false\n  name: IXsltContextVariable\n  fullName: System.Xml.Xsl.IXsltContextVariable\n  commentId: T:System.Xml.Xsl.IXsltContextVariable\n  nameWithType: IXsltContextVariable\n"}