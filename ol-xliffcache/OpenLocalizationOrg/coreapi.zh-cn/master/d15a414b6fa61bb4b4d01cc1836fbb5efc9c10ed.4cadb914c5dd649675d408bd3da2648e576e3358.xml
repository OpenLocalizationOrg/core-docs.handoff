{"nodes":[{"pos":[472,490],"content":"HttpMessageHandler","needQuote":true,"nodes":[{"content":"HttpMessageHandler","pos":[0,18]}]},{"pos":[1810,1830],"content":"HttpMessageHandler()","needQuote":true,"nodes":[{"content":"HttpMessageHandler()","pos":[0,20]}]},{"pos":[2785,2794],"content":"Dispose()","needQuote":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[3846,3862],"content":"Dispose(Boolean)","needQuote":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to release both managed and unmanaged resources; &lt;strong&gt;false&lt;/strong&gt; to releases only unmanaged resources.&lt;/p&gt;\\n","pos":[4686,4830],"source":"\\n<p>\\n<strong>true</strong> to release both managed and unmanaged resources; <strong>false</strong> to releases only unmanaged resources.</p>\\n"},{"pos":[5397,5445],"content":"SendAsync(HttpRequestMessage, CancellationToken)","needQuote":true,"nodes":[{"content":"SendAsync(HttpRequestMessage, CancellationToken)","pos":[0,48]}]},{"content":"\\n&lt;p&gt;The HTTP request message to send.&lt;/p&gt;\\n","pos":[6370,6414],"source":"\\n<p>The HTTP request message to send.</p>\\n"},{"content":"\\n&lt;p&gt;The cancellation token to cancel operation.&lt;/p&gt;\\n","pos":[6511,6565],"source":"\\n<p>The cancellation token to cancel operation.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;request&lt;/em&gt; was &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[6969,7027],"source":"\\n<p>The <em>request</em> was <strong>null</strong>.</p>\\n"},{"pos":[7270,7285],"content":"System.Net.Http","needQuote":true,"nodes":[{"content":"System.Net.Http","pos":[0,15]}]},{"pos":[7443,7449],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7599,7610],"content":"IDisposable","needQuote":true,"nodes":[{"content":"IDisposable","pos":[0,11]}]},{"pos":[7785,7795],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[7890,7898],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[7967,7968],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7995,7996],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8066,8074],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[8143,8144],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8171,8172],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8355,8369],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[8488,8494],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[8561,8562],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8612,8618],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8678,8679],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8762,8768],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[8835,8836],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8886,8892],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8952,8953],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9167,9189],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[9337,9343],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[9410,9411],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9461,9467],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[9528,9529]},{"pos":[9584,9590],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9650,9651],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9748,9754],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[9821,9822],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9872,9878],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[9939,9940]},{"pos":[9995,10001],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10061,10062],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10307,10338],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[10504,10519],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[10595,10596],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10646,10652],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[10713,10714]},{"pos":[10769,10775],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10835,10836],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10942,10957],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[11033,11034],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11084,11090],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[11151,11152]},{"pos":[11207,11213],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11273,11274],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11504,11517],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[11618,11629],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[11701,11702],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11729,11730],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11803,11814],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[11886,11887],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11914,11915],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12090,12099],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[12192,12199],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[12267,12268],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12295,12296],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12365,12372],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[12440,12441],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12468,12469],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12644,12661],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[12770,12785],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[12861,12862],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12889,12890],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12967,12982],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[13058,13059],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13086,13087],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13232,13238],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[13394,13403],"content":"Dispose()","needQuote":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[13506,13513],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[13565,13566],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13593,13594],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13668,13675],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[13727,13728],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13755,13756],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13920,13927],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[14105,14123],"content":"HttpRequestMessage","needQuote":true,"nodes":[{"content":"HttpRequestMessage","pos":[0,18]}]},{"pos":[14353,14370],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[14659,14684],"content":"Task<HttpResponseMessage>","needQuote":true,"nodes":[{"content":"Task&lt;HttpResponseMessage&gt;","pos":[0,25],"source":"Task<HttpResponseMessage>"}]},{"pos":[14949,14953],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[15027,15028],"content":"<","needQuote":true,"nodes":[]},{"pos":[15100,15119],"content":"HttpResponseMessage","needQuote":true,"nodes":[{"content":"HttpResponseMessage","pos":[0,19]}]},{"pos":[15262,15266],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"content":"(Of","pos":[15341,15344]},{"pos":[15423,15442],"content":"HttpResponseMessage","needQuote":true,"nodes":[{"content":"HttpResponseMessage","pos":[0,19]}]},{"pos":[15503,15504],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15743,15759],"content":"System.Threading","needQuote":true,"nodes":[{"content":"System.Threading","pos":[0,16]}]},{"pos":[15919,15932],"content":"Task<TResult>","needQuote":true,"nodes":[{"content":"Task&lt;TResult&gt;","pos":[0,13],"source":"Task<TResult>"}]},{"pos":[16129,16133],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[16186,16187],"content":"<","needQuote":true,"nodes":[]},{"pos":[16214,16221],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[16336,16340],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"content":"(Of","pos":[16394,16397]},{"pos":[16431,16438],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[16471,16472],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16658,16680],"content":"System.Threading.Tasks","needQuote":true,"nodes":[{"content":"System.Threading.Tasks","pos":[0,22]}]},{"pos":[16857,16878],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]}],"content":"items:\n- uid: System.Net.Http.HttpMessageHandler\n  commentId: T:System.Net.Http.HttpMessageHandler\n  id: HttpMessageHandler\n  parent: System.Net.Http\n  children:\n  - System.Net.Http.HttpMessageHandler.#ctor\n  - System.Net.Http.HttpMessageHandler.Dispose\n  - System.Net.Http.HttpMessageHandler.Dispose(System.Boolean)\n  - System.Net.Http.HttpMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)\n  langs:\n  - csharp\n  - vb\n  name: HttpMessageHandler\n  fullName: System.Net.Http.HttpMessageHandler\n  type: Class\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: HttpMessageHandler\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 128\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>A base type for HTTP message handlers.</p>\\n\"\n  syntax:\n    content: 'public abstract class HttpMessageHandler : IDisposable'\n    content.vb: >-\n      Public MustInherit Class HttpMessageHandler\n          Implements IDisposable\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - abstract\n  - class\n  modifiers.vb:\n  - Public\n  - MustInherit\n  - Class\n  nameWithType: HttpMessageHandler\n- uid: System.Net.Http.HttpMessageHandler.#ctor\n  commentId: M:System.Net.Http.HttpMessageHandler.#ctor\n  id: '#ctor'\n  parent: System.Net.Http.HttpMessageHandler\n  langs:\n  - csharp\n  - vb\n  name: HttpMessageHandler()\n  fullName: System.Net.Http.HttpMessageHandler.HttpMessageHandler()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 130\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Net.Http.HttpMessageHandler\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: protected HttpMessageHandler()\n    content.vb: Protected Sub New\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: HttpMessageHandler.HttpMessageHandler()\n- uid: System.Net.Http.HttpMessageHandler.Dispose\n  commentId: M:System.Net.Http.HttpMessageHandler.Dispose\n  id: Dispose\n  parent: System.Net.Http.HttpMessageHandler\n  langs:\n  - csharp\n  - vb\n  name: Dispose()\n  fullName: System.Net.Http.HttpMessageHandler.Dispose()\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Dispose\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 131\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>Releases the unmanaged resources and disposes of the managed resources used by the <xref href=\\\"System.Net.Http.HttpMessageHandler\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public void Dispose()\n    content.vb: Public Sub Dispose\n  implements:\n  - System.IDisposable.Dispose\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: HttpMessageHandler.Dispose()\n- uid: System.Net.Http.HttpMessageHandler.Dispose(System.Boolean)\n  commentId: M:System.Net.Http.HttpMessageHandler.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Net.Http.HttpMessageHandler\n  langs:\n  - csharp\n  - vb\n  name: Dispose(Boolean)\n  fullName: System.Net.Http.HttpMessageHandler.Dispose(System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Dispose\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 132\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>Releases the unmanaged resources used by the <xref href=\\\"System.Net.Http.HttpMessageHandler\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and optionally disposes of the managed resources.</p>\\n\"\n  syntax:\n    content: protected virtual void Dispose(bool disposing)\n    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to release both managed and unmanaged resources; <strong>false</strong> to releases only unmanaged resources.</p>\\n\"\n  modifiers.csharp:\n  - protected\n  - virtual\n  modifiers.vb:\n  - Protected\n  - Overridable\n  nameWithType: HttpMessageHandler.Dispose(Boolean)\n- uid: System.Net.Http.HttpMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)\n  commentId: M:System.Net.Http.HttpMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)\n  id: SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)\n  parent: System.Net.Http.HttpMessageHandler\n  langs:\n  - csharp\n  - vb\n  name: SendAsync(HttpRequestMessage, CancellationToken)\n  fullName: System.Net.Http.HttpMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage, System.Threading.CancellationToken)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SendAsync\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 133\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>Send an HTTP request as an asynchronous operation.</p>\\n\"\n  syntax:\n    content: protected abstract Task<HttpResponseMessage> SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\n    content.vb: Protected MustOverride Function SendAsync(request As HttpRequestMessage, cancellationToken As CancellationToken) As Task(Of HttpResponseMessage)\n    parameters:\n    - id: request\n      type: System.Net.Http.HttpRequestMessage\n      description: \"\\n<p>The HTTP request message to send.</p>\\n\"\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: \"\\n<p>The cancellation token to cancel operation.</p>\\n\"\n    return:\n      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}\n      description: \"\\n<p>Returns <xref href=\\\"System.Threading.Tasks.Task`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>The task object representing the asynchronous operation.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>request</em> was <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - protected\n  - abstract\n  modifiers.vb:\n  - Protected\n  - MustOverride\n  nameWithType: HttpMessageHandler.SendAsync(HttpRequestMessage, CancellationToken)\nreferences:\n- uid: System.Net.Http\n  isExternal: false\n  name: System.Net.Http\n  fullName: System.Net.Http\n  commentId: N:System.Net.Http\n  nameWithType: System.Net.Http\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  fullName: System.IDisposable\n  commentId: T:System.IDisposable\n  nameWithType: IDisposable\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.IDisposable.Dispose\n  parent: System.IDisposable\n  isExternal: false\n  name: Dispose()\n  fullName: System.IDisposable.Dispose()\n  spec.csharp:\n  - uid: System.IDisposable.Dispose\n    name: Dispose\n    fullName: System.IDisposable.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IDisposable.Dispose\n    name: Dispose\n    fullName: System.IDisposable.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.IDisposable.Dispose\n  nameWithType: IDisposable.Dispose()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.Net.Http.HttpRequestMessage\n  parent: System.Net.Http\n  isExternal: false\n  name: HttpRequestMessage\n  fullName: System.Net.Http.HttpRequestMessage\n  commentId: T:System.Net.Http.HttpRequestMessage\n  nameWithType: HttpRequestMessage\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  fullName: System.Threading.CancellationToken\n  commentId: T:System.Threading.CancellationToken\n  nameWithType: CancellationToken\n- uid: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}\n  parent: System.Threading.Tasks\n  definition: System.Threading.Tasks.Task`1\n  name: Task<HttpResponseMessage>\n  fullName: System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage>\n  fullname.vb: System.Threading.Tasks.Task(Of System.Net.Http.HttpResponseMessage)\n  name.vb: Task(Of HttpResponseMessage)\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.Http.HttpResponseMessage\n    name: HttpResponseMessage\n    fullName: System.Net.Http.HttpResponseMessage\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.Http.HttpResponseMessage\n    name: HttpResponseMessage\n    fullName: System.Net.Http.HttpResponseMessage\n  - name: )\n    fullName: )\n  commentId: T:System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}\n  nameWithType: Task<HttpResponseMessage>\n  nameWithType.vb: Task(Of HttpResponseMessage)\n- uid: System.Threading\n  isExternal: false\n  name: System.Threading\n  fullName: System.Threading\n  commentId: N:System.Threading\n  nameWithType: System.Threading\n- uid: System.Threading.Tasks.Task`1\n  isExternal: false\n  name: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n  fullname.vb: System.Threading.Tasks.Task(Of TResult)\n  name.vb: Task(Of TResult)\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n  - name: <\n    fullName: <\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  commentId: T:System.Threading.Tasks.Task`1\n  nameWithType: Task<TResult>\n  nameWithType.vb: Task(Of TResult)\n- uid: System.Threading.Tasks\n  isExternal: false\n  name: System.Threading.Tasks\n  fullName: System.Threading.Tasks\n  commentId: N:System.Threading.Tasks\n  nameWithType: System.Threading.Tasks\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n"}