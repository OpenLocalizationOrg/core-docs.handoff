{"nodes":[{"pos":[1201,1218],"content":"PackageProperties","needQuote":true,"nodes":[{"content":"PackageProperties","pos":[0,17]}]},{"pos":[2658,2677],"content":"PackageProperties()","needQuote":true,"nodes":[{"content":"PackageProperties()","pos":[0,19]}]},{"pos":[3671,3679],"content":"Category","needQuote":true,"nodes":[{"content":"Category","pos":[0,8]}]},{"pos":[5139,5152],"content":"ContentStatus","needQuote":true,"nodes":[{"content":"ContentStatus","pos":[0,13]}]},{"pos":[6488,6499],"content":"ContentType","needQuote":true,"nodes":[{"content":"ContentType","pos":[0,11]}]},{"pos":[7991,7998],"content":"Created","needQuote":true,"nodes":[{"content":"Created","pos":[0,7]}]},{"pos":[9574,9581],"content":"Creator","needQuote":true,"nodes":[{"content":"Creator","pos":[0,7]}]},{"pos":[11089,11100],"content":"Description","needQuote":true,"nodes":[{"content":"Description","pos":[0,11]}]},{"pos":[12447,12457],"content":"Identifier","needQuote":true,"nodes":[{"content":"Identifier","pos":[0,10]}]},{"pos":[13817,13825],"content":"Keywords","needQuote":true,"nodes":[{"content":"Keywords","pos":[0,8]}]},{"pos":[15239,15247],"content":"Language","needQuote":true,"nodes":[{"content":"Language","pos":[0,8]}]},{"pos":[16596,16610],"content":"LastModifiedBy","needQuote":true,"nodes":[{"content":"LastModifiedBy","pos":[0,14]}]},{"pos":[18236,18247],"content":"LastPrinted","needQuote":true,"nodes":[{"content":"LastPrinted","pos":[0,11]}]},{"pos":[19611,19619],"content":"Modified","needQuote":true,"nodes":[{"content":"Modified","pos":[0,8]}]},{"pos":[21215,21223],"content":"Revision","needQuote":true,"nodes":[{"content":"Revision","pos":[0,8]}]},{"pos":[22638,22645],"content":"Subject","needQuote":true,"nodes":[{"content":"Subject","pos":[0,7]}]},{"pos":[24041,24046],"content":"Title","needQuote":true,"nodes":[{"content":"Title","pos":[0,5]}]},{"pos":[25468,25475],"content":"Version","needQuote":true,"nodes":[{"content":"Version","pos":[0,7]}]},{"pos":[26885,26894],"content":"Dispose()","needQuote":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[27945,27961],"content":"Dispose(Boolean)","needQuote":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to release both managed and unmanaged resources; &lt;strong&gt;false&lt;/strong&gt; to release only unmanaged resources.","pos":[28822,28959],"source":"\\n<p>\\n<strong>true</strong> to release both managed and unmanaged resources; <strong>false</strong> to release only unmanaged resources."},{"content":"&lt;/p&gt;\\n","pos":[28960,28966],"source":" </p>\\n"},{"pos":[29178,29197],"content":"System.IO.Packaging","needQuote":true,"nodes":[{"content":"System.IO.Packaging","pos":[0,19]}]},{"pos":[29367,29373],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[29523,29534],"content":"IDisposable","needQuote":true,"nodes":[{"content":"IDisposable","pos":[0,11]}]},{"pos":[29709,29719],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[29814,29822],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[29891,29892],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29919,29920],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29990,29998],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[30067,30068],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30095,30096],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30279,30293],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[30412,30418],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[30485,30486],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30536,30542],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[30602,30603],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30686,30692],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[30759,30760],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30810,30816],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[30876,30877],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31091,31113],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[31261,31267],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[31334,31335],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31385,31391],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[31452,31453]},{"pos":[31508,31514],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[31574,31575],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31672,31678],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[31745,31746],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31796,31802],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[31863,31864]},{"pos":[31919,31925],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[31985,31986],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[32231,32262],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[32428,32443],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[32519,32520],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[32570,32576],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[32637,32638]},{"pos":[32693,32699],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[32759,32760],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[32866,32881],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[32957,32958],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[33008,33014],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[33075,33076]},{"pos":[33131,33137],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[33197,33198],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[33428,33441],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[33542,33553],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[33625,33626],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[33653,33654],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[33727,33738],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[33810,33811],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[33838,33839],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34014,34023],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[34116,34123],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[34191,34192],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[34219,34220],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34289,34296],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[34364,34365],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[34392,34393],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34568,34585],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[34694,34709],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[34785,34786],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[34813,34814],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34891,34906],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[34982,34983],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[35010,35011],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[35156,35162],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[35293,35299],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[35475,35493],"content":"Nullable<DateTime>","needQuote":true,"nodes":[{"content":"Nullable&lt;DateTime&gt;","pos":[0,18],"source":"Nullable<DateTime>"}]},{"pos":[35675,35683],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[35745,35746],"content":"<","needQuote":true,"nodes":[]},{"pos":[35798,35806],"content":"DateTime","needQuote":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[35938,35946],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[36009,36012]},{"pos":[36071,36079],"content":"DateTime","needQuote":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[36141,36142],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[36353,36364],"content":"Nullable<T>","needQuote":true,"nodes":[{"content":"Nullable&lt;T&gt;","pos":[0,11],"source":"Nullable<T>"}]},{"pos":[36511,36519],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[36560,36561],"content":"<","needQuote":true,"nodes":[]},{"pos":[36588,36589],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[36686,36694],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[36736,36739]},{"pos":[36773,36774],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[36801,36802],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[37005,37014],"content":"Dispose()","needQuote":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[37117,37124],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[37176,37177],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[37204,37205],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[37279,37286],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[37338,37339],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[37366,37367],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[37531,37538],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]}],"content":"items:\n- uid: System.IO.Packaging.PackageProperties\n  commentId: T:System.IO.Packaging.PackageProperties\n  id: PackageProperties\n  parent: System.IO.Packaging\n  children:\n  - System.IO.Packaging.PackageProperties.#ctor\n  - System.IO.Packaging.PackageProperties.Category\n  - System.IO.Packaging.PackageProperties.ContentStatus\n  - System.IO.Packaging.PackageProperties.ContentType\n  - System.IO.Packaging.PackageProperties.Created\n  - System.IO.Packaging.PackageProperties.Creator\n  - System.IO.Packaging.PackageProperties.Description\n  - System.IO.Packaging.PackageProperties.Dispose\n  - System.IO.Packaging.PackageProperties.Dispose(System.Boolean)\n  - System.IO.Packaging.PackageProperties.Identifier\n  - System.IO.Packaging.PackageProperties.Keywords\n  - System.IO.Packaging.PackageProperties.Language\n  - System.IO.Packaging.PackageProperties.LastModifiedBy\n  - System.IO.Packaging.PackageProperties.LastPrinted\n  - System.IO.Packaging.PackageProperties.Modified\n  - System.IO.Packaging.PackageProperties.Revision\n  - System.IO.Packaging.PackageProperties.Subject\n  - System.IO.Packaging.PackageProperties.Title\n  - System.IO.Packaging.PackageProperties.Version\n  langs:\n  - csharp\n  - vb\n  name: PackageProperties\n  fullName: System.IO.Packaging.PackageProperties\n  type: Class\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: PackageProperties\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 101\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>Represents the core properties of a <xref href=\\\"System.IO.Packaging.Package\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.  </p>\\n\"\n  syntax:\n    content: 'public abstract class PackageProperties : IDisposable'\n    content.vb: >-\n      Public MustInherit Class PackageProperties\n          Implements IDisposable\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - abstract\n  - class\n  modifiers.vb:\n  - Public\n  - MustInherit\n  - Class\n  nameWithType: PackageProperties\n- uid: System.IO.Packaging.PackageProperties.#ctor\n  commentId: M:System.IO.Packaging.PackageProperties.#ctor\n  id: '#ctor'\n  parent: System.IO.Packaging.PackageProperties\n  langs:\n  - csharp\n  - vb\n  name: PackageProperties()\n  fullName: System.IO.Packaging.PackageProperties.PackageProperties()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 103\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.IO.Packaging.PackageProperties\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class. </p>\\n\"\n  syntax:\n    content: protected PackageProperties()\n    content.vb: Protected Sub New\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: PackageProperties.PackageProperties()\n- uid: System.IO.Packaging.PackageProperties.Category\n  commentId: P:System.IO.Packaging.PackageProperties.Category\n  id: Category\n  parent: System.IO.Packaging.PackageProperties\n  langs:\n  - csharp\n  - vb\n  name: Category\n  fullName: System.IO.Packaging.PackageProperties.Category\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Category\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 104\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>When overridden in a derived class, gets or sets the category of the <xref href=\\\"System.IO.Packaging.Package\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public abstract string Category { get; set; }\n    content.vb: Public MustOverride Property Category As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The category of the content that is contained in the <xref href=\\\"System.IO.Packaging.Package\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  seealso:\n  - type: System.IO.Packaging.PackageProperties.ContentType\n    commentId: P:System.IO.Packaging.PackageProperties.ContentType\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: PackageProperties.Category\n- uid: System.IO.Packaging.PackageProperties.ContentStatus\n  commentId: P:System.IO.Packaging.PackageProperties.ContentStatus\n  id: ContentStatus\n  parent: System.IO.Packaging.PackageProperties\n  langs:\n  - csharp\n  - vb\n  name: ContentStatus\n  fullName: System.IO.Packaging.PackageProperties.ContentStatus\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ContentStatus\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 105\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>When overridden in a derived class, gets or sets a value that represents the status of the <xref href=\\\"System.IO.Packaging.Package\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public abstract string ContentStatus { get; set; }\n    content.vb: Public MustOverride Property ContentStatus As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The status of the <xref href=\\\"System.IO.Packaging.Package\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> content.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: PackageProperties.ContentStatus\n- uid: System.IO.Packaging.PackageProperties.ContentType\n  commentId: P:System.IO.Packaging.PackageProperties.ContentType\n  id: ContentType\n  parent: System.IO.Packaging.PackageProperties\n  langs:\n  - csharp\n  - vb\n  name: ContentType\n  fullName: System.IO.Packaging.PackageProperties.ContentType\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ContentType\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 106\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>When overridden in a derived class, gets or sets a value that represents the type of content that is contained in the <xref href=\\\"System.IO.Packaging.Package\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public abstract string ContentType { get; set; }\n    content.vb: Public MustOverride Property ContentType As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The type of content that is contained in the <xref href=\\\"System.IO.Packaging.Package\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  seealso:\n  - type: System.IO.Packaging.PackageProperties.Category\n    commentId: P:System.IO.Packaging.PackageProperties.Category\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: PackageProperties.ContentType\n- uid: System.IO.Packaging.PackageProperties.Created\n  commentId: P:System.IO.Packaging.PackageProperties.Created\n  id: Created\n  parent: System.IO.Packaging.PackageProperties\n  langs:\n  - csharp\n  - vb\n  name: Created\n  fullName: System.IO.Packaging.PackageProperties.Created\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Created\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 107\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>When overridden in a derived class, gets or sets the date and time the <xref href=\\\"System.IO.Packaging.Package\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> was created.</p>\\n\"\n  syntax:\n    content: public abstract DateTime? Created { get; set; }\n    content.vb: Public MustOverride Property Created As Date?\n    parameters: []\n    return:\n      type: System.Nullable{System.DateTime}\n      description: \"\\n<p>The date and time the <xref href=\\\"System.IO.Packaging.Package\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> was initially created.</p>\\n\"\n  seealso:\n  - type: System.IO.Packaging.PackageProperties.Creator\n    commentId: P:System.IO.Packaging.PackageProperties.Creator\n  - type: System.IO.Packaging.PackageProperties.Modified\n    commentId: P:System.IO.Packaging.PackageProperties.Modified\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: PackageProperties.Created\n- uid: System.IO.Packaging.PackageProperties.Creator\n  commentId: P:System.IO.Packaging.PackageProperties.Creator\n  id: Creator\n  parent: System.IO.Packaging.PackageProperties\n  langs:\n  - csharp\n  - vb\n  name: Creator\n  fullName: System.IO.Packaging.PackageProperties.Creator\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Creator\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 108\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>When overridden in a derived class, gets or sets a value that identifies the individual or entity that created the <xref href=\\\"System.IO.Packaging.Package\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and its content.</p>\\n\"\n  syntax:\n    content: public abstract string Creator { get; set; }\n    content.vb: Public MustOverride Property Creator As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The individual or entity that created the <xref href=\\\"System.IO.Packaging.Package\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and its content.</p>\\n\"\n  seealso:\n  - type: System.IO.Packaging.PackageProperties.Created\n    commentId: P:System.IO.Packaging.PackageProperties.Created\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: PackageProperties.Creator\n- uid: System.IO.Packaging.PackageProperties.Description\n  commentId: P:System.IO.Packaging.PackageProperties.Description\n  id: Description\n  parent: System.IO.Packaging.PackageProperties\n  langs:\n  - csharp\n  - vb\n  name: Description\n  fullName: System.IO.Packaging.PackageProperties.Description\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Description\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 109\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>When overridden in a derived class, gets or sets a description of the content contained in the <xref href=\\\"System.IO.Packaging.Package\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public abstract string Description { get; set; }\n    content.vb: Public MustOverride Property Description As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>A description of the content contained in the <xref href=\\\"System.IO.Packaging.Package\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: PackageProperties.Description\n- uid: System.IO.Packaging.PackageProperties.Identifier\n  commentId: P:System.IO.Packaging.PackageProperties.Identifier\n  id: Identifier\n  parent: System.IO.Packaging.PackageProperties\n  langs:\n  - csharp\n  - vb\n  name: Identifier\n  fullName: System.IO.Packaging.PackageProperties.Identifier\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Identifier\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 110\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>When overridden in a derived class, gets or sets a value that unambiguously identifies the <xref href=\\\"System.IO.Packaging.Package\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and its content.</p>\\n\"\n  syntax:\n    content: public abstract string Identifier { get; set; }\n    content.vb: Public MustOverride Property Identifier As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>A value that unambiguously identifies the <xref href=\\\"System.IO.Packaging.Package\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and its content.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: PackageProperties.Identifier\n- uid: System.IO.Packaging.PackageProperties.Keywords\n  commentId: P:System.IO.Packaging.PackageProperties.Keywords\n  id: Keywords\n  parent: System.IO.Packaging.PackageProperties\n  langs:\n  - csharp\n  - vb\n  name: Keywords\n  fullName: System.IO.Packaging.PackageProperties.Keywords\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Keywords\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 111\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>When overridden in a derived class, gets or sets a value that define a delimited set of keywords to support searching and indexing the <xref href=\\\"System.IO.Packaging.Package\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and its content.</p>\\n\"\n  syntax:\n    content: public abstract string Keywords { get; set; }\n    content.vb: Public MustOverride Property Keywords As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>A delimited set of keywords to support searching and indexing the <xref href=\\\"System.IO.Packaging.Package\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and content.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: PackageProperties.Keywords\n- uid: System.IO.Packaging.PackageProperties.Language\n  commentId: P:System.IO.Packaging.PackageProperties.Language\n  id: Language\n  parent: System.IO.Packaging.PackageProperties\n  langs:\n  - csharp\n  - vb\n  name: Language\n  fullName: System.IO.Packaging.PackageProperties.Language\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Language\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 112\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>When overridden in a derived class, gets or sets a value that identifies the language of the <xref href=\\\"System.IO.Packaging.Package\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> content.</p>\\n\"\n  syntax:\n    content: public abstract string Language { get; set; }\n    content.vb: Public MustOverride Property Language As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>A value that identifies the <xref href=\\\"System.IO.Packaging.Package\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> content language.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: PackageProperties.Language\n- uid: System.IO.Packaging.PackageProperties.LastModifiedBy\n  commentId: P:System.IO.Packaging.PackageProperties.LastModifiedBy\n  id: LastModifiedBy\n  parent: System.IO.Packaging.PackageProperties\n  langs:\n  - csharp\n  - vb\n  name: LastModifiedBy\n  fullName: System.IO.Packaging.PackageProperties.LastModifiedBy\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: LastModifiedBy\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 113\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>When overridden in a derived class, gets or sets a value that identifies the user who last modified the <xref href=\\\"System.IO.Packaging.Package\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> content.</p>\\n\"\n  syntax:\n    content: public abstract string LastModifiedBy { get; set; }\n    content.vb: Public MustOverride Property LastModifiedBy As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The user who last modified the <xref href=\\\"System.IO.Packaging.Package\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> content.</p>\\n\"\n  seealso:\n  - type: System.IO.Packaging.PackageProperties.Modified\n    commentId: P:System.IO.Packaging.PackageProperties.Modified\n  - type: System.IO.Packaging.PackageProperties.Creator\n    commentId: P:System.IO.Packaging.PackageProperties.Creator\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: PackageProperties.LastModifiedBy\n- uid: System.IO.Packaging.PackageProperties.LastPrinted\n  commentId: P:System.IO.Packaging.PackageProperties.LastPrinted\n  id: LastPrinted\n  parent: System.IO.Packaging.PackageProperties\n  langs:\n  - csharp\n  - vb\n  name: LastPrinted\n  fullName: System.IO.Packaging.PackageProperties.LastPrinted\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: LastPrinted\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 114\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>When overridden in a derived class, gets or sets the date and time the <xref href=\\\"System.IO.Packaging.Package\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> content was last printed.</p>\\n\"\n  syntax:\n    content: public abstract DateTime? LastPrinted { get; set; }\n    content.vb: Public MustOverride Property LastPrinted As Date?\n    parameters: []\n    return:\n      type: System.Nullable{System.DateTime}\n      description: \"\\n<p>The date and time the <xref href=\\\"System.IO.Packaging.Package\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> content was last printed.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: PackageProperties.LastPrinted\n- uid: System.IO.Packaging.PackageProperties.Modified\n  commentId: P:System.IO.Packaging.PackageProperties.Modified\n  id: Modified\n  parent: System.IO.Packaging.PackageProperties\n  langs:\n  - csharp\n  - vb\n  name: Modified\n  fullName: System.IO.Packaging.PackageProperties.Modified\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Modified\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 115\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>When overridden in a derived class, gets or sets the date and time the <xref href=\\\"System.IO.Packaging.Package\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> was last changed.</p>\\n\"\n  syntax:\n    content: public abstract DateTime? Modified { get; set; }\n    content.vb: Public MustOverride Property Modified As Date?\n    parameters: []\n    return:\n      type: System.Nullable{System.DateTime}\n      description: \"\\n<p>The date and time the <xref href=\\\"System.IO.Packaging.Package\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> was last changed.</p>\\n\"\n  seealso:\n  - type: System.IO.Packaging.PackageProperties.LastModifiedBy\n    commentId: P:System.IO.Packaging.PackageProperties.LastModifiedBy\n  - type: System.IO.Packaging.PackageProperties.Created\n    commentId: P:System.IO.Packaging.PackageProperties.Created\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: PackageProperties.Modified\n- uid: System.IO.Packaging.PackageProperties.Revision\n  commentId: P:System.IO.Packaging.PackageProperties.Revision\n  id: Revision\n  parent: System.IO.Packaging.PackageProperties\n  langs:\n  - csharp\n  - vb\n  name: Revision\n  fullName: System.IO.Packaging.PackageProperties.Revision\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Revision\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 116\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>When overridden in a derived class, gets or sets the revision number of the <xref href=\\\"System.IO.Packaging.Package\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public abstract string Revision { get; set; }\n    content.vb: Public MustOverride Property Revision As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The revision number of the <xref href=\\\"System.IO.Packaging.Package\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  seealso:\n  - type: System.IO.Packaging.PackageProperties.Version\n    commentId: P:System.IO.Packaging.PackageProperties.Version\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: PackageProperties.Revision\n- uid: System.IO.Packaging.PackageProperties.Subject\n  commentId: P:System.IO.Packaging.PackageProperties.Subject\n  id: Subject\n  parent: System.IO.Packaging.PackageProperties\n  langs:\n  - csharp\n  - vb\n  name: Subject\n  fullName: System.IO.Packaging.PackageProperties.Subject\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Subject\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 117\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>When overridden in a derived class, gets or sets the topic of the <xref href=\\\"System.IO.Packaging.Package\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> content.</p>\\n\"\n  syntax:\n    content: public abstract string Subject { get; set; }\n    content.vb: Public MustOverride Property Subject As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The topic of the <xref href=\\\"System.IO.Packaging.Package\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> content.</p>\\n\"\n  seealso:\n  - type: System.IO.Packaging.PackageProperties.Title\n    commentId: P:System.IO.Packaging.PackageProperties.Title\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: PackageProperties.Subject\n- uid: System.IO.Packaging.PackageProperties.Title\n  commentId: P:System.IO.Packaging.PackageProperties.Title\n  id: Title\n  parent: System.IO.Packaging.PackageProperties\n  langs:\n  - csharp\n  - vb\n  name: Title\n  fullName: System.IO.Packaging.PackageProperties.Title\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Title\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 118\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>When overridden in a derived class, gets or sets the name given to the <xref href=\\\"System.IO.Packaging.Package\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and its content.</p>\\n\"\n  syntax:\n    content: public abstract string Title { get; set; }\n    content.vb: Public MustOverride Property Title As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The name given to the <xref href=\\\"System.IO.Packaging.Package\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and its content.</p>\\n\"\n  seealso:\n  - type: System.IO.Packaging.PackageProperties.Subject\n    commentId: P:System.IO.Packaging.PackageProperties.Subject\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: PackageProperties.Title\n- uid: System.IO.Packaging.PackageProperties.Version\n  commentId: P:System.IO.Packaging.PackageProperties.Version\n  id: Version\n  parent: System.IO.Packaging.PackageProperties\n  langs:\n  - csharp\n  - vb\n  name: Version\n  fullName: System.IO.Packaging.PackageProperties.Version\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Version\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 119\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>When overridden in a derived class, gets or sets the version number of the <xref href=\\\"System.IO.Packaging.Package\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public abstract string Version { get; set; }\n    content.vb: Public MustOverride Property Version As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The version number of the <xref href=\\\"System.IO.Packaging.Package\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  seealso:\n  - type: System.IO.Packaging.PackageProperties.Revision\n    commentId: P:System.IO.Packaging.PackageProperties.Revision\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: PackageProperties.Version\n- uid: System.IO.Packaging.PackageProperties.Dispose\n  commentId: M:System.IO.Packaging.PackageProperties.Dispose\n  id: Dispose\n  parent: System.IO.Packaging.PackageProperties\n  langs:\n  - csharp\n  - vb\n  name: Dispose()\n  fullName: System.IO.Packaging.PackageProperties.Dispose()\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Dispose\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 120\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>Releases all resources used by the <xref href=\\\"System.IO.Packaging.PackageProperties\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n  syntax:\n    content: public void Dispose()\n    content.vb: Public Sub Dispose\n  implements:\n  - System.IDisposable.Dispose\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: PackageProperties.Dispose()\n- uid: System.IO.Packaging.PackageProperties.Dispose(System.Boolean)\n  commentId: M:System.IO.Packaging.PackageProperties.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.IO.Packaging.PackageProperties\n  langs:\n  - csharp\n  - vb\n  name: Dispose(Boolean)\n  fullName: System.IO.Packaging.PackageProperties.Dispose(System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Dispose\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 121\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>Releases the unmanaged resources used by the <xref href=\\\"System.IO.Packaging.PackageProperties\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance and optionally releases the managed resources. </p>\\n\"\n  syntax:\n    content: protected virtual void Dispose(bool disposing)\n    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to release both managed and unmanaged resources; <strong>false</strong> to release only unmanaged resources. </p>\\n\"\n  modifiers.csharp:\n  - protected\n  - virtual\n  modifiers.vb:\n  - Protected\n  - Overridable\n  nameWithType: PackageProperties.Dispose(Boolean)\nreferences:\n- uid: System.IO.Packaging\n  isExternal: false\n  name: System.IO.Packaging\n  fullName: System.IO.Packaging\n  commentId: N:System.IO.Packaging\n  nameWithType: System.IO.Packaging\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  fullName: System.IDisposable\n  commentId: T:System.IDisposable\n  nameWithType: IDisposable\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.Nullable{System.DateTime}\n  parent: System\n  definition: System.Nullable`1\n  name: Nullable<DateTime>\n  fullName: System.Nullable<System.DateTime>\n  fullname.vb: System.Nullable(Of System.DateTime)\n  name.vb: Nullable(Of DateTime)\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.DateTime\n    name: DateTime\n    fullName: System.DateTime\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.DateTime\n    name: DateTime\n    fullName: System.DateTime\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: T:System.Nullable{System.DateTime}\n  nameWithType: Nullable<DateTime>\n  nameWithType.vb: Nullable(Of DateTime)\n- uid: System.Nullable`1\n  parent: System\n  isExternal: false\n  name: Nullable<T>\n  fullName: System.Nullable<T>\n  fullname.vb: System.Nullable(Of T)\n  name.vb: Nullable(Of T)\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  commentId: T:System.Nullable`1\n  nameWithType: Nullable<T>\n  nameWithType.vb: Nullable(Of T)\n- uid: System.IDisposable.Dispose\n  parent: System.IDisposable\n  isExternal: false\n  name: Dispose()\n  fullName: System.IDisposable.Dispose()\n  spec.csharp:\n  - uid: System.IDisposable.Dispose\n    name: Dispose\n    fullName: System.IDisposable.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IDisposable.Dispose\n    name: Dispose\n    fullName: System.IDisposable.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.IDisposable.Dispose\n  nameWithType: IDisposable.Dispose()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n"}