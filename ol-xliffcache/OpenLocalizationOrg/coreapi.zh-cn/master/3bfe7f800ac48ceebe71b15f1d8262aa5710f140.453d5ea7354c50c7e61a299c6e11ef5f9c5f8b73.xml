{"nodes":[{"pos":[601,614],"content":"StreamContent","needQuote":true,"nodes":[{"content":"StreamContent","pos":[0,13]}]},{"pos":[2479,2500],"content":"StreamContent(Stream)","needQuote":true,"nodes":[{"content":"StreamContent(Stream)","pos":[0,21]}]},{"pos":[3759,3787],"content":"StreamContent(Stream, Int32)","needQuote":true,"nodes":[{"content":"StreamContent(Stream, Int32)","pos":[0,28]}]},{"content":"\\n&lt;p&gt;The &lt;em&gt;content&lt;/em&gt; was &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[5041,5099],"source":"\\n<p>The <em>content</em> was <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;bufferSize&lt;/em&gt; was less than or equal to zero.","pos":[5216,5276],"source":"\\n<p>The <em>bufferSize</em> was less than or equal to zero."},{"content":"&lt;/p&gt;\\n","pos":[5277,5283],"source":" </p>\\n"},{"pos":[5652,5682],"content":"CreateContentReadStreamAsync()","needQuote":true,"nodes":[{"content":"CreateContentReadStreamAsync()","pos":[0,30]}]},{"pos":[7096,7112],"content":"Dispose(Boolean)","needQuote":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to release both managed and unmanaged resources; &lt;strong&gt;false&lt;/strong&gt; to releases only unmanaged resources.&lt;/p&gt;\\n","pos":[7925,8069],"source":"\\n<p>\\n<strong>true</strong> to release both managed and unmanaged resources; <strong>false</strong> to releases only unmanaged resources.</p>\\n"},{"pos":[8645,8693],"content":"SerializeToStreamAsync(Stream, TransportContext)","needQuote":true,"nodes":[{"content":"SerializeToStreamAsync(Stream, TransportContext)","pos":[0,48]}]},{"content":"\\n&lt;p&gt;The target stream.&lt;/p&gt;\\n","pos":[9543,9572],"source":"\\n<p>The target stream.</p>\\n"},{"content":"\\n&lt;p&gt;Information about the transport (channel binding token, for example).","pos":[9652,9726],"source":"\\n<p>Information about the transport (channel binding token, for example)."},{"content":"This parameter may be &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[9727,9777],"source":" This parameter may be <strong>null</strong>.</p>\\n"},{"pos":[10565,10592],"content":"TryComputeLength(out Int64)","needQuote":true,"nodes":[{"content":"TryComputeLength(out Int64)","pos":[0,27]}]},{"content":"\\n&lt;p&gt;The length in bytes of the stream content.&lt;/p&gt;\\n","pos":[11337,11390],"source":"\\n<p>The length in bytes of the stream content.</p>\\n"},{"pos":[12124,12139],"content":"System.Net.Http","needQuote":true,"nodes":[{"content":"System.Net.Http","pos":[0,15]}]},{"pos":[12297,12303],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12471,12482],"content":"HttpContent","needQuote":true,"nodes":[{"content":"HttpContent","pos":[0,11]}]},{"pos":[12665,12676],"content":"IDisposable","needQuote":true,"nodes":[{"content":"IDisposable","pos":[0,11]}]},{"pos":[12879,12886],"content":"Headers","needQuote":true,"nodes":[{"content":"Headers","pos":[0,7]}]},{"pos":[13152,13171],"content":"CopyToAsync(Stream)","needQuote":true,"nodes":[{"content":"CopyToAsync(Stream)","pos":[0,19]}]},{"pos":[13334,13345],"content":"CopyToAsync","needQuote":true,"nodes":[{"content":"CopyToAsync","pos":[0,11]}]},{"pos":[13410,13411],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13464,13470],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[13533,13534],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13639,13650],"content":"CopyToAsync","needQuote":true,"nodes":[{"content":"CopyToAsync","pos":[0,11]}]},{"pos":[13715,13716],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13769,13775],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[13838,13839],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14135,14172],"content":"CopyToAsync(Stream, TransportContext)","needQuote":true,"nodes":[{"content":"CopyToAsync(Stream, TransportContext)","pos":[0,37]}]},{"pos":[14392,14403],"content":"CopyToAsync","needQuote":true,"nodes":[{"content":"CopyToAsync","pos":[0,11]}]},{"pos":[14468,14469],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14522,14528],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"content":",","pos":[14592,14593]},{"pos":[14662,14678],"content":"TransportContext","needQuote":true,"nodes":[{"content":"TransportContext","pos":[0,16]}]},{"pos":[14752,14753],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14886,14897],"content":"CopyToAsync","needQuote":true,"nodes":[{"content":"CopyToAsync","pos":[0,11]}]},{"pos":[14962,14963],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15016,15022],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"content":",","pos":[15086,15087]},{"pos":[15156,15172],"content":"TransportContext","needQuote":true,"nodes":[{"content":"TransportContext","pos":[0,16]}]},{"pos":[15246,15247],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15540,15549],"content":"Dispose()","needQuote":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[15670,15677],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[15738,15739],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15766,15767],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15850,15857],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[15918,15919],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15946,15947],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16174,16195],"content":"LoadIntoBufferAsync()","needQuote":true,"nodes":[{"content":"LoadIntoBufferAsync()","pos":[0,21]}]},{"pos":[16340,16359],"content":"LoadIntoBufferAsync","needQuote":true,"nodes":[{"content":"LoadIntoBufferAsync","pos":[0,19]}]},{"pos":[16432,16433],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16460,16461],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16556,16575],"content":"LoadIntoBufferAsync","needQuote":true,"nodes":[{"content":"LoadIntoBufferAsync","pos":[0,19]}]},{"pos":[16648,16649],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16676,16677],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16941,16967],"content":"LoadIntoBufferAsync(Int64)","needQuote":true,"nodes":[{"content":"LoadIntoBufferAsync(Int64)","pos":[0,26]}]},{"pos":[17138,17157],"content":"LoadIntoBufferAsync","needQuote":true,"nodes":[{"content":"LoadIntoBufferAsync","pos":[0,19]}]},{"pos":[17230,17231],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17280,17285],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[17344,17345],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17454,17473],"content":"LoadIntoBufferAsync","needQuote":true,"nodes":[{"content":"LoadIntoBufferAsync","pos":[0,19]}]},{"pos":[17546,17547],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17596,17601],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[17660,17661],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17932,17954],"content":"ReadAsByteArrayAsync()","needQuote":true,"nodes":[{"content":"ReadAsByteArrayAsync()","pos":[0,22]}]},{"pos":[18101,18121],"content":"ReadAsByteArrayAsync","needQuote":true,"nodes":[{"content":"ReadAsByteArrayAsync","pos":[0,20]}]},{"pos":[18195,18196],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18223,18224],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18320,18340],"content":"ReadAsByteArrayAsync","needQuote":true,"nodes":[{"content":"ReadAsByteArrayAsync","pos":[0,20]}]},{"pos":[18414,18415],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18442,18443],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18694,18713],"content":"ReadAsStreamAsync()","needQuote":true,"nodes":[{"content":"ReadAsStreamAsync()","pos":[0,19]}]},{"pos":[18854,18871],"content":"ReadAsStreamAsync","needQuote":true,"nodes":[{"content":"ReadAsStreamAsync","pos":[0,17]}]},{"pos":[18942,18943],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18970,18971],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19064,19081],"content":"ReadAsStreamAsync","needQuote":true,"nodes":[{"content":"ReadAsStreamAsync","pos":[0,17]}]},{"pos":[19152,19153],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19180,19181],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19426,19445],"content":"ReadAsStringAsync()","needQuote":true,"nodes":[{"content":"ReadAsStringAsync()","pos":[0,19]}]},{"pos":[19586,19603],"content":"ReadAsStringAsync","needQuote":true,"nodes":[{"content":"ReadAsStringAsync","pos":[0,17]}]},{"pos":[19674,19675],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19702,19703],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19796,19813],"content":"ReadAsStringAsync","needQuote":true,"nodes":[{"content":"ReadAsStringAsync","pos":[0,17]}]},{"pos":[19884,19885],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19912,19913],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20120,20130],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[20225,20233],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[20302,20303],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20330,20331],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20401,20409],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[20478,20479],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20506,20507],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20690,20704],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[20823,20829],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[20896,20897],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20947,20953],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[21013,21014],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21097,21103],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[21170,21171],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21221,21227],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[21287,21288],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21502,21524],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[21672,21678],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[21745,21746],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21796,21802],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[21863,21864]},{"pos":[21919,21925],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[21985,21986],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22083,22089],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[22156,22157],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22207,22213],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[22274,22275]},{"pos":[22330,22336],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[22396,22397],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22642,22673],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[22839,22854],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[22930,22931],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22981,22987],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[23048,23049]},{"pos":[23104,23110],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[23170,23171],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23277,23292],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[23368,23369],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23419,23425],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[23486,23487]},{"pos":[23542,23548],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[23608,23609],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23839,23852],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[23953,23964],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[24036,24037],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24064,24065],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24138,24149],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[24221,24222],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24249,24250],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24425,24434],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[24527,24534],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[24602,24603],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24630,24631],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24700,24707],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[24775,24776],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24803,24804],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24979,24996],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[25105,25120],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[25196,25197],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25224,25225],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25302,25317],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[25393,25394],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25421,25422],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25567,25573],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[25710,25716],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[25846,25855],"content":"System.IO","needQuote":true,"nodes":[{"content":"System.IO","pos":[0,9]}]},{"pos":[25994,25999],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[26205,26235],"content":"CreateContentReadStreamAsync()","needQuote":true,"nodes":[{"content":"CreateContentReadStreamAsync()","pos":[0,30]}]},{"pos":[26398,26426],"content":"CreateContentReadStreamAsync","needQuote":true,"nodes":[{"content":"CreateContentReadStreamAsync","pos":[0,28]}]},{"pos":[26508,26509],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26536,26537],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26641,26669],"content":"CreateContentReadStreamAsync","needQuote":true,"nodes":[{"content":"CreateContentReadStreamAsync","pos":[0,28]}]},{"pos":[26751,26752],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26779,26780],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27066,27078],"content":"Task<Stream>","needQuote":true,"nodes":[{"content":"Task&lt;Stream&gt;","pos":[0,12],"source":"Task<Stream>"}]},{"pos":[27292,27296],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[27370,27371],"content":"<","needQuote":true,"nodes":[]},{"pos":[27424,27430],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[27575,27579],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"content":"(Of","pos":[27654,27657]},{"pos":[27717,27723],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[27786,27787],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27994,28007],"content":"Task<TResult>","needQuote":true,"nodes":[{"content":"Task&lt;TResult&gt;","pos":[0,13],"source":"Task<TResult>"}]},{"pos":[28204,28208],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[28261,28262],"content":"<","needQuote":true,"nodes":[]},{"pos":[28289,28296],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[28411,28415],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"content":"(Of","pos":[28469,28472]},{"pos":[28506,28513],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[28546,28547],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28733,28755],"content":"System.Threading.Tasks","needQuote":true,"nodes":[{"content":"System.Threading.Tasks","pos":[0,22]}]},{"pos":[28992,29008],"content":"Dispose(Boolean)","needQuote":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[29159,29166],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[29227,29228],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29279,29286],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[29347,29348],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29447,29454],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[29515,29516],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29567,29574],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[29635,29636],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29832,29839],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[30090,30138],"content":"SerializeToStreamAsync(Stream, TransportContext)","needQuote":true,"nodes":[{"content":"SerializeToStreamAsync(Stream, TransportContext)","pos":[0,48]}]},{"pos":[30380,30402],"content":"SerializeToStreamAsync","needQuote":true,"nodes":[{"content":"SerializeToStreamAsync","pos":[0,22]}]},{"pos":[30478,30479],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30532,30538],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"content":",","pos":[30602,30603]},{"pos":[30672,30688],"content":"TransportContext","needQuote":true,"nodes":[{"content":"TransportContext","pos":[0,16]}]},{"pos":[30762,30763],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30907,30929],"content":"SerializeToStreamAsync","needQuote":true,"nodes":[{"content":"SerializeToStreamAsync","pos":[0,22]}]},{"pos":[31005,31006],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31059,31065],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"content":",","pos":[31129,31130]},{"pos":[31199,31215],"content":"TransportContext","needQuote":true,"nodes":[{"content":"TransportContext","pos":[0,16]}]},{"pos":[31289,31290],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31559,31575],"content":"TransportContext","needQuote":true,"nodes":[{"content":"TransportContext","pos":[0,16]}]},{"pos":[31788,31792],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[32029,32052],"content":"TryComputeLength(Int64)","needQuote":true,"nodes":[{"content":"TryComputeLength(Int64)","pos":[0,23]}]},{"pos":[32218,32234],"content":"TryComputeLength","needQuote":true,"nodes":[{"content":"TryComputeLength","pos":[0,16]}]},{"pos":[32304,32305],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[32354,32359],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[32418,32419],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[32526,32542],"content":"TryComputeLength","needQuote":true,"nodes":[{"content":"TryComputeLength","pos":[0,16]}]},{"pos":[32612,32613],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[32662,32667],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[32726,32727],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[32936,32941],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[33081,33102],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[33296,33323],"content":"ArgumentOutOfRangeException","needQuote":true,"nodes":[{"content":"ArgumentOutOfRangeException","pos":[0,27]}]}],"content":"items:\n- uid: System.Net.Http.StreamContent\n  commentId: T:System.Net.Http.StreamContent\n  id: StreamContent\n  parent: System.Net.Http\n  children:\n  - System.Net.Http.StreamContent.#ctor(System.IO.Stream)\n  - System.Net.Http.StreamContent.#ctor(System.IO.Stream,System.Int32)\n  - System.Net.Http.StreamContent.CreateContentReadStreamAsync\n  - System.Net.Http.StreamContent.Dispose(System.Boolean)\n  - System.Net.Http.StreamContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)\n  - System.Net.Http.StreamContent.TryComputeLength(System.Int64@)\n  langs:\n  - csharp\n  - vb\n  name: StreamContent\n  fullName: System.Net.Http.StreamContent\n  type: Class\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: StreamContent\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 226\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>Provides HTTP content based on a stream.</p>\\n\"\n  syntax:\n    content: 'public class StreamContent : HttpContent, IDisposable'\n    content.vb: >-\n      Public Class StreamContent\n          Inherits HttpContent\n          Implements IDisposable\n  inheritance:\n  - System.Object\n  - System.Net.Http.HttpContent\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Net.Http.HttpContent.Headers\n  - System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream)\n  - System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext)\n  - System.Net.Http.HttpContent.Dispose\n  - System.Net.Http.HttpContent.LoadIntoBufferAsync\n  - System.Net.Http.HttpContent.LoadIntoBufferAsync(System.Int64)\n  - System.Net.Http.HttpContent.ReadAsByteArrayAsync\n  - System.Net.Http.HttpContent.ReadAsStreamAsync\n  - System.Net.Http.HttpContent.ReadAsStringAsync\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: StreamContent\n- uid: System.Net.Http.StreamContent.#ctor(System.IO.Stream)\n  commentId: M:System.Net.Http.StreamContent.#ctor(System.IO.Stream)\n  id: '#ctor(System.IO.Stream)'\n  parent: System.Net.Http.StreamContent\n  langs:\n  - csharp\n  - vb\n  name: StreamContent(Stream)\n  fullName: System.Net.Http.StreamContent.StreamContent(System.IO.Stream)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 228\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>Creates a new instance of the <xref href=\\\"System.Net.Http.StreamContent\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public StreamContent(Stream content)\n    content.vb: Public Sub New(content As Stream)\n    parameters:\n    - id: content\n      type: System.IO.Stream\n      description: \"\\n<p>The content used to initialize the <xref href=\\\"System.Net.Http.StreamContent\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: StreamContent.StreamContent(Stream)\n- uid: System.Net.Http.StreamContent.#ctor(System.IO.Stream,System.Int32)\n  commentId: M:System.Net.Http.StreamContent.#ctor(System.IO.Stream,System.Int32)\n  id: '#ctor(System.IO.Stream,System.Int32)'\n  parent: System.Net.Http.StreamContent\n  langs:\n  - csharp\n  - vb\n  name: StreamContent(Stream, Int32)\n  fullName: System.Net.Http.StreamContent.StreamContent(System.IO.Stream, System.Int32)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 229\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>Creates a new instance of the <xref href=\\\"System.Net.Http.StreamContent\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public StreamContent(Stream content, int bufferSize)\n    content.vb: Public Sub New(content As Stream, bufferSize As Integer)\n    parameters:\n    - id: content\n      type: System.IO.Stream\n      description: \"\\n<p>The content used to initialize the <xref href=\\\"System.Net.Http.StreamContent\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    - id: bufferSize\n      type: System.Int32\n      description: \"\\n<p>The size, in bytes, of the buffer for the <xref href=\\\"System.Net.Http.StreamContent\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>content</em> was <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The <em>bufferSize</em> was less than or equal to zero. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: StreamContent.StreamContent(Stream, Int32)\n- uid: System.Net.Http.StreamContent.CreateContentReadStreamAsync\n  commentId: M:System.Net.Http.StreamContent.CreateContentReadStreamAsync\n  id: CreateContentReadStreamAsync\n  parent: System.Net.Http.StreamContent\n  langs:\n  - csharp\n  - vb\n  name: CreateContentReadStreamAsync()\n  fullName: System.Net.Http.StreamContent.CreateContentReadStreamAsync()\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CreateContentReadStreamAsync\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 230\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>Write the HTTP stream content to a memory stream as an asynchronous operation.</p>\\n\"\n  syntax:\n    content: protected override Task<Stream> CreateContentReadStreamAsync()\n    content.vb: Protected Overrides Function CreateContentReadStreamAsync As Task(Of Stream)\n    return:\n      type: System.Threading.Tasks.Task{System.IO.Stream}\n      description: \"\\n<p>Returns <xref href=\\\"System.Threading.Tasks.Task`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>The task object representing the asynchronous operation.</p>\\n\"\n  overridden: System.Net.Http.HttpContent.CreateContentReadStreamAsync\n  modifiers.csharp:\n  - protected\n  - override\n  modifiers.vb:\n  - Protected\n  - Overrides\n  nameWithType: StreamContent.CreateContentReadStreamAsync()\n- uid: System.Net.Http.StreamContent.Dispose(System.Boolean)\n  commentId: M:System.Net.Http.StreamContent.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Net.Http.StreamContent\n  langs:\n  - csharp\n  - vb\n  name: Dispose(Boolean)\n  fullName: System.Net.Http.StreamContent.Dispose(System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Dispose\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 231\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>Releases the unmanaged resources used by the <xref href=\\\"System.Net.Http.StreamContent\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and optionally disposes of the managed resources.</p>\\n\"\n  syntax:\n    content: protected override void Dispose(bool disposing)\n    content.vb: Protected Overrides Sub Dispose(disposing As Boolean)\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to release both managed and unmanaged resources; <strong>false</strong> to releases only unmanaged resources.</p>\\n\"\n  overridden: System.Net.Http.HttpContent.Dispose(System.Boolean)\n  modifiers.csharp:\n  - protected\n  - override\n  modifiers.vb:\n  - Protected\n  - Overrides\n  nameWithType: StreamContent.Dispose(Boolean)\n- uid: System.Net.Http.StreamContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)\n  commentId: M:System.Net.Http.StreamContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)\n  id: SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)\n  parent: System.Net.Http.StreamContent\n  langs:\n  - csharp\n  - vb\n  name: SerializeToStreamAsync(Stream, TransportContext)\n  fullName: System.Net.Http.StreamContent.SerializeToStreamAsync(System.IO.Stream, System.Net.TransportContext)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SerializeToStreamAsync\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 232\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>Serialize the HTTP content to a stream as an asynchronous operation.</p>\\n\"\n  syntax:\n    content: protected override Task SerializeToStreamAsync(Stream stream, TransportContext context)\n    content.vb: Protected Overrides Function SerializeToStreamAsync(stream As Stream, context As TransportContext) As Task\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: \"\\n<p>The target stream.</p>\\n\"\n    - id: context\n      type: System.Net.TransportContext\n      description: \"\\n<p>Information about the transport (channel binding token, for example). This parameter may be <strong>null</strong>.</p>\\n\"\n    return:\n      type: System.Threading.Tasks.Task\n      description: \"\\n<p>Returns <xref href=\\\"System.Threading.Tasks.Task\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>The task object representing the asynchronous operation.</p>\\n\"\n  overridden: System.Net.Http.HttpContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)\n  modifiers.csharp:\n  - protected\n  - override\n  modifiers.vb:\n  - Protected\n  - Overrides\n  nameWithType: StreamContent.SerializeToStreamAsync(Stream, TransportContext)\n- uid: System.Net.Http.StreamContent.TryComputeLength(System.Int64@)\n  commentId: M:System.Net.Http.StreamContent.TryComputeLength(System.Int64@)\n  id: TryComputeLength(System.Int64@)\n  parent: System.Net.Http.StreamContent\n  langs:\n  - csharp\n  - vb\n  name: TryComputeLength(out Int64)\n  fullName: System.Net.Http.StreamContent.TryComputeLength(out System.Int64)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: TryComputeLength\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 233\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>Determines whether the stream content has a valid length in bytes.</p>\\n\"\n  syntax:\n    content: protected override bool TryComputeLength(out long length)\n    content.vb: Protected Overrides Function TryComputeLength(ByRef length As Long) As Boolean\n    parameters:\n    - id: length\n      type: System.Int64\n      description: \"\\n<p>The length in bytes of the stream content.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>Returns <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>\\n<strong>true</strong> if <em>length</em> is a valid length; otherwise, <strong>false</strong>.</p>\\n\"\n  overridden: System.Net.Http.HttpContent.TryComputeLength(System.Int64@)\n  modifiers.csharp:\n  - protected\n  - override\n  modifiers.vb:\n  - Protected\n  - Overrides\n  fullName.vb: System.Net.Http.StreamContent.TryComputeLength(ByRef System.Int64)\n  name.vb: TryComputeLength(ByRef Int64)\n  nameWithType: StreamContent.TryComputeLength(out Int64)\n  nameWithType.vb: StreamContent.TryComputeLength(ByRef Int64)\nreferences:\n- uid: System.Net.Http\n  isExternal: false\n  name: System.Net.Http\n  fullName: System.Net.Http\n  commentId: N:System.Net.Http\n  nameWithType: System.Net.Http\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Net.Http.HttpContent\n  parent: System.Net.Http\n  isExternal: false\n  name: HttpContent\n  fullName: System.Net.Http.HttpContent\n  commentId: T:System.Net.Http.HttpContent\n  nameWithType: HttpContent\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  fullName: System.IDisposable\n  commentId: T:System.IDisposable\n  nameWithType: IDisposable\n- uid: System.Net.Http.HttpContent.Headers\n  parent: System.Net.Http.HttpContent\n  isExternal: false\n  name: Headers\n  fullName: System.Net.Http.HttpContent.Headers\n  commentId: P:System.Net.Http.HttpContent.Headers\n  nameWithType: HttpContent.Headers\n- uid: System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream)\n  parent: System.Net.Http.HttpContent\n  isExternal: true\n  name: CopyToAsync(Stream)\n  fullName: System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream)\n  spec.csharp:\n  - uid: System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream)\n    name: CopyToAsync\n    fullName: System.Net.Http.HttpContent.CopyToAsync\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream)\n    name: CopyToAsync\n    fullName: System.Net.Http.HttpContent.CopyToAsync\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream)\n  nameWithType: HttpContent.CopyToAsync(Stream)\n- uid: System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext)\n  parent: System.Net.Http.HttpContent\n  isExternal: true\n  name: CopyToAsync(Stream, TransportContext)\n  fullName: System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream, System.Net.TransportContext)\n  spec.csharp:\n  - uid: System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext)\n    name: CopyToAsync\n    fullName: System.Net.Http.HttpContent.CopyToAsync\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.TransportContext\n    name: TransportContext\n    fullName: System.Net.TransportContext\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext)\n    name: CopyToAsync\n    fullName: System.Net.Http.HttpContent.CopyToAsync\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.TransportContext\n    name: TransportContext\n    fullName: System.Net.TransportContext\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext)\n  nameWithType: HttpContent.CopyToAsync(Stream, TransportContext)\n- uid: System.Net.Http.HttpContent.Dispose\n  parent: System.Net.Http.HttpContent\n  isExternal: false\n  name: Dispose()\n  fullName: System.Net.Http.HttpContent.Dispose()\n  spec.csharp:\n  - uid: System.Net.Http.HttpContent.Dispose\n    name: Dispose\n    fullName: System.Net.Http.HttpContent.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Net.Http.HttpContent.Dispose\n    name: Dispose\n    fullName: System.Net.Http.HttpContent.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Net.Http.HttpContent.Dispose\n  nameWithType: HttpContent.Dispose()\n- uid: System.Net.Http.HttpContent.LoadIntoBufferAsync\n  parent: System.Net.Http.HttpContent\n  isExternal: false\n  name: LoadIntoBufferAsync()\n  fullName: System.Net.Http.HttpContent.LoadIntoBufferAsync()\n  spec.csharp:\n  - uid: System.Net.Http.HttpContent.LoadIntoBufferAsync\n    name: LoadIntoBufferAsync\n    fullName: System.Net.Http.HttpContent.LoadIntoBufferAsync\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Net.Http.HttpContent.LoadIntoBufferAsync\n    name: LoadIntoBufferAsync\n    fullName: System.Net.Http.HttpContent.LoadIntoBufferAsync\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Net.Http.HttpContent.LoadIntoBufferAsync\n  nameWithType: HttpContent.LoadIntoBufferAsync()\n- uid: System.Net.Http.HttpContent.LoadIntoBufferAsync(System.Int64)\n  parent: System.Net.Http.HttpContent\n  isExternal: true\n  name: LoadIntoBufferAsync(Int64)\n  fullName: System.Net.Http.HttpContent.LoadIntoBufferAsync(System.Int64)\n  spec.csharp:\n  - uid: System.Net.Http.HttpContent.LoadIntoBufferAsync(System.Int64)\n    name: LoadIntoBufferAsync\n    fullName: System.Net.Http.HttpContent.LoadIntoBufferAsync\n  - name: (\n    fullName: (\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Net.Http.HttpContent.LoadIntoBufferAsync(System.Int64)\n    name: LoadIntoBufferAsync\n    fullName: System.Net.Http.HttpContent.LoadIntoBufferAsync\n  - name: (\n    fullName: (\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Net.Http.HttpContent.LoadIntoBufferAsync(System.Int64)\n  nameWithType: HttpContent.LoadIntoBufferAsync(Int64)\n- uid: System.Net.Http.HttpContent.ReadAsByteArrayAsync\n  parent: System.Net.Http.HttpContent\n  isExternal: false\n  name: ReadAsByteArrayAsync()\n  fullName: System.Net.Http.HttpContent.ReadAsByteArrayAsync()\n  spec.csharp:\n  - uid: System.Net.Http.HttpContent.ReadAsByteArrayAsync\n    name: ReadAsByteArrayAsync\n    fullName: System.Net.Http.HttpContent.ReadAsByteArrayAsync\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Net.Http.HttpContent.ReadAsByteArrayAsync\n    name: ReadAsByteArrayAsync\n    fullName: System.Net.Http.HttpContent.ReadAsByteArrayAsync\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Net.Http.HttpContent.ReadAsByteArrayAsync\n  nameWithType: HttpContent.ReadAsByteArrayAsync()\n- uid: System.Net.Http.HttpContent.ReadAsStreamAsync\n  parent: System.Net.Http.HttpContent\n  isExternal: false\n  name: ReadAsStreamAsync()\n  fullName: System.Net.Http.HttpContent.ReadAsStreamAsync()\n  spec.csharp:\n  - uid: System.Net.Http.HttpContent.ReadAsStreamAsync\n    name: ReadAsStreamAsync\n    fullName: System.Net.Http.HttpContent.ReadAsStreamAsync\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Net.Http.HttpContent.ReadAsStreamAsync\n    name: ReadAsStreamAsync\n    fullName: System.Net.Http.HttpContent.ReadAsStreamAsync\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Net.Http.HttpContent.ReadAsStreamAsync\n  nameWithType: HttpContent.ReadAsStreamAsync()\n- uid: System.Net.Http.HttpContent.ReadAsStringAsync\n  parent: System.Net.Http.HttpContent\n  isExternal: false\n  name: ReadAsStringAsync()\n  fullName: System.Net.Http.HttpContent.ReadAsStringAsync()\n  spec.csharp:\n  - uid: System.Net.Http.HttpContent.ReadAsStringAsync\n    name: ReadAsStringAsync\n    fullName: System.Net.Http.HttpContent.ReadAsStringAsync\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Net.Http.HttpContent.ReadAsStringAsync\n    name: ReadAsStringAsync\n    fullName: System.Net.Http.HttpContent.ReadAsStringAsync\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Net.Http.HttpContent.ReadAsStringAsync\n  nameWithType: HttpContent.ReadAsStringAsync()\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  fullName: System.IO.Stream\n  commentId: T:System.IO.Stream\n  nameWithType: Stream\n- uid: System.IO\n  isExternal: false\n  name: System.IO\n  fullName: System.IO\n  commentId: N:System.IO\n  nameWithType: System.IO\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  commentId: T:System.Int32\n  nameWithType: Int32\n- uid: System.Net.Http.HttpContent.CreateContentReadStreamAsync\n  parent: System.Net.Http.HttpContent\n  isExternal: false\n  name: CreateContentReadStreamAsync()\n  fullName: System.Net.Http.HttpContent.CreateContentReadStreamAsync()\n  spec.csharp:\n  - uid: System.Net.Http.HttpContent.CreateContentReadStreamAsync\n    name: CreateContentReadStreamAsync\n    fullName: System.Net.Http.HttpContent.CreateContentReadStreamAsync\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Net.Http.HttpContent.CreateContentReadStreamAsync\n    name: CreateContentReadStreamAsync\n    fullName: System.Net.Http.HttpContent.CreateContentReadStreamAsync\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Net.Http.HttpContent.CreateContentReadStreamAsync\n  nameWithType: HttpContent.CreateContentReadStreamAsync()\n- uid: System.Threading.Tasks.Task{System.IO.Stream}\n  parent: System.Threading.Tasks\n  definition: System.Threading.Tasks.Task`1\n  name: Task<Stream>\n  fullName: System.Threading.Tasks.Task<System.IO.Stream>\n  fullname.vb: System.Threading.Tasks.Task(Of System.IO.Stream)\n  name.vb: Task(Of Stream)\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: T:System.Threading.Tasks.Task{System.IO.Stream}\n  nameWithType: Task<Stream>\n  nameWithType.vb: Task(Of Stream)\n- uid: System.Threading.Tasks.Task`1\n  isExternal: false\n  name: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n  fullname.vb: System.Threading.Tasks.Task(Of TResult)\n  name.vb: Task(Of TResult)\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n  - name: <\n    fullName: <\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  commentId: T:System.Threading.Tasks.Task`1\n  nameWithType: Task<TResult>\n  nameWithType.vb: Task(Of TResult)\n- uid: System.Threading.Tasks\n  isExternal: false\n  name: System.Threading.Tasks\n  fullName: System.Threading.Tasks\n  commentId: N:System.Threading.Tasks\n  nameWithType: System.Threading.Tasks\n- uid: System.Net.Http.HttpContent.Dispose(System.Boolean)\n  parent: System.Net.Http.HttpContent\n  isExternal: true\n  name: Dispose(Boolean)\n  fullName: System.Net.Http.HttpContent.Dispose(System.Boolean)\n  spec.csharp:\n  - uid: System.Net.Http.HttpContent.Dispose(System.Boolean)\n    name: Dispose\n    fullName: System.Net.Http.HttpContent.Dispose\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Net.Http.HttpContent.Dispose(System.Boolean)\n    name: Dispose\n    fullName: System.Net.Http.HttpContent.Dispose\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Net.Http.HttpContent.Dispose(System.Boolean)\n  nameWithType: HttpContent.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.Net.Http.HttpContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)\n  parent: System.Net.Http.HttpContent\n  isExternal: true\n  name: SerializeToStreamAsync(Stream, TransportContext)\n  fullName: System.Net.Http.HttpContent.SerializeToStreamAsync(System.IO.Stream, System.Net.TransportContext)\n  spec.csharp:\n  - uid: System.Net.Http.HttpContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)\n    name: SerializeToStreamAsync\n    fullName: System.Net.Http.HttpContent.SerializeToStreamAsync\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.TransportContext\n    name: TransportContext\n    fullName: System.Net.TransportContext\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Net.Http.HttpContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)\n    name: SerializeToStreamAsync\n    fullName: System.Net.Http.HttpContent.SerializeToStreamAsync\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.TransportContext\n    name: TransportContext\n    fullName: System.Net.TransportContext\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Net.Http.HttpContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)\n  nameWithType: HttpContent.SerializeToStreamAsync(Stream, TransportContext)\n- uid: System.Net.TransportContext\n  isExternal: false\n  name: TransportContext\n  fullName: System.Net.TransportContext\n  commentId: T:System.Net.TransportContext\n  nameWithType: TransportContext\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  fullName: System.Threading.Tasks.Task\n  commentId: T:System.Threading.Tasks.Task\n  nameWithType: Task\n- uid: System.Net.Http.HttpContent.TryComputeLength(System.Int64@)\n  parent: System.Net.Http.HttpContent\n  isExternal: true\n  name: TryComputeLength(Int64)\n  fullName: System.Net.Http.HttpContent.TryComputeLength(System.Int64)\n  spec.csharp:\n  - uid: System.Net.Http.HttpContent.TryComputeLength(System.Int64@)\n    name: TryComputeLength\n    fullName: System.Net.Http.HttpContent.TryComputeLength\n  - name: (\n    fullName: (\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Net.Http.HttpContent.TryComputeLength(System.Int64@)\n    name: TryComputeLength\n    fullName: System.Net.Http.HttpContent.TryComputeLength\n  - name: (\n    fullName: (\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Net.Http.HttpContent.TryComputeLength(System.Int64@)\n  nameWithType: HttpContent.TryComputeLength(Int64)\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  fullName: System.Int64\n  commentId: T:System.Int64\n  nameWithType: Int64\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  commentId: T:System.ArgumentOutOfRangeException\n"}