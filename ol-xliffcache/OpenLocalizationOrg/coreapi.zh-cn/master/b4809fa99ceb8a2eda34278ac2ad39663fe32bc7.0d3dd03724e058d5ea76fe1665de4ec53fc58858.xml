{"nodes":[{"pos":[1912,1925],"content":"XmlSerializer","needQuote":true,"nodes":[{"content":"XmlSerializer","pos":[0,13]}]},{"pos":[3904,3919],"content":"XmlSerializer()","needQuote":true,"nodes":[{"content":"XmlSerializer()","pos":[0,15]}]},{"pos":[4963,4982],"content":"XmlSerializer(Type)","needQuote":true,"nodes":[{"content":"XmlSerializer(Type)","pos":[0,19]}]},{"pos":[6941,6968],"content":"XmlSerializer(Type, String)","needQuote":true,"nodes":[{"content":"XmlSerializer(Type, String)","pos":[0,27]}]},{"content":"\\n&lt;p&gt;The default namespace to use for all the XML elements.","pos":[8249,8308],"source":"\\n<p>The default namespace to use for all the XML elements."},{"content":"&lt;/p&gt;\\n","pos":[8309,8315],"source":" </p>\\n"},{"pos":[8840,8867],"content":"XmlSerializer(Type, Type[])","needQuote":true,"nodes":[{"content":"XmlSerializer(Type, Type[])","pos":[0,27]}]},{"pos":[11151,11193],"content":"XmlSerializer(Type, XmlAttributeOverrides)","needQuote":true,"nodes":[{"content":"XmlSerializer(Type, XmlAttributeOverrides)","pos":[0,42]}]},{"content":"\\n&lt;p&gt;The type of the object to serialize.","pos":[12355,12396],"source":"\\n<p>The type of the object to serialize."},{"content":"&lt;/p&gt;\\n","pos":[12397,12403],"source":" </p>\\n"},{"pos":[13596,13672],"content":"XmlSerializer(Type, XmlAttributeOverrides, Type[], XmlRootAttribute, String)","needQuote":true,"nodes":[{"content":"XmlSerializer(Type, XmlAttributeOverrides, Type[], XmlRootAttribute, String)","pos":[0,76]}]},{"content":"\\n&lt;p&gt;The default namespace of all XML elements in the XML document.","pos":[16310,16377],"source":"\\n<p>The default namespace of all XML elements in the XML document."},{"content":"&lt;/p&gt;\\n","pos":[16378,16384],"source":" </p>\\n"},{"pos":[17674,17711],"content":"XmlSerializer(Type, XmlRootAttribute)","needQuote":true,"nodes":[{"content":"XmlSerializer(Type, XmlRootAttribute)","pos":[0,37]}]},{"pos":[19734,19759],"content":"CanDeserialize(XmlReader)","needQuote":true,"nodes":[{"content":"CanDeserialize(XmlReader)","pos":[0,25]}]},{"pos":[21794,21813],"content":"Deserialize(Stream)","needQuote":true,"nodes":[{"content":"Deserialize(Stream)","pos":[0,19]}]},{"pos":[23844,23867],"content":"Deserialize(TextReader)","needQuote":true,"nodes":[{"content":"Deserialize(TextReader)","pos":[0,23]}]},{"pos":[26266,26288],"content":"Deserialize(XmlReader)","needQuote":true,"nodes":[{"content":"Deserialize(XmlReader)","pos":[0,22]}]},{"pos":[28654,28671],"content":"FromTypes(Type[])","needQuote":true,"nodes":[{"content":"FromTypes(Type[])","pos":[0,17]}]},{"pos":[30582,30607],"content":"Serialize(Stream, Object)","needQuote":true,"nodes":[{"content":"Serialize(Stream, Object)","pos":[0,25]}]},{"pos":[33023,33073],"content":"Serialize(Stream, Object, XmlSerializerNamespaces)","needQuote":true,"nodes":[{"content":"Serialize(Stream, Object, XmlSerializerNamespaces)","pos":[0,50]}]},{"pos":[35798,35827],"content":"Serialize(TextWriter, Object)","needQuote":true,"nodes":[{"content":"Serialize(TextWriter, Object)","pos":[0,29]}]},{"pos":[37804,37858],"content":"Serialize(TextWriter, Object, XmlSerializerNamespaces)","needQuote":true,"nodes":[{"content":"Serialize(TextWriter, Object, XmlSerializerNamespaces)","pos":[0,54]}]},{"pos":[40489,40517],"content":"Serialize(XmlWriter, Object)","needQuote":true,"nodes":[{"content":"Serialize(XmlWriter, Object)","pos":[0,28]}]},{"pos":[42979,43032],"content":"Serialize(XmlWriter, Object, XmlSerializerNamespaces)","needQuote":true,"nodes":[{"content":"Serialize(XmlWriter, Object, XmlSerializerNamespaces)","pos":[0,53]}]},{"pos":[45535,45559],"content":"System.Xml.Serialization","needQuote":true,"nodes":[{"content":"System.Xml.Serialization","pos":[0,24]}]},{"pos":[45744,45750],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[45910,45920],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[46015,46023],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[46092,46093],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[46120,46121],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[46191,46199],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[46268,46269],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[46296,46297],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[46480,46494],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[46613,46619],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[46686,46687],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[46737,46743],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[46803,46804],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[46887,46893],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[46960,46961],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[47011,47017],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[47077,47078],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[47292,47314],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[47462,47468],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[47535,47536],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[47586,47592],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[47653,47654]},{"pos":[47709,47715],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[47775,47776],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[47873,47879],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[47946,47947],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[47997,48003],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[48064,48065]},{"pos":[48120,48126],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[48186,48187],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[48432,48463],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[48629,48644],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[48720,48721],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[48771,48777],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[48838,48839]},{"pos":[48894,48900],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[48960,48961],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[49067,49082],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[49158,49159],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[49209,49215],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[49276,49277]},{"pos":[49332,49338],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[49398,49399],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[49629,49642],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[49743,49754],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[49826,49827],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[49854,49855],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[49928,49939],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[50011,50012],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[50039,50040],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[50215,50224],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[50317,50324],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[50392,50393],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[50420,50421],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[50490,50497],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[50565,50566],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[50593,50594],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[50769,50786],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[50895,50910],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[50986,50987],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[51014,51015],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[51092,51107],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[51183,51184],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[51211,51212],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[51357,51363],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[51492,51496],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[51635,51641],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[51749,51755],"content":"Type[]","needQuote":true,"nodes":[{"content":"Type[]","pos":[0,6]}]},{"pos":[51875,51879],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[51917,51919]},{"pos":[51982,51986],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[52023,52025],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[52209,52230],"content":"XmlAttributeOverrides","needQuote":true,"nodes":[{"content":"XmlAttributeOverrides","pos":[0,21]}]},{"pos":[52502,52518],"content":"XmlRootAttribute","needQuote":true,"nodes":[{"content":"XmlRootAttribute","pos":[0,16]}]},{"pos":[52740,52749],"content":"XmlReader","needQuote":true,"nodes":[{"content":"XmlReader","pos":[0,9]}]},{"pos":[52912,52919],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[53047,53057],"content":"System.Xml","needQuote":true,"nodes":[{"content":"System.Xml","pos":[0,10]}]},{"pos":[53206,53212],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[53342,53351],"content":"System.IO","needQuote":true,"nodes":[{"content":"System.IO","pos":[0,9]}]},{"pos":[53501,53511],"content":"TextReader","needQuote":true,"nodes":[{"content":"TextReader","pos":[0,10]}]},{"pos":[53664,53679],"content":"XmlSerializer[]","needQuote":true,"nodes":[{"content":"XmlSerializer[]","pos":[0,15]}]},{"pos":[53889,53902],"content":"XmlSerializer","needQuote":true,"nodes":[{"content":"XmlSerializer","pos":[0,13]}]},{"content":"[]","pos":[53967,53969]},{"pos":[54059,54072],"content":"XmlSerializer","needQuote":true,"nodes":[{"content":"XmlSerializer","pos":[0,13]}]},{"pos":[54136,54138],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[54342,54365],"content":"XmlSerializerNamespaces","needQuote":true,"nodes":[{"content":"XmlSerializerNamespaces","pos":[0,23]}]},{"pos":[54607,54617],"content":"TextWriter","needQuote":true,"nodes":[{"content":"TextWriter","pos":[0,10]}]},{"pos":[54791,54800],"content":"XmlWriter","needQuote":true,"nodes":[{"content":"XmlWriter","pos":[0,9]}]},{"pos":[54981,55006],"content":"InvalidOperationException","needQuote":true,"nodes":[{"content":"InvalidOperationException","pos":[0,25]}]}],"content":"items:\n- uid: System.Xml.Serialization.XmlSerializer\n  commentId: T:System.Xml.Serialization.XmlSerializer\n  id: XmlSerializer\n  parent: System.Xml.Serialization\n  children:\n  - System.Xml.Serialization.XmlSerializer.#ctor\n  - System.Xml.Serialization.XmlSerializer.#ctor(System.Type)\n  - System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.String)\n  - System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Type[])\n  - System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides)\n  - System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)\n  - System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlRootAttribute)\n  - System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)\n  - System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)\n  - System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)\n  - System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)\n  - System.Xml.Serialization.XmlSerializer.FromTypes(System.Type[])\n  - System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object)\n  - System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)\n  - System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)\n  - System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)\n  - System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object)\n  - System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)\n  langs:\n  - csharp\n  - vb\n  name: XmlSerializer\n  fullName: System.Xml.Serialization.XmlSerializer\n  type: Class\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: XmlSerializer\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n    startLine: 178\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  summary: \"\\n<p>Serializes and deserializes objects into and from XML documents. The <xref href=\\\"System.Xml.Serialization.XmlSerializer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> enables you to control how objects are encoded into XML.</p>\\n\"\n  syntax:\n    content: public class XmlSerializer\n    content.vb: Public Class XmlSerializer\n  seealso:\n  - type: System.Xml.Serialization.XmlAttributeOverrides\n    commentId: T:System.Xml.Serialization.XmlAttributeOverrides\n  - type: System.Xml.Serialization.XmlAttributes\n    commentId: T:System.Xml.Serialization.XmlAttributes\n  - type: System.Xml.Serialization.XmlSerializer\n    commentId: T:System.Xml.Serialization.XmlSerializer\n  - type: System.Xml.Serialization.XmlAttributes.XmlText\n    commentId: P:System.Xml.Serialization.XmlAttributes.XmlText\n  - type: System.Xml.Serialization.XmlAttributes\n    commentId: T:System.Xml.Serialization.XmlAttributes\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: XmlSerializer\n- uid: System.Xml.Serialization.XmlSerializer.#ctor\n  commentId: M:System.Xml.Serialization.XmlSerializer.#ctor\n  id: '#ctor'\n  parent: System.Xml.Serialization.XmlSerializer\n  langs:\n  - csharp\n  - vb\n  name: XmlSerializer()\n  fullName: System.Xml.Serialization.XmlSerializer.XmlSerializer()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n    startLine: 180\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Xml.Serialization.XmlSerializer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: protected XmlSerializer()\n    content.vb: Protected Sub New\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: XmlSerializer.XmlSerializer()\n- uid: System.Xml.Serialization.XmlSerializer.#ctor(System.Type)\n  commentId: M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type)\n  id: '#ctor(System.Type)'\n  parent: System.Xml.Serialization.XmlSerializer\n  langs:\n  - csharp\n  - vb\n  name: XmlSerializer(Type)\n  fullName: System.Xml.Serialization.XmlSerializer.XmlSerializer(System.Type)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n    startLine: 181\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Xml.Serialization.XmlSerializer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class that can serialize objects of the specified type into XML documents, and deserialize XML documents into objects of the specified type.</p>\\n\"\n  syntax:\n    content: public XmlSerializer(Type type)\n    content.vb: Public Sub New(type As Type)\n    parameters:\n    - id: type\n      type: System.Type\n      description: \"\\n<p>The type of the object that this <xref href=\\\"System.Xml.Serialization.XmlSerializer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> can serialize. </p>\\n\"\n  seealso:\n  - type: System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)\n    commentId: M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)\n  - type: System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)\n    commentId: M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)\n  - type: System.Xml.Serialization.XmlAttributes\n    commentId: T:System.Xml.Serialization.XmlAttributes\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XmlSerializer.XmlSerializer(Type)\n- uid: System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.String)\n  commentId: M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.String)\n  id: '#ctor(System.Type,System.String)'\n  parent: System.Xml.Serialization.XmlSerializer\n  langs:\n  - csharp\n  - vb\n  name: XmlSerializer(Type, String)\n  fullName: System.Xml.Serialization.XmlSerializer.XmlSerializer(System.Type, System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n    startLine: 182\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Xml.Serialization.XmlSerializer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class that can serialize objects of the specified type into XML documents, and deserialize XML documents into objects of the specified type. Specifies the default namespace for all the XML elements.</p>\\n\"\n  syntax:\n    content: public XmlSerializer(Type type, string defaultNamespace)\n    content.vb: Public Sub New(type As Type, defaultNamespace As String)\n    parameters:\n    - id: type\n      type: System.Type\n      description: \"\\n<p>The type of the object that this <xref href=\\\"System.Xml.Serialization.XmlSerializer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> can serialize. </p>\\n\"\n    - id: defaultNamespace\n      type: System.String\n      description: \"\\n<p>The default namespace to use for all the XML elements. </p>\\n\"\n  seealso:\n  - type: System.Xml.Serialization.XmlAttributes\n    commentId: T:System.Xml.Serialization.XmlAttributes\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XmlSerializer.XmlSerializer(Type, String)\n- uid: System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Type[])\n  commentId: M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Type[])\n  id: '#ctor(System.Type,System.Type[])'\n  parent: System.Xml.Serialization.XmlSerializer\n  langs:\n  - csharp\n  - vb\n  name: XmlSerializer(Type, Type[])\n  fullName: System.Xml.Serialization.XmlSerializer.XmlSerializer(System.Type, System.Type[])\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n    startLine: 183\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Xml.Serialization.XmlSerializer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class that can serialize objects of the specified type into XML documents, and deserialize XML documents into object of a specified type. If a property or field returns an array, the <em>extraTypes</em> parameter specifies objects that can be inserted into the array.</p>\\n\"\n  syntax:\n    content: public XmlSerializer(Type type, Type[] extraTypes)\n    content.vb: Public Sub New(type As Type, extraTypes As Type())\n    parameters:\n    - id: type\n      type: System.Type\n      description: \"\\n<p>The type of the object that this <xref href=\\\"System.Xml.Serialization.XmlSerializer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> can serialize. </p>\\n\"\n    - id: extraTypes\n      type: System.Type[]\n      description: \"\\n<p>A <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> array of additional object types to serialize. </p>\\n\"\n  seealso:\n  - type: System.Xml.Serialization.XmlAttributes\n    commentId: T:System.Xml.Serialization.XmlAttributes\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Xml.Serialization.XmlSerializer.XmlSerializer(System.Type, System.Type())\n  name.vb: XmlSerializer(Type, Type())\n  nameWithType: XmlSerializer.XmlSerializer(Type, Type[])\n  nameWithType.vb: XmlSerializer.XmlSerializer(Type, Type())\n- uid: System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides)\n  commentId: M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides)\n  id: '#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides)'\n  parent: System.Xml.Serialization.XmlSerializer\n  langs:\n  - csharp\n  - vb\n  name: XmlSerializer(Type, XmlAttributeOverrides)\n  fullName: System.Xml.Serialization.XmlSerializer.XmlSerializer(System.Type, System.Xml.Serialization.XmlAttributeOverrides)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n    startLine: 184\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Xml.Serialization.XmlSerializer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class that can serialize objects of the specified type into XML documents, and deserialize XML documents into objects of the specified type. Each object to be serialized can itself contain instances of classes, which this overload can override with other classes.</p>\\n\"\n  syntax:\n    content: public XmlSerializer(Type type, XmlAttributeOverrides overrides)\n    content.vb: Public Sub New(type As Type, overrides As XmlAttributeOverrides)\n    parameters:\n    - id: type\n      type: System.Type\n      description: \"\\n<p>The type of the object to serialize. </p>\\n\"\n    - id: overrides\n      type: System.Xml.Serialization.XmlAttributeOverrides\n      description: \"\\n<p>An <xref href=\\\"System.Xml.Serialization.XmlAttributeOverrides\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  seealso:\n  - type: System.Xml.Serialization.XmlAttributeOverrides\n    commentId: T:System.Xml.Serialization.XmlAttributeOverrides\n  - type: System.Xml.Serialization.XmlAttributes\n    commentId: T:System.Xml.Serialization.XmlAttributes\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XmlSerializer.XmlSerializer(Type, XmlAttributeOverrides)\n- uid: System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)\n  commentId: M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)\n  id: '#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)'\n  parent: System.Xml.Serialization.XmlSerializer\n  langs:\n  - csharp\n  - vb\n  name: XmlSerializer(Type, XmlAttributeOverrides, Type[], XmlRootAttribute, String)\n  fullName: System.Xml.Serialization.XmlSerializer.XmlSerializer(System.Type, System.Xml.Serialization.XmlAttributeOverrides, System.Type[], System.Xml.Serialization.XmlRootAttribute, System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n    startLine: 185\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Xml.Serialization.XmlSerializer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class that can serialize objects of type <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> into XML document instances, and deserialize XML document instances into objects of type <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. Each object to be serialized can itself contain instances of classes, which this overload overrides with other classes. This overload also specifies the default namespace for all the XML elements and the class to use as the XML root element.</p>\\n\"\n  syntax:\n    content: public XmlSerializer(Type type, XmlAttributeOverrides overrides, Type[] extraTypes, XmlRootAttribute root, string defaultNamespace)\n    content.vb: Public Sub New(type As Type, overrides As XmlAttributeOverrides, extraTypes As Type(), root As XmlRootAttribute, defaultNamespace As String)\n    parameters:\n    - id: type\n      type: System.Type\n      description: \"\\n<p>The type of the object that this <xref href=\\\"System.Xml.Serialization.XmlSerializer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> can serialize. </p>\\n\"\n    - id: overrides\n      type: System.Xml.Serialization.XmlAttributeOverrides\n      description: \"\\n<p>An <xref href=\\\"System.Xml.Serialization.XmlAttributeOverrides\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that extends or overrides the behavior of the class specified in the <em>type</em> parameter. </p>\\n\"\n    - id: extraTypes\n      type: System.Type[]\n      description: \"\\n<p>A <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> array of additional object types to serialize. </p>\\n\"\n    - id: root\n      type: System.Xml.Serialization.XmlRootAttribute\n      description: \"\\n<p>An <xref href=\\\"System.Xml.Serialization.XmlRootAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that defines the XML root element properties. </p>\\n\"\n    - id: defaultNamespace\n      type: System.String\n      description: \"\\n<p>The default namespace of all XML elements in the XML document. </p>\\n\"\n  seealso:\n  - type: System.Xml.Serialization.XmlAttributeOverrides\n    commentId: T:System.Xml.Serialization.XmlAttributeOverrides\n  - type: System.Xml.Serialization.XmlRootAttribute\n    commentId: T:System.Xml.Serialization.XmlRootAttribute\n  - type: System.Xml.Serialization.XmlAttributes\n    commentId: T:System.Xml.Serialization.XmlAttributes\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Xml.Serialization.XmlSerializer.XmlSerializer(System.Type, System.Xml.Serialization.XmlAttributeOverrides, System.Type(), System.Xml.Serialization.XmlRootAttribute, System.String)\n  name.vb: XmlSerializer(Type, XmlAttributeOverrides, Type(), XmlRootAttribute, String)\n  nameWithType: XmlSerializer.XmlSerializer(Type, XmlAttributeOverrides, Type[], XmlRootAttribute, String)\n  nameWithType.vb: XmlSerializer.XmlSerializer(Type, XmlAttributeOverrides, Type(), XmlRootAttribute, String)\n- uid: System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlRootAttribute)\n  commentId: M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlRootAttribute)\n  id: '#ctor(System.Type,System.Xml.Serialization.XmlRootAttribute)'\n  parent: System.Xml.Serialization.XmlSerializer\n  langs:\n  - csharp\n  - vb\n  name: XmlSerializer(Type, XmlRootAttribute)\n  fullName: System.Xml.Serialization.XmlSerializer.XmlSerializer(System.Type, System.Xml.Serialization.XmlRootAttribute)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n    startLine: 186\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Xml.Serialization.XmlSerializer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class that can serialize objects of the specified type into XML documents, and deserialize an XML document into object of the specified type. It also specifies the class to use as the XML root element.</p>\\n\"\n  syntax:\n    content: public XmlSerializer(Type type, XmlRootAttribute root)\n    content.vb: Public Sub New(type As Type, root As XmlRootAttribute)\n    parameters:\n    - id: type\n      type: System.Type\n      description: \"\\n<p>The type of the object that this <xref href=\\\"System.Xml.Serialization.XmlSerializer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> can serialize. </p>\\n\"\n    - id: root\n      type: System.Xml.Serialization.XmlRootAttribute\n      description: \"\\n<p>An <xref href=\\\"System.Xml.Serialization.XmlRootAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents the XML root element. </p>\\n\"\n  seealso:\n  - type: System.Xml.Serialization.XmlAttributes\n    commentId: T:System.Xml.Serialization.XmlAttributes\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XmlSerializer.XmlSerializer(Type, XmlRootAttribute)\n- uid: System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)\n  commentId: M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)\n  id: CanDeserialize(System.Xml.XmlReader)\n  parent: System.Xml.Serialization.XmlSerializer\n  langs:\n  - csharp\n  - vb\n  name: CanDeserialize(XmlReader)\n  fullName: System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CanDeserialize\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n    startLine: 187\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  summary: \"\\n<p>Gets a value that indicates whether this <xref href=\\\"System.Xml.Serialization.XmlSerializer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> can deserialize a specified XML document.</p>\\n\"\n  syntax:\n    content: public virtual bool CanDeserialize(XmlReader xmlReader)\n    content.vb: Public Overridable Function CanDeserialize(xmlReader As XmlReader) As Boolean\n    parameters:\n    - id: xmlReader\n      type: System.Xml.XmlReader\n      description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that points to the document to deserialize. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if this <xref href=\\\"System.Xml.Serialization.XmlSerializer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> can deserialize the object that the <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> points to; otherwise, <strong>false</strong>.</p>\\n\"\n  seealso:\n  - type: System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)\n    commentId: M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XmlSerializer.CanDeserialize(XmlReader)\n- uid: System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)\n  commentId: M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)\n  id: Deserialize(System.IO.Stream)\n  parent: System.Xml.Serialization.XmlSerializer\n  langs:\n  - csharp\n  - vb\n  name: Deserialize(Stream)\n  fullName: System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Deserialize\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n    startLine: 188\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  summary: \"\\n<p>Deserializes the XML document contained by the specified <xref href=\\\"System.IO.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public object Deserialize(Stream stream)\n    content.vb: Public Function Deserialize(stream As Stream) As Object\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: \"\\n<p>The <xref href=\\\"System.IO.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the XML document to deserialize. </p>\\n\"\n    return:\n      type: System.Object\n      description: \"\\n<p>The <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> being deserialized.</p>\\n\"\n  seealso:\n  - type: System.Xml.Serialization.XmlAttributes\n    commentId: T:System.Xml.Serialization.XmlAttributes\n  - type: System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)\n    commentId: M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)\n  - type: System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)\n    commentId: M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XmlSerializer.Deserialize(Stream)\n- uid: System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)\n  commentId: M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)\n  id: Deserialize(System.IO.TextReader)\n  parent: System.Xml.Serialization.XmlSerializer\n  langs:\n  - csharp\n  - vb\n  name: Deserialize(TextReader)\n  fullName: System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Deserialize\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n    startLine: 189\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  summary: \"\\n<p>Deserializes the XML document contained by the specified <xref href=\\\"System.IO.TextReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public object Deserialize(TextReader textReader)\n    content.vb: Public Function Deserialize(textReader As TextReader) As Object\n    parameters:\n    - id: textReader\n      type: System.IO.TextReader\n      description: \"\\n<p>The <xref href=\\\"System.IO.TextReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the XML document to deserialize. </p>\\n\"\n    return:\n      type: System.Object\n      description: \"\\n<p>The <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> being deserialized.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An error occurred during deserialization. The original exception is available using the <xref href=\\\"System.Exception.InnerException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property. </p>\\n\"\n  seealso:\n  - type: System.Xml.Serialization.XmlAttributes\n    commentId: T:System.Xml.Serialization.XmlAttributes\n  - type: System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)\n    commentId: M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)\n  - type: System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)\n    commentId: M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XmlSerializer.Deserialize(TextReader)\n- uid: System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)\n  commentId: M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)\n  id: Deserialize(System.Xml.XmlReader)\n  parent: System.Xml.Serialization.XmlSerializer\n  langs:\n  - csharp\n  - vb\n  name: Deserialize(XmlReader)\n  fullName: System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Deserialize\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n    startLine: 190\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  summary: \"\\n<p>Deserializes the XML document contained by the specified <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public object Deserialize(XmlReader xmlReader)\n    content.vb: Public Function Deserialize(xmlReader As XmlReader) As Object\n    parameters:\n    - id: xmlReader\n      type: System.Xml.XmlReader\n      description: \"\\n<p>The <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the XML document to deserialize. </p>\\n\"\n    return:\n      type: System.Object\n      description: \"\\n<p>The <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> being deserialized.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An error occurred during deserialization. The original exception is available using the <xref href=\\\"System.Exception.InnerException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property. </p>\\n\"\n  seealso:\n  - type: System.Xml.Serialization.XmlAttributes\n    commentId: T:System.Xml.Serialization.XmlAttributes\n  - type: System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)\n    commentId: M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)\n  - type: System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)\n    commentId: M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XmlSerializer.Deserialize(XmlReader)\n- uid: System.Xml.Serialization.XmlSerializer.FromTypes(System.Type[])\n  commentId: M:System.Xml.Serialization.XmlSerializer.FromTypes(System.Type[])\n  id: FromTypes(System.Type[])\n  parent: System.Xml.Serialization.XmlSerializer\n  langs:\n  - csharp\n  - vb\n  name: FromTypes(Type[])\n  fullName: System.Xml.Serialization.XmlSerializer.FromTypes(System.Type[])\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: FromTypes\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n    startLine: 191\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  summary: \"\\n<p>Returns an array of <xref href=\\\"System.Xml.Serialization.XmlSerializer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects created from an array of types.</p>\\n\"\n  syntax:\n    content: public static XmlSerializer[] FromTypes(Type[] types)\n    content.vb: Public Shared Function FromTypes(types As Type()) As XmlSerializer()\n    parameters:\n    - id: types\n      type: System.Type[]\n      description: \"\\n<p>An array of <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects. </p>\\n\"\n    return:\n      type: System.Xml.Serialization.XmlSerializer[]\n      description: \"\\n<p>An array of <xref href=\\\"System.Xml.Serialization.XmlSerializer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects.</p>\\n\"\n  seealso:\n  - type: System.Xml.Serialization.XmlAttributes\n    commentId: T:System.Xml.Serialization.XmlAttributes\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Xml.Serialization.XmlSerializer.FromTypes(System.Type())\n  name.vb: FromTypes(Type())\n  nameWithType: XmlSerializer.FromTypes(Type[])\n  nameWithType.vb: XmlSerializer.FromTypes(Type())\n- uid: System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object)\n  commentId: M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object)\n  id: Serialize(System.IO.Stream,System.Object)\n  parent: System.Xml.Serialization.XmlSerializer\n  langs:\n  - csharp\n  - vb\n  name: Serialize(Stream, Object)\n  fullName: System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream, System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Serialize\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n    startLine: 192\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  summary: \"\\n<p>Serializes the specified <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and writes the XML document to a file using the specified <xref href=\\\"System.IO.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public void Serialize(Stream stream, object o)\n    content.vb: Public Sub Serialize(stream As Stream, o As Object)\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: \"\\n<p>The <xref href=\\\"System.IO.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> used to write the XML document. </p>\\n\"\n    - id: o\n      type: System.Object\n      description: \"\\n<p>The <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to serialize. </p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An error occurred during serialization. The original exception is available using the <xref href=\\\"System.Exception.InnerException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property. </p>\\n\"\n  seealso:\n  - type: System.Xml.Serialization.XmlAttributes\n    commentId: T:System.Xml.Serialization.XmlAttributes\n  - type: System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)\n    commentId: M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XmlSerializer.Serialize(Stream, Object)\n- uid: System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)\n  commentId: M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)\n  id: Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)\n  parent: System.Xml.Serialization.XmlSerializer\n  langs:\n  - csharp\n  - vb\n  name: Serialize(Stream, Object, XmlSerializerNamespaces)\n  fullName: System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream, System.Object, System.Xml.Serialization.XmlSerializerNamespaces)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Serialize\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n    startLine: 193\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  summary: \"\\n<p>Serializes the specified <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and writes the XML document to a file using the specified <xref href=\\\"System.IO.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>that references the specified namespaces.</p>\\n\"\n  syntax:\n    content: public void Serialize(Stream stream, object o, XmlSerializerNamespaces namespaces)\n    content.vb: Public Sub Serialize(stream As Stream, o As Object, namespaces As XmlSerializerNamespaces)\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: \"\\n<p>The <xref href=\\\"System.IO.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> used to write the XML document. </p>\\n\"\n    - id: o\n      type: System.Object\n      description: \"\\n<p>The <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to serialize. </p>\\n\"\n    - id: namespaces\n      type: System.Xml.Serialization.XmlSerializerNamespaces\n      description: \"\\n<p>The <xref href=\\\"System.Xml.Serialization.XmlSerializerNamespaces\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> referenced by the object. </p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An error occurred during serialization. The original exception is available using the <xref href=\\\"System.Exception.InnerException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property. </p>\\n\"\n  seealso:\n  - type: System.Xml.Serialization.XmlAttributes\n    commentId: T:System.Xml.Serialization.XmlAttributes\n  - type: System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)\n    commentId: M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XmlSerializer.Serialize(Stream, Object, XmlSerializerNamespaces)\n- uid: System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)\n  commentId: M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)\n  id: Serialize(System.IO.TextWriter,System.Object)\n  parent: System.Xml.Serialization.XmlSerializer\n  langs:\n  - csharp\n  - vb\n  name: Serialize(TextWriter, Object)\n  fullName: System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter, System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Serialize\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n    startLine: 194\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  summary: \"\\n<p>Serializes the specified <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and writes the XML document to a file using the specified <xref href=\\\"System.IO.TextWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public void Serialize(TextWriter textWriter, object o)\n    content.vb: Public Sub Serialize(textWriter As TextWriter, o As Object)\n    parameters:\n    - id: textWriter\n      type: System.IO.TextWriter\n      description: \"\\n<p>The <xref href=\\\"System.IO.TextWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> used to write the XML document. </p>\\n\"\n    - id: o\n      type: System.Object\n      description: \"\\n<p>The <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to serialize. </p>\\n\"\n  seealso:\n  - type: System.Xml.Serialization.XmlAttributes\n    commentId: T:System.Xml.Serialization.XmlAttributes\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XmlSerializer.Serialize(TextWriter, Object)\n- uid: System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)\n  commentId: M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)\n  id: Serialize(System.IO.TextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)\n  parent: System.Xml.Serialization.XmlSerializer\n  langs:\n  - csharp\n  - vb\n  name: Serialize(TextWriter, Object, XmlSerializerNamespaces)\n  fullName: System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter, System.Object, System.Xml.Serialization.XmlSerializerNamespaces)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Serialize\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n    startLine: 195\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  summary: \"\\n<p>Serializes the specified <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and writes the XML document to a file using the specified <xref href=\\\"System.IO.TextWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and references the specified namespaces.</p>\\n\"\n  syntax:\n    content: public void Serialize(TextWriter textWriter, object o, XmlSerializerNamespaces namespaces)\n    content.vb: Public Sub Serialize(textWriter As TextWriter, o As Object, namespaces As XmlSerializerNamespaces)\n    parameters:\n    - id: textWriter\n      type: System.IO.TextWriter\n      description: \"\\n<p>The <xref href=\\\"System.IO.TextWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> used to write the XML document. </p>\\n\"\n    - id: o\n      type: System.Object\n      description: \"\\n<p>The <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to serialize. </p>\\n\"\n    - id: namespaces\n      type: System.Xml.Serialization.XmlSerializerNamespaces\n      description: \"\\n<p>The <xref href=\\\"System.Xml.Serialization.XmlSerializerNamespaces\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains namespaces for the generated XML document. </p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An error occurred during serialization. The original exception is available using the <xref href=\\\"System.Exception.InnerException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property. </p>\\n\"\n  seealso:\n  - type: System.Xml.Serialization.XmlAttributes\n    commentId: T:System.Xml.Serialization.XmlAttributes\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XmlSerializer.Serialize(TextWriter, Object, XmlSerializerNamespaces)\n- uid: System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object)\n  commentId: M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object)\n  id: Serialize(System.Xml.XmlWriter,System.Object)\n  parent: System.Xml.Serialization.XmlSerializer\n  langs:\n  - csharp\n  - vb\n  name: Serialize(XmlWriter, Object)\n  fullName: System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter, System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Serialize\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n    startLine: 196\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  summary: \"\\n<p>Serializes the specified <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and writes the XML document to a file using the specified <xref href=\\\"System.Xml.XmlWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public void Serialize(XmlWriter xmlWriter, object o)\n    content.vb: Public Sub Serialize(xmlWriter As XmlWriter, o As Object)\n    parameters:\n    - id: xmlWriter\n      type: System.Xml.XmlWriter\n      description: \"\\n<p>The <xref href=\\\"System.Xml.XmlWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> used to write the XML document. </p>\\n\"\n    - id: o\n      type: System.Object\n      description: \"\\n<p>The <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to serialize. </p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An error occurred during serialization. The original exception is available using the <xref href=\\\"System.Exception.InnerException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property. </p>\\n\"\n  seealso:\n  - type: System.Xml.Serialization.XmlAttributes\n    commentId: T:System.Xml.Serialization.XmlAttributes\n  - type: System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)\n    commentId: M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XmlSerializer.Serialize(XmlWriter, Object)\n- uid: System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)\n  commentId: M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)\n  id: Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)\n  parent: System.Xml.Serialization.XmlSerializer\n  langs:\n  - csharp\n  - vb\n  name: Serialize(XmlWriter, Object, XmlSerializerNamespaces)\n  fullName: System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter, System.Object, System.Xml.Serialization.XmlSerializerNamespaces)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Serialize\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n    startLine: 197\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  summary: \"\\n<p>Serializes the specified <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and writes the XML document to a file using the specified <xref href=\\\"System.Xml.XmlWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and references the specified namespaces.</p>\\n\"\n  syntax:\n    content: public void Serialize(XmlWriter xmlWriter, object o, XmlSerializerNamespaces namespaces)\n    content.vb: Public Sub Serialize(xmlWriter As XmlWriter, o As Object, namespaces As XmlSerializerNamespaces)\n    parameters:\n    - id: xmlWriter\n      type: System.Xml.XmlWriter\n      description: \"\\n<p>The <xref href=\\\"System.Xml.XmlWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> used to write the XML document. </p>\\n\"\n    - id: o\n      type: System.Object\n      description: \"\\n<p>The <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to serialize. </p>\\n\"\n    - id: namespaces\n      type: System.Xml.Serialization.XmlSerializerNamespaces\n      description: \"\\n<p>The <xref href=\\\"System.Xml.Serialization.XmlSerializerNamespaces\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> referenced by the object. </p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An error occurred during serialization. The original exception is available using the <xref href=\\\"System.Exception.InnerException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property. </p>\\n\"\n  seealso:\n  - type: System.Xml.Serialization.XmlAttributes\n    commentId: T:System.Xml.Serialization.XmlAttributes\n  - type: System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)\n    commentId: M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XmlSerializer.Serialize(XmlWriter, Object, XmlSerializerNamespaces)\nreferences:\n- uid: System.Xml.Serialization\n  isExternal: false\n  name: System.Xml.Serialization\n  fullName: System.Xml.Serialization\n  commentId: N:System.Xml.Serialization\n  nameWithType: System.Xml.Serialization\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  fullName: System.Type\n  commentId: T:System.Type\n  nameWithType: Type\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.Type[]\n  name: Type[]\n  fullName: System.Type[]\n  fullname.vb: System.Type()\n  name.vb: Type()\n  spec.csharp:\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n  - name: ()\n    fullName: ()\n  nameWithType: Type[]\n  nameWithType.vb: Type()\n- uid: System.Xml.Serialization.XmlAttributeOverrides\n  parent: System.Xml.Serialization\n  isExternal: false\n  name: XmlAttributeOverrides\n  fullName: System.Xml.Serialization.XmlAttributeOverrides\n  commentId: T:System.Xml.Serialization.XmlAttributeOverrides\n  nameWithType: XmlAttributeOverrides\n- uid: System.Xml.Serialization.XmlRootAttribute\n  parent: System.Xml.Serialization\n  isExternal: false\n  name: XmlRootAttribute\n  fullName: System.Xml.Serialization.XmlRootAttribute\n  commentId: T:System.Xml.Serialization.XmlRootAttribute\n  nameWithType: XmlRootAttribute\n- uid: System.Xml.XmlReader\n  parent: System.Xml\n  isExternal: false\n  name: XmlReader\n  fullName: System.Xml.XmlReader\n  commentId: T:System.Xml.XmlReader\n  nameWithType: XmlReader\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.Xml\n  isExternal: false\n  name: System.Xml\n  fullName: System.Xml\n  commentId: N:System.Xml\n  nameWithType: System.Xml\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  fullName: System.IO.Stream\n  commentId: T:System.IO.Stream\n  nameWithType: Stream\n- uid: System.IO\n  isExternal: false\n  name: System.IO\n  fullName: System.IO\n  commentId: N:System.IO\n  nameWithType: System.IO\n- uid: System.IO.TextReader\n  parent: System.IO\n  isExternal: false\n  name: TextReader\n  fullName: System.IO.TextReader\n  commentId: T:System.IO.TextReader\n  nameWithType: TextReader\n- uid: System.Xml.Serialization.XmlSerializer[]\n  name: XmlSerializer[]\n  fullName: System.Xml.Serialization.XmlSerializer[]\n  fullname.vb: System.Xml.Serialization.XmlSerializer()\n  name.vb: XmlSerializer()\n  spec.csharp:\n  - uid: System.Xml.Serialization.XmlSerializer\n    name: XmlSerializer\n    fullName: System.Xml.Serialization.XmlSerializer\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Xml.Serialization.XmlSerializer\n    name: XmlSerializer\n    fullName: System.Xml.Serialization.XmlSerializer\n  - name: ()\n    fullName: ()\n  nameWithType: XmlSerializer[]\n  nameWithType.vb: XmlSerializer()\n- uid: System.Xml.Serialization.XmlSerializerNamespaces\n  parent: System.Xml.Serialization\n  isExternal: false\n  name: XmlSerializerNamespaces\n  fullName: System.Xml.Serialization.XmlSerializerNamespaces\n  commentId: T:System.Xml.Serialization.XmlSerializerNamespaces\n  nameWithType: XmlSerializerNamespaces\n- uid: System.IO.TextWriter\n  parent: System.IO\n  isExternal: false\n  name: TextWriter\n  fullName: System.IO.TextWriter\n  commentId: T:System.IO.TextWriter\n  nameWithType: TextWriter\n- uid: System.Xml.XmlWriter\n  parent: System.Xml\n  isExternal: false\n  name: XmlWriter\n  fullName: System.Xml.XmlWriter\n  commentId: T:System.Xml.XmlWriter\n  nameWithType: XmlWriter\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  fullName: System.InvalidOperationException\n  nameWithType: InvalidOperationException\n  commentId: T:System.InvalidOperationException\n"}