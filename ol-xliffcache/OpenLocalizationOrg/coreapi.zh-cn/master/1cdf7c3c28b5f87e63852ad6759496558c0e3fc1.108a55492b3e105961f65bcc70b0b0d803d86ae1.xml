{"nodes":[{"pos":[137,143],"content":"Action","needQuote":true,"nodes":[{"content":"Action","pos":[0,6]}]},{"pos":[1214,1220],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[1523,1538],"content":"GetMethodInfo()","needQuote":true,"nodes":[{"content":"GetMethodInfo()","pos":[0,15]}]},{"pos":[1707,1720],"content":"GetMethodInfo","needQuote":true,"nodes":[{"content":"GetMethodInfo","pos":[0,13]}]},{"pos":[1805,1806],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1833,1834],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1941,1954],"content":"GetMethodInfo","needQuote":true,"nodes":[{"content":"GetMethodInfo","pos":[0,13]}]},{"pos":[2039,2040],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[2067,2068],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[2348,2371],"content":"GetMethodInfo(Delegate)","needQuote":true,"nodes":[{"content":"GetMethodInfo(Delegate)","pos":[0,23]}]},{"pos":[2572,2585],"content":"GetMethodInfo","needQuote":true,"nodes":[{"content":"GetMethodInfo","pos":[0,13]}]},{"pos":[2670,2671],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[2723,2731],"content":"Delegate","needQuote":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[2793,2794],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[2918,2931],"content":"GetMethodInfo","needQuote":true,"nodes":[{"content":"GetMethodInfo","pos":[0,13]}]},{"pos":[3016,3017],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[3069,3077],"content":"Delegate","needQuote":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[3139,3140],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[3426,3453],"content":"RuntimeReflectionExtensions","needQuote":true,"nodes":[{"content":"RuntimeReflectionExtensions","pos":[0,27]}]},{"pos":[3670,3687],"content":"System.Reflection","needQuote":true,"nodes":[{"content":"System.Reflection","pos":[0,17]}]}],"content":"items:\n- uid: System.Action\n  commentId: T:System.Action\n  id: Action\n  parent: System\n  children: []\n  langs:\n  - csharp\n  - vb\n  name: Action\n  fullName: System.Action\n  type: Delegate\n  source:\n    remote:\n      path: src/mscorlib/src/System/Action.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Action\n    path: src/mscorlib/src/System/Action.cs\n    startLine: 15\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Encapsulates a method that has no parameters and does not return a value.</p>\\n\"\n  syntax:\n    content: >-\n      [TypeForwardedFrom(\"System.Core, Version=2.0.5.0, Culture=Neutral, PublicKeyToken=7cec85d7bea7798e\")]\n\n      public delegate void Action();\n    content.vb: >-\n      <TypeForwardedFrom(\"System.Core, Version=2.0.5.0, Culture=Neutral, PublicKeyToken=7cec85d7bea7798e\")>\n\n      Public Delegate Sub Action\n  seealso:\n  - type: System.Func`1\n    commentId: T:System.Func`1\n  modifiers.csharp:\n  - public\n  - delegate\n  modifiers.vb:\n  - Public\n  - Delegate\n  nameWithType: Action\n  extensionMethods:\n  - System.Delegate.System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\nreferences:\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Delegate.System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n  parent: System.Reflection.RuntimeReflectionExtensions\n  definition: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  name: GetMethodInfo()\n  fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo()\n  spec.csharp:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n    name: GetMethodInfo\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n    name: GetMethodInfo\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: RuntimeReflectionExtensions.GetMethodInfo()\n  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n- uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  isExternal: true\n  name: GetMethodInfo(Delegate)\n  fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  spec.csharp:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n    name: GetMethodInfo\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n  - name: (\n    fullName: (\n  - uid: System.Delegate\n    name: Delegate\n    fullName: System.Delegate\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n    name: GetMethodInfo\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n  - name: (\n    fullName: (\n  - uid: System.Delegate\n    name: Delegate\n    fullName: System.Delegate\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: RuntimeReflectionExtensions.GetMethodInfo(Delegate)\n  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n- uid: System.Reflection.RuntimeReflectionExtensions\n  parent: System.Reflection\n  isExternal: false\n  name: RuntimeReflectionExtensions\n  fullName: System.Reflection.RuntimeReflectionExtensions\n  nameWithType: RuntimeReflectionExtensions\n  commentId: T:System.Reflection.RuntimeReflectionExtensions\n- uid: System.Reflection\n  isExternal: false\n  name: System.Reflection\n  fullName: System.Reflection\n  nameWithType: System.Reflection\n  commentId: N:System.Reflection\n"}