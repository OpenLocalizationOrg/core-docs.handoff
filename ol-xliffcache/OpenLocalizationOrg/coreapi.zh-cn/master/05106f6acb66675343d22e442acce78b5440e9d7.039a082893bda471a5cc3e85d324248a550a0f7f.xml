{"nodes":[{"pos":[3397,3414],"content":"SerializationInfo","needQuote":true,"nodes":[{"content":"SerializationInfo","pos":[0,17]}]},{"pos":[5209,5253],"content":"SerializationInfo(Type, IFormatterConverter)","needQuote":true,"nodes":[{"content":"SerializationInfo(Type, IFormatterConverter)","pos":[0,44]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;type&lt;/em&gt; or &lt;em&gt;converter&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[6773,6841],"source":"\\n<p>\\n<em>type</em> or <em>converter</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[6842,6848],"source":" </p>\\n"},{"pos":[7415,7427],"content":"AssemblyName","needQuote":true,"nodes":[{"content":"AssemblyName","pos":[0,12]}]},{"content":"\\n&lt;p&gt;The full name of the assembly of the type to serialize.&lt;/p&gt;\\n","pos":[8284,8350],"source":"\\n<p>The full name of the assembly of the type to serialize.</p>\\n"},{"content":"\\n&lt;p&gt;The value the property is set to is &lt;strong&gt;null&lt;/strong&gt;.","pos":[8469,8532],"source":"\\n<p>The value the property is set to is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[8533,8539],"source":" </p>\\n"},{"pos":[8915,8927],"content":"FullTypeName","needQuote":true,"nodes":[{"content":"FullTypeName","pos":[0,12]}]},{"content":"\\n&lt;p&gt;The full name of the type to serialize.&lt;/p&gt;\\n","pos":[9745,9795],"source":"\\n<p>The full name of the type to serialize.</p>\\n"},{"content":"\\n&lt;p&gt;The value this property is set to is &lt;strong&gt;null&lt;/strong&gt;.","pos":[9914,9978],"source":"\\n<p>The value this property is set to is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[9979,9985],"source":" </p>\\n"},{"pos":[10358,10369],"content":"MemberCount","needQuote":true,"nodes":[{"content":"MemberCount","pos":[0,11]}]},{"pos":[11784,11794],"content":"ObjectType","needQuote":true,"nodes":[{"content":"ObjectType","pos":[0,10]}]},{"content":"\\n&lt;p&gt;The type of the object being serialized.&lt;/p&gt;\\n","pos":[12532,12583],"source":"\\n<p>The type of the object being serialized.</p>\\n"},{"pos":[13040,13065],"content":"AddValue(String, Boolean)","needQuote":true,"nodes":[{"content":"AddValue(String, Boolean)","pos":[0,25]}]},{"content":"\\n&lt;p&gt;The name to associate with the value, so it can be deserialized later.","pos":[13949,14024],"source":"\\n<p>The name to associate with the value, so it can be deserialized later."},{"content":"&lt;/p&gt;\\n","pos":[14025,14031],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The Boolean value to serialize.","pos":[14096,14132],"source":"\\n<p>The Boolean value to serialize."},{"content":"&lt;/p&gt;\\n","pos":[14133,14139],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;name&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.","pos":[14258,14316],"source":"\\n<p>The <em>name</em> parameter is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[14317,14323],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A value has already been associated with &lt;em&gt;name&lt;/em&gt;.","pos":[14474,14534],"source":"\\n<p>A value has already been associated with <em>name</em>."},{"content":"&lt;/p&gt;\\n","pos":[14535,14541],"source":" </p>\\n"},{"pos":[14983,15005],"content":"AddValue(String, Byte)","needQuote":true,"nodes":[{"content":"AddValue(String, Byte)","pos":[0,22]}]},{"content":"\\n&lt;p&gt;The name to associate with the value, so it can be deserialized later.","pos":[15899,15974],"source":"\\n<p>The name to associate with the value, so it can be deserialized later."},{"content":"&lt;/p&gt;\\n","pos":[15975,15981],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The byte value to serialize.","pos":[16043,16076],"source":"\\n<p>The byte value to serialize."},{"content":"&lt;/p&gt;\\n","pos":[16077,16083],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;name&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.","pos":[16202,16260],"source":"\\n<p>The <em>name</em> parameter is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[16261,16267],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A value has already been associated with &lt;em&gt;name&lt;/em&gt;.","pos":[16418,16478],"source":"\\n<p>A value has already been associated with <em>name</em>."},{"content":"&lt;/p&gt;\\n","pos":[16479,16485],"source":" </p>\\n"},{"pos":[16924,16946],"content":"AddValue(String, Char)","needQuote":true,"nodes":[{"content":"AddValue(String, Char)","pos":[0,22]}]},{"content":"\\n&lt;p&gt;The name to associate with the value, so it can be deserialized later.","pos":[17834,17909],"source":"\\n<p>The name to associate with the value, so it can be deserialized later."},{"content":"&lt;/p&gt;\\n","pos":[17910,17916],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The character value to serialize.","pos":[17978,18016],"source":"\\n<p>The character value to serialize."},{"content":"&lt;/p&gt;\\n","pos":[18017,18023],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;name&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.","pos":[18142,18200],"source":"\\n<p>The <em>name</em> parameter is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[18201,18207],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A value has already been associated with &lt;em&gt;name&lt;/em&gt;.","pos":[18358,18418],"source":"\\n<p>A value has already been associated with <em>name</em>."},{"content":"&lt;/p&gt;\\n","pos":[18419,18425],"source":" </p>\\n"},{"pos":[18876,18902],"content":"AddValue(String, DateTime)","needQuote":true,"nodes":[{"content":"AddValue(String, DateTime)","pos":[0,26]}]},{"content":"\\n&lt;p&gt;The name to associate with the value, so it can be deserialized later.","pos":[19856,19931],"source":"\\n<p>The name to associate with the value, so it can be deserialized later."},{"content":"&lt;/p&gt;\\n","pos":[19932,19938],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;name&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.","pos":[20234,20292],"source":"\\n<p>The <em>name</em> parameter is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[20293,20299],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A value has already been associated with &lt;em&gt;name&lt;/em&gt;.","pos":[20450,20510],"source":"\\n<p>A value has already been associated with <em>name</em>."},{"content":"&lt;/p&gt;\\n","pos":[20511,20517],"source":" </p>\\n"},{"pos":[20969,20994],"content":"AddValue(String, Decimal)","needQuote":true,"nodes":[{"content":"AddValue(String, Decimal)","pos":[0,25]}]},{"content":"\\n&lt;p&gt;The name to associate with the value, so it can be deserialized later.","pos":[21881,21956],"source":"\\n<p>The name to associate with the value, so it can be deserialized later."},{"content":"&lt;/p&gt;\\n","pos":[21957,21963],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The decimal value to serialize.","pos":[22028,22064],"source":"\\n<p>The decimal value to serialize."},{"content":"&lt;/p&gt;\\n","pos":[22065,22071],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;If The &lt;em&gt;name&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.","pos":[22190,22251],"source":"\\n<p>If The <em>name</em> parameter is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[22252,22258],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;If a value has already been associated with &lt;em&gt;name&lt;/em&gt;.","pos":[22409,22472],"source":"\\n<p>If a value has already been associated with <em>name</em>."},{"content":"&lt;/p&gt;\\n","pos":[22473,22479],"source":" </p>\\n"},{"pos":[22927,22951],"content":"AddValue(String, Double)","needQuote":true,"nodes":[{"content":"AddValue(String, Double)","pos":[0,24]}]},{"content":"\\n&lt;p&gt;The name to associate with the value, so it can be deserialized later.","pos":[23859,23934],"source":"\\n<p>The name to associate with the value, so it can be deserialized later."},{"content":"&lt;/p&gt;\\n","pos":[23935,23941],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The double value to serialize.","pos":[24005,24040],"source":"\\n<p>The double value to serialize."},{"content":"&lt;/p&gt;\\n","pos":[24041,24047],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;name&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.","pos":[24166,24224],"source":"\\n<p>The <em>name</em> parameter is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[24225,24231],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A value has already been associated with &lt;em&gt;name&lt;/em&gt;.","pos":[24382,24442],"source":"\\n<p>A value has already been associated with <em>name</em>."},{"content":"&lt;/p&gt;\\n","pos":[24443,24449],"source":" </p>\\n"},{"pos":[24893,24916],"content":"AddValue(String, Int16)","needQuote":true,"nodes":[{"content":"AddValue(String, Int16)","pos":[0,23]}]},{"content":"\\n&lt;p&gt;The name to associate with the value, so it can be deserialized later.","pos":[25811,25886],"source":"\\n<p>The name to associate with the value, so it can be deserialized later."},{"content":"&lt;/p&gt;\\n","pos":[25887,25893],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The &lt;strong&gt;Int16&lt;/strong&gt; value to serialize.","pos":[25956,26007],"source":"\\n<p>The <strong>Int16</strong> value to serialize."},{"content":"&lt;/p&gt;\\n","pos":[26008,26014],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;name&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.","pos":[26133,26191],"source":"\\n<p>The <em>name</em> parameter is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[26192,26198],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A value has already been associated with &lt;em&gt;name&lt;/em&gt;.","pos":[26349,26409],"source":"\\n<p>A value has already been associated with <em>name</em>."},{"content":"&lt;/p&gt;\\n","pos":[26410,26416],"source":" </p>\\n"},{"pos":[26859,26882],"content":"AddValue(String, Int32)","needQuote":true,"nodes":[{"content":"AddValue(String, Int32)","pos":[0,23]}]},{"content":"\\n&lt;p&gt;The name to associate with the value, so it can be deserialized later.","pos":[27777,27852],"source":"\\n<p>The name to associate with the value, so it can be deserialized later."},{"content":"&lt;/p&gt;\\n","pos":[27853,27859],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The &lt;strong&gt;Int32&lt;/strong&gt; value to serialize.","pos":[27922,27973],"source":"\\n<p>The <strong>Int32</strong> value to serialize."},{"content":"&lt;/p&gt;\\n","pos":[27974,27980],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;name&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.","pos":[28099,28157],"source":"\\n<p>The <em>name</em> parameter is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[28158,28164],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A value has already been associated with &lt;em&gt;name&lt;/em&gt;.","pos":[28315,28375],"source":"\\n<p>A value has already been associated with <em>name</em>."},{"content":"&lt;/p&gt;\\n","pos":[28376,28382],"source":" </p>\\n"},{"pos":[28825,28848],"content":"AddValue(String, Int64)","needQuote":true,"nodes":[{"content":"AddValue(String, Int64)","pos":[0,23]}]},{"content":"\\n&lt;p&gt;The name to associate with the value, so it can be deserialized later.","pos":[29741,29816],"source":"\\n<p>The name to associate with the value, so it can be deserialized later."},{"content":"&lt;/p&gt;\\n","pos":[29817,29823],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The Int64 value to serialize.","pos":[29886,29920],"source":"\\n<p>The Int64 value to serialize."},{"content":"&lt;/p&gt;\\n","pos":[29921,29927],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;name&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.","pos":[30046,30104],"source":"\\n<p>The <em>name</em> parameter is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[30105,30111],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A value has already been associated with &lt;em&gt;name&lt;/em&gt;.","pos":[30262,30322],"source":"\\n<p>A value has already been associated with <em>name</em>."},{"content":"&lt;/p&gt;\\n","pos":[30323,30329],"source":" </p>\\n"},{"pos":[30775,30799],"content":"AddValue(String, Object)","needQuote":true,"nodes":[{"content":"AddValue(String, Object)","pos":[0,24]}]},{"content":"\\n&lt;p&gt;The name to associate with the value, so it can be deserialized later.","pos":[31734,31809],"source":"\\n<p>The name to associate with the value, so it can be deserialized later."},{"content":"&lt;/p&gt;\\n","pos":[31810,31816],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The value to be serialized.","pos":[31880,31912],"source":"\\n<p>The value to be serialized."},{"content":"Any children of this object will automatically be serialized.","pos":[31913,31974]},{"content":"&lt;/p&gt;\\n","pos":[31975,31981],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[32100,32146],"source":"\\n<p>\\n<em>name</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[32147,32153],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A value has already been associated with &lt;em&gt;name&lt;/em&gt;.","pos":[32304,32364],"source":"\\n<p>A value has already been associated with <em>name</em>."},{"content":"&lt;/p&gt;\\n","pos":[32365,32371],"source":" </p>\\n"},{"pos":[32854,32884],"content":"AddValue(String, Object, Type)","needQuote":true,"nodes":[{"content":"AddValue(String, Object, Type)","pos":[0,30]}]},{"content":"\\n&lt;p&gt;The name to associate with the value, so it can be deserialized later.","pos":[33968,34043],"source":"\\n<p>The name to associate with the value, so it can be deserialized later."},{"content":"&lt;/p&gt;\\n","pos":[34044,34050],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The value to be serialized.","pos":[34114,34146],"source":"\\n<p>The value to be serialized."},{"content":"Any children of this object will automatically be serialized.","pos":[34147,34208]},{"content":"&lt;/p&gt;\\n","pos":[34209,34215],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;If &lt;em&gt;name&lt;/em&gt; or &lt;em&gt;type&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[34611,34675],"source":"\\n<p>If <em>name</em> or <em>type</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[34676,34682],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A value has already been associated with &lt;em&gt;name&lt;/em&gt;.","pos":[34833,34893],"source":"\\n<p>A value has already been associated with <em>name</em>."},{"content":"&lt;/p&gt;\\n","pos":[34894,34900],"source":" </p>\\n"},{"pos":[35350,35373],"content":"AddValue(String, SByte)","needQuote":true,"nodes":[{"content":"AddValue(String, SByte)","pos":[0,23]}]},{"content":"\\n&lt;p&gt;The name to associate with the value, so it can be deserialized later.","pos":[36344,36419],"source":"\\n<p>The name to associate with the value, so it can be deserialized later."},{"content":"&lt;/p&gt;\\n","pos":[36420,36426],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The &lt;strong&gt;Sbyte&lt;/strong&gt; value to serialize.","pos":[36489,36540],"source":"\\n<p>The <strong>Sbyte</strong> value to serialize."},{"content":"&lt;/p&gt;\\n","pos":[36541,36547],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;name&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.","pos":[36666,36724],"source":"\\n<p>The <em>name</em> parameter is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[36725,36731],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A value has already been associated with &lt;em&gt;name&lt;/em&gt;.","pos":[36882,36942],"source":"\\n<p>A value has already been associated with <em>name</em>."},{"content":"&lt;/p&gt;\\n","pos":[36943,36949],"source":" </p>\\n"},{"pos":[37570,37594],"content":"AddValue(String, Single)","needQuote":true,"nodes":[{"content":"AddValue(String, Single)","pos":[0,24]}]},{"content":"\\n&lt;p&gt;The name to associate with the value, so it can be deserialized later.","pos":[38501,38576],"source":"\\n<p>The name to associate with the value, so it can be deserialized later."},{"content":"&lt;/p&gt;\\n","pos":[38577,38583],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The single value to serialize.","pos":[38647,38682],"source":"\\n<p>The single value to serialize."},{"content":"&lt;/p&gt;\\n","pos":[38683,38689],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;name&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.","pos":[38808,38866],"source":"\\n<p>The <em>name</em> parameter is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[38867,38873],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A value has already been associated with &lt;em&gt;name&lt;/em&gt;.","pos":[39024,39084],"source":"\\n<p>A value has already been associated with <em>name</em>."},{"content":"&lt;/p&gt;\\n","pos":[39085,39091],"source":" </p>\\n"},{"pos":[39538,39562],"content":"AddValue(String, UInt16)","needQuote":true,"nodes":[{"content":"AddValue(String, UInt16)","pos":[0,24]}]},{"content":"\\n&lt;p&gt;The name to associate with the value, so it can be deserialized later.","pos":[40538,40613],"source":"\\n<p>The name to associate with the value, so it can be deserialized later."},{"content":"&lt;/p&gt;\\n","pos":[40614,40620],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The &lt;strong&gt;UInt16&lt;/strong&gt; value to serialize.","pos":[40684,40736],"source":"\\n<p>The <strong>UInt16</strong> value to serialize."},{"content":"&lt;/p&gt;\\n","pos":[40737,40743],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;name&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.","pos":[40862,40920],"source":"\\n<p>The <em>name</em> parameter is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[40921,40927],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A value has already been associated with &lt;em&gt;name&lt;/em&gt;.","pos":[41078,41138],"source":"\\n<p>A value has already been associated with <em>name</em>."},{"content":"&lt;/p&gt;\\n","pos":[41139,41145],"source":" </p>\\n"},{"pos":[41767,41791],"content":"AddValue(String, UInt32)","needQuote":true,"nodes":[{"content":"AddValue(String, UInt32)","pos":[0,24]}]},{"content":"\\n&lt;p&gt;The name to associate with the value, so it can be deserialized later.","pos":[42767,42842],"source":"\\n<p>The name to associate with the value, so it can be deserialized later."},{"content":"&lt;/p&gt;\\n","pos":[42843,42849],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The &lt;strong&gt;UInt32&lt;/strong&gt; value to serialize.","pos":[42913,42965],"source":"\\n<p>The <strong>UInt32</strong> value to serialize."},{"content":"&lt;/p&gt;\\n","pos":[42966,42972],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;name&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.","pos":[43091,43149],"source":"\\n<p>The <em>name</em> parameter is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[43150,43156],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A value has already been associated with &lt;em&gt;name&lt;/em&gt;.","pos":[43307,43367],"source":"\\n<p>A value has already been associated with <em>name</em>."},{"content":"&lt;/p&gt;\\n","pos":[43368,43374],"source":" </p>\\n"},{"pos":[43996,44020],"content":"AddValue(String, UInt64)","needQuote":true,"nodes":[{"content":"AddValue(String, UInt64)","pos":[0,24]}]},{"content":"\\n&lt;p&gt;The name to associate with the value, so it can be deserialized later.","pos":[44994,45069],"source":"\\n<p>The name to associate with the value, so it can be deserialized later."},{"content":"&lt;/p&gt;\\n","pos":[45070,45076],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The &lt;strong&gt;UInt64&lt;/strong&gt; value to serialize.","pos":[45140,45192],"source":"\\n<p>The <strong>UInt64</strong> value to serialize."},{"content":"&lt;/p&gt;\\n","pos":[45193,45199],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;name&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.","pos":[45318,45376],"source":"\\n<p>The <em>name</em> parameter is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[45377,45383],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A value has already been associated with &lt;em&gt;name&lt;/em&gt;.","pos":[45534,45594],"source":"\\n<p>A value has already been associated with <em>name</em>."},{"content":"&lt;/p&gt;\\n","pos":[45595,45601],"source":" </p>\\n"},{"pos":[46187,46205],"content":"GetBoolean(String)","needQuote":true,"nodes":[{"content":"GetBoolean(String)","pos":[0,18]}]},{"content":"\\n&lt;p&gt;The name associated with the value to retrieve.","pos":[47072,47124],"source":"\\n<p>The name associated with the value to retrieve."},{"content":"&lt;/p&gt;\\n","pos":[47125,47131],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The Boolean value associated with &lt;em&gt;name&lt;/em&gt;.&lt;/p&gt;\\n","pos":[47192,47251],"source":"\\n<p>The Boolean value associated with <em>name</em>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[47370,47416],"source":"\\n<p>\\n<em>name</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[47417,47423],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The value associated with &lt;em&gt;name&lt;/em&gt; cannot be converted to a Boolean value.","pos":[47526,47610],"source":"\\n<p>The value associated with <em>name</em> cannot be converted to a Boolean value."},{"content":"&lt;/p&gt;\\n","pos":[47611,47617],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An element with the specified name is not found in the current instance.","pos":[47768,47845],"source":"\\n<p>An element with the specified name is not found in the current instance."},{"content":"&lt;/p&gt;\\n","pos":[47846,47852],"source":" </p>\\n"},{"pos":[48248,48263],"content":"GetByte(String)","needQuote":true,"nodes":[{"content":"GetByte(String)","pos":[0,15]}]},{"content":"\\n&lt;p&gt;The name associated with the value to retrieve.","pos":[49131,49183],"source":"\\n<p>The name associated with the value to retrieve."},{"content":"&lt;/p&gt;\\n","pos":[49184,49190],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The 8-bit unsigned integer associated with &lt;em&gt;name&lt;/em&gt;.&lt;/p&gt;\\n","pos":[49248,49316],"source":"\\n<p>The 8-bit unsigned integer associated with <em>name</em>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[49435,49481],"source":"\\n<p>\\n<em>name</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[49482,49488],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The value associated with &lt;em&gt;name&lt;/em&gt; cannot be converted to an 8-bit unsigned integer.","pos":[49591,49685],"source":"\\n<p>The value associated with <em>name</em> cannot be converted to an 8-bit unsigned integer."},{"content":"&lt;/p&gt;\\n","pos":[49686,49692],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An element with the specified name is not found in the current instance.","pos":[49843,49920],"source":"\\n<p>An element with the specified name is not found in the current instance."},{"content":"&lt;/p&gt;\\n","pos":[49921,49927],"source":" </p>\\n"},{"pos":[50320,50335],"content":"GetChar(String)","needQuote":true,"nodes":[{"content":"GetChar(String)","pos":[0,15]}]},{"content":"\\n&lt;p&gt;The name associated with the value to retrieve.&lt;/p&gt;\\n","pos":[51197,51255],"source":"\\n<p>The name associated with the value to retrieve.</p>\\n"},{"content":"\\n&lt;p&gt;The Unicode character associated with &lt;em&gt;name&lt;/em&gt;.&lt;/p&gt;\\n","pos":[51313,51376],"source":"\\n<p>The Unicode character associated with <em>name</em>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[51495,51541],"source":"\\n<p>\\n<em>name</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[51542,51548],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The value associated with &lt;em&gt;name&lt;/em&gt; cannot be converted to a Unicode character.","pos":[51651,51739],"source":"\\n<p>The value associated with <em>name</em> cannot be converted to a Unicode character."},{"content":"&lt;/p&gt;\\n","pos":[51740,51746],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An element with the specified name is not found in the current instance.","pos":[51897,51974],"source":"\\n<p>An element with the specified name is not found in the current instance."},{"content":"&lt;/p&gt;\\n","pos":[51975,51981],"source":" </p>\\n"},{"pos":[52386,52405],"content":"GetDateTime(String)","needQuote":true,"nodes":[{"content":"GetDateTime(String)","pos":[0,19]}]},{"content":"\\n&lt;p&gt;The name associated with the value to retrieve.","pos":[53345,53397],"source":"\\n<p>The name associated with the value to retrieve."},{"content":"&lt;/p&gt;\\n","pos":[53399,53405],"source":"  </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[53713,53759],"source":"\\n<p>\\n<em>name</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[53760,53766],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An element with the specified name is not found in the current instance.","pos":[54179,54256],"source":"\\n<p>An element with the specified name is not found in the current instance."},{"content":"&lt;/p&gt;\\n","pos":[54257,54263],"source":" </p>\\n"},{"pos":[54669,54687],"content":"GetDecimal(String)","needQuote":true,"nodes":[{"content":"GetDecimal(String)","pos":[0,18]}]},{"content":"\\n&lt;p&gt;The name associated with the value to retrieve.","pos":[55557,55609],"source":"\\n<p>The name associated with the value to retrieve."},{"content":"&lt;/p&gt;\\n","pos":[55611,55617],"source":"  </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[55940,55986],"source":"\\n<p>\\n<em>name</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[55987,55993],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The value associated with &lt;em&gt;name&lt;/em&gt; cannot be converted to a decimal.","pos":[56096,56174],"source":"\\n<p>The value associated with <em>name</em> cannot be converted to a decimal."},{"content":"&lt;/p&gt;\\n","pos":[56175,56181],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An element with the specified name is not found in the current instance.","pos":[56332,56409],"source":"\\n<p>An element with the specified name is not found in the current instance."},{"content":"&lt;/p&gt;\\n","pos":[56410,56416],"source":" </p>\\n"},{"pos":[56818,56835],"content":"GetDouble(String)","needQuote":true,"nodes":[{"content":"GetDouble(String)","pos":[0,17]}]},{"content":"\\n&lt;p&gt;The name associated with the value to retrieve.&lt;/p&gt;\\n","pos":[57723,57781],"source":"\\n<p>The name associated with the value to retrieve.</p>\\n"},{"content":"\\n&lt;p&gt;The double-precision floating-point value associated with &lt;em&gt;name&lt;/em&gt;.&lt;/p&gt;\\n","pos":[57841,57924],"source":"\\n<p>The double-precision floating-point value associated with <em>name</em>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[58043,58089],"source":"\\n<p>\\n<em>name</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[58090,58096],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The value associated with &lt;em&gt;name&lt;/em&gt; cannot be converted to a double-precision floating-point value.","pos":[58199,58307],"source":"\\n<p>The value associated with <em>name</em> cannot be converted to a double-precision floating-point value."},{"content":"&lt;/p&gt;\\n","pos":[58308,58314],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An element with the specified name is not found in the current instance.","pos":[58465,58542],"source":"\\n<p>An element with the specified name is not found in the current instance."},{"content":"&lt;/p&gt;\\n","pos":[58543,58549],"source":" </p>\\n"},{"pos":[58917,58932],"content":"GetEnumerator()","needQuote":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[60671,60687],"content":"GetInt16(String)","needQuote":true,"nodes":[{"content":"GetInt16(String)","pos":[0,16]}]},{"content":"\\n&lt;p&gt;The name associated with the value to retrieve.&lt;/p&gt;\\n","pos":[61559,61617],"source":"\\n<p>The name associated with the value to retrieve.</p>\\n"},{"content":"\\n&lt;p&gt;The 16-bit signed integer associated with &lt;em&gt;name&lt;/em&gt;.&lt;/p&gt;\\n","pos":[61676,61743],"source":"\\n<p>The 16-bit signed integer associated with <em>name</em>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[61862,61908],"source":"\\n<p>\\n<em>name</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[61909,61915],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The value associated with &lt;em&gt;name&lt;/em&gt; cannot be converted to a 16-bit signed integer.","pos":[62018,62110],"source":"\\n<p>The value associated with <em>name</em> cannot be converted to a 16-bit signed integer."},{"content":"&lt;/p&gt;\\n","pos":[62111,62117],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An element with the specified name is not found in the current instance.","pos":[62268,62345],"source":"\\n<p>An element with the specified name is not found in the current instance."},{"content":"&lt;/p&gt;\\n","pos":[62346,62352],"source":" </p>\\n"},{"pos":[62749,62765],"content":"GetInt32(String)","needQuote":true,"nodes":[{"content":"GetInt32(String)","pos":[0,16]}]},{"content":"\\n&lt;p&gt;The name of the value to retrieve.","pos":[63637,63676],"source":"\\n<p>The name of the value to retrieve."},{"content":"&lt;/p&gt;\\n","pos":[63677,63683],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The 32-bit signed integer associated with &lt;em&gt;name&lt;/em&gt;.&lt;/p&gt;\\n","pos":[63742,63809],"source":"\\n<p>The 32-bit signed integer associated with <em>name</em>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[63928,63974],"source":"\\n<p>\\n<em>name</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[63975,63981],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The value associated with &lt;em&gt;name&lt;/em&gt; cannot be converted to a 32-bit signed integer.","pos":[64084,64176],"source":"\\n<p>The value associated with <em>name</em> cannot be converted to a 32-bit signed integer."},{"content":"&lt;/p&gt;\\n","pos":[64177,64183],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An element with the specified name is not found in the current instance.","pos":[64334,64411],"source":"\\n<p>An element with the specified name is not found in the current instance."},{"content":"&lt;/p&gt;\\n","pos":[64412,64418],"source":" </p>\\n"},{"pos":[64815,64831],"content":"GetInt64(String)","needQuote":true,"nodes":[{"content":"GetInt64(String)","pos":[0,16]}]},{"content":"\\n&lt;p&gt;The name associated with the value to retrieve.&lt;/p&gt;\\n","pos":[65701,65759],"source":"\\n<p>The name associated with the value to retrieve.</p>\\n"},{"content":"\\n&lt;p&gt;The 64-bit signed integer associated with &lt;em&gt;name&lt;/em&gt;.&lt;/p&gt;\\n","pos":[65818,65885],"source":"\\n<p>The 64-bit signed integer associated with <em>name</em>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[66004,66050],"source":"\\n<p>\\n<em>name</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[66051,66057],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The value associated with &lt;em&gt;name&lt;/em&gt; cannot be converted to a 64-bit signed integer.","pos":[66160,66252],"source":"\\n<p>The value associated with <em>name</em> cannot be converted to a 64-bit signed integer."},{"content":"&lt;/p&gt;\\n","pos":[66253,66259],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An element with the specified name is not found in the current instance.","pos":[66410,66487],"source":"\\n<p>An element with the specified name is not found in the current instance."},{"content":"&lt;/p&gt;\\n","pos":[66488,66494],"source":" </p>\\n"},{"pos":[66891,66907],"content":"GetSByte(String)","needQuote":true,"nodes":[{"content":"GetSByte(String)","pos":[0,16]}]},{"content":"\\n&lt;p&gt;The name associated with the value to retrieve.&lt;/p&gt;\\n","pos":[67855,67913],"source":"\\n<p>The name associated with the value to retrieve.</p>\\n"},{"content":"\\n&lt;p&gt;The 8-bit signed integer associated with &lt;em&gt;name&lt;/em&gt;.&lt;/p&gt;\\n","pos":[67972,68038],"source":"\\n<p>The 8-bit signed integer associated with <em>name</em>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[68157,68203],"source":"\\n<p>\\n<em>name</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[68204,68210],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The value associated with &lt;em&gt;name&lt;/em&gt; cannot be converted to an 8-bit signed integer.","pos":[68313,68405],"source":"\\n<p>The value associated with <em>name</em> cannot be converted to an 8-bit signed integer."},{"content":"&lt;/p&gt;\\n","pos":[68406,68412],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An element with the specified name is not found in the current instance.","pos":[68563,68640],"source":"\\n<p>An element with the specified name is not found in the current instance."},{"content":"&lt;/p&gt;\\n","pos":[68641,68647],"source":" </p>\\n"},{"pos":[69222,69239],"content":"GetSingle(String)","needQuote":true,"nodes":[{"content":"GetSingle(String)","pos":[0,17]}]},{"content":"\\n&lt;p&gt;The name of the value to retrieve.","pos":[70126,70165],"source":"\\n<p>The name of the value to retrieve."},{"content":"&lt;/p&gt;\\n","pos":[70166,70172],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The single-precision floating-point value associated with &lt;em&gt;name&lt;/em&gt;.&lt;/p&gt;\\n","pos":[70232,70315],"source":"\\n<p>The single-precision floating-point value associated with <em>name</em>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[70434,70480],"source":"\\n<p>\\n<em>name</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[70481,70487],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The value associated with &lt;em&gt;name&lt;/em&gt; cannot be converted to a single-precision floating-point value.","pos":[70590,70698],"source":"\\n<p>The value associated with <em>name</em> cannot be converted to a single-precision floating-point value."},{"content":"&lt;/p&gt;\\n","pos":[70699,70705],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An element with the specified name is not found in the current instance.","pos":[70856,70933],"source":"\\n<p>An element with the specified name is not found in the current instance."},{"content":"&lt;/p&gt;\\n","pos":[70934,70940],"source":" </p>\\n"},{"pos":[71341,71358],"content":"GetString(String)","needQuote":true,"nodes":[{"content":"GetString(String)","pos":[0,17]}]},{"content":"\\n&lt;p&gt;The name associated with the value to retrieve.&lt;/p&gt;\\n","pos":[72288,72346],"source":"\\n<p>The name associated with the value to retrieve.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[72644,72690],"source":"\\n<p>\\n<em>name</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[72691,72697],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An element with the specified name is not found in the current instance.","pos":[73102,73179],"source":"\\n<p>An element with the specified name is not found in the current instance."},{"content":"&lt;/p&gt;\\n","pos":[73180,73186],"source":" </p>\\n"},{"pos":[73587,73604],"content":"GetUInt16(String)","needQuote":true,"nodes":[{"content":"GetUInt16(String)","pos":[0,17]}]},{"content":"\\n&lt;p&gt;The name associated with the value to retrieve.&lt;/p&gt;\\n","pos":[74560,74618],"source":"\\n<p>The name associated with the value to retrieve.</p>\\n"},{"content":"\\n&lt;p&gt;The 16-bit unsigned integer associated with &lt;em&gt;name&lt;/em&gt;.&lt;/p&gt;\\n","pos":[74678,74747],"source":"\\n<p>The 16-bit unsigned integer associated with <em>name</em>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[74866,74912],"source":"\\n<p>\\n<em>name</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[74913,74919],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The value associated with &lt;em&gt;name&lt;/em&gt; cannot be converted to a 16-bit unsigned integer.","pos":[75022,75116],"source":"\\n<p>The value associated with <em>name</em> cannot be converted to a 16-bit unsigned integer."},{"content":"&lt;/p&gt;\\n","pos":[75117,75123],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An element with the specified name is not found in the current instance.","pos":[75274,75351],"source":"\\n<p>An element with the specified name is not found in the current instance."},{"content":"&lt;/p&gt;\\n","pos":[75352,75358],"source":" </p>\\n"},{"pos":[75934,75951],"content":"GetUInt32(String)","needQuote":true,"nodes":[{"content":"GetUInt32(String)","pos":[0,17]}]},{"content":"\\n&lt;p&gt;The name associated with the value to retrieve.&lt;/p&gt;\\n","pos":[76907,76965],"source":"\\n<p>The name associated with the value to retrieve.</p>\\n"},{"content":"\\n&lt;p&gt;The 32-bit unsigned integer associated with &lt;em&gt;name&lt;/em&gt;.&lt;/p&gt;\\n","pos":[77025,77094],"source":"\\n<p>The 32-bit unsigned integer associated with <em>name</em>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[77213,77259],"source":"\\n<p>\\n<em>name</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[77260,77266],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The value associated with &lt;em&gt;name&lt;/em&gt; cannot be converted to a 32-bit unsigned integer.","pos":[77369,77463],"source":"\\n<p>The value associated with <em>name</em> cannot be converted to a 32-bit unsigned integer."},{"content":"&lt;/p&gt;\\n","pos":[77464,77470],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An element with the specified name is not found in the current instance.","pos":[77621,77698],"source":"\\n<p>An element with the specified name is not found in the current instance."},{"content":"&lt;/p&gt;\\n","pos":[77699,77705],"source":" </p>\\n"},{"pos":[78281,78298],"content":"GetUInt64(String)","needQuote":true,"nodes":[{"content":"GetUInt64(String)","pos":[0,17]}]},{"content":"\\n&lt;p&gt;The name associated with the value to retrieve.&lt;/p&gt;\\n","pos":[79252,79310],"source":"\\n<p>The name associated with the value to retrieve.</p>\\n"},{"content":"\\n&lt;p&gt;The 64-bit unsigned integer associated with &lt;em&gt;name&lt;/em&gt;.&lt;/p&gt;\\n","pos":[79370,79439],"source":"\\n<p>The 64-bit unsigned integer associated with <em>name</em>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[79558,79604],"source":"\\n<p>\\n<em>name</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[79605,79611],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The value associated with &lt;em&gt;name&lt;/em&gt; cannot be converted to a 64-bit unsigned integer.","pos":[79714,79808],"source":"\\n<p>The value associated with <em>name</em> cannot be converted to a 64-bit unsigned integer."},{"content":"&lt;/p&gt;\\n","pos":[79809,79815],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An element with the specified name is not found in the current instance.","pos":[79966,80043],"source":"\\n<p>An element with the specified name is not found in the current instance."},{"content":"&lt;/p&gt;\\n","pos":[80044,80050],"source":" </p>\\n"},{"pos":[80659,80681],"content":"GetValue(String, Type)","needQuote":true,"nodes":[{"content":"GetValue(String, Type)","pos":[0,22]}]},{"content":"\\n&lt;p&gt;The name associated with the value to retrieve.&lt;/p&gt;\\n","pos":[81649,81707],"source":"\\n<p>The name associated with the value to retrieve.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; or &lt;em&gt;type&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[82368,82431],"source":"\\n<p>\\n<em>name</em> or <em>type</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[82432,82438],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The value associated with &lt;em&gt;name&lt;/em&gt; cannot be converted to &lt;em&gt;type&lt;/em&gt;.","pos":[82541,82623],"source":"\\n<p>The value associated with <em>name</em> cannot be converted to <em>type</em>."},{"content":"&lt;/p&gt;\\n","pos":[82624,82630],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An element with the specified name is not found in the current instance.","pos":[82781,82858],"source":"\\n<p>An element with the specified name is not found in the current instance."},{"content":"&lt;/p&gt;\\n","pos":[82859,82865],"source":" </p>\\n"},{"pos":[83259,83272],"content":"SetType(Type)","needQuote":true,"nodes":[{"content":"SetType(Type)","pos":[0,13]}]},{"content":"\\n&lt;p&gt;The &lt;em&gt;type&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.","pos":[84375,84433],"source":"\\n<p>The <em>type</em> parameter is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[84434,84440],"source":" </p>\\n"},{"pos":[84624,84652],"content":"System.Runtime.Serialization","needQuote":true,"nodes":[{"content":"System.Runtime.Serialization","pos":[0,28]}]},{"pos":[84849,84855],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[85015,85025],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[85120,85128],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[85197,85198],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[85225,85226],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[85296,85304],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[85373,85374],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[85401,85402],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[85585,85599],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[85718,85724],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[85791,85792],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[85842,85848],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[85908,85909],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[85992,85998],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[86065,86066],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[86116,86122],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[86182,86183],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[86397,86419],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[86567,86573],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[86640,86641],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[86691,86697],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[86758,86759]},{"pos":[86814,86820],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[86880,86881],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[86978,86984],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[87051,87052],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[87102,87108],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[87169,87170]},{"pos":[87225,87231],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[87291,87292],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[87537,87568],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[87734,87749],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[87825,87826],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[87876,87882],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[87943,87944]},{"pos":[87999,88005],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[88065,88066],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[88172,88187],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[88263,88264],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[88314,88320],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[88381,88382]},{"pos":[88437,88443],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[88503,88504],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[88734,88747],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[88848,88859],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[88931,88932],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[88959,88960],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[89033,89044],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[89116,89117],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[89144,89145],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[89320,89329],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[89422,89429],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[89497,89498],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[89525,89526],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[89595,89602],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[89670,89671],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[89698,89699],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[89874,89891],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[90000,90015],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[90091,90092],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[90119,90120],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[90197,90212],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[90288,90289],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[90316,90317],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[90462,90468],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[90597,90601],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[90797,90816],"content":"IFormatterConverter","needQuote":true,"nodes":[{"content":"IFormatterConverter","pos":[0,19]}]},{"pos":[91044,91050],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[91194,91199],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[91342,91349],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[91495,91499],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[91636,91640],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[91781,91789],"content":"DateTime","needQuote":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[91941,91948],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[92096,92102],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[92246,92251],"content":"Int16","needQuote":true,"nodes":[{"content":"Int16","pos":[0,5]}]},{"pos":[92392,92397],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[92538,92543],"content":"SByte","needQuote":true,"nodes":[{"content":"SByte","pos":[0,5]}]},{"pos":[92685,92691],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[92836,92842],"content":"UInt16","needQuote":true,"nodes":[{"content":"UInt16","pos":[0,6]}]},{"pos":[92987,92993],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[93138,93144],"content":"UInt64","needQuote":true,"nodes":[{"content":"UInt64","pos":[0,6]}]},{"pos":[93354,93381],"content":"SerializationInfoEnumerator","needQuote":true,"nodes":[{"content":"SerializationInfoEnumerator","pos":[0,27]}]},{"pos":[93631,93652],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[93863,93885],"content":"SerializationException","needQuote":true,"nodes":[{"content":"SerializationException","pos":[0,22]}]},{"pos":[94119,94139],"content":"InvalidCastException","needQuote":true,"nodes":[{"content":"InvalidCastException","pos":[0,20]}]}],"content":"items:\n- uid: System.Runtime.Serialization.SerializationInfo\n  commentId: T:System.Runtime.Serialization.SerializationInfo\n  id: SerializationInfo\n  parent: System.Runtime.Serialization\n  children:\n  - System.Runtime.Serialization.SerializationInfo.#ctor(System.Type,System.Runtime.Serialization.IFormatterConverter)\n  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Boolean)\n  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Byte)\n  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Char)\n  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.DateTime)\n  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Decimal)\n  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Double)\n  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int16)\n  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int32)\n  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int64)\n  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Object)\n  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Object,System.Type)\n  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.SByte)\n  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Single)\n  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt16)\n  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt32)\n  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt64)\n  - System.Runtime.Serialization.SerializationInfo.AssemblyName\n  - System.Runtime.Serialization.SerializationInfo.FullTypeName\n  - System.Runtime.Serialization.SerializationInfo.GetBoolean(System.String)\n  - System.Runtime.Serialization.SerializationInfo.GetByte(System.String)\n  - System.Runtime.Serialization.SerializationInfo.GetChar(System.String)\n  - System.Runtime.Serialization.SerializationInfo.GetDateTime(System.String)\n  - System.Runtime.Serialization.SerializationInfo.GetDecimal(System.String)\n  - System.Runtime.Serialization.SerializationInfo.GetDouble(System.String)\n  - System.Runtime.Serialization.SerializationInfo.GetEnumerator\n  - System.Runtime.Serialization.SerializationInfo.GetInt16(System.String)\n  - System.Runtime.Serialization.SerializationInfo.GetInt32(System.String)\n  - System.Runtime.Serialization.SerializationInfo.GetInt64(System.String)\n  - System.Runtime.Serialization.SerializationInfo.GetSByte(System.String)\n  - System.Runtime.Serialization.SerializationInfo.GetSingle(System.String)\n  - System.Runtime.Serialization.SerializationInfo.GetString(System.String)\n  - System.Runtime.Serialization.SerializationInfo.GetUInt16(System.String)\n  - System.Runtime.Serialization.SerializationInfo.GetUInt32(System.String)\n  - System.Runtime.Serialization.SerializationInfo.GetUInt64(System.String)\n  - System.Runtime.Serialization.SerializationInfo.GetValue(System.String,System.Type)\n  - System.Runtime.Serialization.SerializationInfo.MemberCount\n  - System.Runtime.Serialization.SerializationInfo.ObjectType\n  - System.Runtime.Serialization.SerializationInfo.SetType(System.Type)\n  langs:\n  - csharp\n  - vb\n  name: SerializationInfo\n  fullName: System.Runtime.Serialization.SerializationInfo\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: SerializationInfo\n    path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n    startLine: 30\n  assemblies:\n  - System.Runtime.Serialization.Formatters\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Stores all the data needed to serialize or deserialize an object. This class cannot be inherited.</p>\\n\"\n  syntax:\n    content: >-\n      [ComVisible(true)]\n\n      public sealed class SerializationInfo\n    content.vb: >-\n      <ComVisible(True)>\n\n      Public NotInheritable Class SerializationInfo\n  seealso:\n  - type: System.Runtime.Serialization.ISerializable\n    commentId: T:System.Runtime.Serialization.ISerializable\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: SerializationInfo\n- uid: System.Runtime.Serialization.SerializationInfo.#ctor(System.Type,System.Runtime.Serialization.IFormatterConverter)\n  commentId: M:System.Runtime.Serialization.SerializationInfo.#ctor(System.Type,System.Runtime.Serialization.IFormatterConverter)\n  id: '#ctor(System.Type,System.Runtime.Serialization.IFormatterConverter)'\n  parent: System.Runtime.Serialization.SerializationInfo\n  langs:\n  - csharp\n  - vb\n  name: SerializationInfo(Type, IFormatterConverter)\n  fullName: System.Runtime.Serialization.SerializationInfo.SerializationInfo(System.Type, System.Runtime.Serialization.IFormatterConverter)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n    startLine: 52\n  assemblies:\n  - System.Runtime.Serialization.Formatters\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Creates a new instance of the <xref href=\\\"System.Runtime.Serialization.SerializationInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: >-\n      [CLSCompliant(false)]\n\n      public SerializationInfo(Type type, IFormatterConverter converter)\n    content.vb: >-\n      <CLSCompliant(False)>\n\n      Public Sub New(type As Type, converter As IFormatterConverter)\n    parameters:\n    - id: type\n      type: System.Type\n      description: \"\\n<p>The <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the object to serialize. </p>\\n\"\n    - id: converter\n      type: System.Runtime.Serialization.IFormatterConverter\n      description: \"\\n<p>The <xref href=\\\"System.Runtime.Serialization.IFormatterConverter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> used during deserialization. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>type</em> or <em>converter</em> is <strong>null</strong>. </p>\\n\"\n  attributes:\n  - type: System.CLSCompliantAttribute\n    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)\n    arguments:\n    - type: System.Boolean\n      value: false\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SerializationInfo.SerializationInfo(Type, IFormatterConverter)\n- uid: System.Runtime.Serialization.SerializationInfo.AssemblyName\n  commentId: P:System.Runtime.Serialization.SerializationInfo.AssemblyName\n  id: AssemblyName\n  parent: System.Runtime.Serialization.SerializationInfo\n  langs:\n  - csharp\n  - vb\n  name: AssemblyName\n  fullName: System.Runtime.Serialization.SerializationInfo.AssemblyName\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: AssemblyName\n    path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n    startLine: 107\n  assemblies:\n  - System.Runtime.Serialization.Formatters\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Gets or sets the assembly name of the type to serialize during serialization only.</p>\\n\"\n  syntax:\n    content: >-\n      public string AssemblyName\n\n      {\n          get;\n          [SecuritySafeCritical]\n          set;\n      }\n    content.vb: Public Property AssemblyName As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The full name of the assembly of the type to serialize.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The value the property is set to is <strong>null</strong>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: SerializationInfo.AssemblyName\n- uid: System.Runtime.Serialization.SerializationInfo.FullTypeName\n  commentId: P:System.Runtime.Serialization.SerializationInfo.FullTypeName\n  id: FullTypeName\n  parent: System.Runtime.Serialization.SerializationInfo\n  langs:\n  - csharp\n  - vb\n  name: FullTypeName\n  fullName: System.Runtime.Serialization.SerializationInfo.FullTypeName\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: FullTypeName\n    path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n    startLine: 88\n  assemblies:\n  - System.Runtime.Serialization.Formatters\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Gets or sets the full name of the <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to serialize.</p>\\n\"\n  syntax:\n    content: public string FullTypeName { get; set; }\n    content.vb: Public Property FullTypeName As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The full name of the type to serialize.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The value this property is set to is <strong>null</strong>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: SerializationInfo.FullTypeName\n- uid: System.Runtime.Serialization.SerializationInfo.MemberCount\n  commentId: P:System.Runtime.Serialization.SerializationInfo.MemberCount\n  id: MemberCount\n  parent: System.Runtime.Serialization.SerializationInfo\n  langs:\n  - csharp\n  - vb\n  name: MemberCount\n  fullName: System.Runtime.Serialization.SerializationInfo.MemberCount\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: MemberCount\n    path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n    startLine: 202\n  assemblies:\n  - System.Runtime.Serialization.Formatters\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Gets the number of members that have been added to the <xref href=\\\"System.Runtime.Serialization.SerializationInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> store.</p>\\n\"\n  syntax:\n    content: public int MemberCount { get; }\n    content.vb: Public ReadOnly Property MemberCount As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The number of members that have been added to the current <xref href=\\\"System.Runtime.Serialization.SerializationInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: SerializationInfo.MemberCount\n- uid: System.Runtime.Serialization.SerializationInfo.ObjectType\n  commentId: P:System.Runtime.Serialization.SerializationInfo.ObjectType\n  id: ObjectType\n  parent: System.Runtime.Serialization.SerializationInfo\n  langs:\n  - csharp\n  - vb\n  name: ObjectType\n  fullName: System.Runtime.Serialization.SerializationInfo.ObjectType\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ObjectType\n    path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n    startLine: 210\n  assemblies:\n  - System.Runtime.Serialization.Formatters\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Returns the type of the object to be serialized.</p>\\n\"\n  syntax:\n    content: public Type ObjectType { get; }\n    content.vb: Public ReadOnly Property ObjectType As Type\n    parameters: []\n    return:\n      type: System.Type\n      description: \"\\n<p>The type of the object being serialized.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: SerializationInfo.ObjectType\n- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Boolean)\n  commentId: M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Boolean)\n  id: AddValue(System.String,System.Boolean)\n  parent: System.Runtime.Serialization.SerializationInfo\n  langs:\n  - csharp\n  - vb\n  name: AddValue(String, Boolean)\n  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(System.String, System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: AddValue\n    path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n    startLine: 304\n  assemblies:\n  - System.Runtime.Serialization.Formatters\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Adds a Boolean value into the <xref href=\\\"System.Runtime.Serialization.SerializationInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> store.</p>\\n\"\n  syntax:\n    content: public void AddValue(string name, bool value)\n    content.vb: Public Sub AddValue(name As String, value As Boolean)\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name to associate with the value, so it can be deserialized later. </p>\\n\"\n    - id: value\n      type: System.Boolean\n      description: \"\\n<p>The Boolean value to serialize. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>name</em> parameter is <strong>null</strong>. </p>\\n\"\n  - type: System.Runtime.Serialization.SerializationException\n    commentId: T:System.Runtime.Serialization.SerializationException\n    description: \"\\n<p>A value has already been associated with <em>name</em>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SerializationInfo.AddValue(String, Boolean)\n- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Byte)\n  commentId: M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Byte)\n  id: AddValue(System.String,System.Byte)\n  parent: System.Runtime.Serialization.SerializationInfo\n  langs:\n  - csharp\n  - vb\n  name: AddValue(String, Byte)\n  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(System.String, System.Byte)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: AddValue\n    path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n    startLine: 321\n  assemblies:\n  - System.Runtime.Serialization.Formatters\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Adds an 8-bit unsigned integer value into the <xref href=\\\"System.Runtime.Serialization.SerializationInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> store.</p>\\n\"\n  syntax:\n    content: public void AddValue(string name, byte value)\n    content.vb: Public Sub AddValue(name As String, value As Byte)\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name to associate with the value, so it can be deserialized later. </p>\\n\"\n    - id: value\n      type: System.Byte\n      description: \"\\n<p>The byte value to serialize. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>name</em> parameter is <strong>null</strong>. </p>\\n\"\n  - type: System.Runtime.Serialization.SerializationException\n    commentId: T:System.Runtime.Serialization.SerializationException\n    description: \"\\n<p>A value has already been associated with <em>name</em>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SerializationInfo.AddValue(String, Byte)\n- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Char)\n  commentId: M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Char)\n  id: AddValue(System.String,System.Char)\n  parent: System.Runtime.Serialization.SerializationInfo\n  langs:\n  - csharp\n  - vb\n  name: AddValue(String, Char)\n  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(System.String, System.Char)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: AddValue\n    path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n    startLine: 309\n  assemblies:\n  - System.Runtime.Serialization.Formatters\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Adds a Unicode character value into the <xref href=\\\"System.Runtime.Serialization.SerializationInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> store.</p>\\n\"\n  syntax:\n    content: public void AddValue(string name, char value)\n    content.vb: Public Sub AddValue(name As String, value As Char)\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name to associate with the value, so it can be deserialized later. </p>\\n\"\n    - id: value\n      type: System.Char\n      description: \"\\n<p>The character value to serialize. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>name</em> parameter is <strong>null</strong>. </p>\\n\"\n  - type: System.Runtime.Serialization.SerializationException\n    commentId: T:System.Runtime.Serialization.SerializationException\n    description: \"\\n<p>A value has already been associated with <em>name</em>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SerializationInfo.AddValue(String, Char)\n- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.DateTime)\n  commentId: M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.DateTime)\n  id: AddValue(System.String,System.DateTime)\n  parent: System.Runtime.Serialization.SerializationInfo\n  langs:\n  - csharp\n  - vb\n  name: AddValue(String, DateTime)\n  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(System.String, System.DateTime)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: AddValue\n    path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n    startLine: 374\n  assemblies:\n  - System.Runtime.Serialization.Formatters\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Adds a <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value into the <xref href=\\\"System.Runtime.Serialization.SerializationInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> store.</p>\\n\"\n  syntax:\n    content: public void AddValue(string name, DateTime value)\n    content.vb: Public Sub AddValue(name As String, value As Date)\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name to associate with the value, so it can be deserialized later. </p>\\n\"\n    - id: value\n      type: System.DateTime\n      description: \"\\n<p>The <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value to serialize. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>name</em> parameter is <strong>null</strong>. </p>\\n\"\n  - type: System.Runtime.Serialization.SerializationException\n    commentId: T:System.Runtime.Serialization.SerializationException\n    description: \"\\n<p>A value has already been associated with <em>name</em>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SerializationInfo.AddValue(String, DateTime)\n- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Decimal)\n  commentId: M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Decimal)\n  id: AddValue(System.String,System.Decimal)\n  parent: System.Runtime.Serialization.SerializationInfo\n  langs:\n  - csharp\n  - vb\n  name: AddValue(String, Decimal)\n  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(System.String, System.Decimal)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: AddValue\n    path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n    startLine: 369\n  assemblies:\n  - System.Runtime.Serialization.Formatters\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Adds a decimal value into the <xref href=\\\"System.Runtime.Serialization.SerializationInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> store.</p>\\n\"\n  syntax:\n    content: public void AddValue(string name, decimal value)\n    content.vb: Public Sub AddValue(name As String, value As Decimal)\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name to associate with the value, so it can be deserialized later. </p>\\n\"\n    - id: value\n      type: System.Decimal\n      description: \"\\n<p>The decimal value to serialize. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>If The <em>name</em> parameter is <strong>null</strong>. </p>\\n\"\n  - type: System.Runtime.Serialization.SerializationException\n    commentId: T:System.Runtime.Serialization.SerializationException\n    description: \"\\n<p>If a value has already been associated with <em>name</em>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SerializationInfo.AddValue(String, Decimal)\n- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Double)\n  commentId: M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Double)\n  id: AddValue(System.String,System.Double)\n  parent: System.Runtime.Serialization.SerializationInfo\n  langs:\n  - csharp\n  - vb\n  name: AddValue(String, Double)\n  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(System.String, System.Double)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: AddValue\n    path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n    startLine: 364\n  assemblies:\n  - System.Runtime.Serialization.Formatters\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Adds a double-precision floating-point value into the <xref href=\\\"System.Runtime.Serialization.SerializationInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> store.</p>\\n\"\n  syntax:\n    content: public void AddValue(string name, double value)\n    content.vb: Public Sub AddValue(name As String, value As Double)\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name to associate with the value, so it can be deserialized later. </p>\\n\"\n    - id: value\n      type: System.Double\n      description: \"\\n<p>The double value to serialize. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>name</em> parameter is <strong>null</strong>. </p>\\n\"\n  - type: System.Runtime.Serialization.SerializationException\n    commentId: T:System.Runtime.Serialization.SerializationException\n    description: \"\\n<p>A value has already been associated with <em>name</em>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SerializationInfo.AddValue(String, Double)\n- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int16)\n  commentId: M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int16)\n  id: AddValue(System.String,System.Int16)\n  parent: System.Runtime.Serialization.SerializationInfo\n  langs:\n  - csharp\n  - vb\n  name: AddValue(String, Int16)\n  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(System.String, System.Int16)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: AddValue\n    path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n    startLine: 326\n  assemblies:\n  - System.Runtime.Serialization.Formatters\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Adds a 16-bit signed integer value into the <xref href=\\\"System.Runtime.Serialization.SerializationInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> store.</p>\\n\"\n  syntax:\n    content: public void AddValue(string name, short value)\n    content.vb: Public Sub AddValue(name As String, value As Short)\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name to associate with the value, so it can be deserialized later. </p>\\n\"\n    - id: value\n      type: System.Int16\n      description: \"\\n<p>The <strong>Int16</strong> value to serialize. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>name</em> parameter is <strong>null</strong>. </p>\\n\"\n  - type: System.Runtime.Serialization.SerializationException\n    commentId: T:System.Runtime.Serialization.SerializationException\n    description: \"\\n<p>A value has already been associated with <em>name</em>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SerializationInfo.AddValue(String, Int16)\n- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int32)\n  commentId: M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int32)\n  id: AddValue(System.String,System.Int32)\n  parent: System.Runtime.Serialization.SerializationInfo\n  langs:\n  - csharp\n  - vb\n  name: AddValue(String, Int32)\n  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(System.String, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: AddValue\n    path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n    startLine: 337\n  assemblies:\n  - System.Runtime.Serialization.Formatters\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Adds a 32-bit signed integer value into the <xref href=\\\"System.Runtime.Serialization.SerializationInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> store.</p>\\n\"\n  syntax:\n    content: public void AddValue(string name, int value)\n    content.vb: Public Sub AddValue(name As String, value As Integer)\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name to associate with the value, so it can be deserialized later. </p>\\n\"\n    - id: value\n      type: System.Int32\n      description: \"\\n<p>The <strong>Int32</strong> value to serialize. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>name</em> parameter is <strong>null</strong>. </p>\\n\"\n  - type: System.Runtime.Serialization.SerializationException\n    commentId: T:System.Runtime.Serialization.SerializationException\n    description: \"\\n<p>A value has already been associated with <em>name</em>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SerializationInfo.AddValue(String, Int32)\n- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int64)\n  commentId: M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int64)\n  id: AddValue(System.String,System.Int64)\n  parent: System.Runtime.Serialization.SerializationInfo\n  langs:\n  - csharp\n  - vb\n  name: AddValue(String, Int64)\n  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(System.String, System.Int64)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: AddValue\n    path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n    startLine: 348\n  assemblies:\n  - System.Runtime.Serialization.Formatters\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Adds a 64-bit signed integer value into the <xref href=\\\"System.Runtime.Serialization.SerializationInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> store.</p>\\n\"\n  syntax:\n    content: public void AddValue(string name, long value)\n    content.vb: Public Sub AddValue(name As String, value As Long)\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name to associate with the value, so it can be deserialized later. </p>\\n\"\n    - id: value\n      type: System.Int64\n      description: \"\\n<p>The Int64 value to serialize. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>name</em> parameter is <strong>null</strong>. </p>\\n\"\n  - type: System.Runtime.Serialization.SerializationException\n    commentId: T:System.Runtime.Serialization.SerializationException\n    description: \"\\n<p>A value has already been associated with <em>name</em>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SerializationInfo.AddValue(String, Int64)\n- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Object)\n  commentId: M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Object)\n  id: AddValue(System.String,System.Object)\n  parent: System.Runtime.Serialization.SerializationInfo\n  langs:\n  - csharp\n  - vb\n  name: AddValue(String, Object)\n  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(System.String, System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: AddValue\n    path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n    startLine: 292\n  assemblies:\n  - System.Runtime.Serialization.Formatters\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Adds the specified object into the <xref href=\\\"System.Runtime.Serialization.SerializationInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> store, where it is associated with a specified name.</p>\\n\"\n  syntax:\n    content: public void AddValue(string name, object value)\n    content.vb: Public Sub AddValue(name As String, value As Object)\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name to associate with the value, so it can be deserialized later. </p>\\n\"\n    - id: value\n      type: System.Object\n      description: \"\\n<p>The value to be serialized. Any children of this object will automatically be serialized. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>name</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.Runtime.Serialization.SerializationException\n    commentId: T:System.Runtime.Serialization.SerializationException\n    description: \"\\n<p>A value has already been associated with <em>name</em>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SerializationInfo.AddValue(String, Object)\n- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Object,System.Type)\n  commentId: M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Object,System.Type)\n  id: AddValue(System.String,System.Object,System.Type)\n  parent: System.Runtime.Serialization.SerializationInfo\n  langs:\n  - csharp\n  - vb\n  name: AddValue(String, Object, Type)\n  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(System.String, System.Object, System.Type)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: AddValue\n    path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n    startLine: 276\n  assemblies:\n  - System.Runtime.Serialization.Formatters\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Adds a value into the <xref href=\\\"System.Runtime.Serialization.SerializationInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> store, where <em>value</em> is associated with <em>name</em> and is serialized as being of <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref><em>type</em>.</p>\\n\"\n  syntax:\n    content: public void AddValue(string name, object value, Type type)\n    content.vb: Public Sub AddValue(name As String, value As Object, type As Type)\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name to associate with the value, so it can be deserialized later. </p>\\n\"\n    - id: value\n      type: System.Object\n      description: \"\\n<p>The value to be serialized. Any children of this object will automatically be serialized. </p>\\n\"\n    - id: type\n      type: System.Type\n      description: \"\\n<p>The <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to associate with the current object. This parameter must always be the type of the object itself or of one of its base classes. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>If <em>name</em> or <em>type</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.Runtime.Serialization.SerializationException\n    commentId: T:System.Runtime.Serialization.SerializationException\n    description: \"\\n<p>A value has already been associated with <em>name</em>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SerializationInfo.AddValue(String, Object, Type)\n- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.SByte)\n  commentId: M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.SByte)\n  id: AddValue(System.String,System.SByte)\n  parent: System.Runtime.Serialization.SerializationInfo\n  langs:\n  - csharp\n  - vb\n  name: AddValue(String, SByte)\n  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(System.String, System.SByte)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: AddValue\n    path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n    startLine: 315\n  assemblies:\n  - System.Runtime.Serialization.Formatters\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Adds an 8-bit signed integer value into the <xref href=\\\"System.Runtime.Serialization.SerializationInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> store.</p>\\n\"\n  syntax:\n    content: >-\n      [CLSCompliant(false)]\n\n      public void AddValue(string name, sbyte value)\n    content.vb: >-\n      <CLSCompliant(False)>\n\n      Public Sub AddValue(name As String, value As SByte)\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name to associate with the value, so it can be deserialized later. </p>\\n\"\n    - id: value\n      type: System.SByte\n      description: \"\\n<p>The <strong>Sbyte</strong> value to serialize. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>name</em> parameter is <strong>null</strong>. </p>\\n\"\n  - type: System.Runtime.Serialization.SerializationException\n    commentId: T:System.Runtime.Serialization.SerializationException\n    description: \"\\n<p>A value has already been associated with <em>name</em>. </p>\\n\"\n  attributes:\n  - type: System.CLSCompliantAttribute\n    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)\n    arguments:\n    - type: System.Boolean\n      value: false\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SerializationInfo.AddValue(String, SByte)\n- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Single)\n  commentId: M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Single)\n  id: AddValue(System.String,System.Single)\n  parent: System.Runtime.Serialization.SerializationInfo\n  langs:\n  - csharp\n  - vb\n  name: AddValue(String, Single)\n  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(System.String, System.Single)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: AddValue\n    path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n    startLine: 359\n  assemblies:\n  - System.Runtime.Serialization.Formatters\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Adds a single-precision floating-point value into the <xref href=\\\"System.Runtime.Serialization.SerializationInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> store.</p>\\n\"\n  syntax:\n    content: public void AddValue(string name, float value)\n    content.vb: Public Sub AddValue(name As String, value As Single)\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name to associate with the value, so it can be deserialized later. </p>\\n\"\n    - id: value\n      type: System.Single\n      description: \"\\n<p>The single value to serialize. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>name</em> parameter is <strong>null</strong>. </p>\\n\"\n  - type: System.Runtime.Serialization.SerializationException\n    commentId: T:System.Runtime.Serialization.SerializationException\n    description: \"\\n<p>A value has already been associated with <em>name</em>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SerializationInfo.AddValue(String, Single)\n- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt16)\n  commentId: M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt16)\n  id: AddValue(System.String,System.UInt16)\n  parent: System.Runtime.Serialization.SerializationInfo\n  langs:\n  - csharp\n  - vb\n  name: AddValue(String, UInt16)\n  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(System.String, System.UInt16)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: AddValue\n    path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n    startLine: 331\n  assemblies:\n  - System.Runtime.Serialization.Formatters\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Adds a 16-bit unsigned integer value into the <xref href=\\\"System.Runtime.Serialization.SerializationInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> store.</p>\\n\"\n  syntax:\n    content: >-\n      [CLSCompliant(false)]\n\n      public void AddValue(string name, ushort value)\n    content.vb: >-\n      <CLSCompliant(False)>\n\n      Public Sub AddValue(name As String, value As UShort)\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name to associate with the value, so it can be deserialized later. </p>\\n\"\n    - id: value\n      type: System.UInt16\n      description: \"\\n<p>The <strong>UInt16</strong> value to serialize. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>name</em> parameter is <strong>null</strong>. </p>\\n\"\n  - type: System.Runtime.Serialization.SerializationException\n    commentId: T:System.Runtime.Serialization.SerializationException\n    description: \"\\n<p>A value has already been associated with <em>name</em>. </p>\\n\"\n  attributes:\n  - type: System.CLSCompliantAttribute\n    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)\n    arguments:\n    - type: System.Boolean\n      value: false\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SerializationInfo.AddValue(String, UInt16)\n- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt32)\n  commentId: M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt32)\n  id: AddValue(System.String,System.UInt32)\n  parent: System.Runtime.Serialization.SerializationInfo\n  langs:\n  - csharp\n  - vb\n  name: AddValue(String, UInt32)\n  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(System.String, System.UInt32)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: AddValue\n    path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n    startLine: 342\n  assemblies:\n  - System.Runtime.Serialization.Formatters\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Adds a 32-bit unsigned integer value into the <xref href=\\\"System.Runtime.Serialization.SerializationInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> store.</p>\\n\"\n  syntax:\n    content: >-\n      [CLSCompliant(false)]\n\n      public void AddValue(string name, uint value)\n    content.vb: >-\n      <CLSCompliant(False)>\n\n      Public Sub AddValue(name As String, value As UInteger)\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name to associate with the value, so it can be deserialized later. </p>\\n\"\n    - id: value\n      type: System.UInt32\n      description: \"\\n<p>The <strong>UInt32</strong> value to serialize. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>name</em> parameter is <strong>null</strong>. </p>\\n\"\n  - type: System.Runtime.Serialization.SerializationException\n    commentId: T:System.Runtime.Serialization.SerializationException\n    description: \"\\n<p>A value has already been associated with <em>name</em>. </p>\\n\"\n  attributes:\n  - type: System.CLSCompliantAttribute\n    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)\n    arguments:\n    - type: System.Boolean\n      value: false\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SerializationInfo.AddValue(String, UInt32)\n- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt64)\n  commentId: M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt64)\n  id: AddValue(System.String,System.UInt64)\n  parent: System.Runtime.Serialization.SerializationInfo\n  langs:\n  - csharp\n  - vb\n  name: AddValue(String, UInt64)\n  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(System.String, System.UInt64)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: AddValue\n    path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n    startLine: 353\n  assemblies:\n  - System.Runtime.Serialization.Formatters\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Adds a 64-bit unsigned integer value into the <xref href=\\\"System.Runtime.Serialization.SerializationInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> store.</p>\\n\"\n  syntax:\n    content: >-\n      [CLSCompliant(false)]\n\n      public void AddValue(string name, ulong value)\n    content.vb: >-\n      <CLSCompliant(False)>\n\n      Public Sub AddValue(name As String, value As ULong)\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name to associate with the value, so it can be deserialized later. </p>\\n\"\n    - id: value\n      type: System.UInt64\n      description: \"\\n<p>The <strong>UInt64</strong> value to serialize. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>name</em> parameter is <strong>null</strong>. </p>\\n\"\n  - type: System.Runtime.Serialization.SerializationException\n    commentId: T:System.Runtime.Serialization.SerializationException\n    description: \"\\n<p>A value has already been associated with <em>name</em>. </p>\\n\"\n  attributes:\n  - type: System.CLSCompliantAttribute\n    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)\n    arguments:\n    - type: System.Boolean\n      value: false\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SerializationInfo.AddValue(String, UInt64)\n- uid: System.Runtime.Serialization.SerializationInfo.GetBoolean(System.String)\n  commentId: M:System.Runtime.Serialization.SerializationInfo.GetBoolean(System.String)\n  id: GetBoolean(System.String)\n  parent: System.Runtime.Serialization.SerializationInfo\n  langs:\n  - csharp\n  - vb\n  name: GetBoolean(String)\n  fullName: System.Runtime.Serialization.SerializationInfo.GetBoolean(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetBoolean\n    path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n    startLine: 570\n  assemblies:\n  - System.Runtime.Serialization.Formatters\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Retrieves a Boolean value from the <xref href=\\\"System.Runtime.Serialization.SerializationInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> store.</p>\\n\"\n  syntax:\n    content: public bool GetBoolean(string name)\n    content.vb: Public Function GetBoolean(name As String) As Boolean\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name associated with the value to retrieve. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>The Boolean value associated with <em>name</em>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>name</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>The value associated with <em>name</em> cannot be converted to a Boolean value. </p>\\n\"\n  - type: System.Runtime.Serialization.SerializationException\n    commentId: T:System.Runtime.Serialization.SerializationException\n    description: \"\\n<p>An element with the specified name is not found in the current instance. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SerializationInfo.GetBoolean(String)\n- uid: System.Runtime.Serialization.SerializationInfo.GetByte(System.String)\n  commentId: M:System.Runtime.Serialization.SerializationInfo.GetByte(System.String)\n  id: GetByte(System.String)\n  parent: System.Runtime.Serialization.SerializationInfo\n  langs:\n  - csharp\n  - vb\n  name: GetByte(String)\n  fullName: System.Runtime.Serialization.SerializationInfo.GetByte(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetByte\n    path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n    startLine: 610\n  assemblies:\n  - System.Runtime.Serialization.Formatters\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Retrieves an 8-bit unsigned integer value from the <xref href=\\\"System.Runtime.Serialization.SerializationInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> store.</p>\\n\"\n  syntax:\n    content: public byte GetByte(string name)\n    content.vb: Public Function GetByte(name As String) As Byte\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name associated with the value to retrieve. </p>\\n\"\n    return:\n      type: System.Byte\n      description: \"\\n<p>The 8-bit unsigned integer associated with <em>name</em>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>name</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>The value associated with <em>name</em> cannot be converted to an 8-bit unsigned integer. </p>\\n\"\n  - type: System.Runtime.Serialization.SerializationException\n    commentId: T:System.Runtime.Serialization.SerializationException\n    description: \"\\n<p>An element with the specified name is not found in the current instance. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SerializationInfo.GetByte(String)\n- uid: System.Runtime.Serialization.SerializationInfo.GetChar(System.String)\n  commentId: M:System.Runtime.Serialization.SerializationInfo.GetChar(System.String)\n  id: GetChar(System.String)\n  parent: System.Runtime.Serialization.SerializationInfo\n  langs:\n  - csharp\n  - vb\n  name: GetChar(String)\n  fullName: System.Runtime.Serialization.SerializationInfo.GetChar(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetChar\n    path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n    startLine: 583\n  assemblies:\n  - System.Runtime.Serialization.Formatters\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Retrieves a Unicode character value from the <xref href=\\\"System.Runtime.Serialization.SerializationInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> store.</p>\\n\"\n  syntax:\n    content: public char GetChar(string name)\n    content.vb: Public Function GetChar(name As String) As Char\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name associated with the value to retrieve.</p>\\n\"\n    return:\n      type: System.Char\n      description: \"\\n<p>The Unicode character associated with <em>name</em>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>name</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>The value associated with <em>name</em> cannot be converted to a Unicode character. </p>\\n\"\n  - type: System.Runtime.Serialization.SerializationException\n    commentId: T:System.Runtime.Serialization.SerializationException\n    description: \"\\n<p>An element with the specified name is not found in the current instance. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SerializationInfo.GetChar(String)\n- uid: System.Runtime.Serialization.SerializationInfo.GetDateTime(System.String)\n  commentId: M:System.Runtime.Serialization.SerializationInfo.GetDateTime(System.String)\n  id: GetDateTime(System.String)\n  parent: System.Runtime.Serialization.SerializationInfo\n  langs:\n  - csharp\n  - vb\n  name: GetDateTime(String)\n  fullName: System.Runtime.Serialization.SerializationInfo.GetDateTime(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetDateTime\n    path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n    startLine: 744\n  assemblies:\n  - System.Runtime.Serialization.Formatters\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Retrieves a <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value from the <xref href=\\\"System.Runtime.Serialization.SerializationInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> store.</p>\\n\"\n  syntax:\n    content: public DateTime GetDateTime(string name)\n    content.vb: Public Function GetDateTime(name As String) As Date\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name associated with the value to retrieve.  </p>\\n\"\n    return:\n      type: System.DateTime\n      description: \"\\n<p>The <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value associated with <em>name</em>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>name</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>The value associated with <em>name</em> cannot be converted to a <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value. </p>\\n\"\n  - type: System.Runtime.Serialization.SerializationException\n    commentId: T:System.Runtime.Serialization.SerializationException\n    description: \"\\n<p>An element with the specified name is not found in the current instance. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SerializationInfo.GetDateTime(String)\n- uid: System.Runtime.Serialization.SerializationInfo.GetDecimal(System.String)\n  commentId: M:System.Runtime.Serialization.SerializationInfo.GetDecimal(System.String)\n  id: GetDecimal(System.String)\n  parent: System.Runtime.Serialization.SerializationInfo\n  langs:\n  - csharp\n  - vb\n  name: GetDecimal(String)\n  fullName: System.Runtime.Serialization.SerializationInfo.GetDecimal(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetDecimal\n    path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n    startLine: 731\n  assemblies:\n  - System.Runtime.Serialization.Formatters\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Retrieves a decimal value from the <xref href=\\\"System.Runtime.Serialization.SerializationInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> store.</p>\\n\"\n  syntax:\n    content: public decimal GetDecimal(string name)\n    content.vb: Public Function GetDecimal(name As String) As Decimal\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name associated with the value to retrieve.  </p>\\n\"\n    return:\n      type: System.Decimal\n      description: \"\\n<p>A decimal value from the <xref href=\\\"System.Runtime.Serialization.SerializationInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>name</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>The value associated with <em>name</em> cannot be converted to a decimal. </p>\\n\"\n  - type: System.Runtime.Serialization.SerializationException\n    commentId: T:System.Runtime.Serialization.SerializationException\n    description: \"\\n<p>An element with the specified name is not found in the current instance. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SerializationInfo.GetDecimal(String)\n- uid: System.Runtime.Serialization.SerializationInfo.GetDouble(System.String)\n  commentId: M:System.Runtime.Serialization.SerializationInfo.GetDouble(System.String)\n  id: GetDouble(System.String)\n  parent: System.Runtime.Serialization.SerializationInfo\n  langs:\n  - csharp\n  - vb\n  name: GetDouble(String)\n  fullName: System.Runtime.Serialization.SerializationInfo.GetDouble(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetDouble\n    path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n    startLine: 718\n  assemblies:\n  - System.Runtime.Serialization.Formatters\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Retrieves a double-precision floating-point value from the <xref href=\\\"System.Runtime.Serialization.SerializationInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> store.</p>\\n\"\n  syntax:\n    content: public double GetDouble(string name)\n    content.vb: Public Function GetDouble(name As String) As Double\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name associated with the value to retrieve.</p>\\n\"\n    return:\n      type: System.Double\n      description: \"\\n<p>The double-precision floating-point value associated with <em>name</em>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>name</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>The value associated with <em>name</em> cannot be converted to a double-precision floating-point value. </p>\\n\"\n  - type: System.Runtime.Serialization.SerializationException\n    commentId: T:System.Runtime.Serialization.SerializationException\n    description: \"\\n<p>An element with the specified name is not found in the current instance. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SerializationInfo.GetDouble(String)\n- uid: System.Runtime.Serialization.SerializationInfo.GetEnumerator\n  commentId: M:System.Runtime.Serialization.SerializationInfo.GetEnumerator\n  id: GetEnumerator\n  parent: System.Runtime.Serialization.SerializationInfo\n  langs:\n  - csharp\n  - vb\n  name: GetEnumerator()\n  fullName: System.Runtime.Serialization.SerializationInfo.GetEnumerator()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetEnumerator\n    path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n    startLine: 234\n  assemblies:\n  - System.Runtime.Serialization.Formatters\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Returns a <xref href=\\\"System.Runtime.Serialization.SerializationInfoEnumerator\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> used to iterate through the name-value pairs in the <xref href=\\\"System.Runtime.Serialization.SerializationInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> store.</p>\\n\"\n  syntax:\n    content: public SerializationInfoEnumerator GetEnumerator()\n    content.vb: Public Function GetEnumerator As SerializationInfoEnumerator\n    return:\n      type: System.Runtime.Serialization.SerializationInfoEnumerator\n      description: \"\\n<p>A <xref href=\\\"System.Runtime.Serialization.SerializationInfoEnumerator\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for parsing the name-value pairs contained in the <xref href=\\\"System.Runtime.Serialization.SerializationInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> store.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SerializationInfo.GetEnumerator()\n- uid: System.Runtime.Serialization.SerializationInfo.GetInt16(System.String)\n  commentId: M:System.Runtime.Serialization.SerializationInfo.GetInt16(System.String)\n  id: GetInt16(System.String)\n  parent: System.Runtime.Serialization.SerializationInfo\n  langs:\n  - csharp\n  - vb\n  name: GetInt16(String)\n  fullName: System.Runtime.Serialization.SerializationInfo.GetInt16(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetInt16\n    path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n    startLine: 623\n  assemblies:\n  - System.Runtime.Serialization.Formatters\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Retrieves a 16-bit signed integer value from the <xref href=\\\"System.Runtime.Serialization.SerializationInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> store.</p>\\n\"\n  syntax:\n    content: public short GetInt16(string name)\n    content.vb: Public Function GetInt16(name As String) As Short\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name associated with the value to retrieve.</p>\\n\"\n    return:\n      type: System.Int16\n      description: \"\\n<p>The 16-bit signed integer associated with <em>name</em>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>name</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>The value associated with <em>name</em> cannot be converted to a 16-bit signed integer. </p>\\n\"\n  - type: System.Runtime.Serialization.SerializationException\n    commentId: T:System.Runtime.Serialization.SerializationException\n    description: \"\\n<p>An element with the specified name is not found in the current instance. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SerializationInfo.GetInt16(String)\n- uid: System.Runtime.Serialization.SerializationInfo.GetInt32(System.String)\n  commentId: M:System.Runtime.Serialization.SerializationInfo.GetInt32(System.String)\n  id: GetInt32(System.String)\n  parent: System.Runtime.Serialization.SerializationInfo\n  langs:\n  - csharp\n  - vb\n  name: GetInt32(String)\n  fullName: System.Runtime.Serialization.SerializationInfo.GetInt32(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetInt32\n    path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n    startLine: 650\n  assemblies:\n  - System.Runtime.Serialization.Formatters\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Retrieves a 32-bit signed integer value from the <xref href=\\\"System.Runtime.Serialization.SerializationInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> store.</p>\\n\"\n  syntax:\n    content: public int GetInt32(string name)\n    content.vb: Public Function GetInt32(name As String) As Integer\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the value to retrieve. </p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>The 32-bit signed integer associated with <em>name</em>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>name</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>The value associated with <em>name</em> cannot be converted to a 32-bit signed integer. </p>\\n\"\n  - type: System.Runtime.Serialization.SerializationException\n    commentId: T:System.Runtime.Serialization.SerializationException\n    description: \"\\n<p>An element with the specified name is not found in the current instance. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SerializationInfo.GetInt32(String)\n- uid: System.Runtime.Serialization.SerializationInfo.GetInt64(System.String)\n  commentId: M:System.Runtime.Serialization.SerializationInfo.GetInt64(System.String)\n  id: GetInt64(System.String)\n  parent: System.Runtime.Serialization.SerializationInfo\n  langs:\n  - csharp\n  - vb\n  name: GetInt64(String)\n  fullName: System.Runtime.Serialization.SerializationInfo.GetInt64(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetInt64\n    path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n    startLine: 677\n  assemblies:\n  - System.Runtime.Serialization.Formatters\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Retrieves a 64-bit signed integer value from the <xref href=\\\"System.Runtime.Serialization.SerializationInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> store.</p>\\n\"\n  syntax:\n    content: public long GetInt64(string name)\n    content.vb: Public Function GetInt64(name As String) As Long\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name associated with the value to retrieve.</p>\\n\"\n    return:\n      type: System.Int64\n      description: \"\\n<p>The 64-bit signed integer associated with <em>name</em>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>name</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>The value associated with <em>name</em> cannot be converted to a 64-bit signed integer. </p>\\n\"\n  - type: System.Runtime.Serialization.SerializationException\n    commentId: T:System.Runtime.Serialization.SerializationException\n    description: \"\\n<p>An element with the specified name is not found in the current instance. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SerializationInfo.GetInt64(String)\n- uid: System.Runtime.Serialization.SerializationInfo.GetSByte(System.String)\n  commentId: M:System.Runtime.Serialization.SerializationInfo.GetSByte(System.String)\n  id: GetSByte(System.String)\n  parent: System.Runtime.Serialization.SerializationInfo\n  langs:\n  - csharp\n  - vb\n  name: GetSByte(String)\n  fullName: System.Runtime.Serialization.SerializationInfo.GetSByte(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetSByte\n    path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n    startLine: 596\n  assemblies:\n  - System.Runtime.Serialization.Formatters\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Retrieves an 8-bit signed integer value from the <xref href=\\\"System.Runtime.Serialization.SerializationInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> store.</p>\\n\"\n  syntax:\n    content: >-\n      [CLSCompliant(false)]\n\n      public sbyte GetSByte(string name)\n    content.vb: >-\n      <CLSCompliant(False)>\n\n      Public Function GetSByte(name As String) As SByte\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name associated with the value to retrieve.</p>\\n\"\n    return:\n      type: System.SByte\n      description: \"\\n<p>The 8-bit signed integer associated with <em>name</em>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>name</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>The value associated with <em>name</em> cannot be converted to an 8-bit signed integer. </p>\\n\"\n  - type: System.Runtime.Serialization.SerializationException\n    commentId: T:System.Runtime.Serialization.SerializationException\n    description: \"\\n<p>An element with the specified name is not found in the current instance. </p>\\n\"\n  attributes:\n  - type: System.CLSCompliantAttribute\n    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)\n    arguments:\n    - type: System.Boolean\n      value: false\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SerializationInfo.GetSByte(String)\n- uid: System.Runtime.Serialization.SerializationInfo.GetSingle(System.String)\n  commentId: M:System.Runtime.Serialization.SerializationInfo.GetSingle(System.String)\n  id: GetSingle(System.String)\n  parent: System.Runtime.Serialization.SerializationInfo\n  langs:\n  - csharp\n  - vb\n  name: GetSingle(String)\n  fullName: System.Runtime.Serialization.SerializationInfo.GetSingle(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetSingle\n    path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n    startLine: 704\n  assemblies:\n  - System.Runtime.Serialization.Formatters\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Retrieves a single-precision floating-point value from the <xref href=\\\"System.Runtime.Serialization.SerializationInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> store.</p>\\n\"\n  syntax:\n    content: public float GetSingle(string name)\n    content.vb: Public Function GetSingle(name As String) As Single\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the value to retrieve. </p>\\n\"\n    return:\n      type: System.Single\n      description: \"\\n<p>The single-precision floating-point value associated with <em>name</em>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>name</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>The value associated with <em>name</em> cannot be converted to a single-precision floating-point value. </p>\\n\"\n  - type: System.Runtime.Serialization.SerializationException\n    commentId: T:System.Runtime.Serialization.SerializationException\n    description: \"\\n<p>An element with the specified name is not found in the current instance. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SerializationInfo.GetSingle(String)\n- uid: System.Runtime.Serialization.SerializationInfo.GetString(System.String)\n  commentId: M:System.Runtime.Serialization.SerializationInfo.GetString(System.String)\n  id: GetString(System.String)\n  parent: System.Runtime.Serialization.SerializationInfo\n  langs:\n  - csharp\n  - vb\n  name: GetString(String)\n  fullName: System.Runtime.Serialization.SerializationInfo.GetString(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetString\n    path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n    startLine: 757\n  assemblies:\n  - System.Runtime.Serialization.Formatters\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Retrieves a <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value from the <xref href=\\\"System.Runtime.Serialization.SerializationInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> store.</p>\\n\"\n  syntax:\n    content: public string GetString(string name)\n    content.vb: Public Function GetString(name As String) As String\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name associated with the value to retrieve.</p>\\n\"\n    return:\n      type: System.String\n      description: \"\\n<p>The <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> associated with <em>name</em>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>name</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>The value associated with <em>name</em> cannot be converted to a <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  - type: System.Runtime.Serialization.SerializationException\n    commentId: T:System.Runtime.Serialization.SerializationException\n    description: \"\\n<p>An element with the specified name is not found in the current instance. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SerializationInfo.GetString(String)\n- uid: System.Runtime.Serialization.SerializationInfo.GetUInt16(System.String)\n  commentId: M:System.Runtime.Serialization.SerializationInfo.GetUInt16(System.String)\n  id: GetUInt16(System.String)\n  parent: System.Runtime.Serialization.SerializationInfo\n  langs:\n  - csharp\n  - vb\n  name: GetUInt16(String)\n  fullName: System.Runtime.Serialization.SerializationInfo.GetUInt16(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetUInt16\n    path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n    startLine: 636\n  assemblies:\n  - System.Runtime.Serialization.Formatters\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Retrieves a 16-bit unsigned integer value from the <xref href=\\\"System.Runtime.Serialization.SerializationInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> store.</p>\\n\"\n  syntax:\n    content: >-\n      [CLSCompliant(false)]\n\n      public ushort GetUInt16(string name)\n    content.vb: >-\n      <CLSCompliant(False)>\n\n      Public Function GetUInt16(name As String) As UShort\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name associated with the value to retrieve.</p>\\n\"\n    return:\n      type: System.UInt16\n      description: \"\\n<p>The 16-bit unsigned integer associated with <em>name</em>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>name</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>The value associated with <em>name</em> cannot be converted to a 16-bit unsigned integer. </p>\\n\"\n  - type: System.Runtime.Serialization.SerializationException\n    commentId: T:System.Runtime.Serialization.SerializationException\n    description: \"\\n<p>An element with the specified name is not found in the current instance. </p>\\n\"\n  attributes:\n  - type: System.CLSCompliantAttribute\n    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)\n    arguments:\n    - type: System.Boolean\n      value: false\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SerializationInfo.GetUInt16(String)\n- uid: System.Runtime.Serialization.SerializationInfo.GetUInt32(System.String)\n  commentId: M:System.Runtime.Serialization.SerializationInfo.GetUInt32(System.String)\n  id: GetUInt32(System.String)\n  parent: System.Runtime.Serialization.SerializationInfo\n  langs:\n  - csharp\n  - vb\n  name: GetUInt32(String)\n  fullName: System.Runtime.Serialization.SerializationInfo.GetUInt32(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetUInt32\n    path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n    startLine: 663\n  assemblies:\n  - System.Runtime.Serialization.Formatters\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Retrieves a 32-bit unsigned integer value from the <xref href=\\\"System.Runtime.Serialization.SerializationInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> store.</p>\\n\"\n  syntax:\n    content: >-\n      [CLSCompliant(false)]\n\n      public uint GetUInt32(string name)\n    content.vb: >-\n      <CLSCompliant(False)>\n\n      Public Function GetUInt32(name As String) As UInteger\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name associated with the value to retrieve.</p>\\n\"\n    return:\n      type: System.UInt32\n      description: \"\\n<p>The 32-bit unsigned integer associated with <em>name</em>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>name</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>The value associated with <em>name</em> cannot be converted to a 32-bit unsigned integer. </p>\\n\"\n  - type: System.Runtime.Serialization.SerializationException\n    commentId: T:System.Runtime.Serialization.SerializationException\n    description: \"\\n<p>An element with the specified name is not found in the current instance. </p>\\n\"\n  attributes:\n  - type: System.CLSCompliantAttribute\n    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)\n    arguments:\n    - type: System.Boolean\n      value: false\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SerializationInfo.GetUInt32(String)\n- uid: System.Runtime.Serialization.SerializationInfo.GetUInt64(System.String)\n  commentId: M:System.Runtime.Serialization.SerializationInfo.GetUInt64(System.String)\n  id: GetUInt64(System.String)\n  parent: System.Runtime.Serialization.SerializationInfo\n  langs:\n  - csharp\n  - vb\n  name: GetUInt64(String)\n  fullName: System.Runtime.Serialization.SerializationInfo.GetUInt64(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetUInt64\n    path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n    startLine: 690\n  assemblies:\n  - System.Runtime.Serialization.Formatters\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Retrieves a 64-bit unsigned integer value from the <xref href=\\\"System.Runtime.Serialization.SerializationInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> store.</p>\\n\"\n  syntax:\n    content: >-\n      [CLSCompliant(false)]\n\n      public ulong GetUInt64(string name)\n    content.vb: >-\n      <CLSCompliant(False)>\n\n      Public Function GetUInt64(name As String) As ULong\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name associated with the value to retrieve.</p>\\n\"\n    return:\n      type: System.UInt64\n      description: \"\\n<p>The 64-bit unsigned integer associated with <em>name</em>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>name</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>The value associated with <em>name</em> cannot be converted to a 64-bit unsigned integer. </p>\\n\"\n  - type: System.Runtime.Serialization.SerializationException\n    commentId: T:System.Runtime.Serialization.SerializationException\n    description: \"\\n<p>An element with the specified name is not found in the current instance. </p>\\n\"\n  attributes:\n  - type: System.CLSCompliantAttribute\n    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)\n    arguments:\n    - type: System.Boolean\n      value: false\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SerializationInfo.GetUInt64(String)\n- uid: System.Runtime.Serialization.SerializationInfo.GetValue(System.String,System.Type)\n  commentId: M:System.Runtime.Serialization.SerializationInfo.GetValue(System.String,System.Type)\n  id: GetValue(System.String,System.Type)\n  parent: System.Runtime.Serialization.SerializationInfo\n  langs:\n  - csharp\n  - vb\n  name: GetValue(String, Type)\n  fullName: System.Runtime.Serialization.SerializationInfo.GetValue(System.String, System.Type)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetValue\n    path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n    startLine: 501\n  assemblies:\n  - System.Runtime.Serialization.Formatters\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Retrieves a value from the <xref href=\\\"System.Runtime.Serialization.SerializationInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> store.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public object GetValue(string name, Type type)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Function GetValue(name As String, type As Type) As Object\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name associated with the value to retrieve.</p>\\n\"\n    - id: type\n      type: System.Type\n      description: \"\\n<p>The <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the value to retrieve. If the stored value cannot be converted to this type, the system will throw a <xref href=\\\"System.InvalidCastException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n    return:\n      type: System.Object\n      description: \"\\n<p>The object of the specified <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> associated with <em>name</em>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>name</em> or <em>type</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>The value associated with <em>name</em> cannot be converted to <em>type</em>. </p>\\n\"\n  - type: System.Runtime.Serialization.SerializationException\n    commentId: T:System.Runtime.Serialization.SerializationException\n    description: \"\\n<p>An element with the specified name is not found in the current instance. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SerializationInfo.GetValue(String, Type)\n- uid: System.Runtime.Serialization.SerializationInfo.SetType(System.Type)\n  commentId: M:System.Runtime.Serialization.SerializationInfo.SetType(System.Type)\n  id: SetType(System.Type)\n  parent: System.Runtime.Serialization.SerializationInfo\n  langs:\n  - csharp\n  - vb\n  name: SetType(Type)\n  fullName: System.Runtime.Serialization.SerializationInfo.SetType(System.Type)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: SetType\n    path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfo.cs\n    startLine: 130\n  assemblies:\n  - System.Runtime.Serialization.Formatters\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Sets the <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the object to serialize.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public void SetType(Type type)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Sub SetType(type As Type)\n    parameters:\n    - id: type\n      type: System.Type\n      description: \"\\n<p>The <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the object to serialize. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>type</em> parameter is <strong>null</strong>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SerializationInfo.SetType(Type)\nreferences:\n- uid: System.Runtime.Serialization\n  isExternal: false\n  name: System.Runtime.Serialization\n  fullName: System.Runtime.Serialization\n  nameWithType: System.Runtime.Serialization\n  commentId: N:System.Runtime.Serialization\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  fullName: System.Type\n  nameWithType: Type\n  commentId: T:System.Type\n- uid: System.Runtime.Serialization.IFormatterConverter\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: IFormatterConverter\n  fullName: System.Runtime.Serialization.IFormatterConverter\n  nameWithType: IFormatterConverter\n  commentId: T:System.Runtime.Serialization.IFormatterConverter\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  fullName: System.Byte\n  nameWithType: Byte\n  commentId: T:System.Byte\n- uid: System.Char\n  parent: System\n  isExternal: false\n  name: Char\n  fullName: System.Char\n  nameWithType: Char\n  commentId: T:System.Char\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  fullName: System.DateTime\n  nameWithType: DateTime\n  commentId: T:System.DateTime\n- uid: System.Decimal\n  parent: System\n  isExternal: false\n  name: Decimal\n  fullName: System.Decimal\n  nameWithType: Decimal\n  commentId: T:System.Decimal\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  fullName: System.Double\n  nameWithType: Double\n  commentId: T:System.Double\n- uid: System.Int16\n  parent: System\n  isExternal: false\n  name: Int16\n  fullName: System.Int16\n  nameWithType: Int16\n  commentId: T:System.Int16\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  fullName: System.Int64\n  nameWithType: Int64\n  commentId: T:System.Int64\n- uid: System.SByte\n  parent: System\n  isExternal: false\n  name: SByte\n  fullName: System.SByte\n  nameWithType: SByte\n  commentId: T:System.SByte\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  fullName: System.Single\n  nameWithType: Single\n  commentId: T:System.Single\n- uid: System.UInt16\n  parent: System\n  isExternal: false\n  name: UInt16\n  fullName: System.UInt16\n  nameWithType: UInt16\n  commentId: T:System.UInt16\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  fullName: System.UInt32\n  nameWithType: UInt32\n  commentId: T:System.UInt32\n- uid: System.UInt64\n  parent: System\n  isExternal: false\n  name: UInt64\n  fullName: System.UInt64\n  nameWithType: UInt64\n  commentId: T:System.UInt64\n- uid: System.Runtime.Serialization.SerializationInfoEnumerator\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationInfoEnumerator\n  fullName: System.Runtime.Serialization.SerializationInfoEnumerator\n  nameWithType: SerializationInfoEnumerator\n  commentId: T:System.Runtime.Serialization.SerializationInfoEnumerator\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.Runtime.Serialization.SerializationException\n  isExternal: false\n  name: SerializationException\n  fullName: System.Runtime.Serialization.SerializationException\n  nameWithType: SerializationException\n  commentId: T:System.Runtime.Serialization.SerializationException\n- uid: System.InvalidCastException\n  isExternal: false\n  name: InvalidCastException\n  fullName: System.InvalidCastException\n  nameWithType: InvalidCastException\n  commentId: T:System.InvalidCastException\n"}