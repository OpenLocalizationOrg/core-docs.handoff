{"nodes":[{"pos":[729,750],"content":"IEnumConnectionPoints","needQuote":true,"nodes":[{"content":"IEnumConnectionPoints","pos":[0,21]}]},{"pos":[2659,2691],"content":"Clone(out IEnumConnectionPoints)","needQuote":true,"nodes":[{"content":"Clone(out IEnumConnectionPoints)","pos":[0,32]}]},{"content":"\\n&lt;p&gt;When this method returns, contains a reference to the newly created enumerator.","pos":[3637,3721],"source":"\\n<p>When this method returns, contains a reference to the newly created enumerator."},{"content":"This parameter is passed uninitialized.&lt;/p&gt;\\n","pos":[3722,3767],"source":" This parameter is passed uninitialized.</p>\\n"},{"pos":[4649,4688],"content":"Next(Int32, IConnectionPoint[], IntPtr)","needQuote":true,"nodes":[{"content":"Next(Int32, IConnectionPoint[], IntPtr)","pos":[0,39]}]},{"content":"\\n&lt;p&gt;The number of &lt;strong&gt;IConnectionPoint&lt;/strong&gt; references to return in &lt;em&gt;rgelt&lt;/em&gt;.","pos":[5778,5870],"source":"\\n<p>The number of <strong>IConnectionPoint</strong> references to return in <em>rgelt</em>."},{"content":"&lt;/p&gt;\\n","pos":[5871,5877],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;When this method returns, contains a reference to the enumerated connections.","pos":[5986,6068],"source":"\\n<p>When this method returns, contains a reference to the enumerated connections."},{"content":"This parameter is passed uninitialized.&lt;/p&gt;\\n","pos":[6069,6114],"source":" This parameter is passed uninitialized.</p>\\n"},{"pos":[6454,6468],"content":"SizeParamIndex","needQuote":true,"nodes":[{"content":"SizeParamIndex","pos":[0,14]}]},{"content":"\\n&lt;p&gt;When this method returns, contains a reference to the actual number of connections enumerated in &lt;em&gt;rgelt&lt;/em&gt;.","pos":[6730,6847],"source":"\\n<p>When this method returns, contains a reference to the actual number of connections enumerated in <em>rgelt</em>."},{"content":"&lt;/p&gt;\\n","pos":[6848,6854],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;S_OK&lt;/strong&gt; if the &lt;em&gt;pceltFetched&lt;/em&gt; parameter equals the &lt;em&gt;celt&lt;/em&gt; parameter; otherwise, &lt;strong&gt;S_FALSE&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[6913,7059],"source":"\\n<p>\\n<strong>S_OK</strong> if the <em>pceltFetched</em> parameter equals the <em>celt</em> parameter; otherwise, <strong>S_FALSE</strong>.</p>\\n"},{"pos":[7719,7726],"content":"Reset()","needQuote":true,"nodes":[{"content":"Reset()","pos":[0,7]}]},{"pos":[8735,8746],"content":"Skip(Int32)","needQuote":true,"nodes":[{"content":"Skip(Int32)","pos":[0,11]}]},{"content":"\\n&lt;p&gt;The number of elements to skip in the enumeration.","pos":[9590,9645],"source":"\\n<p>The number of elements to skip in the enumeration."},{"content":"&lt;/p&gt;\\n","pos":[9646,9652],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;S_OK&lt;/strong&gt; if the number of elements skipped equals the &lt;em&gt;celt&lt;/em&gt; parameter; otherwise, &lt;strong&gt;S_FALSE&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[9711,9852],"source":"\\n<p>\\n<strong>S_OK</strong> if the number of elements skipped equals the <em>celt</em> parameter; otherwise, <strong>S_FALSE</strong>.</p>\\n"},{"pos":[9991,10030],"content":"System.Runtime.InteropServices.ComTypes","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices.ComTypes","pos":[0,39]}]},{"pos":[10341,10362],"content":"IEnumConnectionPoints","needQuote":true,"nodes":[{"content":"IEnumConnectionPoints","pos":[0,21]}]},{"pos":[10617,10622],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[10772,10790],"content":"IConnectionPoint[]","needQuote":true,"nodes":[{"content":"IConnectionPoint[]","pos":[0,18]}]},{"pos":[11057,11073],"content":"IConnectionPoint","needQuote":true,"nodes":[{"content":"IConnectionPoint","pos":[0,16]}]},{"content":"[]","pos":[11156,11158]},{"pos":[11266,11282],"content":"IConnectionPoint","needQuote":true,"nodes":[{"content":"IConnectionPoint","pos":[0,16]}]},{"pos":[11364,11366],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[11523,11529],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[11650,11656],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]}],"content":"items:\n- uid: System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints\n  commentId: T:System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints\n  id: IEnumConnectionPoints\n  parent: System.Runtime.InteropServices.ComTypes\n  children:\n  - System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints.Clone(System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints@)\n  - System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints.Next(System.Int32,System.Runtime.InteropServices.ComTypes.IConnectionPoint[],System.IntPtr)\n  - System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints.Reset\n  - System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints.Skip(System.Int32)\n  langs:\n  - csharp\n  - vb\n  name: IEnumConnectionPoints\n  fullName: System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints\n  type: Interface\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IEnumConnectionPoints.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: IEnumConnectionPoints\n    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IEnumConnectionPoints.cs\n    startLine: 17\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Manages the definition of the <strong>IEnumConnectionPoints</strong> interface.</p>\\n\"\n  syntax:\n    content: >-\n      [Guid(\"B196B285-BAB4-101A-B69C-00AA00341D07\")]\n\n      [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]\n\n      [ComImport]\n\n      public interface IEnumConnectionPoints\n    content.vb: >-\n      <Guid(\"B196B285-BAB4-101A-B69C-00AA00341D07\")>\n\n      <InterfaceType(ComInterfaceType.InterfaceIsIUnknown)>\n\n      <ComImport>\n\n      Public Interface IEnumConnectionPoints\n  attributes:\n  - type: System.Runtime.InteropServices.InterfaceTypeAttribute\n    ctor: System.Runtime.InteropServices.InterfaceTypeAttribute.#ctor(System.Runtime.InteropServices.ComInterfaceType)\n    arguments:\n    - type: System.Runtime.InteropServices.ComInterfaceType\n      value: 1\n  modifiers.csharp:\n  - public\n  - interface\n  modifiers.vb:\n  - Public\n  - Interface\n  nameWithType: IEnumConnectionPoints\n- uid: System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints.Clone(System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints@)\n  commentId: M:System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints.Clone(System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints@)\n  id: Clone(System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints@)\n  parent: System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints\n  langs:\n  - csharp\n  - vb\n  name: Clone(out IEnumConnectionPoints)\n  fullName: System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints.Clone(out System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IEnumConnectionPoints.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Clone\n    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IEnumConnectionPoints.cs\n    startLine: 27\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Creates a new enumerator that contains the same enumeration state as the current one.</p>\\n\"\n  syntax:\n    content: void Clone(out IEnumConnectionPoints ppenum)\n    content.vb: Sub Clone(ByRef ppenum As IEnumConnectionPoints)\n    parameters:\n    - id: ppenum\n      type: System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints\n      description: \"\\n<p>When this method returns, contains a reference to the newly created enumerator. This parameter is passed uninitialized.</p>\\n\"\n  fullName.vb: System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints.Clone(ByRef System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints)\n  name.vb: Clone(ByRef IEnumConnectionPoints)\n  nameWithType: IEnumConnectionPoints.Clone(out IEnumConnectionPoints)\n  nameWithType.vb: IEnumConnectionPoints.Clone(ByRef IEnumConnectionPoints)\n- uid: System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints.Next(System.Int32,System.Runtime.InteropServices.ComTypes.IConnectionPoint[],System.IntPtr)\n  commentId: M:System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints.Next(System.Int32,System.Runtime.InteropServices.ComTypes.IConnectionPoint[],System.IntPtr)\n  id: Next(System.Int32,System.Runtime.InteropServices.ComTypes.IConnectionPoint[],System.IntPtr)\n  parent: System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints\n  langs:\n  - csharp\n  - vb\n  name: Next(Int32, IConnectionPoint[], IntPtr)\n  fullName: System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints.Next(System.Int32, System.Runtime.InteropServices.ComTypes.IConnectionPoint[], System.IntPtr)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IEnumConnectionPoints.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Next\n    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IEnumConnectionPoints.cs\n    startLine: 22\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Retrieves a specified number of items in the enumeration sequence.</p>\\n\"\n  syntax:\n    content: >-\n      [PreserveSig]\n\n      int Next(int celt, [MarshalAs(UnmanagedType.LPArray, SizeParamIndex = (short)0), Out] IConnectionPoint[] rgelt, IntPtr pceltFetched)\n    content.vb: >-\n      <PreserveSig>\n\n      Function Next(celt As Integer, rgelt As IConnectionPoint(), pceltFetched As IntPtr) As Integer\n    parameters:\n    - id: celt\n      type: System.Int32\n      description: \"\\n<p>The number of <strong>IConnectionPoint</strong> references to return in <em>rgelt</em>. </p>\\n\"\n    - id: rgelt\n      type: System.Runtime.InteropServices.ComTypes.IConnectionPoint[]\n      description: \"\\n<p>When this method returns, contains a reference to the enumerated connections. This parameter is passed uninitialized.</p>\\n\"\n      attributes:\n      - type: System.Runtime.InteropServices.MarshalAsAttribute\n        ctor: System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Runtime.InteropServices.UnmanagedType)\n        arguments:\n        - type: System.Runtime.InteropServices.UnmanagedType\n          value: 42\n        namedArguments:\n        - name: SizeParamIndex\n          type: System.Int16\n          value: 0\n      - type: System.Runtime.InteropServices.OutAttribute\n        ctor: System.Runtime.InteropServices.OutAttribute.#ctor\n        arguments: []\n    - id: pceltFetched\n      type: System.IntPtr\n      description: \"\\n<p>When this method returns, contains a reference to the actual number of connections enumerated in <em>rgelt</em>. </p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>\\n<strong>S_OK</strong> if the <em>pceltFetched</em> parameter equals the <em>celt</em> parameter; otherwise, <strong>S_FALSE</strong>.</p>\\n\"\n  fullName.vb: System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints.Next(System.Int32, System.Runtime.InteropServices.ComTypes.IConnectionPoint(), System.IntPtr)\n  name.vb: Next(Int32, IConnectionPoint(), IntPtr)\n  nameWithType: IEnumConnectionPoints.Next(Int32, IConnectionPoint[], IntPtr)\n  nameWithType.vb: IEnumConnectionPoints.Next(Int32, IConnectionPoint(), IntPtr)\n- uid: System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints.Reset\n  commentId: M:System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints.Reset\n  id: Reset\n  parent: System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints\n  langs:\n  - csharp\n  - vb\n  name: Reset()\n  fullName: System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints.Reset()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IEnumConnectionPoints.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Reset\n    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IEnumConnectionPoints.cs\n    startLine: 26\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Resets the enumeration sequence to the beginning.</p>\\n\"\n  syntax:\n    content: void Reset()\n    content.vb: Sub Reset\n  nameWithType: IEnumConnectionPoints.Reset()\n- uid: System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints.Skip(System.Int32)\n  commentId: M:System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints.Skip(System.Int32)\n  id: Skip(System.Int32)\n  parent: System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints\n  langs:\n  - csharp\n  - vb\n  name: Skip(Int32)\n  fullName: System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints.Skip(System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IEnumConnectionPoints.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Skip\n    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IEnumConnectionPoints.cs\n    startLine: 24\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Skips a specified number of items in the enumeration sequence.</p>\\n\"\n  syntax:\n    content: >-\n      [PreserveSig]\n\n      int Skip(int celt)\n    content.vb: >-\n      <PreserveSig>\n\n      Function Skip(celt As Integer) As Integer\n    parameters:\n    - id: celt\n      type: System.Int32\n      description: \"\\n<p>The number of elements to skip in the enumeration. </p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>\\n<strong>S_OK</strong> if the number of elements skipped equals the <em>celt</em> parameter; otherwise, <strong>S_FALSE</strong>.</p>\\n\"\n  nameWithType: IEnumConnectionPoints.Skip(Int32)\nreferences:\n- uid: System.Runtime.InteropServices.ComTypes\n  isExternal: false\n  name: System.Runtime.InteropServices.ComTypes\n  fullName: System.Runtime.InteropServices.ComTypes\n  nameWithType: System.Runtime.InteropServices.ComTypes\n  commentId: N:System.Runtime.InteropServices.ComTypes\n- uid: System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints\n  parent: System.Runtime.InteropServices.ComTypes\n  isExternal: false\n  name: IEnumConnectionPoints\n  fullName: System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints\n  nameWithType: IEnumConnectionPoints\n  commentId: T:System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.Runtime.InteropServices.ComTypes.IConnectionPoint[]\n  name: IConnectionPoint[]\n  fullName: System.Runtime.InteropServices.ComTypes.IConnectionPoint[]\n  fullname.vb: System.Runtime.InteropServices.ComTypes.IConnectionPoint()\n  name.vb: IConnectionPoint()\n  spec.csharp:\n  - uid: System.Runtime.InteropServices.ComTypes.IConnectionPoint\n    name: IConnectionPoint\n    fullName: System.Runtime.InteropServices.ComTypes.IConnectionPoint\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Runtime.InteropServices.ComTypes.IConnectionPoint\n    name: IConnectionPoint\n    fullName: System.Runtime.InteropServices.ComTypes.IConnectionPoint\n  - name: ()\n    fullName: ()\n  nameWithType: IConnectionPoint[]\n  nameWithType.vb: IConnectionPoint()\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  fullName: System.IntPtr\n  nameWithType: IntPtr\n  commentId: T:System.IntPtr\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n"}