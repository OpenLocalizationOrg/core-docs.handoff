{"nodes":[{"pos":[858,882],"content":"CultureNotFoundException","needQuote":true,"nodes":[{"content":"CultureNotFoundException","pos":[0,24]}]},{"pos":[3144,3170],"content":"CultureNotFoundException()","needQuote":true,"nodes":[{"content":"CultureNotFoundException()","pos":[0,26]}]},{"pos":[4346,4378],"content":"CultureNotFoundException(String)","needQuote":true,"nodes":[{"content":"CultureNotFoundException(String)","pos":[0,32]}]},{"content":"\\n&lt;p&gt;The error message to display with this exception.&lt;/p&gt;\\n","pos":[5254,5314],"source":"\\n<p>The error message to display with this exception.</p>\\n"},{"pos":[5775,5818],"content":"CultureNotFoundException(String, Exception)","needQuote":true,"nodes":[{"content":"CultureNotFoundException(String, Exception)","pos":[0,43]}]},{"content":"\\n&lt;p&gt;The error message to display with this exception.&lt;/p&gt;\\n","pos":[6840,6900],"source":"\\n<p>The error message to display with this exception.</p>\\n"},{"content":"\\n&lt;p&gt;The exception that is the cause of the current exception.","pos":[6976,7038],"source":"\\n<p>The exception that is the cause of the current exception."},{"content":"If the &lt;em&gt;innerException&lt;/em&gt; parameter is not a null reference, the current exception is raised in a &lt;strong&gt;catch&lt;/strong&gt; block that handles the inner exception.&lt;/p&gt;\\n","pos":[7039,7210],"source":" If the <em>innerException</em> parameter is not a null reference, the current exception is raised in a <strong>catch</strong> block that handles the inner exception.</p>\\n"},{"pos":[7673,7713],"content":"CultureNotFoundException(String, String)","needQuote":true,"nodes":[{"content":"CultureNotFoundException(String, String)","pos":[0,40]}]},{"content":"\\n&lt;p&gt;The name of the parameter that is the cause of the current exception.&lt;/p&gt;\\n","pos":[8706,8786],"source":"\\n<p>The name of the parameter that is the cause of the current exception.</p>\\n"},{"content":"\\n&lt;p&gt;The error message to display with this exception.&lt;/p&gt;\\n","pos":[8852,8912],"source":"\\n<p>The error message to display with this exception.</p>\\n"},{"pos":[9423,9474],"content":"CultureNotFoundException(String, String, Exception)","needQuote":true,"nodes":[{"content":"CultureNotFoundException(String, String, Exception)","pos":[0,51]}]},{"content":"\\n&lt;p&gt;The error message to display with this exception.&lt;/p&gt;\\n","pos":[10595,10655],"source":"\\n<p>The error message to display with this exception.</p>\\n"},{"content":"\\n&lt;p&gt;The Culture Name that cannot be found.&lt;/p&gt;\\n","pos":[10732,10781],"source":"\\n<p>The Culture Name that cannot be found.</p>\\n"},{"content":"\\n&lt;p&gt;The exception that is the cause of the current exception.","pos":[10857,10919],"source":"\\n<p>The exception that is the cause of the current exception."},{"content":"If the &lt;em&gt;innerException&lt;/em&gt; parameter is not a null reference, the current exception is raised in a &lt;strong&gt;catch&lt;/strong&gt; block that handles the inner exception.&lt;/p&gt;\\n","pos":[10920,11091],"source":" If the <em>innerException</em> parameter is not a null reference, the current exception is raised in a <strong>catch</strong> block that handles the inner exception.</p>\\n"},{"pos":[11604,11652],"content":"CultureNotFoundException(String, String, String)","needQuote":true,"nodes":[{"content":"CultureNotFoundException(String, String, String)","pos":[0,48]}]},{"content":"\\n&lt;p&gt;The name of the parameter that is the cause the current exception.&lt;/p&gt;\\n","pos":[12744,12821],"source":"\\n<p>The name of the parameter that is the cause the current exception.</p>\\n"},{"content":"\\n&lt;p&gt;The Culture Name that cannot be found.&lt;/p&gt;\\n","pos":[12898,12947],"source":"\\n<p>The Culture Name that cannot be found.</p>\\n"},{"content":"\\n&lt;p&gt;The error message to display with this exception.&lt;/p&gt;\\n","pos":[13013,13073],"source":"\\n<p>The error message to display with this exception.</p>\\n"},{"pos":[13491,13509],"content":"InvalidCultureName","needQuote":true,"nodes":[{"content":"InvalidCultureName","pos":[0,18]}]},{"content":"\\n&lt;p&gt;The invalid culture name.&lt;/p&gt;\\n","pos":[14269,14305],"source":"\\n<p>The invalid culture name.</p>\\n"},{"pos":[14709,14716],"content":"Message","needQuote":true,"nodes":[{"content":"Message","pos":[0,7]}]},{"content":"\\n&lt;p&gt;A text string describing the details of the exception.&lt;/p&gt;\\n","pos":[15455,15520],"source":"\\n<p>A text string describing the details of the exception.</p>\\n"},{"pos":[15792,15812],"content":"System.Globalization","needQuote":true,"nodes":[{"content":"System.Globalization","pos":[0,20]}]},{"pos":[15985,15991],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16139,16148],"content":"Exception","needQuote":true,"nodes":[{"content":"Exception","pos":[0,9]}]},{"pos":[16310,16325],"content":"SystemException","needQuote":true,"nodes":[{"content":"SystemException","pos":[0,15]}]},{"pos":[16508,16525],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]},{"pos":[16754,16764],"content":"_Exception","needQuote":true,"nodes":[{"content":"_Exception","pos":[0,10]}]},{"pos":[17020,17033],"content":"ISerializable","needQuote":true,"nodes":[{"content":"ISerializable","pos":[0,13]}]},{"pos":[17379,17429],"content":"GetObjectData(SerializationInfo, StreamingContext)","needQuote":true,"nodes":[{"content":"GetObjectData(SerializationInfo, StreamingContext)","pos":[0,50]}]},{"pos":[17743,17756],"content":"GetObjectData","needQuote":true,"nodes":[{"content":"GetObjectData","pos":[0,13]}]},{"pos":[17841,17842],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17925,17942],"content":"SerializationInfo","needQuote":true,"nodes":[{"content":"SerializationInfo","pos":[0,17]}]},{"content":",","pos":[18036,18037]},{"pos":[18124,18140],"content":"StreamingContext","needQuote":true,"nodes":[{"content":"StreamingContext","pos":[0,16]}]},{"pos":[18232,18233],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18413,18426],"content":"GetObjectData","needQuote":true,"nodes":[{"content":"GetObjectData","pos":[0,13]}]},{"pos":[18511,18512],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18595,18612],"content":"SerializationInfo","needQuote":true,"nodes":[{"content":"SerializationInfo","pos":[0,17]}]},{"content":",","pos":[18706,18707]},{"pos":[18794,18810],"content":"StreamingContext","needQuote":true,"nodes":[{"content":"StreamingContext","pos":[0,16]}]},{"pos":[18902,18903],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19258,19267],"content":"ParamName","needQuote":true,"nodes":[{"content":"ParamName","pos":[0,9]}]},{"pos":[19505,19523],"content":"GetBaseException()","needQuote":true,"nodes":[{"content":"GetBaseException()","pos":[0,18]}]},{"pos":[19640,19656],"content":"GetBaseException","needQuote":true,"nodes":[{"content":"GetBaseException","pos":[0,16]}]},{"pos":[19715,19716],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19743,19744],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19825,19841],"content":"GetBaseException","needQuote":true,"nodes":[{"content":"GetBaseException","pos":[0,16]}]},{"pos":[19900,19901],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19928,19929],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20128,20138],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[20239,20247],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[20298,20299],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20326,20327],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20400,20408],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[20459,20460],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20487,20488],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20669,20678],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[20777,20784],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[20855,20856],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20883,20884],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20956,20963],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[21034,21035],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21062,21063],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21240,21244],"content":"Data","needQuote":true,"nodes":[{"content":"Data","pos":[0,4]}]},{"pos":[21441,21455],"content":"InnerException","needQuote":true,"nodes":[{"content":"InnerException","pos":[0,14]}]},{"pos":[21677,21687],"content":"TargetSite","needQuote":true,"nodes":[{"content":"TargetSite","pos":[0,10]}]},{"pos":[21898,21908],"content":"StackTrace","needQuote":true,"nodes":[{"content":"StackTrace","pos":[0,10]}]},{"pos":[22117,22125],"content":"HelpLink","needQuote":true,"nodes":[{"content":"HelpLink","pos":[0,8]}]},{"pos":[22326,22332],"content":"Source","needQuote":true,"nodes":[{"content":"Source","pos":[0,6]}]},{"pos":[22528,22535],"content":"HResult","needQuote":true,"nodes":[{"content":"HResult","pos":[0,7]}]},{"pos":[22746,22766],"content":"SerializeObjectState","needQuote":true,"nodes":[{"content":"SerializeObjectState","pos":[0,20]}]},{"pos":[23011,23025],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[23144,23150],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[23217,23218],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23268,23274],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[23334,23335],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23418,23424],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[23491,23492],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23542,23548],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[23608,23609],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23823,23845],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[23993,23999],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[24066,24067],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24117,24123],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[24184,24185]},{"pos":[24240,24246],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[24306,24307],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24404,24410],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[24477,24478],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24528,24534],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[24595,24596]},{"pos":[24651,24657],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[24717,24718],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24963,24994],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[25160,25175],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[25251,25252],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25302,25308],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[25369,25370]},{"pos":[25425,25431],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[25491,25492],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25598,25613],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[25689,25690],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25740,25746],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[25807,25808]},{"pos":[25863,25869],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[25929,25930],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26160,26173],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[26274,26285],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[26357,26358],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26385,26386],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26459,26470],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[26542,26543],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26570,26571],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26754,26771],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[26880,26895],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[26971,26972],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26999,27000],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27077,27092],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[27168,27169],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27196,27197],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27342,27348],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[27479,27509],"content":"System.Runtime.InteropServices","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices","pos":[0,30]}]},{"pos":[27710,27738],"content":"System.Runtime.Serialization","needQuote":true,"nodes":[{"content":"System.Runtime.Serialization","pos":[0,28]}]},{"pos":[27935,27941],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[28123,28130],"content":"Message","needQuote":true,"nodes":[{"content":"Message","pos":[0,7]}]}],"content":"items:\n- uid: System.Globalization.CultureNotFoundException\n  commentId: T:System.Globalization.CultureNotFoundException\n  id: CultureNotFoundException\n  parent: System.Globalization\n  children:\n  - System.Globalization.CultureNotFoundException.#ctor\n  - System.Globalization.CultureNotFoundException.#ctor(System.String)\n  - System.Globalization.CultureNotFoundException.#ctor(System.String,System.Exception)\n  - System.Globalization.CultureNotFoundException.#ctor(System.String,System.String)\n  - System.Globalization.CultureNotFoundException.#ctor(System.String,System.String,System.Exception)\n  - System.Globalization.CultureNotFoundException.#ctor(System.String,System.String,System.String)\n  - System.Globalization.CultureNotFoundException.InvalidCultureName\n  - System.Globalization.CultureNotFoundException.Message\n  langs:\n  - csharp\n  - vb\n  name: CultureNotFoundException\n  fullName: System.Globalization.CultureNotFoundException\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/CultureNotFoundException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: CultureNotFoundException\n    path: src/mscorlib/src/System/Globalization/CultureNotFoundException.cs\n    startLine: 12\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>The exception that is thrown when a method attempts to construct a culture that is not available.</p>\\n\"\n  syntax:\n    content: >-\n      [ComVisible(true)]\n\n      [Serializable]\n\n      public class CultureNotFoundException : ArgumentException, _Exception, ISerializable\n    content.vb: >-\n      <ComVisible(True)>\n\n      <Serializable>\n\n      Public Class CultureNotFoundException\n          Inherits ArgumentException\n          Implements _Exception, ISerializable\n  inheritance:\n  - System.Object\n  - System.Exception\n  - System.SystemException\n  - System.ArgumentException\n  implements:\n  - System.Runtime.InteropServices._Exception\n  - System.Runtime.Serialization.ISerializable\n  inheritedMembers:\n  - System.ArgumentException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.ArgumentException.ParamName\n  - System.Exception.GetBaseException\n  - System.Exception.ToString\n  - System.Exception.GetType\n  - System.Exception.Data\n  - System.Exception.InnerException\n  - System.Exception.TargetSite\n  - System.Exception.StackTrace\n  - System.Exception.HelpLink\n  - System.Exception.Source\n  - System.Exception.HResult\n  - System.Exception.SerializeObjectState\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: CultureNotFoundException\n- uid: System.Globalization.CultureNotFoundException.#ctor\n  commentId: M:System.Globalization.CultureNotFoundException.#ctor\n  id: '#ctor'\n  parent: System.Globalization.CultureNotFoundException\n  langs:\n  - csharp\n  - vb\n  name: CultureNotFoundException()\n  fullName: System.Globalization.CultureNotFoundException.CultureNotFoundException()\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/CultureNotFoundException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Globalization/CultureNotFoundException.cs\n    startLine: 21\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Globalization.CultureNotFoundException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with its message string set to a system-supplied message.</p>\\n\"\n  syntax:\n    content: public CultureNotFoundException()\n    content.vb: Public Sub New\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: CultureNotFoundException.CultureNotFoundException()\n- uid: System.Globalization.CultureNotFoundException.#ctor(System.String)\n  commentId: M:System.Globalization.CultureNotFoundException.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Globalization.CultureNotFoundException\n  langs:\n  - csharp\n  - vb\n  name: CultureNotFoundException(String)\n  fullName: System.Globalization.CultureNotFoundException.CultureNotFoundException(System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/CultureNotFoundException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Globalization/CultureNotFoundException.cs\n    startLine: 26\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Globalization.CultureNotFoundException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified error message.</p>\\n\"\n  syntax:\n    content: public CultureNotFoundException(string message)\n    content.vb: Public Sub New(message As String)\n    parameters:\n    - id: message\n      type: System.String\n      description: \"\\n<p>The error message to display with this exception.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: CultureNotFoundException.CultureNotFoundException(String)\n- uid: System.Globalization.CultureNotFoundException.#ctor(System.String,System.Exception)\n  commentId: M:System.Globalization.CultureNotFoundException.#ctor(System.String,System.Exception)\n  id: '#ctor(System.String,System.Exception)'\n  parent: System.Globalization.CultureNotFoundException\n  langs:\n  - csharp\n  - vb\n  name: CultureNotFoundException(String, Exception)\n  fullName: System.Globalization.CultureNotFoundException.CultureNotFoundException(System.String, System.Exception)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/CultureNotFoundException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Globalization/CultureNotFoundException.cs\n    startLine: 36\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Globalization.CultureNotFoundException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception.</p>\\n\"\n  syntax:\n    content: public CultureNotFoundException(string message, Exception innerException)\n    content.vb: Public Sub New(message As String, innerException As Exception)\n    parameters:\n    - id: message\n      type: System.String\n      description: \"\\n<p>The error message to display with this exception.</p>\\n\"\n    - id: innerException\n      type: System.Exception\n      description: \"\\n<p>The exception that is the cause of the current exception. If the <em>innerException</em> parameter is not a null reference, the current exception is raised in a <strong>catch</strong> block that handles the inner exception.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: CultureNotFoundException.CultureNotFoundException(String, Exception)\n- uid: System.Globalization.CultureNotFoundException.#ctor(System.String,System.String)\n  commentId: M:System.Globalization.CultureNotFoundException.#ctor(System.String,System.String)\n  id: '#ctor(System.String,System.String)'\n  parent: System.Globalization.CultureNotFoundException\n  langs:\n  - csharp\n  - vb\n  name: CultureNotFoundException(String, String)\n  fullName: System.Globalization.CultureNotFoundException.CultureNotFoundException(System.String, System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/CultureNotFoundException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Globalization/CultureNotFoundException.cs\n    startLine: 31\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Globalization.CultureNotFoundException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with a specified error message and the name of the parameter that is the cause this exception.</p>\\n\"\n  syntax:\n    content: public CultureNotFoundException(string paramName, string message)\n    content.vb: Public Sub New(paramName As String, message As String)\n    parameters:\n    - id: paramName\n      type: System.String\n      description: \"\\n<p>The name of the parameter that is the cause of the current exception.</p>\\n\"\n    - id: message\n      type: System.String\n      description: \"\\n<p>The error message to display with this exception.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: CultureNotFoundException.CultureNotFoundException(String, String)\n- uid: System.Globalization.CultureNotFoundException.#ctor(System.String,System.String,System.Exception)\n  commentId: M:System.Globalization.CultureNotFoundException.#ctor(System.String,System.String,System.Exception)\n  id: '#ctor(System.String,System.String,System.Exception)'\n  parent: System.Globalization.CultureNotFoundException\n  langs:\n  - csharp\n  - vb\n  name: CultureNotFoundException(String, String, Exception)\n  fullName: System.Globalization.CultureNotFoundException.CultureNotFoundException(System.String, System.String, System.Exception)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/CultureNotFoundException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Globalization/CultureNotFoundException.cs\n    startLine: 60\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Globalization.CultureNotFoundException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with a specified error message, the invalid Culture Name, and a reference to the inner exception that is the cause of this exception.</p>\\n\"\n  syntax:\n    content: public CultureNotFoundException(string message, string invalidCultureName, Exception innerException)\n    content.vb: Public Sub New(message As String, invalidCultureName As String, innerException As Exception)\n    parameters:\n    - id: message\n      type: System.String\n      description: \"\\n<p>The error message to display with this exception.</p>\\n\"\n    - id: invalidCultureName\n      type: System.String\n      description: \"\\n<p>The Culture Name that cannot be found.</p>\\n\"\n    - id: innerException\n      type: System.Exception\n      description: \"\\n<p>The exception that is the cause of the current exception. If the <em>innerException</em> parameter is not a null reference, the current exception is raised in a <strong>catch</strong> block that handles the inner exception.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: CultureNotFoundException.CultureNotFoundException(String, String, Exception)\n- uid: System.Globalization.CultureNotFoundException.#ctor(System.String,System.String,System.String)\n  commentId: M:System.Globalization.CultureNotFoundException.#ctor(System.String,System.String,System.String)\n  id: '#ctor(System.String,System.String,System.String)'\n  parent: System.Globalization.CultureNotFoundException\n  langs:\n  - csharp\n  - vb\n  name: CultureNotFoundException(String, String, String)\n  fullName: System.Globalization.CultureNotFoundException.CultureNotFoundException(System.String, System.String, System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/CultureNotFoundException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Globalization/CultureNotFoundException.cs\n    startLine: 54\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Globalization.CultureNotFoundException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with a specified error message, the invalid Culture Name, and the name of the parameter that is the cause this exception.</p>\\n\"\n  syntax:\n    content: public CultureNotFoundException(string paramName, string invalidCultureName, string message)\n    content.vb: Public Sub New(paramName As String, invalidCultureName As String, message As String)\n    parameters:\n    - id: paramName\n      type: System.String\n      description: \"\\n<p>The name of the parameter that is the cause the current exception.</p>\\n\"\n    - id: invalidCultureName\n      type: System.String\n      description: \"\\n<p>The Culture Name that cannot be found.</p>\\n\"\n    - id: message\n      type: System.String\n      description: \"\\n<p>The error message to display with this exception.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: CultureNotFoundException.CultureNotFoundException(String, String, String)\n- uid: System.Globalization.CultureNotFoundException.InvalidCultureName\n  commentId: P:System.Globalization.CultureNotFoundException.InvalidCultureName\n  id: InvalidCultureName\n  parent: System.Globalization.CultureNotFoundException\n  langs:\n  - csharp\n  - vb\n  name: InvalidCultureName\n  fullName: System.Globalization.CultureNotFoundException.InvalidCultureName\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/CultureNotFoundException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: InvalidCultureName\n    path: src/mscorlib/src/System/Globalization/CultureNotFoundException.cs\n    startLine: 94\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets the culture name that cannot be found.</p>\\n\"\n  syntax:\n    content: public virtual string InvalidCultureName { get; }\n    content.vb: Public Overridable ReadOnly Property InvalidCultureName As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The invalid culture name.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  nameWithType: CultureNotFoundException.InvalidCultureName\n- uid: System.Globalization.CultureNotFoundException.Message\n  commentId: P:System.Globalization.CultureNotFoundException.Message\n  id: Message\n  parent: System.Globalization.CultureNotFoundException\n  langs:\n  - csharp\n  - vb\n  name: Message\n  fullName: System.Globalization.CultureNotFoundException.Message\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/CultureNotFoundException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Message\n    path: src/mscorlib/src/System/Globalization/CultureNotFoundException.cs\n    startLine: 122\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets the error message that explains the reason for the exception.</p>\\n\"\n  syntax:\n    content: public override string Message { get; }\n    content.vb: Public Overrides ReadOnly Property Message As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>A text string describing the details of the exception.</p>\\n\"\n  overridden: System.ArgumentException.Message\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: CultureNotFoundException.Message\nreferences:\n- uid: System.Globalization\n  isExternal: false\n  name: System.Globalization\n  fullName: System.Globalization\n  nameWithType: System.Globalization\n  commentId: N:System.Globalization\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  fullName: System.Exception\n  nameWithType: Exception\n  commentId: T:System.Exception\n- uid: System.SystemException\n  parent: System\n  isExternal: true\n  name: SystemException\n  fullName: System.SystemException\n  nameWithType: SystemException\n  commentId: T:System.SystemException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n- uid: System.Runtime.InteropServices._Exception\n  parent: System.Runtime.InteropServices\n  isExternal: true\n  name: _Exception\n  fullName: System.Runtime.InteropServices._Exception\n  nameWithType: _Exception\n  commentId: T:System.Runtime.InteropServices._Exception\n- uid: System.Runtime.Serialization.ISerializable\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: ISerializable\n  fullName: System.Runtime.Serialization.ISerializable\n  nameWithType: ISerializable\n  commentId: T:System.Runtime.Serialization.ISerializable\n- uid: System.ArgumentException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.ArgumentException\n  isExternal: true\n  name: GetObjectData(SerializationInfo, StreamingContext)\n  fullName: System.ArgumentException.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)\n  spec.csharp:\n  - uid: System.ArgumentException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n    name: GetObjectData\n    fullName: System.ArgumentException.GetObjectData\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Runtime.Serialization.SerializationInfo\n    name: SerializationInfo\n    fullName: System.Runtime.Serialization.SerializationInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Runtime.Serialization.StreamingContext\n    name: StreamingContext\n    fullName: System.Runtime.Serialization.StreamingContext\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ArgumentException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n    name: GetObjectData\n    fullName: System.ArgumentException.GetObjectData\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Runtime.Serialization.SerializationInfo\n    name: SerializationInfo\n    fullName: System.Runtime.Serialization.SerializationInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Runtime.Serialization.StreamingContext\n    name: StreamingContext\n    fullName: System.Runtime.Serialization.StreamingContext\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: ArgumentException.GetObjectData(SerializationInfo, StreamingContext)\n  commentId: M:System.ArgumentException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n- uid: System.ArgumentException.ParamName\n  parent: System.ArgumentException\n  isExternal: false\n  name: ParamName\n  fullName: System.ArgumentException.ParamName\n  nameWithType: ArgumentException.ParamName\n  commentId: P:System.ArgumentException.ParamName\n- uid: System.Exception.GetBaseException\n  parent: System.Exception\n  isExternal: false\n  name: GetBaseException()\n  fullName: System.Exception.GetBaseException()\n  spec.csharp:\n  - uid: System.Exception.GetBaseException\n    name: GetBaseException\n    fullName: System.Exception.GetBaseException\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Exception.GetBaseException\n    name: GetBaseException\n    fullName: System.Exception.GetBaseException\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Exception.GetBaseException()\n  commentId: M:System.Exception.GetBaseException\n- uid: System.Exception.ToString\n  parent: System.Exception\n  isExternal: false\n  name: ToString()\n  fullName: System.Exception.ToString()\n  spec.csharp:\n  - uid: System.Exception.ToString\n    name: ToString\n    fullName: System.Exception.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Exception.ToString\n    name: ToString\n    fullName: System.Exception.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Exception.ToString()\n  commentId: M:System.Exception.ToString\n- uid: System.Exception.GetType\n  parent: System.Exception\n  isExternal: true\n  name: GetType()\n  fullName: System.Exception.GetType()\n  spec.csharp:\n  - uid: System.Exception.GetType\n    name: GetType\n    fullName: System.Exception.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Exception.GetType\n    name: GetType\n    fullName: System.Exception.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Exception.GetType()\n  commentId: M:System.Exception.GetType\n- uid: System.Exception.Data\n  parent: System.Exception\n  isExternal: false\n  name: Data\n  fullName: System.Exception.Data\n  nameWithType: Exception.Data\n  commentId: P:System.Exception.Data\n- uid: System.Exception.InnerException\n  parent: System.Exception\n  isExternal: false\n  name: InnerException\n  fullName: System.Exception.InnerException\n  nameWithType: Exception.InnerException\n  commentId: P:System.Exception.InnerException\n- uid: System.Exception.TargetSite\n  parent: System.Exception\n  isExternal: true\n  name: TargetSite\n  fullName: System.Exception.TargetSite\n  nameWithType: Exception.TargetSite\n  commentId: P:System.Exception.TargetSite\n- uid: System.Exception.StackTrace\n  parent: System.Exception\n  isExternal: false\n  name: StackTrace\n  fullName: System.Exception.StackTrace\n  nameWithType: Exception.StackTrace\n  commentId: P:System.Exception.StackTrace\n- uid: System.Exception.HelpLink\n  parent: System.Exception\n  isExternal: false\n  name: HelpLink\n  fullName: System.Exception.HelpLink\n  nameWithType: Exception.HelpLink\n  commentId: P:System.Exception.HelpLink\n- uid: System.Exception.Source\n  parent: System.Exception\n  isExternal: false\n  name: Source\n  fullName: System.Exception.Source\n  nameWithType: Exception.Source\n  commentId: P:System.Exception.Source\n- uid: System.Exception.HResult\n  parent: System.Exception\n  isExternal: false\n  name: HResult\n  fullName: System.Exception.HResult\n  nameWithType: Exception.HResult\n  commentId: P:System.Exception.HResult\n- uid: System.Exception.SerializeObjectState\n  parent: System.Exception\n  isExternal: true\n  name: SerializeObjectState\n  fullName: System.Exception.SerializeObjectState\n  nameWithType: Exception.SerializeObjectState\n  commentId: E:System.Exception.SerializeObjectState\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Runtime.InteropServices\n  isExternal: false\n  name: System.Runtime.InteropServices\n  fullName: System.Runtime.InteropServices\n  nameWithType: System.Runtime.InteropServices\n  commentId: N:System.Runtime.InteropServices\n- uid: System.Runtime.Serialization\n  isExternal: false\n  name: System.Runtime.Serialization\n  fullName: System.Runtime.Serialization\n  nameWithType: System.Runtime.Serialization\n  commentId: N:System.Runtime.Serialization\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.ArgumentException.Message\n  parent: System.ArgumentException\n  isExternal: false\n  name: Message\n  fullName: System.ArgumentException.Message\n  nameWithType: ArgumentException.Message\n  commentId: P:System.ArgumentException.Message\n"}