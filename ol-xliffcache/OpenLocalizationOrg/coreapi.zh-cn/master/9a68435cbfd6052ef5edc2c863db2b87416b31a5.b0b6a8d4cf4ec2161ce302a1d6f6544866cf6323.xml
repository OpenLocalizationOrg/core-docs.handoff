{"nodes":[{"pos":[639,654],"content":"LabelExpression","needQuote":true,"nodes":[{"content":"LabelExpression","pos":[0,15]}]},{"pos":[42509,42521],"content":"DefaultValue","needQuote":true,"nodes":[{"content":"DefaultValue","pos":[0,12]}]},{"pos":[43922,43930],"content":"NodeType","needQuote":true,"nodes":[{"content":"NodeType","pos":[0,8]}]},{"pos":[45377,45383],"content":"Target","needQuote":true,"nodes":[{"content":"Target","pos":[0,6]}]},{"pos":[46661,46665],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[48224,48249],"content":"Accept(ExpressionVisitor)","needQuote":true,"nodes":[{"content":"Accept(ExpressionVisitor)","pos":[0,25]}]},{"pos":[49720,49751],"content":"Update(LabelTarget, Expression)","needQuote":true,"nodes":[{"content":"Update(LabelTarget, Expression)","pos":[0,31]}]},{"content":"\\n&lt;p&gt;This expression if no children are changed or an expression with the updated children.&lt;/p&gt;\\n","pos":[51199,51296],"source":"\\n<p>This expression if no children are changed or an expression with the updated children.</p>\\n"},{"pos":[51491,51514],"content":"System.Linq.Expressions","needQuote":true,"nodes":[{"content":"System.Linq.Expressions","pos":[0,23]}]},{"pos":[51696,51702],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[51885,51895],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[52145,52154],"content":"CanReduce","needQuote":true,"nodes":[{"content":"CanReduce","pos":[0,9]}]},{"pos":[52499,52526],"content":"Add(Expression, Expression)","needQuote":true,"nodes":[{"content":"Add(Expression, Expression)","pos":[0,27]}]},{"pos":[52794,52797],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[52861,52862],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[52933,52943],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[53004,53005]},{"pos":[53081,53091],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[53151,53152],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[53309,53312],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[53376,53377],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[53448,53458],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[53519,53520]},{"pos":[53596,53606],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[53666,53667],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[54082,54121],"content":"Add(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"Add(Expression, Expression, MethodInfo)","pos":[0,39]}]},{"pos":[54448,54451],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[54515,54516],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[54587,54597],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[54658,54659]},{"pos":[54735,54745],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[54806,54807]},{"pos":[54877,54887],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[54962,54963],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[55149,55152],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[55216,55217],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[55288,55298],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[55359,55360]},{"pos":[55436,55446],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[55507,55508]},{"pos":[55578,55588],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[55663,55664],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[56098,56131],"content":"AddAssign(Expression, Expression)","needQuote":true,"nodes":[{"content":"AddAssign(Expression, Expression)","pos":[0,33]}]},{"pos":[56411,56420],"content":"AddAssign","needQuote":true,"nodes":[{"content":"AddAssign","pos":[0,9]}]},{"pos":[56490,56491],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[56562,56572],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[56633,56634]},{"pos":[56710,56720],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[56780,56781],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[56944,56953],"content":"AddAssign","needQuote":true,"nodes":[{"content":"AddAssign","pos":[0,9]}]},{"pos":[57023,57024],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[57095,57105],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[57166,57167]},{"pos":[57243,57253],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[57313,57314],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[57747,57792],"content":"AddAssign(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"AddAssign(Expression, Expression, MethodInfo)","pos":[0,45]}]},{"pos":[58131,58140],"content":"AddAssign","needQuote":true,"nodes":[{"content":"AddAssign","pos":[0,9]}]},{"pos":[58210,58211],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[58282,58292],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[58353,58354]},{"pos":[58430,58440],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[58501,58502]},{"pos":[58572,58582],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[58657,58658],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[58850,58859],"content":"AddAssign","needQuote":true,"nodes":[{"content":"AddAssign","pos":[0,9]}]},{"pos":[58929,58930],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[59001,59011],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[59072,59073]},{"pos":[59149,59159],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[59220,59221]},{"pos":[59291,59301],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[59376,59377],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[59892,59955],"content":"AddAssign(Expression, Expression, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"AddAssign(Expression, Expression, MethodInfo, LambdaExpression)","pos":[0,63]}]},{"pos":[60377,60386],"content":"AddAssign","needQuote":true,"nodes":[{"content":"AddAssign","pos":[0,9]}]},{"pos":[60456,60457],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[60528,60538],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[60599,60600]},{"pos":[60676,60686],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[60747,60748]},{"pos":[60818,60828],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[60904,60905]},{"pos":[60987,61003],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[61069,61070],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[61303,61312],"content":"AddAssign","needQuote":true,"nodes":[{"content":"AddAssign","pos":[0,9]}]},{"pos":[61382,61383],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[61454,61464],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[61525,61526]},{"pos":[61602,61612],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[61673,61674]},{"pos":[61744,61754],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[61830,61831]},{"pos":[61913,61929],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[61995,61996],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[62508,62548],"content":"AddAssignChecked(Expression, Expression)","needQuote":true,"nodes":[{"content":"AddAssignChecked(Expression, Expression)","pos":[0,40]}]},{"pos":[62842,62858],"content":"AddAssignChecked","needQuote":true,"nodes":[{"content":"AddAssignChecked","pos":[0,16]}]},{"pos":[62935,62936],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[63007,63017],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[63078,63079]},{"pos":[63155,63165],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[63225,63226],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[63396,63412],"content":"AddAssignChecked","needQuote":true,"nodes":[{"content":"AddAssignChecked","pos":[0,16]}]},{"pos":[63489,63490],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[63561,63571],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[63632,63633]},{"pos":[63709,63719],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[63779,63780],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[64234,64286],"content":"AddAssignChecked(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"AddAssignChecked(Expression, Expression, MethodInfo)","pos":[0,52]}]},{"pos":[64639,64655],"content":"AddAssignChecked","needQuote":true,"nodes":[{"content":"AddAssignChecked","pos":[0,16]}]},{"pos":[64732,64733],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[64804,64814],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[64875,64876]},{"pos":[64952,64962],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[65023,65024]},{"pos":[65094,65104],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[65179,65180],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[65379,65395],"content":"AddAssignChecked","needQuote":true,"nodes":[{"content":"AddAssignChecked","pos":[0,16]}]},{"pos":[65472,65473],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[65544,65554],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[65615,65616]},{"pos":[65692,65702],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[65763,65764]},{"pos":[65834,65844],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[65919,65920],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[66456,66526],"content":"AddAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"AddAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)","pos":[0,70]}]},{"pos":[66962,66978],"content":"AddAssignChecked","needQuote":true,"nodes":[{"content":"AddAssignChecked","pos":[0,16]}]},{"pos":[67055,67056],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[67127,67137],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[67198,67199]},{"pos":[67275,67285],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[67346,67347]},{"pos":[67417,67427],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[67503,67504]},{"pos":[67586,67602],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[67668,67669],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[67909,67925],"content":"AddAssignChecked","needQuote":true,"nodes":[{"content":"AddAssignChecked","pos":[0,16]}]},{"pos":[68002,68003],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[68074,68084],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[68145,68146]},{"pos":[68222,68232],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[68293,68294]},{"pos":[68364,68374],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[68450,68451]},{"pos":[68533,68549],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[68615,68616],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[69136,69170],"content":"AddChecked(Expression, Expression)","needQuote":true,"nodes":[{"content":"AddChecked(Expression, Expression)","pos":[0,34]}]},{"pos":[69452,69462],"content":"AddChecked","needQuote":true,"nodes":[{"content":"AddChecked","pos":[0,10]}]},{"pos":[69533,69534],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[69605,69615],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[69676,69677]},{"pos":[69753,69763],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[69823,69824],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[69988,69998],"content":"AddChecked","needQuote":true,"nodes":[{"content":"AddChecked","pos":[0,10]}]},{"pos":[70069,70070],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[70141,70151],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[70212,70213]},{"pos":[70289,70299],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[70359,70360],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[70796,70842],"content":"AddChecked(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"AddChecked(Expression, Expression, MethodInfo)","pos":[0,46]}]},{"pos":[71183,71193],"content":"AddChecked","needQuote":true,"nodes":[{"content":"AddChecked","pos":[0,10]}]},{"pos":[71264,71265],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[71336,71346],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[71407,71408]},{"pos":[71484,71494],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[71555,71556]},{"pos":[71626,71636],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[71711,71712],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[71905,71915],"content":"AddChecked","needQuote":true,"nodes":[{"content":"AddChecked","pos":[0,10]}]},{"pos":[71986,71987],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[72058,72068],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[72129,72130]},{"pos":[72206,72216],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[72277,72278]},{"pos":[72348,72358],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[72433,72434],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[72876,72903],"content":"And(Expression, Expression)","needQuote":true,"nodes":[{"content":"And(Expression, Expression)","pos":[0,27]}]},{"pos":[73171,73174],"content":"And","needQuote":true,"nodes":[{"content":"And","pos":[0,3]}]},{"pos":[73238,73239],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[73310,73320],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[73381,73382]},{"pos":[73458,73468],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[73528,73529],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[73686,73689],"content":"And","needQuote":true,"nodes":[{"content":"And","pos":[0,3]}]},{"pos":[73753,73754],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[73825,73835],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[73896,73897]},{"pos":[73973,73983],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[74043,74044],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[74459,74498],"content":"And(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"And(Expression, Expression, MethodInfo)","pos":[0,39]}]},{"pos":[74825,74828],"content":"And","needQuote":true,"nodes":[{"content":"And","pos":[0,3]}]},{"pos":[74892,74893],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[74964,74974],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[75035,75036]},{"pos":[75112,75122],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[75183,75184]},{"pos":[75254,75264],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[75339,75340],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[75526,75529],"content":"And","needQuote":true,"nodes":[{"content":"And","pos":[0,3]}]},{"pos":[75593,75594],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[75665,75675],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[75736,75737]},{"pos":[75813,75823],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[75884,75885]},{"pos":[75955,75965],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[76040,76041],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[76473,76504],"content":"AndAlso(Expression, Expression)","needQuote":true,"nodes":[{"content":"AndAlso(Expression, Expression)","pos":[0,31]}]},{"pos":[76780,76787],"content":"AndAlso","needQuote":true,"nodes":[{"content":"AndAlso","pos":[0,7]}]},{"pos":[76855,76856],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[76927,76937],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[76998,76999]},{"pos":[77075,77085],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[77145,77146],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[77307,77314],"content":"AndAlso","needQuote":true,"nodes":[{"content":"AndAlso","pos":[0,7]}]},{"pos":[77382,77383],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[77454,77464],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[77525,77526]},{"pos":[77602,77612],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[77672,77673],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[78100,78143],"content":"AndAlso(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"AndAlso(Expression, Expression, MethodInfo)","pos":[0,43]}]},{"pos":[78478,78485],"content":"AndAlso","needQuote":true,"nodes":[{"content":"AndAlso","pos":[0,7]}]},{"pos":[78553,78554],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[78625,78635],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[78696,78697]},{"pos":[78773,78783],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[78844,78845]},{"pos":[78915,78925],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[79000,79001],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[79191,79198],"content":"AndAlso","needQuote":true,"nodes":[{"content":"AndAlso","pos":[0,7]}]},{"pos":[79266,79267],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[79338,79348],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[79409,79410]},{"pos":[79486,79496],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[79557,79558]},{"pos":[79628,79638],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[79713,79714],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[80156,80189],"content":"AndAssign(Expression, Expression)","needQuote":true,"nodes":[{"content":"AndAssign(Expression, Expression)","pos":[0,33]}]},{"pos":[80469,80478],"content":"AndAssign","needQuote":true,"nodes":[{"content":"AndAssign","pos":[0,9]}]},{"pos":[80548,80549],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[80620,80630],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[80691,80692]},{"pos":[80768,80778],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[80838,80839],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[81002,81011],"content":"AndAssign","needQuote":true,"nodes":[{"content":"AndAssign","pos":[0,9]}]},{"pos":[81081,81082],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[81153,81163],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[81224,81225]},{"pos":[81301,81311],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[81371,81372],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[81805,81850],"content":"AndAssign(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"AndAssign(Expression, Expression, MethodInfo)","pos":[0,45]}]},{"pos":[82189,82198],"content":"AndAssign","needQuote":true,"nodes":[{"content":"AndAssign","pos":[0,9]}]},{"pos":[82268,82269],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[82340,82350],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[82411,82412]},{"pos":[82488,82498],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[82559,82560]},{"pos":[82630,82640],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[82715,82716],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[82908,82917],"content":"AndAssign","needQuote":true,"nodes":[{"content":"AndAssign","pos":[0,9]}]},{"pos":[82987,82988],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[83059,83069],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[83130,83131]},{"pos":[83207,83217],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[83278,83279]},{"pos":[83349,83359],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[83434,83435],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[83950,84013],"content":"AndAssign(Expression, Expression, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"AndAssign(Expression, Expression, MethodInfo, LambdaExpression)","pos":[0,63]}]},{"pos":[84435,84444],"content":"AndAssign","needQuote":true,"nodes":[{"content":"AndAssign","pos":[0,9]}]},{"pos":[84514,84515],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[84586,84596],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[84657,84658]},{"pos":[84734,84744],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[84805,84806]},{"pos":[84876,84886],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[84962,84963]},{"pos":[85045,85061],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[85127,85128],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[85361,85370],"content":"AndAssign","needQuote":true,"nodes":[{"content":"AndAssign","pos":[0,9]}]},{"pos":[85440,85441],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[85512,85522],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[85583,85584]},{"pos":[85660,85670],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[85731,85732]},{"pos":[85802,85812],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[85888,85889]},{"pos":[85971,85987],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[86053,86054],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[86600,86648],"content":"ArrayAccess(Expression, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"ArrayAccess(Expression, IEnumerable&lt;Expression&gt;)","pos":[0,48],"source":"ArrayAccess(Expression, IEnumerable<Expression>)"}]},{"pos":[87252,87263],"content":"ArrayAccess","needQuote":true,"nodes":[{"content":"ArrayAccess","pos":[0,11]}]},{"pos":[87335,87336],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[87407,87417],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[87478,87479]},{"pos":[87561,87572],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[87657,87658],"content":"<","needQuote":true,"nodes":[]},{"pos":[87729,87739],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[87831,87832],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[88037,88048],"content":"ArrayAccess","needQuote":true,"nodes":[{"content":"ArrayAccess","pos":[0,11]}]},{"pos":[88120,88121],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[88192,88202],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[88263,88264]},{"pos":[88346,88357],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[88443,88446]},{"pos":[88524,88534],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[88594,88595],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[88622,88623],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[89171,89208],"content":"ArrayAccess(Expression, Expression[])","needQuote":true,"nodes":[{"content":"ArrayAccess(Expression, Expression[])","pos":[0,37]}]},{"pos":[89681,89692],"content":"ArrayAccess","needQuote":true,"nodes":[{"content":"ArrayAccess","pos":[0,11]}]},{"pos":[89764,89765],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[89836,89846],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[89907,89908]},{"pos":[89984,89994],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[90055,90057]},{"pos":[90088,90089],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[90256,90267],"content":"ArrayAccess","needQuote":true,"nodes":[{"content":"ArrayAccess","pos":[0,11]}]},{"pos":[90339,90340],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[90411,90421],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[90482,90483]},{"pos":[90559,90569],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[90629,90631],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[90659,90660],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[91181,91228],"content":"ArrayIndex(Expression, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"ArrayIndex(Expression, IEnumerable&lt;Expression&gt;)","pos":[0,47],"source":"ArrayIndex(Expression, IEnumerable<Expression>)"}]},{"pos":[91828,91838],"content":"ArrayIndex","needQuote":true,"nodes":[{"content":"ArrayIndex","pos":[0,10]}]},{"pos":[91909,91910],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[91981,91991],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[92052,92053]},{"pos":[92135,92146],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[92231,92232],"content":"<","needQuote":true,"nodes":[]},{"pos":[92303,92313],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[92405,92406],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[92610,92620],"content":"ArrayIndex","needQuote":true,"nodes":[{"content":"ArrayIndex","pos":[0,10]}]},{"pos":[92691,92692],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[92763,92773],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[92834,92835]},{"pos":[92917,92928],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[93014,93017]},{"pos":[93095,93105],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[93165,93166],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[93193,93194],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[93736,93770],"content":"ArrayIndex(Expression, Expression)","needQuote":true,"nodes":[{"content":"ArrayIndex(Expression, Expression)","pos":[0,34]}]},{"pos":[94052,94062],"content":"ArrayIndex","needQuote":true,"nodes":[{"content":"ArrayIndex","pos":[0,10]}]},{"pos":[94133,94134],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[94205,94215],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[94276,94277]},{"pos":[94353,94363],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[94423,94424],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[94588,94598],"content":"ArrayIndex","needQuote":true,"nodes":[{"content":"ArrayIndex","pos":[0,10]}]},{"pos":[94669,94670],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[94741,94751],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[94812,94813]},{"pos":[94889,94899],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[94959,94960],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[95370,95406],"content":"ArrayIndex(Expression, Expression[])","needQuote":true,"nodes":[{"content":"ArrayIndex(Expression, Expression[])","pos":[0,36]}]},{"pos":[95875,95885],"content":"ArrayIndex","needQuote":true,"nodes":[{"content":"ArrayIndex","pos":[0,10]}]},{"pos":[95956,95957],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[96028,96038],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[96099,96100]},{"pos":[96176,96186],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[96247,96249]},{"pos":[96280,96281],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[96447,96457],"content":"ArrayIndex","needQuote":true,"nodes":[{"content":"ArrayIndex","pos":[0,10]}]},{"pos":[96528,96529],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[96600,96610],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[96671,96672]},{"pos":[96748,96758],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[96818,96820],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[96848,96849],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[97294,97317],"content":"ArrayLength(Expression)","needQuote":true,"nodes":[{"content":"ArrayLength(Expression)","pos":[0,23]}]},{"pos":[97530,97541],"content":"ArrayLength","needQuote":true,"nodes":[{"content":"ArrayLength","pos":[0,11]}]},{"pos":[97613,97614],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[97685,97695],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[97755,97756],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[97886,97897],"content":"ArrayLength","needQuote":true,"nodes":[{"content":"ArrayLength","pos":[0,11]}]},{"pos":[97969,97970],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[98041,98051],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[98111,98112],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[98471,98501],"content":"Assign(Expression, Expression)","needQuote":true,"nodes":[{"content":"Assign(Expression, Expression)","pos":[0,30]}]},{"pos":[98775,98781],"content":"Assign","needQuote":true,"nodes":[{"content":"Assign","pos":[0,6]}]},{"pos":[98848,98849],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[98920,98930],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[98991,98992]},{"pos":[99068,99078],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[99138,99139],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[99299,99305],"content":"Assign","needQuote":true,"nodes":[{"content":"Assign","pos":[0,6]}]},{"pos":[99372,99373],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[99444,99454],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[99515,99516]},{"pos":[99592,99602],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[99662,99663],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[100050,100078],"content":"Bind(MemberInfo, Expression)","needQuote":true,"nodes":[{"content":"Bind(MemberInfo, Expression)","pos":[0,28]}]},{"pos":[100336,100340],"content":"Bind","needQuote":true,"nodes":[{"content":"Bind","pos":[0,4]}]},{"pos":[100405,100406],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[100471,100481],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[100557,100558]},{"pos":[100634,100644],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[100704,100705],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[100857,100861],"content":"Bind","needQuote":true,"nodes":[{"content":"Bind","pos":[0,4]}]},{"pos":[100926,100927],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[100992,101002],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[101078,101079]},{"pos":[101155,101165],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[101225,101226],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[101603,101631],"content":"Bind(MethodInfo, Expression)","needQuote":true,"nodes":[{"content":"Bind(MethodInfo, Expression)","pos":[0,28]}]},{"pos":[101889,101893],"content":"Bind","needQuote":true,"nodes":[{"content":"Bind","pos":[0,4]}]},{"pos":[101958,101959],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[102024,102034],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[102110,102111]},{"pos":[102187,102197],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[102257,102258],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[102410,102414],"content":"Bind","needQuote":true,"nodes":[{"content":"Bind","pos":[0,4]}]},{"pos":[102479,102480],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[102545,102555],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[102631,102632]},{"pos":[102708,102718],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[102778,102779],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[103168,103198],"content":"Block(IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"Block(IEnumerable&lt;Expression&gt;)","pos":[0,30],"source":"Block(IEnumerable<Expression>)"}]},{"pos":[103659,103664],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[103730,103731],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[103808,103819],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[103904,103905],"content":"<","needQuote":true,"nodes":[]},{"pos":[103976,103986],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[104078,104079],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[104243,104248],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[104314,104315],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[104392,104403],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[104489,104492]},{"pos":[104570,104580],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[104640,104641],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[104668,104669],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[105220,105284],"content":"Block(IEnumerable<ParameterExpression>, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"Block(IEnumerable&lt;ParameterExpression&gt;, IEnumerable&lt;Expression&gt;)","pos":[0,64],"source":"Block(IEnumerable<ParameterExpression>, IEnumerable<Expression>)"}]},{"pos":[106039,106044],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[106110,106111],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[106188,106199],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[106284,106285],"content":"<","needQuote":true,"nodes":[]},{"pos":[106365,106384],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":",","pos":[106486,106487]},{"pos":[106569,106580],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[106665,106666],"content":"<","needQuote":true,"nodes":[]},{"pos":[106737,106747],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[106839,106840],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[107088,107093],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[107159,107160],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[107237,107248],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[107334,107337]},{"pos":[107424,107443],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[107512,107513],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[107541,107542]},{"pos":[107624,107635],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[107721,107724]},{"pos":[107802,107812],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[107872,107873],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[107900,107901],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[108569,108622],"content":"Block(IEnumerable<ParameterExpression>, Expression[])","needQuote":true,"nodes":[{"content":"Block(IEnumerable&lt;ParameterExpression&gt;, Expression[])","pos":[0,53],"source":"Block(IEnumerable<ParameterExpression>, Expression[])"}]},{"pos":[109246,109251],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[109317,109318],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[109395,109406],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[109491,109492],"content":"<","needQuote":true,"nodes":[]},{"pos":[109572,109591],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":",","pos":[109693,109694]},{"pos":[109770,109780],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[109841,109843]},{"pos":[109874,109875],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[110085,110090],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[110156,110157],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[110234,110245],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[110331,110334]},{"pos":[110421,110440],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[110509,110510],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[110538,110539]},{"pos":[110615,110625],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[110685,110687],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[110715,110716],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[111271,111300],"content":"Block(Expression, Expression)","needQuote":true,"nodes":[{"content":"Block(Expression, Expression)","pos":[0,29]}]},{"pos":[111572,111577],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[111643,111644],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[111715,111725],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[111786,111787]},{"pos":[111863,111873],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[111933,111934],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[112093,112098],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[112164,112165],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[112236,112246],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[112307,112308]},{"pos":[112384,112394],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[112454,112455],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[112883,112924],"content":"Block(Expression, Expression, Expression)","needQuote":true,"nodes":[{"content":"Block(Expression, Expression, Expression)","pos":[0,41]}]},{"pos":[113267,113272],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[113338,113339],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[113410,113420],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[113481,113482]},{"pos":[113558,113568],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[113629,113630]},{"pos":[113706,113716],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[113776,113777],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[113971,113976],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[114042,114043],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[114114,114124],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[114185,114186]},{"pos":[114262,114272],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[114333,114334]},{"pos":[114410,114420],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[114480,114481],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[114991,115044],"content":"Block(Expression, Expression, Expression, Expression)","needQuote":true,"nodes":[{"content":"Block(Expression, Expression, Expression, Expression)","pos":[0,53]}]},{"pos":[115458,115463],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[115529,115530],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[115601,115611],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[115672,115673]},{"pos":[115749,115759],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[115820,115821]},{"pos":[115897,115907],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[115968,115969]},{"pos":[116045,116055],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[116115,116116],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[116345,116350],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[116416,116417],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[116488,116498],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[116559,116560]},{"pos":[116636,116646],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[116707,116708]},{"pos":[116784,116794],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[116855,116856]},{"pos":[116932,116942],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[117002,117003],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[117595,117660],"content":"Block(Expression, Expression, Expression, Expression, Expression)","needQuote":true,"nodes":[{"content":"Block(Expression, Expression, Expression, Expression, Expression)","pos":[0,65]}]},{"pos":[118145,118150],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[118216,118217],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[118288,118298],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[118359,118360]},{"pos":[118436,118446],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[118507,118508]},{"pos":[118584,118594],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[118655,118656]},{"pos":[118732,118742],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[118803,118804]},{"pos":[118880,118890],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[118950,118951],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[119215,119220],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[119286,119287],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[119358,119368],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[119429,119430]},{"pos":[119506,119516],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[119577,119578]},{"pos":[119654,119664],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[119725,119726]},{"pos":[119802,119812],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[119873,119874]},{"pos":[119950,119960],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[120020,120021],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[120522,120541],"content":"Block(Expression[])","needQuote":true,"nodes":[{"content":"Block(Expression[])","pos":[0,19]}]},{"pos":[120871,120876],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[120942,120943],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[121014,121024],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[121085,121087]},{"pos":[121118,121119],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[121245,121250],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[121316,121317],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[121388,121398],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[121458,121460],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[121488,121489],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[121905,121941],"content":"Block(Type, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"Block(Type, IEnumerable&lt;Expression&gt;)","pos":[0,36],"source":"Block(Type, IEnumerable<Expression>)"}]},{"pos":[122446,122451],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[122517,122518],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[122566,122570],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[122629,122630]},{"pos":[122712,122723],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[122808,122809],"content":"<","needQuote":true,"nodes":[]},{"pos":[122880,122890],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[122982,122983],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[123159,123164],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[123230,123231],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[123279,123283],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[123342,123343]},{"pos":[123425,123436],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[123522,123525]},{"pos":[123603,123613],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[123673,123674],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[123701,123702],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[124289,124359],"content":"Block(Type, IEnumerable<ParameterExpression>, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"Block(Type, IEnumerable&lt;ParameterExpression&gt;, IEnumerable&lt;Expression&gt;)","pos":[0,70],"source":"Block(Type, IEnumerable<ParameterExpression>, IEnumerable<Expression>)"}]},{"pos":[125158,125163],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[125229,125230],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[125278,125282],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[125341,125342]},{"pos":[125424,125435],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[125520,125521],"content":"<","needQuote":true,"nodes":[]},{"pos":[125601,125620],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":",","pos":[125722,125723]},{"pos":[125805,125816],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[125901,125902],"content":"<","needQuote":true,"nodes":[]},{"pos":[125973,125983],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[126075,126076],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[126336,126341],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[126407,126408],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[126456,126460],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[126519,126520]},{"pos":[126602,126613],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[126699,126702]},{"pos":[126789,126808],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[126877,126878],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[126906,126907]},{"pos":[126989,127000],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[127086,127089]},{"pos":[127167,127177],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[127237,127238],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[127265,127266],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[127970,128029],"content":"Block(Type, IEnumerable<ParameterExpression>, Expression[])","needQuote":true,"nodes":[{"content":"Block(Type, IEnumerable&lt;ParameterExpression&gt;, Expression[])","pos":[0,59],"source":"Block(Type, IEnumerable<ParameterExpression>, Expression[])"}]},{"pos":[128697,128702],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[128768,128769],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[128817,128821],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[128880,128881]},{"pos":[128963,128974],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[129059,129060],"content":"<","needQuote":true,"nodes":[]},{"pos":[129140,129159],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":",","pos":[129261,129262]},{"pos":[129338,129348],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[129409,129411]},{"pos":[129442,129443],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[129665,129670],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[129736,129737],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[129785,129789],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[129848,129849]},{"pos":[129931,129942],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[130028,130031]},{"pos":[130118,130137],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[130206,130207],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[130235,130236]},{"pos":[130312,130322],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[130382,130384],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[130412,130413],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[130970,130995],"content":"Block(Type, Expression[])","needQuote":true,"nodes":[{"content":"Block(Type, Expression[])","pos":[0,25]}]},{"pos":[131369,131374],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[131440,131441],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[131489,131493],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[131552,131553]},{"pos":[131629,131639],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[131700,131702]},{"pos":[131733,131734],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[131872,131877],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[131943,131944],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[131992,131996],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[132055,132056]},{"pos":[132132,132142],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[132202,132204],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[132232,132233],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[132623,132641],"content":"Break(LabelTarget)","needQuote":true,"nodes":[{"content":"Break(LabelTarget)","pos":[0,18]}]},{"pos":[132844,132849],"content":"Break","needQuote":true,"nodes":[{"content":"Break","pos":[0,5]}]},{"pos":[132915,132916],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[132988,132999],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[133060,133061],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[133186,133191],"content":"Break","needQuote":true,"nodes":[{"content":"Break","pos":[0,5]}]},{"pos":[133257,133258],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[133330,133341],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[133402,133403],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[133752,133782],"content":"Break(LabelTarget, Expression)","needQuote":true,"nodes":[{"content":"Break(LabelTarget, Expression)","pos":[0,30]}]},{"pos":[134056,134061],"content":"Break","needQuote":true,"nodes":[{"content":"Break","pos":[0,5]}]},{"pos":[134127,134128],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[134200,134211],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[134273,134274]},{"pos":[134350,134360],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[134420,134421],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[134581,134586],"content":"Break","needQuote":true,"nodes":[{"content":"Break","pos":[0,5]}]},{"pos":[134652,134653],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[134725,134736],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[134798,134799]},{"pos":[134875,134885],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[134945,134946],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[135353,135389],"content":"Break(LabelTarget, Expression, Type)","needQuote":true,"nodes":[{"content":"Break(LabelTarget, Expression, Type)","pos":[0,36]}]},{"pos":[135688,135693],"content":"Break","needQuote":true,"nodes":[{"content":"Break","pos":[0,5]}]},{"pos":[135759,135760],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[135832,135843],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[135905,135906]},{"pos":[135982,135992],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[136053,136054]},{"pos":[136107,136111],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[136169,136170],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[136342,136347],"content":"Break","needQuote":true,"nodes":[{"content":"Break","pos":[0,5]}]},{"pos":[136413,136414],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[136486,136497],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[136559,136560]},{"pos":[136636,136646],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[136707,136708]},{"pos":[136761,136765],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[136823,136824],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[137214,137238],"content":"Break(LabelTarget, Type)","needQuote":true,"nodes":[{"content":"Break(LabelTarget, Type)","pos":[0,24]}]},{"pos":[137466,137471],"content":"Break","needQuote":true,"nodes":[{"content":"Break","pos":[0,5]}]},{"pos":[137537,137538],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[137610,137621],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[137683,137684]},{"pos":[137737,137741],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[137799,137800],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[137937,137942],"content":"Break","needQuote":true,"nodes":[{"content":"Break","pos":[0,5]}]},{"pos":[138008,138009],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[138081,138092],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[138154,138155]},{"pos":[138208,138212],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[138270,138271],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[138629,138657],"content":"Call(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"Call(Expression, MethodInfo)","pos":[0,28]}]},{"pos":[138915,138919],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[138984,138985],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[139056,139066],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[139127,139128]},{"pos":[139198,139208],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[139283,139284],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[139436,139440],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[139505,139506],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[139577,139587],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[139648,139649]},{"pos":[139719,139729],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[139804,139805],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[140257,140310],"content":"Call(Expression, MethodInfo, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"Call(Expression, MethodInfo, IEnumerable&lt;Expression&gt;)","pos":[0,53],"source":"Call(Expression, MethodInfo, IEnumerable<Expression>)"}]},{"pos":[140987,140991],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[141056,141057],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[141128,141138],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[141199,141200]},{"pos":[141270,141280],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[141356,141357]},{"pos":[141439,141450],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[141535,141536],"content":"<","needQuote":true,"nodes":[]},{"pos":[141607,141617],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[141709,141710],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[141937,141941],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[142006,142007],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[142078,142088],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[142149,142150]},{"pos":[142220,142230],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[142306,142307]},{"pos":[142389,142400],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[142486,142489]},{"pos":[142567,142577],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[142637,142638],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[142665,142666],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[143300,143352],"content":"Call(Expression, MethodInfo, Expression, Expression)","needQuote":true,"nodes":[{"content":"Call(Expression, MethodInfo, Expression, Expression)","pos":[0,52]}]},{"pos":[143752,143756],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[143821,143822],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[143893,143903],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[143964,143965]},{"pos":[144035,144045],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[144121,144122]},{"pos":[144198,144208],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[144269,144270]},{"pos":[144346,144356],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[144416,144417],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[144639,144643],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[144708,144709],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[144780,144790],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[144851,144852]},{"pos":[144922,144932],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[145008,145009]},{"pos":[145085,145095],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[145156,145157]},{"pos":[145233,145243],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[145303,145304],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[145880,145944],"content":"Call(Expression, MethodInfo, Expression, Expression, Expression)","needQuote":true,"nodes":[{"content":"Call(Expression, MethodInfo, Expression, Expression, Expression)","pos":[0,64]}]},{"pos":[146415,146419],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[146484,146485],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[146556,146566],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[146627,146628]},{"pos":[146698,146708],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[146784,146785]},{"pos":[146861,146871],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[146932,146933]},{"pos":[147009,147019],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[147080,147081]},{"pos":[147157,147167],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[147227,147228],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[147485,147489],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[147554,147555],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[147626,147636],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[147697,147698]},{"pos":[147768,147778],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[147854,147855]},{"pos":[147931,147941],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[148002,148003]},{"pos":[148079,148089],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[148150,148151]},{"pos":[148227,148237],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[148297,148298],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[148853,148895],"content":"Call(Expression, MethodInfo, Expression[])","needQuote":true,"nodes":[{"content":"Call(Expression, MethodInfo, Expression[])","pos":[0,42]}]},{"pos":[149441,149445],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[149510,149511],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[149582,149592],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[149653,149654]},{"pos":[149724,149734],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[149810,149811]},{"pos":[149887,149897],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[149958,149960]},{"pos":[149991,149992],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[150181,150185],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[150250,150251],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[150322,150332],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[150393,150394]},{"pos":[150464,150474],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[150550,150551]},{"pos":[150627,150637],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[150697,150699],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[150727,150728],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[151265,151311],"content":"Call(Expression, String, Type[], Expression[])","needQuote":true,"nodes":[{"content":"Call(Expression, String, Type[], Expression[])","pos":[0,46]}]},{"pos":[151860,151864],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[151929,151930],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[152001,152011],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[152072,152073]},{"pos":[152128,152134],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[152195,152196]},{"pos":[152249,152253],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[152312,152314]},{"content":",","pos":[152346,152347]},{"pos":[152423,152433],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[152494,152496]},{"pos":[152527,152528],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[152716,152720],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[152785,152786],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[152857,152867],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[152928,152929]},{"pos":[152984,152990],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[153051,153052]},{"pos":[153105,153109],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[153167,153169],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[153198,153199]},{"pos":[153275,153285],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[153345,153347],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[153375,153376],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[153924,153965],"content":"Call(MethodInfo, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"Call(MethodInfo, IEnumerable&lt;Expression&gt;)","pos":[0,41],"source":"Call(MethodInfo, IEnumerable<Expression>)"}]},{"pos":[154523,154527],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[154592,154593],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[154658,154668],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[154744,154745]},{"pos":[154827,154838],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[154923,154924],"content":"<","needQuote":true,"nodes":[]},{"pos":[154995,155005],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[155097,155098],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[155290,155294],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[155359,155360],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[155425,155435],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[155511,155512]},{"pos":[155594,155605],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[155691,155694]},{"pos":[155772,155782],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[155842,155843],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[155870,155871],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[156376,156404],"content":"Call(MethodInfo, Expression)","needQuote":true,"nodes":[{"content":"Call(MethodInfo, Expression)","pos":[0,28]}]},{"pos":[156662,156666],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[156731,156732],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[156797,156807],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[156883,156884]},{"pos":[156960,156970],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[157030,157031],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[157183,157187],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[157252,157253],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[157318,157328],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[157404,157405]},{"pos":[157481,157491],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[157551,157552],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[157964,158004],"content":"Call(MethodInfo, Expression, Expression)","needQuote":true,"nodes":[{"content":"Call(MethodInfo, Expression, Expression)","pos":[0,40]}]},{"pos":[158333,158337],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[158402,158403],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[158468,158478],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[158554,158555]},{"pos":[158631,158641],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[158702,158703]},{"pos":[158779,158789],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[158849,158850],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[159037,159041],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[159106,159107],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[159172,159182],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[159258,159259]},{"pos":[159335,159345],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[159406,159407]},{"pos":[159483,159493],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[159553,159554],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[160048,160100],"content":"Call(MethodInfo, Expression, Expression, Expression)","needQuote":true,"nodes":[{"content":"Call(MethodInfo, Expression, Expression, Expression)","pos":[0,52]}]},{"pos":[160500,160504],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[160569,160570],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[160635,160645],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[160721,160722]},{"pos":[160798,160808],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[160869,160870]},{"pos":[160946,160956],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[161017,161018]},{"pos":[161094,161104],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[161164,161165],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[161387,161391],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[161456,161457],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[161522,161532],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[161608,161609]},{"pos":[161685,161695],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[161756,161757]},{"pos":[161833,161843],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[161904,161905]},{"pos":[161981,161991],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[162051,162052],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[162628,162692],"content":"Call(MethodInfo, Expression, Expression, Expression, Expression)","needQuote":true,"nodes":[{"content":"Call(MethodInfo, Expression, Expression, Expression, Expression)","pos":[0,64]}]},{"pos":[163163,163167],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[163232,163233],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[163298,163308],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[163384,163385]},{"pos":[163461,163471],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[163532,163533]},{"pos":[163609,163619],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[163680,163681]},{"pos":[163757,163767],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[163828,163829]},{"pos":[163905,163915],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[163975,163976],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[164233,164237],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[164302,164303],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[164368,164378],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[164454,164455]},{"pos":[164531,164541],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[164602,164603]},{"pos":[164679,164689],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[164750,164751]},{"pos":[164827,164837],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[164898,164899]},{"pos":[164975,164985],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[165045,165046],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[165704,165780],"content":"Call(MethodInfo, Expression, Expression, Expression, Expression, Expression)","needQuote":true,"nodes":[{"content":"Call(MethodInfo, Expression, Expression, Expression, Expression, Expression)","pos":[0,76]}]},{"pos":[166322,166326],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[166391,166392],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[166457,166467],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[166543,166544]},{"pos":[166620,166630],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[166691,166692]},{"pos":[166768,166778],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[166839,166840]},{"pos":[166916,166926],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[166987,166988]},{"pos":[167064,167074],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[167135,167136]},{"pos":[167212,167222],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[167282,167283],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[167575,167579],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[167644,167645],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[167710,167720],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[167796,167797]},{"pos":[167873,167883],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[167944,167945]},{"pos":[168021,168031],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[168092,168093]},{"pos":[168169,168179],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[168240,168241]},{"pos":[168317,168327],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[168388,168389]},{"pos":[168465,168475],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[168535,168536],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[169103,169133],"content":"Call(MethodInfo, Expression[])","needQuote":true,"nodes":[{"content":"Call(MethodInfo, Expression[])","pos":[0,30]}]},{"pos":[169560,169564],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[169629,169630],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[169695,169705],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[169781,169782]},{"pos":[169858,169868],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[169929,169931]},{"pos":[169962,169963],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[170117,170121],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[170186,170187],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[170252,170262],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[170338,170339]},{"pos":[170415,170425],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[170485,170487],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[170515,170516],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[170971,171011],"content":"Call(Type, String, Type[], Expression[])","needQuote":true,"nodes":[{"content":"Call(Type, String, Type[], Expression[])","pos":[0,40]}]},{"pos":[171485,171489],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[171554,171555],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[171603,171607],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[171666,171667]},{"pos":[171722,171728],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[171789,171790]},{"pos":[171843,171847],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[171906,171908]},{"content":",","pos":[171940,171941]},{"pos":[172017,172027],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[172088,172090]},{"pos":[172121,172122],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[172287,172291],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[172356,172357],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[172405,172409],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[172468,172469]},{"pos":[172524,172530],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[172591,172592]},{"pos":[172645,172649],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[172707,172709],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[172738,172739]},{"pos":[172815,172825],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[172885,172887],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[172915,172916],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[173406,173444],"content":"Catch(ParameterExpression, Expression)","needQuote":true,"nodes":[{"content":"Catch(ParameterExpression, Expression)","pos":[0,38]}]},{"pos":[173734,173739],"content":"Catch","needQuote":true,"nodes":[{"content":"Catch","pos":[0,5]}]},{"pos":[173805,173806],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[173886,173905],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":",","pos":[173975,173976]},{"pos":[174052,174062],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[174122,174123],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[174291,174296],"content":"Catch","needQuote":true,"nodes":[{"content":"Catch","pos":[0,5]}]},{"pos":[174362,174363],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[174443,174462],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":",","pos":[174532,174533]},{"pos":[174609,174619],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[174679,174680],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[175135,175185],"content":"Catch(ParameterExpression, Expression, Expression)","needQuote":true,"nodes":[{"content":"Catch(ParameterExpression, Expression, Expression)","pos":[0,50]}]},{"pos":[175546,175551],"content":"Catch","needQuote":true,"nodes":[{"content":"Catch","pos":[0,5]}]},{"pos":[175617,175618],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[175698,175717],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":",","pos":[175787,175788]},{"pos":[175864,175874],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[175935,175936]},{"pos":[176012,176022],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[176082,176083],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[176286,176291],"content":"Catch","needQuote":true,"nodes":[{"content":"Catch","pos":[0,5]}]},{"pos":[176357,176358],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[176438,176457],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":",","pos":[176527,176528]},{"pos":[176604,176614],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[176675,176676]},{"pos":[176752,176762],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[176822,176823],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[177257,177280],"content":"Catch(Type, Expression)","needQuote":true,"nodes":[{"content":"Catch(Type, Expression)","pos":[0,23]}]},{"pos":[177506,177511],"content":"Catch","needQuote":true,"nodes":[{"content":"Catch","pos":[0,5]}]},{"pos":[177577,177578],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[177626,177630],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[177689,177690]},{"pos":[177766,177776],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[177836,177837],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[177973,177978],"content":"Catch","needQuote":true,"nodes":[{"content":"Catch","pos":[0,5]}]},{"pos":[178044,178045],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[178093,178097],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[178156,178157]},{"pos":[178233,178243],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[178303,178304],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[178679,178714],"content":"Catch(Type, Expression, Expression)","needQuote":true,"nodes":[{"content":"Catch(Type, Expression, Expression)","pos":[0,35]}]},{"pos":[179011,179016],"content":"Catch","needQuote":true,"nodes":[{"content":"Catch","pos":[0,5]}]},{"pos":[179082,179083],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[179131,179135],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[179194,179195]},{"pos":[179271,179281],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[179342,179343]},{"pos":[179419,179429],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[179489,179490],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[179661,179666],"content":"Catch","needQuote":true,"nodes":[{"content":"Catch","pos":[0,5]}]},{"pos":[179732,179733],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[179781,179785],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[179844,179845]},{"pos":[179921,179931],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[179992,179993]},{"pos":[180069,180079],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[180139,180140],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[180533,180567],"content":"ClearDebugInfo(SymbolDocumentInfo)","needQuote":true,"nodes":[{"content":"ClearDebugInfo(SymbolDocumentInfo)","pos":[0,34]}]},{"pos":[180802,180816],"content":"ClearDebugInfo","needQuote":true,"nodes":[{"content":"ClearDebugInfo","pos":[0,14]}]},{"pos":[180891,180892],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[180971,180989],"content":"SymbolDocumentInfo","needQuote":true,"nodes":[{"content":"SymbolDocumentInfo","pos":[0,18]}]},{"pos":[181057,181058],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[181199,181213],"content":"ClearDebugInfo","needQuote":true,"nodes":[{"content":"ClearDebugInfo","pos":[0,14]}]},{"pos":[181288,181289],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[181368,181386],"content":"SymbolDocumentInfo","needQuote":true,"nodes":[{"content":"SymbolDocumentInfo","pos":[0,18]}]},{"pos":[181454,181455],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[181838,181870],"content":"Coalesce(Expression, Expression)","needQuote":true,"nodes":[{"content":"Coalesce(Expression, Expression)","pos":[0,32]}]},{"pos":[182148,182156],"content":"Coalesce","needQuote":true,"nodes":[{"content":"Coalesce","pos":[0,8]}]},{"pos":[182225,182226],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[182297,182307],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[182368,182369]},{"pos":[182445,182455],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[182515,182516],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[182678,182686],"content":"Coalesce","needQuote":true,"nodes":[{"content":"Coalesce","pos":[0,8]}]},{"pos":[182755,182756],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[182827,182837],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[182898,182899]},{"pos":[182975,182985],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[183045,183046],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[183489,183539],"content":"Coalesce(Expression, Expression, LambdaExpression)","needQuote":true,"nodes":[{"content":"Coalesce(Expression, Expression, LambdaExpression)","pos":[0,50]}]},{"pos":[183900,183908],"content":"Coalesce","needQuote":true,"nodes":[{"content":"Coalesce","pos":[0,8]}]},{"pos":[183977,183978],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[184049,184059],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[184120,184121]},{"pos":[184197,184207],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[184268,184269]},{"pos":[184351,184367],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[184433,184434],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[184637,184645],"content":"Coalesce","needQuote":true,"nodes":[{"content":"Coalesce","pos":[0,8]}]},{"pos":[184714,184715],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[184786,184796],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[184857,184858]},{"pos":[184934,184944],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[185005,185006]},{"pos":[185088,185104],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[185170,185171],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[185668,185713],"content":"Condition(Expression, Expression, Expression)","needQuote":true,"nodes":[{"content":"Condition(Expression, Expression, Expression)","pos":[0,45]}]},{"pos":[186064,186073],"content":"Condition","needQuote":true,"nodes":[{"content":"Condition","pos":[0,9]}]},{"pos":[186143,186144],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[186215,186225],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[186286,186287]},{"pos":[186363,186373],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[186434,186435]},{"pos":[186511,186521],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[186581,186582],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[186780,186789],"content":"Condition","needQuote":true,"nodes":[{"content":"Condition","pos":[0,9]}]},{"pos":[186859,186860],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[186931,186941],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[187002,187003]},{"pos":[187079,187089],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[187150,187151]},{"pos":[187227,187237],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[187297,187298],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[187796,187847],"content":"Condition(Expression, Expression, Expression, Type)","needQuote":true,"nodes":[{"content":"Condition(Expression, Expression, Expression, Type)","pos":[0,51]}]},{"pos":[188223,188232],"content":"Condition","needQuote":true,"nodes":[{"content":"Condition","pos":[0,9]}]},{"pos":[188302,188303],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[188374,188384],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[188445,188446]},{"pos":[188522,188532],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[188593,188594]},{"pos":[188670,188680],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[188741,188742]},{"pos":[188795,188799],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[188857,188858],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[189068,189077],"content":"Condition","needQuote":true,"nodes":[{"content":"Condition","pos":[0,9]}]},{"pos":[189147,189148],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[189219,189229],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[189290,189291]},{"pos":[189367,189377],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[189438,189439]},{"pos":[189515,189525],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[189586,189587]},{"pos":[189640,189644],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[189702,189703],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[190115,190131],"content":"Constant(Object)","needQuote":true,"nodes":[{"content":"Constant(Object)","pos":[0,16]}]},{"pos":[190296,190304],"content":"Constant","needQuote":true,"nodes":[{"content":"Constant","pos":[0,8]}]},{"pos":[190373,190374],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[190424,190430],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[190490,190491],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[190597,190605],"content":"Constant","needQuote":true,"nodes":[{"content":"Constant","pos":[0,8]}]},{"pos":[190674,190675],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[190725,190731],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[190791,190792],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[191077,191099],"content":"Constant(Object, Type)","needQuote":true,"nodes":[{"content":"Constant(Object, Type)","pos":[0,22]}]},{"pos":[191289,191297],"content":"Constant","needQuote":true,"nodes":[{"content":"Constant","pos":[0,8]}]},{"pos":[191366,191367],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[191417,191423],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[191484,191485]},{"pos":[191538,191542],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[191600,191601],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[191719,191727],"content":"Constant","needQuote":true,"nodes":[{"content":"Constant","pos":[0,8]}]},{"pos":[191796,191797],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[191847,191853],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[191914,191915]},{"pos":[191968,191972],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[192030,192031],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[192345,192366],"content":"Continue(LabelTarget)","needQuote":true,"nodes":[{"content":"Continue(LabelTarget)","pos":[0,21]}]},{"pos":[192575,192583],"content":"Continue","needQuote":true,"nodes":[{"content":"Continue","pos":[0,8]}]},{"pos":[192652,192653],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[192725,192736],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[192797,192798],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[192926,192934],"content":"Continue","needQuote":true,"nodes":[{"content":"Continue","pos":[0,8]}]},{"pos":[193003,193004],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[193076,193087],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[193148,193149],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[193483,193510],"content":"Continue(LabelTarget, Type)","needQuote":true,"nodes":[{"content":"Continue(LabelTarget, Type)","pos":[0,27]}]},{"pos":[193744,193752],"content":"Continue","needQuote":true,"nodes":[{"content":"Continue","pos":[0,8]}]},{"pos":[193821,193822],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[193894,193905],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[193967,193968]},{"pos":[194021,194025],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[194083,194084],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[194224,194232],"content":"Continue","needQuote":true,"nodes":[{"content":"Continue","pos":[0,8]}]},{"pos":[194301,194302],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[194374,194385],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[194447,194448]},{"pos":[194501,194505],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[194563,194564],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[194914,194939],"content":"Convert(Expression, Type)","needQuote":true,"nodes":[{"content":"Convert(Expression, Type)","pos":[0,25]}]},{"pos":[195169,195176],"content":"Convert","needQuote":true,"nodes":[{"content":"Convert","pos":[0,7]}]},{"pos":[195244,195245],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[195316,195326],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[195387,195388]},{"pos":[195441,195445],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[195503,195504],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[195642,195649],"content":"Convert","needQuote":true,"nodes":[{"content":"Convert","pos":[0,7]}]},{"pos":[195717,195718],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[195789,195799],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[195860,195861]},{"pos":[195914,195918],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[195976,195977],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[196352,196389],"content":"Convert(Expression, Type, MethodInfo)","needQuote":true,"nodes":[{"content":"Convert(Expression, Type, MethodInfo)","pos":[0,37]}]},{"pos":[196678,196685],"content":"Convert","needQuote":true,"nodes":[{"content":"Convert","pos":[0,7]}]},{"pos":[196753,196754],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[196825,196835],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[196896,196897]},{"pos":[196950,196954],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[197013,197014]},{"pos":[197084,197094],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[197169,197170],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[197337,197344],"content":"Convert","needQuote":true,"nodes":[{"content":"Convert","pos":[0,7]}]},{"pos":[197412,197413],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[197484,197494],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[197555,197556]},{"pos":[197609,197613],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[197672,197673]},{"pos":[197743,197753],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[197828,197829],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[198223,198255],"content":"ConvertChecked(Expression, Type)","needQuote":true,"nodes":[{"content":"ConvertChecked(Expression, Type)","pos":[0,32]}]},{"pos":[198499,198513],"content":"ConvertChecked","needQuote":true,"nodes":[{"content":"ConvertChecked","pos":[0,14]}]},{"pos":[198588,198589],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[198660,198670],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[198731,198732]},{"pos":[198785,198789],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[198847,198848],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[198993,199007],"content":"ConvertChecked","needQuote":true,"nodes":[{"content":"ConvertChecked","pos":[0,14]}]},{"pos":[199082,199083],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[199154,199164],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[199225,199226]},{"pos":[199279,199283],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[199341,199342],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[199738,199782],"content":"ConvertChecked(Expression, Type, MethodInfo)","needQuote":true,"nodes":[{"content":"ConvertChecked(Expression, Type, MethodInfo)","pos":[0,44]}]},{"pos":[200085,200099],"content":"ConvertChecked","needQuote":true,"nodes":[{"content":"ConvertChecked","pos":[0,14]}]},{"pos":[200174,200175],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[200246,200256],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[200317,200318]},{"pos":[200371,200375],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[200434,200435]},{"pos":[200505,200515],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[200590,200591],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[200765,200779],"content":"ConvertChecked","needQuote":true,"nodes":[{"content":"ConvertChecked","pos":[0,14]}]},{"pos":[200854,200855],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[200926,200936],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[200997,200998]},{"pos":[201051,201055],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[201114,201115]},{"pos":[201185,201195],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[201270,201271],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[201722,201779],"content":"DebugInfo(SymbolDocumentInfo, Int32, Int32, Int32, Int32)","needQuote":true,"nodes":[{"content":"DebugInfo(SymbolDocumentInfo, Int32, Int32, Int32, Int32)","pos":[0,57]}]},{"pos":[202112,202121],"content":"DebugInfo","needQuote":true,"nodes":[{"content":"DebugInfo","pos":[0,9]}]},{"pos":[202191,202192],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[202271,202289],"content":"SymbolDocumentInfo","needQuote":true,"nodes":[{"content":"SymbolDocumentInfo","pos":[0,18]}]},{"content":",","pos":[202358,202359]},{"pos":[202413,202418],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[202478,202479]},{"pos":[202533,202538],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[202598,202599]},{"pos":[202653,202658],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[202718,202719]},{"pos":[202773,202778],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[202837,202838],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[203026,203035],"content":"DebugInfo","needQuote":true,"nodes":[{"content":"DebugInfo","pos":[0,9]}]},{"pos":[203105,203106],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[203185,203203],"content":"SymbolDocumentInfo","needQuote":true,"nodes":[{"content":"SymbolDocumentInfo","pos":[0,18]}]},{"content":",","pos":[203272,203273]},{"pos":[203327,203332],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[203392,203393]},{"pos":[203447,203452],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[203512,203513]},{"pos":[203567,203572],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[203632,203633]},{"pos":[203687,203692],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[203751,203752],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[204171,204192],"content":"Decrement(Expression)","needQuote":true,"nodes":[{"content":"Decrement(Expression)","pos":[0,21]}]},{"pos":[204401,204410],"content":"Decrement","needQuote":true,"nodes":[{"content":"Decrement","pos":[0,9]}]},{"pos":[204480,204481],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[204552,204562],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[204622,204623],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[204751,204760],"content":"Decrement","needQuote":true,"nodes":[{"content":"Decrement","pos":[0,9]}]},{"pos":[204830,204831],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[204902,204912],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[204972,204973],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[205324,205357],"content":"Decrement(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"Decrement(Expression, MethodInfo)","pos":[0,33]}]},{"pos":[205625,205634],"content":"Decrement","needQuote":true,"nodes":[{"content":"Decrement","pos":[0,9]}]},{"pos":[205704,205705],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[205776,205786],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[205847,205848]},{"pos":[205918,205928],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[206003,206004],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[206161,206170],"content":"Decrement","needQuote":true,"nodes":[{"content":"Decrement","pos":[0,9]}]},{"pos":[206240,206241],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[206312,206322],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[206383,206384]},{"pos":[206454,206464],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[206539,206540],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[206878,206891],"content":"Default(Type)","needQuote":true,"nodes":[{"content":"Default(Type)","pos":[0,13]}]},{"pos":[207050,207057],"content":"Default","needQuote":true,"nodes":[{"content":"Default","pos":[0,7]}]},{"pos":[207125,207126],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[207174,207178],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[207236,207237],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[207340,207347],"content":"Default","needQuote":true,"nodes":[{"content":"Default","pos":[0,7]}]},{"pos":[207415,207416],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[207464,207468],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[207526,207527],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[207849,207879],"content":"Divide(Expression, Expression)","needQuote":true,"nodes":[{"content":"Divide(Expression, Expression)","pos":[0,30]}]},{"pos":[208153,208159],"content":"Divide","needQuote":true,"nodes":[{"content":"Divide","pos":[0,6]}]},{"pos":[208226,208227],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[208298,208308],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[208369,208370]},{"pos":[208446,208456],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[208516,208517],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[208677,208683],"content":"Divide","needQuote":true,"nodes":[{"content":"Divide","pos":[0,6]}]},{"pos":[208750,208751],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[208822,208832],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[208893,208894]},{"pos":[208970,208980],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[209040,209041],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[209465,209507],"content":"Divide(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"Divide(Expression, Expression, MethodInfo)","pos":[0,42]}]},{"pos":[209840,209846],"content":"Divide","needQuote":true,"nodes":[{"content":"Divide","pos":[0,6]}]},{"pos":[209913,209914],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[209985,209995],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[210056,210057]},{"pos":[210133,210143],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[210204,210205]},{"pos":[210275,210285],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[210360,210361],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[210550,210556],"content":"Divide","needQuote":true,"nodes":[{"content":"Divide","pos":[0,6]}]},{"pos":[210623,210624],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[210695,210705],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[210766,210767]},{"pos":[210843,210853],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[210914,210915]},{"pos":[210985,210995],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[211070,211071],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[211514,211550],"content":"DivideAssign(Expression, Expression)","needQuote":true,"nodes":[{"content":"DivideAssign(Expression, Expression)","pos":[0,36]}]},{"pos":[211836,211848],"content":"DivideAssign","needQuote":true,"nodes":[{"content":"DivideAssign","pos":[0,12]}]},{"pos":[211921,211922],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[211993,212003],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[212064,212065]},{"pos":[212141,212151],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[212211,212212],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[212378,212390],"content":"DivideAssign","needQuote":true,"nodes":[{"content":"DivideAssign","pos":[0,12]}]},{"pos":[212463,212464],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[212535,212545],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[212606,212607]},{"pos":[212683,212693],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[212753,212754],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[213196,213244],"content":"DivideAssign(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"DivideAssign(Expression, Expression, MethodInfo)","pos":[0,48]}]},{"pos":[213589,213601],"content":"DivideAssign","needQuote":true,"nodes":[{"content":"DivideAssign","pos":[0,12]}]},{"pos":[213674,213675],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[213746,213756],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[213817,213818]},{"pos":[213894,213904],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[213965,213966]},{"pos":[214036,214046],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[214121,214122],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[214317,214329],"content":"DivideAssign","needQuote":true,"nodes":[{"content":"DivideAssign","pos":[0,12]}]},{"pos":[214402,214403],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[214474,214484],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[214545,214546]},{"pos":[214622,214632],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[214693,214694]},{"pos":[214764,214774],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[214849,214850],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[215374,215440],"content":"DivideAssign(Expression, Expression, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"DivideAssign(Expression, Expression, MethodInfo, LambdaExpression)","pos":[0,66]}]},{"pos":[215868,215880],"content":"DivideAssign","needQuote":true,"nodes":[{"content":"DivideAssign","pos":[0,12]}]},{"pos":[215953,215954],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[216025,216035],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[216096,216097]},{"pos":[216173,216183],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[216244,216245]},{"pos":[216315,216325],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[216401,216402]},{"pos":[216484,216500],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[216566,216567],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[216803,216815],"content":"DivideAssign","needQuote":true,"nodes":[{"content":"DivideAssign","pos":[0,12]}]},{"pos":[216888,216889],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[216960,216970],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[217031,217032]},{"pos":[217108,217118],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[217179,217180]},{"pos":[217250,217260],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[217336,217337]},{"pos":[217419,217435],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[217501,217502],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[218048,218096],"content":"ElementInit(MethodInfo, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"ElementInit(MethodInfo, IEnumerable&lt;Expression&gt;)","pos":[0,48],"source":"ElementInit(MethodInfo, IEnumerable<Expression>)"}]},{"pos":[218682,218693],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"pos":[218765,218766],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[218831,218841],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[218917,218918]},{"pos":[219000,219011],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[219096,219097],"content":"<","needQuote":true,"nodes":[]},{"pos":[219168,219178],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[219270,219271],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[219470,219481],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"pos":[219553,219554],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[219619,219629],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[219705,219706]},{"pos":[219788,219799],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[219885,219888]},{"pos":[219966,219976],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[220036,220037],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[220064,220065],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[220600,220637],"content":"ElementInit(MethodInfo, Expression[])","needQuote":true,"nodes":[{"content":"ElementInit(MethodInfo, Expression[])","pos":[0,37]}]},{"pos":[221092,221103],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"pos":[221175,221176],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[221241,221251],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[221327,221328]},{"pos":[221404,221414],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[221475,221477]},{"pos":[221508,221509],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[221670,221681],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"pos":[221753,221754],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[221819,221829],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[221905,221906]},{"pos":[221982,221992],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[222052,222054],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[222082,222083],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[222483,222490],"content":"Empty()","needQuote":true,"nodes":[{"content":"Empty()","pos":[0,7]}]},{"pos":[222621,222626],"content":"Empty","needQuote":true,"nodes":[{"content":"Empty","pos":[0,5]}]},{"pos":[222692,222693],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[222720,222721],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[222809,222814],"content":"Empty","needQuote":true,"nodes":[{"content":"Empty","pos":[0,5]}]},{"pos":[222880,222881],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[222908,222909],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[223209,223238],"content":"Equal(Expression, Expression)","needQuote":true,"nodes":[{"content":"Equal(Expression, Expression)","pos":[0,29]}]},{"pos":[223510,223515],"content":"Equal","needQuote":true,"nodes":[{"content":"Equal","pos":[0,5]}]},{"pos":[223581,223582],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[223653,223663],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[223724,223725]},{"pos":[223801,223811],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[223871,223872],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[224031,224036],"content":"Equal","needQuote":true,"nodes":[{"content":"Equal","pos":[0,5]}]},{"pos":[224102,224103],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[224174,224184],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[224245,224246]},{"pos":[224322,224332],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[224392,224393],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[224829,224879],"content":"Equal(Expression, Expression, Boolean, MethodInfo)","needQuote":true,"nodes":[{"content":"Equal(Expression, Expression, Boolean, MethodInfo)","pos":[0,50]}]},{"pos":[225241,225246],"content":"Equal","needQuote":true,"nodes":[{"content":"Equal","pos":[0,5]}]},{"pos":[225312,225313],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[225384,225394],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[225455,225456]},{"pos":[225532,225542],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[225603,225604]},{"pos":[225660,225667],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[225729,225730]},{"pos":[225800,225810],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[225885,225886],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[226089,226094],"content":"Equal","needQuote":true,"nodes":[{"content":"Equal","pos":[0,5]}]},{"pos":[226160,226161],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[226232,226242],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[226303,226304]},{"pos":[226380,226390],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[226451,226452]},{"pos":[226508,226515],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[226577,226578]},{"pos":[226648,226658],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[226733,226734],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[227198,227233],"content":"ExclusiveOr(Expression, Expression)","needQuote":true,"nodes":[{"content":"ExclusiveOr(Expression, Expression)","pos":[0,35]}]},{"pos":[227517,227528],"content":"ExclusiveOr","needQuote":true,"nodes":[{"content":"ExclusiveOr","pos":[0,11]}]},{"pos":[227600,227601],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[227672,227682],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[227743,227744]},{"pos":[227820,227830],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[227890,227891],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[228056,228067],"content":"ExclusiveOr","needQuote":true,"nodes":[{"content":"ExclusiveOr","pos":[0,11]}]},{"pos":[228139,228140],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[228211,228221],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[228282,228283]},{"pos":[228359,228369],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[228429,228430],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[228869,228916],"content":"ExclusiveOr(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"ExclusiveOr(Expression, Expression, MethodInfo)","pos":[0,47]}]},{"pos":[229259,229270],"content":"ExclusiveOr","needQuote":true,"nodes":[{"content":"ExclusiveOr","pos":[0,11]}]},{"pos":[229342,229343],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[229414,229424],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[229485,229486]},{"pos":[229562,229572],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[229633,229634]},{"pos":[229704,229714],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[229789,229790],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[229984,229995],"content":"ExclusiveOr","needQuote":true,"nodes":[{"content":"ExclusiveOr","pos":[0,11]}]},{"pos":[230067,230068],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[230139,230149],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[230210,230211]},{"pos":[230287,230297],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[230358,230359]},{"pos":[230429,230439],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[230514,230515],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[230973,231014],"content":"ExclusiveOrAssign(Expression, Expression)","needQuote":true,"nodes":[{"content":"ExclusiveOrAssign(Expression, Expression)","pos":[0,41]}]},{"pos":[231310,231327],"content":"ExclusiveOrAssign","needQuote":true,"nodes":[{"content":"ExclusiveOrAssign","pos":[0,17]}]},{"pos":[231405,231406],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[231477,231487],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[231548,231549]},{"pos":[231625,231635],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[231695,231696],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[231867,231884],"content":"ExclusiveOrAssign","needQuote":true,"nodes":[{"content":"ExclusiveOrAssign","pos":[0,17]}]},{"pos":[231962,231963],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[232034,232044],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[232105,232106]},{"pos":[232182,232192],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[232252,232253],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[232710,232763],"content":"ExclusiveOrAssign(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"ExclusiveOrAssign(Expression, Expression, MethodInfo)","pos":[0,53]}]},{"pos":[233118,233135],"content":"ExclusiveOrAssign","needQuote":true,"nodes":[{"content":"ExclusiveOrAssign","pos":[0,17]}]},{"pos":[233213,233214],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[233285,233295],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[233356,233357]},{"pos":[233433,233443],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[233504,233505]},{"pos":[233575,233585],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[233660,233661],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[233861,233878],"content":"ExclusiveOrAssign","needQuote":true,"nodes":[{"content":"ExclusiveOrAssign","pos":[0,17]}]},{"pos":[233956,233957],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[234028,234038],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[234099,234100]},{"pos":[234176,234186],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[234247,234248]},{"pos":[234318,234328],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[234403,234404],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[234943,235014],"content":"ExclusiveOrAssign(Expression, Expression, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"ExclusiveOrAssign(Expression, Expression, MethodInfo, LambdaExpression)","pos":[0,71]}]},{"pos":[235452,235469],"content":"ExclusiveOrAssign","needQuote":true,"nodes":[{"content":"ExclusiveOrAssign","pos":[0,17]}]},{"pos":[235547,235548],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[235619,235629],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[235690,235691]},{"pos":[235767,235777],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[235838,235839]},{"pos":[235909,235919],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[235995,235996]},{"pos":[236078,236094],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[236160,236161],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[236402,236419],"content":"ExclusiveOrAssign","needQuote":true,"nodes":[{"content":"ExclusiveOrAssign","pos":[0,17]}]},{"pos":[236497,236498],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[236569,236579],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[236640,236641]},{"pos":[236717,236727],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[236788,236789]},{"pos":[236859,236869],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[236945,236946]},{"pos":[237028,237044],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[237110,237111],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[237620,237648],"content":"Field(Expression, FieldInfo)","needQuote":true,"nodes":[{"content":"Field(Expression, FieldInfo)","pos":[0,28]}]},{"pos":[237906,237911],"content":"Field","needQuote":true,"nodes":[{"content":"Field","pos":[0,5]}]},{"pos":[237977,237978],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[238049,238059],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[238120,238121]},{"pos":[238190,238199],"content":"FieldInfo","needQuote":true,"nodes":[{"content":"FieldInfo","pos":[0,9]}]},{"pos":[238273,238274],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[238426,238431],"content":"Field","needQuote":true,"nodes":[{"content":"Field","pos":[0,5]}]},{"pos":[238497,238498],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[238569,238579],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[238640,238641]},{"pos":[238710,238719],"content":"FieldInfo","needQuote":true,"nodes":[{"content":"FieldInfo","pos":[0,9]}]},{"pos":[238793,238794],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[239157,239182],"content":"Field(Expression, String)","needQuote":true,"nodes":[{"content":"Field(Expression, String)","pos":[0,25]}]},{"pos":[239412,239417],"content":"Field","needQuote":true,"nodes":[{"content":"Field","pos":[0,5]}]},{"pos":[239483,239484],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[239555,239565],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[239626,239627]},{"pos":[239682,239688],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[239748,239749],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[239887,239892],"content":"Field","needQuote":true,"nodes":[{"content":"Field","pos":[0,5]}]},{"pos":[239958,239959],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[240030,240040],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[240101,240102]},{"pos":[240157,240163],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[240223,240224],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[240582,240613],"content":"Field(Expression, Type, String)","needQuote":true,"nodes":[{"content":"Field(Expression, Type, String)","pos":[0,31]}]},{"pos":[240868,240873],"content":"Field","needQuote":true,"nodes":[{"content":"Field","pos":[0,5]}]},{"pos":[240939,240940],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[241011,241021],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[241082,241083]},{"pos":[241136,241140],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[241199,241200]},{"pos":[241255,241261],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[241321,241322],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[241472,241477],"content":"Field","needQuote":true,"nodes":[{"content":"Field","pos":[0,5]}]},{"pos":[241543,241544],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[241615,241625],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[241686,241687]},{"pos":[241740,241744],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[241803,241804]},{"pos":[241859,241865],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[241925,241926],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[242263,242284],"content":"GetActionType(Type[])","needQuote":true,"nodes":[{"content":"GetActionType(Type[])","pos":[0,21]}]},{"pos":[242571,242584],"content":"GetActionType","needQuote":true,"nodes":[{"content":"GetActionType","pos":[0,13]}]},{"pos":[242658,242659],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[242707,242711],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[242770,242772]},{"pos":[242803,242804],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[242915,242928],"content":"GetActionType","needQuote":true,"nodes":[{"content":"GetActionType","pos":[0,13]}]},{"pos":[243002,243003],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[243051,243055],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[243113,243115],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[243143,243144],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[243486,243509],"content":"GetDelegateType(Type[])","needQuote":true,"nodes":[{"content":"GetDelegateType(Type[])","pos":[0,23]}]},{"pos":[243804,243819],"content":"GetDelegateType","needQuote":true,"nodes":[{"content":"GetDelegateType","pos":[0,15]}]},{"pos":[243895,243896],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[243944,243948],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[244007,244009]},{"pos":[244040,244041],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[244154,244169],"content":"GetDelegateType","needQuote":true,"nodes":[{"content":"GetDelegateType","pos":[0,15]}]},{"pos":[244245,244246],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[244294,244298],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[244356,244358],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[244386,244387],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[244731,244750],"content":"GetFuncType(Type[])","needQuote":true,"nodes":[{"content":"GetFuncType(Type[])","pos":[0,19]}]},{"pos":[245029,245040],"content":"GetFuncType","needQuote":true,"nodes":[{"content":"GetFuncType","pos":[0,11]}]},{"pos":[245112,245113],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[245161,245165],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[245224,245226]},{"pos":[245257,245258],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[245367,245378],"content":"GetFuncType","needQuote":true,"nodes":[{"content":"GetFuncType","pos":[0,11]}]},{"pos":[245450,245451],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[245499,245503],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[245561,245563],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[245591,245592],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[245940,245957],"content":"Goto(LabelTarget)","needQuote":true,"nodes":[{"content":"Goto(LabelTarget)","pos":[0,17]}]},{"pos":[246158,246162],"content":"Goto","needQuote":true,"nodes":[{"content":"Goto","pos":[0,4]}]},{"pos":[246227,246228],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[246300,246311],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[246372,246373],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[246497,246501],"content":"Goto","needQuote":true,"nodes":[{"content":"Goto","pos":[0,4]}]},{"pos":[246566,246567],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[246639,246650],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[246711,246712],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[247058,247087],"content":"Goto(LabelTarget, Expression)","needQuote":true,"nodes":[{"content":"Goto(LabelTarget, Expression)","pos":[0,29]}]},{"pos":[247359,247363],"content":"Goto","needQuote":true,"nodes":[{"content":"Goto","pos":[0,4]}]},{"pos":[247428,247429],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[247501,247512],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[247574,247575]},{"pos":[247651,247661],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[247721,247722],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[247881,247885],"content":"Goto","needQuote":true,"nodes":[{"content":"Goto","pos":[0,4]}]},{"pos":[247950,247951],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[248023,248034],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[248096,248097]},{"pos":[248173,248183],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[248243,248244],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[248648,248683],"content":"Goto(LabelTarget, Expression, Type)","needQuote":true,"nodes":[{"content":"Goto(LabelTarget, Expression, Type)","pos":[0,35]}]},{"pos":[248980,248984],"content":"Goto","needQuote":true,"nodes":[{"content":"Goto","pos":[0,4]}]},{"pos":[249049,249050],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[249122,249133],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[249195,249196]},{"pos":[249272,249282],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[249343,249344]},{"pos":[249397,249401],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[249459,249460],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[249631,249635],"content":"Goto","needQuote":true,"nodes":[{"content":"Goto","pos":[0,4]}]},{"pos":[249700,249701],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[249773,249784],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[249846,249847]},{"pos":[249923,249933],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[249994,249995]},{"pos":[250048,250052],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[250110,250111],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[250498,250521],"content":"Goto(LabelTarget, Type)","needQuote":true,"nodes":[{"content":"Goto(LabelTarget, Type)","pos":[0,23]}]},{"pos":[250747,250751],"content":"Goto","needQuote":true,"nodes":[{"content":"Goto","pos":[0,4]}]},{"pos":[250816,250817],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[250889,250900],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[250962,250963]},{"pos":[251016,251020],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[251078,251079],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[251215,251219],"content":"Goto","needQuote":true,"nodes":[{"content":"Goto","pos":[0,4]}]},{"pos":[251284,251285],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[251357,251368],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[251430,251431]},{"pos":[251484,251488],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[251546,251547],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[251917,251952],"content":"GreaterThan(Expression, Expression)","needQuote":true,"nodes":[{"content":"GreaterThan(Expression, Expression)","pos":[0,35]}]},{"pos":[252236,252247],"content":"GreaterThan","needQuote":true,"nodes":[{"content":"GreaterThan","pos":[0,11]}]},{"pos":[252319,252320],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[252391,252401],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[252462,252463]},{"pos":[252539,252549],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[252609,252610],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[252775,252786],"content":"GreaterThan","needQuote":true,"nodes":[{"content":"GreaterThan","pos":[0,11]}]},{"pos":[252858,252859],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[252930,252940],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[253001,253002]},{"pos":[253078,253088],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[253148,253149],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[253603,253659],"content":"GreaterThan(Expression, Expression, Boolean, MethodInfo)","needQuote":true,"nodes":[{"content":"GreaterThan(Expression, Expression, Boolean, MethodInfo)","pos":[0,56]}]},{"pos":[254033,254044],"content":"GreaterThan","needQuote":true,"nodes":[{"content":"GreaterThan","pos":[0,11]}]},{"pos":[254116,254117],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[254188,254198],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[254259,254260]},{"pos":[254336,254346],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[254407,254408]},{"pos":[254464,254471],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[254533,254534]},{"pos":[254604,254614],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[254689,254690],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[254899,254910],"content":"GreaterThan","needQuote":true,"nodes":[{"content":"GreaterThan","pos":[0,11]}]},{"pos":[254982,254983],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[255054,255064],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[255125,255126]},{"pos":[255202,255212],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[255273,255274]},{"pos":[255330,255337],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[255399,255400]},{"pos":[255470,255480],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[255555,255556],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[256039,256081],"content":"GreaterThanOrEqual(Expression, Expression)","needQuote":true,"nodes":[{"content":"GreaterThanOrEqual(Expression, Expression)","pos":[0,42]}]},{"pos":[256379,256397],"content":"GreaterThanOrEqual","needQuote":true,"nodes":[{"content":"GreaterThanOrEqual","pos":[0,18]}]},{"pos":[256476,256477],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[256548,256558],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[256619,256620]},{"pos":[256696,256706],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[256766,256767],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[256939,256957],"content":"GreaterThanOrEqual","needQuote":true,"nodes":[{"content":"GreaterThanOrEqual","pos":[0,18]}]},{"pos":[257036,257037],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[257108,257118],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[257179,257180]},{"pos":[257256,257266],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[257326,257327],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[257802,257865],"content":"GreaterThanOrEqual(Expression, Expression, Boolean, MethodInfo)","needQuote":true,"nodes":[{"content":"GreaterThanOrEqual(Expression, Expression, Boolean, MethodInfo)","pos":[0,63]}]},{"pos":[258253,258271],"content":"GreaterThanOrEqual","needQuote":true,"nodes":[{"content":"GreaterThanOrEqual","pos":[0,18]}]},{"pos":[258350,258351],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[258422,258432],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[258493,258494]},{"pos":[258570,258580],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[258641,258642]},{"pos":[258698,258705],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[258767,258768]},{"pos":[258838,258848],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[258923,258924],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[259140,259158],"content":"GreaterThanOrEqual","needQuote":true,"nodes":[{"content":"GreaterThanOrEqual","pos":[0,18]}]},{"pos":[259237,259238],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[259309,259319],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[259380,259381]},{"pos":[259457,259467],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[259528,259529]},{"pos":[259585,259592],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[259654,259655]},{"pos":[259725,259735],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[259810,259811],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[260296,260326],"content":"IfThen(Expression, Expression)","needQuote":true,"nodes":[{"content":"IfThen(Expression, Expression)","pos":[0,30]}]},{"pos":[260600,260606],"content":"IfThen","needQuote":true,"nodes":[{"content":"IfThen","pos":[0,6]}]},{"pos":[260673,260674],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[260745,260755],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[260816,260817]},{"pos":[260893,260903],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[260963,260964],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[261124,261130],"content":"IfThen","needQuote":true,"nodes":[{"content":"IfThen","pos":[0,6]}]},{"pos":[261197,261198],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[261269,261279],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[261340,261341]},{"pos":[261417,261427],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[261487,261488],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[261923,261969],"content":"IfThenElse(Expression, Expression, Expression)","needQuote":true,"nodes":[{"content":"IfThenElse(Expression, Expression, Expression)","pos":[0,46]}]},{"pos":[262322,262332],"content":"IfThenElse","needQuote":true,"nodes":[{"content":"IfThenElse","pos":[0,10]}]},{"pos":[262403,262404],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[262475,262485],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[262546,262547]},{"pos":[262623,262633],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[262694,262695]},{"pos":[262771,262781],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[262841,262842],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[263041,263051],"content":"IfThenElse","needQuote":true,"nodes":[{"content":"IfThenElse","pos":[0,10]}]},{"pos":[263122,263123],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[263194,263204],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[263265,263266]},{"pos":[263342,263352],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[263413,263414]},{"pos":[263490,263500],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[263560,263561],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[263980,264001],"content":"Increment(Expression)","needQuote":true,"nodes":[{"content":"Increment(Expression)","pos":[0,21]}]},{"pos":[264210,264219],"content":"Increment","needQuote":true,"nodes":[{"content":"Increment","pos":[0,9]}]},{"pos":[264289,264290],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[264361,264371],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[264431,264432],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[264560,264569],"content":"Increment","needQuote":true,"nodes":[{"content":"Increment","pos":[0,9]}]},{"pos":[264639,264640],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[264711,264721],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[264781,264782],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[265133,265166],"content":"Increment(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"Increment(Expression, MethodInfo)","pos":[0,33]}]},{"pos":[265434,265443],"content":"Increment","needQuote":true,"nodes":[{"content":"Increment","pos":[0,9]}]},{"pos":[265513,265514],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[265585,265595],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[265656,265657]},{"pos":[265727,265737],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[265812,265813],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[265970,265979],"content":"Increment","needQuote":true,"nodes":[{"content":"Increment","pos":[0,9]}]},{"pos":[266049,266050],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[266121,266131],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[266192,266193]},{"pos":[266263,266273],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[266348,266349],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[266784,266827],"content":"Invoke(Expression, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"Invoke(Expression, IEnumerable&lt;Expression&gt;)","pos":[0,43],"source":"Invoke(Expression, IEnumerable<Expression>)"}]},{"pos":[267411,267417],"content":"Invoke","needQuote":true,"nodes":[{"content":"Invoke","pos":[0,6]}]},{"pos":[267484,267485],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[267556,267566],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[267627,267628]},{"pos":[267710,267721],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[267806,267807],"content":"<","needQuote":true,"nodes":[]},{"pos":[267878,267888],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[267980,267981],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[268181,268187],"content":"Invoke","needQuote":true,"nodes":[{"content":"Invoke","pos":[0,6]}]},{"pos":[268254,268255],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[268326,268336],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[268397,268398]},{"pos":[268480,268491],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[268577,268580]},{"pos":[268658,268668],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[268728,268729],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[268756,268757],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[269285,269317],"content":"Invoke(Expression, Expression[])","needQuote":true,"nodes":[{"content":"Invoke(Expression, Expression[])","pos":[0,32]}]},{"pos":[269770,269776],"content":"Invoke","needQuote":true,"nodes":[{"content":"Invoke","pos":[0,6]}]},{"pos":[269843,269844],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[269915,269925],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[269986,269987]},{"pos":[270063,270073],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[270134,270136]},{"pos":[270167,270168],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[270330,270336],"content":"Invoke","needQuote":true,"nodes":[{"content":"Invoke","pos":[0,6]}]},{"pos":[270403,270404],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[270475,270485],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[270546,270547]},{"pos":[270623,270633],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[270693,270695],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[270723,270724],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[271153,271172],"content":"IsFalse(Expression)","needQuote":true,"nodes":[{"content":"IsFalse(Expression)","pos":[0,19]}]},{"pos":[271377,271384],"content":"IsFalse","needQuote":true,"nodes":[{"content":"IsFalse","pos":[0,7]}]},{"pos":[271452,271453],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[271524,271534],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[271594,271595],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[271721,271728],"content":"IsFalse","needQuote":true,"nodes":[{"content":"IsFalse","pos":[0,7]}]},{"pos":[271796,271797],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[271868,271878],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[271938,271939],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[272284,272315],"content":"IsFalse(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"IsFalse(Expression, MethodInfo)","pos":[0,31]}]},{"pos":[272579,272586],"content":"IsFalse","needQuote":true,"nodes":[{"content":"IsFalse","pos":[0,7]}]},{"pos":[272654,272655],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[272726,272736],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[272797,272798]},{"pos":[272868,272878],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[272953,272954],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[273109,273116],"content":"IsFalse","needQuote":true,"nodes":[{"content":"IsFalse","pos":[0,7]}]},{"pos":[273184,273185],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[273256,273266],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[273327,273328]},{"pos":[273398,273408],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[273483,273484],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[273841,273859],"content":"IsTrue(Expression)","needQuote":true,"nodes":[{"content":"IsTrue(Expression)","pos":[0,18]}]},{"pos":[274062,274068],"content":"IsTrue","needQuote":true,"nodes":[{"content":"IsTrue","pos":[0,6]}]},{"pos":[274135,274136],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[274207,274217],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[274277,274278],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[274403,274409],"content":"IsTrue","needQuote":true,"nodes":[{"content":"IsTrue","pos":[0,6]}]},{"pos":[274476,274477],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[274548,274558],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[274618,274619],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[274961,274991],"content":"IsTrue(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"IsTrue(Expression, MethodInfo)","pos":[0,30]}]},{"pos":[275253,275259],"content":"IsTrue","needQuote":true,"nodes":[{"content":"IsTrue","pos":[0,6]}]},{"pos":[275326,275327],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[275398,275408],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[275469,275470]},{"pos":[275540,275550],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[275625,275626],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[275780,275786],"content":"IsTrue","needQuote":true,"nodes":[{"content":"IsTrue","pos":[0,6]}]},{"pos":[275853,275854],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[275925,275935],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[275996,275997]},{"pos":[276067,276077],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[276152,276153],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[276471,276478],"content":"Label()","needQuote":true,"nodes":[{"content":"Label()","pos":[0,7]}]},{"pos":[276609,276614],"content":"Label","needQuote":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[276680,276681],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[276708,276709],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[276797,276802],"content":"Label","needQuote":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[276868,276869],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[276896,276897],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[277163,277181],"content":"Label(LabelTarget)","needQuote":true,"nodes":[{"content":"Label(LabelTarget)","pos":[0,18]}]},{"pos":[277384,277389],"content":"Label","needQuote":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[277455,277456],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[277528,277539],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[277600,277601],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[277726,277731],"content":"Label","needQuote":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[277797,277798],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[277870,277881],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[277942,277943],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[278292,278322],"content":"Label(LabelTarget, Expression)","needQuote":true,"nodes":[{"content":"Label(LabelTarget, Expression)","pos":[0,30]}]},{"pos":[278596,278601],"content":"Label","needQuote":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[278667,278668],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[278740,278751],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[278813,278814]},{"pos":[278890,278900],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[278960,278961],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[279121,279126],"content":"Label","needQuote":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[279192,279193],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[279265,279276],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[279338,279339]},{"pos":[279415,279425],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[279485,279486],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[279824,279837],"content":"Label(String)","needQuote":true,"nodes":[{"content":"Label(String)","pos":[0,13]}]},{"pos":[279996,280001],"content":"Label","needQuote":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[280067,280068],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[280118,280124],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[280184,280185],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[280288,280293],"content":"Label","needQuote":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[280359,280360],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[280410,280416],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[280476,280477],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[280739,280750],"content":"Label(Type)","needQuote":true,"nodes":[{"content":"Label(Type)","pos":[0,11]}]},{"pos":[280905,280910],"content":"Label","needQuote":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[280976,280977],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[281025,281029],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[281087,281088],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[281189,281194],"content":"Label","needQuote":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[281260,281261],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[281309,281313],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[281371,281372],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[281644,281663],"content":"Label(Type, String)","needQuote":true,"nodes":[{"content":"Label(Type, String)","pos":[0,19]}]},{"pos":[281847,281852],"content":"Label","needQuote":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[281918,281919],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[281967,281971],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[282030,282031]},{"pos":[282086,282092],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[282152,282153],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[282268,282273],"content":"Label","needQuote":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[282339,282340],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[282388,282392],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[282451,282452]},{"pos":[282507,282513],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[282573,282574],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[282977,283038],"content":"Lambda(Expression, Boolean, IEnumerable<ParameterExpression>)","needQuote":true,"nodes":[{"content":"Lambda(Expression, Boolean, IEnumerable&lt;ParameterExpression&gt;)","pos":[0,61],"source":"Lambda(Expression, Boolean, IEnumerable<ParameterExpression>)"}]},{"pos":[283714,283720],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[283787,283788],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[283859,283869],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[283930,283931]},{"pos":[283987,283994],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[284056,284057]},{"pos":[284139,284150],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[284235,284236],"content":"<","needQuote":true,"nodes":[]},{"pos":[284316,284335],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[284436,284437],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[284661,284667],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[284734,284735],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[284806,284816],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[284877,284878]},{"pos":[284934,284941],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[285003,285004]},{"pos":[285086,285097],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[285183,285186]},{"pos":[285273,285292],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[285361,285362],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[285389,285390],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[286001,286051],"content":"Lambda(Expression, Boolean, ParameterExpression[])","needQuote":true,"nodes":[{"content":"Lambda(Expression, Boolean, ParameterExpression[])","pos":[0,50]}]},{"pos":[286596,286602],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[286669,286670],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[286741,286751],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[286812,286813]},{"pos":[286869,286876],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[286938,286939]},{"pos":[287024,287043],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":"[]","pos":[287113,287115]},{"pos":[287146,287147],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[287333,287339],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[287406,287407],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[287478,287488],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[287549,287550]},{"pos":[287606,287613],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[287675,287676]},{"pos":[287761,287780],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[287849,287851],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[287879,287880],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[288451,288503],"content":"Lambda(Expression, IEnumerable<ParameterExpression>)","needQuote":true,"nodes":[{"content":"Lambda(Expression, IEnumerable&lt;ParameterExpression&gt;)","pos":[0,52],"source":"Lambda(Expression, IEnumerable<ParameterExpression>)"}]},{"pos":[289123,289129],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[289196,289197],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[289268,289278],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[289339,289340]},{"pos":[289422,289433],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[289518,289519],"content":"<","needQuote":true,"nodes":[]},{"pos":[289599,289618],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[289719,289720],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[289929,289935],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[290002,290003],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[290074,290084],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[290145,290146]},{"pos":[290228,290239],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[290325,290328]},{"pos":[290415,290434],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[290503,290504],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[290531,290532],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[291096,291137],"content":"Lambda(Expression, ParameterExpression[])","needQuote":true,"nodes":[{"content":"Lambda(Expression, ParameterExpression[])","pos":[0,41]}]},{"pos":[291626,291632],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[291699,291700],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[291771,291781],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[291842,291843]},{"pos":[291928,291947],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":"[]","pos":[292017,292019]},{"pos":[292050,292051],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[292222,292228],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[292295,292296],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[292367,292377],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[292438,292439]},{"pos":[292524,292543],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[292612,292614],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[292642,292643],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[293210,293279],"content":"Lambda(Expression, String, Boolean, IEnumerable<ParameterExpression>)","needQuote":true,"nodes":[{"content":"Lambda(Expression, String, Boolean, IEnumerable&lt;ParameterExpression&gt;)","pos":[0,69],"source":"Lambda(Expression, String, Boolean, IEnumerable<ParameterExpression>)"}]},{"pos":[294007,294013],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[294080,294081],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[294152,294162],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[294223,294224]},{"pos":[294279,294285],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[294346,294347]},{"pos":[294403,294410],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[294472,294473]},{"pos":[294555,294566],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[294651,294652],"content":"<","needQuote":true,"nodes":[]},{"pos":[294732,294751],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[294852,294853],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[295091,295097],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[295164,295165],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[295236,295246],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[295307,295308]},{"pos":[295363,295369],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[295430,295431]},{"pos":[295487,295494],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[295556,295557]},{"pos":[295639,295650],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[295736,295739]},{"pos":[295826,295845],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[295914,295915],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[295942,295943],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[296621,296681],"content":"Lambda(Expression, String, IEnumerable<ParameterExpression>)","needQuote":true,"nodes":[{"content":"Lambda(Expression, String, IEnumerable&lt;ParameterExpression&gt;)","pos":[0,60],"source":"Lambda(Expression, String, IEnumerable<ParameterExpression>)"}]},{"pos":[297353,297359],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[297426,297427],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[297498,297508],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[297569,297570]},{"pos":[297625,297631],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[297692,297693]},{"pos":[297775,297786],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[297871,297872],"content":"<","needQuote":true,"nodes":[]},{"pos":[297952,297971],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[298072,298073],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[298296,298302],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[298369,298370],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[298441,298451],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[298512,298513]},{"pos":[298568,298574],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[298635,298636]},{"pos":[298718,298729],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[298815,298818]},{"pos":[298905,298924],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[298993,298994],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[299021,299022],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[299680,299747],"content":"Lambda(Type, Expression, Boolean, IEnumerable<ParameterExpression>)","needQuote":true,"nodes":[{"content":"Lambda(Type, Expression, Boolean, IEnumerable&lt;ParameterExpression&gt;)","pos":[0,67],"source":"Lambda(Type, Expression, Boolean, IEnumerable<ParameterExpression>)"}]},{"pos":[300467,300473],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[300540,300541],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[300589,300593],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[300652,300653]},{"pos":[300729,300739],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[300800,300801]},{"pos":[300857,300864],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[300926,300927]},{"pos":[301009,301020],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[301105,301106],"content":"<","needQuote":true,"nodes":[]},{"pos":[301186,301205],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[301306,301307],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[301543,301549],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[301616,301617],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[301665,301669],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[301728,301729]},{"pos":[301805,301815],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[301876,301877]},{"pos":[301933,301940],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[302002,302003]},{"pos":[302085,302096],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[302182,302185]},{"pos":[302272,302291],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[302360,302361],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[302388,302389],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[303036,303092],"content":"Lambda(Type, Expression, Boolean, ParameterExpression[])","needQuote":true,"nodes":[{"content":"Lambda(Type, Expression, Boolean, ParameterExpression[])","pos":[0,56]}]},{"pos":[303681,303687],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[303754,303755],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[303803,303807],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[303866,303867]},{"pos":[303943,303953],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[304014,304015]},{"pos":[304071,304078],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[304140,304141]},{"pos":[304226,304245],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":"[]","pos":[304315,304317]},{"pos":[304348,304349],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[304547,304553],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[304620,304621],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[304669,304673],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[304732,304733]},{"pos":[304809,304819],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[304880,304881]},{"pos":[304937,304944],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[305006,305007]},{"pos":[305092,305111],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[305180,305182],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[305210,305211],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[305818,305876],"content":"Lambda(Type, Expression, IEnumerable<ParameterExpression>)","needQuote":true,"nodes":[{"content":"Lambda(Type, Expression, IEnumerable&lt;ParameterExpression&gt;)","pos":[0,58],"source":"Lambda(Type, Expression, IEnumerable<ParameterExpression>)"}]},{"pos":[306540,306546],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[306613,306614],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[306662,306666],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[306725,306726]},{"pos":[306802,306812],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[306873,306874]},{"pos":[306956,306967],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[307052,307053],"content":"<","needQuote":true,"nodes":[]},{"pos":[307133,307152],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[307253,307254],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[307475,307481],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[307548,307549],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[307597,307601],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[307660,307661]},{"pos":[307737,307747],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[307808,307809]},{"pos":[307891,307902],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[307988,307991]},{"pos":[308078,308097],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[308166,308167],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[308194,308195],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[308794,308841],"content":"Lambda(Type, Expression, ParameterExpression[])","needQuote":true,"nodes":[{"content":"Lambda(Type, Expression, ParameterExpression[])","pos":[0,47]}]},{"pos":[309374,309380],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[309447,309448],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[309496,309500],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[309559,309560]},{"pos":[309636,309646],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[309707,309708]},{"pos":[309793,309812],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":"[]","pos":[309882,309884]},{"pos":[309915,309916],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[310099,310105],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[310172,310173],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[310221,310225],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[310284,310285]},{"pos":[310361,310371],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[310432,310433]},{"pos":[310518,310537],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[310606,310608],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[310636,310637],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[311240,311315],"content":"Lambda(Type, Expression, String, Boolean, IEnumerable<ParameterExpression>)","needQuote":true,"nodes":[{"content":"Lambda(Type, Expression, String, Boolean, IEnumerable&lt;ParameterExpression&gt;)","pos":[0,75],"source":"Lambda(Type, Expression, String, Boolean, IEnumerable<ParameterExpression>)"}]},{"pos":[312087,312093],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[312160,312161],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[312209,312213],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[312272,312273]},{"pos":[312349,312359],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[312420,312421]},{"pos":[312476,312482],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[312543,312544]},{"pos":[312600,312607],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[312669,312670]},{"pos":[312752,312763],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[312848,312849],"content":"<","needQuote":true,"nodes":[]},{"pos":[312929,312948],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[313049,313050],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[313300,313306],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[313373,313374],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[313422,313426],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[313485,313486]},{"pos":[313562,313572],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[313633,313634]},{"pos":[313689,313695],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[313756,313757]},{"pos":[313813,313820],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[313882,313883]},{"pos":[313965,313976],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[314062,314065]},{"pos":[314152,314171],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[314240,314241],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[314268,314269],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[314983,315049],"content":"Lambda(Type, Expression, String, IEnumerable<ParameterExpression>)","needQuote":true,"nodes":[{"content":"Lambda(Type, Expression, String, IEnumerable&lt;ParameterExpression&gt;)","pos":[0,66],"source":"Lambda(Type, Expression, String, IEnumerable<ParameterExpression>)"}]},{"pos":[315765,315771],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[315838,315839],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[315887,315891],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[315950,315951]},{"pos":[316027,316037],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[316098,316099]},{"pos":[316154,316160],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[316221,316222]},{"pos":[316304,316315],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[316400,316401],"content":"<","needQuote":true,"nodes":[]},{"pos":[316481,316500],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[316601,316602],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[316837,316843],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[316910,316911],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[316959,316963],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[317022,317023]},{"pos":[317099,317109],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[317170,317171]},{"pos":[317226,317232],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[317293,317294]},{"pos":[317376,317387],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[317473,317476]},{"pos":[317563,317582],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[317651,317652],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[317679,317680],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[318353,318425],"content":"Lambda<TDelegate>(Expression, Boolean, IEnumerable<ParameterExpression>)","needQuote":true,"nodes":[{"content":"Lambda&lt;TDelegate&gt;(Expression, Boolean, IEnumerable&lt;ParameterExpression&gt;)","pos":[0,72],"source":"Lambda<TDelegate>(Expression, Boolean, IEnumerable<ParameterExpression>)"}]},{"pos":[319143,319160],"content":"Lambda<TDelegate>","needQuote":true,"nodes":[{"content":"Lambda&lt;TDelegate&gt;","pos":[0,17],"source":"Lambda<TDelegate>"}]},{"pos":[319238,319239],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[319310,319320],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[319381,319382]},{"pos":[319438,319445],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[319507,319508]},{"pos":[319590,319601],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[319686,319687],"content":"<","needQuote":true,"nodes":[]},{"pos":[319767,319786],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[319887,319888],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[320115,320135],"content":"Lambda(Of TDelegate)","needQuote":true,"nodes":[{"content":"Lambda(Of TDelegate)","pos":[0,20]}]},{"pos":[320216,320217],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[320288,320298],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[320359,320360]},{"pos":[320416,320423],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[320485,320486]},{"pos":[320568,320579],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[320665,320668]},{"pos":[320755,320774],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[320843,320844],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[320871,320872],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[321514,321575],"content":"Lambda<TDelegate>(Expression, Boolean, ParameterExpression[])","needQuote":true,"nodes":[{"content":"Lambda&lt;TDelegate&gt;(Expression, Boolean, ParameterExpression[])","pos":[0,61],"source":"Lambda<TDelegate>(Expression, Boolean, ParameterExpression[])"}]},{"pos":[322162,322179],"content":"Lambda<TDelegate>","needQuote":true,"nodes":[{"content":"Lambda&lt;TDelegate&gt;","pos":[0,17],"source":"Lambda<TDelegate>"}]},{"pos":[322257,322258],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[322329,322339],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[322400,322401]},{"pos":[322457,322464],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[322526,322527]},{"pos":[322612,322631],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":"[]","pos":[322701,322703]},{"pos":[322734,322735],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[322924,322944],"content":"Lambda(Of TDelegate)","needQuote":true,"nodes":[{"content":"Lambda(Of TDelegate)","pos":[0,20]}]},{"pos":[323025,323026],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[323097,323107],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[323168,323169]},{"pos":[323225,323232],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[323294,323295]},{"pos":[323380,323399],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[323468,323470],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[323498,323499],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[324101,324164],"content":"Lambda<TDelegate>(Expression, IEnumerable<ParameterExpression>)","needQuote":true,"nodes":[{"content":"Lambda&lt;TDelegate&gt;(Expression, IEnumerable&lt;ParameterExpression&gt;)","pos":[0,63],"source":"Lambda<TDelegate>(Expression, IEnumerable<ParameterExpression>)"}]},{"pos":[324826,324843],"content":"Lambda<TDelegate>","needQuote":true,"nodes":[{"content":"Lambda&lt;TDelegate&gt;","pos":[0,17],"source":"Lambda<TDelegate>"}]},{"pos":[324921,324922],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[324993,325003],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[325064,325065]},{"pos":[325147,325158],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[325243,325244],"content":"<","needQuote":true,"nodes":[]},{"pos":[325324,325343],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[325444,325445],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[325657,325677],"content":"Lambda(Of TDelegate)","needQuote":true,"nodes":[{"content":"Lambda(Of TDelegate)","pos":[0,20]}]},{"pos":[325758,325759],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[325830,325840],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[325901,325902]},{"pos":[325984,325995],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[326081,326084]},{"pos":[326171,326190],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[326259,326260],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[326287,326288],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[326883,326935],"content":"Lambda<TDelegate>(Expression, ParameterExpression[])","needQuote":true,"nodes":[{"content":"Lambda&lt;TDelegate&gt;(Expression, ParameterExpression[])","pos":[0,52],"source":"Lambda<TDelegate>(Expression, ParameterExpression[])"}]},{"pos":[327466,327483],"content":"Lambda<TDelegate>","needQuote":true,"nodes":[{"content":"Lambda&lt;TDelegate&gt;","pos":[0,17],"source":"Lambda<TDelegate>"}]},{"pos":[327561,327562],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[327633,327643],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[327704,327705]},{"pos":[327790,327809],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":"[]","pos":[327879,327881]},{"pos":[327912,327913],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[328087,328107],"content":"Lambda(Of TDelegate)","needQuote":true,"nodes":[{"content":"Lambda(Of TDelegate)","pos":[0,20]}]},{"pos":[328188,328189],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[328260,328270],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[328331,328332]},{"pos":[328417,328436],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[328505,328507],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[328535,328536],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[329134,329214],"content":"Lambda<TDelegate>(Expression, String, Boolean, IEnumerable<ParameterExpression>)","needQuote":true,"nodes":[{"content":"Lambda&lt;TDelegate&gt;(Expression, String, Boolean, IEnumerable&lt;ParameterExpression&gt;)","pos":[0,80],"source":"Lambda<TDelegate>(Expression, String, Boolean, IEnumerable<ParameterExpression>)"}]},{"pos":[329984,330001],"content":"Lambda<TDelegate>","needQuote":true,"nodes":[{"content":"Lambda&lt;TDelegate&gt;","pos":[0,17],"source":"Lambda<TDelegate>"}]},{"pos":[330079,330080],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[330151,330161],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[330222,330223]},{"pos":[330278,330284],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[330345,330346]},{"pos":[330402,330409],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[330471,330472]},{"pos":[330554,330565],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[330650,330651],"content":"<","needQuote":true,"nodes":[]},{"pos":[330731,330750],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[330851,330852],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[331093,331113],"content":"Lambda(Of TDelegate)","needQuote":true,"nodes":[{"content":"Lambda(Of TDelegate)","pos":[0,20]}]},{"pos":[331194,331195],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[331266,331276],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[331337,331338]},{"pos":[331393,331399],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[331460,331461]},{"pos":[331517,331524],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[331586,331587]},{"pos":[331669,331680],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[331766,331769]},{"pos":[331856,331875],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[331944,331945],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[331972,331973],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[332682,332753],"content":"Lambda<TDelegate>(Expression, String, IEnumerable<ParameterExpression>)","needQuote":true,"nodes":[{"content":"Lambda&lt;TDelegate&gt;(Expression, String, IEnumerable&lt;ParameterExpression&gt;)","pos":[0,71],"source":"Lambda<TDelegate>(Expression, String, IEnumerable<ParameterExpression>)"}]},{"pos":[333467,333484],"content":"Lambda<TDelegate>","needQuote":true,"nodes":[{"content":"Lambda&lt;TDelegate&gt;","pos":[0,17],"source":"Lambda<TDelegate>"}]},{"pos":[333562,333563],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[333634,333644],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[333705,333706]},{"pos":[333761,333767],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[333828,333829]},{"pos":[333911,333922],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[334007,334008],"content":"<","needQuote":true,"nodes":[]},{"pos":[334088,334107],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[334208,334209],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[334435,334455],"content":"Lambda(Of TDelegate)","needQuote":true,"nodes":[{"content":"Lambda(Of TDelegate)","pos":[0,20]}]},{"pos":[334536,334537],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[334608,334618],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[334679,334680]},{"pos":[334735,334741],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[334802,334803]},{"pos":[334885,334896],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[334982,334985]},{"pos":[335072,335091],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[335160,335161],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[335188,335189],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[335803,335836],"content":"LeftShift(Expression, Expression)","needQuote":true,"nodes":[{"content":"LeftShift(Expression, Expression)","pos":[0,33]}]},{"pos":[336116,336125],"content":"LeftShift","needQuote":true,"nodes":[{"content":"LeftShift","pos":[0,9]}]},{"pos":[336195,336196],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[336267,336277],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[336338,336339]},{"pos":[336415,336425],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[336485,336486],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[336649,336658],"content":"LeftShift","needQuote":true,"nodes":[{"content":"LeftShift","pos":[0,9]}]},{"pos":[336728,336729],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[336800,336810],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[336871,336872]},{"pos":[336948,336958],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[337018,337019],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[337452,337497],"content":"LeftShift(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"LeftShift(Expression, Expression, MethodInfo)","pos":[0,45]}]},{"pos":[337836,337845],"content":"LeftShift","needQuote":true,"nodes":[{"content":"LeftShift","pos":[0,9]}]},{"pos":[337915,337916],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[337987,337997],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[338058,338059]},{"pos":[338135,338145],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[338206,338207]},{"pos":[338277,338287],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[338362,338363],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[338555,338564],"content":"LeftShift","needQuote":true,"nodes":[{"content":"LeftShift","pos":[0,9]}]},{"pos":[338634,338635],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[338706,338716],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[338777,338778]},{"pos":[338854,338864],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[338925,338926]},{"pos":[338996,339006],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[339081,339082],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[339534,339573],"content":"LeftShiftAssign(Expression, Expression)","needQuote":true,"nodes":[{"content":"LeftShiftAssign(Expression, Expression)","pos":[0,39]}]},{"pos":[339865,339880],"content":"LeftShiftAssign","needQuote":true,"nodes":[{"content":"LeftShiftAssign","pos":[0,15]}]},{"pos":[339956,339957],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[340028,340038],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[340099,340100]},{"pos":[340176,340186],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[340246,340247],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[340416,340431],"content":"LeftShiftAssign","needQuote":true,"nodes":[{"content":"LeftShiftAssign","pos":[0,15]}]},{"pos":[340507,340508],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[340579,340589],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[340650,340651]},{"pos":[340727,340737],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[340797,340798],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[341249,341300],"content":"LeftShiftAssign(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"LeftShiftAssign(Expression, Expression, MethodInfo)","pos":[0,51]}]},{"pos":[341651,341666],"content":"LeftShiftAssign","needQuote":true,"nodes":[{"content":"LeftShiftAssign","pos":[0,15]}]},{"pos":[341742,341743],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[341814,341824],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[341885,341886]},{"pos":[341962,341972],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[342033,342034]},{"pos":[342104,342114],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[342189,342190],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[342388,342403],"content":"LeftShiftAssign","needQuote":true,"nodes":[{"content":"LeftShiftAssign","pos":[0,15]}]},{"pos":[342479,342480],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[342551,342561],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[342622,342623]},{"pos":[342699,342709],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[342770,342771]},{"pos":[342841,342851],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[342926,342927],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[343460,343529],"content":"LeftShiftAssign(Expression, Expression, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"LeftShiftAssign(Expression, Expression, MethodInfo, LambdaExpression)","pos":[0,69]}]},{"pos":[343963,343978],"content":"LeftShiftAssign","needQuote":true,"nodes":[{"content":"LeftShiftAssign","pos":[0,15]}]},{"pos":[344054,344055],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[344126,344136],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[344197,344198]},{"pos":[344274,344284],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[344345,344346]},{"pos":[344416,344426],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[344502,344503]},{"pos":[344585,344601],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[344667,344668],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[344907,344922],"content":"LeftShiftAssign","needQuote":true,"nodes":[{"content":"LeftShiftAssign","pos":[0,15]}]},{"pos":[344998,344999],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[345070,345080],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[345141,345142]},{"pos":[345218,345228],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[345289,345290]},{"pos":[345360,345370],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[345446,345447]},{"pos":[345529,345545],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[345611,345612],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[346128,346160],"content":"LessThan(Expression, Expression)","needQuote":true,"nodes":[{"content":"LessThan(Expression, Expression)","pos":[0,32]}]},{"pos":[346438,346446],"content":"LessThan","needQuote":true,"nodes":[{"content":"LessThan","pos":[0,8]}]},{"pos":[346515,346516],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[346587,346597],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[346658,346659]},{"pos":[346735,346745],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[346805,346806],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[346968,346976],"content":"LessThan","needQuote":true,"nodes":[{"content":"LessThan","pos":[0,8]}]},{"pos":[347045,347046],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[347117,347127],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[347188,347189]},{"pos":[347265,347275],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[347335,347336],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[347781,347834],"content":"LessThan(Expression, Expression, Boolean, MethodInfo)","needQuote":true,"nodes":[{"content":"LessThan(Expression, Expression, Boolean, MethodInfo)","pos":[0,53]}]},{"pos":[348202,348210],"content":"LessThan","needQuote":true,"nodes":[{"content":"LessThan","pos":[0,8]}]},{"pos":[348279,348280],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[348351,348361],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[348422,348423]},{"pos":[348499,348509],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[348570,348571]},{"pos":[348627,348634],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[348696,348697]},{"pos":[348767,348777],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[348852,348853],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[349059,349067],"content":"LessThan","needQuote":true,"nodes":[{"content":"LessThan","pos":[0,8]}]},{"pos":[349136,349137],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[349208,349218],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[349279,349280]},{"pos":[349356,349366],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[349427,349428]},{"pos":[349484,349491],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[349553,349554]},{"pos":[349624,349634],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[349709,349710],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[350184,350223],"content":"LessThanOrEqual(Expression, Expression)","needQuote":true,"nodes":[{"content":"LessThanOrEqual(Expression, Expression)","pos":[0,39]}]},{"pos":[350515,350530],"content":"LessThanOrEqual","needQuote":true,"nodes":[{"content":"LessThanOrEqual","pos":[0,15]}]},{"pos":[350606,350607],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[350678,350688],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[350749,350750]},{"pos":[350826,350836],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[350896,350897],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[351066,351081],"content":"LessThanOrEqual","needQuote":true,"nodes":[{"content":"LessThanOrEqual","pos":[0,15]}]},{"pos":[351157,351158],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[351229,351239],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[351300,351301]},{"pos":[351377,351387],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[351447,351448],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[351914,351974],"content":"LessThanOrEqual(Expression, Expression, Boolean, MethodInfo)","needQuote":true,"nodes":[{"content":"LessThanOrEqual(Expression, Expression, Boolean, MethodInfo)","pos":[0,60]}]},{"pos":[352356,352371],"content":"LessThanOrEqual","needQuote":true,"nodes":[{"content":"LessThanOrEqual","pos":[0,15]}]},{"pos":[352447,352448],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[352519,352529],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[352590,352591]},{"pos":[352667,352677],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[352738,352739]},{"pos":[352795,352802],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[352864,352865]},{"pos":[352935,352945],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[353020,353021],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[353234,353249],"content":"LessThanOrEqual","needQuote":true,"nodes":[{"content":"LessThanOrEqual","pos":[0,15]}]},{"pos":[353325,353326],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[353397,353407],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[353468,353469]},{"pos":[353545,353555],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[353616,353617]},{"pos":[353673,353680],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[353742,353743]},{"pos":[353813,353823],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[353898,353899],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[354414,354460],"content":"ListBind(MemberInfo, IEnumerable<ElementInit>)","needQuote":true,"nodes":[{"content":"ListBind(MemberInfo, IEnumerable&lt;ElementInit&gt;)","pos":[0,46],"source":"ListBind(MemberInfo, IEnumerable<ElementInit>)"}]},{"pos":[355038,355046],"content":"ListBind","needQuote":true,"nodes":[{"content":"ListBind","pos":[0,8]}]},{"pos":[355115,355116],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[355181,355191],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[355267,355268]},{"pos":[355350,355361],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[355446,355447],"content":"<","needQuote":true,"nodes":[]},{"pos":[355519,355530],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"pos":[355623,355624],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[355821,355829],"content":"ListBind","needQuote":true,"nodes":[{"content":"ListBind","pos":[0,8]}]},{"pos":[355898,355899],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[355964,355974],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[356050,356051]},{"pos":[356133,356144],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[356230,356233]},{"pos":[356312,356323],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"pos":[356384,356385],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[356412,356413],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[356940,356975],"content":"ListBind(MemberInfo, ElementInit[])","needQuote":true,"nodes":[{"content":"ListBind(MemberInfo, ElementInit[])","pos":[0,35]}]},{"pos":[357422,357430],"content":"ListBind","needQuote":true,"nodes":[{"content":"ListBind","pos":[0,8]}]},{"pos":[357499,357500],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[357565,357575],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[357651,357652]},{"pos":[357729,357740],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"content":"[]","pos":[357802,357804]},{"pos":[357835,357836],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[357995,358003],"content":"ListBind","needQuote":true,"nodes":[{"content":"ListBind","pos":[0,8]}]},{"pos":[358072,358073],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[358138,358148],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[358224,358225]},{"pos":[358302,358313],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"pos":[358374,358376],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[358404,358405],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[358907,358953],"content":"ListBind(MethodInfo, IEnumerable<ElementInit>)","needQuote":true,"nodes":[{"content":"ListBind(MethodInfo, IEnumerable&lt;ElementInit&gt;)","pos":[0,46],"source":"ListBind(MethodInfo, IEnumerable<ElementInit>)"}]},{"pos":[359531,359539],"content":"ListBind","needQuote":true,"nodes":[{"content":"ListBind","pos":[0,8]}]},{"pos":[359608,359609],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[359674,359684],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[359760,359761]},{"pos":[359843,359854],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[359939,359940],"content":"<","needQuote":true,"nodes":[]},{"pos":[360012,360023],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"pos":[360116,360117],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[360314,360322],"content":"ListBind","needQuote":true,"nodes":[{"content":"ListBind","pos":[0,8]}]},{"pos":[360391,360392],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[360457,360467],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[360543,360544]},{"pos":[360626,360637],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[360723,360726]},{"pos":[360805,360816],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"pos":[360877,360878],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[360905,360906],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[361433,361468],"content":"ListBind(MethodInfo, ElementInit[])","needQuote":true,"nodes":[{"content":"ListBind(MethodInfo, ElementInit[])","pos":[0,35]}]},{"pos":[361915,361923],"content":"ListBind","needQuote":true,"nodes":[{"content":"ListBind","pos":[0,8]}]},{"pos":[361992,361993],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[362058,362068],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[362144,362145]},{"pos":[362222,362233],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"content":"[]","pos":[362295,362297]},{"pos":[362328,362329],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[362488,362496],"content":"ListBind","needQuote":true,"nodes":[{"content":"ListBind","pos":[0,8]}]},{"pos":[362565,362566],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[362631,362641],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[362717,362718]},{"pos":[362795,362806],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"pos":[362867,362869],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[362897,362898],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[363409,363458],"content":"ListInit(NewExpression, IEnumerable<ElementInit>)","needQuote":true,"nodes":[{"content":"ListInit(NewExpression, IEnumerable&lt;ElementInit&gt;)","pos":[0,49],"source":"ListInit(NewExpression, IEnumerable<ElementInit>)"}]},{"pos":[364066,364074],"content":"ListInit","needQuote":true,"nodes":[{"content":"ListInit","pos":[0,8]}]},{"pos":[364143,364144],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[364218,364231],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[364295,364296]},{"pos":[364378,364389],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[364474,364475],"content":"<","needQuote":true,"nodes":[]},{"pos":[364547,364558],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"pos":[364651,364652],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[364858,364866],"content":"ListInit","needQuote":true,"nodes":[{"content":"ListInit","pos":[0,8]}]},{"pos":[364935,364936],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[365010,365023],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[365087,365088]},{"pos":[365170,365181],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[365267,365270]},{"pos":[365349,365360],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"pos":[365421,365422],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[365449,365450],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[366038,366086],"content":"ListInit(NewExpression, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"ListInit(NewExpression, IEnumerable&lt;Expression&gt;)","pos":[0,48],"source":"ListInit(NewExpression, IEnumerable<Expression>)"}]},{"pos":[366690,366698],"content":"ListInit","needQuote":true,"nodes":[{"content":"ListInit","pos":[0,8]}]},{"pos":[366767,366768],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[366842,366855],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[366919,366920]},{"pos":[367002,367013],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[367098,367099],"content":"<","needQuote":true,"nodes":[]},{"pos":[367170,367180],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[367272,367273],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[367478,367486],"content":"ListInit","needQuote":true,"nodes":[{"content":"ListInit","pos":[0,8]}]},{"pos":[367555,367556],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[367630,367643],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[367707,367708]},{"pos":[367790,367801],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[367887,367890]},{"pos":[367968,367978],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[368038,368039],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[368066,368067],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[368616,368654],"content":"ListInit(NewExpression, ElementInit[])","needQuote":true,"nodes":[{"content":"ListInit(NewExpression, ElementInit[])","pos":[0,38]}]},{"pos":[369131,369139],"content":"ListInit","needQuote":true,"nodes":[{"content":"ListInit","pos":[0,8]}]},{"pos":[369208,369209],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[369283,369296],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[369360,369361]},{"pos":[369438,369449],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"content":"[]","pos":[369511,369513]},{"pos":[369544,369545],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[369713,369721],"content":"ListInit","needQuote":true,"nodes":[{"content":"ListInit","pos":[0,8]}]},{"pos":[369790,369791],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[369865,369878],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[369942,369943]},{"pos":[370020,370031],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"pos":[370092,370094],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[370122,370123],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[370611,370648],"content":"ListInit(NewExpression, Expression[])","needQuote":true,"nodes":[{"content":"ListInit(NewExpression, Expression[])","pos":[0,37]}]},{"pos":[371121,371129],"content":"ListInit","needQuote":true,"nodes":[{"content":"ListInit","pos":[0,8]}]},{"pos":[371198,371199],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[371273,371286],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[371350,371351]},{"pos":[371427,371437],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[371498,371500]},{"pos":[371531,371532],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[371699,371707],"content":"ListInit","needQuote":true,"nodes":[{"content":"ListInit","pos":[0,8]}]},{"pos":[371776,371777],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[371851,371864],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[371928,371929]},{"pos":[372005,372015],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[372075,372077],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[372105,372106],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[372657,372717],"content":"ListInit(NewExpression, MethodInfo, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"ListInit(NewExpression, MethodInfo, IEnumerable&lt;Expression&gt;)","pos":[0,60],"source":"ListInit(NewExpression, MethodInfo, IEnumerable<Expression>)"}]},{"pos":[373422,373430],"content":"ListInit","needQuote":true,"nodes":[{"content":"ListInit","pos":[0,8]}]},{"pos":[373499,373500],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[373574,373587],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[373651,373652]},{"pos":[373722,373732],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[373808,373809]},{"pos":[373891,373902],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[373987,373988],"content":"<","needQuote":true,"nodes":[]},{"pos":[374059,374069],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[374161,374162],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[374396,374404],"content":"ListInit","needQuote":true,"nodes":[{"content":"ListInit","pos":[0,8]}]},{"pos":[374473,374474],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[374548,374561],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[374625,374626]},{"pos":[374696,374706],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[374782,374783]},{"pos":[374865,374876],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[374962,374965]},{"pos":[375043,375053],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[375113,375114],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[375141,375142],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[375771,375820],"content":"ListInit(NewExpression, MethodInfo, Expression[])","needQuote":true,"nodes":[{"content":"ListInit(NewExpression, MethodInfo, Expression[])","pos":[0,49]}]},{"pos":[376394,376402],"content":"ListInit","needQuote":true,"nodes":[{"content":"ListInit","pos":[0,8]}]},{"pos":[376471,376472],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[376546,376559],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[376623,376624]},{"pos":[376694,376704],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[376780,376781]},{"pos":[376857,376867],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[376928,376930]},{"pos":[376961,376962],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[377158,377166],"content":"ListInit","needQuote":true,"nodes":[{"content":"ListInit","pos":[0,8]}]},{"pos":[377235,377236],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[377310,377323],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[377387,377388]},{"pos":[377458,377468],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[377544,377545]},{"pos":[377621,377631],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[377691,377693],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[377721,377722],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[378216,378232],"content":"Loop(Expression)","needQuote":true,"nodes":[{"content":"Loop(Expression)","pos":[0,16]}]},{"pos":[378431,378435],"content":"Loop","needQuote":true,"nodes":[{"content":"Loop","pos":[0,4]}]},{"pos":[378500,378501],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[378572,378582],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[378642,378643],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[378766,378770],"content":"Loop","needQuote":true,"nodes":[{"content":"Loop","pos":[0,4]}]},{"pos":[378835,378836],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[378907,378917],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[378977,378978],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[379322,379351],"content":"Loop(Expression, LabelTarget)","needQuote":true,"nodes":[{"content":"Loop(Expression, LabelTarget)","pos":[0,29]}]},{"pos":[379623,379627],"content":"Loop","needQuote":true,"nodes":[{"content":"Loop","pos":[0,4]}]},{"pos":[379692,379693],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[379764,379774],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[379835,379836]},{"pos":[379913,379924],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[379985,379986],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[380145,380149],"content":"Loop","needQuote":true,"nodes":[{"content":"Loop","pos":[0,4]}]},{"pos":[380214,380215],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[380286,380296],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[380357,380358]},{"pos":[380435,380446],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[380507,380508],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[380937,380979],"content":"Loop(Expression, LabelTarget, LabelTarget)","needQuote":true,"nodes":[{"content":"Loop(Expression, LabelTarget, LabelTarget)","pos":[0,42]}]},{"pos":[381324,381328],"content":"Loop","needQuote":true,"nodes":[{"content":"Loop","pos":[0,4]}]},{"pos":[381393,381394],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[381465,381475],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[381536,381537]},{"pos":[381614,381625],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[381687,381688]},{"pos":[381765,381776],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[381837,381838],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[382033,382037],"content":"Loop","needQuote":true,"nodes":[{"content":"Loop","pos":[0,4]}]},{"pos":[382102,382103],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[382174,382184],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[382245,382246]},{"pos":[382323,382334],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[382396,382397]},{"pos":[382474,382485],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[382546,382547],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[383033,383083],"content":"MakeBinary(ExpressionType, Expression, Expression)","needQuote":true,"nodes":[{"content":"MakeBinary(ExpressionType, Expression, Expression)","pos":[0,50]}]},{"pos":[383444,383454],"content":"MakeBinary","needQuote":true,"nodes":[{"content":"MakeBinary","pos":[0,10]}]},{"pos":[383525,383526],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[383601,383615],"content":"ExpressionType","needQuote":true,"nodes":[{"content":"ExpressionType","pos":[0,14]}]},{"content":",","pos":[383680,383681]},{"pos":[383757,383767],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[383828,383829]},{"pos":[383905,383915],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[383975,383976],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[384179,384189],"content":"MakeBinary","needQuote":true,"nodes":[{"content":"MakeBinary","pos":[0,10]}]},{"pos":[384260,384261],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[384336,384350],"content":"ExpressionType","needQuote":true,"nodes":[{"content":"ExpressionType","pos":[0,14]}]},{"content":",","pos":[384415,384416]},{"pos":[384492,384502],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[384563,384564]},{"pos":[384640,384650],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[384710,384711],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[385256,385327],"content":"MakeBinary(ExpressionType, Expression, Expression, Boolean, MethodInfo)","needQuote":true,"nodes":[{"content":"MakeBinary(ExpressionType, Expression, Expression, Boolean, MethodInfo)","pos":[0,71]}]},{"pos":[385778,385788],"content":"MakeBinary","needQuote":true,"nodes":[{"content":"MakeBinary","pos":[0,10]}]},{"pos":[385859,385860],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[385935,385949],"content":"ExpressionType","needQuote":true,"nodes":[{"content":"ExpressionType","pos":[0,14]}]},{"content":",","pos":[386014,386015]},{"pos":[386091,386101],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[386162,386163]},{"pos":[386239,386249],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[386310,386311]},{"pos":[386367,386374],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[386436,386437]},{"pos":[386507,386517],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[386592,386593],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[386840,386850],"content":"MakeBinary","needQuote":true,"nodes":[{"content":"MakeBinary","pos":[0,10]}]},{"pos":[386921,386922],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[386997,387011],"content":"ExpressionType","needQuote":true,"nodes":[{"content":"ExpressionType","pos":[0,14]}]},{"content":",","pos":[387076,387077]},{"pos":[387153,387163],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[387224,387225]},{"pos":[387301,387311],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[387372,387373]},{"pos":[387429,387436],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[387498,387499]},{"pos":[387569,387579],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[387654,387655],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[388306,388395],"content":"MakeBinary(ExpressionType, Expression, Expression, Boolean, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"MakeBinary(ExpressionType, Expression, Expression, Boolean, MethodInfo, LambdaExpression)","pos":[0,89]}]},{"pos":[388929,388939],"content":"MakeBinary","needQuote":true,"nodes":[{"content":"MakeBinary","pos":[0,10]}]},{"pos":[389010,389011],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[389086,389100],"content":"ExpressionType","needQuote":true,"nodes":[{"content":"ExpressionType","pos":[0,14]}]},{"content":",","pos":[389165,389166]},{"pos":[389242,389252],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[389313,389314]},{"pos":[389390,389400],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[389461,389462]},{"pos":[389518,389525],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[389587,389588]},{"pos":[389658,389668],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[389744,389745]},{"pos":[389827,389843],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[389909,389910],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[390198,390208],"content":"MakeBinary","needQuote":true,"nodes":[{"content":"MakeBinary","pos":[0,10]}]},{"pos":[390279,390280],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[390355,390369],"content":"ExpressionType","needQuote":true,"nodes":[{"content":"ExpressionType","pos":[0,14]}]},{"content":",","pos":[390434,390435]},{"pos":[390511,390521],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[390582,390583]},{"pos":[390659,390669],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[390730,390731]},{"pos":[390787,390794],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[390856,390857]},{"pos":[390927,390937],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[391013,391014]},{"pos":[391096,391112],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[391178,391179],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[391825,391890],"content":"MakeCatchBlock(Type, ParameterExpression, Expression, Expression)","needQuote":true,"nodes":[{"content":"MakeCatchBlock(Type, ParameterExpression, Expression, Expression)","pos":[0,65]}]},{"pos":[392294,392308],"content":"MakeCatchBlock","needQuote":true,"nodes":[{"content":"MakeCatchBlock","pos":[0,14]}]},{"pos":[392383,392384],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[392432,392436],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[392495,392496]},{"pos":[392581,392600],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":",","pos":[392670,392671]},{"pos":[392747,392757],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[392818,392819]},{"pos":[392895,392905],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[392965,392966],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[393190,393204],"content":"MakeCatchBlock","needQuote":true,"nodes":[{"content":"MakeCatchBlock","pos":[0,14]}]},{"pos":[393279,393280],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[393328,393332],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[393391,393392]},{"pos":[393477,393496],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":",","pos":[393566,393567]},{"pos":[393643,393653],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[393714,393715]},{"pos":[393791,393801],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[393861,393862],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[394414,394473],"content":"MakeGoto(GotoExpressionKind, LabelTarget, Expression, Type)","needQuote":true,"nodes":[{"content":"MakeGoto(GotoExpressionKind, LabelTarget, Expression, Type)","pos":[0,59]}]},{"pos":[394865,394873],"content":"MakeGoto","needQuote":true,"nodes":[{"content":"MakeGoto","pos":[0,8]}]},{"pos":[394942,394943],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[395022,395040],"content":"GotoExpressionKind","needQuote":true,"nodes":[{"content":"GotoExpressionKind","pos":[0,18]}]},{"content":",","pos":[395109,395110]},{"pos":[395187,395198],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[395260,395261]},{"pos":[395337,395347],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[395408,395409]},{"pos":[395462,395466],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[395524,395525],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[395743,395751],"content":"MakeGoto","needQuote":true,"nodes":[{"content":"MakeGoto","pos":[0,8]}]},{"pos":[395820,395821],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[395900,395918],"content":"GotoExpressionKind","needQuote":true,"nodes":[{"content":"GotoExpressionKind","pos":[0,18]}]},{"content":",","pos":[395987,395988]},{"pos":[396065,396076],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[396138,396139]},{"pos":[396215,396225],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[396286,396287]},{"pos":[396340,396344],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[396402,396403],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[396959,397019],"content":"MakeIndex(Expression, PropertyInfo, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"MakeIndex(Expression, PropertyInfo, IEnumerable&lt;Expression&gt;)","pos":[0,60],"source":"MakeIndex(Expression, PropertyInfo, IEnumerable<Expression>)"}]},{"pos":[397724,397733],"content":"MakeIndex","needQuote":true,"nodes":[{"content":"MakeIndex","pos":[0,9]}]},{"pos":[397803,397804],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[397875,397885],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[397946,397947]},{"pos":[398019,398031],"content":"PropertyInfo","needQuote":true,"nodes":[{"content":"PropertyInfo","pos":[0,12]}]},{"content":",","pos":[398109,398110]},{"pos":[398192,398203],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[398288,398289],"content":"<","needQuote":true,"nodes":[]},{"pos":[398360,398370],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[398462,398463],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[398697,398706],"content":"MakeIndex","needQuote":true,"nodes":[{"content":"MakeIndex","pos":[0,9]}]},{"pos":[398776,398777],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[398848,398858],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[398919,398920]},{"pos":[398992,399004],"content":"PropertyInfo","needQuote":true,"nodes":[{"content":"PropertyInfo","pos":[0,12]}]},{"content":",","pos":[399082,399083]},{"pos":[399165,399176],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[399262,399265]},{"pos":[399343,399353],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[399413,399414],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[399441,399442],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[400039,400079],"content":"MakeMemberAccess(Expression, MemberInfo)","needQuote":true,"nodes":[{"content":"MakeMemberAccess(Expression, MemberInfo)","pos":[0,40]}]},{"pos":[400361,400377],"content":"MakeMemberAccess","needQuote":true,"nodes":[{"content":"MakeMemberAccess","pos":[0,16]}]},{"pos":[400454,400455],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[400526,400536],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[400597,400598]},{"pos":[400668,400678],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"pos":[400753,400754],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[400918,400934],"content":"MakeMemberAccess","needQuote":true,"nodes":[{"content":"MakeMemberAccess","pos":[0,16]}]},{"pos":[401011,401012],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[401083,401093],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[401154,401155]},{"pos":[401225,401235],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"pos":[401310,401311],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[401843,401917],"content":"MakeTry(Type, Expression, Expression, Expression, IEnumerable<CatchBlock>)","needQuote":true,"nodes":[{"content":"MakeTry(Type, Expression, Expression, Expression, IEnumerable&lt;CatchBlock&gt;)","pos":[0,74],"source":"MakeTry(Type, Expression, Expression, Expression, IEnumerable<CatchBlock>)"}]},{"pos":[402787,402794],"content":"MakeTry","needQuote":true,"nodes":[{"content":"MakeTry","pos":[0,7]}]},{"pos":[402862,402863],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[402911,402915],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[402974,402975]},{"pos":[403051,403061],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[403122,403123]},{"pos":[403199,403209],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[403270,403271]},{"pos":[403347,403357],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[403418,403419]},{"pos":[403501,403512],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[403597,403598],"content":"<","needQuote":true,"nodes":[]},{"pos":[403669,403679],"content":"CatchBlock","needQuote":true,"nodes":[{"content":"CatchBlock","pos":[0,10]}]},{"pos":[403771,403772],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[404055,404062],"content":"MakeTry","needQuote":true,"nodes":[{"content":"MakeTry","pos":[0,7]}]},{"pos":[404130,404131],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[404179,404183],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[404242,404243]},{"pos":[404319,404329],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[404390,404391]},{"pos":[404467,404477],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[404538,404539]},{"pos":[404615,404625],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[404686,404687]},{"pos":[404769,404780],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[404866,404869]},{"pos":[404947,404957],"content":"CatchBlock","needQuote":true,"nodes":[{"content":"CatchBlock","pos":[0,10]}]},{"pos":[405017,405018],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[405045,405046],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[405735,405778],"content":"MakeUnary(ExpressionType, Expression, Type)","needQuote":true,"nodes":[{"content":"MakeUnary(ExpressionType, Expression, Type)","pos":[0,43]}]},{"pos":[406091,406100],"content":"MakeUnary","needQuote":true,"nodes":[{"content":"MakeUnary","pos":[0,9]}]},{"pos":[406170,406171],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[406246,406260],"content":"ExpressionType","needQuote":true,"nodes":[{"content":"ExpressionType","pos":[0,14]}]},{"content":",","pos":[406325,406326]},{"pos":[406402,406412],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[406473,406474]},{"pos":[406527,406531],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[406589,406590],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[406769,406778],"content":"MakeUnary","needQuote":true,"nodes":[{"content":"MakeUnary","pos":[0,9]}]},{"pos":[406848,406849],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[406924,406938],"content":"ExpressionType","needQuote":true,"nodes":[{"content":"ExpressionType","pos":[0,14]}]},{"content":",","pos":[407003,407004]},{"pos":[407080,407090],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[407151,407152]},{"pos":[407205,407209],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[407267,407268],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[407743,407798],"content":"MakeUnary(ExpressionType, Expression, Type, MethodInfo)","needQuote":true,"nodes":[{"content":"MakeUnary(ExpressionType, Expression, Type, MethodInfo)","pos":[0,55]}]},{"pos":[408170,408179],"content":"MakeUnary","needQuote":true,"nodes":[{"content":"MakeUnary","pos":[0,9]}]},{"pos":[408249,408250],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[408325,408339],"content":"ExpressionType","needQuote":true,"nodes":[{"content":"ExpressionType","pos":[0,14]}]},{"content":",","pos":[408404,408405]},{"pos":[408481,408491],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[408552,408553]},{"pos":[408606,408610],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[408669,408670]},{"pos":[408740,408750],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[408825,408826],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[409034,409043],"content":"MakeUnary","needQuote":true,"nodes":[{"content":"MakeUnary","pos":[0,9]}]},{"pos":[409113,409114],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[409189,409203],"content":"ExpressionType","needQuote":true,"nodes":[{"content":"ExpressionType","pos":[0,14]}]},{"content":",","pos":[409268,409269]},{"pos":[409345,409355],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[409416,409417]},{"pos":[409470,409474],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[409533,409534]},{"pos":[409604,409614],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[409689,409690],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[410199,410249],"content":"MemberBind(MemberInfo, IEnumerable<MemberBinding>)","needQuote":true,"nodes":[{"content":"MemberBind(MemberInfo, IEnumerable&lt;MemberBinding&gt;)","pos":[0,50],"source":"MemberBind(MemberInfo, IEnumerable<MemberBinding>)"}]},{"pos":[410843,410853],"content":"MemberBind","needQuote":true,"nodes":[{"content":"MemberBind","pos":[0,10]}]},{"pos":[410924,410925],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[410990,411000],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[411076,411077]},{"pos":[411159,411170],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[411255,411256],"content":"<","needQuote":true,"nodes":[]},{"pos":[411330,411343],"content":"MemberBinding","needQuote":true,"nodes":[{"content":"MemberBinding","pos":[0,13]}]},{"pos":[411438,411439],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[411640,411650],"content":"MemberBind","needQuote":true,"nodes":[{"content":"MemberBind","pos":[0,10]}]},{"pos":[411721,411722],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[411787,411797],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[411873,411874]},{"pos":[411956,411967],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[412053,412056]},{"pos":[412137,412150],"content":"MemberBinding","needQuote":true,"nodes":[{"content":"MemberBinding","pos":[0,13]}]},{"pos":[412213,412214],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[412241,412242],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[412785,412824],"content":"MemberBind(MemberInfo, MemberBinding[])","needQuote":true,"nodes":[{"content":"MemberBind(MemberInfo, MemberBinding[])","pos":[0,39]}]},{"pos":[413287,413297],"content":"MemberBind","needQuote":true,"nodes":[{"content":"MemberBind","pos":[0,10]}]},{"pos":[413368,413369],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[413434,413444],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[413520,413521]},{"pos":[413600,413613],"content":"MemberBinding","needQuote":true,"nodes":[{"content":"MemberBinding","pos":[0,13]}]},{"content":"[]","pos":[413677,413679]},{"pos":[413710,413711],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[413874,413884],"content":"MemberBind","needQuote":true,"nodes":[{"content":"MemberBind","pos":[0,10]}]},{"pos":[413955,413956],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[414021,414031],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[414107,414108]},{"pos":[414187,414200],"content":"MemberBinding","needQuote":true,"nodes":[{"content":"MemberBinding","pos":[0,13]}]},{"pos":[414263,414265],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[414293,414294],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[414812,414862],"content":"MemberBind(MethodInfo, IEnumerable<MemberBinding>)","needQuote":true,"nodes":[{"content":"MemberBind(MethodInfo, IEnumerable&lt;MemberBinding&gt;)","pos":[0,50],"source":"MemberBind(MethodInfo, IEnumerable<MemberBinding>)"}]},{"pos":[415456,415466],"content":"MemberBind","needQuote":true,"nodes":[{"content":"MemberBind","pos":[0,10]}]},{"pos":[415537,415538],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[415603,415613],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[415689,415690]},{"pos":[415772,415783],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[415868,415869],"content":"<","needQuote":true,"nodes":[]},{"pos":[415943,415956],"content":"MemberBinding","needQuote":true,"nodes":[{"content":"MemberBinding","pos":[0,13]}]},{"pos":[416051,416052],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[416253,416263],"content":"MemberBind","needQuote":true,"nodes":[{"content":"MemberBind","pos":[0,10]}]},{"pos":[416334,416335],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[416400,416410],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[416486,416487]},{"pos":[416569,416580],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[416666,416669]},{"pos":[416750,416763],"content":"MemberBinding","needQuote":true,"nodes":[{"content":"MemberBinding","pos":[0,13]}]},{"pos":[416826,416827],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[416854,416855],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[417398,417437],"content":"MemberBind(MethodInfo, MemberBinding[])","needQuote":true,"nodes":[{"content":"MemberBind(MethodInfo, MemberBinding[])","pos":[0,39]}]},{"pos":[417900,417910],"content":"MemberBind","needQuote":true,"nodes":[{"content":"MemberBind","pos":[0,10]}]},{"pos":[417981,417982],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[418047,418057],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[418133,418134]},{"pos":[418213,418226],"content":"MemberBinding","needQuote":true,"nodes":[{"content":"MemberBinding","pos":[0,13]}]},{"content":"[]","pos":[418290,418292]},{"pos":[418323,418324],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[418487,418497],"content":"MemberBind","needQuote":true,"nodes":[{"content":"MemberBind","pos":[0,10]}]},{"pos":[418568,418569],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[418634,418644],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[418720,418721]},{"pos":[418800,418813],"content":"MemberBinding","needQuote":true,"nodes":[{"content":"MemberBinding","pos":[0,13]}]},{"pos":[418876,418878],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[418906,418907],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[419434,419487],"content":"MemberInit(NewExpression, IEnumerable<MemberBinding>)","needQuote":true,"nodes":[{"content":"MemberInit(NewExpression, IEnumerable&lt;MemberBinding&gt;)","pos":[0,53],"source":"MemberInit(NewExpression, IEnumerable<MemberBinding>)"}]},{"pos":[420111,420121],"content":"MemberInit","needQuote":true,"nodes":[{"content":"MemberInit","pos":[0,10]}]},{"pos":[420192,420193],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[420267,420280],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[420344,420345]},{"pos":[420427,420438],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[420523,420524],"content":"<","needQuote":true,"nodes":[]},{"pos":[420598,420611],"content":"MemberBinding","needQuote":true,"nodes":[{"content":"MemberBinding","pos":[0,13]}]},{"pos":[420706,420707],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[420917,420927],"content":"MemberInit","needQuote":true,"nodes":[{"content":"MemberInit","pos":[0,10]}]},{"pos":[420998,420999],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[421073,421086],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[421150,421151]},{"pos":[421233,421244],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[421330,421333]},{"pos":[421414,421427],"content":"MemberBinding","needQuote":true,"nodes":[{"content":"MemberBinding","pos":[0,13]}]},{"pos":[421490,421491],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[421518,421519],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[422087,422129],"content":"MemberInit(NewExpression, MemberBinding[])","needQuote":true,"nodes":[{"content":"MemberInit(NewExpression, MemberBinding[])","pos":[0,42]}]},{"pos":[422622,422632],"content":"MemberInit","needQuote":true,"nodes":[{"content":"MemberInit","pos":[0,10]}]},{"pos":[422703,422704],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[422778,422791],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[422855,422856]},{"pos":[422935,422948],"content":"MemberBinding","needQuote":true,"nodes":[{"content":"MemberBinding","pos":[0,13]}]},{"content":"[]","pos":[423012,423014]},{"pos":[423045,423046],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[423218,423228],"content":"MemberInit","needQuote":true,"nodes":[{"content":"MemberInit","pos":[0,10]}]},{"pos":[423299,423300],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[423374,423387],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[423451,423452]},{"pos":[423531,423544],"content":"MemberBinding","needQuote":true,"nodes":[{"content":"MemberBinding","pos":[0,13]}]},{"pos":[423607,423609],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[423637,423638],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[424131,424161],"content":"Modulo(Expression, Expression)","needQuote":true,"nodes":[{"content":"Modulo(Expression, Expression)","pos":[0,30]}]},{"pos":[424435,424441],"content":"Modulo","needQuote":true,"nodes":[{"content":"Modulo","pos":[0,6]}]},{"pos":[424508,424509],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[424580,424590],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[424651,424652]},{"pos":[424728,424738],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[424798,424799],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[424959,424965],"content":"Modulo","needQuote":true,"nodes":[{"content":"Modulo","pos":[0,6]}]},{"pos":[425032,425033],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[425104,425114],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[425175,425176]},{"pos":[425252,425262],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[425322,425323],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[425747,425789],"content":"Modulo(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"Modulo(Expression, Expression, MethodInfo)","pos":[0,42]}]},{"pos":[426122,426128],"content":"Modulo","needQuote":true,"nodes":[{"content":"Modulo","pos":[0,6]}]},{"pos":[426195,426196],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[426267,426277],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[426338,426339]},{"pos":[426415,426425],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[426486,426487]},{"pos":[426557,426567],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[426642,426643],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[426832,426838],"content":"Modulo","needQuote":true,"nodes":[{"content":"Modulo","pos":[0,6]}]},{"pos":[426905,426906],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[426977,426987],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[427048,427049]},{"pos":[427125,427135],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[427196,427197]},{"pos":[427267,427277],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[427352,427353],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[427796,427832],"content":"ModuloAssign(Expression, Expression)","needQuote":true,"nodes":[{"content":"ModuloAssign(Expression, Expression)","pos":[0,36]}]},{"pos":[428118,428130],"content":"ModuloAssign","needQuote":true,"nodes":[{"content":"ModuloAssign","pos":[0,12]}]},{"pos":[428203,428204],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[428275,428285],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[428346,428347]},{"pos":[428423,428433],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[428493,428494],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[428660,428672],"content":"ModuloAssign","needQuote":true,"nodes":[{"content":"ModuloAssign","pos":[0,12]}]},{"pos":[428745,428746],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[428817,428827],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[428888,428889]},{"pos":[428965,428975],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[429035,429036],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[429478,429526],"content":"ModuloAssign(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"ModuloAssign(Expression, Expression, MethodInfo)","pos":[0,48]}]},{"pos":[429871,429883],"content":"ModuloAssign","needQuote":true,"nodes":[{"content":"ModuloAssign","pos":[0,12]}]},{"pos":[429956,429957],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[430028,430038],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[430099,430100]},{"pos":[430176,430186],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[430247,430248]},{"pos":[430318,430328],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[430403,430404],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[430599,430611],"content":"ModuloAssign","needQuote":true,"nodes":[{"content":"ModuloAssign","pos":[0,12]}]},{"pos":[430684,430685],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[430756,430766],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[430827,430828]},{"pos":[430904,430914],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[430975,430976]},{"pos":[431046,431056],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[431131,431132],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[431656,431722],"content":"ModuloAssign(Expression, Expression, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"ModuloAssign(Expression, Expression, MethodInfo, LambdaExpression)","pos":[0,66]}]},{"pos":[432150,432162],"content":"ModuloAssign","needQuote":true,"nodes":[{"content":"ModuloAssign","pos":[0,12]}]},{"pos":[432235,432236],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[432307,432317],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[432378,432379]},{"pos":[432455,432465],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[432526,432527]},{"pos":[432597,432607],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[432683,432684]},{"pos":[432766,432782],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[432848,432849],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[433085,433097],"content":"ModuloAssign","needQuote":true,"nodes":[{"content":"ModuloAssign","pos":[0,12]}]},{"pos":[433170,433171],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[433242,433252],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[433313,433314]},{"pos":[433390,433400],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[433461,433462]},{"pos":[433532,433542],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[433618,433619]},{"pos":[433701,433717],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[433783,433784],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[434294,434326],"content":"Multiply(Expression, Expression)","needQuote":true,"nodes":[{"content":"Multiply(Expression, Expression)","pos":[0,32]}]},{"pos":[434604,434612],"content":"Multiply","needQuote":true,"nodes":[{"content":"Multiply","pos":[0,8]}]},{"pos":[434681,434682],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[434753,434763],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[434824,434825]},{"pos":[434901,434911],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[434971,434972],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[435134,435142],"content":"Multiply","needQuote":true,"nodes":[{"content":"Multiply","pos":[0,8]}]},{"pos":[435211,435212],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[435283,435293],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[435354,435355]},{"pos":[435431,435441],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[435501,435502],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[435932,435976],"content":"Multiply(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"Multiply(Expression, Expression, MethodInfo)","pos":[0,44]}]},{"pos":[436313,436321],"content":"Multiply","needQuote":true,"nodes":[{"content":"Multiply","pos":[0,8]}]},{"pos":[436390,436391],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[436462,436472],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[436533,436534]},{"pos":[436610,436620],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[436681,436682]},{"pos":[436752,436762],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[436837,436838],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[437029,437037],"content":"Multiply","needQuote":true,"nodes":[{"content":"Multiply","pos":[0,8]}]},{"pos":[437106,437107],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[437178,437188],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[437249,437250]},{"pos":[437326,437336],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[437397,437398]},{"pos":[437468,437478],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[437553,437554],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[438003,438041],"content":"MultiplyAssign(Expression, Expression)","needQuote":true,"nodes":[{"content":"MultiplyAssign(Expression, Expression)","pos":[0,38]}]},{"pos":[438331,438345],"content":"MultiplyAssign","needQuote":true,"nodes":[{"content":"MultiplyAssign","pos":[0,14]}]},{"pos":[438420,438421],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[438492,438502],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[438563,438564]},{"pos":[438640,438650],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[438710,438711],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[438879,438893],"content":"MultiplyAssign","needQuote":true,"nodes":[{"content":"MultiplyAssign","pos":[0,14]}]},{"pos":[438968,438969],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[439040,439050],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[439111,439112]},{"pos":[439188,439198],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[439258,439259],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[439707,439757],"content":"MultiplyAssign(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"MultiplyAssign(Expression, Expression, MethodInfo)","pos":[0,50]}]},{"pos":[440106,440120],"content":"MultiplyAssign","needQuote":true,"nodes":[{"content":"MultiplyAssign","pos":[0,14]}]},{"pos":[440195,440196],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[440267,440277],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[440338,440339]},{"pos":[440415,440425],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[440486,440487]},{"pos":[440557,440567],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[440642,440643],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[440840,440854],"content":"MultiplyAssign","needQuote":true,"nodes":[{"content":"MultiplyAssign","pos":[0,14]}]},{"pos":[440929,440930],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[441001,441011],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[441072,441073]},{"pos":[441149,441159],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[441220,441221]},{"pos":[441291,441301],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[441376,441377],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[441907,441975],"content":"MultiplyAssign(Expression, Expression, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"MultiplyAssign(Expression, Expression, MethodInfo, LambdaExpression)","pos":[0,68]}]},{"pos":[442407,442421],"content":"MultiplyAssign","needQuote":true,"nodes":[{"content":"MultiplyAssign","pos":[0,14]}]},{"pos":[442496,442497],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[442568,442578],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[442639,442640]},{"pos":[442716,442726],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[442787,442788]},{"pos":[442858,442868],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[442944,442945]},{"pos":[443027,443043],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[443109,443110],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[443348,443362],"content":"MultiplyAssign","needQuote":true,"nodes":[{"content":"MultiplyAssign","pos":[0,14]}]},{"pos":[443437,443438],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[443509,443519],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[443580,443581]},{"pos":[443657,443667],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[443728,443729]},{"pos":[443799,443809],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[443885,443886]},{"pos":[443968,443984],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[444050,444051],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[444578,444623],"content":"MultiplyAssignChecked(Expression, Expression)","needQuote":true,"nodes":[{"content":"MultiplyAssignChecked(Expression, Expression)","pos":[0,45]}]},{"pos":[444927,444948],"content":"MultiplyAssignChecked","needQuote":true,"nodes":[{"content":"MultiplyAssignChecked","pos":[0,21]}]},{"pos":[445030,445031],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[445102,445112],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[445173,445174]},{"pos":[445250,445260],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[445320,445321],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[445496,445517],"content":"MultiplyAssignChecked","needQuote":true,"nodes":[{"content":"MultiplyAssignChecked","pos":[0,21]}]},{"pos":[445599,445600],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[445671,445681],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[445742,445743]},{"pos":[445819,445829],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[445889,445890],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[446359,446416],"content":"MultiplyAssignChecked(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"MultiplyAssignChecked(Expression, Expression, MethodInfo)","pos":[0,57]}]},{"pos":[446779,446800],"content":"MultiplyAssignChecked","needQuote":true,"nodes":[{"content":"MultiplyAssignChecked","pos":[0,21]}]},{"pos":[446882,446883],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[446954,446964],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[447025,447026]},{"pos":[447102,447112],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[447173,447174]},{"pos":[447244,447254],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[447329,447330],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[447534,447555],"content":"MultiplyAssignChecked","needQuote":true,"nodes":[{"content":"MultiplyAssignChecked","pos":[0,21]}]},{"pos":[447637,447638],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[447709,447719],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[447780,447781]},{"pos":[447857,447867],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[447928,447929]},{"pos":[447999,448009],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[448084,448085],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[448636,448711],"content":"MultiplyAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"MultiplyAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)","pos":[0,75]}]},{"pos":[449157,449178],"content":"MultiplyAssignChecked","needQuote":true,"nodes":[{"content":"MultiplyAssignChecked","pos":[0,21]}]},{"pos":[449260,449261],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[449332,449342],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[449403,449404]},{"pos":[449480,449490],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[449551,449552]},{"pos":[449622,449632],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[449708,449709]},{"pos":[449791,449807],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[449873,449874],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[450119,450140],"content":"MultiplyAssignChecked","needQuote":true,"nodes":[{"content":"MultiplyAssignChecked","pos":[0,21]}]},{"pos":[450222,450223],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[450294,450304],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[450365,450366]},{"pos":[450442,450452],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[450513,450514]},{"pos":[450584,450594],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[450670,450671]},{"pos":[450753,450769],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[450835,450836],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[451371,451410],"content":"MultiplyChecked(Expression, Expression)","needQuote":true,"nodes":[{"content":"MultiplyChecked(Expression, Expression)","pos":[0,39]}]},{"pos":[451702,451717],"content":"MultiplyChecked","needQuote":true,"nodes":[{"content":"MultiplyChecked","pos":[0,15]}]},{"pos":[451793,451794],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[451865,451875],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[451936,451937]},{"pos":[452013,452023],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[452083,452084],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[452253,452268],"content":"MultiplyChecked","needQuote":true,"nodes":[{"content":"MultiplyChecked","pos":[0,15]}]},{"pos":[452344,452345],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[452416,452426],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[452487,452488]},{"pos":[452564,452574],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[452634,452635],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[453086,453137],"content":"MultiplyChecked(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"MultiplyChecked(Expression, Expression, MethodInfo)","pos":[0,51]}]},{"pos":[453488,453503],"content":"MultiplyChecked","needQuote":true,"nodes":[{"content":"MultiplyChecked","pos":[0,15]}]},{"pos":[453579,453580],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[453651,453661],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[453722,453723]},{"pos":[453799,453809],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[453870,453871]},{"pos":[453941,453951],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[454026,454027],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[454225,454240],"content":"MultiplyChecked","needQuote":true,"nodes":[{"content":"MultiplyChecked","pos":[0,15]}]},{"pos":[454316,454317],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[454388,454398],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[454459,454460]},{"pos":[454536,454546],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[454607,454608]},{"pos":[454678,454688],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[454763,454764],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[455184,455202],"content":"Negate(Expression)","needQuote":true,"nodes":[{"content":"Negate(Expression)","pos":[0,18]}]},{"pos":[455405,455411],"content":"Negate","needQuote":true,"nodes":[{"content":"Negate","pos":[0,6]}]},{"pos":[455478,455479],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[455550,455560],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[455620,455621],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[455746,455752],"content":"Negate","needQuote":true,"nodes":[{"content":"Negate","pos":[0,6]}]},{"pos":[455819,455820],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[455891,455901],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[455961,455962],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[456304,456334],"content":"Negate(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"Negate(Expression, MethodInfo)","pos":[0,30]}]},{"pos":[456596,456602],"content":"Negate","needQuote":true,"nodes":[{"content":"Negate","pos":[0,6]}]},{"pos":[456669,456670],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[456741,456751],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[456812,456813]},{"pos":[456883,456893],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[456968,456969],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[457123,457129],"content":"Negate","needQuote":true,"nodes":[{"content":"Negate","pos":[0,6]}]},{"pos":[457196,457197],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[457268,457278],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[457339,457340]},{"pos":[457410,457420],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[457495,457496],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[457858,457883],"content":"NegateChecked(Expression)","needQuote":true,"nodes":[{"content":"NegateChecked(Expression)","pos":[0,25]}]},{"pos":[458100,458113],"content":"NegateChecked","needQuote":true,"nodes":[{"content":"NegateChecked","pos":[0,13]}]},{"pos":[458187,458188],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[458259,458269],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[458329,458330],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[458462,458475],"content":"NegateChecked","needQuote":true,"nodes":[{"content":"NegateChecked","pos":[0,13]}]},{"pos":[458549,458550],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[458621,458631],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[458691,458692],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[459055,459092],"content":"NegateChecked(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"NegateChecked(Expression, MethodInfo)","pos":[0,37]}]},{"pos":[459368,459381],"content":"NegateChecked","needQuote":true,"nodes":[{"content":"NegateChecked","pos":[0,13]}]},{"pos":[459455,459456],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[459527,459537],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[459598,459599]},{"pos":[459669,459679],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[459754,459755],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[459916,459929],"content":"NegateChecked","needQuote":true,"nodes":[{"content":"NegateChecked","pos":[0,13]}]},{"pos":[460003,460004],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[460075,460085],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[460146,460147]},{"pos":[460217,460227],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[460302,460303],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[460667,460687],"content":"New(ConstructorInfo)","needQuote":true,"nodes":[{"content":"New(ConstructorInfo)","pos":[0,20]}]},{"pos":[460882,460885],"content":"New","needQuote":true,"nodes":[{"content":"New","pos":[0,3]}]},{"pos":[460949,460950],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[461020,461035],"content":"ConstructorInfo","needQuote":true,"nodes":[{"content":"ConstructorInfo","pos":[0,15]}]},{"pos":[461115,461116],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[461237,461240],"content":"New","needQuote":true,"nodes":[{"content":"New","pos":[0,3]}]},{"pos":[461304,461305],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[461375,461390],"content":"ConstructorInfo","needQuote":true,"nodes":[{"content":"ConstructorInfo","pos":[0,15]}]},{"pos":[461470,461471],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[461853,461898],"content":"New(ConstructorInfo, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"New(ConstructorInfo, IEnumerable&lt;Expression&gt;)","pos":[0,45],"source":"New(ConstructorInfo, IEnumerable<Expression>)"}]},{"pos":[462472,462475],"content":"New","needQuote":true,"nodes":[{"content":"New","pos":[0,3]}]},{"pos":[462539,462540],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[462610,462625],"content":"ConstructorInfo","needQuote":true,"nodes":[{"content":"ConstructorInfo","pos":[0,15]}]},{"content":",","pos":[462706,462707]},{"pos":[462789,462800],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[462885,462886],"content":"<","needQuote":true,"nodes":[]},{"pos":[462957,462967],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[463059,463060],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[463256,463259],"content":"New","needQuote":true,"nodes":[{"content":"New","pos":[0,3]}]},{"pos":[463323,463324],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[463394,463409],"content":"ConstructorInfo","needQuote":true,"nodes":[{"content":"ConstructorInfo","pos":[0,15]}]},{"content":",","pos":[463490,463491]},{"pos":[463573,463584],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[463670,463673]},{"pos":[463751,463761],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[463821,463822],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[463849,463850],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[464480,464550],"content":"New(ConstructorInfo, IEnumerable<Expression>, IEnumerable<MemberInfo>)","needQuote":true,"nodes":[{"content":"New(ConstructorInfo, IEnumerable&lt;Expression&gt;, IEnumerable&lt;MemberInfo&gt;)","pos":[0,70],"source":"New(ConstructorInfo, IEnumerable<Expression>, IEnumerable<MemberInfo>)"}]},{"pos":[465364,465367],"content":"New","needQuote":true,"nodes":[{"content":"New","pos":[0,3]}]},{"pos":[465431,465432],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[465502,465517],"content":"ConstructorInfo","needQuote":true,"nodes":[{"content":"ConstructorInfo","pos":[0,15]}]},{"content":",","pos":[465598,465599]},{"pos":[465681,465692],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[465777,465778],"content":"<","needQuote":true,"nodes":[]},{"pos":[465849,465859],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[465952,465953]},{"pos":[466035,466046],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[466131,466132],"content":"<","needQuote":true,"nodes":[]},{"pos":[466197,466207],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"pos":[466314,466315],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[466580,466583],"content":"New","needQuote":true,"nodes":[{"content":"New","pos":[0,3]}]},{"pos":[466647,466648],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[466718,466733],"content":"ConstructorInfo","needQuote":true,"nodes":[{"content":"ConstructorInfo","pos":[0,15]}]},{"content":",","pos":[466814,466815]},{"pos":[466897,466908],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[466994,466997]},{"pos":[467075,467085],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[467145,467146],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[467174,467175]},{"pos":[467257,467268],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[467354,467357]},{"pos":[467429,467439],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"pos":[467514,467515],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[467542,467543],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[468257,468316],"content":"New(ConstructorInfo, IEnumerable<Expression>, MemberInfo[])","needQuote":true,"nodes":[{"content":"New(ConstructorInfo, IEnumerable&lt;Expression&gt;, MemberInfo[])","pos":[0,59],"source":"New(ConstructorInfo, IEnumerable<Expression>, MemberInfo[])"}]},{"pos":[468999,469002],"content":"New","needQuote":true,"nodes":[{"content":"New","pos":[0,3]}]},{"pos":[469066,469067],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[469137,469152],"content":"ConstructorInfo","needQuote":true,"nodes":[{"content":"ConstructorInfo","pos":[0,15]}]},{"content":",","pos":[469233,469234]},{"pos":[469316,469327],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[469412,469413],"content":"<","needQuote":true,"nodes":[]},{"pos":[469484,469494],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[469587,469588]},{"pos":[469658,469668],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":"[]","pos":[469744,469746]},{"pos":[469777,469778],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[470005,470008],"content":"New","needQuote":true,"nodes":[{"content":"New","pos":[0,3]}]},{"pos":[470072,470073],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[470143,470158],"content":"ConstructorInfo","needQuote":true,"nodes":[{"content":"ConstructorInfo","pos":[0,15]}]},{"content":",","pos":[470239,470240]},{"pos":[470322,470333],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[470419,470422]},{"pos":[470500,470510],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[470570,470571],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[470599,470600]},{"pos":[470670,470680],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"pos":[470755,470757],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[470785,470786],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[471368,471402],"content":"New(ConstructorInfo, Expression[])","needQuote":true,"nodes":[{"content":"New(ConstructorInfo, Expression[])","pos":[0,34]}]},{"pos":[471845,471848],"content":"New","needQuote":true,"nodes":[{"content":"New","pos":[0,3]}]},{"pos":[471912,471913],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[471983,471998],"content":"ConstructorInfo","needQuote":true,"nodes":[{"content":"ConstructorInfo","pos":[0,15]}]},{"content":",","pos":[472079,472080]},{"pos":[472156,472166],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[472227,472229]},{"pos":[472260,472261],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[472419,472422],"content":"New","needQuote":true,"nodes":[{"content":"New","pos":[0,3]}]},{"pos":[472486,472487],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[472557,472572],"content":"ConstructorInfo","needQuote":true,"nodes":[{"content":"ConstructorInfo","pos":[0,15]}]},{"content":",","pos":[472653,472654]},{"pos":[472730,472740],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[472800,472802],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[472830,472831],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[473232,473241],"content":"New(Type)","needQuote":true,"nodes":[{"content":"New(Type)","pos":[0,9]}]},{"pos":[473392,473395],"content":"New","needQuote":true,"nodes":[{"content":"New","pos":[0,3]}]},{"pos":[473459,473460],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[473508,473512],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[473570,473571],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[473670,473673],"content":"New","needQuote":true,"nodes":[{"content":"New","pos":[0,3]}]},{"pos":[473737,473738],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[473786,473790],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[473848,473849],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[474187,474232],"content":"NewArrayBounds(Type, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"NewArrayBounds(Type, IEnumerable&lt;Expression&gt;)","pos":[0,45],"source":"NewArrayBounds(Type, IEnumerable<Expression>)"}]},{"pos":[474773,474787],"content":"NewArrayBounds","needQuote":true,"nodes":[{"content":"NewArrayBounds","pos":[0,14]}]},{"pos":[474862,474863],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[474911,474915],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[474974,474975]},{"pos":[475057,475068],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[475153,475154],"content":"<","needQuote":true,"nodes":[]},{"pos":[475225,475235],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[475327,475328],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[475513,475527],"content":"NewArrayBounds","needQuote":true,"nodes":[{"content":"NewArrayBounds","pos":[0,14]}]},{"pos":[475602,475603],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[475651,475655],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[475714,475715]},{"pos":[475797,475808],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[475894,475897]},{"pos":[475975,475985],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[476045,476046],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[476073,476074],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[476575,476609],"content":"NewArrayBounds(Type, Expression[])","needQuote":true,"nodes":[{"content":"NewArrayBounds(Type, Expression[])","pos":[0,34]}]},{"pos":[477019,477033],"content":"NewArrayBounds","needQuote":true,"nodes":[{"content":"NewArrayBounds","pos":[0,14]}]},{"pos":[477108,477109],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[477157,477161],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[477220,477221]},{"pos":[477297,477307],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[477368,477370]},{"pos":[477401,477402],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[477549,477563],"content":"NewArrayBounds","needQuote":true,"nodes":[{"content":"NewArrayBounds","pos":[0,14]}]},{"pos":[477638,477639],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[477687,477691],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[477750,477751]},{"pos":[477827,477837],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[477897,477899],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[477927,477928],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[478402,478445],"content":"NewArrayInit(Type, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"NewArrayInit(Type, IEnumerable&lt;Expression&gt;)","pos":[0,43],"source":"NewArrayInit(Type, IEnumerable<Expression>)"}]},{"pos":[478978,478990],"content":"NewArrayInit","needQuote":true,"nodes":[{"content":"NewArrayInit","pos":[0,12]}]},{"pos":[479063,479064],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[479112,479116],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[479175,479176]},{"pos":[479258,479269],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[479354,479355],"content":"<","needQuote":true,"nodes":[]},{"pos":[479426,479436],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[479528,479529],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[479712,479724],"content":"NewArrayInit","needQuote":true,"nodes":[{"content":"NewArrayInit","pos":[0,12]}]},{"pos":[479797,479798],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[479846,479850],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[479909,479910]},{"pos":[479992,480003],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[480089,480092]},{"pos":[480170,480180],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[480240,480241],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[480268,480269],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[480762,480794],"content":"NewArrayInit(Type, Expression[])","needQuote":true,"nodes":[{"content":"NewArrayInit(Type, Expression[])","pos":[0,32]}]},{"pos":[481196,481208],"content":"NewArrayInit","needQuote":true,"nodes":[{"content":"NewArrayInit","pos":[0,12]}]},{"pos":[481281,481282],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[481330,481334],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[481393,481394]},{"pos":[481470,481480],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[481541,481543]},{"pos":[481574,481575],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[481720,481732],"content":"NewArrayInit","needQuote":true,"nodes":[{"content":"NewArrayInit","pos":[0,12]}]},{"pos":[481805,481806],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[481854,481858],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[481917,481918]},{"pos":[481994,482004],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[482064,482066],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[482094,482095],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[482503,482518],"content":"Not(Expression)","needQuote":true,"nodes":[{"content":"Not(Expression)","pos":[0,15]}]},{"pos":[482715,482718],"content":"Not","needQuote":true,"nodes":[{"content":"Not","pos":[0,3]}]},{"pos":[482782,482783],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[482854,482864],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[482924,482925],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[483047,483050],"content":"Not","needQuote":true,"nodes":[{"content":"Not","pos":[0,3]}]},{"pos":[483114,483115],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[483186,483196],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[483256,483257],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[483590,483617],"content":"Not(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"Not(Expression, MethodInfo)","pos":[0,27]}]},{"pos":[483873,483876],"content":"Not","needQuote":true,"nodes":[{"content":"Not","pos":[0,3]}]},{"pos":[483940,483941],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[484012,484022],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[484083,484084]},{"pos":[484154,484164],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[484239,484240],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[484391,484394],"content":"Not","needQuote":true,"nodes":[{"content":"Not","pos":[0,3]}]},{"pos":[484458,484459],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[484530,484540],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[484601,484602]},{"pos":[484672,484682],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[484757,484758],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[485144,485176],"content":"NotEqual(Expression, Expression)","needQuote":true,"nodes":[{"content":"NotEqual(Expression, Expression)","pos":[0,32]}]},{"pos":[485454,485462],"content":"NotEqual","needQuote":true,"nodes":[{"content":"NotEqual","pos":[0,8]}]},{"pos":[485531,485532],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[485603,485613],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[485674,485675]},{"pos":[485751,485761],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[485821,485822],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[485984,485992],"content":"NotEqual","needQuote":true,"nodes":[{"content":"NotEqual","pos":[0,8]}]},{"pos":[486061,486062],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[486133,486143],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[486204,486205]},{"pos":[486281,486291],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[486351,486352],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[486797,486850],"content":"NotEqual(Expression, Expression, Boolean, MethodInfo)","needQuote":true,"nodes":[{"content":"NotEqual(Expression, Expression, Boolean, MethodInfo)","pos":[0,53]}]},{"pos":[487218,487226],"content":"NotEqual","needQuote":true,"nodes":[{"content":"NotEqual","pos":[0,8]}]},{"pos":[487295,487296],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[487367,487377],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[487438,487439]},{"pos":[487515,487525],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[487586,487587]},{"pos":[487643,487650],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[487712,487713]},{"pos":[487783,487793],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[487868,487869],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[488075,488083],"content":"NotEqual","needQuote":true,"nodes":[{"content":"NotEqual","pos":[0,8]}]},{"pos":[488152,488153],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[488224,488234],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[488295,488296]},{"pos":[488372,488382],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[488443,488444]},{"pos":[488500,488507],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[488569,488570]},{"pos":[488640,488650],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[488725,488726],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[489164,489190],"content":"OnesComplement(Expression)","needQuote":true,"nodes":[{"content":"OnesComplement(Expression)","pos":[0,26]}]},{"pos":[489409,489423],"content":"OnesComplement","needQuote":true,"nodes":[{"content":"OnesComplement","pos":[0,14]}]},{"pos":[489498,489499],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[489570,489580],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[489640,489641],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[489774,489788],"content":"OnesComplement","needQuote":true,"nodes":[{"content":"OnesComplement","pos":[0,14]}]},{"pos":[489863,489864],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[489935,489945],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[490005,490006],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[490372,490410],"content":"OnesComplement(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"OnesComplement(Expression, MethodInfo)","pos":[0,38]}]},{"pos":[490688,490702],"content":"OnesComplement","needQuote":true,"nodes":[{"content":"OnesComplement","pos":[0,14]}]},{"pos":[490777,490778],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[490849,490859],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[490920,490921]},{"pos":[490991,491001],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[491076,491077],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[491239,491253],"content":"OnesComplement","needQuote":true,"nodes":[{"content":"OnesComplement","pos":[0,14]}]},{"pos":[491328,491329],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[491400,491410],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[491471,491472]},{"pos":[491542,491552],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[491627,491628],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[492030,492056],"content":"Or(Expression, Expression)","needQuote":true,"nodes":[{"content":"Or(Expression, Expression)","pos":[0,26]}]},{"pos":[492322,492324],"content":"Or","needQuote":true,"nodes":[{"content":"Or","pos":[0,2]}]},{"pos":[492387,492388],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[492459,492469],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[492530,492531]},{"pos":[492607,492617],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[492677,492678],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[492834,492836],"content":"Or","needQuote":true,"nodes":[{"content":"Or","pos":[0,2]}]},{"pos":[492899,492900],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[492971,492981],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[493042,493043]},{"pos":[493119,493129],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[493189,493190],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[493602,493640],"content":"Or(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"Or(Expression, Expression, MethodInfo)","pos":[0,38]}]},{"pos":[493965,493967],"content":"Or","needQuote":true,"nodes":[{"content":"Or","pos":[0,2]}]},{"pos":[494030,494031],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[494102,494112],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[494173,494174]},{"pos":[494250,494260],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[494321,494322]},{"pos":[494392,494402],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[494477,494478],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[494663,494665],"content":"Or","needQuote":true,"nodes":[{"content":"Or","pos":[0,2]}]},{"pos":[494728,494729],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[494800,494810],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[494871,494872]},{"pos":[494948,494958],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[495019,495020]},{"pos":[495090,495100],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[495175,495176],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[495607,495639],"content":"OrAssign(Expression, Expression)","needQuote":true,"nodes":[{"content":"OrAssign(Expression, Expression)","pos":[0,32]}]},{"pos":[495917,495925],"content":"OrAssign","needQuote":true,"nodes":[{"content":"OrAssign","pos":[0,8]}]},{"pos":[495994,495995],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[496066,496076],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[496137,496138]},{"pos":[496214,496224],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[496284,496285],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[496447,496455],"content":"OrAssign","needQuote":true,"nodes":[{"content":"OrAssign","pos":[0,8]}]},{"pos":[496524,496525],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[496596,496606],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[496667,496668]},{"pos":[496744,496754],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[496814,496815],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[497245,497289],"content":"OrAssign(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"OrAssign(Expression, Expression, MethodInfo)","pos":[0,44]}]},{"pos":[497626,497634],"content":"OrAssign","needQuote":true,"nodes":[{"content":"OrAssign","pos":[0,8]}]},{"pos":[497703,497704],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[497775,497785],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[497846,497847]},{"pos":[497923,497933],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[497994,497995]},{"pos":[498065,498075],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[498150,498151],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[498342,498350],"content":"OrAssign","needQuote":true,"nodes":[{"content":"OrAssign","pos":[0,8]}]},{"pos":[498419,498420],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[498491,498501],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[498562,498563]},{"pos":[498639,498649],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[498710,498711]},{"pos":[498781,498791],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[498866,498867],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[499379,499441],"content":"OrAssign(Expression, Expression, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"OrAssign(Expression, Expression, MethodInfo, LambdaExpression)","pos":[0,62]}]},{"pos":[499861,499869],"content":"OrAssign","needQuote":true,"nodes":[{"content":"OrAssign","pos":[0,8]}]},{"pos":[499938,499939],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[500010,500020],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[500081,500082]},{"pos":[500158,500168],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[500229,500230]},{"pos":[500300,500310],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[500386,500387]},{"pos":[500469,500485],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[500551,500552],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[500784,500792],"content":"OrAssign","needQuote":true,"nodes":[{"content":"OrAssign","pos":[0,8]}]},{"pos":[500861,500862],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[500933,500943],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[501004,501005]},{"pos":[501081,501091],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[501152,501153]},{"pos":[501223,501233],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[501309,501310]},{"pos":[501392,501408],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[501474,501475],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[501975,502005],"content":"OrElse(Expression, Expression)","needQuote":true,"nodes":[{"content":"OrElse(Expression, Expression)","pos":[0,30]}]},{"pos":[502279,502285],"content":"OrElse","needQuote":true,"nodes":[{"content":"OrElse","pos":[0,6]}]},{"pos":[502352,502353],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[502424,502434],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[502495,502496]},{"pos":[502572,502582],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[502642,502643],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[502803,502809],"content":"OrElse","needQuote":true,"nodes":[{"content":"OrElse","pos":[0,6]}]},{"pos":[502876,502877],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[502948,502958],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[503019,503020]},{"pos":[503096,503106],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[503166,503167],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[503591,503633],"content":"OrElse(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"OrElse(Expression, Expression, MethodInfo)","pos":[0,42]}]},{"pos":[503966,503972],"content":"OrElse","needQuote":true,"nodes":[{"content":"OrElse","pos":[0,6]}]},{"pos":[504039,504040],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[504111,504121],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[504182,504183]},{"pos":[504259,504269],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[504330,504331]},{"pos":[504401,504411],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[504486,504487],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[504676,504682],"content":"OrElse","needQuote":true,"nodes":[{"content":"OrElse","pos":[0,6]}]},{"pos":[504749,504750],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[504821,504831],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[504892,504893]},{"pos":[504969,504979],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[505040,505041]},{"pos":[505111,505121],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[505196,505197],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[505578,505593],"content":"Parameter(Type)","needQuote":true,"nodes":[{"content":"Parameter(Type)","pos":[0,15]}]},{"pos":[505756,505765],"content":"Parameter","needQuote":true,"nodes":[{"content":"Parameter","pos":[0,9]}]},{"pos":[505835,505836],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[505884,505888],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[505946,505947],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[506052,506061],"content":"Parameter","needQuote":true,"nodes":[{"content":"Parameter","pos":[0,9]}]},{"pos":[506131,506132],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[506180,506184],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[506242,506243],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[506527,506550],"content":"Parameter(Type, String)","needQuote":true,"nodes":[{"content":"Parameter(Type, String)","pos":[0,23]}]},{"pos":[506742,506751],"content":"Parameter","needQuote":true,"nodes":[{"content":"Parameter","pos":[0,9]}]},{"pos":[506821,506822],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[506870,506874],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[506933,506934]},{"pos":[506989,506995],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[507055,507056],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[507175,507184],"content":"Parameter","needQuote":true,"nodes":[{"content":"Parameter","pos":[0,9]}]},{"pos":[507254,507255],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[507303,507307],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[507366,507367]},{"pos":[507422,507428],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[507488,507489],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[507815,507846],"content":"PostDecrementAssign(Expression)","needQuote":true,"nodes":[{"content":"PostDecrementAssign(Expression)","pos":[0,31]}]},{"pos":[508075,508094],"content":"PostDecrementAssign","needQuote":true,"nodes":[{"content":"PostDecrementAssign","pos":[0,19]}]},{"pos":[508174,508175],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[508246,508256],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[508316,508317],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[508455,508474],"content":"PostDecrementAssign","needQuote":true,"nodes":[{"content":"PostDecrementAssign","pos":[0,19]}]},{"pos":[508554,508555],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[508626,508636],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[508696,508697],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[509078,509121],"content":"PostDecrementAssign(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"PostDecrementAssign(Expression, MethodInfo)","pos":[0,43]}]},{"pos":[509409,509428],"content":"PostDecrementAssign","needQuote":true,"nodes":[{"content":"PostDecrementAssign","pos":[0,19]}]},{"pos":[509508,509509],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[509580,509590],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[509651,509652]},{"pos":[509722,509732],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[509807,509808],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[509975,509994],"content":"PostDecrementAssign","needQuote":true,"nodes":[{"content":"PostDecrementAssign","pos":[0,19]}]},{"pos":[510074,510075],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[510146,510156],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[510217,510218]},{"pos":[510288,510298],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[510373,510374],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[510768,510799],"content":"PostIncrementAssign(Expression)","needQuote":true,"nodes":[{"content":"PostIncrementAssign(Expression)","pos":[0,31]}]},{"pos":[511028,511047],"content":"PostIncrementAssign","needQuote":true,"nodes":[{"content":"PostIncrementAssign","pos":[0,19]}]},{"pos":[511127,511128],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[511199,511209],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[511269,511270],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[511408,511427],"content":"PostIncrementAssign","needQuote":true,"nodes":[{"content":"PostIncrementAssign","pos":[0,19]}]},{"pos":[511507,511508],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[511579,511589],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[511649,511650],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[512031,512074],"content":"PostIncrementAssign(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"PostIncrementAssign(Expression, MethodInfo)","pos":[0,43]}]},{"pos":[512362,512381],"content":"PostIncrementAssign","needQuote":true,"nodes":[{"content":"PostIncrementAssign","pos":[0,19]}]},{"pos":[512461,512462],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[512533,512543],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[512604,512605]},{"pos":[512675,512685],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[512760,512761],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[512928,512947],"content":"PostIncrementAssign","needQuote":true,"nodes":[{"content":"PostIncrementAssign","pos":[0,19]}]},{"pos":[513027,513028],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[513099,513109],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[513170,513171]},{"pos":[513241,513251],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[513326,513327],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[513742,513771],"content":"Power(Expression, Expression)","needQuote":true,"nodes":[{"content":"Power(Expression, Expression)","pos":[0,29]}]},{"pos":[514043,514048],"content":"Power","needQuote":true,"nodes":[{"content":"Power","pos":[0,5]}]},{"pos":[514114,514115],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[514186,514196],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[514257,514258]},{"pos":[514334,514344],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[514404,514405],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[514564,514569],"content":"Power","needQuote":true,"nodes":[{"content":"Power","pos":[0,5]}]},{"pos":[514635,514636],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[514707,514717],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[514778,514779]},{"pos":[514855,514865],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[514925,514926],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[515347,515388],"content":"Power(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"Power(Expression, Expression, MethodInfo)","pos":[0,41]}]},{"pos":[515719,515724],"content":"Power","needQuote":true,"nodes":[{"content":"Power","pos":[0,5]}]},{"pos":[515790,515791],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[515862,515872],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[515933,515934]},{"pos":[516010,516020],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[516081,516082]},{"pos":[516152,516162],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[516237,516238],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[516426,516431],"content":"Power","needQuote":true,"nodes":[{"content":"Power","pos":[0,5]}]},{"pos":[516497,516498],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[516569,516579],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[516640,516641]},{"pos":[516717,516727],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[516788,516789]},{"pos":[516859,516869],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[516944,516945],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[517385,517420],"content":"PowerAssign(Expression, Expression)","needQuote":true,"nodes":[{"content":"PowerAssign(Expression, Expression)","pos":[0,35]}]},{"pos":[517704,517715],"content":"PowerAssign","needQuote":true,"nodes":[{"content":"PowerAssign","pos":[0,11]}]},{"pos":[517787,517788],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[517859,517869],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[517930,517931]},{"pos":[518007,518017],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[518077,518078],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[518243,518254],"content":"PowerAssign","needQuote":true,"nodes":[{"content":"PowerAssign","pos":[0,11]}]},{"pos":[518326,518327],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[518398,518408],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[518469,518470]},{"pos":[518546,518556],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[518616,518617],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[519056,519103],"content":"PowerAssign(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"PowerAssign(Expression, Expression, MethodInfo)","pos":[0,47]}]},{"pos":[519446,519457],"content":"PowerAssign","needQuote":true,"nodes":[{"content":"PowerAssign","pos":[0,11]}]},{"pos":[519529,519530],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[519601,519611],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[519672,519673]},{"pos":[519749,519759],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[519820,519821]},{"pos":[519891,519901],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[519976,519977],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[520171,520182],"content":"PowerAssign","needQuote":true,"nodes":[{"content":"PowerAssign","pos":[0,11]}]},{"pos":[520254,520255],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[520326,520336],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[520397,520398]},{"pos":[520474,520484],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[520545,520546]},{"pos":[520616,520626],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[520701,520702],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[521223,521288],"content":"PowerAssign(Expression, Expression, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"PowerAssign(Expression, Expression, MethodInfo, LambdaExpression)","pos":[0,65]}]},{"pos":[521714,521725],"content":"PowerAssign","needQuote":true,"nodes":[{"content":"PowerAssign","pos":[0,11]}]},{"pos":[521797,521798],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[521869,521879],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[521940,521941]},{"pos":[522017,522027],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[522088,522089]},{"pos":[522159,522169],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[522245,522246]},{"pos":[522328,522344],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[522410,522411],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[522646,522657],"content":"PowerAssign","needQuote":true,"nodes":[{"content":"PowerAssign","pos":[0,11]}]},{"pos":[522729,522730],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[522801,522811],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[522872,522873]},{"pos":[522949,522959],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[523020,523021]},{"pos":[523091,523101],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[523177,523178]},{"pos":[523260,523276],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[523342,523343],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[523826,523856],"content":"PreDecrementAssign(Expression)","needQuote":true,"nodes":[{"content":"PreDecrementAssign(Expression)","pos":[0,30]}]},{"pos":[524083,524101],"content":"PreDecrementAssign","needQuote":true,"nodes":[{"content":"PreDecrementAssign","pos":[0,18]}]},{"pos":[524180,524181],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[524252,524262],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[524322,524323],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[524460,524478],"content":"PreDecrementAssign","needQuote":true,"nodes":[{"content":"PreDecrementAssign","pos":[0,18]}]},{"pos":[524557,524558],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[524629,524639],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[524699,524700],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[525078,525120],"content":"PreDecrementAssign(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"PreDecrementAssign(Expression, MethodInfo)","pos":[0,42]}]},{"pos":[525406,525424],"content":"PreDecrementAssign","needQuote":true,"nodes":[{"content":"PreDecrementAssign","pos":[0,18]}]},{"pos":[525503,525504],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[525575,525585],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[525646,525647]},{"pos":[525717,525727],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[525802,525803],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[525969,525987],"content":"PreDecrementAssign","needQuote":true,"nodes":[{"content":"PreDecrementAssign","pos":[0,18]}]},{"pos":[526066,526067],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[526138,526148],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[526209,526210]},{"pos":[526280,526290],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[526365,526366],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[526757,526787],"content":"PreIncrementAssign(Expression)","needQuote":true,"nodes":[{"content":"PreIncrementAssign(Expression)","pos":[0,30]}]},{"pos":[527014,527032],"content":"PreIncrementAssign","needQuote":true,"nodes":[{"content":"PreIncrementAssign","pos":[0,18]}]},{"pos":[527111,527112],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[527183,527193],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[527253,527254],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[527391,527409],"content":"PreIncrementAssign","needQuote":true,"nodes":[{"content":"PreIncrementAssign","pos":[0,18]}]},{"pos":[527488,527489],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[527560,527570],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[527630,527631],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[528009,528051],"content":"PreIncrementAssign(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"PreIncrementAssign(Expression, MethodInfo)","pos":[0,42]}]},{"pos":[528337,528355],"content":"PreIncrementAssign","needQuote":true,"nodes":[{"content":"PreIncrementAssign","pos":[0,18]}]},{"pos":[528434,528435],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[528506,528516],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[528577,528578]},{"pos":[528648,528658],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[528733,528734],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[528900,528918],"content":"PreIncrementAssign","needQuote":true,"nodes":[{"content":"PreIncrementAssign","pos":[0,18]}]},{"pos":[528997,528998],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[529069,529079],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[529140,529141]},{"pos":[529211,529221],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[529296,529297],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[529706,529738],"content":"Property(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"Property(Expression, MethodInfo)","pos":[0,32]}]},{"pos":[530004,530012],"content":"Property","needQuote":true,"nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[530081,530082],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[530153,530163],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[530224,530225]},{"pos":[530295,530305],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[530380,530381],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[530537,530545],"content":"Property","needQuote":true,"nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[530614,530615],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[530686,530696],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[530757,530758]},{"pos":[530828,530838],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[530913,530914],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[531305,531339],"content":"Property(Expression, PropertyInfo)","needQuote":true,"nodes":[{"content":"Property(Expression, PropertyInfo)","pos":[0,34]}]},{"pos":[531609,531617],"content":"Property","needQuote":true,"nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[531686,531687],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[531758,531768],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[531829,531830]},{"pos":[531902,531914],"content":"PropertyInfo","needQuote":true,"nodes":[{"content":"PropertyInfo","pos":[0,12]}]},{"pos":[531991,531992],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[532150,532158],"content":"Property","needQuote":true,"nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[532227,532228],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[532299,532309],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[532370,532371]},{"pos":[532443,532455],"content":"PropertyInfo","needQuote":true,"nodes":[{"content":"PropertyInfo","pos":[0,12]}]},{"pos":[532532,532533],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[533003,533062],"content":"Property(Expression, PropertyInfo, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"Property(Expression, PropertyInfo, IEnumerable&lt;Expression&gt;)","pos":[0,59],"source":"Property(Expression, PropertyInfo, IEnumerable<Expression>)"}]},{"pos":[533763,533771],"content":"Property","needQuote":true,"nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[533840,533841],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[533912,533922],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[533983,533984]},{"pos":[534056,534068],"content":"PropertyInfo","needQuote":true,"nodes":[{"content":"PropertyInfo","pos":[0,12]}]},{"content":",","pos":[534146,534147]},{"pos":[534229,534240],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[534325,534326],"content":"<","needQuote":true,"nodes":[]},{"pos":[534397,534407],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[534499,534500],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[534733,534741],"content":"Property","needQuote":true,"nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[534810,534811],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[534882,534892],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[534953,534954]},{"pos":[535026,535038],"content":"PropertyInfo","needQuote":true,"nodes":[{"content":"PropertyInfo","pos":[0,12]}]},{"content":",","pos":[535116,535117]},{"pos":[535199,535210],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[535296,535299]},{"pos":[535377,535387],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[535447,535448],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[535475,535476],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[536101,536149],"content":"Property(Expression, PropertyInfo, Expression[])","needQuote":true,"nodes":[{"content":"Property(Expression, PropertyInfo, Expression[])","pos":[0,48]}]},{"pos":[536719,536727],"content":"Property","needQuote":true,"nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[536796,536797],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[536868,536878],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[536939,536940]},{"pos":[537012,537024],"content":"PropertyInfo","needQuote":true,"nodes":[{"content":"PropertyInfo","pos":[0,12]}]},{"content":",","pos":[537102,537103]},{"pos":[537179,537189],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[537250,537252]},{"pos":[537283,537284],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[537479,537487],"content":"Property","needQuote":true,"nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[537556,537557],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[537628,537638],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[537699,537700]},{"pos":[537772,537784],"content":"PropertyInfo","needQuote":true,"nodes":[{"content":"PropertyInfo","pos":[0,12]}]},{"content":",","pos":[537862,537863]},{"pos":[537939,537949],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[538009,538011],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[538039,538040],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[538548,538576],"content":"Property(Expression, String)","needQuote":true,"nodes":[{"content":"Property(Expression, String)","pos":[0,28]}]},{"pos":[538812,538820],"content":"Property","needQuote":true,"nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[538889,538890],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[538961,538971],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[539032,539033]},{"pos":[539088,539094],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[539154,539155],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[539296,539304],"content":"Property","needQuote":true,"nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[539373,539374],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[539445,539455],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[539516,539517]},{"pos":[539572,539578],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[539638,539639],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[540031,540073],"content":"Property(Expression, String, Expression[])","needQuote":true,"nodes":[{"content":"Property(Expression, String, Expression[])","pos":[0,42]}]},{"pos":[540586,540594],"content":"Property","needQuote":true,"nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[540663,540664],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[540735,540745],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[540806,540807]},{"pos":[540862,540868],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[540929,540930]},{"pos":[541006,541016],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[541077,541079]},{"pos":[541110,541111],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[541289,541297],"content":"Property","needQuote":true,"nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[541366,541367],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[541438,541448],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[541509,541510]},{"pos":[541565,541571],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[541632,541633]},{"pos":[541709,541719],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[541779,541781],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[541809,541810],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[542301,542335],"content":"Property(Expression, Type, String)","needQuote":true,"nodes":[{"content":"Property(Expression, Type, String)","pos":[0,34]}]},{"pos":[542596,542604],"content":"Property","needQuote":true,"nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[542673,542674],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[542745,542755],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[542816,542817]},{"pos":[542870,542874],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[542933,542934]},{"pos":[542989,542995],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[543055,543056],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[543209,543217],"content":"Property","needQuote":true,"nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[543286,543287],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[543358,543368],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[543429,543430]},{"pos":[543483,543487],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[543546,543547]},{"pos":[543602,543608],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[543668,543669],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[544049,544084],"content":"PropertyOrField(Expression, String)","needQuote":true,"nodes":[{"content":"PropertyOrField(Expression, String)","pos":[0,35]}]},{"pos":[544334,544349],"content":"PropertyOrField","needQuote":true,"nodes":[{"content":"PropertyOrField","pos":[0,15]}]},{"pos":[544425,544426],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[544497,544507],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[544568,544569]},{"pos":[544624,544630],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[544690,544691],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[544839,544854],"content":"PropertyOrField","needQuote":true,"nodes":[{"content":"PropertyOrField","pos":[0,15]}]},{"pos":[544930,544931],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[545002,545012],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[545073,545074]},{"pos":[545129,545135],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[545195,545196],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[545549,545566],"content":"Quote(Expression)","needQuote":true,"nodes":[{"content":"Quote(Expression)","pos":[0,17]}]},{"pos":[545767,545772],"content":"Quote","needQuote":true,"nodes":[{"content":"Quote","pos":[0,5]}]},{"pos":[545838,545839],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[545910,545920],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[545980,545981],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[546105,546110],"content":"Quote","needQuote":true,"nodes":[{"content":"Quote","pos":[0,5]}]},{"pos":[546176,546177],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[546248,546258],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[546318,546319],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[546595,546603],"content":"Reduce()","needQuote":true,"nodes":[{"content":"Reduce()","pos":[0,8]}]},{"pos":[546736,546742],"content":"Reduce","needQuote":true,"nodes":[{"content":"Reduce","pos":[0,6]}]},{"pos":[546809,546810],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[546837,546838],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[546927,546933],"content":"Reduce","needQuote":true,"nodes":[{"content":"Reduce","pos":[0,6]}]},{"pos":[547000,547001],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[547028,547029],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[547269,547285],"content":"ReduceAndCheck()","needQuote":true,"nodes":[{"content":"ReduceAndCheck()","pos":[0,16]}]},{"pos":[547434,547448],"content":"ReduceAndCheck","needQuote":true,"nodes":[{"content":"ReduceAndCheck","pos":[0,14]}]},{"pos":[547523,547524],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[547551,547552],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[547649,547663],"content":"ReduceAndCheck","needQuote":true,"nodes":[{"content":"ReduceAndCheck","pos":[0,14]}]},{"pos":[547738,547739],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[547766,547767],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[548025,548043],"content":"ReduceExtensions()","needQuote":true,"nodes":[{"content":"ReduceExtensions()","pos":[0,18]}]},{"pos":[548196,548212],"content":"ReduceExtensions","needQuote":true,"nodes":[{"content":"ReduceExtensions","pos":[0,16]}]},{"pos":[548289,548290],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[548317,548318],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[548417,548433],"content":"ReduceExtensions","needQuote":true,"nodes":[{"content":"ReduceExtensions","pos":[0,16]}]},{"pos":[548510,548511],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[548538,548539],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[548870,548908],"content":"ReferenceEqual(Expression, Expression)","needQuote":true,"nodes":[{"content":"ReferenceEqual(Expression, Expression)","pos":[0,38]}]},{"pos":[549198,549212],"content":"ReferenceEqual","needQuote":true,"nodes":[{"content":"ReferenceEqual","pos":[0,14]}]},{"pos":[549287,549288],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[549359,549369],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[549430,549431]},{"pos":[549507,549517],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[549577,549578],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[549746,549760],"content":"ReferenceEqual","needQuote":true,"nodes":[{"content":"ReferenceEqual","pos":[0,14]}]},{"pos":[549835,549836],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[549907,549917],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[549978,549979]},{"pos":[550055,550065],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[550125,550126],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[550549,550590],"content":"ReferenceNotEqual(Expression, Expression)","needQuote":true,"nodes":[{"content":"ReferenceNotEqual(Expression, Expression)","pos":[0,41]}]},{"pos":[550886,550903],"content":"ReferenceNotEqual","needQuote":true,"nodes":[{"content":"ReferenceNotEqual","pos":[0,17]}]},{"pos":[550981,550982],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[551053,551063],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[551124,551125]},{"pos":[551201,551211],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[551271,551272],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[551443,551460],"content":"ReferenceNotEqual","needQuote":true,"nodes":[{"content":"ReferenceNotEqual","pos":[0,17]}]},{"pos":[551538,551539],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[551610,551620],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[551681,551682]},{"pos":[551758,551768],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[551828,551829],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[552177,552186],"content":"Rethrow()","needQuote":true,"nodes":[{"content":"Rethrow()","pos":[0,9]}]},{"pos":[552321,552328],"content":"Rethrow","needQuote":true,"nodes":[{"content":"Rethrow","pos":[0,7]}]},{"pos":[552396,552397],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[552424,552425],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[552515,552522],"content":"Rethrow","needQuote":true,"nodes":[{"content":"Rethrow","pos":[0,7]}]},{"pos":[552590,552591],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[552618,552619],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[552866,552879],"content":"Rethrow(Type)","needQuote":true,"nodes":[{"content":"Rethrow(Type)","pos":[0,13]}]},{"pos":[553038,553045],"content":"Rethrow","needQuote":true,"nodes":[{"content":"Rethrow","pos":[0,7]}]},{"pos":[553113,553114],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[553162,553166],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[553224,553225],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[553328,553335],"content":"Rethrow","needQuote":true,"nodes":[{"content":"Rethrow","pos":[0,7]}]},{"pos":[553403,553404],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[553452,553456],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[553514,553515],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[553803,553822],"content":"Return(LabelTarget)","needQuote":true,"nodes":[{"content":"Return(LabelTarget)","pos":[0,19]}]},{"pos":[554027,554033],"content":"Return","needQuote":true,"nodes":[{"content":"Return","pos":[0,6]}]},{"pos":[554100,554101],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[554173,554184],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[554245,554246],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[554372,554378],"content":"Return","needQuote":true,"nodes":[{"content":"Return","pos":[0,6]}]},{"pos":[554445,554446],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[554518,554529],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[554590,554591],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[554943,554974],"content":"Return(LabelTarget, Expression)","needQuote":true,"nodes":[{"content":"Return(LabelTarget, Expression)","pos":[0,31]}]},{"pos":[555250,555256],"content":"Return","needQuote":true,"nodes":[{"content":"Return","pos":[0,6]}]},{"pos":[555323,555324],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[555396,555407],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[555469,555470]},{"pos":[555546,555556],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[555616,555617],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[555778,555784],"content":"Return","needQuote":true,"nodes":[{"content":"Return","pos":[0,6]}]},{"pos":[555851,555852],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[555924,555935],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[555997,555998]},{"pos":[556074,556084],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[556144,556145],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[556555,556592],"content":"Return(LabelTarget, Expression, Type)","needQuote":true,"nodes":[{"content":"Return(LabelTarget, Expression, Type)","pos":[0,37]}]},{"pos":[556893,556899],"content":"Return","needQuote":true,"nodes":[{"content":"Return","pos":[0,6]}]},{"pos":[556966,556967],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[557039,557050],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[557112,557113]},{"pos":[557189,557199],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[557260,557261]},{"pos":[557314,557318],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[557376,557377],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[557550,557556],"content":"Return","needQuote":true,"nodes":[{"content":"Return","pos":[0,6]}]},{"pos":[557623,557624],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[557696,557707],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[557769,557770]},{"pos":[557846,557856],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[557917,557918]},{"pos":[557971,557975],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[558033,558034],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[558427,558452],"content":"Return(LabelTarget, Type)","needQuote":true,"nodes":[{"content":"Return(LabelTarget, Type)","pos":[0,25]}]},{"pos":[558682,558688],"content":"Return","needQuote":true,"nodes":[{"content":"Return","pos":[0,6]}]},{"pos":[558755,558756],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[558828,558839],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[558901,558902]},{"pos":[558955,558959],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[559017,559018],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[559156,559162],"content":"Return","needQuote":true,"nodes":[{"content":"Return","pos":[0,6]}]},{"pos":[559229,559230],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[559302,559313],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[559375,559376]},{"pos":[559429,559433],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[559491,559492],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[559865,559899],"content":"RightShift(Expression, Expression)","needQuote":true,"nodes":[{"content":"RightShift(Expression, Expression)","pos":[0,34]}]},{"pos":[560181,560191],"content":"RightShift","needQuote":true,"nodes":[{"content":"RightShift","pos":[0,10]}]},{"pos":[560262,560263],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[560334,560344],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[560405,560406]},{"pos":[560482,560492],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[560552,560553],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[560717,560727],"content":"RightShift","needQuote":true,"nodes":[{"content":"RightShift","pos":[0,10]}]},{"pos":[560798,560799],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[560870,560880],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[560941,560942]},{"pos":[561018,561028],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[561088,561089],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[561525,561571],"content":"RightShift(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"RightShift(Expression, Expression, MethodInfo)","pos":[0,46]}]},{"pos":[561912,561922],"content":"RightShift","needQuote":true,"nodes":[{"content":"RightShift","pos":[0,10]}]},{"pos":[561993,561994],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[562065,562075],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[562136,562137]},{"pos":[562213,562223],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[562284,562285]},{"pos":[562355,562365],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[562440,562441],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[562634,562644],"content":"RightShift","needQuote":true,"nodes":[{"content":"RightShift","pos":[0,10]}]},{"pos":[562715,562716],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[562787,562797],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[562858,562859]},{"pos":[562935,562945],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[563006,563007]},{"pos":[563077,563087],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[563162,563163],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[563618,563658],"content":"RightShiftAssign(Expression, Expression)","needQuote":true,"nodes":[{"content":"RightShiftAssign(Expression, Expression)","pos":[0,40]}]},{"pos":[563952,563968],"content":"RightShiftAssign","needQuote":true,"nodes":[{"content":"RightShiftAssign","pos":[0,16]}]},{"pos":[564045,564046],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[564117,564127],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[564188,564189]},{"pos":[564265,564275],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[564335,564336],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[564506,564522],"content":"RightShiftAssign","needQuote":true,"nodes":[{"content":"RightShiftAssign","pos":[0,16]}]},{"pos":[564599,564600],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[564671,564681],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[564742,564743]},{"pos":[564819,564829],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[564889,564890],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[565344,565396],"content":"RightShiftAssign(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"RightShiftAssign(Expression, Expression, MethodInfo)","pos":[0,52]}]},{"pos":[565749,565765],"content":"RightShiftAssign","needQuote":true,"nodes":[{"content":"RightShiftAssign","pos":[0,16]}]},{"pos":[565842,565843],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[565914,565924],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[565985,565986]},{"pos":[566062,566072],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[566133,566134]},{"pos":[566204,566214],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[566289,566290],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[566489,566505],"content":"RightShiftAssign","needQuote":true,"nodes":[{"content":"RightShiftAssign","pos":[0,16]}]},{"pos":[566582,566583],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[566654,566664],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[566725,566726]},{"pos":[566802,566812],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[566873,566874]},{"pos":[566944,566954],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[567029,567030],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[567566,567636],"content":"RightShiftAssign(Expression, Expression, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"RightShiftAssign(Expression, Expression, MethodInfo, LambdaExpression)","pos":[0,70]}]},{"pos":[568072,568088],"content":"RightShiftAssign","needQuote":true,"nodes":[{"content":"RightShiftAssign","pos":[0,16]}]},{"pos":[568165,568166],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[568237,568247],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[568308,568309]},{"pos":[568385,568395],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[568456,568457]},{"pos":[568527,568537],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[568613,568614]},{"pos":[568696,568712],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[568778,568779],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[569019,569035],"content":"RightShiftAssign","needQuote":true,"nodes":[{"content":"RightShiftAssign","pos":[0,16]}]},{"pos":[569112,569113],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[569184,569194],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[569255,569256]},{"pos":[569332,569342],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[569403,569404]},{"pos":[569474,569484],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[569560,569561]},{"pos":[569643,569659],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[569725,569726],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[570265,570315],"content":"RuntimeVariables(IEnumerable<ParameterExpression>)","needQuote":true,"nodes":[{"content":"RuntimeVariables(IEnumerable&lt;ParameterExpression&gt;)","pos":[0,50],"source":"RuntimeVariables(IEnumerable<ParameterExpression>)"}]},{"pos":[570856,570872],"content":"RuntimeVariables","needQuote":true,"nodes":[{"content":"RuntimeVariables","pos":[0,16]}]},{"pos":[570949,570950],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[571027,571038],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[571123,571124],"content":"<","needQuote":true,"nodes":[]},{"pos":[571204,571223],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[571324,571325],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[571509,571525],"content":"RuntimeVariables","needQuote":true,"nodes":[{"content":"RuntimeVariables","pos":[0,16]}]},{"pos":[571602,571603],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[571680,571691],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[571777,571780]},{"pos":[571867,571886],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[571955,571956],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[571983,571984],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[572494,572533],"content":"RuntimeVariables(ParameterExpression[])","needQuote":true,"nodes":[{"content":"RuntimeVariables(ParameterExpression[])","pos":[0,39]}]},{"pos":[572943,572959],"content":"RuntimeVariables","needQuote":true,"nodes":[{"content":"RuntimeVariables","pos":[0,16]}]},{"pos":[573036,573037],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[573117,573136],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":"[]","pos":[573206,573208]},{"pos":[573239,573240],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[573386,573402],"content":"RuntimeVariables","needQuote":true,"nodes":[{"content":"RuntimeVariables","pos":[0,16]}]},{"pos":[573479,573480],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[573560,573579],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[573648,573650],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[573678,573679],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[574142,574174],"content":"Subtract(Expression, Expression)","needQuote":true,"nodes":[{"content":"Subtract(Expression, Expression)","pos":[0,32]}]},{"pos":[574452,574460],"content":"Subtract","needQuote":true,"nodes":[{"content":"Subtract","pos":[0,8]}]},{"pos":[574529,574530],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[574601,574611],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[574672,574673]},{"pos":[574749,574759],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[574819,574820],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[574982,574990],"content":"Subtract","needQuote":true,"nodes":[{"content":"Subtract","pos":[0,8]}]},{"pos":[575059,575060],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[575131,575141],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[575202,575203]},{"pos":[575279,575289],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[575349,575350],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[575780,575824],"content":"Subtract(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"Subtract(Expression, Expression, MethodInfo)","pos":[0,44]}]},{"pos":[576161,576169],"content":"Subtract","needQuote":true,"nodes":[{"content":"Subtract","pos":[0,8]}]},{"pos":[576238,576239],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[576310,576320],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[576381,576382]},{"pos":[576458,576468],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[576529,576530]},{"pos":[576600,576610],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[576685,576686],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[576877,576885],"content":"Subtract","needQuote":true,"nodes":[{"content":"Subtract","pos":[0,8]}]},{"pos":[576954,576955],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[577026,577036],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[577097,577098]},{"pos":[577174,577184],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[577245,577246]},{"pos":[577316,577326],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[577401,577402],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[577851,577889],"content":"SubtractAssign(Expression, Expression)","needQuote":true,"nodes":[{"content":"SubtractAssign(Expression, Expression)","pos":[0,38]}]},{"pos":[578179,578193],"content":"SubtractAssign","needQuote":true,"nodes":[{"content":"SubtractAssign","pos":[0,14]}]},{"pos":[578268,578269],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[578340,578350],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[578411,578412]},{"pos":[578488,578498],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[578558,578559],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[578727,578741],"content":"SubtractAssign","needQuote":true,"nodes":[{"content":"SubtractAssign","pos":[0,14]}]},{"pos":[578816,578817],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[578888,578898],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[578959,578960]},{"pos":[579036,579046],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[579106,579107],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[579555,579605],"content":"SubtractAssign(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"SubtractAssign(Expression, Expression, MethodInfo)","pos":[0,50]}]},{"pos":[579954,579968],"content":"SubtractAssign","needQuote":true,"nodes":[{"content":"SubtractAssign","pos":[0,14]}]},{"pos":[580043,580044],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[580115,580125],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[580186,580187]},{"pos":[580263,580273],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[580334,580335]},{"pos":[580405,580415],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[580490,580491],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[580688,580702],"content":"SubtractAssign","needQuote":true,"nodes":[{"content":"SubtractAssign","pos":[0,14]}]},{"pos":[580777,580778],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[580849,580859],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[580920,580921]},{"pos":[580997,581007],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[581068,581069]},{"pos":[581139,581149],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[581224,581225],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[581755,581823],"content":"SubtractAssign(Expression, Expression, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"SubtractAssign(Expression, Expression, MethodInfo, LambdaExpression)","pos":[0,68]}]},{"pos":[582255,582269],"content":"SubtractAssign","needQuote":true,"nodes":[{"content":"SubtractAssign","pos":[0,14]}]},{"pos":[582344,582345],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[582416,582426],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[582487,582488]},{"pos":[582564,582574],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[582635,582636]},{"pos":[582706,582716],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[582792,582793]},{"pos":[582875,582891],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[582957,582958],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[583196,583210],"content":"SubtractAssign","needQuote":true,"nodes":[{"content":"SubtractAssign","pos":[0,14]}]},{"pos":[583285,583286],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[583357,583367],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[583428,583429]},{"pos":[583505,583515],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[583576,583577]},{"pos":[583647,583657],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[583733,583734]},{"pos":[583816,583832],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[583898,583899],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[584426,584471],"content":"SubtractAssignChecked(Expression, Expression)","needQuote":true,"nodes":[{"content":"SubtractAssignChecked(Expression, Expression)","pos":[0,45]}]},{"pos":[584775,584796],"content":"SubtractAssignChecked","needQuote":true,"nodes":[{"content":"SubtractAssignChecked","pos":[0,21]}]},{"pos":[584878,584879],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[584950,584960],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[585021,585022]},{"pos":[585098,585108],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[585168,585169],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[585344,585365],"content":"SubtractAssignChecked","needQuote":true,"nodes":[{"content":"SubtractAssignChecked","pos":[0,21]}]},{"pos":[585447,585448],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[585519,585529],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[585590,585591]},{"pos":[585667,585677],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[585737,585738],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[586207,586264],"content":"SubtractAssignChecked(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"SubtractAssignChecked(Expression, Expression, MethodInfo)","pos":[0,57]}]},{"pos":[586627,586648],"content":"SubtractAssignChecked","needQuote":true,"nodes":[{"content":"SubtractAssignChecked","pos":[0,21]}]},{"pos":[586730,586731],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[586802,586812],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[586873,586874]},{"pos":[586950,586960],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[587021,587022]},{"pos":[587092,587102],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[587177,587178],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[587382,587403],"content":"SubtractAssignChecked","needQuote":true,"nodes":[{"content":"SubtractAssignChecked","pos":[0,21]}]},{"pos":[587485,587486],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[587557,587567],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[587628,587629]},{"pos":[587705,587715],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[587776,587777]},{"pos":[587847,587857],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[587932,587933],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[588484,588559],"content":"SubtractAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"SubtractAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)","pos":[0,75]}]},{"pos":[589005,589026],"content":"SubtractAssignChecked","needQuote":true,"nodes":[{"content":"SubtractAssignChecked","pos":[0,21]}]},{"pos":[589108,589109],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[589180,589190],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[589251,589252]},{"pos":[589328,589338],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[589399,589400]},{"pos":[589470,589480],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[589556,589557]},{"pos":[589639,589655],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[589721,589722],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[589967,589988],"content":"SubtractAssignChecked","needQuote":true,"nodes":[{"content":"SubtractAssignChecked","pos":[0,21]}]},{"pos":[590070,590071],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[590142,590152],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[590213,590214]},{"pos":[590290,590300],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[590361,590362]},{"pos":[590432,590442],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[590518,590519]},{"pos":[590601,590617],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[590683,590684],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[591219,591258],"content":"SubtractChecked(Expression, Expression)","needQuote":true,"nodes":[{"content":"SubtractChecked(Expression, Expression)","pos":[0,39]}]},{"pos":[591550,591565],"content":"SubtractChecked","needQuote":true,"nodes":[{"content":"SubtractChecked","pos":[0,15]}]},{"pos":[591641,591642],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[591713,591723],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[591784,591785]},{"pos":[591861,591871],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[591931,591932],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[592101,592116],"content":"SubtractChecked","needQuote":true,"nodes":[{"content":"SubtractChecked","pos":[0,15]}]},{"pos":[592192,592193],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[592264,592274],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[592335,592336]},{"pos":[592412,592422],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[592482,592483],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[592934,592985],"content":"SubtractChecked(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"SubtractChecked(Expression, Expression, MethodInfo)","pos":[0,51]}]},{"pos":[593336,593351],"content":"SubtractChecked","needQuote":true,"nodes":[{"content":"SubtractChecked","pos":[0,15]}]},{"pos":[593427,593428],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[593499,593509],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[593570,593571]},{"pos":[593647,593657],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[593718,593719]},{"pos":[593789,593799],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[593874,593875],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[594073,594088],"content":"SubtractChecked","needQuote":true,"nodes":[{"content":"SubtractChecked","pos":[0,15]}]},{"pos":[594164,594165],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[594236,594246],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[594307,594308]},{"pos":[594384,594394],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[594455,594456]},{"pos":[594526,594536],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[594611,594612],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[595104,595148],"content":"Switch(Expression, Expression, SwitchCase[])","needQuote":true,"nodes":[{"content":"Switch(Expression, Expression, SwitchCase[])","pos":[0,44]}]},{"pos":[595720,595726],"content":"Switch","needQuote":true,"nodes":[{"content":"Switch","pos":[0,6]}]},{"pos":[595793,595794],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[595865,595875],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[595936,595937]},{"pos":[596013,596023],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[596084,596085]},{"pos":[596161,596171],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"content":"[]","pos":[596232,596234]},{"pos":[596265,596266],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[596463,596469],"content":"Switch","needQuote":true,"nodes":[{"content":"Switch","pos":[0,6]}]},{"pos":[596536,596537],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[596608,596618],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[596679,596680]},{"pos":[596756,596766],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[596827,596828]},{"pos":[596904,596914],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"pos":[596974,596976],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[597004,597005],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[597630,597697],"content":"Switch(Expression, Expression, MethodInfo, IEnumerable<SwitchCase>)","needQuote":true,"nodes":[{"content":"Switch(Expression, Expression, MethodInfo, IEnumerable&lt;SwitchCase&gt;)","pos":[0,67],"source":"Switch(Expression, Expression, MethodInfo, IEnumerable<SwitchCase>)"}]},{"pos":[598501,598507],"content":"Switch","needQuote":true,"nodes":[{"content":"Switch","pos":[0,6]}]},{"pos":[598574,598575],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[598646,598656],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[598717,598718]},{"pos":[598794,598804],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[598865,598866]},{"pos":[598936,598946],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[599022,599023]},{"pos":[599105,599116],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[599201,599202],"content":"<","needQuote":true,"nodes":[]},{"pos":[599273,599283],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"pos":[599375,599376],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[599640,599646],"content":"Switch","needQuote":true,"nodes":[{"content":"Switch","pos":[0,6]}]},{"pos":[599713,599714],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[599785,599795],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[599856,599857]},{"pos":[599933,599943],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[600004,600005]},{"pos":[600075,600085],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[600161,600162]},{"pos":[600244,600255],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[600341,600344]},{"pos":[600422,600432],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"pos":[600492,600493],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[600520,600521],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[601224,601280],"content":"Switch(Expression, Expression, MethodInfo, SwitchCase[])","needQuote":true,"nodes":[{"content":"Switch(Expression, Expression, MethodInfo, SwitchCase[])","pos":[0,56]}]},{"pos":[601953,601959],"content":"Switch","needQuote":true,"nodes":[{"content":"Switch","pos":[0,6]}]},{"pos":[602026,602027],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[602098,602108],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[602169,602170]},{"pos":[602246,602256],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[602317,602318]},{"pos":[602388,602398],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[602474,602475]},{"pos":[602551,602561],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"content":"[]","pos":[602622,602624]},{"pos":[602655,602656],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[602882,602888],"content":"Switch","needQuote":true,"nodes":[{"content":"Switch","pos":[0,6]}]},{"pos":[602955,602956],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[603027,603037],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[603098,603099]},{"pos":[603175,603185],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[603246,603247]},{"pos":[603317,603327],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[603403,603404]},{"pos":[603480,603490],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"pos":[603550,603552],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[603580,603581],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[604158,604190],"content":"Switch(Expression, SwitchCase[])","needQuote":true,"nodes":[{"content":"Switch(Expression, SwitchCase[])","pos":[0,32]}]},{"pos":[604643,604649],"content":"Switch","needQuote":true,"nodes":[{"content":"Switch","pos":[0,6]}]},{"pos":[604716,604717],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[604788,604798],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[604859,604860]},{"pos":[604936,604946],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"content":"[]","pos":[605007,605009]},{"pos":[605040,605041],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[605203,605209],"content":"Switch","needQuote":true,"nodes":[{"content":"Switch","pos":[0,6]}]},{"pos":[605276,605277],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[605348,605358],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[605419,605420]},{"pos":[605496,605506],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"pos":[605566,605568],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[605596,605597],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[606175,606248],"content":"Switch(Type, Expression, Expression, MethodInfo, IEnumerable<SwitchCase>)","needQuote":true,"nodes":[{"content":"Switch(Type, Expression, Expression, MethodInfo, IEnumerable&lt;SwitchCase&gt;)","pos":[0,73],"source":"Switch(Type, Expression, Expression, MethodInfo, IEnumerable<SwitchCase>)"}]},{"pos":[607096,607102],"content":"Switch","needQuote":true,"nodes":[{"content":"Switch","pos":[0,6]}]},{"pos":[607169,607170],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[607218,607222],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[607281,607282]},{"pos":[607358,607368],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[607429,607430]},{"pos":[607506,607516],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[607577,607578]},{"pos":[607648,607658],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[607734,607735]},{"pos":[607817,607828],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[607913,607914],"content":"<","needQuote":true,"nodes":[]},{"pos":[607985,607995],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"pos":[608087,608088],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[608364,608370],"content":"Switch","needQuote":true,"nodes":[{"content":"Switch","pos":[0,6]}]},{"pos":[608437,608438],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[608486,608490],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[608549,608550]},{"pos":[608626,608636],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[608697,608698]},{"pos":[608774,608784],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[608845,608846]},{"pos":[608916,608926],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[609002,609003]},{"pos":[609085,609096],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[609182,609185]},{"pos":[609263,609273],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"pos":[609333,609334],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[609361,609362],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[610101,610163],"content":"Switch(Type, Expression, Expression, MethodInfo, SwitchCase[])","needQuote":true,"nodes":[{"content":"Switch(Type, Expression, Expression, MethodInfo, SwitchCase[])","pos":[0,62]}]},{"pos":[610880,610886],"content":"Switch","needQuote":true,"nodes":[{"content":"Switch","pos":[0,6]}]},{"pos":[610953,610954],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[611002,611006],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[611065,611066]},{"pos":[611142,611152],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[611213,611214]},{"pos":[611290,611300],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[611361,611362]},{"pos":[611432,611442],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[611518,611519]},{"pos":[611595,611605],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"content":"[]","pos":[611666,611668]},{"pos":[611699,611700],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[611938,611944],"content":"Switch","needQuote":true,"nodes":[{"content":"Switch","pos":[0,6]}]},{"pos":[612011,612012],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[612060,612064],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[612123,612124]},{"pos":[612200,612210],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[612271,612272]},{"pos":[612348,612358],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[612419,612420]},{"pos":[612490,612500],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[612576,612577]},{"pos":[612653,612663],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"pos":[612723,612725],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[612753,612754],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[613396,613443],"content":"SwitchCase(Expression, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"SwitchCase(Expression, IEnumerable&lt;Expression&gt;)","pos":[0,47],"source":"SwitchCase(Expression, IEnumerable<Expression>)"}]},{"pos":[614043,614053],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"pos":[614124,614125],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[614196,614206],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[614267,614268]},{"pos":[614350,614361],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[614446,614447],"content":"<","needQuote":true,"nodes":[]},{"pos":[614518,614528],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[614620,614621],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[614825,614835],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"pos":[614906,614907],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[614978,614988],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[615049,615050]},{"pos":[615132,615143],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[615229,615232]},{"pos":[615310,615320],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[615380,615381],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[615408,615409],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[615953,615989],"content":"SwitchCase(Expression, Expression[])","needQuote":true,"nodes":[{"content":"SwitchCase(Expression, Expression[])","pos":[0,36]}]},{"pos":[616458,616468],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"pos":[616539,616540],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[616611,616621],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[616682,616683]},{"pos":[616759,616769],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[616830,616832]},{"pos":[616863,616864],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[617030,617040],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"pos":[617111,617112],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[617183,617193],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[617254,617255]},{"pos":[617331,617341],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[617401,617403],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[617431,617432],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[617858,617880],"content":"SymbolDocument(String)","needQuote":true,"nodes":[{"content":"SymbolDocument(String)","pos":[0,22]}]},{"pos":[618057,618071],"content":"SymbolDocument","needQuote":true,"nodes":[{"content":"SymbolDocument","pos":[0,14]}]},{"pos":[618146,618147],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[618197,618203],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[618263,618264],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[618376,618390],"content":"SymbolDocument","needQuote":true,"nodes":[{"content":"SymbolDocument","pos":[0,14]}]},{"pos":[618465,618466],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[618516,618522],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[618582,618583],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[618886,618914],"content":"SymbolDocument(String, Guid)","needQuote":true,"nodes":[{"content":"SymbolDocument(String, Guid)","pos":[0,28]}]},{"pos":[619116,619130],"content":"SymbolDocument","needQuote":true,"nodes":[{"content":"SymbolDocument","pos":[0,14]}]},{"pos":[619205,619206],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[619256,619262],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[619323,619324]},{"pos":[619377,619381],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[619439,619440],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[619564,619578],"content":"SymbolDocument","needQuote":true,"nodes":[{"content":"SymbolDocument","pos":[0,14]}]},{"pos":[619653,619654],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[619704,619710],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[619771,619772]},{"pos":[619825,619829],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[619887,619888],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[620221,620255],"content":"SymbolDocument(String, Guid, Guid)","needQuote":true,"nodes":[{"content":"SymbolDocument(String, Guid, Guid)","pos":[0,34]}]},{"pos":[620482,620496],"content":"SymbolDocument","needQuote":true,"nodes":[{"content":"SymbolDocument","pos":[0,14]}]},{"pos":[620571,620572],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[620622,620628],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[620689,620690]},{"pos":[620743,620747],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"content":",","pos":[620806,620807]},{"pos":[620860,620864],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[620922,620923],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[621059,621073],"content":"SymbolDocument","needQuote":true,"nodes":[{"content":"SymbolDocument","pos":[0,14]}]},{"pos":[621148,621149],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[621199,621205],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[621266,621267]},{"pos":[621320,621324],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"content":",","pos":[621383,621384]},{"pos":[621437,621441],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[621499,621500],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[621863,621903],"content":"SymbolDocument(String, Guid, Guid, Guid)","needQuote":true,"nodes":[{"content":"SymbolDocument(String, Guid, Guid, Guid)","pos":[0,40]}]},{"pos":[622155,622169],"content":"SymbolDocument","needQuote":true,"nodes":[{"content":"SymbolDocument","pos":[0,14]}]},{"pos":[622244,622245],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[622295,622301],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[622362,622363]},{"pos":[622416,622420],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"content":",","pos":[622479,622480]},{"pos":[622533,622537],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"content":",","pos":[622596,622597]},{"pos":[622650,622654],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[622712,622713],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[622861,622875],"content":"SymbolDocument","needQuote":true,"nodes":[{"content":"SymbolDocument","pos":[0,14]}]},{"pos":[622950,622951],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[623001,623007],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[623068,623069]},{"pos":[623122,623126],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"content":",","pos":[623185,623186]},{"pos":[623239,623243],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"content":",","pos":[623302,623303]},{"pos":[623356,623360],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[623418,623419],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[623777,623794],"content":"Throw(Expression)","needQuote":true,"nodes":[{"content":"Throw(Expression)","pos":[0,17]}]},{"pos":[623995,624000],"content":"Throw","needQuote":true,"nodes":[{"content":"Throw","pos":[0,5]}]},{"pos":[624066,624067],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[624138,624148],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[624208,624209],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[624333,624338],"content":"Throw","needQuote":true,"nodes":[{"content":"Throw","pos":[0,5]}]},{"pos":[624404,624405],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[624476,624486],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[624546,624547],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[624869,624892],"content":"Throw(Expression, Type)","needQuote":true,"nodes":[{"content":"Throw(Expression, Type)","pos":[0,23]}]},{"pos":[625118,625123],"content":"Throw","needQuote":true,"nodes":[{"content":"Throw","pos":[0,5]}]},{"pos":[625189,625190],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[625261,625271],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[625332,625333]},{"pos":[625386,625390],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[625448,625449],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[625585,625590],"content":"Throw","needQuote":true,"nodes":[{"content":"Throw","pos":[0,5]}]},{"pos":[625656,625657],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[625728,625738],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[625799,625800]},{"pos":[625853,625857],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[625915,625916],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[626212,626222],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[626359,626367],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[626436,626437],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[626464,626465],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[626556,626564],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[626633,626634],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[626661,626662],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[626973,627007],"content":"TryCatch(Expression, CatchBlock[])","needQuote":true,"nodes":[{"content":"TryCatch(Expression, CatchBlock[])","pos":[0,34]}]},{"pos":[627468,627476],"content":"TryCatch","needQuote":true,"nodes":[{"content":"TryCatch","pos":[0,8]}]},{"pos":[627545,627546],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[627617,627627],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[627688,627689]},{"pos":[627765,627775],"content":"CatchBlock","needQuote":true,"nodes":[{"content":"CatchBlock","pos":[0,10]}]},{"content":"[]","pos":[627836,627838]},{"pos":[627869,627870],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[628034,628042],"content":"TryCatch","needQuote":true,"nodes":[{"content":"TryCatch","pos":[0,8]}]},{"pos":[628111,628112],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[628183,628193],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[628254,628255]},{"pos":[628331,628341],"content":"CatchBlock","needQuote":true,"nodes":[{"content":"CatchBlock","pos":[0,10]}]},{"pos":[628401,628403],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[628431,628432],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[628947,629000],"content":"TryCatchFinally(Expression, Expression, CatchBlock[])","needQuote":true,"nodes":[{"content":"TryCatchFinally(Expression, Expression, CatchBlock[])","pos":[0,53]}]},{"pos":[629608,629623],"content":"TryCatchFinally","needQuote":true,"nodes":[{"content":"TryCatchFinally","pos":[0,15]}]},{"pos":[629699,629700],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[629771,629781],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[629842,629843]},{"pos":[629919,629929],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[629990,629991]},{"pos":[630067,630077],"content":"CatchBlock","needQuote":true,"nodes":[{"content":"CatchBlock","pos":[0,10]}]},{"content":"[]","pos":[630138,630140]},{"pos":[630171,630172],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[630378,630393],"content":"TryCatchFinally","needQuote":true,"nodes":[{"content":"TryCatchFinally","pos":[0,15]}]},{"pos":[630469,630470],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[630541,630551],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[630612,630613]},{"pos":[630689,630699],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[630760,630761]},{"pos":[630837,630847],"content":"CatchBlock","needQuote":true,"nodes":[{"content":"CatchBlock","pos":[0,10]}]},{"pos":[630907,630909],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[630937,630938],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[631489,631521],"content":"TryFault(Expression, Expression)","needQuote":true,"nodes":[{"content":"TryFault(Expression, Expression)","pos":[0,32]}]},{"pos":[631799,631807],"content":"TryFault","needQuote":true,"nodes":[{"content":"TryFault","pos":[0,8]}]},{"pos":[631876,631877],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[631948,631958],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[632019,632020]},{"pos":[632096,632106],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[632166,632167],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[632329,632337],"content":"TryFault","needQuote":true,"nodes":[{"content":"TryFault","pos":[0,8]}]},{"pos":[632406,632407],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[632478,632488],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[632549,632550]},{"pos":[632626,632636],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[632696,632697],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[633101,633135],"content":"TryFinally(Expression, Expression)","needQuote":true,"nodes":[{"content":"TryFinally(Expression, Expression)","pos":[0,34]}]},{"pos":[633417,633427],"content":"TryFinally","needQuote":true,"nodes":[{"content":"TryFinally","pos":[0,10]}]},{"pos":[633498,633499],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[633570,633580],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[633641,633642]},{"pos":[633718,633728],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[633788,633789],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[633953,633963],"content":"TryFinally","needQuote":true,"nodes":[{"content":"TryFinally","pos":[0,10]}]},{"pos":[634034,634035],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[634106,634116],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[634177,634178]},{"pos":[634254,634264],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[634324,634325],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[634695,634725],"content":"TryGetActionType(Type[], Type)","needQuote":true,"nodes":[{"content":"TryGetActionType(Type[], Type)","pos":[0,30]}]},{"pos":[635069,635085],"content":"TryGetActionType","needQuote":true,"nodes":[{"content":"TryGetActionType","pos":[0,16]}]},{"pos":[635162,635163],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[635211,635215],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[635274,635276]},{"content":",","pos":[635308,635309]},{"pos":[635362,635366],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[635424,635425],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[635552,635568],"content":"TryGetActionType","needQuote":true,"nodes":[{"content":"TryGetActionType","pos":[0,16]}]},{"pos":[635645,635646],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[635694,635698],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[635756,635758],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[635787,635788]},{"pos":[635841,635845],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[635903,635904],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[636292,636320],"content":"TryGetFuncType(Type[], Type)","needQuote":true,"nodes":[{"content":"TryGetFuncType(Type[], Type)","pos":[0,28]}]},{"pos":[636656,636670],"content":"TryGetFuncType","needQuote":true,"nodes":[{"content":"TryGetFuncType","pos":[0,14]}]},{"pos":[636745,636746],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[636794,636798],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[636857,636859]},{"content":",","pos":[636891,636892]},{"pos":[636945,636949],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[637007,637008],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[637133,637147],"content":"TryGetFuncType","needQuote":true,"nodes":[{"content":"TryGetFuncType","pos":[0,14]}]},{"pos":[637222,637223],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[637271,637275],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[637333,637335],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[637364,637365]},{"pos":[637418,637422],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[637480,637481],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[637875,637899],"content":"TypeAs(Expression, Type)","needQuote":true,"nodes":[{"content":"TypeAs(Expression, Type)","pos":[0,24]}]},{"pos":[638127,638133],"content":"TypeAs","needQuote":true,"nodes":[{"content":"TypeAs","pos":[0,6]}]},{"pos":[638200,638201],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[638272,638282],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[638343,638344]},{"pos":[638397,638401],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[638459,638460],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[638597,638603],"content":"TypeAs","needQuote":true,"nodes":[{"content":"TypeAs","pos":[0,6]}]},{"pos":[638670,638671],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[638742,638752],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[638813,638814]},{"pos":[638867,638871],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[638929,638930],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[639276,639303],"content":"TypeEqual(Expression, Type)","needQuote":true,"nodes":[{"content":"TypeEqual(Expression, Type)","pos":[0,27]}]},{"pos":[639537,639546],"content":"TypeEqual","needQuote":true,"nodes":[{"content":"TypeEqual","pos":[0,9]}]},{"pos":[639616,639617],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[639688,639698],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[639759,639760]},{"pos":[639813,639817],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[639875,639876],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[640016,640025],"content":"TypeEqual","needQuote":true,"nodes":[{"content":"TypeEqual","pos":[0,9]}]},{"pos":[640095,640096],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[640167,640177],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[640238,640239]},{"pos":[640292,640296],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[640354,640355],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[640704,640728],"content":"TypeIs(Expression, Type)","needQuote":true,"nodes":[{"content":"TypeIs(Expression, Type)","pos":[0,24]}]},{"pos":[640956,640962],"content":"TypeIs","needQuote":true,"nodes":[{"content":"TypeIs","pos":[0,6]}]},{"pos":[641029,641030],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[641101,641111],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[641172,641173]},{"pos":[641226,641230],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[641288,641289],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[641426,641432],"content":"TypeIs","needQuote":true,"nodes":[{"content":"TypeIs","pos":[0,6]}]},{"pos":[641499,641500],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[641571,641581],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[641642,641643]},{"pos":[641696,641700],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[641758,641759],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[642094,642115],"content":"UnaryPlus(Expression)","needQuote":true,"nodes":[{"content":"UnaryPlus(Expression)","pos":[0,21]}]},{"pos":[642324,642333],"content":"UnaryPlus","needQuote":true,"nodes":[{"content":"UnaryPlus","pos":[0,9]}]},{"pos":[642403,642404],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[642475,642485],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[642545,642546],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[642674,642683],"content":"UnaryPlus","needQuote":true,"nodes":[{"content":"UnaryPlus","pos":[0,9]}]},{"pos":[642753,642754],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[642825,642835],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[642895,642896],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[643247,643280],"content":"UnaryPlus(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"UnaryPlus(Expression, MethodInfo)","pos":[0,33]}]},{"pos":[643548,643557],"content":"UnaryPlus","needQuote":true,"nodes":[{"content":"UnaryPlus","pos":[0,9]}]},{"pos":[643627,643628],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[643699,643709],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[643770,643771]},{"pos":[643841,643851],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[643926,643927],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[644084,644093],"content":"UnaryPlus","needQuote":true,"nodes":[{"content":"UnaryPlus","pos":[0,9]}]},{"pos":[644163,644164],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[644235,644245],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[644306,644307]},{"pos":[644377,644387],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[644462,644463],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[644834,644857],"content":"Unbox(Expression, Type)","needQuote":true,"nodes":[{"content":"Unbox(Expression, Type)","pos":[0,23]}]},{"pos":[645083,645088],"content":"Unbox","needQuote":true,"nodes":[{"content":"Unbox","pos":[0,5]}]},{"pos":[645154,645155],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[645226,645236],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[645297,645298]},{"pos":[645351,645355],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[645413,645414],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[645550,645555],"content":"Unbox","needQuote":true,"nodes":[{"content":"Unbox","pos":[0,5]}]},{"pos":[645621,645622],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[645693,645703],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[645764,645765]},{"pos":[645818,645822],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[645880,645881],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[646189,646203],"content":"Variable(Type)","needQuote":true,"nodes":[{"content":"Variable(Type)","pos":[0,14]}]},{"pos":[646364,646372],"content":"Variable","needQuote":true,"nodes":[{"content":"Variable","pos":[0,8]}]},{"pos":[646441,646442],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[646490,646494],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[646552,646553],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[646657,646665],"content":"Variable","needQuote":true,"nodes":[{"content":"Variable","pos":[0,8]}]},{"pos":[646734,646735],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[646783,646787],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[646845,646846],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[647127,647149],"content":"Variable(Type, String)","needQuote":true,"nodes":[{"content":"Variable(Type, String)","pos":[0,22]}]},{"pos":[647339,647347],"content":"Variable","needQuote":true,"nodes":[{"content":"Variable","pos":[0,8]}]},{"pos":[647416,647417],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[647465,647469],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[647528,647529]},{"pos":[647584,647590],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[647650,647651],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[647769,647777],"content":"Variable","needQuote":true,"nodes":[{"content":"Variable","pos":[0,8]}]},{"pos":[647846,647847],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[647895,647899],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[647958,647959]},{"pos":[648014,648020],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[648080,648081],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[648406,648438],"content":"VisitChildren(ExpressionVisitor)","needQuote":true,"nodes":[{"content":"VisitChildren(ExpressionVisitor)","pos":[0,32]}]},{"pos":[648669,648682],"content":"VisitChildren","needQuote":true,"nodes":[{"content":"VisitChildren","pos":[0,13]}]},{"pos":[648756,648757],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[648835,648852],"content":"ExpressionVisitor","needQuote":true,"nodes":[{"content":"ExpressionVisitor","pos":[0,17]}]},{"pos":[648919,648920],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[649059,649072],"content":"VisitChildren","needQuote":true,"nodes":[{"content":"VisitChildren","pos":[0,13]}]},{"pos":[649146,649147],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[649225,649242],"content":"ExpressionVisitor","needQuote":true,"nodes":[{"content":"ExpressionVisitor","pos":[0,17]}]},{"pos":[649309,649310],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[649588,649602],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[649721,649727],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[649794,649795],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[649845,649851],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[649911,649912],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[649995,650001],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[650068,650069],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[650119,650125],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[650185,650186],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[650400,650422],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[650570,650576],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[650643,650644],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[650694,650700],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[650761,650762]},{"pos":[650817,650823],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[650883,650884],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[650981,650987],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[651054,651055],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[651105,651111],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[651172,651173]},{"pos":[651228,651234],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[651294,651295],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[651540,651571],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[651737,651752],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[651828,651829],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[651879,651885],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[651946,651947]},{"pos":[652002,652008],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[652068,652069],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[652175,652190],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[652266,652267],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[652317,652323],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[652384,652385]},{"pos":[652440,652446],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[652506,652507],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[652737,652750],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[652851,652862],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[652934,652935],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[652962,652963],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[653036,653047],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[653119,653120],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[653147,653148],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[653323,653332],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[653425,653432],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[653500,653501],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[653528,653529],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[653598,653605],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[653673,653674],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[653701,653702],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[653877,653894],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[654003,654018],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[654094,654095],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[654122,654123],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[654200,654215],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[654291,654292],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[654319,654320],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[654465,654471],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[654660,654668],"content":"NodeType","needQuote":true,"nodes":[{"content":"NodeType","pos":[0,8]}]},{"pos":[654928,654942],"content":"ExpressionType","needQuote":true,"nodes":[{"content":"ExpressionType","pos":[0,14]}]},{"pos":[655184,655195],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[655443,655447],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[655651,655655],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[655893,655918],"content":"Accept(ExpressionVisitor)","needQuote":true,"nodes":[{"content":"Accept(ExpressionVisitor)","pos":[0,25]}]},{"pos":[656135,656141],"content":"Accept","needQuote":true,"nodes":[{"content":"Accept","pos":[0,6]}]},{"pos":[656208,656209],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[656287,656304],"content":"ExpressionVisitor","needQuote":true,"nodes":[{"content":"ExpressionVisitor","pos":[0,17]}]},{"pos":[656371,656372],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[656504,656510],"content":"Accept","needQuote":true,"nodes":[{"content":"Accept","pos":[0,6]}]},{"pos":[656577,656578],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[656656,656673],"content":"ExpressionVisitor","needQuote":true,"nodes":[{"content":"ExpressionVisitor","pos":[0,17]}]},{"pos":[656740,656741],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[657022,657039],"content":"ExpressionVisitor","needQuote":true,"nodes":[{"content":"ExpressionVisitor","pos":[0,17]}]},{"pos":[657294,657309],"content":"LabelExpression","needQuote":true,"nodes":[{"content":"LabelExpression","pos":[0,15]}]}],"content":"items:\n- uid: System.Linq.Expressions.LabelExpression\n  commentId: T:System.Linq.Expressions.LabelExpression\n  id: LabelExpression\n  parent: System.Linq.Expressions\n  children:\n  - System.Linq.Expressions.LabelExpression.Accept(System.Linq.Expressions.ExpressionVisitor)\n  - System.Linq.Expressions.LabelExpression.DefaultValue\n  - System.Linq.Expressions.LabelExpression.NodeType\n  - System.Linq.Expressions.LabelExpression.Target\n  - System.Linq.Expressions.LabelExpression.Type\n  - System.Linq.Expressions.LabelExpression.Update(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n  langs:\n  - csharp\n  - vb\n  name: LabelExpression\n  fullName: System.Linq.Expressions.LabelExpression\n  type: Class\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: LabelExpression\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 621\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  summary: \"\\n<p>Represents a label, which can be put in any <xref href=\\\"System.Linq.Expressions.Expression\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> context. If it is jumped to, it will get the value provided by the corresponding <xref href=\\\"System.Linq.Expressions.GotoExpression\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. Otherwise, it receives the value in <xref href=\\\"System.Linq.Expressions.LabelExpression.DefaultValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. If the <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> equals System.Void, no value should be provided.</p>\\n\"\n  syntax:\n    content: 'public sealed class LabelExpression : Expression'\n    content.vb: >-\n      Public NotInheritable Class LabelExpression\n          Inherits Expression\n  inheritance:\n  - System.Object\n  - System.Linq.Expressions.Expression\n  inheritedMembers:\n  - System.Linq.Expressions.Expression.CanReduce\n  - System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.ArrayLength(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Assign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Bind(System.Reflection.MemberInfo,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Bind(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.Block(System.Type,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget)\n  - System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n  - System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Type)\n  - System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.String,System.Type[],System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.Call(System.Type,System.String,System.Type[],System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.ClearDebugInfo(System.Linq.Expressions.SymbolDocumentInfo)\n  - System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Type)\n  - System.Linq.Expressions.Expression.Constant(System.Object)\n  - System.Linq.Expressions.Expression.Constant(System.Object,System.Type)\n  - System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget)\n  - System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget,System.Type)\n  - System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type)\n  - System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type)\n  - System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.DebugInfo(System.Linq.Expressions.SymbolDocumentInfo,System.Int32,System.Int32,System.Int32,System.Int32)\n  - System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.Default(System.Type)\n  - System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.Empty\n  - System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)\n  - System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.String)\n  - System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Type,System.String)\n  - System.Linq.Expressions.Expression.GetActionType(System.Type[])\n  - System.Linq.Expressions.Expression.GetDelegateType(System.Type[])\n  - System.Linq.Expressions.Expression.GetFuncType(System.Type[])\n  - System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget)\n  - System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n  - System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Type)\n  - System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.IfThen(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.IfThenElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.Label\n  - System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget)\n  - System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Label(System.String)\n  - System.Linq.Expressions.Expression.Label(System.Type)\n  - System.Linq.Expressions.Expression.Label(System.Type,System.String)\n  - System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  - System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n  - System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  - System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n  - System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  - System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  - System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  - System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n  - System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  - System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n  - System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  - System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  - System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  - System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n  - System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  - System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n  - System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  - System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  - System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n  - System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Linq.Expressions.ElementInit[])\n  - System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n  - System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Linq.Expressions.ElementInit[])\n  - System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n  - System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.ElementInit[])\n  - System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget)\n  - System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.LabelTarget)\n  - System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.MakeCatchBlock(System.Type,System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.MakeGoto(System.Linq.Expressions.GotoExpressionKind,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n  - System.Linq.Expressions.Expression.MakeIndex(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.MakeMemberAccess(System.Linq.Expressions.Expression,System.Reflection.MemberInfo)\n  - System.Linq.Expressions.Expression.MakeTry(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.CatchBlock})\n  - System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type)\n  - System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n  - System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Linq.Expressions.MemberBinding[])\n  - System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n  - System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Linq.Expressions.MemberBinding[])\n  - System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n  - System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.MemberBinding[])\n  - System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo)\n  - System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo})\n  - System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Reflection.MemberInfo[])\n  - System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.New(System.Type)\n  - System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.Parameter(System.Type)\n  - System.Linq.Expressions.Expression.Parameter(System.Type,System.String)\n  - System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo)\n  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String)\n  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Type,System.String)\n  - System.Linq.Expressions.Expression.PropertyOrField(System.Linq.Expressions.Expression,System.String)\n  - System.Linq.Expressions.Expression.Quote(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Reduce\n  - System.Linq.Expressions.Expression.ReduceAndCheck\n  - System.Linq.Expressions.Expression.ReduceExtensions\n  - System.Linq.Expressions.Expression.ReferenceEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.ReferenceNotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Rethrow\n  - System.Linq.Expressions.Expression.Rethrow(System.Type)\n  - System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget)\n  - System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n  - System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Type)\n  - System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.RuntimeVariables(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  - System.Linq.Expressions.Expression.RuntimeVariables(System.Linq.Expressions.ParameterExpression[])\n  - System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])\n  - System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})\n  - System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])\n  - System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])\n  - System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})\n  - System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])\n  - System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.SymbolDocument(System.String)\n  - System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid)\n  - System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid)\n  - System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid,System.Guid)\n  - System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression,System.Type)\n  - System.Linq.Expressions.Expression.ToString\n  - System.Linq.Expressions.Expression.TryCatch(System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])\n  - System.Linq.Expressions.Expression.TryCatchFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])\n  - System.Linq.Expressions.Expression.TryFault(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.TryFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.TryGetActionType(System.Type[],System.Type@)\n  - System.Linq.Expressions.Expression.TryGetFuncType(System.Type[],System.Type@)\n  - System.Linq.Expressions.Expression.TypeAs(System.Linq.Expressions.Expression,System.Type)\n  - System.Linq.Expressions.Expression.TypeEqual(System.Linq.Expressions.Expression,System.Type)\n  - System.Linq.Expressions.Expression.TypeIs(System.Linq.Expressions.Expression,System.Type)\n  - System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.Unbox(System.Linq.Expressions.Expression,System.Type)\n  - System.Linq.Expressions.Expression.Variable(System.Type)\n  - System.Linq.Expressions.Expression.Variable(System.Type,System.String)\n  - System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: LabelExpression\n- uid: System.Linq.Expressions.LabelExpression.DefaultValue\n  commentId: P:System.Linq.Expressions.LabelExpression.DefaultValue\n  id: DefaultValue\n  parent: System.Linq.Expressions.LabelExpression\n  langs:\n  - csharp\n  - vb\n  name: DefaultValue\n  fullName: System.Linq.Expressions.LabelExpression.DefaultValue\n  type: Property\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: DefaultValue\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 624\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  summary: \"\\n<p>The value of the <xref href=\\\"System.Linq.Expressions.LabelExpression\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> when the label is reached through regular control flow (for example, is not jumped to).</p>\\n\"\n  syntax:\n    content: public Expression DefaultValue { get; }\n    content.vb: Public ReadOnly Property DefaultValue As Expression\n    parameters: []\n    return:\n      type: System.Linq.Expressions.Expression\n      description: \"\\n<p>The Expression object representing the value of the <xref href=\\\"System.Linq.Expressions.LabelExpression\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: LabelExpression.DefaultValue\n- uid: System.Linq.Expressions.LabelExpression.NodeType\n  commentId: P:System.Linq.Expressions.LabelExpression.NodeType\n  id: NodeType\n  parent: System.Linq.Expressions.LabelExpression\n  langs:\n  - csharp\n  - vb\n  name: NodeType\n  fullName: System.Linq.Expressions.LabelExpression.NodeType\n  type: Property\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: NodeType\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 625\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  summary: \"\\n<p>Returns the node type of this <xref href=\\\"System.Linq.Expressions.Expression\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public override sealed ExpressionType NodeType { get; }\n    content.vb: Public NotOverridable Overrides ReadOnly Property NodeType As ExpressionType\n    parameters: []\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: \"\\n<p>The <xref href=\\\"System.Linq.Expressions.ExpressionType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents this expression.</p>\\n\"\n  overridden: System.Linq.Expressions.Expression.NodeType\n  modifiers.csharp:\n  - public\n  - override\n  - sealed\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - NotOverridable\n  - ReadOnly\n  nameWithType: LabelExpression.NodeType\n- uid: System.Linq.Expressions.LabelExpression.Target\n  commentId: P:System.Linq.Expressions.LabelExpression.Target\n  id: Target\n  parent: System.Linq.Expressions.LabelExpression\n  langs:\n  - csharp\n  - vb\n  name: Target\n  fullName: System.Linq.Expressions.LabelExpression.Target\n  type: Property\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Target\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 626\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  summary: \"\\n<p>The <xref href=\\\"System.Linq.Expressions.LabelTarget\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> which this label is associated with.</p>\\n\"\n  syntax:\n    content: public LabelTarget Target { get; }\n    content.vb: Public ReadOnly Property Target As LabelTarget\n    parameters: []\n    return:\n      type: System.Linq.Expressions.LabelTarget\n      description: \"\\n<p>The <xref href=\\\"System.Linq.Expressions.LabelTarget\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> which this label is associated with.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: LabelExpression.Target\n- uid: System.Linq.Expressions.LabelExpression.Type\n  commentId: P:System.Linq.Expressions.LabelExpression.Type\n  id: Type\n  parent: System.Linq.Expressions.LabelExpression\n  langs:\n  - csharp\n  - vb\n  name: Type\n  fullName: System.Linq.Expressions.LabelExpression.Type\n  type: Property\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Type\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 627\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  summary: \"\\n<p>Gets the static type of the expression that this <xref href=\\\"System.Linq.Expressions.Expression\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> represents.</p>\\n\"\n  syntax:\n    content: public override sealed Type Type { get; }\n    content.vb: Public NotOverridable Overrides ReadOnly Property Type As Type\n    parameters: []\n    return:\n      type: System.Type\n      description: \"\\n<p>The <xref href=\\\"System.Linq.Expressions.LabelExpression.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents the static type of the expression.</p>\\n\"\n  overridden: System.Linq.Expressions.Expression.Type\n  modifiers.csharp:\n  - public\n  - override\n  - sealed\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - NotOverridable\n  - ReadOnly\n  nameWithType: LabelExpression.Type\n- uid: System.Linq.Expressions.LabelExpression.Accept(System.Linq.Expressions.ExpressionVisitor)\n  commentId: M:System.Linq.Expressions.LabelExpression.Accept(System.Linq.Expressions.ExpressionVisitor)\n  id: Accept(System.Linq.Expressions.ExpressionVisitor)\n  parent: System.Linq.Expressions.LabelExpression\n  langs:\n  - csharp\n  - vb\n  name: Accept(ExpressionVisitor)\n  fullName: System.Linq.Expressions.LabelExpression.Accept(System.Linq.Expressions.ExpressionVisitor)\n  type: Method\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Accept\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 628\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: protected override Expression Accept(ExpressionVisitor visitor)\n    content.vb: Protected Overrides Function Accept(visitor As ExpressionVisitor) As Expression\n    parameters:\n    - id: visitor\n      type: System.Linq.Expressions.ExpressionVisitor\n    return:\n      type: System.Linq.Expressions.Expression\n  overridden: System.Linq.Expressions.Expression.Accept(System.Linq.Expressions.ExpressionVisitor)\n  modifiers.csharp:\n  - protected\n  - override\n  modifiers.vb:\n  - Protected\n  - Overrides\n  nameWithType: LabelExpression.Accept(ExpressionVisitor)\n- uid: System.Linq.Expressions.LabelExpression.Update(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n  commentId: M:System.Linq.Expressions.LabelExpression.Update(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n  id: Update(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.LabelExpression\n  langs:\n  - csharp\n  - vb\n  name: Update(LabelTarget, Expression)\n  fullName: System.Linq.Expressions.LabelExpression.Update(System.Linq.Expressions.LabelTarget, System.Linq.Expressions.Expression)\n  type: Method\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Update\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 629\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  summary: \"\\n<p>Creates a new expression that is like this one, but using the supplied children. If all of the children are the same, it will return this expression.</p>\\n\"\n  syntax:\n    content: public LabelExpression Update(LabelTarget target, Expression defaultValue)\n    content.vb: Public Function Update(target As LabelTarget, defaultValue As Expression) As LabelExpression\n    parameters:\n    - id: target\n      type: System.Linq.Expressions.LabelTarget\n      description: \"\\n<p>The <xref href=\\\"System.Linq.Expressions.LabelExpression.Target\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property of the result.</p>\\n\"\n    - id: defaultValue\n      type: System.Linq.Expressions.Expression\n      description: \"\\n<p>The <xref href=\\\"System.Linq.Expressions.LabelExpression.DefaultValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property of the result</p>\\n\"\n    return:\n      type: System.Linq.Expressions.LabelExpression\n      description: \"\\n<p>This expression if no children are changed or an expression with the updated children.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: LabelExpression.Update(LabelTarget, Expression)\nreferences:\n- uid: System.Linq.Expressions\n  isExternal: false\n  name: System.Linq.Expressions\n  fullName: System.Linq.Expressions\n  commentId: N:System.Linq.Expressions\n  nameWithType: System.Linq.Expressions\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Linq.Expressions.Expression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression\n  fullName: System.Linq.Expressions.Expression\n  commentId: T:System.Linq.Expressions.Expression\n  nameWithType: Expression\n- uid: System.Linq.Expressions.Expression.CanReduce\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: CanReduce\n  fullName: System.Linq.Expressions.Expression.CanReduce\n  commentId: P:System.Linq.Expressions.Expression.CanReduce\n  nameWithType: Expression.CanReduce\n- uid: System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Add(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Add\n    fullName: System.Linq.Expressions.Expression.Add\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Add\n    fullName: System.Linq.Expressions.Expression.Add\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Add(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Add(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Add\n    fullName: System.Linq.Expressions.Expression.Add\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Add\n    fullName: System.Linq.Expressions.Expression.Add\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.Add(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: AddAssign(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: AddAssign\n    fullName: System.Linq.Expressions.Expression.AddAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: AddAssign\n    fullName: System.Linq.Expressions.Expression.AddAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.AddAssign(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: AddAssign(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: AddAssign\n    fullName: System.Linq.Expressions.Expression.AddAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: AddAssign\n    fullName: System.Linq.Expressions.Expression.AddAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.AddAssign(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: AddAssign(Expression, Expression, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: AddAssign\n    fullName: System.Linq.Expressions.Expression.AddAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: AddAssign\n    fullName: System.Linq.Expressions.Expression.AddAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.AddAssign(Expression, Expression, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: AddAssignChecked(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: AddAssignChecked\n    fullName: System.Linq.Expressions.Expression.AddAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: AddAssignChecked\n    fullName: System.Linq.Expressions.Expression.AddAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.AddAssignChecked(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: AddAssignChecked(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: AddAssignChecked\n    fullName: System.Linq.Expressions.Expression.AddAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: AddAssignChecked\n    fullName: System.Linq.Expressions.Expression.AddAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.AddAssignChecked(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: AddAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: AddAssignChecked\n    fullName: System.Linq.Expressions.Expression.AddAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: AddAssignChecked\n    fullName: System.Linq.Expressions.Expression.AddAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.AddAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: AddChecked(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: AddChecked\n    fullName: System.Linq.Expressions.Expression.AddChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: AddChecked\n    fullName: System.Linq.Expressions.Expression.AddChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.AddChecked(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: AddChecked(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: AddChecked\n    fullName: System.Linq.Expressions.Expression.AddChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: AddChecked\n    fullName: System.Linq.Expressions.Expression.AddChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.AddChecked(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: And(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: And\n    fullName: System.Linq.Expressions.Expression.And\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: And\n    fullName: System.Linq.Expressions.Expression.And\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.And(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: And(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: And\n    fullName: System.Linq.Expressions.Expression.And\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: And\n    fullName: System.Linq.Expressions.Expression.And\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.And(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: AndAlso(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: AndAlso\n    fullName: System.Linq.Expressions.Expression.AndAlso\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: AndAlso\n    fullName: System.Linq.Expressions.Expression.AndAlso\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.AndAlso(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: AndAlso(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: AndAlso\n    fullName: System.Linq.Expressions.Expression.AndAlso\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: AndAlso\n    fullName: System.Linq.Expressions.Expression.AndAlso\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.AndAlso(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: AndAssign(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: AndAssign\n    fullName: System.Linq.Expressions.Expression.AndAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: AndAssign\n    fullName: System.Linq.Expressions.Expression.AndAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.AndAssign(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: AndAssign(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: AndAssign\n    fullName: System.Linq.Expressions.Expression.AndAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: AndAssign\n    fullName: System.Linq.Expressions.Expression.AndAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.AndAssign(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: AndAssign(Expression, Expression, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: AndAssign\n    fullName: System.Linq.Expressions.Expression.AndAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: AndAssign\n    fullName: System.Linq.Expressions.Expression.AndAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.AndAssign(Expression, Expression, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ArrayAccess(Expression, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: ArrayAccess(Expression, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: ArrayAccess\n    fullName: System.Linq.Expressions.Expression.ArrayAccess\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: ArrayAccess\n    fullName: System.Linq.Expressions.Expression.ArrayAccess\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.ArrayAccess(Expression, IEnumerable<Expression>)\n  nameWithType.vb: Expression.ArrayAccess(Expression, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ArrayAccess(Expression, Expression[])\n  fullName: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression())\n  name.vb: ArrayAccess(Expression, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n    name: ArrayAccess\n    fullName: System.Linq.Expressions.Expression.ArrayAccess\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n    name: ArrayAccess\n    fullName: System.Linq.Expressions.Expression.ArrayAccess\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.ArrayAccess(Expression, Expression[])\n  nameWithType.vb: Expression.ArrayAccess(Expression, Expression())\n- uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ArrayIndex(Expression, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: ArrayIndex(Expression, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: ArrayIndex\n    fullName: System.Linq.Expressions.Expression.ArrayIndex\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: ArrayIndex\n    fullName: System.Linq.Expressions.Expression.ArrayIndex\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.ArrayIndex(Expression, IEnumerable<Expression>)\n  nameWithType.vb: Expression.ArrayIndex(Expression, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ArrayIndex(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: ArrayIndex\n    fullName: System.Linq.Expressions.Expression.ArrayIndex\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: ArrayIndex\n    fullName: System.Linq.Expressions.Expression.ArrayIndex\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.ArrayIndex(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ArrayIndex(Expression, Expression[])\n  fullName: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression())\n  name.vb: ArrayIndex(Expression, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n    name: ArrayIndex\n    fullName: System.Linq.Expressions.Expression.ArrayIndex\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n    name: ArrayIndex\n    fullName: System.Linq.Expressions.Expression.ArrayIndex\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.ArrayIndex(Expression, Expression[])\n  nameWithType.vb: Expression.ArrayIndex(Expression, Expression())\n- uid: System.Linq.Expressions.Expression.ArrayLength(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ArrayLength(Expression)\n  fullName: System.Linq.Expressions.Expression.ArrayLength(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ArrayLength(System.Linq.Expressions.Expression)\n    name: ArrayLength\n    fullName: System.Linq.Expressions.Expression.ArrayLength\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ArrayLength(System.Linq.Expressions.Expression)\n    name: ArrayLength\n    fullName: System.Linq.Expressions.Expression.ArrayLength\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ArrayLength(System.Linq.Expressions.Expression)\n  nameWithType: Expression.ArrayLength(Expression)\n- uid: System.Linq.Expressions.Expression.Assign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Assign(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Assign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Assign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Assign\n    fullName: System.Linq.Expressions.Expression.Assign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Assign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Assign\n    fullName: System.Linq.Expressions.Expression.Assign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Assign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Assign(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Bind(System.Reflection.MemberInfo,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Bind(MemberInfo, Expression)\n  fullName: System.Linq.Expressions.Expression.Bind(System.Reflection.MemberInfo, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Bind(System.Reflection.MemberInfo,System.Linq.Expressions.Expression)\n    name: Bind\n    fullName: System.Linq.Expressions.Expression.Bind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Bind(System.Reflection.MemberInfo,System.Linq.Expressions.Expression)\n    name: Bind\n    fullName: System.Linq.Expressions.Expression.Bind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Bind(System.Reflection.MemberInfo,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Bind(MemberInfo, Expression)\n- uid: System.Linq.Expressions.Expression.Bind(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Bind(MethodInfo, Expression)\n  fullName: System.Linq.Expressions.Expression.Bind(System.Reflection.MethodInfo, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Bind(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)\n    name: Bind\n    fullName: System.Linq.Expressions.Expression.Bind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Bind(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)\n    name: Bind\n    fullName: System.Linq.Expressions.Expression.Bind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Bind(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Bind(MethodInfo, Expression)\n- uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Block(IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: Block(IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.Block(IEnumerable<Expression>)\n  nameWithType.vb: Expression.Block(IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Block(IEnumerable<ParameterExpression>, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression), System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: Block(IEnumerable(Of ParameterExpression), IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.Block(IEnumerable<ParameterExpression>, IEnumerable<Expression>)\n  nameWithType.vb: Expression.Block(IEnumerable(Of ParameterExpression), IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Block(IEnumerable<ParameterExpression>, Expression[])\n  fullName: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression), System.Linq.Expressions.Expression())\n  name.vb: Block(IEnumerable(Of ParameterExpression), Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])\n  nameWithType: Expression.Block(IEnumerable<ParameterExpression>, Expression[])\n  nameWithType.vb: Expression.Block(IEnumerable(Of ParameterExpression), Expression())\n- uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Block(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Block(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Block(Expression, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Block(Expression, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Block(Expression, Expression, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Block(Expression, Expression, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Block(Expression, Expression, Expression, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Block(Expression, Expression, Expression, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Block(Expression[])\n  fullName: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression())\n  name.vb: Block(Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression[])\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression[])\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression[])\n  nameWithType: Expression.Block(Expression[])\n  nameWithType.vb: Expression.Block(Expression())\n- uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Block(Type, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.Block(System.Type, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.Block(System.Type, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: Block(Type, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.Block(Type, IEnumerable<Expression>)\n  nameWithType.vb: Expression.Block(Type, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Block(Type, IEnumerable<ParameterExpression>, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.Block(System.Type, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.Block(System.Type, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression), System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: Block(Type, IEnumerable(Of ParameterExpression), IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.Block(Type, IEnumerable<ParameterExpression>, IEnumerable<Expression>)\n  nameWithType.vb: Expression.Block(Type, IEnumerable(Of ParameterExpression), IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Block(Type, IEnumerable<ParameterExpression>, Expression[])\n  fullName: System.Linq.Expressions.Expression.Block(System.Type, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.Block(System.Type, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression), System.Linq.Expressions.Expression())\n  name.vb: Block(Type, IEnumerable(Of ParameterExpression), Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])\n  nameWithType: Expression.Block(Type, IEnumerable<ParameterExpression>, Expression[])\n  nameWithType.vb: Expression.Block(Type, IEnumerable(Of ParameterExpression), Expression())\n- uid: System.Linq.Expressions.Expression.Block(System.Type,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Block(Type, Expression[])\n  fullName: System.Linq.Expressions.Expression.Block(System.Type, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.Block(System.Type, System.Linq.Expressions.Expression())\n  name.vb: Block(Type, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Block(System.Type,System.Linq.Expressions.Expression[])\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Block(System.Type,System.Linq.Expressions.Expression[])\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Block(System.Type,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.Block(Type, Expression[])\n  nameWithType.vb: Expression.Block(Type, Expression())\n- uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Break(LabelTarget)\n  fullName: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget)\n    name: Break\n    fullName: System.Linq.Expressions.Expression.Break\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget)\n    name: Break\n    fullName: System.Linq.Expressions.Expression.Break\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget)\n  nameWithType: Expression.Break(LabelTarget)\n- uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Break(LabelTarget, Expression)\n  fullName: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n    name: Break\n    fullName: System.Linq.Expressions.Expression.Break\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n    name: Break\n    fullName: System.Linq.Expressions.Expression.Break\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Break(LabelTarget, Expression)\n- uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Break(LabelTarget, Expression, Type)\n  fullName: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget, System.Linq.Expressions.Expression, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n    name: Break\n    fullName: System.Linq.Expressions.Expression.Break\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n    name: Break\n    fullName: System.Linq.Expressions.Expression.Break\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n  nameWithType: Expression.Break(LabelTarget, Expression, Type)\n- uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Break(LabelTarget, Type)\n  fullName: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Type)\n    name: Break\n    fullName: System.Linq.Expressions.Expression.Break\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Type)\n    name: Break\n    fullName: System.Linq.Expressions.Expression.Break\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Type)\n  nameWithType: Expression.Break(LabelTarget, Type)\n- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Call(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.Call(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Call(Expression, MethodInfo, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: Call(Expression, MethodInfo, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.Call(Expression, MethodInfo, IEnumerable<Expression>)\n  nameWithType.vb: Expression.Call(Expression, MethodInfo, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Call(Expression, MethodInfo, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Call(Expression, MethodInfo, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Call(Expression, MethodInfo, Expression, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Call(Expression, MethodInfo, Expression, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Call(Expression, MethodInfo, Expression[])\n  fullName: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.Expression())\n  name.vb: Call(Expression, MethodInfo, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.Call(Expression, MethodInfo, Expression[])\n  nameWithType.vb: Expression.Call(Expression, MethodInfo, Expression())\n- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.String,System.Type[],System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Call(Expression, String, Type[], Expression[])\n  fullName: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.String, System.Type[], System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.String, System.Type(), System.Linq.Expressions.Expression())\n  name.vb: Call(Expression, String, Type(), Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.String,System.Type[],System.Linq.Expressions.Expression[])\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.String,System.Type[],System.Linq.Expressions.Expression[])\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.String,System.Type[],System.Linq.Expressions.Expression[])\n  nameWithType: Expression.Call(Expression, String, Type[], Expression[])\n  nameWithType.vb: Expression.Call(Expression, String, Type(), Expression())\n- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Call(MethodInfo, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: Call(MethodInfo, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.Call(MethodInfo, IEnumerable<Expression>)\n  nameWithType.vb: Expression.Call(MethodInfo, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Call(MethodInfo, Expression)\n  fullName: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Call(MethodInfo, Expression)\n- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Call(MethodInfo, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Call(MethodInfo, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Call(MethodInfo, Expression, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Call(MethodInfo, Expression, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Call(MethodInfo, Expression, Expression, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Call(MethodInfo, Expression, Expression, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Call(MethodInfo, Expression, Expression, Expression, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Call(MethodInfo, Expression, Expression, Expression, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Call(MethodInfo, Expression[])\n  fullName: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Linq.Expressions.Expression())\n  name.vb: Call(MethodInfo, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.Call(MethodInfo, Expression[])\n  nameWithType.vb: Expression.Call(MethodInfo, Expression())\n- uid: System.Linq.Expressions.Expression.Call(System.Type,System.String,System.Type[],System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Call(Type, String, Type[], Expression[])\n  fullName: System.Linq.Expressions.Expression.Call(System.Type, System.String, System.Type[], System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.Call(System.Type, System.String, System.Type(), System.Linq.Expressions.Expression())\n  name.vb: Call(Type, String, Type(), Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Call(System.Type,System.String,System.Type[],System.Linq.Expressions.Expression[])\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Call(System.Type,System.String,System.Type[],System.Linq.Expressions.Expression[])\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Call(System.Type,System.String,System.Type[],System.Linq.Expressions.Expression[])\n  nameWithType: Expression.Call(Type, String, Type[], Expression[])\n  nameWithType.vb: Expression.Call(Type, String, Type(), Expression())\n- uid: System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Catch(ParameterExpression, Expression)\n  fullName: System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)\n    name: Catch\n    fullName: System.Linq.Expressions.Expression.Catch\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)\n    name: Catch\n    fullName: System.Linq.Expressions.Expression.Catch\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Catch(ParameterExpression, Expression)\n- uid: System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Catch(ParameterExpression, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Catch\n    fullName: System.Linq.Expressions.Expression.Catch\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Catch\n    fullName: System.Linq.Expressions.Expression.Catch\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Catch(ParameterExpression, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Catch(Type, Expression)\n  fullName: System.Linq.Expressions.Expression.Catch(System.Type, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression)\n    name: Catch\n    fullName: System.Linq.Expressions.Expression.Catch\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression)\n    name: Catch\n    fullName: System.Linq.Expressions.Expression.Catch\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Catch(Type, Expression)\n- uid: System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Catch(Type, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Catch(System.Type, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Catch\n    fullName: System.Linq.Expressions.Expression.Catch\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Catch\n    fullName: System.Linq.Expressions.Expression.Catch\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Catch(Type, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.ClearDebugInfo(System.Linq.Expressions.SymbolDocumentInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ClearDebugInfo(SymbolDocumentInfo)\n  fullName: System.Linq.Expressions.Expression.ClearDebugInfo(System.Linq.Expressions.SymbolDocumentInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ClearDebugInfo(System.Linq.Expressions.SymbolDocumentInfo)\n    name: ClearDebugInfo\n    fullName: System.Linq.Expressions.Expression.ClearDebugInfo\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.SymbolDocumentInfo\n    name: SymbolDocumentInfo\n    fullName: System.Linq.Expressions.SymbolDocumentInfo\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ClearDebugInfo(System.Linq.Expressions.SymbolDocumentInfo)\n    name: ClearDebugInfo\n    fullName: System.Linq.Expressions.Expression.ClearDebugInfo\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.SymbolDocumentInfo\n    name: SymbolDocumentInfo\n    fullName: System.Linq.Expressions.SymbolDocumentInfo\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ClearDebugInfo(System.Linq.Expressions.SymbolDocumentInfo)\n  nameWithType: Expression.ClearDebugInfo(SymbolDocumentInfo)\n- uid: System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Coalesce(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Coalesce\n    fullName: System.Linq.Expressions.Expression.Coalesce\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Coalesce\n    fullName: System.Linq.Expressions.Expression.Coalesce\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Coalesce(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Coalesce(Expression, Expression, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)\n    name: Coalesce\n    fullName: System.Linq.Expressions.Expression.Coalesce\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)\n    name: Coalesce\n    fullName: System.Linq.Expressions.Expression.Coalesce\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.Coalesce(Expression, Expression, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Condition(Expression, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Condition\n    fullName: System.Linq.Expressions.Expression.Condition\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Condition\n    fullName: System.Linq.Expressions.Expression.Condition\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Condition(Expression, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Condition(Expression, Expression, Expression, Type)\n  fullName: System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Type)\n    name: Condition\n    fullName: System.Linq.Expressions.Expression.Condition\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Type)\n    name: Condition\n    fullName: System.Linq.Expressions.Expression.Condition\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Type)\n  nameWithType: Expression.Condition(Expression, Expression, Expression, Type)\n- uid: System.Linq.Expressions.Expression.Constant(System.Object)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Constant(Object)\n  fullName: System.Linq.Expressions.Expression.Constant(System.Object)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Constant(System.Object)\n    name: Constant\n    fullName: System.Linq.Expressions.Expression.Constant\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Constant(System.Object)\n    name: Constant\n    fullName: System.Linq.Expressions.Expression.Constant\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Constant(System.Object)\n  nameWithType: Expression.Constant(Object)\n- uid: System.Linq.Expressions.Expression.Constant(System.Object,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Constant(Object, Type)\n  fullName: System.Linq.Expressions.Expression.Constant(System.Object, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Constant(System.Object,System.Type)\n    name: Constant\n    fullName: System.Linq.Expressions.Expression.Constant\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Constant(System.Object,System.Type)\n    name: Constant\n    fullName: System.Linq.Expressions.Expression.Constant\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Constant(System.Object,System.Type)\n  nameWithType: Expression.Constant(Object, Type)\n- uid: System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Continue(LabelTarget)\n  fullName: System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget)\n    name: Continue\n    fullName: System.Linq.Expressions.Expression.Continue\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget)\n    name: Continue\n    fullName: System.Linq.Expressions.Expression.Continue\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget)\n  nameWithType: Expression.Continue(LabelTarget)\n- uid: System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Continue(LabelTarget, Type)\n  fullName: System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget,System.Type)\n    name: Continue\n    fullName: System.Linq.Expressions.Expression.Continue\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget,System.Type)\n    name: Continue\n    fullName: System.Linq.Expressions.Expression.Continue\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget,System.Type)\n  nameWithType: Expression.Continue(LabelTarget, Type)\n- uid: System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Convert(Expression, Type)\n  fullName: System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type)\n    name: Convert\n    fullName: System.Linq.Expressions.Expression.Convert\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type)\n    name: Convert\n    fullName: System.Linq.Expressions.Expression.Convert\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type)\n  nameWithType: Expression.Convert(Expression, Type)\n- uid: System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Convert(Expression, Type, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression, System.Type, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n    name: Convert\n    fullName: System.Linq.Expressions.Expression.Convert\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n    name: Convert\n    fullName: System.Linq.Expressions.Expression.Convert\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n  nameWithType: Expression.Convert(Expression, Type, MethodInfo)\n- uid: System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ConvertChecked(Expression, Type)\n  fullName: System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type)\n    name: ConvertChecked\n    fullName: System.Linq.Expressions.Expression.ConvertChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type)\n    name: ConvertChecked\n    fullName: System.Linq.Expressions.Expression.ConvertChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type)\n  nameWithType: Expression.ConvertChecked(Expression, Type)\n- uid: System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ConvertChecked(Expression, Type, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression, System.Type, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n    name: ConvertChecked\n    fullName: System.Linq.Expressions.Expression.ConvertChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n    name: ConvertChecked\n    fullName: System.Linq.Expressions.Expression.ConvertChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n  nameWithType: Expression.ConvertChecked(Expression, Type, MethodInfo)\n- uid: System.Linq.Expressions.Expression.DebugInfo(System.Linq.Expressions.SymbolDocumentInfo,System.Int32,System.Int32,System.Int32,System.Int32)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: DebugInfo(SymbolDocumentInfo, Int32, Int32, Int32, Int32)\n  fullName: System.Linq.Expressions.Expression.DebugInfo(System.Linq.Expressions.SymbolDocumentInfo, System.Int32, System.Int32, System.Int32, System.Int32)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.DebugInfo(System.Linq.Expressions.SymbolDocumentInfo,System.Int32,System.Int32,System.Int32,System.Int32)\n    name: DebugInfo\n    fullName: System.Linq.Expressions.Expression.DebugInfo\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.SymbolDocumentInfo\n    name: SymbolDocumentInfo\n    fullName: System.Linq.Expressions.SymbolDocumentInfo\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.DebugInfo(System.Linq.Expressions.SymbolDocumentInfo,System.Int32,System.Int32,System.Int32,System.Int32)\n    name: DebugInfo\n    fullName: System.Linq.Expressions.Expression.DebugInfo\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.SymbolDocumentInfo\n    name: SymbolDocumentInfo\n    fullName: System.Linq.Expressions.SymbolDocumentInfo\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.DebugInfo(System.Linq.Expressions.SymbolDocumentInfo,System.Int32,System.Int32,System.Int32,System.Int32)\n  nameWithType: Expression.DebugInfo(SymbolDocumentInfo, Int32, Int32, Int32, Int32)\n- uid: System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Decrement(Expression)\n  fullName: System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression)\n    name: Decrement\n    fullName: System.Linq.Expressions.Expression.Decrement\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression)\n    name: Decrement\n    fullName: System.Linq.Expressions.Expression.Decrement\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression)\n  nameWithType: Expression.Decrement(Expression)\n- uid: System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Decrement(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Decrement\n    fullName: System.Linq.Expressions.Expression.Decrement\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Decrement\n    fullName: System.Linq.Expressions.Expression.Decrement\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.Decrement(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.Default(System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Default(Type)\n  fullName: System.Linq.Expressions.Expression.Default(System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Default(System.Type)\n    name: Default\n    fullName: System.Linq.Expressions.Expression.Default\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Default(System.Type)\n    name: Default\n    fullName: System.Linq.Expressions.Expression.Default\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Default(System.Type)\n  nameWithType: Expression.Default(Type)\n- uid: System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Divide(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Divide\n    fullName: System.Linq.Expressions.Expression.Divide\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Divide\n    fullName: System.Linq.Expressions.Expression.Divide\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Divide(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Divide(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Divide\n    fullName: System.Linq.Expressions.Expression.Divide\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Divide\n    fullName: System.Linq.Expressions.Expression.Divide\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.Divide(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: DivideAssign(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: DivideAssign\n    fullName: System.Linq.Expressions.Expression.DivideAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: DivideAssign\n    fullName: System.Linq.Expressions.Expression.DivideAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.DivideAssign(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: DivideAssign(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: DivideAssign\n    fullName: System.Linq.Expressions.Expression.DivideAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: DivideAssign\n    fullName: System.Linq.Expressions.Expression.DivideAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.DivideAssign(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: DivideAssign(Expression, Expression, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: DivideAssign\n    fullName: System.Linq.Expressions.Expression.DivideAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: DivideAssign\n    fullName: System.Linq.Expressions.Expression.DivideAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.DivideAssign(Expression, Expression, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ElementInit(MethodInfo, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: ElementInit(MethodInfo, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: ElementInit\n    fullName: System.Linq.Expressions.Expression.ElementInit\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: ElementInit\n    fullName: System.Linq.Expressions.Expression.ElementInit\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.ElementInit(MethodInfo, IEnumerable<Expression>)\n  nameWithType.vb: Expression.ElementInit(MethodInfo, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ElementInit(MethodInfo, Expression[])\n  fullName: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo, System.Linq.Expressions.Expression())\n  name.vb: ElementInit(MethodInfo, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n    name: ElementInit\n    fullName: System.Linq.Expressions.Expression.ElementInit\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n    name: ElementInit\n    fullName: System.Linq.Expressions.Expression.ElementInit\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.ElementInit(MethodInfo, Expression[])\n  nameWithType.vb: Expression.ElementInit(MethodInfo, Expression())\n- uid: System.Linq.Expressions.Expression.Empty\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Empty()\n  fullName: System.Linq.Expressions.Expression.Empty()\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Empty\n    name: Empty\n    fullName: System.Linq.Expressions.Expression.Empty\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Empty\n    name: Empty\n    fullName: System.Linq.Expressions.Expression.Empty\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Empty\n  nameWithType: Expression.Empty()\n- uid: System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Equal(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Equal\n    fullName: System.Linq.Expressions.Expression.Equal\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Equal\n    fullName: System.Linq.Expressions.Expression.Equal\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Equal(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Equal(Expression, Expression, Boolean, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Boolean, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n    name: Equal\n    fullName: System.Linq.Expressions.Expression.Equal\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n    name: Equal\n    fullName: System.Linq.Expressions.Expression.Equal\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  nameWithType: Expression.Equal(Expression, Expression, Boolean, MethodInfo)\n- uid: System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ExclusiveOr(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: ExclusiveOr\n    fullName: System.Linq.Expressions.Expression.ExclusiveOr\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: ExclusiveOr\n    fullName: System.Linq.Expressions.Expression.ExclusiveOr\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.ExclusiveOr(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ExclusiveOr(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: ExclusiveOr\n    fullName: System.Linq.Expressions.Expression.ExclusiveOr\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: ExclusiveOr\n    fullName: System.Linq.Expressions.Expression.ExclusiveOr\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.ExclusiveOr(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ExclusiveOrAssign(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: ExclusiveOrAssign\n    fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: ExclusiveOrAssign\n    fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.ExclusiveOrAssign(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ExclusiveOrAssign(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: ExclusiveOrAssign\n    fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: ExclusiveOrAssign\n    fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.ExclusiveOrAssign(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ExclusiveOrAssign(Expression, Expression, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: ExclusiveOrAssign\n    fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: ExclusiveOrAssign\n    fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.ExclusiveOrAssign(Expression, Expression, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Field(Expression, FieldInfo)\n  fullName: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression, System.Reflection.FieldInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)\n    name: Field\n    fullName: System.Linq.Expressions.Expression.Field\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.FieldInfo\n    name: FieldInfo\n    fullName: System.Reflection.FieldInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)\n    name: Field\n    fullName: System.Linq.Expressions.Expression.Field\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.FieldInfo\n    name: FieldInfo\n    fullName: System.Reflection.FieldInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)\n  nameWithType: Expression.Field(Expression, FieldInfo)\n- uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.String)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Field(Expression, String)\n  fullName: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression, System.String)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.String)\n    name: Field\n    fullName: System.Linq.Expressions.Expression.Field\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.String)\n    name: Field\n    fullName: System.Linq.Expressions.Expression.Field\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.String)\n  nameWithType: Expression.Field(Expression, String)\n- uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Type,System.String)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Field(Expression, Type, String)\n  fullName: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression, System.Type, System.String)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Type,System.String)\n    name: Field\n    fullName: System.Linq.Expressions.Expression.Field\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Type,System.String)\n    name: Field\n    fullName: System.Linq.Expressions.Expression.Field\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Type,System.String)\n  nameWithType: Expression.Field(Expression, Type, String)\n- uid: System.Linq.Expressions.Expression.GetActionType(System.Type[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: GetActionType(Type[])\n  fullName: System.Linq.Expressions.Expression.GetActionType(System.Type[])\n  fullname.vb: System.Linq.Expressions.Expression.GetActionType(System.Type())\n  name.vb: GetActionType(Type())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.GetActionType(System.Type[])\n    name: GetActionType\n    fullName: System.Linq.Expressions.Expression.GetActionType\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.GetActionType(System.Type[])\n    name: GetActionType\n    fullName: System.Linq.Expressions.Expression.GetActionType\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.GetActionType(System.Type[])\n  nameWithType: Expression.GetActionType(Type[])\n  nameWithType.vb: Expression.GetActionType(Type())\n- uid: System.Linq.Expressions.Expression.GetDelegateType(System.Type[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: GetDelegateType(Type[])\n  fullName: System.Linq.Expressions.Expression.GetDelegateType(System.Type[])\n  fullname.vb: System.Linq.Expressions.Expression.GetDelegateType(System.Type())\n  name.vb: GetDelegateType(Type())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.GetDelegateType(System.Type[])\n    name: GetDelegateType\n    fullName: System.Linq.Expressions.Expression.GetDelegateType\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.GetDelegateType(System.Type[])\n    name: GetDelegateType\n    fullName: System.Linq.Expressions.Expression.GetDelegateType\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.GetDelegateType(System.Type[])\n  nameWithType: Expression.GetDelegateType(Type[])\n  nameWithType.vb: Expression.GetDelegateType(Type())\n- uid: System.Linq.Expressions.Expression.GetFuncType(System.Type[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: GetFuncType(Type[])\n  fullName: System.Linq.Expressions.Expression.GetFuncType(System.Type[])\n  fullname.vb: System.Linq.Expressions.Expression.GetFuncType(System.Type())\n  name.vb: GetFuncType(Type())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.GetFuncType(System.Type[])\n    name: GetFuncType\n    fullName: System.Linq.Expressions.Expression.GetFuncType\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.GetFuncType(System.Type[])\n    name: GetFuncType\n    fullName: System.Linq.Expressions.Expression.GetFuncType\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.GetFuncType(System.Type[])\n  nameWithType: Expression.GetFuncType(Type[])\n  nameWithType.vb: Expression.GetFuncType(Type())\n- uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Goto(LabelTarget)\n  fullName: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget)\n    name: Goto\n    fullName: System.Linq.Expressions.Expression.Goto\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget)\n    name: Goto\n    fullName: System.Linq.Expressions.Expression.Goto\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget)\n  nameWithType: Expression.Goto(LabelTarget)\n- uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Goto(LabelTarget, Expression)\n  fullName: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n    name: Goto\n    fullName: System.Linq.Expressions.Expression.Goto\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n    name: Goto\n    fullName: System.Linq.Expressions.Expression.Goto\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Goto(LabelTarget, Expression)\n- uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Goto(LabelTarget, Expression, Type)\n  fullName: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget, System.Linq.Expressions.Expression, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n    name: Goto\n    fullName: System.Linq.Expressions.Expression.Goto\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n    name: Goto\n    fullName: System.Linq.Expressions.Expression.Goto\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n  nameWithType: Expression.Goto(LabelTarget, Expression, Type)\n- uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Goto(LabelTarget, Type)\n  fullName: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Type)\n    name: Goto\n    fullName: System.Linq.Expressions.Expression.Goto\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Type)\n    name: Goto\n    fullName: System.Linq.Expressions.Expression.Goto\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Type)\n  nameWithType: Expression.Goto(LabelTarget, Type)\n- uid: System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: GreaterThan(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: GreaterThan\n    fullName: System.Linq.Expressions.Expression.GreaterThan\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: GreaterThan\n    fullName: System.Linq.Expressions.Expression.GreaterThan\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.GreaterThan(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: GreaterThan(Expression, Expression, Boolean, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Boolean, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n    name: GreaterThan\n    fullName: System.Linq.Expressions.Expression.GreaterThan\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n    name: GreaterThan\n    fullName: System.Linq.Expressions.Expression.GreaterThan\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  nameWithType: Expression.GreaterThan(Expression, Expression, Boolean, MethodInfo)\n- uid: System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: GreaterThanOrEqual(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: GreaterThanOrEqual\n    fullName: System.Linq.Expressions.Expression.GreaterThanOrEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: GreaterThanOrEqual\n    fullName: System.Linq.Expressions.Expression.GreaterThanOrEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.GreaterThanOrEqual(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: GreaterThanOrEqual(Expression, Expression, Boolean, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Boolean, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n    name: GreaterThanOrEqual\n    fullName: System.Linq.Expressions.Expression.GreaterThanOrEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n    name: GreaterThanOrEqual\n    fullName: System.Linq.Expressions.Expression.GreaterThanOrEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  nameWithType: Expression.GreaterThanOrEqual(Expression, Expression, Boolean, MethodInfo)\n- uid: System.Linq.Expressions.Expression.IfThen(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: IfThen(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.IfThen(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.IfThen(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: IfThen\n    fullName: System.Linq.Expressions.Expression.IfThen\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.IfThen(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: IfThen\n    fullName: System.Linq.Expressions.Expression.IfThen\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.IfThen(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.IfThen(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.IfThenElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: IfThenElse(Expression, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.IfThenElse(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.IfThenElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: IfThenElse\n    fullName: System.Linq.Expressions.Expression.IfThenElse\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.IfThenElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: IfThenElse\n    fullName: System.Linq.Expressions.Expression.IfThenElse\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.IfThenElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.IfThenElse(Expression, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Increment(Expression)\n  fullName: System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression)\n    name: Increment\n    fullName: System.Linq.Expressions.Expression.Increment\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression)\n    name: Increment\n    fullName: System.Linq.Expressions.Expression.Increment\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression)\n  nameWithType: Expression.Increment(Expression)\n- uid: System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Increment(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Increment\n    fullName: System.Linq.Expressions.Expression.Increment\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Increment\n    fullName: System.Linq.Expressions.Expression.Increment\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.Increment(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Invoke(Expression, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: Invoke(Expression, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Invoke\n    fullName: System.Linq.Expressions.Expression.Invoke\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Invoke\n    fullName: System.Linq.Expressions.Expression.Invoke\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.Invoke(Expression, IEnumerable<Expression>)\n  nameWithType.vb: Expression.Invoke(Expression, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Invoke(Expression, Expression[])\n  fullName: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression())\n  name.vb: Invoke(Expression, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n    name: Invoke\n    fullName: System.Linq.Expressions.Expression.Invoke\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n    name: Invoke\n    fullName: System.Linq.Expressions.Expression.Invoke\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.Invoke(Expression, Expression[])\n  nameWithType.vb: Expression.Invoke(Expression, Expression())\n- uid: System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: IsFalse(Expression)\n  fullName: System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression)\n    name: IsFalse\n    fullName: System.Linq.Expressions.Expression.IsFalse\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression)\n    name: IsFalse\n    fullName: System.Linq.Expressions.Expression.IsFalse\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression)\n  nameWithType: Expression.IsFalse(Expression)\n- uid: System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: IsFalse(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: IsFalse\n    fullName: System.Linq.Expressions.Expression.IsFalse\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: IsFalse\n    fullName: System.Linq.Expressions.Expression.IsFalse\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.IsFalse(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: IsTrue(Expression)\n  fullName: System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression)\n    name: IsTrue\n    fullName: System.Linq.Expressions.Expression.IsTrue\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression)\n    name: IsTrue\n    fullName: System.Linq.Expressions.Expression.IsTrue\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression)\n  nameWithType: Expression.IsTrue(Expression)\n- uid: System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: IsTrue(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: IsTrue\n    fullName: System.Linq.Expressions.Expression.IsTrue\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: IsTrue\n    fullName: System.Linq.Expressions.Expression.IsTrue\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.IsTrue(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.Label\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Label()\n  fullName: System.Linq.Expressions.Expression.Label()\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Label\n    name: Label\n    fullName: System.Linq.Expressions.Expression.Label\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Label\n    name: Label\n    fullName: System.Linq.Expressions.Expression.Label\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Label\n  nameWithType: Expression.Label()\n- uid: System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Label(LabelTarget)\n  fullName: System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget)\n    name: Label\n    fullName: System.Linq.Expressions.Expression.Label\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget)\n    name: Label\n    fullName: System.Linq.Expressions.Expression.Label\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget)\n  nameWithType: Expression.Label(LabelTarget)\n- uid: System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Label(LabelTarget, Expression)\n  fullName: System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n    name: Label\n    fullName: System.Linq.Expressions.Expression.Label\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n    name: Label\n    fullName: System.Linq.Expressions.Expression.Label\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Label(LabelTarget, Expression)\n- uid: System.Linq.Expressions.Expression.Label(System.String)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Label(String)\n  fullName: System.Linq.Expressions.Expression.Label(System.String)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Label(System.String)\n    name: Label\n    fullName: System.Linq.Expressions.Expression.Label\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Label(System.String)\n    name: Label\n    fullName: System.Linq.Expressions.Expression.Label\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Label(System.String)\n  nameWithType: Expression.Label(String)\n- uid: System.Linq.Expressions.Expression.Label(System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Label(Type)\n  fullName: System.Linq.Expressions.Expression.Label(System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Label(System.Type)\n    name: Label\n    fullName: System.Linq.Expressions.Expression.Label\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Label(System.Type)\n    name: Label\n    fullName: System.Linq.Expressions.Expression.Label\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Label(System.Type)\n  nameWithType: Expression.Label(Type)\n- uid: System.Linq.Expressions.Expression.Label(System.Type,System.String)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Label(Type, String)\n  fullName: System.Linq.Expressions.Expression.Label(System.Type, System.String)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Label(System.Type,System.String)\n    name: Label\n    fullName: System.Linq.Expressions.Expression.Label\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Label(System.Type,System.String)\n    name: Label\n    fullName: System.Linq.Expressions.Expression.Label\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Label(System.Type,System.String)\n  nameWithType: Expression.Label(Type, String)\n- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda(Expression, Boolean, IEnumerable<ParameterExpression>)\n  fullName: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.Boolean, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.Boolean, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))\n  name.vb: Lambda(Expression, Boolean, IEnumerable(Of ParameterExpression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  nameWithType: Expression.Lambda(Expression, Boolean, IEnumerable<ParameterExpression>)\n  nameWithType.vb: Expression.Lambda(Expression, Boolean, IEnumerable(Of ParameterExpression))\n- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda(Expression, Boolean, ParameterExpression[])\n  fullName: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.Boolean, System.Linq.Expressions.ParameterExpression[])\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.Boolean, System.Linq.Expressions.ParameterExpression())\n  name.vb: Lambda(Expression, Boolean, ParameterExpression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n  nameWithType: Expression.Lambda(Expression, Boolean, ParameterExpression[])\n  nameWithType.vb: Expression.Lambda(Expression, Boolean, ParameterExpression())\n- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda(Expression, IEnumerable<ParameterExpression>)\n  fullName: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))\n  name.vb: Lambda(Expression, IEnumerable(Of ParameterExpression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  nameWithType: Expression.Lambda(Expression, IEnumerable<ParameterExpression>)\n  nameWithType.vb: Expression.Lambda(Expression, IEnumerable(Of ParameterExpression))\n- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Lambda(Expression, ParameterExpression[])\n  fullName: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.Linq.Expressions.ParameterExpression[])\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.Linq.Expressions.ParameterExpression())\n  name.vb: Lambda(Expression, ParameterExpression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n  nameWithType: Expression.Lambda(Expression, ParameterExpression[])\n  nameWithType.vb: Expression.Lambda(Expression, ParameterExpression())\n- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda(Expression, String, Boolean, IEnumerable<ParameterExpression>)\n  fullName: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.String, System.Boolean, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.String, System.Boolean, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))\n  name.vb: Lambda(Expression, String, Boolean, IEnumerable(Of ParameterExpression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  nameWithType: Expression.Lambda(Expression, String, Boolean, IEnumerable<ParameterExpression>)\n  nameWithType.vb: Expression.Lambda(Expression, String, Boolean, IEnumerable(Of ParameterExpression))\n- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda(Expression, String, IEnumerable<ParameterExpression>)\n  fullName: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.String, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.String, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))\n  name.vb: Lambda(Expression, String, IEnumerable(Of ParameterExpression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  nameWithType: Expression.Lambda(Expression, String, IEnumerable<ParameterExpression>)\n  nameWithType.vb: Expression.Lambda(Expression, String, IEnumerable(Of ParameterExpression))\n- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda(Type, Expression, Boolean, IEnumerable<ParameterExpression>)\n  fullName: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.Boolean, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.Boolean, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))\n  name.vb: Lambda(Type, Expression, Boolean, IEnumerable(Of ParameterExpression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  nameWithType: Expression.Lambda(Type, Expression, Boolean, IEnumerable<ParameterExpression>)\n  nameWithType.vb: Expression.Lambda(Type, Expression, Boolean, IEnumerable(Of ParameterExpression))\n- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda(Type, Expression, Boolean, ParameterExpression[])\n  fullName: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.Boolean, System.Linq.Expressions.ParameterExpression[])\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.Boolean, System.Linq.Expressions.ParameterExpression())\n  name.vb: Lambda(Type, Expression, Boolean, ParameterExpression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n  nameWithType: Expression.Lambda(Type, Expression, Boolean, ParameterExpression[])\n  nameWithType.vb: Expression.Lambda(Type, Expression, Boolean, ParameterExpression())\n- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda(Type, Expression, IEnumerable<ParameterExpression>)\n  fullName: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))\n  name.vb: Lambda(Type, Expression, IEnumerable(Of ParameterExpression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  nameWithType: Expression.Lambda(Type, Expression, IEnumerable<ParameterExpression>)\n  nameWithType.vb: Expression.Lambda(Type, Expression, IEnumerable(Of ParameterExpression))\n- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda(Type, Expression, ParameterExpression[])\n  fullName: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.Linq.Expressions.ParameterExpression[])\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.Linq.Expressions.ParameterExpression())\n  name.vb: Lambda(Type, Expression, ParameterExpression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n  nameWithType: Expression.Lambda(Type, Expression, ParameterExpression[])\n  nameWithType.vb: Expression.Lambda(Type, Expression, ParameterExpression())\n- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda(Type, Expression, String, Boolean, IEnumerable<ParameterExpression>)\n  fullName: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.String, System.Boolean, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.String, System.Boolean, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))\n  name.vb: Lambda(Type, Expression, String, Boolean, IEnumerable(Of ParameterExpression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  nameWithType: Expression.Lambda(Type, Expression, String, Boolean, IEnumerable<ParameterExpression>)\n  nameWithType.vb: Expression.Lambda(Type, Expression, String, Boolean, IEnumerable(Of ParameterExpression))\n- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda(Type, Expression, String, IEnumerable<ParameterExpression>)\n  fullName: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.String, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.String, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))\n  name.vb: Lambda(Type, Expression, String, IEnumerable(Of ParameterExpression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  nameWithType: Expression.Lambda(Type, Expression, String, IEnumerable<ParameterExpression>)\n  nameWithType.vb: Expression.Lambda(Type, Expression, String, IEnumerable(Of ParameterExpression))\n- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda<TDelegate>(Expression, Boolean, IEnumerable<ParameterExpression>)\n  fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, System.Boolean, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(Of TDelegate)(System.Linq.Expressions.Expression, System.Boolean, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))\n  name.vb: Lambda(Of TDelegate)(Expression, Boolean, IEnumerable(Of ParameterExpression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda<TDelegate>\n    fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda(Of TDelegate)\n    fullName: System.Linq.Expressions.Expression.Lambda(Of TDelegate)\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  nameWithType: Expression.Lambda<TDelegate>(Expression, Boolean, IEnumerable<ParameterExpression>)\n  nameWithType.vb: Expression.Lambda(Of TDelegate)(Expression, Boolean, IEnumerable(Of ParameterExpression))\n- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda<TDelegate>(Expression, Boolean, ParameterExpression[])\n  fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, System.Boolean, System.Linq.Expressions.ParameterExpression[])\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(Of TDelegate)(System.Linq.Expressions.Expression, System.Boolean, System.Linq.Expressions.ParameterExpression())\n  name.vb: Lambda(Of TDelegate)(Expression, Boolean, ParameterExpression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n    name: Lambda<TDelegate>\n    fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n    name: Lambda(Of TDelegate)\n    fullName: System.Linq.Expressions.Expression.Lambda(Of TDelegate)\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n  nameWithType: Expression.Lambda<TDelegate>(Expression, Boolean, ParameterExpression[])\n  nameWithType.vb: Expression.Lambda(Of TDelegate)(Expression, Boolean, ParameterExpression())\n- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda<TDelegate>(Expression, IEnumerable<ParameterExpression>)\n  fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(Of TDelegate)(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))\n  name.vb: Lambda(Of TDelegate)(Expression, IEnumerable(Of ParameterExpression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda<TDelegate>\n    fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda(Of TDelegate)\n    fullName: System.Linq.Expressions.Expression.Lambda(Of TDelegate)\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  nameWithType: Expression.Lambda<TDelegate>(Expression, IEnumerable<ParameterExpression>)\n  nameWithType.vb: Expression.Lambda(Of TDelegate)(Expression, IEnumerable(Of ParameterExpression))\n- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Lambda<TDelegate>(Expression, ParameterExpression[])\n  fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, System.Linq.Expressions.ParameterExpression[])\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(Of TDelegate)(System.Linq.Expressions.Expression, System.Linq.Expressions.ParameterExpression())\n  name.vb: Lambda(Of TDelegate)(Expression, ParameterExpression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n    name: Lambda<TDelegate>\n    fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n    name: Lambda(Of TDelegate)\n    fullName: System.Linq.Expressions.Expression.Lambda(Of TDelegate)\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n  nameWithType: Expression.Lambda<TDelegate>(Expression, ParameterExpression[])\n  nameWithType.vb: Expression.Lambda(Of TDelegate)(Expression, ParameterExpression())\n- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda<TDelegate>(Expression, String, Boolean, IEnumerable<ParameterExpression>)\n  fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, System.String, System.Boolean, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(Of TDelegate)(System.Linq.Expressions.Expression, System.String, System.Boolean, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))\n  name.vb: Lambda(Of TDelegate)(Expression, String, Boolean, IEnumerable(Of ParameterExpression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda<TDelegate>\n    fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda(Of TDelegate)\n    fullName: System.Linq.Expressions.Expression.Lambda(Of TDelegate)\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  nameWithType: Expression.Lambda<TDelegate>(Expression, String, Boolean, IEnumerable<ParameterExpression>)\n  nameWithType.vb: Expression.Lambda(Of TDelegate)(Expression, String, Boolean, IEnumerable(Of ParameterExpression))\n- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda<TDelegate>(Expression, String, IEnumerable<ParameterExpression>)\n  fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, System.String, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(Of TDelegate)(System.Linq.Expressions.Expression, System.String, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))\n  name.vb: Lambda(Of TDelegate)(Expression, String, IEnumerable(Of ParameterExpression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda<TDelegate>\n    fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda(Of TDelegate)\n    fullName: System.Linq.Expressions.Expression.Lambda(Of TDelegate)\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  nameWithType: Expression.Lambda<TDelegate>(Expression, String, IEnumerable<ParameterExpression>)\n  nameWithType.vb: Expression.Lambda(Of TDelegate)(Expression, String, IEnumerable(Of ParameterExpression))\n- uid: System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: LeftShift(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: LeftShift\n    fullName: System.Linq.Expressions.Expression.LeftShift\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: LeftShift\n    fullName: System.Linq.Expressions.Expression.LeftShift\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.LeftShift(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: LeftShift(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: LeftShift\n    fullName: System.Linq.Expressions.Expression.LeftShift\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: LeftShift\n    fullName: System.Linq.Expressions.Expression.LeftShift\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.LeftShift(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: LeftShiftAssign(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: LeftShiftAssign\n    fullName: System.Linq.Expressions.Expression.LeftShiftAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: LeftShiftAssign\n    fullName: System.Linq.Expressions.Expression.LeftShiftAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.LeftShiftAssign(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: LeftShiftAssign(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: LeftShiftAssign\n    fullName: System.Linq.Expressions.Expression.LeftShiftAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: LeftShiftAssign\n    fullName: System.Linq.Expressions.Expression.LeftShiftAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.LeftShiftAssign(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: LeftShiftAssign(Expression, Expression, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: LeftShiftAssign\n    fullName: System.Linq.Expressions.Expression.LeftShiftAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: LeftShiftAssign\n    fullName: System.Linq.Expressions.Expression.LeftShiftAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.LeftShiftAssign(Expression, Expression, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: LessThan(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: LessThan\n    fullName: System.Linq.Expressions.Expression.LessThan\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: LessThan\n    fullName: System.Linq.Expressions.Expression.LessThan\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.LessThan(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: LessThan(Expression, Expression, Boolean, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Boolean, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n    name: LessThan\n    fullName: System.Linq.Expressions.Expression.LessThan\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n    name: LessThan\n    fullName: System.Linq.Expressions.Expression.LessThan\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  nameWithType: Expression.LessThan(Expression, Expression, Boolean, MethodInfo)\n- uid: System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: LessThanOrEqual(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: LessThanOrEqual\n    fullName: System.Linq.Expressions.Expression.LessThanOrEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: LessThanOrEqual\n    fullName: System.Linq.Expressions.Expression.LessThanOrEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.LessThanOrEqual(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: LessThanOrEqual(Expression, Expression, Boolean, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Boolean, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n    name: LessThanOrEqual\n    fullName: System.Linq.Expressions.Expression.LessThanOrEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n    name: LessThanOrEqual\n    fullName: System.Linq.Expressions.Expression.LessThanOrEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  nameWithType: Expression.LessThanOrEqual(Expression, Expression, Boolean, MethodInfo)\n- uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ListBind(MemberInfo, IEnumerable<ElementInit>)\n  fullName: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ElementInit>)\n  fullname.vb: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ElementInit))\n  name.vb: ListBind(MemberInfo, IEnumerable(Of ElementInit))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n    name: ListBind\n    fullName: System.Linq.Expressions.Expression.ListBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ElementInit\n    name: ElementInit\n    fullName: System.Linq.Expressions.ElementInit\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n    name: ListBind\n    fullName: System.Linq.Expressions.Expression.ListBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ElementInit\n    name: ElementInit\n    fullName: System.Linq.Expressions.ElementInit\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n  nameWithType: Expression.ListBind(MemberInfo, IEnumerable<ElementInit>)\n  nameWithType.vb: Expression.ListBind(MemberInfo, IEnumerable(Of ElementInit))\n- uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Linq.Expressions.ElementInit[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ListBind(MemberInfo, ElementInit[])\n  fullName: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo, System.Linq.Expressions.ElementInit[])\n  fullname.vb: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo, System.Linq.Expressions.ElementInit())\n  name.vb: ListBind(MemberInfo, ElementInit())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Linq.Expressions.ElementInit[])\n    name: ListBind\n    fullName: System.Linq.Expressions.Expression.ListBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ElementInit\n    name: ElementInit\n    fullName: System.Linq.Expressions.ElementInit\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Linq.Expressions.ElementInit[])\n    name: ListBind\n    fullName: System.Linq.Expressions.Expression.ListBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ElementInit\n    name: ElementInit\n    fullName: System.Linq.Expressions.ElementInit\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Linq.Expressions.ElementInit[])\n  nameWithType: Expression.ListBind(MemberInfo, ElementInit[])\n  nameWithType.vb: Expression.ListBind(MemberInfo, ElementInit())\n- uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ListBind(MethodInfo, IEnumerable<ElementInit>)\n  fullName: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ElementInit>)\n  fullname.vb: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ElementInit))\n  name.vb: ListBind(MethodInfo, IEnumerable(Of ElementInit))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n    name: ListBind\n    fullName: System.Linq.Expressions.Expression.ListBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ElementInit\n    name: ElementInit\n    fullName: System.Linq.Expressions.ElementInit\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n    name: ListBind\n    fullName: System.Linq.Expressions.Expression.ListBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ElementInit\n    name: ElementInit\n    fullName: System.Linq.Expressions.ElementInit\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n  nameWithType: Expression.ListBind(MethodInfo, IEnumerable<ElementInit>)\n  nameWithType.vb: Expression.ListBind(MethodInfo, IEnumerable(Of ElementInit))\n- uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Linq.Expressions.ElementInit[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ListBind(MethodInfo, ElementInit[])\n  fullName: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo, System.Linq.Expressions.ElementInit[])\n  fullname.vb: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo, System.Linq.Expressions.ElementInit())\n  name.vb: ListBind(MethodInfo, ElementInit())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Linq.Expressions.ElementInit[])\n    name: ListBind\n    fullName: System.Linq.Expressions.Expression.ListBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ElementInit\n    name: ElementInit\n    fullName: System.Linq.Expressions.ElementInit\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Linq.Expressions.ElementInit[])\n    name: ListBind\n    fullName: System.Linq.Expressions.Expression.ListBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ElementInit\n    name: ElementInit\n    fullName: System.Linq.Expressions.ElementInit\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Linq.Expressions.ElementInit[])\n  nameWithType: Expression.ListBind(MethodInfo, ElementInit[])\n  nameWithType.vb: Expression.ListBind(MethodInfo, ElementInit())\n- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ListInit(NewExpression, IEnumerable<ElementInit>)\n  fullName: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ElementInit>)\n  fullname.vb: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ElementInit))\n  name.vb: ListInit(NewExpression, IEnumerable(Of ElementInit))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n    name: ListInit\n    fullName: System.Linq.Expressions.Expression.ListInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ElementInit\n    name: ElementInit\n    fullName: System.Linq.Expressions.ElementInit\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n    name: ListInit\n    fullName: System.Linq.Expressions.Expression.ListInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ElementInit\n    name: ElementInit\n    fullName: System.Linq.Expressions.ElementInit\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n  nameWithType: Expression.ListInit(NewExpression, IEnumerable<ElementInit>)\n  nameWithType.vb: Expression.ListInit(NewExpression, IEnumerable(Of ElementInit))\n- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ListInit(NewExpression, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: ListInit(NewExpression, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: ListInit\n    fullName: System.Linq.Expressions.Expression.ListInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: ListInit\n    fullName: System.Linq.Expressions.Expression.ListInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.ListInit(NewExpression, IEnumerable<Expression>)\n  nameWithType.vb: Expression.ListInit(NewExpression, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.ElementInit[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ListInit(NewExpression, ElementInit[])\n  fullName: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Linq.Expressions.ElementInit[])\n  fullname.vb: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Linq.Expressions.ElementInit())\n  name.vb: ListInit(NewExpression, ElementInit())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.ElementInit[])\n    name: ListInit\n    fullName: System.Linq.Expressions.Expression.ListInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ElementInit\n    name: ElementInit\n    fullName: System.Linq.Expressions.ElementInit\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.ElementInit[])\n    name: ListInit\n    fullName: System.Linq.Expressions.Expression.ListInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ElementInit\n    name: ElementInit\n    fullName: System.Linq.Expressions.ElementInit\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.ElementInit[])\n  nameWithType: Expression.ListInit(NewExpression, ElementInit[])\n  nameWithType.vb: Expression.ListInit(NewExpression, ElementInit())\n- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ListInit(NewExpression, Expression[])\n  fullName: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Linq.Expressions.Expression())\n  name.vb: ListInit(NewExpression, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.Expression[])\n    name: ListInit\n    fullName: System.Linq.Expressions.Expression.ListInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.Expression[])\n    name: ListInit\n    fullName: System.Linq.Expressions.Expression.ListInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.ListInit(NewExpression, Expression[])\n  nameWithType.vb: Expression.ListInit(NewExpression, Expression())\n- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ListInit(NewExpression, MethodInfo, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: ListInit(NewExpression, MethodInfo, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: ListInit\n    fullName: System.Linq.Expressions.Expression.ListInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: ListInit\n    fullName: System.Linq.Expressions.Expression.ListInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.ListInit(NewExpression, MethodInfo, IEnumerable<Expression>)\n  nameWithType.vb: Expression.ListInit(NewExpression, MethodInfo, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ListInit(NewExpression, MethodInfo, Expression[])\n  fullName: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Reflection.MethodInfo, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Reflection.MethodInfo, System.Linq.Expressions.Expression())\n  name.vb: ListInit(NewExpression, MethodInfo, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n    name: ListInit\n    fullName: System.Linq.Expressions.Expression.ListInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n    name: ListInit\n    fullName: System.Linq.Expressions.Expression.ListInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.ListInit(NewExpression, MethodInfo, Expression[])\n  nameWithType.vb: Expression.ListInit(NewExpression, MethodInfo, Expression())\n- uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Loop(Expression)\n  fullName: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression)\n    name: Loop\n    fullName: System.Linq.Expressions.Expression.Loop\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression)\n    name: Loop\n    fullName: System.Linq.Expressions.Expression.Loop\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression)\n  nameWithType: Expression.Loop(Expression)\n- uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Loop(Expression, LabelTarget)\n  fullName: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression, System.Linq.Expressions.LabelTarget)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget)\n    name: Loop\n    fullName: System.Linq.Expressions.Expression.Loop\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget)\n    name: Loop\n    fullName: System.Linq.Expressions.Expression.Loop\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget)\n  nameWithType: Expression.Loop(Expression, LabelTarget)\n- uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.LabelTarget)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Loop(Expression, LabelTarget, LabelTarget)\n  fullName: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression, System.Linq.Expressions.LabelTarget, System.Linq.Expressions.LabelTarget)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.LabelTarget)\n    name: Loop\n    fullName: System.Linq.Expressions.Expression.Loop\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.LabelTarget)\n    name: Loop\n    fullName: System.Linq.Expressions.Expression.Loop\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.LabelTarget)\n  nameWithType: Expression.Loop(Expression, LabelTarget, LabelTarget)\n- uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: MakeBinary(ExpressionType, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: MakeBinary\n    fullName: System.Linq.Expressions.Expression.MakeBinary\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ExpressionType\n    name: ExpressionType\n    fullName: System.Linq.Expressions.ExpressionType\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: MakeBinary\n    fullName: System.Linq.Expressions.Expression.MakeBinary\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ExpressionType\n    name: ExpressionType\n    fullName: System.Linq.Expressions.ExpressionType\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.MakeBinary(ExpressionType, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MakeBinary(ExpressionType, Expression, Expression, Boolean, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Boolean, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n    name: MakeBinary\n    fullName: System.Linq.Expressions.Expression.MakeBinary\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ExpressionType\n    name: ExpressionType\n    fullName: System.Linq.Expressions.ExpressionType\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n    name: MakeBinary\n    fullName: System.Linq.Expressions.Expression.MakeBinary\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ExpressionType\n    name: ExpressionType\n    fullName: System.Linq.Expressions.ExpressionType\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  nameWithType: Expression.MakeBinary(ExpressionType, Expression, Expression, Boolean, MethodInfo)\n- uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MakeBinary(ExpressionType, Expression, Expression, Boolean, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Boolean, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: MakeBinary\n    fullName: System.Linq.Expressions.Expression.MakeBinary\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ExpressionType\n    name: ExpressionType\n    fullName: System.Linq.Expressions.ExpressionType\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: MakeBinary\n    fullName: System.Linq.Expressions.Expression.MakeBinary\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ExpressionType\n    name: ExpressionType\n    fullName: System.Linq.Expressions.ExpressionType\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.MakeBinary(ExpressionType, Expression, Expression, Boolean, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.MakeCatchBlock(System.Type,System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MakeCatchBlock(Type, ParameterExpression, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.MakeCatchBlock(System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MakeCatchBlock(System.Type,System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: MakeCatchBlock\n    fullName: System.Linq.Expressions.Expression.MakeCatchBlock\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MakeCatchBlock(System.Type,System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: MakeCatchBlock\n    fullName: System.Linq.Expressions.Expression.MakeCatchBlock\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MakeCatchBlock(System.Type,System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.MakeCatchBlock(Type, ParameterExpression, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.MakeGoto(System.Linq.Expressions.GotoExpressionKind,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MakeGoto(GotoExpressionKind, LabelTarget, Expression, Type)\n  fullName: System.Linq.Expressions.Expression.MakeGoto(System.Linq.Expressions.GotoExpressionKind, System.Linq.Expressions.LabelTarget, System.Linq.Expressions.Expression, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MakeGoto(System.Linq.Expressions.GotoExpressionKind,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n    name: MakeGoto\n    fullName: System.Linq.Expressions.Expression.MakeGoto\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.GotoExpressionKind\n    name: GotoExpressionKind\n    fullName: System.Linq.Expressions.GotoExpressionKind\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MakeGoto(System.Linq.Expressions.GotoExpressionKind,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n    name: MakeGoto\n    fullName: System.Linq.Expressions.Expression.MakeGoto\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.GotoExpressionKind\n    name: GotoExpressionKind\n    fullName: System.Linq.Expressions.GotoExpressionKind\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MakeGoto(System.Linq.Expressions.GotoExpressionKind,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n  nameWithType: Expression.MakeGoto(GotoExpressionKind, LabelTarget, Expression, Type)\n- uid: System.Linq.Expressions.Expression.MakeIndex(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MakeIndex(Expression, PropertyInfo, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.MakeIndex(System.Linq.Expressions.Expression, System.Reflection.PropertyInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.MakeIndex(System.Linq.Expressions.Expression, System.Reflection.PropertyInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: MakeIndex(Expression, PropertyInfo, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MakeIndex(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: MakeIndex\n    fullName: System.Linq.Expressions.Expression.MakeIndex\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.PropertyInfo\n    name: PropertyInfo\n    fullName: System.Reflection.PropertyInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MakeIndex(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: MakeIndex\n    fullName: System.Linq.Expressions.Expression.MakeIndex\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.PropertyInfo\n    name: PropertyInfo\n    fullName: System.Reflection.PropertyInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MakeIndex(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.MakeIndex(Expression, PropertyInfo, IEnumerable<Expression>)\n  nameWithType.vb: Expression.MakeIndex(Expression, PropertyInfo, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.MakeMemberAccess(System.Linq.Expressions.Expression,System.Reflection.MemberInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MakeMemberAccess(Expression, MemberInfo)\n  fullName: System.Linq.Expressions.Expression.MakeMemberAccess(System.Linq.Expressions.Expression, System.Reflection.MemberInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MakeMemberAccess(System.Linq.Expressions.Expression,System.Reflection.MemberInfo)\n    name: MakeMemberAccess\n    fullName: System.Linq.Expressions.Expression.MakeMemberAccess\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MakeMemberAccess(System.Linq.Expressions.Expression,System.Reflection.MemberInfo)\n    name: MakeMemberAccess\n    fullName: System.Linq.Expressions.Expression.MakeMemberAccess\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MakeMemberAccess(System.Linq.Expressions.Expression,System.Reflection.MemberInfo)\n  nameWithType: Expression.MakeMemberAccess(Expression, MemberInfo)\n- uid: System.Linq.Expressions.Expression.MakeTry(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.CatchBlock})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MakeTry(Type, Expression, Expression, Expression, IEnumerable<CatchBlock>)\n  fullName: System.Linq.Expressions.Expression.MakeTry(System.Type, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.CatchBlock>)\n  fullname.vb: System.Linq.Expressions.Expression.MakeTry(System.Type, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.CatchBlock))\n  name.vb: MakeTry(Type, Expression, Expression, Expression, IEnumerable(Of CatchBlock))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MakeTry(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.CatchBlock})\n    name: MakeTry\n    fullName: System.Linq.Expressions.Expression.MakeTry\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.CatchBlock\n    name: CatchBlock\n    fullName: System.Linq.Expressions.CatchBlock\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MakeTry(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.CatchBlock})\n    name: MakeTry\n    fullName: System.Linq.Expressions.Expression.MakeTry\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.CatchBlock\n    name: CatchBlock\n    fullName: System.Linq.Expressions.CatchBlock\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MakeTry(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.CatchBlock})\n  nameWithType: Expression.MakeTry(Type, Expression, Expression, Expression, IEnumerable<CatchBlock>)\n  nameWithType.vb: Expression.MakeTry(Type, Expression, Expression, Expression, IEnumerable(Of CatchBlock))\n- uid: System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MakeUnary(ExpressionType, Expression, Type)\n  fullName: System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType, System.Linq.Expressions.Expression, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type)\n    name: MakeUnary\n    fullName: System.Linq.Expressions.Expression.MakeUnary\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ExpressionType\n    name: ExpressionType\n    fullName: System.Linq.Expressions.ExpressionType\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type)\n    name: MakeUnary\n    fullName: System.Linq.Expressions.Expression.MakeUnary\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ExpressionType\n    name: ExpressionType\n    fullName: System.Linq.Expressions.ExpressionType\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type)\n  nameWithType: Expression.MakeUnary(ExpressionType, Expression, Type)\n- uid: System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MakeUnary(ExpressionType, Expression, Type, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType, System.Linq.Expressions.Expression, System.Type, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n    name: MakeUnary\n    fullName: System.Linq.Expressions.Expression.MakeUnary\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ExpressionType\n    name: ExpressionType\n    fullName: System.Linq.Expressions.ExpressionType\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n    name: MakeUnary\n    fullName: System.Linq.Expressions.Expression.MakeUnary\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ExpressionType\n    name: ExpressionType\n    fullName: System.Linq.Expressions.ExpressionType\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n  nameWithType: Expression.MakeUnary(ExpressionType, Expression, Type, MethodInfo)\n- uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MemberBind(MemberInfo, IEnumerable<MemberBinding>)\n  fullName: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.MemberBinding>)\n  fullname.vb: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.MemberBinding))\n  name.vb: MemberBind(MemberInfo, IEnumerable(Of MemberBinding))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n    name: MemberBind\n    fullName: System.Linq.Expressions.Expression.MemberBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.MemberBinding\n    name: MemberBinding\n    fullName: System.Linq.Expressions.MemberBinding\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n    name: MemberBind\n    fullName: System.Linq.Expressions.Expression.MemberBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.MemberBinding\n    name: MemberBinding\n    fullName: System.Linq.Expressions.MemberBinding\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n  nameWithType: Expression.MemberBind(MemberInfo, IEnumerable<MemberBinding>)\n  nameWithType.vb: Expression.MemberBind(MemberInfo, IEnumerable(Of MemberBinding))\n- uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Linq.Expressions.MemberBinding[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MemberBind(MemberInfo, MemberBinding[])\n  fullName: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo, System.Linq.Expressions.MemberBinding[])\n  fullname.vb: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo, System.Linq.Expressions.MemberBinding())\n  name.vb: MemberBind(MemberInfo, MemberBinding())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Linq.Expressions.MemberBinding[])\n    name: MemberBind\n    fullName: System.Linq.Expressions.Expression.MemberBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.MemberBinding\n    name: MemberBinding\n    fullName: System.Linq.Expressions.MemberBinding\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Linq.Expressions.MemberBinding[])\n    name: MemberBind\n    fullName: System.Linq.Expressions.Expression.MemberBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.MemberBinding\n    name: MemberBinding\n    fullName: System.Linq.Expressions.MemberBinding\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Linq.Expressions.MemberBinding[])\n  nameWithType: Expression.MemberBind(MemberInfo, MemberBinding[])\n  nameWithType.vb: Expression.MemberBind(MemberInfo, MemberBinding())\n- uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MemberBind(MethodInfo, IEnumerable<MemberBinding>)\n  fullName: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.MemberBinding>)\n  fullname.vb: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.MemberBinding))\n  name.vb: MemberBind(MethodInfo, IEnumerable(Of MemberBinding))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n    name: MemberBind\n    fullName: System.Linq.Expressions.Expression.MemberBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.MemberBinding\n    name: MemberBinding\n    fullName: System.Linq.Expressions.MemberBinding\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n    name: MemberBind\n    fullName: System.Linq.Expressions.Expression.MemberBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.MemberBinding\n    name: MemberBinding\n    fullName: System.Linq.Expressions.MemberBinding\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n  nameWithType: Expression.MemberBind(MethodInfo, IEnumerable<MemberBinding>)\n  nameWithType.vb: Expression.MemberBind(MethodInfo, IEnumerable(Of MemberBinding))\n- uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Linq.Expressions.MemberBinding[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MemberBind(MethodInfo, MemberBinding[])\n  fullName: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo, System.Linq.Expressions.MemberBinding[])\n  fullname.vb: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo, System.Linq.Expressions.MemberBinding())\n  name.vb: MemberBind(MethodInfo, MemberBinding())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Linq.Expressions.MemberBinding[])\n    name: MemberBind\n    fullName: System.Linq.Expressions.Expression.MemberBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.MemberBinding\n    name: MemberBinding\n    fullName: System.Linq.Expressions.MemberBinding\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Linq.Expressions.MemberBinding[])\n    name: MemberBind\n    fullName: System.Linq.Expressions.Expression.MemberBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.MemberBinding\n    name: MemberBinding\n    fullName: System.Linq.Expressions.MemberBinding\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Linq.Expressions.MemberBinding[])\n  nameWithType: Expression.MemberBind(MethodInfo, MemberBinding[])\n  nameWithType.vb: Expression.MemberBind(MethodInfo, MemberBinding())\n- uid: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MemberInit(NewExpression, IEnumerable<MemberBinding>)\n  fullName: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.MemberBinding>)\n  fullname.vb: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.MemberBinding))\n  name.vb: MemberInit(NewExpression, IEnumerable(Of MemberBinding))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n    name: MemberInit\n    fullName: System.Linq.Expressions.Expression.MemberInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.MemberBinding\n    name: MemberBinding\n    fullName: System.Linq.Expressions.MemberBinding\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n    name: MemberInit\n    fullName: System.Linq.Expressions.Expression.MemberInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.MemberBinding\n    name: MemberBinding\n    fullName: System.Linq.Expressions.MemberBinding\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n  nameWithType: Expression.MemberInit(NewExpression, IEnumerable<MemberBinding>)\n  nameWithType.vb: Expression.MemberInit(NewExpression, IEnumerable(Of MemberBinding))\n- uid: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.MemberBinding[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: MemberInit(NewExpression, MemberBinding[])\n  fullName: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression, System.Linq.Expressions.MemberBinding[])\n  fullname.vb: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression, System.Linq.Expressions.MemberBinding())\n  name.vb: MemberInit(NewExpression, MemberBinding())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.MemberBinding[])\n    name: MemberInit\n    fullName: System.Linq.Expressions.Expression.MemberInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.MemberBinding\n    name: MemberBinding\n    fullName: System.Linq.Expressions.MemberBinding\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.MemberBinding[])\n    name: MemberInit\n    fullName: System.Linq.Expressions.Expression.MemberInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.MemberBinding\n    name: MemberBinding\n    fullName: System.Linq.Expressions.MemberBinding\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.MemberBinding[])\n  nameWithType: Expression.MemberInit(NewExpression, MemberBinding[])\n  nameWithType.vb: Expression.MemberInit(NewExpression, MemberBinding())\n- uid: System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Modulo(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Modulo\n    fullName: System.Linq.Expressions.Expression.Modulo\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Modulo\n    fullName: System.Linq.Expressions.Expression.Modulo\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Modulo(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Modulo(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Modulo\n    fullName: System.Linq.Expressions.Expression.Modulo\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Modulo\n    fullName: System.Linq.Expressions.Expression.Modulo\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.Modulo(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ModuloAssign(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: ModuloAssign\n    fullName: System.Linq.Expressions.Expression.ModuloAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: ModuloAssign\n    fullName: System.Linq.Expressions.Expression.ModuloAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.ModuloAssign(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ModuloAssign(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: ModuloAssign\n    fullName: System.Linq.Expressions.Expression.ModuloAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: ModuloAssign\n    fullName: System.Linq.Expressions.Expression.ModuloAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.ModuloAssign(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ModuloAssign(Expression, Expression, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: ModuloAssign\n    fullName: System.Linq.Expressions.Expression.ModuloAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: ModuloAssign\n    fullName: System.Linq.Expressions.Expression.ModuloAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.ModuloAssign(Expression, Expression, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Multiply(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Multiply\n    fullName: System.Linq.Expressions.Expression.Multiply\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Multiply\n    fullName: System.Linq.Expressions.Expression.Multiply\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Multiply(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Multiply(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Multiply\n    fullName: System.Linq.Expressions.Expression.Multiply\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Multiply\n    fullName: System.Linq.Expressions.Expression.Multiply\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.Multiply(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: MultiplyAssign(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: MultiplyAssign\n    fullName: System.Linq.Expressions.Expression.MultiplyAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: MultiplyAssign\n    fullName: System.Linq.Expressions.Expression.MultiplyAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.MultiplyAssign(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MultiplyAssign(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: MultiplyAssign\n    fullName: System.Linq.Expressions.Expression.MultiplyAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: MultiplyAssign\n    fullName: System.Linq.Expressions.Expression.MultiplyAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.MultiplyAssign(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MultiplyAssign(Expression, Expression, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: MultiplyAssign\n    fullName: System.Linq.Expressions.Expression.MultiplyAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: MultiplyAssign\n    fullName: System.Linq.Expressions.Expression.MultiplyAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.MultiplyAssign(Expression, Expression, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: MultiplyAssignChecked(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: MultiplyAssignChecked\n    fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: MultiplyAssignChecked\n    fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.MultiplyAssignChecked(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MultiplyAssignChecked(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: MultiplyAssignChecked\n    fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: MultiplyAssignChecked\n    fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.MultiplyAssignChecked(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MultiplyAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: MultiplyAssignChecked\n    fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: MultiplyAssignChecked\n    fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.MultiplyAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: MultiplyChecked(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: MultiplyChecked\n    fullName: System.Linq.Expressions.Expression.MultiplyChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: MultiplyChecked\n    fullName: System.Linq.Expressions.Expression.MultiplyChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.MultiplyChecked(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MultiplyChecked(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: MultiplyChecked\n    fullName: System.Linq.Expressions.Expression.MultiplyChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: MultiplyChecked\n    fullName: System.Linq.Expressions.Expression.MultiplyChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.MultiplyChecked(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Negate(Expression)\n  fullName: System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression)\n    name: Negate\n    fullName: System.Linq.Expressions.Expression.Negate\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression)\n    name: Negate\n    fullName: System.Linq.Expressions.Expression.Negate\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression)\n  nameWithType: Expression.Negate(Expression)\n- uid: System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Negate(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Negate\n    fullName: System.Linq.Expressions.Expression.Negate\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Negate\n    fullName: System.Linq.Expressions.Expression.Negate\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.Negate(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: NegateChecked(Expression)\n  fullName: System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression)\n    name: NegateChecked\n    fullName: System.Linq.Expressions.Expression.NegateChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression)\n    name: NegateChecked\n    fullName: System.Linq.Expressions.Expression.NegateChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression)\n  nameWithType: Expression.NegateChecked(Expression)\n- uid: System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: NegateChecked(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: NegateChecked\n    fullName: System.Linq.Expressions.Expression.NegateChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: NegateChecked\n    fullName: System.Linq.Expressions.Expression.NegateChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.NegateChecked(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: New(ConstructorInfo)\n  fullName: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo)\n    name: New\n    fullName: System.Linq.Expressions.Expression.New\n  - name: (\n    fullName: (\n  - uid: System.Reflection.ConstructorInfo\n    name: ConstructorInfo\n    fullName: System.Reflection.ConstructorInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo)\n    name: New\n    fullName: System.Linq.Expressions.Expression.New\n  - name: (\n    fullName: (\n  - uid: System.Reflection.ConstructorInfo\n    name: ConstructorInfo\n    fullName: System.Reflection.ConstructorInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo)\n  nameWithType: Expression.New(ConstructorInfo)\n- uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: New(ConstructorInfo, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: New(ConstructorInfo, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: New\n    fullName: System.Linq.Expressions.Expression.New\n  - name: (\n    fullName: (\n  - uid: System.Reflection.ConstructorInfo\n    name: ConstructorInfo\n    fullName: System.Reflection.ConstructorInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: New\n    fullName: System.Linq.Expressions.Expression.New\n  - name: (\n    fullName: (\n  - uid: System.Reflection.ConstructorInfo\n    name: ConstructorInfo\n    fullName: System.Reflection.ConstructorInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.New(ConstructorInfo, IEnumerable<Expression>)\n  nameWithType.vb: Expression.New(ConstructorInfo, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: New(ConstructorInfo, IEnumerable<Expression>, IEnumerable<MemberInfo>)\n  fullName: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>, System.Collections.Generic.IEnumerable<System.Reflection.MemberInfo>)\n  fullname.vb: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression), System.Collections.Generic.IEnumerable(Of System.Reflection.MemberInfo))\n  name.vb: New(ConstructorInfo, IEnumerable(Of Expression), IEnumerable(Of MemberInfo))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo})\n    name: New\n    fullName: System.Linq.Expressions.Expression.New\n  - name: (\n    fullName: (\n  - uid: System.Reflection.ConstructorInfo\n    name: ConstructorInfo\n    fullName: System.Reflection.ConstructorInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo})\n    name: New\n    fullName: System.Linq.Expressions.Expression.New\n  - name: (\n    fullName: (\n  - uid: System.Reflection.ConstructorInfo\n    name: ConstructorInfo\n    fullName: System.Reflection.ConstructorInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo})\n  nameWithType: Expression.New(ConstructorInfo, IEnumerable<Expression>, IEnumerable<MemberInfo>)\n  nameWithType.vb: Expression.New(ConstructorInfo, IEnumerable(Of Expression), IEnumerable(Of MemberInfo))\n- uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Reflection.MemberInfo[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: New(ConstructorInfo, IEnumerable<Expression>, MemberInfo[])\n  fullName: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>, System.Reflection.MemberInfo[])\n  fullname.vb: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression), System.Reflection.MemberInfo())\n  name.vb: New(ConstructorInfo, IEnumerable(Of Expression), MemberInfo())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Reflection.MemberInfo[])\n    name: New\n    fullName: System.Linq.Expressions.Expression.New\n  - name: (\n    fullName: (\n  - uid: System.Reflection.ConstructorInfo\n    name: ConstructorInfo\n    fullName: System.Reflection.ConstructorInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Reflection.MemberInfo[])\n    name: New\n    fullName: System.Linq.Expressions.Expression.New\n  - name: (\n    fullName: (\n  - uid: System.Reflection.ConstructorInfo\n    name: ConstructorInfo\n    fullName: System.Reflection.ConstructorInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Reflection.MemberInfo[])\n  nameWithType: Expression.New(ConstructorInfo, IEnumerable<Expression>, MemberInfo[])\n  nameWithType.vb: Expression.New(ConstructorInfo, IEnumerable(Of Expression), MemberInfo())\n- uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: New(ConstructorInfo, Expression[])\n  fullName: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo, System.Linq.Expressions.Expression())\n  name.vb: New(ConstructorInfo, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Linq.Expressions.Expression[])\n    name: New\n    fullName: System.Linq.Expressions.Expression.New\n  - name: (\n    fullName: (\n  - uid: System.Reflection.ConstructorInfo\n    name: ConstructorInfo\n    fullName: System.Reflection.ConstructorInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Linq.Expressions.Expression[])\n    name: New\n    fullName: System.Linq.Expressions.Expression.New\n  - name: (\n    fullName: (\n  - uid: System.Reflection.ConstructorInfo\n    name: ConstructorInfo\n    fullName: System.Reflection.ConstructorInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.New(ConstructorInfo, Expression[])\n  nameWithType.vb: Expression.New(ConstructorInfo, Expression())\n- uid: System.Linq.Expressions.Expression.New(System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: New(Type)\n  fullName: System.Linq.Expressions.Expression.New(System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.New(System.Type)\n    name: New\n    fullName: System.Linq.Expressions.Expression.New\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.New(System.Type)\n    name: New\n    fullName: System.Linq.Expressions.Expression.New\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.New(System.Type)\n  nameWithType: Expression.New(Type)\n- uid: System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: NewArrayBounds(Type, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.NewArrayBounds(System.Type, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.NewArrayBounds(System.Type, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: NewArrayBounds(Type, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: NewArrayBounds\n    fullName: System.Linq.Expressions.Expression.NewArrayBounds\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: NewArrayBounds\n    fullName: System.Linq.Expressions.Expression.NewArrayBounds\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.NewArrayBounds(Type, IEnumerable<Expression>)\n  nameWithType.vb: Expression.NewArrayBounds(Type, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: NewArrayBounds(Type, Expression[])\n  fullName: System.Linq.Expressions.Expression.NewArrayBounds(System.Type, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.NewArrayBounds(System.Type, System.Linq.Expressions.Expression())\n  name.vb: NewArrayBounds(Type, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Linq.Expressions.Expression[])\n    name: NewArrayBounds\n    fullName: System.Linq.Expressions.Expression.NewArrayBounds\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Linq.Expressions.Expression[])\n    name: NewArrayBounds\n    fullName: System.Linq.Expressions.Expression.NewArrayBounds\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.NewArrayBounds(Type, Expression[])\n  nameWithType.vb: Expression.NewArrayBounds(Type, Expression())\n- uid: System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: NewArrayInit(Type, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.NewArrayInit(System.Type, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.NewArrayInit(System.Type, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: NewArrayInit(Type, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: NewArrayInit\n    fullName: System.Linq.Expressions.Expression.NewArrayInit\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: NewArrayInit\n    fullName: System.Linq.Expressions.Expression.NewArrayInit\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.NewArrayInit(Type, IEnumerable<Expression>)\n  nameWithType.vb: Expression.NewArrayInit(Type, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: NewArrayInit(Type, Expression[])\n  fullName: System.Linq.Expressions.Expression.NewArrayInit(System.Type, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.NewArrayInit(System.Type, System.Linq.Expressions.Expression())\n  name.vb: NewArrayInit(Type, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Linq.Expressions.Expression[])\n    name: NewArrayInit\n    fullName: System.Linq.Expressions.Expression.NewArrayInit\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Linq.Expressions.Expression[])\n    name: NewArrayInit\n    fullName: System.Linq.Expressions.Expression.NewArrayInit\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.NewArrayInit(Type, Expression[])\n  nameWithType.vb: Expression.NewArrayInit(Type, Expression())\n- uid: System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Not(Expression)\n  fullName: System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression)\n    name: Not\n    fullName: System.Linq.Expressions.Expression.Not\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression)\n    name: Not\n    fullName: System.Linq.Expressions.Expression.Not\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression)\n  nameWithType: Expression.Not(Expression)\n- uid: System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Not(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Not\n    fullName: System.Linq.Expressions.Expression.Not\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Not\n    fullName: System.Linq.Expressions.Expression.Not\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.Not(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: NotEqual(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: NotEqual\n    fullName: System.Linq.Expressions.Expression.NotEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: NotEqual\n    fullName: System.Linq.Expressions.Expression.NotEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.NotEqual(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: NotEqual(Expression, Expression, Boolean, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Boolean, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n    name: NotEqual\n    fullName: System.Linq.Expressions.Expression.NotEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n    name: NotEqual\n    fullName: System.Linq.Expressions.Expression.NotEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  nameWithType: Expression.NotEqual(Expression, Expression, Boolean, MethodInfo)\n- uid: System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: OnesComplement(Expression)\n  fullName: System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression)\n    name: OnesComplement\n    fullName: System.Linq.Expressions.Expression.OnesComplement\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression)\n    name: OnesComplement\n    fullName: System.Linq.Expressions.Expression.OnesComplement\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression)\n  nameWithType: Expression.OnesComplement(Expression)\n- uid: System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: OnesComplement(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: OnesComplement\n    fullName: System.Linq.Expressions.Expression.OnesComplement\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: OnesComplement\n    fullName: System.Linq.Expressions.Expression.OnesComplement\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.OnesComplement(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Or(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Or\n    fullName: System.Linq.Expressions.Expression.Or\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Or\n    fullName: System.Linq.Expressions.Expression.Or\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Or(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Or(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Or\n    fullName: System.Linq.Expressions.Expression.Or\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Or\n    fullName: System.Linq.Expressions.Expression.Or\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.Or(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: OrAssign(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: OrAssign\n    fullName: System.Linq.Expressions.Expression.OrAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: OrAssign\n    fullName: System.Linq.Expressions.Expression.OrAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.OrAssign(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: OrAssign(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: OrAssign\n    fullName: System.Linq.Expressions.Expression.OrAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: OrAssign\n    fullName: System.Linq.Expressions.Expression.OrAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.OrAssign(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: OrAssign(Expression, Expression, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: OrAssign\n    fullName: System.Linq.Expressions.Expression.OrAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: OrAssign\n    fullName: System.Linq.Expressions.Expression.OrAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.OrAssign(Expression, Expression, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: OrElse(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: OrElse\n    fullName: System.Linq.Expressions.Expression.OrElse\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: OrElse\n    fullName: System.Linq.Expressions.Expression.OrElse\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.OrElse(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: OrElse(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: OrElse\n    fullName: System.Linq.Expressions.Expression.OrElse\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: OrElse\n    fullName: System.Linq.Expressions.Expression.OrElse\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.OrElse(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.Parameter(System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Parameter(Type)\n  fullName: System.Linq.Expressions.Expression.Parameter(System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Parameter(System.Type)\n    name: Parameter\n    fullName: System.Linq.Expressions.Expression.Parameter\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Parameter(System.Type)\n    name: Parameter\n    fullName: System.Linq.Expressions.Expression.Parameter\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Parameter(System.Type)\n  nameWithType: Expression.Parameter(Type)\n- uid: System.Linq.Expressions.Expression.Parameter(System.Type,System.String)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Parameter(Type, String)\n  fullName: System.Linq.Expressions.Expression.Parameter(System.Type, System.String)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Parameter(System.Type,System.String)\n    name: Parameter\n    fullName: System.Linq.Expressions.Expression.Parameter\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Parameter(System.Type,System.String)\n    name: Parameter\n    fullName: System.Linq.Expressions.Expression.Parameter\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Parameter(System.Type,System.String)\n  nameWithType: Expression.Parameter(Type, String)\n- uid: System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: PostDecrementAssign(Expression)\n  fullName: System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression)\n    name: PostDecrementAssign\n    fullName: System.Linq.Expressions.Expression.PostDecrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression)\n    name: PostDecrementAssign\n    fullName: System.Linq.Expressions.Expression.PostDecrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression)\n  nameWithType: Expression.PostDecrementAssign(Expression)\n- uid: System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: PostDecrementAssign(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: PostDecrementAssign\n    fullName: System.Linq.Expressions.Expression.PostDecrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: PostDecrementAssign\n    fullName: System.Linq.Expressions.Expression.PostDecrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.PostDecrementAssign(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: PostIncrementAssign(Expression)\n  fullName: System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression)\n    name: PostIncrementAssign\n    fullName: System.Linq.Expressions.Expression.PostIncrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression)\n    name: PostIncrementAssign\n    fullName: System.Linq.Expressions.Expression.PostIncrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression)\n  nameWithType: Expression.PostIncrementAssign(Expression)\n- uid: System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: PostIncrementAssign(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: PostIncrementAssign\n    fullName: System.Linq.Expressions.Expression.PostIncrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: PostIncrementAssign\n    fullName: System.Linq.Expressions.Expression.PostIncrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.PostIncrementAssign(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Power(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Power\n    fullName: System.Linq.Expressions.Expression.Power\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Power\n    fullName: System.Linq.Expressions.Expression.Power\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Power(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Power(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Power\n    fullName: System.Linq.Expressions.Expression.Power\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Power\n    fullName: System.Linq.Expressions.Expression.Power\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.Power(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: PowerAssign(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: PowerAssign\n    fullName: System.Linq.Expressions.Expression.PowerAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: PowerAssign\n    fullName: System.Linq.Expressions.Expression.PowerAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.PowerAssign(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: PowerAssign(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: PowerAssign\n    fullName: System.Linq.Expressions.Expression.PowerAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: PowerAssign\n    fullName: System.Linq.Expressions.Expression.PowerAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.PowerAssign(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: PowerAssign(Expression, Expression, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: PowerAssign\n    fullName: System.Linq.Expressions.Expression.PowerAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: PowerAssign\n    fullName: System.Linq.Expressions.Expression.PowerAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.PowerAssign(Expression, Expression, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: PreDecrementAssign(Expression)\n  fullName: System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression)\n    name: PreDecrementAssign\n    fullName: System.Linq.Expressions.Expression.PreDecrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression)\n    name: PreDecrementAssign\n    fullName: System.Linq.Expressions.Expression.PreDecrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression)\n  nameWithType: Expression.PreDecrementAssign(Expression)\n- uid: System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: PreDecrementAssign(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: PreDecrementAssign\n    fullName: System.Linq.Expressions.Expression.PreDecrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: PreDecrementAssign\n    fullName: System.Linq.Expressions.Expression.PreDecrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.PreDecrementAssign(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: PreIncrementAssign(Expression)\n  fullName: System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression)\n    name: PreIncrementAssign\n    fullName: System.Linq.Expressions.Expression.PreIncrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression)\n    name: PreIncrementAssign\n    fullName: System.Linq.Expressions.Expression.PreIncrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression)\n  nameWithType: Expression.PreIncrementAssign(Expression)\n- uid: System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: PreIncrementAssign(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: PreIncrementAssign\n    fullName: System.Linq.Expressions.Expression.PreIncrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: PreIncrementAssign\n    fullName: System.Linq.Expressions.Expression.PreIncrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.PreIncrementAssign(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Property(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Property\n    fullName: System.Linq.Expressions.Expression.Property\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Property\n    fullName: System.Linq.Expressions.Expression.Property\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.Property(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Property(Expression, PropertyInfo)\n  fullName: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.Reflection.PropertyInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo)\n    name: Property\n    fullName: System.Linq.Expressions.Expression.Property\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.PropertyInfo\n    name: PropertyInfo\n    fullName: System.Reflection.PropertyInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo)\n    name: Property\n    fullName: System.Linq.Expressions.Expression.Property\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.PropertyInfo\n    name: PropertyInfo\n    fullName: System.Reflection.PropertyInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo)\n  nameWithType: Expression.Property(Expression, PropertyInfo)\n- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Property(Expression, PropertyInfo, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.Reflection.PropertyInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.Reflection.PropertyInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: Property(Expression, PropertyInfo, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Property\n    fullName: System.Linq.Expressions.Expression.Property\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.PropertyInfo\n    name: PropertyInfo\n    fullName: System.Reflection.PropertyInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Property\n    fullName: System.Linq.Expressions.Expression.Property\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.PropertyInfo\n    name: PropertyInfo\n    fullName: System.Reflection.PropertyInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.Property(Expression, PropertyInfo, IEnumerable<Expression>)\n  nameWithType.vb: Expression.Property(Expression, PropertyInfo, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Property(Expression, PropertyInfo, Expression[])\n  fullName: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.Reflection.PropertyInfo, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.Reflection.PropertyInfo, System.Linq.Expressions.Expression())\n  name.vb: Property(Expression, PropertyInfo, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Linq.Expressions.Expression[])\n    name: Property\n    fullName: System.Linq.Expressions.Expression.Property\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.PropertyInfo\n    name: PropertyInfo\n    fullName: System.Reflection.PropertyInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Linq.Expressions.Expression[])\n    name: Property\n    fullName: System.Linq.Expressions.Expression.Property\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.PropertyInfo\n    name: PropertyInfo\n    fullName: System.Reflection.PropertyInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.Property(Expression, PropertyInfo, Expression[])\n  nameWithType.vb: Expression.Property(Expression, PropertyInfo, Expression())\n- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Property(Expression, String)\n  fullName: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.String)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String)\n    name: Property\n    fullName: System.Linq.Expressions.Expression.Property\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String)\n    name: Property\n    fullName: System.Linq.Expressions.Expression.Property\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String)\n  nameWithType: Expression.Property(Expression, String)\n- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Property(Expression, String, Expression[])\n  fullName: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.String, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.String, System.Linq.Expressions.Expression())\n  name.vb: Property(Expression, String, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String,System.Linq.Expressions.Expression[])\n    name: Property\n    fullName: System.Linq.Expressions.Expression.Property\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String,System.Linq.Expressions.Expression[])\n    name: Property\n    fullName: System.Linq.Expressions.Expression.Property\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.Property(Expression, String, Expression[])\n  nameWithType.vb: Expression.Property(Expression, String, Expression())\n- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Type,System.String)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Property(Expression, Type, String)\n  fullName: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.Type, System.String)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Type,System.String)\n    name: Property\n    fullName: System.Linq.Expressions.Expression.Property\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Type,System.String)\n    name: Property\n    fullName: System.Linq.Expressions.Expression.Property\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Type,System.String)\n  nameWithType: Expression.Property(Expression, Type, String)\n- uid: System.Linq.Expressions.Expression.PropertyOrField(System.Linq.Expressions.Expression,System.String)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: PropertyOrField(Expression, String)\n  fullName: System.Linq.Expressions.Expression.PropertyOrField(System.Linq.Expressions.Expression, System.String)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.PropertyOrField(System.Linq.Expressions.Expression,System.String)\n    name: PropertyOrField\n    fullName: System.Linq.Expressions.Expression.PropertyOrField\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.PropertyOrField(System.Linq.Expressions.Expression,System.String)\n    name: PropertyOrField\n    fullName: System.Linq.Expressions.Expression.PropertyOrField\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.PropertyOrField(System.Linq.Expressions.Expression,System.String)\n  nameWithType: Expression.PropertyOrField(Expression, String)\n- uid: System.Linq.Expressions.Expression.Quote(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Quote(Expression)\n  fullName: System.Linq.Expressions.Expression.Quote(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Quote(System.Linq.Expressions.Expression)\n    name: Quote\n    fullName: System.Linq.Expressions.Expression.Quote\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Quote(System.Linq.Expressions.Expression)\n    name: Quote\n    fullName: System.Linq.Expressions.Expression.Quote\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Quote(System.Linq.Expressions.Expression)\n  nameWithType: Expression.Quote(Expression)\n- uid: System.Linq.Expressions.Expression.Reduce\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Reduce()\n  fullName: System.Linq.Expressions.Expression.Reduce()\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Reduce\n    name: Reduce\n    fullName: System.Linq.Expressions.Expression.Reduce\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Reduce\n    name: Reduce\n    fullName: System.Linq.Expressions.Expression.Reduce\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Reduce\n  nameWithType: Expression.Reduce()\n- uid: System.Linq.Expressions.Expression.ReduceAndCheck\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ReduceAndCheck()\n  fullName: System.Linq.Expressions.Expression.ReduceAndCheck()\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ReduceAndCheck\n    name: ReduceAndCheck\n    fullName: System.Linq.Expressions.Expression.ReduceAndCheck\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ReduceAndCheck\n    name: ReduceAndCheck\n    fullName: System.Linq.Expressions.Expression.ReduceAndCheck\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ReduceAndCheck\n  nameWithType: Expression.ReduceAndCheck()\n- uid: System.Linq.Expressions.Expression.ReduceExtensions\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ReduceExtensions()\n  fullName: System.Linq.Expressions.Expression.ReduceExtensions()\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ReduceExtensions\n    name: ReduceExtensions\n    fullName: System.Linq.Expressions.Expression.ReduceExtensions\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ReduceExtensions\n    name: ReduceExtensions\n    fullName: System.Linq.Expressions.Expression.ReduceExtensions\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ReduceExtensions\n  nameWithType: Expression.ReduceExtensions()\n- uid: System.Linq.Expressions.Expression.ReferenceEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ReferenceEqual(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.ReferenceEqual(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ReferenceEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: ReferenceEqual\n    fullName: System.Linq.Expressions.Expression.ReferenceEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ReferenceEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: ReferenceEqual\n    fullName: System.Linq.Expressions.Expression.ReferenceEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ReferenceEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.ReferenceEqual(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.ReferenceNotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ReferenceNotEqual(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.ReferenceNotEqual(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ReferenceNotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: ReferenceNotEqual\n    fullName: System.Linq.Expressions.Expression.ReferenceNotEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ReferenceNotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: ReferenceNotEqual\n    fullName: System.Linq.Expressions.Expression.ReferenceNotEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ReferenceNotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.ReferenceNotEqual(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Rethrow\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Rethrow()\n  fullName: System.Linq.Expressions.Expression.Rethrow()\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Rethrow\n    name: Rethrow\n    fullName: System.Linq.Expressions.Expression.Rethrow\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Rethrow\n    name: Rethrow\n    fullName: System.Linq.Expressions.Expression.Rethrow\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Rethrow\n  nameWithType: Expression.Rethrow()\n- uid: System.Linq.Expressions.Expression.Rethrow(System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Rethrow(Type)\n  fullName: System.Linq.Expressions.Expression.Rethrow(System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Rethrow(System.Type)\n    name: Rethrow\n    fullName: System.Linq.Expressions.Expression.Rethrow\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Rethrow(System.Type)\n    name: Rethrow\n    fullName: System.Linq.Expressions.Expression.Rethrow\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Rethrow(System.Type)\n  nameWithType: Expression.Rethrow(Type)\n- uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Return(LabelTarget)\n  fullName: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget)\n    name: Return\n    fullName: System.Linq.Expressions.Expression.Return\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget)\n    name: Return\n    fullName: System.Linq.Expressions.Expression.Return\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget)\n  nameWithType: Expression.Return(LabelTarget)\n- uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Return(LabelTarget, Expression)\n  fullName: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n    name: Return\n    fullName: System.Linq.Expressions.Expression.Return\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n    name: Return\n    fullName: System.Linq.Expressions.Expression.Return\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Return(LabelTarget, Expression)\n- uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Return(LabelTarget, Expression, Type)\n  fullName: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget, System.Linq.Expressions.Expression, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n    name: Return\n    fullName: System.Linq.Expressions.Expression.Return\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n    name: Return\n    fullName: System.Linq.Expressions.Expression.Return\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n  nameWithType: Expression.Return(LabelTarget, Expression, Type)\n- uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Return(LabelTarget, Type)\n  fullName: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Type)\n    name: Return\n    fullName: System.Linq.Expressions.Expression.Return\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Type)\n    name: Return\n    fullName: System.Linq.Expressions.Expression.Return\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Type)\n  nameWithType: Expression.Return(LabelTarget, Type)\n- uid: System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: RightShift(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: RightShift\n    fullName: System.Linq.Expressions.Expression.RightShift\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: RightShift\n    fullName: System.Linq.Expressions.Expression.RightShift\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.RightShift(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: RightShift(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: RightShift\n    fullName: System.Linq.Expressions.Expression.RightShift\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: RightShift\n    fullName: System.Linq.Expressions.Expression.RightShift\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.RightShift(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: RightShiftAssign(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: RightShiftAssign\n    fullName: System.Linq.Expressions.Expression.RightShiftAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: RightShiftAssign\n    fullName: System.Linq.Expressions.Expression.RightShiftAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.RightShiftAssign(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: RightShiftAssign(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: RightShiftAssign\n    fullName: System.Linq.Expressions.Expression.RightShiftAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: RightShiftAssign\n    fullName: System.Linq.Expressions.Expression.RightShiftAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.RightShiftAssign(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: RightShiftAssign(Expression, Expression, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: RightShiftAssign\n    fullName: System.Linq.Expressions.Expression.RightShiftAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: RightShiftAssign\n    fullName: System.Linq.Expressions.Expression.RightShiftAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.RightShiftAssign(Expression, Expression, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.RuntimeVariables(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: RuntimeVariables(IEnumerable<ParameterExpression>)\n  fullName: System.Linq.Expressions.Expression.RuntimeVariables(System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)\n  fullname.vb: System.Linq.Expressions.Expression.RuntimeVariables(System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))\n  name.vb: RuntimeVariables(IEnumerable(Of ParameterExpression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.RuntimeVariables(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: RuntimeVariables\n    fullName: System.Linq.Expressions.Expression.RuntimeVariables\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.RuntimeVariables(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: RuntimeVariables\n    fullName: System.Linq.Expressions.Expression.RuntimeVariables\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.RuntimeVariables(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  nameWithType: Expression.RuntimeVariables(IEnumerable<ParameterExpression>)\n  nameWithType.vb: Expression.RuntimeVariables(IEnumerable(Of ParameterExpression))\n- uid: System.Linq.Expressions.Expression.RuntimeVariables(System.Linq.Expressions.ParameterExpression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: RuntimeVariables(ParameterExpression[])\n  fullName: System.Linq.Expressions.Expression.RuntimeVariables(System.Linq.Expressions.ParameterExpression[])\n  fullname.vb: System.Linq.Expressions.Expression.RuntimeVariables(System.Linq.Expressions.ParameterExpression())\n  name.vb: RuntimeVariables(ParameterExpression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.RuntimeVariables(System.Linq.Expressions.ParameterExpression[])\n    name: RuntimeVariables\n    fullName: System.Linq.Expressions.Expression.RuntimeVariables\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.RuntimeVariables(System.Linq.Expressions.ParameterExpression[])\n    name: RuntimeVariables\n    fullName: System.Linq.Expressions.Expression.RuntimeVariables\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.RuntimeVariables(System.Linq.Expressions.ParameterExpression[])\n  nameWithType: Expression.RuntimeVariables(ParameterExpression[])\n  nameWithType.vb: Expression.RuntimeVariables(ParameterExpression())\n- uid: System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Subtract(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Subtract\n    fullName: System.Linq.Expressions.Expression.Subtract\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Subtract\n    fullName: System.Linq.Expressions.Expression.Subtract\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Subtract(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Subtract(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Subtract\n    fullName: System.Linq.Expressions.Expression.Subtract\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Subtract\n    fullName: System.Linq.Expressions.Expression.Subtract\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.Subtract(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: SubtractAssign(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: SubtractAssign\n    fullName: System.Linq.Expressions.Expression.SubtractAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: SubtractAssign\n    fullName: System.Linq.Expressions.Expression.SubtractAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.SubtractAssign(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: SubtractAssign(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: SubtractAssign\n    fullName: System.Linq.Expressions.Expression.SubtractAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: SubtractAssign\n    fullName: System.Linq.Expressions.Expression.SubtractAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.SubtractAssign(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: SubtractAssign(Expression, Expression, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: SubtractAssign\n    fullName: System.Linq.Expressions.Expression.SubtractAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: SubtractAssign\n    fullName: System.Linq.Expressions.Expression.SubtractAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.SubtractAssign(Expression, Expression, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: SubtractAssignChecked(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: SubtractAssignChecked\n    fullName: System.Linq.Expressions.Expression.SubtractAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: SubtractAssignChecked\n    fullName: System.Linq.Expressions.Expression.SubtractAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.SubtractAssignChecked(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: SubtractAssignChecked(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: SubtractAssignChecked\n    fullName: System.Linq.Expressions.Expression.SubtractAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: SubtractAssignChecked\n    fullName: System.Linq.Expressions.Expression.SubtractAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.SubtractAssignChecked(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: SubtractAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: SubtractAssignChecked\n    fullName: System.Linq.Expressions.Expression.SubtractAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: SubtractAssignChecked\n    fullName: System.Linq.Expressions.Expression.SubtractAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.SubtractAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: SubtractChecked(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: SubtractChecked\n    fullName: System.Linq.Expressions.Expression.SubtractChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: SubtractChecked\n    fullName: System.Linq.Expressions.Expression.SubtractChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.SubtractChecked(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: SubtractChecked(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: SubtractChecked\n    fullName: System.Linq.Expressions.Expression.SubtractChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: SubtractChecked\n    fullName: System.Linq.Expressions.Expression.SubtractChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.SubtractChecked(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Switch(Expression, Expression, SwitchCase[])\n  fullName: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.SwitchCase[])\n  fullname.vb: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.SwitchCase())\n  name.vb: Switch(Expression, Expression, SwitchCase())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])\n    name: Switch\n    fullName: System.Linq.Expressions.Expression.Switch\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.SwitchCase\n    name: SwitchCase\n    fullName: System.Linq.Expressions.SwitchCase\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])\n    name: Switch\n    fullName: System.Linq.Expressions.Expression.Switch\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.SwitchCase\n    name: SwitchCase\n    fullName: System.Linq.Expressions.SwitchCase\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])\n  nameWithType: Expression.Switch(Expression, Expression, SwitchCase[])\n  nameWithType.vb: Expression.Switch(Expression, Expression, SwitchCase())\n- uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Switch(Expression, Expression, MethodInfo, IEnumerable<SwitchCase>)\n  fullName: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.SwitchCase>)\n  fullname.vb: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.SwitchCase))\n  name.vb: Switch(Expression, Expression, MethodInfo, IEnumerable(Of SwitchCase))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})\n    name: Switch\n    fullName: System.Linq.Expressions.Expression.Switch\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.SwitchCase\n    name: SwitchCase\n    fullName: System.Linq.Expressions.SwitchCase\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})\n    name: Switch\n    fullName: System.Linq.Expressions.Expression.Switch\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.SwitchCase\n    name: SwitchCase\n    fullName: System.Linq.Expressions.SwitchCase\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})\n  nameWithType: Expression.Switch(Expression, Expression, MethodInfo, IEnumerable<SwitchCase>)\n  nameWithType.vb: Expression.Switch(Expression, Expression, MethodInfo, IEnumerable(Of SwitchCase))\n- uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Switch(Expression, Expression, MethodInfo, SwitchCase[])\n  fullName: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.SwitchCase[])\n  fullname.vb: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.SwitchCase())\n  name.vb: Switch(Expression, Expression, MethodInfo, SwitchCase())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])\n    name: Switch\n    fullName: System.Linq.Expressions.Expression.Switch\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.SwitchCase\n    name: SwitchCase\n    fullName: System.Linq.Expressions.SwitchCase\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])\n    name: Switch\n    fullName: System.Linq.Expressions.Expression.Switch\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.SwitchCase\n    name: SwitchCase\n    fullName: System.Linq.Expressions.SwitchCase\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])\n  nameWithType: Expression.Switch(Expression, Expression, MethodInfo, SwitchCase[])\n  nameWithType.vb: Expression.Switch(Expression, Expression, MethodInfo, SwitchCase())\n- uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Switch(Expression, SwitchCase[])\n  fullName: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression, System.Linq.Expressions.SwitchCase[])\n  fullname.vb: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression, System.Linq.Expressions.SwitchCase())\n  name.vb: Switch(Expression, SwitchCase())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])\n    name: Switch\n    fullName: System.Linq.Expressions.Expression.Switch\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.SwitchCase\n    name: SwitchCase\n    fullName: System.Linq.Expressions.SwitchCase\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])\n    name: Switch\n    fullName: System.Linq.Expressions.Expression.Switch\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.SwitchCase\n    name: SwitchCase\n    fullName: System.Linq.Expressions.SwitchCase\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])\n  nameWithType: Expression.Switch(Expression, SwitchCase[])\n  nameWithType.vb: Expression.Switch(Expression, SwitchCase())\n- uid: System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Switch(Type, Expression, Expression, MethodInfo, IEnumerable<SwitchCase>)\n  fullName: System.Linq.Expressions.Expression.Switch(System.Type, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.SwitchCase>)\n  fullname.vb: System.Linq.Expressions.Expression.Switch(System.Type, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.SwitchCase))\n  name.vb: Switch(Type, Expression, Expression, MethodInfo, IEnumerable(Of SwitchCase))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})\n    name: Switch\n    fullName: System.Linq.Expressions.Expression.Switch\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.SwitchCase\n    name: SwitchCase\n    fullName: System.Linq.Expressions.SwitchCase\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})\n    name: Switch\n    fullName: System.Linq.Expressions.Expression.Switch\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.SwitchCase\n    name: SwitchCase\n    fullName: System.Linq.Expressions.SwitchCase\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})\n  nameWithType: Expression.Switch(Type, Expression, Expression, MethodInfo, IEnumerable<SwitchCase>)\n  nameWithType.vb: Expression.Switch(Type, Expression, Expression, MethodInfo, IEnumerable(Of SwitchCase))\n- uid: System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Switch(Type, Expression, Expression, MethodInfo, SwitchCase[])\n  fullName: System.Linq.Expressions.Expression.Switch(System.Type, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.SwitchCase[])\n  fullname.vb: System.Linq.Expressions.Expression.Switch(System.Type, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.SwitchCase())\n  name.vb: Switch(Type, Expression, Expression, MethodInfo, SwitchCase())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])\n    name: Switch\n    fullName: System.Linq.Expressions.Expression.Switch\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.SwitchCase\n    name: SwitchCase\n    fullName: System.Linq.Expressions.SwitchCase\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])\n    name: Switch\n    fullName: System.Linq.Expressions.Expression.Switch\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.SwitchCase\n    name: SwitchCase\n    fullName: System.Linq.Expressions.SwitchCase\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])\n  nameWithType: Expression.Switch(Type, Expression, Expression, MethodInfo, SwitchCase[])\n  nameWithType.vb: Expression.Switch(Type, Expression, Expression, MethodInfo, SwitchCase())\n- uid: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: SwitchCase(Expression, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: SwitchCase(Expression, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: SwitchCase\n    fullName: System.Linq.Expressions.Expression.SwitchCase\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: SwitchCase\n    fullName: System.Linq.Expressions.Expression.SwitchCase\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.SwitchCase(Expression, IEnumerable<Expression>)\n  nameWithType.vb: Expression.SwitchCase(Expression, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: SwitchCase(Expression, Expression[])\n  fullName: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression())\n  name.vb: SwitchCase(Expression, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n    name: SwitchCase\n    fullName: System.Linq.Expressions.Expression.SwitchCase\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n    name: SwitchCase\n    fullName: System.Linq.Expressions.Expression.SwitchCase\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.SwitchCase(Expression, Expression[])\n  nameWithType.vb: Expression.SwitchCase(Expression, Expression())\n- uid: System.Linq.Expressions.Expression.SymbolDocument(System.String)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: SymbolDocument(String)\n  fullName: System.Linq.Expressions.Expression.SymbolDocument(System.String)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.SymbolDocument(System.String)\n    name: SymbolDocument\n    fullName: System.Linq.Expressions.Expression.SymbolDocument\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.SymbolDocument(System.String)\n    name: SymbolDocument\n    fullName: System.Linq.Expressions.Expression.SymbolDocument\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.SymbolDocument(System.String)\n  nameWithType: Expression.SymbolDocument(String)\n- uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: SymbolDocument(String, Guid)\n  fullName: System.Linq.Expressions.Expression.SymbolDocument(System.String, System.Guid)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid)\n    name: SymbolDocument\n    fullName: System.Linq.Expressions.Expression.SymbolDocument\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid)\n    name: SymbolDocument\n    fullName: System.Linq.Expressions.Expression.SymbolDocument\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid)\n  nameWithType: Expression.SymbolDocument(String, Guid)\n- uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: SymbolDocument(String, Guid, Guid)\n  fullName: System.Linq.Expressions.Expression.SymbolDocument(System.String, System.Guid, System.Guid)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid)\n    name: SymbolDocument\n    fullName: System.Linq.Expressions.Expression.SymbolDocument\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid)\n    name: SymbolDocument\n    fullName: System.Linq.Expressions.Expression.SymbolDocument\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid)\n  nameWithType: Expression.SymbolDocument(String, Guid, Guid)\n- uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid,System.Guid)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: SymbolDocument(String, Guid, Guid, Guid)\n  fullName: System.Linq.Expressions.Expression.SymbolDocument(System.String, System.Guid, System.Guid, System.Guid)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid,System.Guid)\n    name: SymbolDocument\n    fullName: System.Linq.Expressions.Expression.SymbolDocument\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid,System.Guid)\n    name: SymbolDocument\n    fullName: System.Linq.Expressions.Expression.SymbolDocument\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid,System.Guid)\n  nameWithType: Expression.SymbolDocument(String, Guid, Guid, Guid)\n- uid: System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Throw(Expression)\n  fullName: System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression)\n    name: Throw\n    fullName: System.Linq.Expressions.Expression.Throw\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression)\n    name: Throw\n    fullName: System.Linq.Expressions.Expression.Throw\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression)\n  nameWithType: Expression.Throw(Expression)\n- uid: System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Throw(Expression, Type)\n  fullName: System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression,System.Type)\n    name: Throw\n    fullName: System.Linq.Expressions.Expression.Throw\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression,System.Type)\n    name: Throw\n    fullName: System.Linq.Expressions.Expression.Throw\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression,System.Type)\n  nameWithType: Expression.Throw(Expression, Type)\n- uid: System.Linq.Expressions.Expression.ToString\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ToString()\n  fullName: System.Linq.Expressions.Expression.ToString()\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ToString\n    name: ToString\n    fullName: System.Linq.Expressions.Expression.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ToString\n    name: ToString\n    fullName: System.Linq.Expressions.Expression.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ToString\n  nameWithType: Expression.ToString()\n- uid: System.Linq.Expressions.Expression.TryCatch(System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: TryCatch(Expression, CatchBlock[])\n  fullName: System.Linq.Expressions.Expression.TryCatch(System.Linq.Expressions.Expression, System.Linq.Expressions.CatchBlock[])\n  fullname.vb: System.Linq.Expressions.Expression.TryCatch(System.Linq.Expressions.Expression, System.Linq.Expressions.CatchBlock())\n  name.vb: TryCatch(Expression, CatchBlock())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.TryCatch(System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])\n    name: TryCatch\n    fullName: System.Linq.Expressions.Expression.TryCatch\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.CatchBlock\n    name: CatchBlock\n    fullName: System.Linq.Expressions.CatchBlock\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.TryCatch(System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])\n    name: TryCatch\n    fullName: System.Linq.Expressions.Expression.TryCatch\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.CatchBlock\n    name: CatchBlock\n    fullName: System.Linq.Expressions.CatchBlock\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.TryCatch(System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])\n  nameWithType: Expression.TryCatch(Expression, CatchBlock[])\n  nameWithType.vb: Expression.TryCatch(Expression, CatchBlock())\n- uid: System.Linq.Expressions.Expression.TryCatchFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: TryCatchFinally(Expression, Expression, CatchBlock[])\n  fullName: System.Linq.Expressions.Expression.TryCatchFinally(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.CatchBlock[])\n  fullname.vb: System.Linq.Expressions.Expression.TryCatchFinally(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.CatchBlock())\n  name.vb: TryCatchFinally(Expression, Expression, CatchBlock())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.TryCatchFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])\n    name: TryCatchFinally\n    fullName: System.Linq.Expressions.Expression.TryCatchFinally\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.CatchBlock\n    name: CatchBlock\n    fullName: System.Linq.Expressions.CatchBlock\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.TryCatchFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])\n    name: TryCatchFinally\n    fullName: System.Linq.Expressions.Expression.TryCatchFinally\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.CatchBlock\n    name: CatchBlock\n    fullName: System.Linq.Expressions.CatchBlock\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.TryCatchFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])\n  nameWithType: Expression.TryCatchFinally(Expression, Expression, CatchBlock[])\n  nameWithType.vb: Expression.TryCatchFinally(Expression, Expression, CatchBlock())\n- uid: System.Linq.Expressions.Expression.TryFault(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: TryFault(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.TryFault(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.TryFault(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: TryFault\n    fullName: System.Linq.Expressions.Expression.TryFault\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.TryFault(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: TryFault\n    fullName: System.Linq.Expressions.Expression.TryFault\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.TryFault(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.TryFault(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.TryFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: TryFinally(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.TryFinally(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.TryFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: TryFinally\n    fullName: System.Linq.Expressions.Expression.TryFinally\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.TryFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: TryFinally\n    fullName: System.Linq.Expressions.Expression.TryFinally\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.TryFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.TryFinally(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.TryGetActionType(System.Type[],System.Type@)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: TryGetActionType(Type[], Type)\n  fullName: System.Linq.Expressions.Expression.TryGetActionType(System.Type[], System.Type)\n  fullname.vb: System.Linq.Expressions.Expression.TryGetActionType(System.Type(), System.Type)\n  name.vb: TryGetActionType(Type(), Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.TryGetActionType(System.Type[],System.Type@)\n    name: TryGetActionType\n    fullName: System.Linq.Expressions.Expression.TryGetActionType\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.TryGetActionType(System.Type[],System.Type@)\n    name: TryGetActionType\n    fullName: System.Linq.Expressions.Expression.TryGetActionType\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.TryGetActionType(System.Type[],System.Type@)\n  nameWithType: Expression.TryGetActionType(Type[], Type)\n  nameWithType.vb: Expression.TryGetActionType(Type(), Type)\n- uid: System.Linq.Expressions.Expression.TryGetFuncType(System.Type[],System.Type@)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: TryGetFuncType(Type[], Type)\n  fullName: System.Linq.Expressions.Expression.TryGetFuncType(System.Type[], System.Type)\n  fullname.vb: System.Linq.Expressions.Expression.TryGetFuncType(System.Type(), System.Type)\n  name.vb: TryGetFuncType(Type(), Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.TryGetFuncType(System.Type[],System.Type@)\n    name: TryGetFuncType\n    fullName: System.Linq.Expressions.Expression.TryGetFuncType\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.TryGetFuncType(System.Type[],System.Type@)\n    name: TryGetFuncType\n    fullName: System.Linq.Expressions.Expression.TryGetFuncType\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.TryGetFuncType(System.Type[],System.Type@)\n  nameWithType: Expression.TryGetFuncType(Type[], Type)\n  nameWithType.vb: Expression.TryGetFuncType(Type(), Type)\n- uid: System.Linq.Expressions.Expression.TypeAs(System.Linq.Expressions.Expression,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: TypeAs(Expression, Type)\n  fullName: System.Linq.Expressions.Expression.TypeAs(System.Linq.Expressions.Expression, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.TypeAs(System.Linq.Expressions.Expression,System.Type)\n    name: TypeAs\n    fullName: System.Linq.Expressions.Expression.TypeAs\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.TypeAs(System.Linq.Expressions.Expression,System.Type)\n    name: TypeAs\n    fullName: System.Linq.Expressions.Expression.TypeAs\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.TypeAs(System.Linq.Expressions.Expression,System.Type)\n  nameWithType: Expression.TypeAs(Expression, Type)\n- uid: System.Linq.Expressions.Expression.TypeEqual(System.Linq.Expressions.Expression,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: TypeEqual(Expression, Type)\n  fullName: System.Linq.Expressions.Expression.TypeEqual(System.Linq.Expressions.Expression, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.TypeEqual(System.Linq.Expressions.Expression,System.Type)\n    name: TypeEqual\n    fullName: System.Linq.Expressions.Expression.TypeEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.TypeEqual(System.Linq.Expressions.Expression,System.Type)\n    name: TypeEqual\n    fullName: System.Linq.Expressions.Expression.TypeEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.TypeEqual(System.Linq.Expressions.Expression,System.Type)\n  nameWithType: Expression.TypeEqual(Expression, Type)\n- uid: System.Linq.Expressions.Expression.TypeIs(System.Linq.Expressions.Expression,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: TypeIs(Expression, Type)\n  fullName: System.Linq.Expressions.Expression.TypeIs(System.Linq.Expressions.Expression, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.TypeIs(System.Linq.Expressions.Expression,System.Type)\n    name: TypeIs\n    fullName: System.Linq.Expressions.Expression.TypeIs\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.TypeIs(System.Linq.Expressions.Expression,System.Type)\n    name: TypeIs\n    fullName: System.Linq.Expressions.Expression.TypeIs\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.TypeIs(System.Linq.Expressions.Expression,System.Type)\n  nameWithType: Expression.TypeIs(Expression, Type)\n- uid: System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: UnaryPlus(Expression)\n  fullName: System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression)\n    name: UnaryPlus\n    fullName: System.Linq.Expressions.Expression.UnaryPlus\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression)\n    name: UnaryPlus\n    fullName: System.Linq.Expressions.Expression.UnaryPlus\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression)\n  nameWithType: Expression.UnaryPlus(Expression)\n- uid: System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: UnaryPlus(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: UnaryPlus\n    fullName: System.Linq.Expressions.Expression.UnaryPlus\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: UnaryPlus\n    fullName: System.Linq.Expressions.Expression.UnaryPlus\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.UnaryPlus(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.Unbox(System.Linq.Expressions.Expression,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Unbox(Expression, Type)\n  fullName: System.Linq.Expressions.Expression.Unbox(System.Linq.Expressions.Expression, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Unbox(System.Linq.Expressions.Expression,System.Type)\n    name: Unbox\n    fullName: System.Linq.Expressions.Expression.Unbox\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Unbox(System.Linq.Expressions.Expression,System.Type)\n    name: Unbox\n    fullName: System.Linq.Expressions.Expression.Unbox\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Unbox(System.Linq.Expressions.Expression,System.Type)\n  nameWithType: Expression.Unbox(Expression, Type)\n- uid: System.Linq.Expressions.Expression.Variable(System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Variable(Type)\n  fullName: System.Linq.Expressions.Expression.Variable(System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Variable(System.Type)\n    name: Variable\n    fullName: System.Linq.Expressions.Expression.Variable\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Variable(System.Type)\n    name: Variable\n    fullName: System.Linq.Expressions.Expression.Variable\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Variable(System.Type)\n  nameWithType: Expression.Variable(Type)\n- uid: System.Linq.Expressions.Expression.Variable(System.Type,System.String)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Variable(Type, String)\n  fullName: System.Linq.Expressions.Expression.Variable(System.Type, System.String)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Variable(System.Type,System.String)\n    name: Variable\n    fullName: System.Linq.Expressions.Expression.Variable\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Variable(System.Type,System.String)\n    name: Variable\n    fullName: System.Linq.Expressions.Expression.Variable\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Variable(System.Type,System.String)\n  nameWithType: Expression.Variable(Type, String)\n- uid: System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: VisitChildren(ExpressionVisitor)\n  fullName: System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)\n    name: VisitChildren\n    fullName: System.Linq.Expressions.Expression.VisitChildren\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ExpressionVisitor\n    name: ExpressionVisitor\n    fullName: System.Linq.Expressions.ExpressionVisitor\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)\n    name: VisitChildren\n    fullName: System.Linq.Expressions.Expression.VisitChildren\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ExpressionVisitor\n    name: ExpressionVisitor\n    fullName: System.Linq.Expressions.ExpressionVisitor\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)\n  nameWithType: Expression.VisitChildren(ExpressionVisitor)\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Linq.Expressions.Expression.NodeType\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: NodeType\n  fullName: System.Linq.Expressions.Expression.NodeType\n  commentId: P:System.Linq.Expressions.Expression.NodeType\n  nameWithType: Expression.NodeType\n- uid: System.Linq.Expressions.ExpressionType\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: ExpressionType\n  fullName: System.Linq.Expressions.ExpressionType\n  commentId: T:System.Linq.Expressions.ExpressionType\n  nameWithType: ExpressionType\n- uid: System.Linq.Expressions.LabelTarget\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: LabelTarget\n  fullName: System.Linq.Expressions.LabelTarget\n  commentId: T:System.Linq.Expressions.LabelTarget\n  nameWithType: LabelTarget\n- uid: System.Linq.Expressions.Expression.Type\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Type\n  fullName: System.Linq.Expressions.Expression.Type\n  commentId: P:System.Linq.Expressions.Expression.Type\n  nameWithType: Expression.Type\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  fullName: System.Type\n  commentId: T:System.Type\n  nameWithType: Type\n- uid: System.Linq.Expressions.Expression.Accept(System.Linq.Expressions.ExpressionVisitor)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Accept(ExpressionVisitor)\n  fullName: System.Linq.Expressions.Expression.Accept(System.Linq.Expressions.ExpressionVisitor)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Accept(System.Linq.Expressions.ExpressionVisitor)\n    name: Accept\n    fullName: System.Linq.Expressions.Expression.Accept\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ExpressionVisitor\n    name: ExpressionVisitor\n    fullName: System.Linq.Expressions.ExpressionVisitor\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Accept(System.Linq.Expressions.ExpressionVisitor)\n    name: Accept\n    fullName: System.Linq.Expressions.Expression.Accept\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ExpressionVisitor\n    name: ExpressionVisitor\n    fullName: System.Linq.Expressions.ExpressionVisitor\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Accept(System.Linq.Expressions.ExpressionVisitor)\n  nameWithType: Expression.Accept(ExpressionVisitor)\n- uid: System.Linq.Expressions.ExpressionVisitor\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: ExpressionVisitor\n  fullName: System.Linq.Expressions.ExpressionVisitor\n  commentId: T:System.Linq.Expressions.ExpressionVisitor\n  nameWithType: ExpressionVisitor\n- uid: System.Linq.Expressions.LabelExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: LabelExpression\n  fullName: System.Linq.Expressions.LabelExpression\n  commentId: T:System.Linq.Expressions.LabelExpression\n  nameWithType: LabelExpression\n"}