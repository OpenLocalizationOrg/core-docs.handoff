{"nodes":[{"pos":[371,388],"content":"SubjectIdentifier","needQuote":true,"nodes":[{"content":"SubjectIdentifier","pos":[0,17]}]},{"pos":[2236,2240],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[4051,4056],"content":"Value","needQuote":true,"nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[6629,6662],"content":"System.Security.Cryptography.Pkcs","needQuote":true,"nodes":[{"content":"System.Security.Cryptography.Pkcs","pos":[0,33]}]},{"pos":[6874,6880],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7040,7050],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[7145,7153],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[7222,7223],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7250,7251],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7321,7329],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[7398,7399],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7426,7427],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7610,7624],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[7743,7749],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[7816,7817],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7867,7873],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7933,7934],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8017,8023],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[8090,8091],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8141,8147],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8207,8208],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8422,8444],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[8592,8598],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[8665,8666],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8716,8722],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[8783,8784]},{"pos":[8839,8845],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8905,8906],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9003,9009],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[9076,9077],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9127,9133],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[9194,9195]},{"pos":[9250,9256],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9316,9317],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9562,9593],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[9759,9774],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[9850,9851],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9901,9907],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[9968,9969]},{"pos":[10024,10030],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10090,10091],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10197,10212],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[10288,10289],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10339,10345],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[10406,10407]},{"pos":[10462,10468],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10528,10529],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10759,10772],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[10873,10884],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[10956,10957],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10984,10985],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11058,11069],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[11141,11142],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11169,11170],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11345,11354],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[11447,11454],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[11522,11523],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11550,11551],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11620,11627],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[11695,11696],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11723,11724],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11899,11916],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[12025,12040],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[12116,12117],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12144,12145],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12222,12237],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[12313,12314],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12341,12342],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12487,12493],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[12693,12714],"content":"SubjectIdentifierType","needQuote":true,"nodes":[{"content":"SubjectIdentifierType","pos":[0,21]}]}],"content":"items:\n- uid: System.Security.Cryptography.Pkcs.SubjectIdentifier\n  commentId: T:System.Security.Cryptography.Pkcs.SubjectIdentifier\n  id: SubjectIdentifier\n  parent: System.Security.Cryptography.Pkcs\n  children:\n  - System.Security.Cryptography.Pkcs.SubjectIdentifier.Type\n  - System.Security.Cryptography.Pkcs.SubjectIdentifier.Value\n  langs:\n  - csharp\n  - vb\n  name: SubjectIdentifier\n  fullName: System.Security.Cryptography.Pkcs.SubjectIdentifier\n  type: Class\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SubjectIdentifier\n    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n    startLine: 215\n  assemblies:\n  - System.Security.Cryptography.Pkcs\n  namespace: System.Security.Cryptography.Pkcs\n  summary: \"\\n<p>The <xref href=\\\"System.Security.Cryptography.Pkcs.SubjectIdentifier\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class defines the type of the identifier of a subject, such as a <xref href=\\\"System.Security.Cryptography.Pkcs.CmsSigner\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or a <xref href=\\\"System.Security.Cryptography.Pkcs.CmsRecipient\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.  The subject can be identified by the certificate issuer and serial number or the subject key.</p>\\n\"\n  syntax:\n    content: public sealed class SubjectIdentifier\n    content.vb: Public NotInheritable Class SubjectIdentifier\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: SubjectIdentifier\n- uid: System.Security.Cryptography.Pkcs.SubjectIdentifier.Type\n  commentId: P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Type\n  id: Type\n  parent: System.Security.Cryptography.Pkcs.SubjectIdentifier\n  langs:\n  - csharp\n  - vb\n  name: Type\n  fullName: System.Security.Cryptography.Pkcs.SubjectIdentifier.Type\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Type\n    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n    startLine: 218\n  assemblies:\n  - System.Security.Cryptography.Pkcs\n  namespace: System.Security.Cryptography.Pkcs\n  summary: \"\\n<p>The <xref href=\\\"System.Security.Cryptography.Pkcs.SubjectIdentifier.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property retrieves the type of subject identifier. The subject can be identified by the certificate issuer and serial number or the subject key.</p>\\n\"\n  syntax:\n    content: >-\n      public SubjectIdentifierType Type\n\n      {\n          [CompilerGenerated]\n          get;\n      }\n    content.vb: Public ReadOnly Property Type As SubjectIdentifierType\n    parameters: []\n    return:\n      type: System.Security.Cryptography.Pkcs.SubjectIdentifierType\n      description: \"\\n<p>A member of the <xref href=\\\"System.Security.Cryptography.Pkcs.SubjectIdentifierType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>  enumeration that identifies the type of subject.</p>\\n\"\n  seealso:\n  - type: System.Security.Cryptography.Pkcs.SubjectIdentifier.Value\n    commentId: P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Value\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: SubjectIdentifier.Type\n- uid: System.Security.Cryptography.Pkcs.SubjectIdentifier.Value\n  commentId: P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Value\n  id: Value\n  parent: System.Security.Cryptography.Pkcs.SubjectIdentifier\n  langs:\n  - csharp\n  - vb\n  name: Value\n  fullName: System.Security.Cryptography.Pkcs.SubjectIdentifier.Value\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Value\n    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n    startLine: 219\n  assemblies:\n  - System.Security.Cryptography.Pkcs\n  namespace: System.Security.Cryptography.Pkcs\n  summary: \"\\n<p>The <xref href=\\\"System.Security.Cryptography.Pkcs.SubjectIdentifier.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property retrieves the value of the subject identifier. Use the <xref href=\\\"System.Security.Cryptography.Pkcs.SubjectIdentifier.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property to determine the type of subject identifier, and use the <xref href=\\\"System.Security.Cryptography.Pkcs.SubjectIdentifier.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property to retrieve the corresponding value.</p>\\n\"\n  syntax:\n    content: >-\n      public object Value\n\n      {\n          [CompilerGenerated]\n          get;\n      }\n    content.vb: Public ReadOnly Property Value As Object\n    parameters: []\n    return:\n      type: System.Object\n      description: \"\\n<p>An <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that represents the value of the subject identifier. This <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> can be one of the following objects as determined by the <xref href=\\\"System.Security.Cryptography.Pkcs.SubjectIdentifier.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property.</p>\\n<p>\\n<xref href=\\\"System.Security.Cryptography.Pkcs.SubjectIdentifier.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property</p>\\n<p>Object</p>\\n<table><tbody><tr><td>\\n<p>IssuerAndSerialNumber</p>\\n</td><td>\\n<p>\\n<xref href=\\\"System.Security.Cryptography.Xml.X509IssuerSerial\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>\\n</p>\\n</td></tr><tr><td>\\n<p>SubjectKeyIdentifier</p>\\n</td><td>\\n<p>\\n<xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>\\n</p>\\n</td></tr></tbody></table>\\n\"\n  seealso:\n  - type: System.Security.Cryptography.Pkcs.SubjectIdentifier.Type\n    commentId: P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Type\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: SubjectIdentifier.Value\nreferences:\n- uid: System.Security.Cryptography.Pkcs\n  isExternal: false\n  name: System.Security.Cryptography.Pkcs\n  fullName: System.Security.Cryptography.Pkcs\n  commentId: N:System.Security.Cryptography.Pkcs\n  nameWithType: System.Security.Cryptography.Pkcs\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Security.Cryptography.Pkcs.SubjectIdentifierType\n  parent: System.Security.Cryptography.Pkcs\n  isExternal: false\n  name: SubjectIdentifierType\n  fullName: System.Security.Cryptography.Pkcs.SubjectIdentifierType\n  commentId: T:System.Security.Cryptography.Pkcs.SubjectIdentifierType\n  nameWithType: SubjectIdentifierType\n"}