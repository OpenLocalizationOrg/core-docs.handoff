{"nodes":[{"pos":[454,470],"content":"GenericPrincipal","needQuote":true,"nodes":[{"content":"GenericPrincipal","pos":[0,16]}]},{"pos":[3474,3511],"content":"GenericPrincipal(IIdentity, String[])","needQuote":true,"nodes":[{"content":"GenericPrincipal(IIdentity, String[])","pos":[0,37]}]},{"content":"\\n&lt;p&gt;An array of role names to which the user represented by the &lt;em&gt;identity&lt;/em&gt; parameter belongs.","pos":[4754,4855],"source":"\\n<p>An array of role names to which the user represented by the <em>identity</em> parameter belongs."},{"content":"&lt;/p&gt;\\n","pos":[4856,4862],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;identity&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.","pos":[4981,5043],"source":"\\n<p>The <em>identity</em> parameter is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[5044,5050],"source":" </p>\\n"},{"pos":[5662,5670],"content":"Identity","needQuote":true,"nodes":[{"content":"Identity","pos":[0,8]}]},{"pos":[7350,7366],"content":"IsInRole(String)","needQuote":true,"nodes":[{"content":"IsInRole(String)","pos":[0,16]}]},{"content":"\\n&lt;p&gt;The name of the role for which to check membership.","pos":[8215,8271],"source":"\\n<p>The name of the role for which to check membership."},{"content":"&lt;/p&gt;\\n","pos":[8272,8278],"source":" </p>\\n"},{"pos":[8848,8873],"content":"System.Security.Principal","needQuote":true,"nodes":[{"content":"System.Security.Principal","pos":[0,25]}]},{"pos":[9061,9067],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9253,9268],"content":"ClaimsPrincipal","needQuote":true,"nodes":[{"content":"ClaimsPrincipal","pos":[0,15]}]},{"pos":[9514,9524],"content":"IPrincipal","needQuote":true,"nodes":[{"content":"IPrincipal","pos":[0,10]}]},{"pos":[9783,9789],"content":"Claims","needQuote":true,"nodes":[{"content":"Claims","pos":[0,6]}]},{"pos":[10095,10118],"content":"ClaimsPrincipalSelector","needQuote":true,"nodes":[{"content":"ClaimsPrincipalSelector","pos":[0,23]}]},{"pos":[10459,10466],"content":"Current","needQuote":true,"nodes":[{"content":"Current","pos":[0,7]}]},{"pos":[10775,10798],"content":"CustomSerializationData","needQuote":true,"nodes":[{"content":"CustomSerializationData","pos":[0,23]}]},{"pos":[11142,11152],"content":"Identities","needQuote":true,"nodes":[{"content":"Identities","pos":[0,10]}]},{"pos":[11470,11493],"content":"PrimaryIdentitySelector","needQuote":true,"nodes":[{"content":"PrimaryIdentitySelector","pos":[0,23]}]},{"pos":[11918,11960],"content":"AddIdentities(IEnumerable<ClaimsIdentity>)","needQuote":true,"nodes":[{"content":"AddIdentities(IEnumerable&lt;ClaimsIdentity&gt;)","pos":[0,42],"source":"AddIdentities(IEnumerable<ClaimsIdentity>)"}]},{"pos":[12478,12491],"content":"AddIdentities","needQuote":true,"nodes":[{"content":"AddIdentities","pos":[0,13]}]},{"pos":[12569,12570],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12647,12658],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[12743,12744],"content":"<","needQuote":true,"nodes":[]},{"pos":[12818,12832],"content":"ClaimsIdentity","needQuote":true,"nodes":[{"content":"ClaimsIdentity","pos":[0,14]}]},{"pos":[12927,12928],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13107,13120],"content":"AddIdentities","needQuote":true,"nodes":[{"content":"AddIdentities","pos":[0,13]}]},{"pos":[13198,13199],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13276,13287],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[13373,13376]},{"pos":[13457,13471],"content":"ClaimsIdentity","needQuote":true,"nodes":[{"content":"ClaimsIdentity","pos":[0,14]}]},{"pos":[13534,13535],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13562,13563],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14057,14084],"content":"AddIdentity(ClaimsIdentity)","needQuote":true,"nodes":[{"content":"AddIdentity(ClaimsIdentity)","pos":[0,27]}]},{"pos":[14311,14322],"content":"AddIdentity","needQuote":true,"nodes":[{"content":"AddIdentity","pos":[0,11]}]},{"pos":[14398,14399],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14473,14487],"content":"ClaimsIdentity","needQuote":true,"nodes":[{"content":"ClaimsIdentity","pos":[0,14]}]},{"pos":[14550,14551],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14688,14699],"content":"AddIdentity","needQuote":true,"nodes":[{"content":"AddIdentity","pos":[0,11]}]},{"pos":[14775,14776],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14850,14864],"content":"ClaimsIdentity","needQuote":true,"nodes":[{"content":"ClaimsIdentity","pos":[0,14]}]},{"pos":[14927,14928],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15239,15246],"content":"Clone()","needQuote":true,"nodes":[{"content":"Clone()","pos":[0,7]}]},{"pos":[15385,15390],"content":"Clone","needQuote":true,"nodes":[{"content":"Clone","pos":[0,5]}]},{"pos":[15460,15461],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15488,15489],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15581,15586],"content":"Clone","needQuote":true,"nodes":[{"content":"Clone","pos":[0,5]}]},{"pos":[15656,15657],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15684,15685],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15969,16003],"content":"CreateClaimsIdentity(BinaryReader)","needQuote":true,"nodes":[{"content":"CreateClaimsIdentity(BinaryReader)","pos":[0,34]}]},{"pos":[16218,16238],"content":"CreateClaimsIdentity","needQuote":true,"nodes":[{"content":"CreateClaimsIdentity","pos":[0,20]}]},{"pos":[16323,16324],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16383,16395],"content":"BinaryReader","needQuote":true,"nodes":[{"content":"BinaryReader","pos":[0,12]}]},{"pos":[16464,16465],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16596,16616],"content":"CreateClaimsIdentity","needQuote":true,"nodes":[{"content":"CreateClaimsIdentity","pos":[0,20]}]},{"pos":[16701,16702],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16761,16773],"content":"BinaryReader","needQuote":true,"nodes":[{"content":"BinaryReader","pos":[0,12]}]},{"pos":[16842,16843],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17204,17229],"content":"FindAll(Predicate<Claim>)","needQuote":true,"nodes":[{"content":"FindAll(Predicate&lt;Claim&gt;)","pos":[0,25],"source":"FindAll(Predicate<Claim>)"}]},{"pos":[17619,17626],"content":"FindAll","needQuote":true,"nodes":[{"content":"FindAll","pos":[0,7]}]},{"pos":[17698,17699],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17754,17763],"content":"Predicate","needQuote":true,"nodes":[{"content":"Predicate","pos":[0,9]}]},{"pos":[17826,17827],"content":"<","needQuote":true,"nodes":[]},{"pos":[17892,17897],"content":"Claim","needQuote":true,"nodes":[{"content":"Claim","pos":[0,5]}]},{"pos":[17983,17984],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18126,18133],"content":"FindAll","needQuote":true,"nodes":[{"content":"FindAll","pos":[0,7]}]},{"pos":[18205,18206],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18261,18270],"content":"Predicate","needQuote":true,"nodes":[{"content":"Predicate","pos":[0,9]}]},{"content":"(Of","pos":[18334,18337]},{"pos":[18409,18414],"content":"Claim","needQuote":true,"nodes":[{"content":"Claim","pos":[0,5]}]},{"pos":[18468,18469],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18496,18497],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18891,18906],"content":"FindAll(String)","needQuote":true,"nodes":[{"content":"FindAll(String)","pos":[0,15]}]},{"pos":[19077,19084],"content":"FindAll","needQuote":true,"nodes":[{"content":"FindAll","pos":[0,7]}]},{"pos":[19156,19157],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19207,19213],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[19273,19274],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19383,19390],"content":"FindAll","needQuote":true,"nodes":[{"content":"FindAll","pos":[0,7]}]},{"pos":[19462,19463],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19513,19519],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[19579,19580],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19902,19929],"content":"FindFirst(Predicate<Claim>)","needQuote":true,"nodes":[{"content":"FindFirst(Predicate&lt;Claim&gt;)","pos":[0,27],"source":"FindFirst(Predicate<Claim>)"}]},{"pos":[20327,20336],"content":"FindFirst","needQuote":true,"nodes":[{"content":"FindFirst","pos":[0,9]}]},{"pos":[20410,20411],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20466,20475],"content":"Predicate","needQuote":true,"nodes":[{"content":"Predicate","pos":[0,9]}]},{"pos":[20538,20539],"content":"<","needQuote":true,"nodes":[]},{"pos":[20604,20609],"content":"Claim","needQuote":true,"nodes":[{"content":"Claim","pos":[0,5]}]},{"pos":[20695,20696],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20840,20849],"content":"FindFirst","needQuote":true,"nodes":[{"content":"FindFirst","pos":[0,9]}]},{"pos":[20923,20924],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20979,20988],"content":"Predicate","needQuote":true,"nodes":[{"content":"Predicate","pos":[0,9]}]},{"content":"(Of","pos":[21052,21055]},{"pos":[21127,21132],"content":"Claim","needQuote":true,"nodes":[{"content":"Claim","pos":[0,5]}]},{"pos":[21186,21187],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21214,21215],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21617,21634],"content":"FindFirst(String)","needQuote":true,"nodes":[{"content":"FindFirst(String)","pos":[0,17]}]},{"pos":[21809,21818],"content":"FindFirst","needQuote":true,"nodes":[{"content":"FindFirst","pos":[0,9]}]},{"pos":[21892,21893],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21943,21949],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[22009,22010],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22121,22130],"content":"FindFirst","needQuote":true,"nodes":[{"content":"FindFirst","pos":[0,9]}]},{"pos":[22204,22205],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22255,22261],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[22321,22322],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22647,22673],"content":"HasClaim(Predicate<Claim>)","needQuote":true,"nodes":[{"content":"HasClaim(Predicate&lt;Claim&gt;)","pos":[0,26],"source":"HasClaim(Predicate<Claim>)"}]},{"pos":[23067,23075],"content":"HasClaim","needQuote":true,"nodes":[{"content":"HasClaim","pos":[0,8]}]},{"pos":[23148,23149],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23204,23213],"content":"Predicate","needQuote":true,"nodes":[{"content":"Predicate","pos":[0,9]}]},{"pos":[23276,23277],"content":"<","needQuote":true,"nodes":[]},{"pos":[23342,23347],"content":"Claim","needQuote":true,"nodes":[{"content":"Claim","pos":[0,5]}]},{"pos":[23433,23434],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23577,23585],"content":"HasClaim","needQuote":true,"nodes":[{"content":"HasClaim","pos":[0,8]}]},{"pos":[23658,23659],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23714,23723],"content":"Predicate","needQuote":true,"nodes":[{"content":"Predicate","pos":[0,9]}]},{"content":"(Of","pos":[23787,23790]},{"pos":[23862,23867],"content":"Claim","needQuote":true,"nodes":[{"content":"Claim","pos":[0,5]}]},{"pos":[23921,23922],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23949,23950],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24362,24386],"content":"HasClaim(String, String)","needQuote":true,"nodes":[{"content":"HasClaim(String, String)","pos":[0,24]}]},{"pos":[24588,24596],"content":"HasClaim","needQuote":true,"nodes":[{"content":"HasClaim","pos":[0,8]}]},{"pos":[24669,24670],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24720,24726],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[24787,24788]},{"pos":[24843,24849],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[24909,24910],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25034,25042],"content":"HasClaim","needQuote":true,"nodes":[{"content":"HasClaim","pos":[0,8]}]},{"pos":[25115,25116],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25166,25172],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[25233,25234]},{"pos":[25289,25295],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[25355,25356],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25676,25697],"content":"WriteTo(BinaryWriter)","needQuote":true,"nodes":[{"content":"WriteTo(BinaryWriter)","pos":[0,21]}]},{"pos":[25886,25893],"content":"WriteTo","needQuote":true,"nodes":[{"content":"WriteTo","pos":[0,7]}]},{"pos":[25965,25966],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26025,26037],"content":"BinaryWriter","needQuote":true,"nodes":[{"content":"BinaryWriter","pos":[0,12]}]},{"pos":[26106,26107],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26225,26232],"content":"WriteTo","needQuote":true,"nodes":[{"content":"WriteTo","pos":[0,7]}]},{"pos":[26304,26305],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26364,26376],"content":"BinaryWriter","needQuote":true,"nodes":[{"content":"BinaryWriter","pos":[0,12]}]},{"pos":[26445,26446],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26771,26800],"content":"WriteTo(BinaryWriter, Byte[])","needQuote":true,"nodes":[{"content":"WriteTo(BinaryWriter, Byte[])","pos":[0,29]}]},{"pos":[27160,27167],"content":"WriteTo","needQuote":true,"nodes":[{"content":"WriteTo","pos":[0,7]}]},{"pos":[27239,27240],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27299,27311],"content":"BinaryWriter","needQuote":true,"nodes":[{"content":"BinaryWriter","pos":[0,12]}]},{"content":",","pos":[27381,27382]},{"pos":[27435,27439],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[27498,27500]},{"pos":[27531,27532],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27664,27671],"content":"WriteTo","needQuote":true,"nodes":[{"content":"WriteTo","pos":[0,7]}]},{"pos":[27743,27744],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27803,27815],"content":"BinaryWriter","needQuote":true,"nodes":[{"content":"BinaryWriter","pos":[0,12]}]},{"content":",","pos":[27885,27886]},{"pos":[27939,27943],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[28001,28003],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[28031,28032],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28357,28367],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[28462,28470],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[28539,28540],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28567,28568],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28638,28646],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[28715,28716],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28743,28744],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28927,28941],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[29060,29066],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[29133,29134],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29184,29190],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[29250,29251],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29334,29340],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[29407,29408],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29458,29464],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[29524,29525],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29739,29761],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[29909,29915],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[29982,29983],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30033,30039],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[30100,30101]},{"pos":[30156,30162],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[30222,30223],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30320,30326],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[30393,30394],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30444,30450],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[30511,30512]},{"pos":[30567,30573],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[30633,30634],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30879,30910],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[31076,31091],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[31167,31168],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31218,31224],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[31285,31286]},{"pos":[31341,31347],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[31407,31408],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31514,31529],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[31605,31606],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31656,31662],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[31723,31724]},{"pos":[31779,31785],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[31845,31846],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[32076,32089],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[32190,32201],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[32273,32274],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[32301,32302],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[32375,32386],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[32458,32459],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[32486,32487],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[32662,32671],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[32764,32771],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[32839,32840],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[32867,32868],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[32937,32944],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[33012,33013],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[33040,33041],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[33216,33233],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[33342,33357],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[33433,33434],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[33461,33462],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[33539,33554],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[33630,33631],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[33658,33659],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[33804,33810],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[33933,33955],"content":"System.Security.Claims","needQuote":true,"nodes":[{"content":"System.Security.Claims","pos":[0,22]}]},{"pos":[34175,34184],"content":"IIdentity","needQuote":true,"nodes":[{"content":"IIdentity","pos":[0,9]}]},{"pos":[34341,34349],"content":"String[]","needQuote":true,"nodes":[{"content":"String[]","pos":[0,8]}]},{"pos":[34477,34483],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":"[]","pos":[34544,34546]},{"pos":[34611,34617],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[34677,34679],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[34882,34890],"content":"Identity","needQuote":true,"nodes":[{"content":"Identity","pos":[0,8]}]},{"pos":[35201,35217],"content":"IsInRole(String)","needQuote":true,"nodes":[{"content":"IsInRole(String)","pos":[0,16]}]},{"pos":[35390,35398],"content":"IsInRole","needQuote":true,"nodes":[{"content":"IsInRole","pos":[0,8]}]},{"pos":[35471,35472],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[35522,35528],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[35588,35589],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[35699,35707],"content":"IsInRole","needQuote":true,"nodes":[{"content":"IsInRole","pos":[0,8]}]},{"pos":[35780,35781],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[35831,35837],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[35897,35898],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[36108,36114],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[36260,36267],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[36413,36434],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]}],"content":"items:\n- uid: System.Security.Principal.GenericPrincipal\n  commentId: T:System.Security.Principal.GenericPrincipal\n  id: GenericPrincipal\n  parent: System.Security.Principal\n  children:\n  - System.Security.Principal.GenericPrincipal.#ctor(System.Security.Principal.IIdentity,System.String[])\n  - System.Security.Principal.GenericPrincipal.Identity\n  - System.Security.Principal.GenericPrincipal.IsInRole(System.String)\n  langs:\n  - csharp\n  - vb\n  name: GenericPrincipal\n  fullName: System.Security.Principal.GenericPrincipal\n  type: Class\n  source:\n    remote:\n      path: src/System.Security.Claims/ref/System.Security.Claims.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GenericPrincipal\n    path: src/System.Security.Claims/ref/System.Security.Claims.cs\n    startLine: 211\n  assemblies:\n  - System.Security.Claims\n  namespace: System.Security.Principal\n  summary: \"\\n<p>Represents a generic principal.</p>\\n\"\n  syntax:\n    content: 'public class GenericPrincipal : ClaimsPrincipal, IPrincipal'\n    content.vb: >-\n      Public Class GenericPrincipal\n          Inherits ClaimsPrincipal\n          Implements IPrincipal\n  inheritance:\n  - System.Object\n  - System.Security.Claims.ClaimsPrincipal\n  implements:\n  - System.Security.Principal.IPrincipal\n  inheritedMembers:\n  - System.Security.Claims.ClaimsPrincipal.Claims\n  - System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector\n  - System.Security.Claims.ClaimsPrincipal.Current\n  - System.Security.Claims.ClaimsPrincipal.CustomSerializationData\n  - System.Security.Claims.ClaimsPrincipal.Identities\n  - System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector\n  - System.Security.Claims.ClaimsPrincipal.AddIdentities(System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity})\n  - System.Security.Claims.ClaimsPrincipal.AddIdentity(System.Security.Claims.ClaimsIdentity)\n  - System.Security.Claims.ClaimsPrincipal.Clone\n  - System.Security.Claims.ClaimsPrincipal.CreateClaimsIdentity(System.IO.BinaryReader)\n  - System.Security.Claims.ClaimsPrincipal.FindAll(System.Predicate{System.Security.Claims.Claim})\n  - System.Security.Claims.ClaimsPrincipal.FindAll(System.String)\n  - System.Security.Claims.ClaimsPrincipal.FindFirst(System.Predicate{System.Security.Claims.Claim})\n  - System.Security.Claims.ClaimsPrincipal.FindFirst(System.String)\n  - System.Security.Claims.ClaimsPrincipal.HasClaim(System.Predicate{System.Security.Claims.Claim})\n  - System.Security.Claims.ClaimsPrincipal.HasClaim(System.String,System.String)\n  - System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter)\n  - System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter,System.Byte[])\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: GenericPrincipal\n- uid: System.Security.Principal.GenericPrincipal.#ctor(System.Security.Principal.IIdentity,System.String[])\n  commentId: M:System.Security.Principal.GenericPrincipal.#ctor(System.Security.Principal.IIdentity,System.String[])\n  id: '#ctor(System.Security.Principal.IIdentity,System.String[])'\n  parent: System.Security.Principal.GenericPrincipal\n  langs:\n  - csharp\n  - vb\n  name: GenericPrincipal(IIdentity, String[])\n  fullName: System.Security.Principal.GenericPrincipal.GenericPrincipal(System.Security.Principal.IIdentity, System.String[])\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Security.Claims/ref/System.Security.Claims.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Security.Claims/ref/System.Security.Claims.cs\n    startLine: 213\n  assemblies:\n  - System.Security.Claims\n  namespace: System.Security.Principal\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.Principal.GenericPrincipal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class from a user identity and an array of role names to which the user represented by that identity belongs.</p>\\n\"\n  syntax:\n    content: public GenericPrincipal(IIdentity identity, string[] roles)\n    content.vb: Public Sub New(identity As IIdentity, roles As String())\n    parameters:\n    - id: identity\n      type: System.Security.Principal.IIdentity\n      description: \"\\n<p>A basic implementation of <xref href=\\\"System.Security.Principal.IIdentity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents any user. </p>\\n\"\n    - id: roles\n      type: System.String[]\n      description: \"\\n<p>An array of role names to which the user represented by the <em>identity</em> parameter belongs. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>identity</em> parameter is <strong>null</strong>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Security.Principal.GenericPrincipal.GenericPrincipal(System.Security.Principal.IIdentity, System.String())\n  name.vb: GenericPrincipal(IIdentity, String())\n  nameWithType: GenericPrincipal.GenericPrincipal(IIdentity, String[])\n  nameWithType.vb: GenericPrincipal.GenericPrincipal(IIdentity, String())\n- uid: System.Security.Principal.GenericPrincipal.Identity\n  commentId: P:System.Security.Principal.GenericPrincipal.Identity\n  id: Identity\n  parent: System.Security.Principal.GenericPrincipal\n  langs:\n  - csharp\n  - vb\n  name: Identity\n  fullName: System.Security.Principal.GenericPrincipal.Identity\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Claims/ref/System.Security.Claims.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Identity\n    path: src/System.Security.Claims/ref/System.Security.Claims.cs\n    startLine: 214\n  assemblies:\n  - System.Security.Claims\n  namespace: System.Security.Principal\n  summary: \"\\n<p>Gets the <xref href=\\\"System.Security.Principal.GenericIdentity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the user represented by the current <xref href=\\\"System.Security.Principal.GenericPrincipal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public override IIdentity Identity { get; }\n    content.vb: Public Overrides ReadOnly Property Identity As IIdentity\n    parameters: []\n    return:\n      type: System.Security.Principal.IIdentity\n      description: \"\\n<p>The <xref href=\\\"System.Security.Principal.GenericIdentity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the user represented by the <xref href=\\\"System.Security.Principal.GenericPrincipal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  overridden: System.Security.Claims.ClaimsPrincipal.Identity\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: GenericPrincipal.Identity\n- uid: System.Security.Principal.GenericPrincipal.IsInRole(System.String)\n  commentId: M:System.Security.Principal.GenericPrincipal.IsInRole(System.String)\n  id: IsInRole(System.String)\n  parent: System.Security.Principal.GenericPrincipal\n  langs:\n  - csharp\n  - vb\n  name: IsInRole(String)\n  fullName: System.Security.Principal.GenericPrincipal.IsInRole(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.Claims/ref/System.Security.Claims.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsInRole\n    path: src/System.Security.Claims/ref/System.Security.Claims.cs\n    startLine: 215\n  assemblies:\n  - System.Security.Claims\n  namespace: System.Security.Principal\n  summary: \"\\n<p>Determines whether the current <xref href=\\\"System.Security.Principal.GenericPrincipal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> belongs to the specified role.</p>\\n\"\n  syntax:\n    content: public override bool IsInRole(string role)\n    content.vb: Public Overrides Function IsInRole(role As String) As Boolean\n    parameters:\n    - id: role\n      type: System.String\n      description: \"\\n<p>The name of the role for which to check membership. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the current <xref href=\\\"System.Security.Principal.GenericPrincipal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is a member of the specified role; otherwise, <strong>false</strong>.</p>\\n\"\n  overridden: System.Security.Claims.ClaimsPrincipal.IsInRole(System.String)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: GenericPrincipal.IsInRole(String)\nreferences:\n- uid: System.Security.Principal\n  isExternal: false\n  name: System.Security.Principal\n  fullName: System.Security.Principal\n  commentId: N:System.Security.Principal\n  nameWithType: System.Security.Principal\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Security.Claims.ClaimsPrincipal\n  parent: System.Security.Claims\n  isExternal: false\n  name: ClaimsPrincipal\n  fullName: System.Security.Claims.ClaimsPrincipal\n  commentId: T:System.Security.Claims.ClaimsPrincipal\n  nameWithType: ClaimsPrincipal\n- uid: System.Security.Principal.IPrincipal\n  parent: System.Security.Principal\n  isExternal: false\n  name: IPrincipal\n  fullName: System.Security.Principal.IPrincipal\n  commentId: T:System.Security.Principal.IPrincipal\n  nameWithType: IPrincipal\n- uid: System.Security.Claims.ClaimsPrincipal.Claims\n  parent: System.Security.Claims.ClaimsPrincipal\n  isExternal: false\n  name: Claims\n  fullName: System.Security.Claims.ClaimsPrincipal.Claims\n  commentId: P:System.Security.Claims.ClaimsPrincipal.Claims\n  nameWithType: ClaimsPrincipal.Claims\n- uid: System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector\n  parent: System.Security.Claims.ClaimsPrincipal\n  isExternal: false\n  name: ClaimsPrincipalSelector\n  fullName: System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector\n  commentId: P:System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector\n  nameWithType: ClaimsPrincipal.ClaimsPrincipalSelector\n- uid: System.Security.Claims.ClaimsPrincipal.Current\n  parent: System.Security.Claims.ClaimsPrincipal\n  isExternal: false\n  name: Current\n  fullName: System.Security.Claims.ClaimsPrincipal.Current\n  commentId: P:System.Security.Claims.ClaimsPrincipal.Current\n  nameWithType: ClaimsPrincipal.Current\n- uid: System.Security.Claims.ClaimsPrincipal.CustomSerializationData\n  parent: System.Security.Claims.ClaimsPrincipal\n  isExternal: false\n  name: CustomSerializationData\n  fullName: System.Security.Claims.ClaimsPrincipal.CustomSerializationData\n  commentId: P:System.Security.Claims.ClaimsPrincipal.CustomSerializationData\n  nameWithType: ClaimsPrincipal.CustomSerializationData\n- uid: System.Security.Claims.ClaimsPrincipal.Identities\n  parent: System.Security.Claims.ClaimsPrincipal\n  isExternal: false\n  name: Identities\n  fullName: System.Security.Claims.ClaimsPrincipal.Identities\n  commentId: P:System.Security.Claims.ClaimsPrincipal.Identities\n  nameWithType: ClaimsPrincipal.Identities\n- uid: System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector\n  parent: System.Security.Claims.ClaimsPrincipal\n  isExternal: false\n  name: PrimaryIdentitySelector\n  fullName: System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector\n  commentId: P:System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector\n  nameWithType: ClaimsPrincipal.PrimaryIdentitySelector\n- uid: System.Security.Claims.ClaimsPrincipal.AddIdentities(System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity})\n  parent: System.Security.Claims.ClaimsPrincipal\n  isExternal: true\n  name: AddIdentities(IEnumerable<ClaimsIdentity>)\n  fullName: System.Security.Claims.ClaimsPrincipal.AddIdentities(System.Collections.Generic.IEnumerable<System.Security.Claims.ClaimsIdentity>)\n  fullname.vb: System.Security.Claims.ClaimsPrincipal.AddIdentities(System.Collections.Generic.IEnumerable(Of System.Security.Claims.ClaimsIdentity))\n  name.vb: AddIdentities(IEnumerable(Of ClaimsIdentity))\n  spec.csharp:\n  - uid: System.Security.Claims.ClaimsPrincipal.AddIdentities(System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity})\n    name: AddIdentities\n    fullName: System.Security.Claims.ClaimsPrincipal.AddIdentities\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Security.Claims.ClaimsIdentity\n    name: ClaimsIdentity\n    fullName: System.Security.Claims.ClaimsIdentity\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.Claims.ClaimsPrincipal.AddIdentities(System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity})\n    name: AddIdentities\n    fullName: System.Security.Claims.ClaimsPrincipal.AddIdentities\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Security.Claims.ClaimsIdentity\n    name: ClaimsIdentity\n    fullName: System.Security.Claims.ClaimsIdentity\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Security.Claims.ClaimsPrincipal.AddIdentities(System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity})\n  nameWithType: ClaimsPrincipal.AddIdentities(IEnumerable<ClaimsIdentity>)\n  nameWithType.vb: ClaimsPrincipal.AddIdentities(IEnumerable(Of ClaimsIdentity))\n- uid: System.Security.Claims.ClaimsPrincipal.AddIdentity(System.Security.Claims.ClaimsIdentity)\n  parent: System.Security.Claims.ClaimsPrincipal\n  isExternal: false\n  name: AddIdentity(ClaimsIdentity)\n  fullName: System.Security.Claims.ClaimsPrincipal.AddIdentity(System.Security.Claims.ClaimsIdentity)\n  spec.csharp:\n  - uid: System.Security.Claims.ClaimsPrincipal.AddIdentity(System.Security.Claims.ClaimsIdentity)\n    name: AddIdentity\n    fullName: System.Security.Claims.ClaimsPrincipal.AddIdentity\n  - name: (\n    fullName: (\n  - uid: System.Security.Claims.ClaimsIdentity\n    name: ClaimsIdentity\n    fullName: System.Security.Claims.ClaimsIdentity\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.Claims.ClaimsPrincipal.AddIdentity(System.Security.Claims.ClaimsIdentity)\n    name: AddIdentity\n    fullName: System.Security.Claims.ClaimsPrincipal.AddIdentity\n  - name: (\n    fullName: (\n  - uid: System.Security.Claims.ClaimsIdentity\n    name: ClaimsIdentity\n    fullName: System.Security.Claims.ClaimsIdentity\n  - name: )\n    fullName: )\n  commentId: M:System.Security.Claims.ClaimsPrincipal.AddIdentity(System.Security.Claims.ClaimsIdentity)\n  nameWithType: ClaimsPrincipal.AddIdentity(ClaimsIdentity)\n- uid: System.Security.Claims.ClaimsPrincipal.Clone\n  parent: System.Security.Claims.ClaimsPrincipal\n  isExternal: false\n  name: Clone()\n  fullName: System.Security.Claims.ClaimsPrincipal.Clone()\n  spec.csharp:\n  - uid: System.Security.Claims.ClaimsPrincipal.Clone\n    name: Clone\n    fullName: System.Security.Claims.ClaimsPrincipal.Clone\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.Claims.ClaimsPrincipal.Clone\n    name: Clone\n    fullName: System.Security.Claims.ClaimsPrincipal.Clone\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Security.Claims.ClaimsPrincipal.Clone\n  nameWithType: ClaimsPrincipal.Clone()\n- uid: System.Security.Claims.ClaimsPrincipal.CreateClaimsIdentity(System.IO.BinaryReader)\n  parent: System.Security.Claims.ClaimsPrincipal\n  isExternal: true\n  name: CreateClaimsIdentity(BinaryReader)\n  fullName: System.Security.Claims.ClaimsPrincipal.CreateClaimsIdentity(System.IO.BinaryReader)\n  spec.csharp:\n  - uid: System.Security.Claims.ClaimsPrincipal.CreateClaimsIdentity(System.IO.BinaryReader)\n    name: CreateClaimsIdentity\n    fullName: System.Security.Claims.ClaimsPrincipal.CreateClaimsIdentity\n  - name: (\n    fullName: (\n  - uid: System.IO.BinaryReader\n    name: BinaryReader\n    fullName: System.IO.BinaryReader\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.Claims.ClaimsPrincipal.CreateClaimsIdentity(System.IO.BinaryReader)\n    name: CreateClaimsIdentity\n    fullName: System.Security.Claims.ClaimsPrincipal.CreateClaimsIdentity\n  - name: (\n    fullName: (\n  - uid: System.IO.BinaryReader\n    name: BinaryReader\n    fullName: System.IO.BinaryReader\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.Claims.ClaimsPrincipal.CreateClaimsIdentity(System.IO.BinaryReader)\n  nameWithType: ClaimsPrincipal.CreateClaimsIdentity(BinaryReader)\n- uid: System.Security.Claims.ClaimsPrincipal.FindAll(System.Predicate{System.Security.Claims.Claim})\n  parent: System.Security.Claims.ClaimsPrincipal\n  isExternal: true\n  name: FindAll(Predicate<Claim>)\n  fullName: System.Security.Claims.ClaimsPrincipal.FindAll(System.Predicate<System.Security.Claims.Claim>)\n  fullname.vb: System.Security.Claims.ClaimsPrincipal.FindAll(System.Predicate(Of System.Security.Claims.Claim))\n  name.vb: FindAll(Predicate(Of Claim))\n  spec.csharp:\n  - uid: System.Security.Claims.ClaimsPrincipal.FindAll(System.Predicate{System.Security.Claims.Claim})\n    name: FindAll\n    fullName: System.Security.Claims.ClaimsPrincipal.FindAll\n  - name: (\n    fullName: (\n  - uid: System.Predicate`1\n    name: Predicate\n    fullName: System.Predicate\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Security.Claims.Claim\n    name: Claim\n    fullName: System.Security.Claims.Claim\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.Claims.ClaimsPrincipal.FindAll(System.Predicate{System.Security.Claims.Claim})\n    name: FindAll\n    fullName: System.Security.Claims.ClaimsPrincipal.FindAll\n  - name: (\n    fullName: (\n  - uid: System.Predicate`1\n    name: Predicate\n    fullName: System.Predicate\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Security.Claims.Claim\n    name: Claim\n    fullName: System.Security.Claims.Claim\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Security.Claims.ClaimsPrincipal.FindAll(System.Predicate{System.Security.Claims.Claim})\n  nameWithType: ClaimsPrincipal.FindAll(Predicate<Claim>)\n  nameWithType.vb: ClaimsPrincipal.FindAll(Predicate(Of Claim))\n- uid: System.Security.Claims.ClaimsPrincipal.FindAll(System.String)\n  parent: System.Security.Claims.ClaimsPrincipal\n  isExternal: true\n  name: FindAll(String)\n  fullName: System.Security.Claims.ClaimsPrincipal.FindAll(System.String)\n  spec.csharp:\n  - uid: System.Security.Claims.ClaimsPrincipal.FindAll(System.String)\n    name: FindAll\n    fullName: System.Security.Claims.ClaimsPrincipal.FindAll\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.Claims.ClaimsPrincipal.FindAll(System.String)\n    name: FindAll\n    fullName: System.Security.Claims.ClaimsPrincipal.FindAll\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.Claims.ClaimsPrincipal.FindAll(System.String)\n  nameWithType: ClaimsPrincipal.FindAll(String)\n- uid: System.Security.Claims.ClaimsPrincipal.FindFirst(System.Predicate{System.Security.Claims.Claim})\n  parent: System.Security.Claims.ClaimsPrincipal\n  isExternal: true\n  name: FindFirst(Predicate<Claim>)\n  fullName: System.Security.Claims.ClaimsPrincipal.FindFirst(System.Predicate<System.Security.Claims.Claim>)\n  fullname.vb: System.Security.Claims.ClaimsPrincipal.FindFirst(System.Predicate(Of System.Security.Claims.Claim))\n  name.vb: FindFirst(Predicate(Of Claim))\n  spec.csharp:\n  - uid: System.Security.Claims.ClaimsPrincipal.FindFirst(System.Predicate{System.Security.Claims.Claim})\n    name: FindFirst\n    fullName: System.Security.Claims.ClaimsPrincipal.FindFirst\n  - name: (\n    fullName: (\n  - uid: System.Predicate`1\n    name: Predicate\n    fullName: System.Predicate\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Security.Claims.Claim\n    name: Claim\n    fullName: System.Security.Claims.Claim\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.Claims.ClaimsPrincipal.FindFirst(System.Predicate{System.Security.Claims.Claim})\n    name: FindFirst\n    fullName: System.Security.Claims.ClaimsPrincipal.FindFirst\n  - name: (\n    fullName: (\n  - uid: System.Predicate`1\n    name: Predicate\n    fullName: System.Predicate\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Security.Claims.Claim\n    name: Claim\n    fullName: System.Security.Claims.Claim\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Security.Claims.ClaimsPrincipal.FindFirst(System.Predicate{System.Security.Claims.Claim})\n  nameWithType: ClaimsPrincipal.FindFirst(Predicate<Claim>)\n  nameWithType.vb: ClaimsPrincipal.FindFirst(Predicate(Of Claim))\n- uid: System.Security.Claims.ClaimsPrincipal.FindFirst(System.String)\n  parent: System.Security.Claims.ClaimsPrincipal\n  isExternal: true\n  name: FindFirst(String)\n  fullName: System.Security.Claims.ClaimsPrincipal.FindFirst(System.String)\n  spec.csharp:\n  - uid: System.Security.Claims.ClaimsPrincipal.FindFirst(System.String)\n    name: FindFirst\n    fullName: System.Security.Claims.ClaimsPrincipal.FindFirst\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.Claims.ClaimsPrincipal.FindFirst(System.String)\n    name: FindFirst\n    fullName: System.Security.Claims.ClaimsPrincipal.FindFirst\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.Claims.ClaimsPrincipal.FindFirst(System.String)\n  nameWithType: ClaimsPrincipal.FindFirst(String)\n- uid: System.Security.Claims.ClaimsPrincipal.HasClaim(System.Predicate{System.Security.Claims.Claim})\n  parent: System.Security.Claims.ClaimsPrincipal\n  isExternal: true\n  name: HasClaim(Predicate<Claim>)\n  fullName: System.Security.Claims.ClaimsPrincipal.HasClaim(System.Predicate<System.Security.Claims.Claim>)\n  fullname.vb: System.Security.Claims.ClaimsPrincipal.HasClaim(System.Predicate(Of System.Security.Claims.Claim))\n  name.vb: HasClaim(Predicate(Of Claim))\n  spec.csharp:\n  - uid: System.Security.Claims.ClaimsPrincipal.HasClaim(System.Predicate{System.Security.Claims.Claim})\n    name: HasClaim\n    fullName: System.Security.Claims.ClaimsPrincipal.HasClaim\n  - name: (\n    fullName: (\n  - uid: System.Predicate`1\n    name: Predicate\n    fullName: System.Predicate\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Security.Claims.Claim\n    name: Claim\n    fullName: System.Security.Claims.Claim\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.Claims.ClaimsPrincipal.HasClaim(System.Predicate{System.Security.Claims.Claim})\n    name: HasClaim\n    fullName: System.Security.Claims.ClaimsPrincipal.HasClaim\n  - name: (\n    fullName: (\n  - uid: System.Predicate`1\n    name: Predicate\n    fullName: System.Predicate\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Security.Claims.Claim\n    name: Claim\n    fullName: System.Security.Claims.Claim\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Security.Claims.ClaimsPrincipal.HasClaim(System.Predicate{System.Security.Claims.Claim})\n  nameWithType: ClaimsPrincipal.HasClaim(Predicate<Claim>)\n  nameWithType.vb: ClaimsPrincipal.HasClaim(Predicate(Of Claim))\n- uid: System.Security.Claims.ClaimsPrincipal.HasClaim(System.String,System.String)\n  parent: System.Security.Claims.ClaimsPrincipal\n  isExternal: true\n  name: HasClaim(String, String)\n  fullName: System.Security.Claims.ClaimsPrincipal.HasClaim(System.String, System.String)\n  spec.csharp:\n  - uid: System.Security.Claims.ClaimsPrincipal.HasClaim(System.String,System.String)\n    name: HasClaim\n    fullName: System.Security.Claims.ClaimsPrincipal.HasClaim\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.Claims.ClaimsPrincipal.HasClaim(System.String,System.String)\n    name: HasClaim\n    fullName: System.Security.Claims.ClaimsPrincipal.HasClaim\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.Claims.ClaimsPrincipal.HasClaim(System.String,System.String)\n  nameWithType: ClaimsPrincipal.HasClaim(String, String)\n- uid: System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter)\n  parent: System.Security.Claims.ClaimsPrincipal\n  isExternal: true\n  name: WriteTo(BinaryWriter)\n  fullName: System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter)\n  spec.csharp:\n  - uid: System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter)\n    name: WriteTo\n    fullName: System.Security.Claims.ClaimsPrincipal.WriteTo\n  - name: (\n    fullName: (\n  - uid: System.IO.BinaryWriter\n    name: BinaryWriter\n    fullName: System.IO.BinaryWriter\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter)\n    name: WriteTo\n    fullName: System.Security.Claims.ClaimsPrincipal.WriteTo\n  - name: (\n    fullName: (\n  - uid: System.IO.BinaryWriter\n    name: BinaryWriter\n    fullName: System.IO.BinaryWriter\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter)\n  nameWithType: ClaimsPrincipal.WriteTo(BinaryWriter)\n- uid: System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter,System.Byte[])\n  parent: System.Security.Claims.ClaimsPrincipal\n  isExternal: true\n  name: WriteTo(BinaryWriter, Byte[])\n  fullName: System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter, System.Byte[])\n  fullname.vb: System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter, System.Byte())\n  name.vb: WriteTo(BinaryWriter, Byte())\n  spec.csharp:\n  - uid: System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter,System.Byte[])\n    name: WriteTo\n    fullName: System.Security.Claims.ClaimsPrincipal.WriteTo\n  - name: (\n    fullName: (\n  - uid: System.IO.BinaryWriter\n    name: BinaryWriter\n    fullName: System.IO.BinaryWriter\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter,System.Byte[])\n    name: WriteTo\n    fullName: System.Security.Claims.ClaimsPrincipal.WriteTo\n  - name: (\n    fullName: (\n  - uid: System.IO.BinaryWriter\n    name: BinaryWriter\n    fullName: System.IO.BinaryWriter\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter,System.Byte[])\n  nameWithType: ClaimsPrincipal.WriteTo(BinaryWriter, Byte[])\n  nameWithType.vb: ClaimsPrincipal.WriteTo(BinaryWriter, Byte())\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Security.Claims\n  isExternal: false\n  name: System.Security.Claims\n  fullName: System.Security.Claims\n  commentId: N:System.Security.Claims\n  nameWithType: System.Security.Claims\n- uid: System.Security.Principal.IIdentity\n  parent: System.Security.Principal\n  isExternal: false\n  name: IIdentity\n  fullName: System.Security.Principal.IIdentity\n  commentId: T:System.Security.Principal.IIdentity\n  nameWithType: IIdentity\n- uid: System.String[]\n  name: String[]\n  fullName: System.String[]\n  fullname.vb: System.String()\n  name.vb: String()\n  spec.csharp:\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: String[]\n  nameWithType.vb: String()\n- uid: System.Security.Claims.ClaimsPrincipal.Identity\n  parent: System.Security.Claims.ClaimsPrincipal\n  isExternal: false\n  name: Identity\n  fullName: System.Security.Claims.ClaimsPrincipal.Identity\n  commentId: P:System.Security.Claims.ClaimsPrincipal.Identity\n  nameWithType: ClaimsPrincipal.Identity\n- uid: System.Security.Claims.ClaimsPrincipal.IsInRole(System.String)\n  parent: System.Security.Claims.ClaimsPrincipal\n  isExternal: true\n  name: IsInRole(String)\n  fullName: System.Security.Claims.ClaimsPrincipal.IsInRole(System.String)\n  spec.csharp:\n  - uid: System.Security.Claims.ClaimsPrincipal.IsInRole(System.String)\n    name: IsInRole\n    fullName: System.Security.Claims.ClaimsPrincipal.IsInRole\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.Claims.ClaimsPrincipal.IsInRole(System.String)\n    name: IsInRole\n    fullName: System.Security.Claims.ClaimsPrincipal.IsInRole\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.Claims.ClaimsPrincipal.IsInRole(System.String)\n  nameWithType: ClaimsPrincipal.IsInRole(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n"}