{"nodes":[{"pos":[1391,1410],"content":"ECCurve.NamedCurves","needQuote":true,"nodes":[{"content":"ECCurve.NamedCurves","pos":[0,19]}]},{"pos":[2718,2733],"content":"brainpoolP160r1","needQuote":true,"nodes":[{"content":"brainpoolP160r1","pos":[0,15]}]},{"pos":[3912,3927],"content":"brainpoolP160t1","needQuote":true,"nodes":[{"content":"brainpoolP160t1","pos":[0,15]}]},{"pos":[5106,5121],"content":"brainpoolP192r1","needQuote":true,"nodes":[{"content":"brainpoolP192r1","pos":[0,15]}]},{"pos":[6300,6315],"content":"brainpoolP192t1","needQuote":true,"nodes":[{"content":"brainpoolP192t1","pos":[0,15]}]},{"pos":[7494,7509],"content":"brainpoolP224r1","needQuote":true,"nodes":[{"content":"brainpoolP224r1","pos":[0,15]}]},{"pos":[8688,8703],"content":"brainpoolP224t1","needQuote":true,"nodes":[{"content":"brainpoolP224t1","pos":[0,15]}]},{"pos":[9882,9897],"content":"brainpoolP256r1","needQuote":true,"nodes":[{"content":"brainpoolP256r1","pos":[0,15]}]},{"pos":[11076,11091],"content":"brainpoolP256t1","needQuote":true,"nodes":[{"content":"brainpoolP256t1","pos":[0,15]}]},{"pos":[12270,12285],"content":"brainpoolP320r1","needQuote":true,"nodes":[{"content":"brainpoolP320r1","pos":[0,15]}]},{"pos":[13464,13479],"content":"brainpoolP320t1","needQuote":true,"nodes":[{"content":"brainpoolP320t1","pos":[0,15]}]},{"pos":[14658,14673],"content":"brainpoolP384r1","needQuote":true,"nodes":[{"content":"brainpoolP384r1","pos":[0,15]}]},{"pos":[15852,15867],"content":"brainpoolP384t1","needQuote":true,"nodes":[{"content":"brainpoolP384t1","pos":[0,15]}]},{"pos":[17046,17061],"content":"brainpoolP512r1","needQuote":true,"nodes":[{"content":"brainpoolP512r1","pos":[0,15]}]},{"pos":[18240,18255],"content":"brainpoolP512t1","needQuote":true,"nodes":[{"content":"brainpoolP512t1","pos":[0,15]}]},{"pos":[19413,19421],"content":"nistP256","needQuote":true,"nodes":[{"content":"nistP256","pos":[0,8]}]},{"pos":[20544,20552],"content":"nistP384","needQuote":true,"nodes":[{"content":"nistP384","pos":[0,8]}]},{"pos":[21675,21683],"content":"nistP521","needQuote":true,"nodes":[{"content":"nistP521","pos":[0,8]}]},{"pos":[22679,22707],"content":"System.Security.Cryptography","needQuote":true,"nodes":[{"content":"System.Security.Cryptography","pos":[0,28]}]},{"pos":[22889,22895],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[23064,23074],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[23203,23211],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[23314,23315],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23362,23363],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23453,23461],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[23564,23565],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23612,23613],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23795,23809],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[23966,23972],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[24071,24072],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24142,24148],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[24233,24234],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24337,24343],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[24442,24443],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24513,24519],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[24604,24605],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24815,24837],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[25031,25037],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[25136,25137],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25207,25213],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[25299,25300]},{"pos":[25378,25384],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[25469,25470],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25587,25593],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[25692,25693],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25763,25769],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[25855,25856]},{"pos":[25934,25940],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[26025,26026],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26254,26285],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[26506,26521],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[26638,26639],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26709,26715],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[26801,26802]},{"pos":[26880,26886],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[26971,26972],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27098,27113],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[27230,27231],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27301,27307],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[27393,27394]},{"pos":[27472,27478],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[27563,27564],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27726,27739],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[27877,27888],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[27997,27998],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28045,28046],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28139,28150],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[28259,28260],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28307,28308],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28462,28471],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[28597,28604],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[28705,28706],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28753,28754],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28843,28850],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[28951,28952],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28999,29000],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29170,29187],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[29337,29352],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[29469,29470],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29517,29518],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29615,29630],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[29747,29748],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29795,29796],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29897,29903],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[30109,30116],"content":"ECCurve","needQuote":true,"nodes":[{"content":"ECCurve","pos":[0,7]}]}],"content":"items:\n- uid: System.Security.Cryptography.ECCurve.NamedCurves\n  commentId: T:System.Security.Cryptography.ECCurve.NamedCurves\n  id: ECCurve.NamedCurves\n  parent: System.Security.Cryptography\n  children:\n  - System.Security.Cryptography.ECCurve.NamedCurves.brainpoolP160r1\n  - System.Security.Cryptography.ECCurve.NamedCurves.brainpoolP160t1\n  - System.Security.Cryptography.ECCurve.NamedCurves.brainpoolP192r1\n  - System.Security.Cryptography.ECCurve.NamedCurves.brainpoolP192t1\n  - System.Security.Cryptography.ECCurve.NamedCurves.brainpoolP224r1\n  - System.Security.Cryptography.ECCurve.NamedCurves.brainpoolP224t1\n  - System.Security.Cryptography.ECCurve.NamedCurves.brainpoolP256r1\n  - System.Security.Cryptography.ECCurve.NamedCurves.brainpoolP256t1\n  - System.Security.Cryptography.ECCurve.NamedCurves.brainpoolP320r1\n  - System.Security.Cryptography.ECCurve.NamedCurves.brainpoolP320t1\n  - System.Security.Cryptography.ECCurve.NamedCurves.brainpoolP384r1\n  - System.Security.Cryptography.ECCurve.NamedCurves.brainpoolP384t1\n  - System.Security.Cryptography.ECCurve.NamedCurves.brainpoolP512r1\n  - System.Security.Cryptography.ECCurve.NamedCurves.brainpoolP512t1\n  - System.Security.Cryptography.ECCurve.NamedCurves.nistP256\n  - System.Security.Cryptography.ECCurve.NamedCurves.nistP384\n  - System.Security.Cryptography.ECCurve.NamedCurves.nistP521\n  langs:\n  - csharp\n  - vb\n  name: ECCurve.NamedCurves\n  nameWithType: ECCurve.NamedCurves\n  fullName: System.Security.Cryptography.ECCurve.NamedCurves\n  type: Class\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: NamedCurves\n    path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs\n    startLine: 56\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public class NamedCurves\n    content.vb: Public Class NamedCurves\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n- uid: System.Security.Cryptography.ECCurve.NamedCurves.brainpoolP160r1\n  commentId: P:System.Security.Cryptography.ECCurve.NamedCurves.brainpoolP160r1\n  id: brainpoolP160r1\n  parent: System.Security.Cryptography.ECCurve.NamedCurves\n  langs:\n  - csharp\n  - vb\n  name: brainpoolP160r1\n  nameWithType: ECCurve.NamedCurves.brainpoolP160r1\n  fullName: System.Security.Cryptography.ECCurve.NamedCurves.brainpoolP160r1\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: brainpoolP160r1\n    path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs\n    startLine: 58\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public static ECCurve brainpoolP160r1 { get; }\n    content.vb: Public Shared ReadOnly Property brainpoolP160r1 As ECCurve\n    parameters: []\n    return:\n      type: System.Security.Cryptography.ECCurve\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n- uid: System.Security.Cryptography.ECCurve.NamedCurves.brainpoolP160t1\n  commentId: P:System.Security.Cryptography.ECCurve.NamedCurves.brainpoolP160t1\n  id: brainpoolP160t1\n  parent: System.Security.Cryptography.ECCurve.NamedCurves\n  langs:\n  - csharp\n  - vb\n  name: brainpoolP160t1\n  nameWithType: ECCurve.NamedCurves.brainpoolP160t1\n  fullName: System.Security.Cryptography.ECCurve.NamedCurves.brainpoolP160t1\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: brainpoolP160t1\n    path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs\n    startLine: 59\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public static ECCurve brainpoolP160t1 { get; }\n    content.vb: Public Shared ReadOnly Property brainpoolP160t1 As ECCurve\n    parameters: []\n    return:\n      type: System.Security.Cryptography.ECCurve\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n- uid: System.Security.Cryptography.ECCurve.NamedCurves.brainpoolP192r1\n  commentId: P:System.Security.Cryptography.ECCurve.NamedCurves.brainpoolP192r1\n  id: brainpoolP192r1\n  parent: System.Security.Cryptography.ECCurve.NamedCurves\n  langs:\n  - csharp\n  - vb\n  name: brainpoolP192r1\n  nameWithType: ECCurve.NamedCurves.brainpoolP192r1\n  fullName: System.Security.Cryptography.ECCurve.NamedCurves.brainpoolP192r1\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: brainpoolP192r1\n    path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs\n    startLine: 60\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public static ECCurve brainpoolP192r1 { get; }\n    content.vb: Public Shared ReadOnly Property brainpoolP192r1 As ECCurve\n    parameters: []\n    return:\n      type: System.Security.Cryptography.ECCurve\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n- uid: System.Security.Cryptography.ECCurve.NamedCurves.brainpoolP192t1\n  commentId: P:System.Security.Cryptography.ECCurve.NamedCurves.brainpoolP192t1\n  id: brainpoolP192t1\n  parent: System.Security.Cryptography.ECCurve.NamedCurves\n  langs:\n  - csharp\n  - vb\n  name: brainpoolP192t1\n  nameWithType: ECCurve.NamedCurves.brainpoolP192t1\n  fullName: System.Security.Cryptography.ECCurve.NamedCurves.brainpoolP192t1\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: brainpoolP192t1\n    path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs\n    startLine: 61\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public static ECCurve brainpoolP192t1 { get; }\n    content.vb: Public Shared ReadOnly Property brainpoolP192t1 As ECCurve\n    parameters: []\n    return:\n      type: System.Security.Cryptography.ECCurve\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n- uid: System.Security.Cryptography.ECCurve.NamedCurves.brainpoolP224r1\n  commentId: P:System.Security.Cryptography.ECCurve.NamedCurves.brainpoolP224r1\n  id: brainpoolP224r1\n  parent: System.Security.Cryptography.ECCurve.NamedCurves\n  langs:\n  - csharp\n  - vb\n  name: brainpoolP224r1\n  nameWithType: ECCurve.NamedCurves.brainpoolP224r1\n  fullName: System.Security.Cryptography.ECCurve.NamedCurves.brainpoolP224r1\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: brainpoolP224r1\n    path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs\n    startLine: 62\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public static ECCurve brainpoolP224r1 { get; }\n    content.vb: Public Shared ReadOnly Property brainpoolP224r1 As ECCurve\n    parameters: []\n    return:\n      type: System.Security.Cryptography.ECCurve\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n- uid: System.Security.Cryptography.ECCurve.NamedCurves.brainpoolP224t1\n  commentId: P:System.Security.Cryptography.ECCurve.NamedCurves.brainpoolP224t1\n  id: brainpoolP224t1\n  parent: System.Security.Cryptography.ECCurve.NamedCurves\n  langs:\n  - csharp\n  - vb\n  name: brainpoolP224t1\n  nameWithType: ECCurve.NamedCurves.brainpoolP224t1\n  fullName: System.Security.Cryptography.ECCurve.NamedCurves.brainpoolP224t1\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: brainpoolP224t1\n    path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs\n    startLine: 63\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public static ECCurve brainpoolP224t1 { get; }\n    content.vb: Public Shared ReadOnly Property brainpoolP224t1 As ECCurve\n    parameters: []\n    return:\n      type: System.Security.Cryptography.ECCurve\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n- uid: System.Security.Cryptography.ECCurve.NamedCurves.brainpoolP256r1\n  commentId: P:System.Security.Cryptography.ECCurve.NamedCurves.brainpoolP256r1\n  id: brainpoolP256r1\n  parent: System.Security.Cryptography.ECCurve.NamedCurves\n  langs:\n  - csharp\n  - vb\n  name: brainpoolP256r1\n  nameWithType: ECCurve.NamedCurves.brainpoolP256r1\n  fullName: System.Security.Cryptography.ECCurve.NamedCurves.brainpoolP256r1\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: brainpoolP256r1\n    path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs\n    startLine: 64\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public static ECCurve brainpoolP256r1 { get; }\n    content.vb: Public Shared ReadOnly Property brainpoolP256r1 As ECCurve\n    parameters: []\n    return:\n      type: System.Security.Cryptography.ECCurve\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n- uid: System.Security.Cryptography.ECCurve.NamedCurves.brainpoolP256t1\n  commentId: P:System.Security.Cryptography.ECCurve.NamedCurves.brainpoolP256t1\n  id: brainpoolP256t1\n  parent: System.Security.Cryptography.ECCurve.NamedCurves\n  langs:\n  - csharp\n  - vb\n  name: brainpoolP256t1\n  nameWithType: ECCurve.NamedCurves.brainpoolP256t1\n  fullName: System.Security.Cryptography.ECCurve.NamedCurves.brainpoolP256t1\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: brainpoolP256t1\n    path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs\n    startLine: 65\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public static ECCurve brainpoolP256t1 { get; }\n    content.vb: Public Shared ReadOnly Property brainpoolP256t1 As ECCurve\n    parameters: []\n    return:\n      type: System.Security.Cryptography.ECCurve\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n- uid: System.Security.Cryptography.ECCurve.NamedCurves.brainpoolP320r1\n  commentId: P:System.Security.Cryptography.ECCurve.NamedCurves.brainpoolP320r1\n  id: brainpoolP320r1\n  parent: System.Security.Cryptography.ECCurve.NamedCurves\n  langs:\n  - csharp\n  - vb\n  name: brainpoolP320r1\n  nameWithType: ECCurve.NamedCurves.brainpoolP320r1\n  fullName: System.Security.Cryptography.ECCurve.NamedCurves.brainpoolP320r1\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: brainpoolP320r1\n    path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs\n    startLine: 66\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public static ECCurve brainpoolP320r1 { get; }\n    content.vb: Public Shared ReadOnly Property brainpoolP320r1 As ECCurve\n    parameters: []\n    return:\n      type: System.Security.Cryptography.ECCurve\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n- uid: System.Security.Cryptography.ECCurve.NamedCurves.brainpoolP320t1\n  commentId: P:System.Security.Cryptography.ECCurve.NamedCurves.brainpoolP320t1\n  id: brainpoolP320t1\n  parent: System.Security.Cryptography.ECCurve.NamedCurves\n  langs:\n  - csharp\n  - vb\n  name: brainpoolP320t1\n  nameWithType: ECCurve.NamedCurves.brainpoolP320t1\n  fullName: System.Security.Cryptography.ECCurve.NamedCurves.brainpoolP320t1\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: brainpoolP320t1\n    path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs\n    startLine: 67\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public static ECCurve brainpoolP320t1 { get; }\n    content.vb: Public Shared ReadOnly Property brainpoolP320t1 As ECCurve\n    parameters: []\n    return:\n      type: System.Security.Cryptography.ECCurve\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n- uid: System.Security.Cryptography.ECCurve.NamedCurves.brainpoolP384r1\n  commentId: P:System.Security.Cryptography.ECCurve.NamedCurves.brainpoolP384r1\n  id: brainpoolP384r1\n  parent: System.Security.Cryptography.ECCurve.NamedCurves\n  langs:\n  - csharp\n  - vb\n  name: brainpoolP384r1\n  nameWithType: ECCurve.NamedCurves.brainpoolP384r1\n  fullName: System.Security.Cryptography.ECCurve.NamedCurves.brainpoolP384r1\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: brainpoolP384r1\n    path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs\n    startLine: 68\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public static ECCurve brainpoolP384r1 { get; }\n    content.vb: Public Shared ReadOnly Property brainpoolP384r1 As ECCurve\n    parameters: []\n    return:\n      type: System.Security.Cryptography.ECCurve\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n- uid: System.Security.Cryptography.ECCurve.NamedCurves.brainpoolP384t1\n  commentId: P:System.Security.Cryptography.ECCurve.NamedCurves.brainpoolP384t1\n  id: brainpoolP384t1\n  parent: System.Security.Cryptography.ECCurve.NamedCurves\n  langs:\n  - csharp\n  - vb\n  name: brainpoolP384t1\n  nameWithType: ECCurve.NamedCurves.brainpoolP384t1\n  fullName: System.Security.Cryptography.ECCurve.NamedCurves.brainpoolP384t1\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: brainpoolP384t1\n    path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs\n    startLine: 69\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public static ECCurve brainpoolP384t1 { get; }\n    content.vb: Public Shared ReadOnly Property brainpoolP384t1 As ECCurve\n    parameters: []\n    return:\n      type: System.Security.Cryptography.ECCurve\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n- uid: System.Security.Cryptography.ECCurve.NamedCurves.brainpoolP512r1\n  commentId: P:System.Security.Cryptography.ECCurve.NamedCurves.brainpoolP512r1\n  id: brainpoolP512r1\n  parent: System.Security.Cryptography.ECCurve.NamedCurves\n  langs:\n  - csharp\n  - vb\n  name: brainpoolP512r1\n  nameWithType: ECCurve.NamedCurves.brainpoolP512r1\n  fullName: System.Security.Cryptography.ECCurve.NamedCurves.brainpoolP512r1\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: brainpoolP512r1\n    path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs\n    startLine: 70\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public static ECCurve brainpoolP512r1 { get; }\n    content.vb: Public Shared ReadOnly Property brainpoolP512r1 As ECCurve\n    parameters: []\n    return:\n      type: System.Security.Cryptography.ECCurve\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n- uid: System.Security.Cryptography.ECCurve.NamedCurves.brainpoolP512t1\n  commentId: P:System.Security.Cryptography.ECCurve.NamedCurves.brainpoolP512t1\n  id: brainpoolP512t1\n  parent: System.Security.Cryptography.ECCurve.NamedCurves\n  langs:\n  - csharp\n  - vb\n  name: brainpoolP512t1\n  nameWithType: ECCurve.NamedCurves.brainpoolP512t1\n  fullName: System.Security.Cryptography.ECCurve.NamedCurves.brainpoolP512t1\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: brainpoolP512t1\n    path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs\n    startLine: 71\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public static ECCurve brainpoolP512t1 { get; }\n    content.vb: Public Shared ReadOnly Property brainpoolP512t1 As ECCurve\n    parameters: []\n    return:\n      type: System.Security.Cryptography.ECCurve\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n- uid: System.Security.Cryptography.ECCurve.NamedCurves.nistP256\n  commentId: P:System.Security.Cryptography.ECCurve.NamedCurves.nistP256\n  id: nistP256\n  parent: System.Security.Cryptography.ECCurve.NamedCurves\n  langs:\n  - csharp\n  - vb\n  name: nistP256\n  nameWithType: ECCurve.NamedCurves.nistP256\n  fullName: System.Security.Cryptography.ECCurve.NamedCurves.nistP256\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: nistP256\n    path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs\n    startLine: 72\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public static ECCurve nistP256 { get; }\n    content.vb: Public Shared ReadOnly Property nistP256 As ECCurve\n    parameters: []\n    return:\n      type: System.Security.Cryptography.ECCurve\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n- uid: System.Security.Cryptography.ECCurve.NamedCurves.nistP384\n  commentId: P:System.Security.Cryptography.ECCurve.NamedCurves.nistP384\n  id: nistP384\n  parent: System.Security.Cryptography.ECCurve.NamedCurves\n  langs:\n  - csharp\n  - vb\n  name: nistP384\n  nameWithType: ECCurve.NamedCurves.nistP384\n  fullName: System.Security.Cryptography.ECCurve.NamedCurves.nistP384\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: nistP384\n    path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs\n    startLine: 73\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public static ECCurve nistP384 { get; }\n    content.vb: Public Shared ReadOnly Property nistP384 As ECCurve\n    parameters: []\n    return:\n      type: System.Security.Cryptography.ECCurve\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n- uid: System.Security.Cryptography.ECCurve.NamedCurves.nistP521\n  commentId: P:System.Security.Cryptography.ECCurve.NamedCurves.nistP521\n  id: nistP521\n  parent: System.Security.Cryptography.ECCurve.NamedCurves\n  langs:\n  - csharp\n  - vb\n  name: nistP521\n  nameWithType: ECCurve.NamedCurves.nistP521\n  fullName: System.Security.Cryptography.ECCurve.NamedCurves.nistP521\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: nistP521\n    path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs\n    startLine: 74\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public static ECCurve nistP521 { get; }\n    content.vb: Public Shared ReadOnly Property nistP521 As ECCurve\n    parameters: []\n    return:\n      type: System.Security.Cryptography.ECCurve\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\nreferences:\n- uid: System.Security.Cryptography\n  commentId: N:System.Security.Cryptography\n  isExternal: false\n  name: System.Security.Cryptography\n  nameWithType: System.Security.Cryptography\n  fullName: System.Security.Cryptography\n- uid: System.Object\n  commentId: T:System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Object.ToString\n  commentId: M:System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    nameWithType: Object.ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    nameWithType: Object.ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.Equals(System.Object)\n  commentId: M:System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    nameWithType: Object.Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    nameWithType: Object.Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.Equals(System.Object,System.Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    nameWithType: Object.Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    nameWithType: Object.Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    nameWithType: Object.ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    nameWithType: Object.ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.GetHashCode\n  commentId: M:System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    nameWithType: Object.GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    nameWithType: Object.GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.GetType\n  commentId: M:System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    nameWithType: Object.GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    nameWithType: Object.GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.MemberwiseClone\n  commentId: M:System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    nameWithType: Object.MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    nameWithType: Object.MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System\n  commentId: N:System\n  isExternal: false\n  name: System\n  nameWithType: System\n  fullName: System\n- uid: System.Security.Cryptography.ECCurve\n  commentId: T:System.Security.Cryptography.ECCurve\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ECCurve\n  nameWithType: ECCurve\n  fullName: System.Security.Cryptography.ECCurve\n"}