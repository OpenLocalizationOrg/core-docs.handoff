{"nodes":[{"pos":[1318,1369],"content":"X509CertificateCollection.X509CertificateEnumerator","needQuote":true,"nodes":[{"content":"X509CertificateCollection.X509CertificateEnumerator","pos":[0,51]}]},{"pos":[3601,3653],"content":"X509CertificateEnumerator(X509CertificateCollection)","needQuote":true,"nodes":[{"content":"X509CertificateEnumerator(X509CertificateCollection)","pos":[0,52]}]},{"pos":[5766,5773],"content":"Current","needQuote":true,"nodes":[{"content":"Current","pos":[0,7]}]},{"content":"\\n&lt;p&gt;The enumerator is positioned before the first element of the collection or after the last element.","pos":[7357,7460],"source":"\\n<p>The enumerator is positioned before the first element of the collection or after the last element."},{"content":"&lt;/p&gt;\\n","pos":[7461,7467],"source":" </p>\\n"},{"pos":[8122,8141],"content":"IEnumerator.Current","needQuote":true,"nodes":[{"content":"IEnumerator.Current","pos":[0,19]}]},{"content":"\\n&lt;p&gt;The enumerator is positioned before the first element of the collection or after the last element.","pos":[9560,9663],"source":"\\n<p>The enumerator is positioned before the first element of the collection or after the last element."},{"content":"&lt;/p&gt;\\n","pos":[9664,9670],"source":" </p>\\n"},{"pos":[10428,10438],"content":"MoveNext()","needQuote":true,"nodes":[{"content":"MoveNext()","pos":[0,10]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the enumerator was successfully advanced to the next element; &lt;strong&gt;false&lt;/strong&gt; if the enumerator has passed the end of the collection.&lt;/p&gt;\\n","pos":[11298,11476],"source":"\\n<p>\\n<strong>true</strong> if the enumerator was successfully advanced to the next element; <strong>false</strong> if the enumerator has passed the end of the collection.</p>\\n"},{"content":"\\n&lt;p&gt;The collection was modified after the enumerator was instantiated.","pos":[11603,11674],"source":"\\n<p>The collection was modified after the enumerator was instantiated."},{"content":"&lt;/p&gt;\\n","pos":[11675,11681],"source":" </p>\\n"},{"pos":[12205,12212],"content":"Reset()","needQuote":true,"nodes":[{"content":"Reset()","pos":[0,7]}]},{"content":"\\n&lt;p&gt;The collection is modified after the enumerator is instantiated.","pos":[13145,13214],"source":"\\n<p>The collection is modified after the enumerator is instantiated."},{"content":"&lt;/p&gt;\\n","pos":[13215,13221],"source":" </p>\\n"},{"pos":[13858,13880],"content":"IEnumerator.MoveNext()","needQuote":true,"nodes":[{"content":"IEnumerator.MoveNext()","pos":[0,22]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the enumerator was successfully advanced to the next element; &lt;strong&gt;false&lt;/strong&gt; if the enumerator has passed the end of the collection.&lt;/p&gt;\\n","pos":[14939,15117],"source":"\\n<p>\\n<strong>true</strong> if the enumerator was successfully advanced to the next element; <strong>false</strong> if the enumerator has passed the end of the collection.</p>\\n"},{"content":"\\n&lt;p&gt;The collection was modified after the enumerator was instantiated.","pos":[15244,15315],"source":"\\n<p>The collection was modified after the enumerator was instantiated."},{"content":"&lt;/p&gt;\\n","pos":[15316,15322],"source":" </p>\\n"},{"pos":[16131,16150],"content":"IEnumerator.Reset()","needQuote":true,"nodes":[{"content":"IEnumerator.Reset()","pos":[0,19]}]},{"content":"\\n&lt;p&gt;The collection was modified after the enumerator was instantiated.","pos":[17241,17312],"source":"\\n<p>The collection was modified after the enumerator was instantiated."},{"content":"&lt;/p&gt;\\n","pos":[17313,17319],"source":" </p>\\n"},{"pos":[17717,17762],"content":"System.Security.Cryptography.X509Certificates","needQuote":true,"nodes":[{"content":"System.Security.Cryptography.X509Certificates","pos":[0,45]}]},{"pos":[18010,18016],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18190,18201],"content":"IEnumerator","needQuote":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[18400,18410],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[18505,18513],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[18582,18583],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18610,18611],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18681,18689],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[18758,18759],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18786,18787],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18970,18984],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[19103,19109],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[19176,19177],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19227,19233],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[19293,19294],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19377,19383],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[19450,19451],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19501,19507],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[19567,19568],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19782,19804],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[19952,19958],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[20025,20026],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20076,20082],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[20143,20144]},{"pos":[20199,20205],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[20265,20266],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20363,20369],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[20436,20437],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20487,20493],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[20554,20555]},{"pos":[20610,20616],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[20676,20677],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20922,20953],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[21119,21134],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[21210,21211],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21261,21267],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[21328,21329]},{"pos":[21384,21390],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[21450,21451],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21557,21572],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[21648,21649],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21699,21705],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[21766,21767]},{"pos":[21822,21828],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[21888,21889],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22119,22132],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[22233,22244],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[22316,22317],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22344,22345],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22418,22429],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[22501,22502],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22529,22530],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22705,22714],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[22807,22814],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[22882,22883],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22910,22911],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22980,22987],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[23055,23056],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23083,23084],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23259,23276],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[23385,23400],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[23476,23477],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23504,23505],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23582,23597],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[23673,23674],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23701,23702],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23847,23853],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[23972,23990],"content":"System.Collections","needQuote":true,"nodes":[{"content":"System.Collections","pos":[0,18]}]},{"pos":[24254,24279],"content":"X509CertificateCollection","needQuote":true,"nodes":[{"content":"X509CertificateCollection","pos":[0,25]}]},{"pos":[24646,24661],"content":"X509Certificate","needQuote":true,"nodes":[{"content":"X509Certificate","pos":[0,15]}]},{"pos":[24960,24967],"content":"Current","needQuote":true,"nodes":[{"content":"Current","pos":[0,7]}]},{"pos":[25176,25183],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[25381,25391],"content":"MoveNext()","needQuote":true,"nodes":[{"content":"MoveNext()","pos":[0,10]}]},{"pos":[25520,25528],"content":"MoveNext","needQuote":true,"nodes":[{"content":"MoveNext","pos":[0,8]}]},{"pos":[25593,25594],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25621,25622],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25709,25717],"content":"MoveNext","needQuote":true,"nodes":[{"content":"MoveNext","pos":[0,8]}]},{"pos":[25782,25783],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25810,25811],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26035,26042],"content":"Reset()","needQuote":true,"nodes":[{"content":"Reset()","pos":[0,7]}]},{"pos":[26165,26170],"content":"Reset","needQuote":true,"nodes":[{"content":"Reset","pos":[0,5]}]},{"pos":[26232,26233],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26260,26261],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26345,26350],"content":"Reset","needQuote":true,"nodes":[{"content":"Reset","pos":[0,5]}]},{"pos":[26412,26413],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26440,26441],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26631,26656],"content":"InvalidOperationException","needQuote":true,"nodes":[{"content":"InvalidOperationException","pos":[0,25]}]}],"content":"items:\n- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.X509CertificateEnumerator\n  commentId: T:System.Security.Cryptography.X509Certificates.X509CertificateCollection.X509CertificateEnumerator\n  id: X509CertificateCollection.X509CertificateEnumerator\n  parent: System.Security.Cryptography.X509Certificates\n  children:\n  - System.Security.Cryptography.X509Certificates.X509CertificateCollection.X509CertificateEnumerator.#ctor(System.Security.Cryptography.X509Certificates.X509CertificateCollection)\n  - System.Security.Cryptography.X509Certificates.X509CertificateCollection.X509CertificateEnumerator.Current\n  - System.Security.Cryptography.X509Certificates.X509CertificateCollection.X509CertificateEnumerator.MoveNext\n  - System.Security.Cryptography.X509Certificates.X509CertificateCollection.X509CertificateEnumerator.Reset\n  - System.Security.Cryptography.X509Certificates.X509CertificateCollection.X509CertificateEnumerator.System#Collections#IEnumerator#Current\n  - System.Security.Cryptography.X509Certificates.X509CertificateCollection.X509CertificateEnumerator.System#Collections#IEnumerator#MoveNext\n  - System.Security.Cryptography.X509Certificates.X509CertificateCollection.X509CertificateEnumerator.System#Collections#IEnumerator#Reset\n  langs:\n  - csharp\n  - vb\n  name: X509CertificateCollection.X509CertificateEnumerator\n  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.X509CertificateEnumerator\n  type: Class\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: X509CertificateEnumerator\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 206\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Enumerates the <xref href=\\\"System.Security.Cryptography.X509Certificates.X509Certificate\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects in an <xref href=\\\"System.Security.Cryptography.X509Certificates.X509CertificateCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: 'public class X509CertificateEnumerator : IEnumerator'\n    content.vb: >-\n      Public Class X509CertificateEnumerator\n          Implements IEnumerator\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.IEnumerator\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: X509CertificateCollection.X509CertificateEnumerator\n- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.X509CertificateEnumerator.#ctor(System.Security.Cryptography.X509Certificates.X509CertificateCollection)\n  commentId: M:System.Security.Cryptography.X509Certificates.X509CertificateCollection.X509CertificateEnumerator.#ctor(System.Security.Cryptography.X509Certificates.X509CertificateCollection)\n  id: '#ctor(System.Security.Cryptography.X509Certificates.X509CertificateCollection)'\n  parent: System.Security.Cryptography.X509Certificates.X509CertificateCollection.X509CertificateEnumerator\n  langs:\n  - csharp\n  - vb\n  name: X509CertificateEnumerator(X509CertificateCollection)\n  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.X509CertificateEnumerator.X509CertificateEnumerator(System.Security.Cryptography.X509Certificates.X509CertificateCollection)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 208\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.Cryptography.X509Certificates.X509CertificateCollection.X509CertificateEnumerator\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class for the specified <xref href=\\\"System.Security.Cryptography.X509Certificates.X509CertificateCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public X509CertificateEnumerator(X509CertificateCollection mappings)\n    content.vb: Public Sub New(mappings As X509CertificateCollection)\n    parameters:\n    - id: mappings\n      type: System.Security.Cryptography.X509Certificates.X509CertificateCollection\n      description: \"\\n<p>The <xref href=\\\"System.Security.Cryptography.X509Certificates.X509CertificateCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to enumerate. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: X509CertificateCollection.X509CertificateEnumerator.X509CertificateEnumerator(X509CertificateCollection)\n- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.X509CertificateEnumerator.Current\n  commentId: P:System.Security.Cryptography.X509Certificates.X509CertificateCollection.X509CertificateEnumerator.Current\n  id: Current\n  parent: System.Security.Cryptography.X509Certificates.X509CertificateCollection.X509CertificateEnumerator\n  langs:\n  - csharp\n  - vb\n  name: Current\n  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.X509CertificateEnumerator.Current\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Current\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 209\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Gets the current <xref href=\\\"System.Security.Cryptography.X509Certificates.X509Certificate\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> in the <xref href=\\\"System.Security.Cryptography.X509Certificates.X509CertificateCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public X509Certificate Current { get; }\n    content.vb: Public ReadOnly Property Current As X509Certificate\n    parameters: []\n    return:\n      type: System.Security.Cryptography.X509Certificates.X509Certificate\n      description: \"\\n<p>The current <xref href=\\\"System.Security.Cryptography.X509Certificates.X509Certificate\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> in the <xref href=\\\"System.Security.Cryptography.X509Certificates.X509CertificateCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The enumerator is positioned before the first element of the collection or after the last element. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: X509CertificateCollection.X509CertificateEnumerator.Current\n- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.X509CertificateEnumerator.System#Collections#IEnumerator#Current\n  commentId: P:System.Security.Cryptography.X509Certificates.X509CertificateCollection.X509CertificateEnumerator.System#Collections#IEnumerator#Current\n  id: System#Collections#IEnumerator#Current\n  isEii: true\n  parent: System.Security.Cryptography.X509Certificates.X509CertificateCollection.X509CertificateEnumerator\n  langs:\n  - csharp\n  - vb\n  name: IEnumerator.Current\n  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.X509CertificateEnumerator.System.Collections.IEnumerator.Current\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.IEnumerator.Current\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 210\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>For a description of this member, see <xref href=\\\"System.Collections.IEnumerator.Current\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: object IEnumerator.Current { get; }\n    content.vb: ReadOnly WriteOnly Property System.Collections.IEnumerator.Current As Object Implements IEnumerator.Current\n    parameters: []\n    return:\n      type: System.Object\n      description: \"\\n<p>The current X.509 certificate object in the <xref href=\\\"System.Security.Cryptography.X509Certificates.X509CertificateCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The enumerator is positioned before the first element of the collection or after the last element. </p>\\n\"\n  implements:\n  - System.Collections.IEnumerator.Current\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  name.vb: System.Collections.IEnumerator.Current\n  nameWithType: X509CertificateCollection.X509CertificateEnumerator.IEnumerator.Current\n  nameWithType.vb: X509CertificateCollection.X509CertificateEnumerator.System.Collections.IEnumerator.Current\n- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.X509CertificateEnumerator.MoveNext\n  commentId: M:System.Security.Cryptography.X509Certificates.X509CertificateCollection.X509CertificateEnumerator.MoveNext\n  id: MoveNext\n  parent: System.Security.Cryptography.X509Certificates.X509CertificateCollection.X509CertificateEnumerator\n  langs:\n  - csharp\n  - vb\n  name: MoveNext()\n  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.X509CertificateEnumerator.MoveNext()\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: MoveNext\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 211\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Advances the enumerator to the next element of the collection.</p>\\n\"\n  syntax:\n    content: public bool MoveNext()\n    content.vb: Public Function MoveNext As Boolean\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the enumerator was successfully advanced to the next element; <strong>false</strong> if the enumerator has passed the end of the collection.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The collection was modified after the enumerator was instantiated. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: X509CertificateCollection.X509CertificateEnumerator.MoveNext()\n- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.X509CertificateEnumerator.Reset\n  commentId: M:System.Security.Cryptography.X509Certificates.X509CertificateCollection.X509CertificateEnumerator.Reset\n  id: Reset\n  parent: System.Security.Cryptography.X509Certificates.X509CertificateCollection.X509CertificateEnumerator\n  langs:\n  - csharp\n  - vb\n  name: Reset()\n  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.X509CertificateEnumerator.Reset()\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Reset\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 212\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Sets the enumerator to its initial position, which is before the first element in the collection.</p>\\n\"\n  syntax:\n    content: public void Reset()\n    content.vb: Public Sub Reset\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The collection is modified after the enumerator is instantiated. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: X509CertificateCollection.X509CertificateEnumerator.Reset()\n- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.X509CertificateEnumerator.System#Collections#IEnumerator#MoveNext\n  commentId: M:System.Security.Cryptography.X509Certificates.X509CertificateCollection.X509CertificateEnumerator.System#Collections#IEnumerator#MoveNext\n  id: System#Collections#IEnumerator#MoveNext\n  isEii: true\n  parent: System.Security.Cryptography.X509Certificates.X509CertificateCollection.X509CertificateEnumerator\n  langs:\n  - csharp\n  - vb\n  name: IEnumerator.MoveNext()\n  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.X509CertificateEnumerator.System.Collections.IEnumerator.MoveNext()\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.IEnumerator.MoveNext\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 213\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>For a description of this member, see <xref href=\\\"System.Collections.IEnumerator.MoveNext\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: bool IEnumerator.MoveNext()\n    content.vb: Function System.Collections.IEnumerator.MoveNext As Boolean Implements IEnumerator.MoveNext\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the enumerator was successfully advanced to the next element; <strong>false</strong> if the enumerator has passed the end of the collection.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The collection was modified after the enumerator was instantiated. </p>\\n\"\n  implements:\n  - System.Collections.IEnumerator.MoveNext\n  name.vb: System.Collections.IEnumerator.MoveNext()\n  nameWithType: X509CertificateCollection.X509CertificateEnumerator.IEnumerator.MoveNext()\n  nameWithType.vb: X509CertificateCollection.X509CertificateEnumerator.System.Collections.IEnumerator.MoveNext()\n- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.X509CertificateEnumerator.System#Collections#IEnumerator#Reset\n  commentId: M:System.Security.Cryptography.X509Certificates.X509CertificateCollection.X509CertificateEnumerator.System#Collections#IEnumerator#Reset\n  id: System#Collections#IEnumerator#Reset\n  isEii: true\n  parent: System.Security.Cryptography.X509Certificates.X509CertificateCollection.X509CertificateEnumerator\n  langs:\n  - csharp\n  - vb\n  name: IEnumerator.Reset()\n  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.X509CertificateEnumerator.System.Collections.IEnumerator.Reset()\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.IEnumerator.Reset\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 214\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>For a description of this member, see <xref href=\\\"System.Collections.IEnumerator.Reset\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: void IEnumerator.Reset()\n    content.vb: Sub System.Collections.IEnumerator.Reset Implements IEnumerator.Reset\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The collection was modified after the enumerator was instantiated. </p>\\n\"\n  implements:\n  - System.Collections.IEnumerator.Reset\n  name.vb: System.Collections.IEnumerator.Reset()\n  nameWithType: X509CertificateCollection.X509CertificateEnumerator.IEnumerator.Reset()\n  nameWithType.vb: X509CertificateCollection.X509CertificateEnumerator.System.Collections.IEnumerator.Reset()\nreferences:\n- uid: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: System.Security.Cryptography.X509Certificates\n  fullName: System.Security.Cryptography.X509Certificates\n  commentId: N:System.Security.Cryptography.X509Certificates\n  nameWithType: System.Security.Cryptography.X509Certificates\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  fullName: System.Collections.IEnumerator\n  commentId: T:System.Collections.IEnumerator\n  nameWithType: IEnumerator\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Collections\n  isExternal: false\n  name: System.Collections\n  fullName: System.Collections\n  commentId: N:System.Collections\n  nameWithType: System.Collections\n- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509CertificateCollection\n  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection\n  commentId: T:System.Security.Cryptography.X509Certificates.X509CertificateCollection\n  nameWithType: X509CertificateCollection\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509Certificate\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate\n  commentId: T:System.Security.Cryptography.X509Certificates.X509Certificate\n  nameWithType: X509Certificate\n- uid: System.Collections.IEnumerator.Current\n  parent: System.Collections.IEnumerator\n  isExternal: false\n  name: Current\n  fullName: System.Collections.IEnumerator.Current\n  commentId: P:System.Collections.IEnumerator.Current\n  nameWithType: IEnumerator.Current\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.Collections.IEnumerator.MoveNext\n  parent: System.Collections.IEnumerator\n  isExternal: false\n  name: MoveNext()\n  fullName: System.Collections.IEnumerator.MoveNext()\n  spec.csharp:\n  - uid: System.Collections.IEnumerator.MoveNext\n    name: MoveNext\n    fullName: System.Collections.IEnumerator.MoveNext\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.IEnumerator.MoveNext\n    name: MoveNext\n    fullName: System.Collections.IEnumerator.MoveNext\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.IEnumerator.MoveNext\n  nameWithType: IEnumerator.MoveNext()\n- uid: System.Collections.IEnumerator.Reset\n  parent: System.Collections.IEnumerator\n  isExternal: false\n  name: Reset()\n  fullName: System.Collections.IEnumerator.Reset()\n  spec.csharp:\n  - uid: System.Collections.IEnumerator.Reset\n    name: Reset\n    fullName: System.Collections.IEnumerator.Reset\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.IEnumerator.Reset\n    name: Reset\n    fullName: System.Collections.IEnumerator.Reset\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.IEnumerator.Reset\n  nameWithType: IEnumerator.Reset()\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  fullName: System.InvalidOperationException\n  nameWithType: InvalidOperationException\n  commentId: T:System.InvalidOperationException\n"}