{"nodes":[{"pos":[487,499],"content":"StrongBox<T>","needQuote":true,"nodes":[{"content":"StrongBox&lt;T&gt;","pos":[0,12],"source":"StrongBox<T>"}]},{"pos":[2141,2146],"content":"Value","needQuote":true,"nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[3232,3243],"content":"StrongBox()","needQuote":true,"nodes":[{"content":"StrongBox()","pos":[0,11]}]},{"pos":[4281,4293],"content":"StrongBox(T)","needQuote":true,"nodes":[{"content":"StrongBox(T)","pos":[0,12]}]},{"pos":[5791,5807],"content":"IStrongBox.Value","needQuote":true,"nodes":[{"content":"IStrongBox.Value","pos":[0,16]}]},{"pos":[7354,7385],"content":"System.Runtime.CompilerServices","needQuote":true,"nodes":[{"content":"System.Runtime.CompilerServices","pos":[0,31]}]},{"pos":[7591,7597],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7796,7806],"content":"IStrongBox","needQuote":true,"nodes":[{"content":"IStrongBox","pos":[0,10]}]},{"pos":[8028,8038],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[8133,8141],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[8210,8211],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8238,8239],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8309,8317],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[8386,8387],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8414,8415],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8598,8612],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[8731,8737],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[8804,8805],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8855,8861],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8921,8922],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9005,9011],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[9078,9079],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9129,9135],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9195,9196],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9410,9432],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[9580,9586],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[9653,9654],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9704,9710],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[9771,9772]},{"pos":[9827,9833],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9893,9894],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9991,9997],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[10064,10065],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10115,10121],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[10182,10183]},{"pos":[10238,10244],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10304,10305],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10550,10581],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[10747,10762],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[10838,10839],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10889,10895],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[10956,10957]},{"pos":[11012,11018],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11078,11079],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11185,11200],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[11276,11277],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11327,11333],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[11394,11395]},{"pos":[11450,11456],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11516,11517],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11747,11760],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[11861,11872],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[11944,11945],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11972,11973],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12046,12057],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[12129,12130],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12157,12158],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12333,12342],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[12435,12442],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[12510,12511],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12538,12539],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12608,12615],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[12683,12684],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12711,12712],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12887,12904],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[13013,13028],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[13104,13105],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13132,13133],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13210,13225],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[13301,13302],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13329,13330],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13475,13481],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[13583,13584],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[13673,13674],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[13844,13849],"content":"Value","needQuote":true,"nodes":[{"content":"Value","pos":[0,5]}]}],"content":"items:\n- uid: System.Runtime.CompilerServices.StrongBox`1\n  commentId: T:System.Runtime.CompilerServices.StrongBox`1\n  id: StrongBox`1\n  parent: System.Runtime.CompilerServices\n  children:\n  - System.Runtime.CompilerServices.StrongBox`1.#ctor\n  - System.Runtime.CompilerServices.StrongBox`1.#ctor(`0)\n  - System.Runtime.CompilerServices.StrongBox`1.System#Runtime#CompilerServices#IStrongBox#Value\n  - System.Runtime.CompilerServices.StrongBox`1.Value\n  langs:\n  - csharp\n  - vb\n  name: StrongBox<T>\n  fullName: System.Runtime.CompilerServices.StrongBox<T>\n  type: Class\n  source:\n    remote:\n      path: src/System.Runtime/ref/System.Runtime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: StrongBox\n    path: src/System.Runtime/ref/System.Runtime.cs\n    startLine: 2981\n  assemblies:\n  - System.Runtime\n  namespace: System.Runtime.CompilerServices\n  summary: \"\\n<p>Holds a reference to a value.</p>\\n\"\n  syntax:\n    content: 'public class StrongBox<T> : IStrongBox'\n    content.vb: >-\n      Public Class StrongBox(Of T)\n          Implements IStrongBox\n    typeParameters:\n    - id: T\n      description: \"\\n<p>The type of the value that the <xref href=\\\"System.Runtime.CompilerServices.StrongBox`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> references.</p>\\n\"\n  inheritance:\n  - System.Object\n  implements:\n  - System.Runtime.CompilerServices.IStrongBox\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  fullName.vb: System.Runtime.CompilerServices.StrongBox(Of T)\n  name.vb: StrongBox(Of T)\n  nameWithType: StrongBox<T>\n  nameWithType.vb: StrongBox(Of T)\n- uid: System.Runtime.CompilerServices.StrongBox`1.Value\n  commentId: F:System.Runtime.CompilerServices.StrongBox`1.Value\n  id: Value\n  parent: System.Runtime.CompilerServices.StrongBox`1\n  langs:\n  - csharp\n  - vb\n  name: Value\n  fullName: System.Runtime.CompilerServices.StrongBox<T>.Value\n  type: Field\n  source:\n    remote:\n      path: src/System.Runtime/ref/System.Runtime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Value\n    path: src/System.Runtime/ref/System.Runtime.cs\n    startLine: 2983\n  assemblies:\n  - System.Runtime\n  namespace: System.Runtime.CompilerServices\n  summary: \"\\n<p>Represents the value that the <xref href=\\\"System.Runtime.CompilerServices.StrongBox`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> references.</p>\\n\"\n  syntax:\n    content: public T Value\n    content.vb: Public Value As T\n    return:\n      type: '{T}'\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Runtime.CompilerServices.StrongBox(Of T).Value\n  nameWithType: StrongBox<T>.Value\n  nameWithType.vb: StrongBox(Of T).Value\n- uid: System.Runtime.CompilerServices.StrongBox`1.#ctor\n  commentId: M:System.Runtime.CompilerServices.StrongBox`1.#ctor\n  id: '#ctor'\n  parent: System.Runtime.CompilerServices.StrongBox`1\n  langs:\n  - csharp\n  - vb\n  name: StrongBox()\n  fullName: System.Runtime.CompilerServices.StrongBox<T>.StrongBox()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Runtime/ref/System.Runtime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Runtime/ref/System.Runtime.cs\n    startLine: 2984\n  assemblies:\n  - System.Runtime\n  namespace: System.Runtime.CompilerServices\n  summary: \"\\n<p>Initializes a new StrongBox which can receive a value when used in a reference call.</p>\\n\"\n  syntax:\n    content: public StrongBox()\n    content.vb: Public Sub New\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Runtime.CompilerServices.StrongBox(Of T).StrongBox()\n  nameWithType: StrongBox<T>.StrongBox()\n  nameWithType.vb: StrongBox(Of T).StrongBox()\n- uid: System.Runtime.CompilerServices.StrongBox`1.#ctor(`0)\n  commentId: M:System.Runtime.CompilerServices.StrongBox`1.#ctor(`0)\n  id: '#ctor(`0)'\n  parent: System.Runtime.CompilerServices.StrongBox`1\n  langs:\n  - csharp\n  - vb\n  name: StrongBox(T)\n  fullName: System.Runtime.CompilerServices.StrongBox<T>.StrongBox(T)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Runtime/ref/System.Runtime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Runtime/ref/System.Runtime.cs\n    startLine: 2985\n  assemblies:\n  - System.Runtime\n  namespace: System.Runtime.CompilerServices\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Runtime.CompilerServices.StrongBox`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class by using the supplied value. </p>\\n\"\n  syntax:\n    content: public StrongBox(T value)\n    content.vb: Public Sub New(value As T)\n    parameters:\n    - id: value\n      type: '{T}'\n      description: \"\\n<p>A value that the <xref href=\\\"System.Runtime.CompilerServices.StrongBox`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> will reference.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Runtime.CompilerServices.StrongBox(Of T).StrongBox(T)\n  nameWithType: StrongBox<T>.StrongBox(T)\n  nameWithType.vb: StrongBox(Of T).StrongBox(T)\n- uid: System.Runtime.CompilerServices.StrongBox`1.System#Runtime#CompilerServices#IStrongBox#Value\n  commentId: P:System.Runtime.CompilerServices.StrongBox`1.System#Runtime#CompilerServices#IStrongBox#Value\n  id: System#Runtime#CompilerServices#IStrongBox#Value\n  isEii: true\n  parent: System.Runtime.CompilerServices.StrongBox`1\n  langs:\n  - csharp\n  - vb\n  name: IStrongBox.Value\n  fullName: System.Runtime.CompilerServices.StrongBox<T>.System.Runtime.CompilerServices.IStrongBox.Value\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime/ref/System.Runtime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Runtime.CompilerServices.IStrongBox.Value\n    path: src/System.Runtime/ref/System.Runtime.cs\n    startLine: 2986\n  assemblies:\n  - System.Runtime\n  namespace: System.Runtime.CompilerServices\n  summary: \"\\n<p>Gets or sets the value that the <xref href=\\\"System.Runtime.CompilerServices.StrongBox`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> references.</p>\\n\"\n  syntax:\n    content: object IStrongBox.Value { get; set; }\n    content.vb: ReadOnly WriteOnly Property System.Runtime.CompilerServices.IStrongBox.Value As Object Implements IStrongBox.Value\n    parameters: []\n    return:\n      type: System.Object\n      description: \"\\n<p>The value that the <xref href=\\\"System.Runtime.CompilerServices.StrongBox`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> references.</p>\\n\"\n  implements:\n  - System.Runtime.CompilerServices.IStrongBox.Value\n  modifiers.csharp:\n  - get\n  - set\n  fullName.vb: System.Runtime.CompilerServices.StrongBox(Of T).System.Runtime.CompilerServices.IStrongBox.Value\n  name.vb: System.Runtime.CompilerServices.IStrongBox.Value\n  nameWithType: StrongBox<T>.IStrongBox.Value\n  nameWithType.vb: StrongBox(Of T).System.Runtime.CompilerServices.IStrongBox.Value\nreferences:\n- uid: System.Runtime.CompilerServices\n  isExternal: false\n  name: System.Runtime.CompilerServices\n  fullName: System.Runtime.CompilerServices\n  commentId: N:System.Runtime.CompilerServices\n  nameWithType: System.Runtime.CompilerServices\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Runtime.CompilerServices.IStrongBox\n  parent: System.Runtime.CompilerServices\n  isExternal: false\n  name: IStrongBox\n  fullName: System.Runtime.CompilerServices.IStrongBox\n  commentId: T:System.Runtime.CompilerServices.IStrongBox\n  nameWithType: IStrongBox\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: '{T}'\n  definition: T\n  name: T\n  fullName: T\n  commentId: '!:T'\n  nameWithType: T\n- uid: T\n  isExternal: false\n  name: T\n  fullName: T\n  nameWithType: T\n- uid: System.Runtime.CompilerServices.IStrongBox.Value\n  parent: System.Runtime.CompilerServices.IStrongBox\n  isExternal: false\n  name: Value\n  fullName: System.Runtime.CompilerServices.IStrongBox.Value\n  commentId: P:System.Runtime.CompilerServices.IStrongBox.Value\n  nameWithType: IStrongBox.Value\n"}