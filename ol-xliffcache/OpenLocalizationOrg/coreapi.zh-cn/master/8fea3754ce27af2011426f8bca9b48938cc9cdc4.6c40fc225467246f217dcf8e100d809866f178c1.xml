{"nodes":[{"pos":[1829,1832],"content":"Uri","needQuote":true,"nodes":[{"content":"Uri","pos":[0,3]}]},{"pos":[3497,3508],"content":"Uri(String)","needQuote":true,"nodes":[{"content":"Uri(String)","pos":[0,11]}]},{"content":"\\n&lt;p&gt;A URI.","pos":[4199,4210],"source":"\\n<p>A URI."},{"content":"&lt;/p&gt;\\n","pos":[4211,4217],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;uriString&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[4336,4387],"source":"\\n<p>\\n<em>uriString</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[4388,4394],"source":" </p>\\n"},{"pos":[6287,6307],"content":"Uri(String, UriKind)","needQuote":true,"nodes":[{"content":"Uri(String, UriKind)","pos":[0,20]}]},{"content":"\\n&lt;p&gt;Specifies whether the URI string is a relative URI, absolute URI, or is indeterminate.&lt;/p&gt;\\n","pos":[7383,7480],"source":"\\n<p>Specifies whether the URI string is a relative URI, absolute URI, or is indeterminate.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;uriKind&lt;/em&gt; is invalid.","pos":[7591,7626],"source":"\\n<p>\\n<em>uriKind</em> is invalid."},{"content":"&lt;/p&gt;\\n","pos":[7627,7633],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;uriString&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[7738,7789],"source":"\\n<p>\\n<em>uriString</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[7790,7796],"source":" </p>\\n"},{"pos":[10033,10049],"content":"Uri(Uri, String)","needQuote":true,"nodes":[{"content":"Uri(Uri, String)","pos":[0,16]}]},{"content":"\\n&lt;p&gt;The base URI.","pos":[10813,10831],"source":"\\n<p>The base URI."},{"content":"&lt;/p&gt;\\n","pos":[10832,10838],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The relative URI to add to the base URI.","pos":[10908,10953],"source":"\\n<p>The relative URI to add to the base URI."},{"content":"&lt;/p&gt;\\n","pos":[10954,10960],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;baseUri&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[11079,11128],"source":"\\n<p>\\n<em>baseUri</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[11129,11135],"source":" </p>\\n"},{"pos":[13773,13786],"content":"Uri(Uri, Uri)","needQuote":true,"nodes":[{"content":"Uri(Uri, Uri)","pos":[0,13]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;baseUri&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[15464,15513],"source":"\\n<p>\\n<em>baseUri</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[15514,15520],"source":" </p>\\n"},{"pos":[18105,18117],"content":"AbsolutePath","needQuote":true,"nodes":[{"content":"AbsolutePath","pos":[0,12]}]},{"content":"\\n&lt;p&gt;This instance represents a relative URI, and this property is valid only for absolute URIs.","pos":[18979,19075],"source":"\\n<p>This instance represents a relative URI, and this property is valid only for absolute URIs."},{"content":"&lt;/p&gt;\\n","pos":[19076,19082],"source":" </p>\\n"},{"pos":[19338,19349],"content":"AbsoluteUri","needQuote":true,"nodes":[{"content":"AbsoluteUri","pos":[0,11]}]},{"content":"\\n&lt;p&gt;This instance represents a relative URI, and this property is valid only for absolute URIs.","pos":[20176,20272],"source":"\\n<p>This instance represents a relative URI, and this property is valid only for absolute URIs."},{"content":"&lt;/p&gt;\\n","pos":[20273,20279],"source":" </p>\\n"},{"pos":[20528,20537],"content":"Authority","needQuote":true,"nodes":[{"content":"Authority","pos":[0,9]}]},{"content":"\\n&lt;p&gt;This instance represents a relative URI, and this property is valid only for absolute URIs.","pos":[21474,21570],"source":"\\n<p>This instance represents a relative URI, and this property is valid only for absolute URIs."},{"content":"&lt;/p&gt;\\n","pos":[21571,21577],"source":" </p>\\n"},{"pos":[21830,21841],"content":"DnsSafeHost","needQuote":true,"nodes":[{"content":"DnsSafeHost","pos":[0,11]}]},{"content":"\\n&lt;p&gt;This instance represents a relative URI, and this property is valid only for absolute URIs.","pos":[22853,22949],"source":"\\n<p>This instance represents a relative URI, and this property is valid only for absolute URIs."},{"content":"&lt;/p&gt;\\n","pos":[22950,22956],"source":" </p>\\n"},{"pos":[23202,23210],"content":"Fragment","needQuote":true,"nodes":[{"content":"Fragment","pos":[0,8]}]},{"content":"\\n&lt;p&gt;This instance represents a relative URI, and this property is valid only for absolute URIs.","pos":[24050,24146],"source":"\\n<p>This instance represents a relative URI, and this property is valid only for absolute URIs."},{"content":"&lt;/p&gt;\\n","pos":[24147,24153],"source":" </p>\\n"},{"pos":[24384,24388],"content":"Host","needQuote":true,"nodes":[{"content":"Host","pos":[0,4]}]},{"content":"\\n&lt;p&gt;This instance represents a relative URI, and this property is valid only for absolute URIs.","pos":[25271,25367],"source":"\\n<p>This instance represents a relative URI, and this property is valid only for absolute URIs."},{"content":"&lt;/p&gt;\\n","pos":[25368,25374],"source":" </p>\\n"},{"pos":[25625,25637],"content":"HostNameType","needQuote":true,"nodes":[{"content":"HostNameType","pos":[0,12]}]},{"content":"\\n&lt;p&gt;This instance represents a relative URI, and this property is valid only for absolute URIs.","pos":[26534,26630],"source":"\\n<p>This instance represents a relative URI, and this property is valid only for absolute URIs."},{"content":"&lt;/p&gt;\\n","pos":[26631,26637],"source":" </p>\\n"},{"pos":[26881,26888],"content":"IdnHost","needQuote":true,"nodes":[{"content":"IdnHost","pos":[0,7]}]},{"pos":[27947,27960],"content":"IsAbsoluteUri","needQuote":true,"nodes":[{"content":"IsAbsoluteUri","pos":[0,13]}]},{"pos":[29163,29176],"content":"IsDefaultPort","needQuote":true,"nodes":[{"content":"IsDefaultPort","pos":[0,13]}]},{"content":"\\n&lt;p&gt;This instance represents a relative URI, and this property is valid only for absolute URIs.","pos":[30246,30342],"source":"\\n<p>This instance represents a relative URI, and this property is valid only for absolute URIs."},{"content":"&lt;/p&gt;\\n","pos":[30343,30349],"source":" </p>\\n"},{"pos":[30591,30597],"content":"IsFile","needQuote":true,"nodes":[{"content":"IsFile","pos":[0,6]}]},{"content":"\\n&lt;p&gt;This instance represents a relative URI, and this property is valid only for absolute URIs.","pos":[31651,31747],"source":"\\n<p>This instance represents a relative URI, and this property is valid only for absolute URIs."},{"content":"&lt;/p&gt;\\n","pos":[31748,31754],"source":" </p>\\n"},{"pos":[32001,32011],"content":"IsLoopback","needQuote":true,"nodes":[{"content":"IsLoopback","pos":[0,10]}]},{"content":"\\n&lt;p&gt;This instance represents a relative URI, and this property is valid only for absolute URIs.","pos":[33087,33183],"source":"\\n<p>This instance represents a relative URI, and this property is valid only for absolute URIs."},{"content":"&lt;/p&gt;\\n","pos":[33184,33190],"source":" </p>\\n"},{"pos":[33426,33431],"content":"IsUnc","needQuote":true,"nodes":[{"content":"IsUnc","pos":[0,5]}]},{"content":"\\n&lt;p&gt;This instance represents a relative URI, and this property is valid only for absolute URIs.","pos":[34492,34588],"source":"\\n<p>This instance represents a relative URI, and this property is valid only for absolute URIs."},{"content":"&lt;/p&gt;\\n","pos":[34589,34595],"source":" </p>\\n"},{"pos":[34838,34847],"content":"LocalPath","needQuote":true,"nodes":[{"content":"LocalPath","pos":[0,9]}]},{"content":"\\n&lt;p&gt;This instance represents a relative URI, and this property is valid only for absolute URIs.","pos":[35749,35845],"source":"\\n<p>This instance represents a relative URI, and this property is valid only for absolute URIs."},{"content":"&lt;/p&gt;\\n","pos":[35846,35852],"source":" </p>\\n"},{"pos":[36114,36128],"content":"OriginalString","needQuote":true,"nodes":[{"content":"OriginalString","pos":[0,14]}]},{"content":"\\n&lt;p&gt;This instance represents a relative URI, and this property is valid only for absolute URIs.","pos":[37216,37312],"source":"\\n<p>This instance represents a relative URI, and this property is valid only for absolute URIs."},{"content":"&lt;/p&gt;\\n","pos":[37313,37319],"source":" </p>\\n"},{"pos":[37580,37592],"content":"PathAndQuery","needQuote":true,"nodes":[{"content":"PathAndQuery","pos":[0,12]}]},{"content":"\\n&lt;p&gt;This instance represents a relative URI, and this property is valid only for absolute URIs.","pos":[38820,38916],"source":"\\n<p>This instance represents a relative URI, and this property is valid only for absolute URIs."},{"content":"&lt;/p&gt;\\n","pos":[38917,38923],"source":" </p>\\n"},{"pos":[39158,39162],"content":"Port","needQuote":true,"nodes":[{"content":"Port","pos":[0,4]}]},{"content":"\\n&lt;p&gt;This instance represents a relative URI, and this property is valid only for absolute URIs.","pos":[39992,40088],"source":"\\n<p>This instance represents a relative URI, and this property is valid only for absolute URIs."},{"content":"&lt;/p&gt;\\n","pos":[40089,40095],"source":" </p>\\n"},{"pos":[40325,40330],"content":"Query","needQuote":true,"nodes":[{"content":"Query","pos":[0,5]}]},{"content":"\\n&lt;p&gt;This instance represents a relative URI, and this property is valid only for absolute URIs.","pos":[41208,41304],"source":"\\n<p>This instance represents a relative URI, and this property is valid only for absolute URIs."},{"content":"&lt;/p&gt;\\n","pos":[41305,41311],"source":" </p>\\n"},{"pos":[41545,41551],"content":"Scheme","needQuote":true,"nodes":[{"content":"Scheme","pos":[0,6]}]},{"content":"\\n&lt;p&gt;This instance represents a relative URI, and this property is valid only for absolute URIs.","pos":[42406,42502],"source":"\\n<p>This instance represents a relative URI, and this property is valid only for absolute URIs."},{"content":"&lt;/p&gt;\\n","pos":[42503,42509],"source":" </p>\\n"},{"pos":[42750,42758],"content":"Segments","needQuote":true,"nodes":[{"content":"Segments","pos":[0,8]}]},{"content":"\\n&lt;p&gt;This instance represents a relative URI, and this property is valid only for absolute URIs.","pos":[43674,43770],"source":"\\n<p>This instance represents a relative URI, and this property is valid only for absolute URIs."},{"content":"&lt;/p&gt;\\n","pos":[43771,43777],"source":" </p>\\n"},{"pos":[44029,44040],"content":"UserEscaped","needQuote":true,"nodes":[{"content":"UserEscaped","pos":[0,11]}]},{"pos":[45337,45345],"content":"UserInfo","needQuote":true,"nodes":[{"content":"UserInfo","pos":[0,8]}]},{"content":"\\n&lt;p&gt;This instance represents a relative URI, and this property is valid only for absolute URIs.","pos":[46386,46482],"source":"\\n<p>This instance represents a relative URI, and this property is valid only for absolute URIs."},{"content":"&lt;/p&gt;\\n","pos":[46483,46489],"source":" </p>\\n"},{"pos":[46792,46813],"content":"CheckHostName(String)","needQuote":true,"nodes":[{"content":"CheckHostName(String)","pos":[0,21]}]},{"content":"\\n&lt;p&gt;The host name to validate.","pos":[47505,47536],"source":"\\n<p>The host name to validate."},{"content":"This can be an IPv4 or IPv6 address or an Internet host name.","pos":[47537,47598]},{"content":"&lt;/p&gt;\\n","pos":[47599,47605],"source":" </p>\\n"},{"pos":[48366,48389],"content":"CheckSchemeName(String)","needQuote":true,"nodes":[{"content":"CheckSchemeName(String)","pos":[0,23]}]},{"content":"\\n&lt;p&gt;The scheme name to validate.","pos":[49079,49112],"source":"\\n<p>The scheme name to validate."},{"content":"&lt;/p&gt;\\n","pos":[49113,49119],"source":" </p>\\n"},{"pos":[49878,49939],"content":"Compare(Uri, Uri, UriComponents, UriFormat, StringComparison)","needQuote":true,"nodes":[{"content":"Compare(Uri, Uri, UriComponents, UriFormat, StringComparison)","pos":[0,61]}]},{"pos":[53110,53124],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[54752,54776],"content":"EscapeDataString(String)","needQuote":true,"nodes":[{"content":"EscapeDataString(String)","pos":[0,24]}]},{"content":"\\n&lt;p&gt;The string to escape.&lt;/p&gt;\\n","pos":[55477,55509],"source":"\\n<p>The string to escape.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;stringToEscape&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[55843,55899],"source":"\\n<p>\\n<em>stringToEscape</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[55900,55906],"source":" </p>\\n"},{"pos":[56670,56693],"content":"EscapeUriString(String)","needQuote":true,"nodes":[{"content":"EscapeUriString(String)","pos":[0,23]}]},{"content":"\\n&lt;p&gt;The string to escape.&lt;/p&gt;\\n","pos":[57394,57426],"source":"\\n<p>The string to escape.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;stringToEscape&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[57760,57816],"source":"\\n<p>\\n<em>stringToEscape</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[57817,57823],"source":" </p>\\n"},{"pos":[58652,58691],"content":"GetComponents(UriComponents, UriFormat)","needQuote":true,"nodes":[{"content":"GetComponents(UriComponents, UriFormat)","pos":[0,39]}]},{"pos":[60924,60937],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[61980,61993],"content":"IsBaseOf(Uri)","needQuote":true,"nodes":[{"content":"IsBaseOf(Uri)","pos":[0,13]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;uri&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[63257,63302],"source":"\\n<p>\\n<em>uri</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[63303,63309],"source":" </p>\\n"},{"pos":[63590,63618],"content":"IsWellFormedOriginalString()","needQuote":true,"nodes":[{"content":"IsWellFormedOriginalString()","pos":[0,28]}]},{"pos":[64943,64981],"content":"IsWellFormedUriString(String, UriKind)","needQuote":true,"nodes":[{"content":"IsWellFormedUriString(String, UriKind)","pos":[0,38]}]},{"pos":[66732,66752],"content":"MakeRelativeUri(Uri)","needQuote":true,"nodes":[{"content":"MakeRelativeUri(Uri)","pos":[0,20]}]},{"content":"\\n&lt;p&gt;The URI to compare to the current URI.&lt;/p&gt;\\n","pos":[67455,67504],"source":"\\n<p>The URI to compare to the current URI.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;uri&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[68137,68182],"source":"\\n<p>\\n<em>uri</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[68183,68189],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;This instance represents a relative URI, and this property is valid only for absolute URIs.","pos":[68302,68398],"source":"\\n<p>This instance represents a relative URI, and this property is valid only for absolute URIs."},{"content":"&lt;/p&gt;\\n","pos":[68399,68405],"source":" </p>\\n"},{"pos":[68717,68735],"content":"Equality(Uri, Uri)","needQuote":true,"nodes":[{"content":"Equality(Uri, Uri)","pos":[0,18]}]},{"pos":[70442,70462],"content":"Inequality(Uri, Uri)","needQuote":true,"nodes":[{"content":"Inequality(Uri, Uri)","pos":[0,20]}]},{"pos":[72191,72201],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[73705,73740],"content":"TryCreate(String, UriKind, out Uri)","needQuote":true,"nodes":[{"content":"TryCreate(String, UriKind, out Uri)","pos":[0,35]}]},{"content":"\\n&lt;p&gt;The type of the Uri.&lt;/p&gt;\\n","pos":[74968,74999],"source":"\\n<p>The type of the Uri.</p>\\n"},{"pos":[76100,76131],"content":"TryCreate(Uri, String, out Uri)","needQuote":true,"nodes":[{"content":"TryCreate(Uri, String, out Uri)","pos":[0,31]}]},{"pos":[78640,78668],"content":"TryCreate(Uri, Uri, out Uri)","needQuote":true,"nodes":[{"content":"TryCreate(Uri, Uri, out Uri)","pos":[0,28]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;baseUri&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[80632,80681],"source":"\\n<p>\\n<em>baseUri</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[80682,80688],"source":" </p>\\n"},{"pos":[81201,81227],"content":"UnescapeDataString(String)","needQuote":true,"nodes":[{"content":"UnescapeDataString(String)","pos":[0,26]}]},{"content":"\\n&lt;p&gt;The string to unescape.&lt;/p&gt;\\n","pos":[81944,81978],"source":"\\n<p>The string to unescape.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;stringToUnescape&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[82317,82375],"source":"\\n<p>\\n<em>stringToUnescape</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[82376,82382],"source":" </p>\\n"},{"pos":[82800,82806],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[82937,82943],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[83130,83152],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[83300,83306],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[83373,83374],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[83424,83430],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[83491,83492]},{"pos":[83547,83553],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[83613,83614],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[83711,83717],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[83784,83785],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[83835,83841],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[83902,83903]},{"pos":[83958,83964],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[84024,84025],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[84270,84301],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[84467,84482],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[84558,84559],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[84609,84615],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[84676,84677]},{"pos":[84732,84738],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[84798,84799],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[84905,84920],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[84996,84997],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[85047,85053],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[85114,85115]},{"pos":[85170,85176],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[85236,85237],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[85463,85472],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[85565,85572],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[85640,85641],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[85668,85669],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[85738,85745],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[85813,85814],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[85841,85842],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[86017,86034],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[86143,86158],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[86234,86235],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[86262,86263],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[86340,86355],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[86431,86432],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[86459,86460],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[86629,86635],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[86781,86788],"content":"UriKind","needQuote":true,"nodes":[{"content":"UriKind","pos":[0,7]}]},{"pos":[86933,86936],"content":"Uri","needQuote":true,"nodes":[{"content":"Uri","pos":[0,3]}]},{"pos":[87081,87096],"content":"UriHostNameType","needQuote":true,"nodes":[{"content":"UriHostNameType","pos":[0,15]}]},{"pos":[87269,87276],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[87423,87428],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[87535,87543],"content":"String[]","needQuote":true,"nodes":[{"content":"String[]","pos":[0,8]}]},{"pos":[87671,87677],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":"[]","pos":[87738,87740]},{"pos":[87805,87811],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[87871,87873],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[88017,88030],"content":"UriComponents","needQuote":true,"nodes":[{"content":"UriComponents","pos":[0,13]}]},{"pos":[88199,88208],"content":"UriFormat","needQuote":true,"nodes":[{"content":"UriFormat","pos":[0,9]}]},{"pos":[88372,88388],"content":"StringComparison","needQuote":true,"nodes":[{"content":"StringComparison","pos":[0,16]}]},{"pos":[88591,88605],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[88724,88730],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[88797,88798],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[88848,88854],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[88914,88915],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[88998,89004],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[89071,89072],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[89122,89128],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[89188,89189],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[89379,89392],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[89493,89504],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[89576,89577],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[89604,89605],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[89678,89689],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[89761,89762],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[89789,89790],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[89966,89976],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[90071,90079],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[90148,90149],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[90176,90177],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[90247,90255],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[90324,90325],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[90352,90353],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[90506,90527],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[90712,90730],"content":"UriFormatException","needQuote":true,"nodes":[{"content":"UriFormatException","pos":[0,18]}]},{"pos":[90922,90939],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]},{"pos":[91121,91148],"content":"ArgumentOutOfRangeException","needQuote":true,"nodes":[{"content":"ArgumentOutOfRangeException","pos":[0,27]}]},{"pos":[91375,91400],"content":"InvalidOperationException","needQuote":true,"nodes":[{"content":"InvalidOperationException","pos":[0,25]}]}],"content":"items:\n- uid: System.Uri\n  commentId: T:System.Uri\n  id: Uri\n  parent: System\n  children:\n  - System.Uri.#ctor(System.String)\n  - System.Uri.#ctor(System.String,System.UriKind)\n  - System.Uri.#ctor(System.Uri,System.String)\n  - System.Uri.#ctor(System.Uri,System.Uri)\n  - System.Uri.AbsolutePath\n  - System.Uri.AbsoluteUri\n  - System.Uri.Authority\n  - System.Uri.CheckHostName(System.String)\n  - System.Uri.CheckSchemeName(System.String)\n  - System.Uri.Compare(System.Uri,System.Uri,System.UriComponents,System.UriFormat,System.StringComparison)\n  - System.Uri.DnsSafeHost\n  - System.Uri.Equals(System.Object)\n  - System.Uri.EscapeDataString(System.String)\n  - System.Uri.EscapeUriString(System.String)\n  - System.Uri.Fragment\n  - System.Uri.GetComponents(System.UriComponents,System.UriFormat)\n  - System.Uri.GetHashCode\n  - System.Uri.Host\n  - System.Uri.HostNameType\n  - System.Uri.IdnHost\n  - System.Uri.IsAbsoluteUri\n  - System.Uri.IsBaseOf(System.Uri)\n  - System.Uri.IsDefaultPort\n  - System.Uri.IsFile\n  - System.Uri.IsLoopback\n  - System.Uri.IsUnc\n  - System.Uri.IsWellFormedOriginalString\n  - System.Uri.IsWellFormedUriString(System.String,System.UriKind)\n  - System.Uri.LocalPath\n  - System.Uri.MakeRelativeUri(System.Uri)\n  - System.Uri.op_Equality(System.Uri,System.Uri)\n  - System.Uri.op_Inequality(System.Uri,System.Uri)\n  - System.Uri.OriginalString\n  - System.Uri.PathAndQuery\n  - System.Uri.Port\n  - System.Uri.Query\n  - System.Uri.Scheme\n  - System.Uri.Segments\n  - System.Uri.ToString\n  - System.Uri.TryCreate(System.String,System.UriKind,System.Uri@)\n  - System.Uri.TryCreate(System.Uri,System.String,System.Uri@)\n  - System.Uri.TryCreate(System.Uri,System.Uri,System.Uri@)\n  - System.Uri.UnescapeDataString(System.String)\n  - System.Uri.UserEscaped\n  - System.Uri.UserInfo\n  langs:\n  - csharp\n  - vb\n  name: Uri\n  fullName: System.Uri\n  type: Class\n  source:\n    remote:\n      path: src/System.Runtime/ref/System.Runtime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Uri\n    path: src/System.Runtime/ref/System.Runtime.cs\n    startLine: 2131\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Provides an object representation of a uniform resource identifier (URI) and easy access to the parts of the URI.</p>\\n\"\n  syntax:\n    content: public class Uri\n    content.vb: Public Class Uri\n  seealso:\n  - type: System.Configuration.IdnElement\n    commentId: T:System.Configuration.IdnElement\n  - type: System.Configuration.IriParsingElement\n    commentId: T:System.Configuration.IriParsingElement\n  - type: System.Configuration.UriSection\n    commentId: T:System.Configuration.UriSection\n  - type: System.Uri.DnsSafeHost\n    commentId: P:System.Uri.DnsSafeHost\n  - type: System.Uri.MakeRelative(System.Uri)\n    commentId: M:System.Uri.MakeRelative(System.Uri)\n  - type: System.Uri.IsWellFormedOriginalString\n    commentId: M:System.Uri.IsWellFormedOriginalString\n  - type: System.UriBuilder\n    commentId: T:System.UriBuilder\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: Uri\n- uid: System.Uri.#ctor(System.String)\n  commentId: M:System.Uri.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Uri\n  langs:\n  - csharp\n  - vb\n  name: Uri(String)\n  fullName: System.Uri.Uri(System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Runtime/ref/System.Runtime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Runtime/ref/System.Runtime.cs\n    startLine: 2133\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified URI.</p>\\n\"\n  syntax:\n    content: public Uri(string uriString)\n    content.vb: Public Sub New(uriString As String)\n    parameters:\n    - id: uriString\n      type: System.String\n      description: \"\\n<p>A URI. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>uriString</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.UriFormatException\n    commentId: T:System.UriFormatException\n    description: \"\\n<p>In the <see href=\\\"http://go.microsoft.com/fwlink/?LinkID=247912\\\">.NET for Windows Store apps</see> or the Portable Class Library, catch the base class exception, <xref href=\\\"System.FormatException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, instead.</p>\\n<p>\\n<em>uriString</em> is empty.</p>\\n<p>-or- </p>\\n<p>The scheme specified in <em>uriString</em> is not correctly formed. See <xref href=\\\"System.Uri.CheckSchemeName(System.String)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or- </p>\\n<p>\\n<em>uriString</em> contains too many slashes.</p>\\n<p>-or- </p>\\n<p>The password specified in <em>uriString</em> is not valid.</p>\\n<p>-or- </p>\\n<p>The host name specified in <em>uriString</em> is not valid.</p>\\n<p>-or- </p>\\n<p>The file name specified in <em>uriString</em> is not valid. </p>\\n<p>-or- </p>\\n<p>The user name specified in <em>uriString</em> is not valid.</p>\\n<p>-or- </p>\\n<p>The host or authority name specified in <em>uriString</em> cannot be terminated by backslashes.</p>\\n<p>-or- </p>\\n<p>The port number specified in <em>uriString</em> is not valid or cannot be parsed.</p>\\n<p>-or- </p>\\n<p>The length of <em>uriString</em> exceeds 65519 characters.</p>\\n<p>-or- </p>\\n<p>The length of the scheme specified in <em>uriString</em> exceeds 1023 characters.</p>\\n<p>-or- </p>\\n<p>There is an invalid character sequence in <em>uriString</em>.</p>\\n<p>-or- </p>\\n<p>The MS-DOS path specified in <em>uriString</em> must start with c:\\\\\\\\.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Uri.Uri(String)\n- uid: System.Uri.#ctor(System.String,System.UriKind)\n  commentId: M:System.Uri.#ctor(System.String,System.UriKind)\n  id: '#ctor(System.String,System.UriKind)'\n  parent: System.Uri\n  langs:\n  - csharp\n  - vb\n  name: Uri(String, UriKind)\n  fullName: System.Uri.Uri(System.String, System.UriKind)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Runtime/ref/System.Runtime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Runtime/ref/System.Runtime.cs\n    startLine: 2134\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified URI. This constructor allows you to specify if the URI string is a relative URI, absolute URI, or is indeterminate.</p>\\n\"\n  syntax:\n    content: public Uri(string uriString, UriKind uriKind)\n    content.vb: Public Sub New(uriString As String, uriKind As UriKind)\n    parameters:\n    - id: uriString\n      type: System.String\n      description: \"\\n<p>A string that identifies the resource to be represented by the <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n    - id: uriKind\n      type: System.UriKind\n      description: \"\\n<p>Specifies whether the URI string is a relative URI, absolute URI, or is indeterminate.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>uriKind</em> is invalid. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>uriString</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.UriFormatException\n    commentId: T:System.UriFormatException\n    description: \"\\n<p>In the <see href=\\\"http://go.microsoft.com/fwlink/?LinkID=247912\\\">.NET for Windows Store apps</see> or the Portable Class Library, catch the base class exception, <xref href=\\\"System.FormatException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, instead.</p>\\n<p>\\n<em>uriString</em> contains a relative URI and <em>uriKind</em> is <xref href=\\\"System.UriKind.Absolute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>or</p>\\n<p>\\n<em>uriString</em> contains an absolute URI and <em>uriKind</em> is <xref href=\\\"System.UriKind.Relative\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>or</p>\\n<p>\\n<em>uriString</em> is empty.</p>\\n<p>-or- </p>\\n<p>The scheme specified in <em>uriString</em> is not correctly formed. See <xref href=\\\"System.Uri.CheckSchemeName(System.String)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or- </p>\\n<p>\\n<em>uriString</em> contains too many slashes.</p>\\n<p>-or- </p>\\n<p>The password specified in <em>uriString</em> is not valid.</p>\\n<p>-or- </p>\\n<p>The host name specified in <em>uriString</em> is not valid.</p>\\n<p>-or- </p>\\n<p>The file name specified in <em>uriString</em> is not valid. </p>\\n<p>-or- </p>\\n<p>The user name specified in <em>uriString</em> is not valid.</p>\\n<p>-or- </p>\\n<p>The host or authority name specified in <em>uriString</em> cannot be terminated by backslashes.</p>\\n<p>-or- </p>\\n<p>The port number specified in <em>uriString</em> is not valid or cannot be parsed.</p>\\n<p>-or- </p>\\n<p>The length of <em>uriString</em> exceeds 65519 characters.</p>\\n<p>-or- </p>\\n<p>The length of the scheme specified in <em>uriString</em> exceeds 1023 characters.</p>\\n<p>-or- </p>\\n<p>There is an invalid character sequence in <em>uriString</em>.</p>\\n<p>-or- </p>\\n<p>The MS-DOS path specified in <em>uriString</em> must start with c:\\\\\\\\.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Uri.Uri(String, UriKind)\n- uid: System.Uri.#ctor(System.Uri,System.String)\n  commentId: M:System.Uri.#ctor(System.Uri,System.String)\n  id: '#ctor(System.Uri,System.String)'\n  parent: System.Uri\n  langs:\n  - csharp\n  - vb\n  name: Uri(Uri, String)\n  fullName: System.Uri.Uri(System.Uri, System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Runtime/ref/System.Runtime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Runtime/ref/System.Runtime.cs\n    startLine: 2135\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class based on the specified base URI and relative URI string.</p>\\n\"\n  syntax:\n    content: public Uri(Uri baseUri, string relativeUri)\n    content.vb: Public Sub New(baseUri As Uri, relativeUri As String)\n    parameters:\n    - id: baseUri\n      type: System.Uri\n      description: \"\\n<p>The base URI. </p>\\n\"\n    - id: relativeUri\n      type: System.String\n      description: \"\\n<p>The relative URI to add to the base URI. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>baseUri</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>baseUri</em> is not an absolute <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance. </p>\\n\"\n  - type: System.UriFormatException\n    commentId: T:System.UriFormatException\n    description: \"\\n<p>In the <see href=\\\"http://go.microsoft.com/fwlink/?LinkID=247912\\\">.NET for Windows Store apps</see> or the Portable Class Library, catch the base class exception, <xref href=\\\"System.FormatException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, instead.</p>\\n<p>The URI formed by combining <em>baseUri</em> and <em>relativeUri</em> is empty or contains only spaces.</p>\\n<p>-or- </p>\\n<p>The scheme specified in the URI formed by combining <em>baseUri</em> and <em>relativeUri</em> is not valid.</p>\\n<p>-or- </p>\\n<p>The URI formed by combining <em>baseUri</em> and <em>relativeUri</em> contains too many slashes.</p>\\n<p>-or- </p>\\n<p>The password specified in the URI formed by combining <em>baseUri</em> and <em>relativeUri</em> is not valid.</p>\\n<p>-or- </p>\\n<p>The host name specified in the URI formed by combining <em>baseUri</em> and <em>relativeUri</em> is not valid.</p>\\n<p>-or- </p>\\n<p>The file name specified in the URI formed by combining <em>baseUri</em> and <em>relativeUri</em> is not valid. </p>\\n<p>-or- </p>\\n<p>The user name specified in the URI formed by combining <em>baseUri</em> and <em>relativeUri</em> is not valid.</p>\\n<p>-or- </p>\\n<p>The host or authority name specified in the URI formed by combining <em>baseUri</em> and <em>relativeUri</em> cannot be terminated by backslashes.</p>\\n<p>-or- </p>\\n<p>The port number specified in the URI formed by combining <em>baseUri</em> and <em>relativeUri</em> is not valid or cannot be parsed.</p>\\n<p>-or- </p>\\n<p>The length of the URI formed by combining <em>baseUri</em> and <em>relativeUri</em> exceeds 65519 characters.</p>\\n<p>-or- </p>\\n<p>The length of the scheme specified in the URI formed by combining <em>baseUri</em> and <em>relativeUri</em> exceeds 1023 characters.</p>\\n<p>-or- </p>\\n<p>There is an invalid character sequence in the URI formed by combining <em>baseUri</em> and <em>relativeUri</em>.</p>\\n<p>-or- </p>\\n<p>The MS-DOS path specified in <em>uriString</em> must start with c:\\\\\\\\.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Uri.Uri(Uri, String)\n- uid: System.Uri.#ctor(System.Uri,System.Uri)\n  commentId: M:System.Uri.#ctor(System.Uri,System.Uri)\n  id: '#ctor(System.Uri,System.Uri)'\n  parent: System.Uri\n  langs:\n  - csharp\n  - vb\n  name: Uri(Uri, Uri)\n  fullName: System.Uri.Uri(System.Uri, System.Uri)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Runtime/ref/System.Runtime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Runtime/ref/System.Runtime.cs\n    startLine: 2136\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class based on the combination of a specified base <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance and a relative <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n  syntax:\n    content: public Uri(Uri baseUri, Uri relativeUri)\n    content.vb: Public Sub New(baseUri As Uri, relativeUri As Uri)\n    parameters:\n    - id: baseUri\n      type: System.Uri\n      description: \"\\n<p>An absolute <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is the base for the new <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance. </p>\\n\"\n    - id: relativeUri\n      type: System.Uri\n      description: \"\\n<p>A relative <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance that is combined with <em>baseUri</em>. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>baseUri</em> is not an absolute <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>baseUri</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>baseUri</em> is not an absolute <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance. </p>\\n\"\n  - type: System.UriFormatException\n    commentId: T:System.UriFormatException\n    description: \"\\n<p>In the <see href=\\\"http://go.microsoft.com/fwlink/?LinkID=247912\\\">.NET for Windows Store apps</see> or the Portable Class Library, catch the base class exception, <xref href=\\\"System.FormatException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, instead.</p>\\n<p>The URI formed by combining <em>baseUri</em> and <em>relativeUri</em> is empty or contains only spaces.</p>\\n<p>-or- </p>\\n<p>The scheme specified in the URI formed by combining <em>baseUri</em> and <em>relativeUri</em> is not valid.</p>\\n<p>-or- </p>\\n<p>The URI formed by combining <em>baseUri</em> and <em>relativeUri</em> contains too many slashes.</p>\\n<p>-or- </p>\\n<p>The password specified in the URI formed by combining <em>baseUri</em> and <em>relativeUri</em> is not valid.</p>\\n<p>-or- </p>\\n<p>The host name specified in the URI formed by combining <em>baseUri</em> and <em>relativeUri</em> is not valid.</p>\\n<p>-or- </p>\\n<p>The file name specified in the URI formed by combining <em>baseUri</em> and <em>relativeUri</em> is not valid. </p>\\n<p>-or- </p>\\n<p>The user name specified in the URI formed by combining <em>baseUri</em> and <em>relativeUri</em> is not valid.</p>\\n<p>-or- </p>\\n<p>The host or authority name specified in the URI formed by combining <em>baseUri</em> and <em>relativeUri</em> cannot be terminated by backslashes.</p>\\n<p>-or- </p>\\n<p>The port number specified in the URI formed by combining <em>baseUri</em> and <em>relativeUri</em> is not valid or cannot be parsed.</p>\\n<p>-or- </p>\\n<p>The length of the URI formed by combining <em>baseUri</em> and <em>relativeUri</em> exceeds 65519 characters.</p>\\n<p>-or- </p>\\n<p>The length of the scheme specified in the URI formed by combining <em>baseUri</em> and <em>relativeUri</em> exceeds 1023 characters.</p>\\n<p>-or- </p>\\n<p>There is an invalid character sequence in the URI formed by combining <em>baseUri</em> and <em>relativeUri</em>.</p>\\n<p>-or- </p>\\n<p>The MS-DOS path specified in <em>uriString</em> must start with c:\\\\\\\\.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Uri.Uri(Uri, Uri)\n- uid: System.Uri.AbsolutePath\n  commentId: P:System.Uri.AbsolutePath\n  id: AbsolutePath\n  parent: System.Uri\n  langs:\n  - csharp\n  - vb\n  name: AbsolutePath\n  fullName: System.Uri.AbsolutePath\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime/ref/System.Runtime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AbsolutePath\n    path: src/System.Runtime/ref/System.Runtime.cs\n    startLine: 2137\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Gets the absolute path of the URI.</p>\\n\"\n  syntax:\n    content: public string AbsolutePath { get; }\n    content.vb: Public ReadOnly Property AbsolutePath As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>A <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> containing the absolute path to the resource.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>This instance represents a relative URI, and this property is valid only for absolute URIs. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Uri.AbsolutePath\n- uid: System.Uri.AbsoluteUri\n  commentId: P:System.Uri.AbsoluteUri\n  id: AbsoluteUri\n  parent: System.Uri\n  langs:\n  - csharp\n  - vb\n  name: AbsoluteUri\n  fullName: System.Uri.AbsoluteUri\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime/ref/System.Runtime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AbsoluteUri\n    path: src/System.Runtime/ref/System.Runtime.cs\n    startLine: 2138\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Gets the absolute URI.</p>\\n\"\n  syntax:\n    content: public string AbsoluteUri { get; }\n    content.vb: Public ReadOnly Property AbsoluteUri As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>A <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> containing the entire URI.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>This instance represents a relative URI, and this property is valid only for absolute URIs. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Uri.AbsoluteUri\n- uid: System.Uri.Authority\n  commentId: P:System.Uri.Authority\n  id: Authority\n  parent: System.Uri\n  langs:\n  - csharp\n  - vb\n  name: Authority\n  fullName: System.Uri.Authority\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime/ref/System.Runtime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Authority\n    path: src/System.Runtime/ref/System.Runtime.cs\n    startLine: 2139\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Gets the Domain Name System (DNS) host name or IP address and the port number for a server.</p>\\n\"\n  syntax:\n    content: public string Authority { get; }\n    content.vb: Public ReadOnly Property Authority As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>A <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> containing the authority component of the URI represented by this instance.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>This instance represents a relative URI, and this property is valid only for absolute URIs. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Uri.Authority\n- uid: System.Uri.DnsSafeHost\n  commentId: P:System.Uri.DnsSafeHost\n  id: DnsSafeHost\n  parent: System.Uri\n  langs:\n  - csharp\n  - vb\n  name: DnsSafeHost\n  fullName: System.Uri.DnsSafeHost\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime/ref/System.Runtime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: DnsSafeHost\n    path: src/System.Runtime/ref/System.Runtime.cs\n    startLine: 2140\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Gets an unescaped host name that is safe to use for DNS resolution.</p>\\n\"\n  syntax:\n    content: public string DnsSafeHost { get; }\n    content.vb: Public ReadOnly Property DnsSafeHost As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>A <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the unescaped host part of the URI that is suitable for DNS resolution; or the original unescaped host string, if it is already suitable for resolution.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>This instance represents a relative URI, and this property is valid only for absolute URIs. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Uri.DnsSafeHost\n- uid: System.Uri.Fragment\n  commentId: P:System.Uri.Fragment\n  id: Fragment\n  parent: System.Uri\n  langs:\n  - csharp\n  - vb\n  name: Fragment\n  fullName: System.Uri.Fragment\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime/ref/System.Runtime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Fragment\n    path: src/System.Runtime/ref/System.Runtime.cs\n    startLine: 2141\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Gets the escaped URI fragment.</p>\\n\"\n  syntax:\n    content: public string Fragment { get; }\n    content.vb: Public ReadOnly Property Fragment As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>A <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains any URI fragment information.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>This instance represents a relative URI, and this property is valid only for absolute URIs. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Uri.Fragment\n- uid: System.Uri.Host\n  commentId: P:System.Uri.Host\n  id: Host\n  parent: System.Uri\n  langs:\n  - csharp\n  - vb\n  name: Host\n  fullName: System.Uri.Host\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime/ref/System.Runtime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Host\n    path: src/System.Runtime/ref/System.Runtime.cs\n    startLine: 2142\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Gets the host component of this instance.</p>\\n\"\n  syntax:\n    content: public string Host { get; }\n    content.vb: Public ReadOnly Property Host As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>A <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the host name. This is usually the DNS host name or IP address of the server.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>This instance represents a relative URI, and this property is valid only for absolute URIs. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Uri.Host\n- uid: System.Uri.HostNameType\n  commentId: P:System.Uri.HostNameType\n  id: HostNameType\n  parent: System.Uri\n  langs:\n  - csharp\n  - vb\n  name: HostNameType\n  fullName: System.Uri.HostNameType\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime/ref/System.Runtime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: HostNameType\n    path: src/System.Runtime/ref/System.Runtime.cs\n    startLine: 2143\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Gets the type of the host name specified in the URI.</p>\\n\"\n  syntax:\n    content: public UriHostNameType HostNameType { get; }\n    content.vb: Public ReadOnly Property HostNameType As UriHostNameType\n    parameters: []\n    return:\n      type: System.UriHostNameType\n      description: \"\\n<p>A member of the <xref href=\\\"System.UriHostNameType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> enumeration.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>This instance represents a relative URI, and this property is valid only for absolute URIs. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Uri.HostNameType\n- uid: System.Uri.IdnHost\n  commentId: P:System.Uri.IdnHost\n  id: IdnHost\n  parent: System.Uri\n  langs:\n  - csharp\n  - vb\n  name: IdnHost\n  fullName: System.Uri.IdnHost\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime/ref/System.Runtime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IdnHost\n    path: src/System.Runtime/ref/System.Runtime.cs\n    startLine: 2144\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>The RFC 3490 compliant International Domain Name of the host, using Punycode as appropriate.</p>\\n\"\n  syntax:\n    content: public string IdnHost { get; }\n    content.vb: Public ReadOnly Property IdnHost As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>Returns the hostname, formatted with Punycode according to the IDN standard.<xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Uri.IdnHost\n- uid: System.Uri.IsAbsoluteUri\n  commentId: P:System.Uri.IsAbsoluteUri\n  id: IsAbsoluteUri\n  parent: System.Uri\n  langs:\n  - csharp\n  - vb\n  name: IsAbsoluteUri\n  fullName: System.Uri.IsAbsoluteUri\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime/ref/System.Runtime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsAbsoluteUri\n    path: src/System.Runtime/ref/System.Runtime.cs\n    startLine: 2145\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Gets whether the <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance is absolute.</p>\\n\"\n  syntax:\n    content: public bool IsAbsoluteUri { get; }\n    content.vb: Public ReadOnly Property IsAbsoluteUri As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>A <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that is <strong>true</strong> if the <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance is absolute; otherwise, <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Uri.IsAbsoluteUri\n- uid: System.Uri.IsDefaultPort\n  commentId: P:System.Uri.IsDefaultPort\n  id: IsDefaultPort\n  parent: System.Uri\n  langs:\n  - csharp\n  - vb\n  name: IsDefaultPort\n  fullName: System.Uri.IsDefaultPort\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime/ref/System.Runtime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsDefaultPort\n    path: src/System.Runtime/ref/System.Runtime.cs\n    startLine: 2146\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Gets whether the port value of the URI is the default for this scheme.</p>\\n\"\n  syntax:\n    content: public bool IsDefaultPort { get; }\n    content.vb: Public ReadOnly Property IsDefaultPort As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>A <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that is <strong>true</strong> if the value in the <xref href=\\\"System.Uri.Port\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is the default port for this scheme; otherwise, <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>This instance represents a relative URI, and this property is valid only for absolute URIs. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Uri.IsDefaultPort\n- uid: System.Uri.IsFile\n  commentId: P:System.Uri.IsFile\n  id: IsFile\n  parent: System.Uri\n  langs:\n  - csharp\n  - vb\n  name: IsFile\n  fullName: System.Uri.IsFile\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime/ref/System.Runtime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsFile\n    path: src/System.Runtime/ref/System.Runtime.cs\n    startLine: 2147\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Gets a value indicating whether the specified <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is a file URI.</p>\\n\"\n  syntax:\n    content: public bool IsFile { get; }\n    content.vb: Public ReadOnly Property IsFile As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>A <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that is <strong>true</strong> if the <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is a file URI; otherwise, <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>This instance represents a relative URI, and this property is valid only for absolute URIs. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Uri.IsFile\n- uid: System.Uri.IsLoopback\n  commentId: P:System.Uri.IsLoopback\n  id: IsLoopback\n  parent: System.Uri\n  langs:\n  - csharp\n  - vb\n  name: IsLoopback\n  fullName: System.Uri.IsLoopback\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime/ref/System.Runtime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsLoopback\n    path: src/System.Runtime/ref/System.Runtime.cs\n    startLine: 2148\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Gets whether the specified <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> references the local host.</p>\\n\"\n  syntax:\n    content: public bool IsLoopback { get; }\n    content.vb: Public ReadOnly Property IsLoopback As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>A <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that is <strong>true</strong> if this <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> references the local host; otherwise, <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>This instance represents a relative URI, and this property is valid only for absolute URIs. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Uri.IsLoopback\n- uid: System.Uri.IsUnc\n  commentId: P:System.Uri.IsUnc\n  id: IsUnc\n  parent: System.Uri\n  langs:\n  - csharp\n  - vb\n  name: IsUnc\n  fullName: System.Uri.IsUnc\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime/ref/System.Runtime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsUnc\n    path: src/System.Runtime/ref/System.Runtime.cs\n    startLine: 2149\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Gets whether the specified <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is a universal naming convention (UNC) path.</p>\\n\"\n  syntax:\n    content: public bool IsUnc { get; }\n    content.vb: Public ReadOnly Property IsUnc As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>A <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that is <strong>true</strong> if the <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is a UNC path; otherwise, <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>This instance represents a relative URI, and this property is valid only for absolute URIs. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Uri.IsUnc\n- uid: System.Uri.LocalPath\n  commentId: P:System.Uri.LocalPath\n  id: LocalPath\n  parent: System.Uri\n  langs:\n  - csharp\n  - vb\n  name: LocalPath\n  fullName: System.Uri.LocalPath\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime/ref/System.Runtime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: LocalPath\n    path: src/System.Runtime/ref/System.Runtime.cs\n    startLine: 2150\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Gets a local operating-system representation of a file name.</p>\\n\"\n  syntax:\n    content: public string LocalPath { get; }\n    content.vb: Public ReadOnly Property LocalPath As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>A <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the local operating-system representation of a file name.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>This instance represents a relative URI, and this property is valid only for absolute URIs. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Uri.LocalPath\n- uid: System.Uri.OriginalString\n  commentId: P:System.Uri.OriginalString\n  id: OriginalString\n  parent: System.Uri\n  langs:\n  - csharp\n  - vb\n  name: OriginalString\n  fullName: System.Uri.OriginalString\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime/ref/System.Runtime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: OriginalString\n    path: src/System.Runtime/ref/System.Runtime.cs\n    startLine: 2151\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Gets the original URI string that was passed to the <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> constructor.</p>\\n\"\n  syntax:\n    content: public string OriginalString { get; }\n    content.vb: Public ReadOnly Property OriginalString As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>A <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> containing the exact URI specified when this instance was constructed; otherwise, <xref href=\\\"System.String.Empty\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>This instance represents a relative URI, and this property is valid only for absolute URIs. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Uri.OriginalString\n- uid: System.Uri.PathAndQuery\n  commentId: P:System.Uri.PathAndQuery\n  id: PathAndQuery\n  parent: System.Uri\n  langs:\n  - csharp\n  - vb\n  name: PathAndQuery\n  fullName: System.Uri.PathAndQuery\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime/ref/System.Runtime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: PathAndQuery\n    path: src/System.Runtime/ref/System.Runtime.cs\n    startLine: 2152\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Gets the <xref href=\\\"System.Uri.AbsolutePath\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and <xref href=\\\"System.Uri.Query\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> properties separated by a question mark (?).</p>\\n\"\n  syntax:\n    content: public string PathAndQuery { get; }\n    content.vb: Public ReadOnly Property PathAndQuery As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>A <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the <xref href=\\\"System.Uri.AbsolutePath\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and <xref href=\\\"System.Uri.Query\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> properties separated by a question mark (?).</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>This instance represents a relative URI, and this property is valid only for absolute URIs. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Uri.PathAndQuery\n- uid: System.Uri.Port\n  commentId: P:System.Uri.Port\n  id: Port\n  parent: System.Uri\n  langs:\n  - csharp\n  - vb\n  name: Port\n  fullName: System.Uri.Port\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime/ref/System.Runtime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Port\n    path: src/System.Runtime/ref/System.Runtime.cs\n    startLine: 2153\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Gets the port number of this URI.</p>\\n\"\n  syntax:\n    content: public int Port { get; }\n    content.vb: Public ReadOnly Property Port As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>An <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that contains the port number for this URI.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>This instance represents a relative URI, and this property is valid only for absolute URIs. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Uri.Port\n- uid: System.Uri.Query\n  commentId: P:System.Uri.Query\n  id: Query\n  parent: System.Uri\n  langs:\n  - csharp\n  - vb\n  name: Query\n  fullName: System.Uri.Query\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime/ref/System.Runtime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Query\n    path: src/System.Runtime/ref/System.Runtime.cs\n    startLine: 2154\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Gets any query information included in the specified URI.</p>\\n\"\n  syntax:\n    content: public string Query { get; }\n    content.vb: Public ReadOnly Property Query As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>A <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains any query information included in the specified URI.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>This instance represents a relative URI, and this property is valid only for absolute URIs. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Uri.Query\n- uid: System.Uri.Scheme\n  commentId: P:System.Uri.Scheme\n  id: Scheme\n  parent: System.Uri\n  langs:\n  - csharp\n  - vb\n  name: Scheme\n  fullName: System.Uri.Scheme\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime/ref/System.Runtime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Scheme\n    path: src/System.Runtime/ref/System.Runtime.cs\n    startLine: 2155\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Gets the scheme name for this URI.</p>\\n\"\n  syntax:\n    content: public string Scheme { get; }\n    content.vb: Public ReadOnly Property Scheme As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>A <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the scheme for this URI, converted to lowercase.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>This instance represents a relative URI, and this property is valid only for absolute URIs. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Uri.Scheme\n- uid: System.Uri.Segments\n  commentId: P:System.Uri.Segments\n  id: Segments\n  parent: System.Uri\n  langs:\n  - csharp\n  - vb\n  name: Segments\n  fullName: System.Uri.Segments\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime/ref/System.Runtime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Segments\n    path: src/System.Runtime/ref/System.Runtime.cs\n    startLine: 2156\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Gets an array containing the path segments that make up the specified URI.</p>\\n\"\n  syntax:\n    content: public string[] Segments { get; }\n    content.vb: Public ReadOnly Property Segments As String()\n    parameters: []\n    return:\n      type: System.String[]\n      description: \"\\n<p>A <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> array that contains the path segments that make up the specified URI.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>This instance represents a relative URI, and this property is valid only for absolute URIs. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Uri.Segments\n- uid: System.Uri.UserEscaped\n  commentId: P:System.Uri.UserEscaped\n  id: UserEscaped\n  parent: System.Uri\n  langs:\n  - csharp\n  - vb\n  name: UserEscaped\n  fullName: System.Uri.UserEscaped\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime/ref/System.Runtime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: UserEscaped\n    path: src/System.Runtime/ref/System.Runtime.cs\n    startLine: 2157\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Indicates that the URI string was completely escaped before the <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance was created.</p>\\n\"\n  syntax:\n    content: public bool UserEscaped { get; }\n    content.vb: Public ReadOnly Property UserEscaped As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>A <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that is <strong>true</strong> if the <em>dontEscape</em> parameter was set to <strong>true</strong> when the <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance was created; otherwise, <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Uri.UserEscaped\n- uid: System.Uri.UserInfo\n  commentId: P:System.Uri.UserInfo\n  id: UserInfo\n  parent: System.Uri\n  langs:\n  - csharp\n  - vb\n  name: UserInfo\n  fullName: System.Uri.UserInfo\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime/ref/System.Runtime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: UserInfo\n    path: src/System.Runtime/ref/System.Runtime.cs\n    startLine: 2158\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Gets the user name, password, or other user-specific information associated with the specified URI.</p>\\n\"\n  syntax:\n    content: public string UserInfo { get; }\n    content.vb: Public ReadOnly Property UserInfo As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>A <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the user information associated with the URI. The returned value does not include the '@' character reserved for delimiting the user information part of the URI.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>This instance represents a relative URI, and this property is valid only for absolute URIs. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Uri.UserInfo\n- uid: System.Uri.CheckHostName(System.String)\n  commentId: M:System.Uri.CheckHostName(System.String)\n  id: CheckHostName(System.String)\n  parent: System.Uri\n  langs:\n  - csharp\n  - vb\n  name: CheckHostName(String)\n  fullName: System.Uri.CheckHostName(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime/ref/System.Runtime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CheckHostName\n    path: src/System.Runtime/ref/System.Runtime.cs\n    startLine: 2159\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Determines whether the specified host name is a valid DNS name.</p>\\n\"\n  syntax:\n    content: public static UriHostNameType CheckHostName(string name)\n    content.vb: Public Shared Function CheckHostName(name As String) As UriHostNameType\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The host name to validate. This can be an IPv4 or IPv6 address or an Internet host name. </p>\\n\"\n    return:\n      type: System.UriHostNameType\n      description: \"\\n<p>A <xref href=\\\"System.UriHostNameType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that indicates the type of the host name. If the type of the host name cannot be determined or if the host name is <strong>null</strong> or a zero-length string, this method returns <xref href=\\\"System.UriHostNameType.Unknown\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Uri.CheckHostName(String)\n- uid: System.Uri.CheckSchemeName(System.String)\n  commentId: M:System.Uri.CheckSchemeName(System.String)\n  id: CheckSchemeName(System.String)\n  parent: System.Uri\n  langs:\n  - csharp\n  - vb\n  name: CheckSchemeName(String)\n  fullName: System.Uri.CheckSchemeName(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime/ref/System.Runtime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CheckSchemeName\n    path: src/System.Runtime/ref/System.Runtime.cs\n    startLine: 2160\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Determines whether the specified scheme name is valid.</p>\\n\"\n  syntax:\n    content: public static bool CheckSchemeName(string schemeName)\n    content.vb: Public Shared Function CheckSchemeName(schemeName As String) As Boolean\n    parameters:\n    - id: schemeName\n      type: System.String\n      description: \"\\n<p>The scheme name to validate. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>A <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that is <strong>true</strong> if the scheme name is valid; otherwise, <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Uri.CheckSchemeName(String)\n- uid: System.Uri.Compare(System.Uri,System.Uri,System.UriComponents,System.UriFormat,System.StringComparison)\n  commentId: M:System.Uri.Compare(System.Uri,System.Uri,System.UriComponents,System.UriFormat,System.StringComparison)\n  id: Compare(System.Uri,System.Uri,System.UriComponents,System.UriFormat,System.StringComparison)\n  parent: System.Uri\n  langs:\n  - csharp\n  - vb\n  name: Compare(Uri, Uri, UriComponents, UriFormat, StringComparison)\n  fullName: System.Uri.Compare(System.Uri, System.Uri, System.UriComponents, System.UriFormat, System.StringComparison)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime/ref/System.Runtime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Compare\n    path: src/System.Runtime/ref/System.Runtime.cs\n    startLine: 2161\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Compares the specified parts of two URIs using the specified comparison rules.</p>\\n\"\n  syntax:\n    content: public static int Compare(Uri uri1, Uri uri2, UriComponents partsToCompare, UriFormat compareFormat, StringComparison comparisonType)\n    content.vb: Public Shared Function Compare(uri1 As Uri, uri2 As Uri, partsToCompare As UriComponents, compareFormat As UriFormat, comparisonType As StringComparison) As Integer\n    parameters:\n    - id: uri1\n      type: System.Uri\n      description: \"\\n<p>The first <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    - id: uri2\n      type: System.Uri\n      description: \"\\n<p>The second <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    - id: partsToCompare\n      type: System.UriComponents\n      description: \"\\n<p>A bitwise combination of the <xref href=\\\"System.UriComponents\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values that specifies the parts of <em>uri1</em> and <em>uri2</em> to compare.</p>\\n\"\n    - id: compareFormat\n      type: System.UriFormat\n      description: \"\\n<p>One of the <xref href=\\\"System.UriFormat\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values that specifies the character escaping used when the URI components are compared.</p>\\n\"\n    - id: comparisonType\n      type: System.StringComparison\n      description: \"\\n<p>One of the <xref href=\\\"System.StringComparison\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values.</p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>An <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that indicates the lexical relationship between the compared <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> components.</p>\\n<p>Value</p>\\n<p>Meaning</p>\\n<table><tbody><tr><td>\\n<p>Less than zero</p>\\n</td><td>\\n<p>\\n<em>uri1</em> is less than <em>uri2</em>.</p>\\n</td></tr><tr><td>\\n<p>Zero</p>\\n</td><td>\\n<p>\\n<em>uri1</em> equals <em>uri2</em>.</p>\\n</td></tr><tr><td>\\n<p>Greater than zero</p>\\n</td><td>\\n<p>\\n<em>uri1</em> is greater than <em>uri2</em>.</p>\\n</td></tr></tbody></table>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>comparisonType</em> is not a valid <xref href=\\\"System.StringComparison\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Uri.Compare(Uri, Uri, UriComponents, UriFormat, StringComparison)\n- uid: System.Uri.Equals(System.Object)\n  commentId: M:System.Uri.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Uri\n  langs:\n  - csharp\n  - vb\n  name: Equals(Object)\n  fullName: System.Uri.Equals(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime/ref/System.Runtime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Equals\n    path: src/System.Runtime/ref/System.Runtime.cs\n    startLine: 2162\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Compares two <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instances for equality.</p>\\n\"\n  syntax:\n    content: public override bool Equals(object comparand)\n    content.vb: Public Overrides Function Equals(comparand As Object) As Boolean\n    parameters:\n    - id: comparand\n      type: System.Object\n      description: \"\\n<p>The <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance or a URI identifier to compare with the current instance. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>A <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that is <strong>true</strong> if the two instances represent the same URI; otherwise, <strong>false</strong>.</p>\\n\"\n  overridden: System.Object.Equals(System.Object)\n  see:\n  - type: System.Security.Permissions.SecurityPermission\n    commentId: T:System.Security.Permissions.SecurityPermission\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: Uri.Equals(Object)\n- uid: System.Uri.EscapeDataString(System.String)\n  commentId: M:System.Uri.EscapeDataString(System.String)\n  id: EscapeDataString(System.String)\n  parent: System.Uri\n  langs:\n  - csharp\n  - vb\n  name: EscapeDataString(String)\n  fullName: System.Uri.EscapeDataString(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime/ref/System.Runtime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: EscapeDataString\n    path: src/System.Runtime/ref/System.Runtime.cs\n    startLine: 2163\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Converts a string to its escaped representation.</p>\\n\"\n  syntax:\n    content: public static string EscapeDataString(string stringToEscape)\n    content.vb: Public Shared Function EscapeDataString(stringToEscape As String) As String\n    parameters:\n    - id: stringToEscape\n      type: System.String\n      description: \"\\n<p>The string to escape.</p>\\n\"\n    return:\n      type: System.String\n      description: \"\\n<p>A <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the escaped representation of <em>stringToEscape</em>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>stringToEscape</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.UriFormatException\n    commentId: T:System.UriFormatException\n    description: \"\\n<p>In the <see href=\\\"http://go.microsoft.com/fwlink/?LinkID=247912\\\">.NET for Windows Store apps</see> or the Portable Class Library, catch the base class exception, <xref href=\\\"System.FormatException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, instead.</p>\\n<p>The length of <em>stringToEscape</em> exceeds 32766 characters.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Uri.EscapeDataString(String)\n- uid: System.Uri.EscapeUriString(System.String)\n  commentId: M:System.Uri.EscapeUriString(System.String)\n  id: EscapeUriString(System.String)\n  parent: System.Uri\n  langs:\n  - csharp\n  - vb\n  name: EscapeUriString(String)\n  fullName: System.Uri.EscapeUriString(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime/ref/System.Runtime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: EscapeUriString\n    path: src/System.Runtime/ref/System.Runtime.cs\n    startLine: 2164\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Converts a URI string to its escaped representation.</p>\\n\"\n  syntax:\n    content: public static string EscapeUriString(string stringToEscape)\n    content.vb: Public Shared Function EscapeUriString(stringToEscape As String) As String\n    parameters:\n    - id: stringToEscape\n      type: System.String\n      description: \"\\n<p>The string to escape.</p>\\n\"\n    return:\n      type: System.String\n      description: \"\\n<p>A <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the escaped representation of <em>stringToEscape</em>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>stringToEscape</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.UriFormatException\n    commentId: T:System.UriFormatException\n    description: \"\\n<p>In the <see href=\\\"http://go.microsoft.com/fwlink/?LinkID=247912\\\">.NET for Windows Store apps</see> or the Portable Class Library, catch the base class exception, <xref href=\\\"System.FormatException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, instead.</p>\\n<p>The length of <em>stringToEscape</em> exceeds 32766 characters.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Uri.EscapeUriString(String)\n- uid: System.Uri.GetComponents(System.UriComponents,System.UriFormat)\n  commentId: M:System.Uri.GetComponents(System.UriComponents,System.UriFormat)\n  id: GetComponents(System.UriComponents,System.UriFormat)\n  parent: System.Uri\n  langs:\n  - csharp\n  - vb\n  name: GetComponents(UriComponents, UriFormat)\n  fullName: System.Uri.GetComponents(System.UriComponents, System.UriFormat)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime/ref/System.Runtime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetComponents\n    path: src/System.Runtime/ref/System.Runtime.cs\n    startLine: 2165\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Gets the specified components of the current instance using the specified escaping for special characters.</p>\\n\"\n  syntax:\n    content: public string GetComponents(UriComponents components, UriFormat format)\n    content.vb: Public Function GetComponents(components As UriComponents, format As UriFormat) As String\n    parameters:\n    - id: components\n      type: System.UriComponents\n      description: \"\\n<p>A bitwise combination of the <xref href=\\\"System.UriComponents\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values that specifies which parts of the current instance to return to the caller.</p>\\n\"\n    - id: format\n      type: System.UriFormat\n      description: \"\\n<p>One of the <xref href=\\\"System.UriFormat\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values that controls how special characters are escaped. </p>\\n\"\n    return:\n      type: System.String\n      description: \"\\n<p>A <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the components.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>uriComponents</em> is not a combination of valid <xref href=\\\"System.UriComponents\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The current <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is not an absolute URI. Relative URIs cannot be used with this method.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Uri.GetComponents(UriComponents, UriFormat)\n- uid: System.Uri.GetHashCode\n  commentId: M:System.Uri.GetHashCode\n  id: GetHashCode\n  parent: System.Uri\n  langs:\n  - csharp\n  - vb\n  name: GetHashCode()\n  fullName: System.Uri.GetHashCode()\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime/ref/System.Runtime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetHashCode\n    path: src/System.Runtime/ref/System.Runtime.cs\n    startLine: 2166\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Gets the hash code for the URI.</p>\\n\"\n  syntax:\n    content: public override int GetHashCode()\n    content.vb: Public Overrides Function GetHashCode As Integer\n    return:\n      type: System.Int32\n      description: \"\\n<p>An <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> containing the hash value generated for this URI.</p>\\n\"\n  overridden: System.Object.GetHashCode\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: Uri.GetHashCode()\n- uid: System.Uri.IsBaseOf(System.Uri)\n  commentId: M:System.Uri.IsBaseOf(System.Uri)\n  id: IsBaseOf(System.Uri)\n  parent: System.Uri\n  langs:\n  - csharp\n  - vb\n  name: IsBaseOf(Uri)\n  fullName: System.Uri.IsBaseOf(System.Uri)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime/ref/System.Runtime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsBaseOf\n    path: src/System.Runtime/ref/System.Runtime.cs\n    startLine: 2167\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Determines whether the current <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance is a base of the specified <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n  syntax:\n    content: public bool IsBaseOf(Uri uri)\n    content.vb: Public Function IsBaseOf(uri As Uri) As Boolean\n    parameters:\n    - id: uri\n      type: System.Uri\n      description: \"\\n<p>The specified <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance to test. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the current <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance is a base of <em>uri</em>; otherwise, <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>uri</em> is <strong>null</strong>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Uri.IsBaseOf(Uri)\n- uid: System.Uri.IsWellFormedOriginalString\n  commentId: M:System.Uri.IsWellFormedOriginalString\n  id: IsWellFormedOriginalString\n  parent: System.Uri\n  langs:\n  - csharp\n  - vb\n  name: IsWellFormedOriginalString()\n  fullName: System.Uri.IsWellFormedOriginalString()\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime/ref/System.Runtime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsWellFormedOriginalString\n    path: src/System.Runtime/ref/System.Runtime.cs\n    startLine: 2168\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Indicates whether the string used to construct this <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> was well-formed and is not required to be further escaped.</p>\\n\"\n  syntax:\n    content: public bool IsWellFormedOriginalString()\n    content.vb: Public Function IsWellFormedOriginalString As Boolean\n    return:\n      type: System.Boolean\n      description: \"\\n<p>A <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that is <strong>true</strong> if the string was well-formed; else <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Uri.IsWellFormedOriginalString()\n- uid: System.Uri.IsWellFormedUriString(System.String,System.UriKind)\n  commentId: M:System.Uri.IsWellFormedUriString(System.String,System.UriKind)\n  id: IsWellFormedUriString(System.String,System.UriKind)\n  parent: System.Uri\n  langs:\n  - csharp\n  - vb\n  name: IsWellFormedUriString(String, UriKind)\n  fullName: System.Uri.IsWellFormedUriString(System.String, System.UriKind)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime/ref/System.Runtime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsWellFormedUriString\n    path: src/System.Runtime/ref/System.Runtime.cs\n    startLine: 2169\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Indicates whether the string is well-formed by attempting to construct a URI with the string and ensures that the string does not require further escaping.</p>\\n\"\n  syntax:\n    content: public static bool IsWellFormedUriString(string uriString, UriKind uriKind)\n    content.vb: Public Shared Function IsWellFormedUriString(uriString As String, uriKind As UriKind) As Boolean\n    parameters:\n    - id: uriString\n      type: System.String\n      description: \"\\n<p>The string used to attempt to construct a <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    - id: uriKind\n      type: System.UriKind\n      description: \"\\n<p>The type of the <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> in <em>uriString</em>.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>A <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that is <strong>true </strong>if the string was well-formed; else <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Uri.IsWellFormedUriString(String, UriKind)\n- uid: System.Uri.MakeRelativeUri(System.Uri)\n  commentId: M:System.Uri.MakeRelativeUri(System.Uri)\n  id: MakeRelativeUri(System.Uri)\n  parent: System.Uri\n  langs:\n  - csharp\n  - vb\n  name: MakeRelativeUri(Uri)\n  fullName: System.Uri.MakeRelativeUri(System.Uri)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime/ref/System.Runtime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: MakeRelativeUri\n    path: src/System.Runtime/ref/System.Runtime.cs\n    startLine: 2170\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Determines the difference between two <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instances.</p>\\n\"\n  syntax:\n    content: public Uri MakeRelativeUri(Uri uri)\n    content.vb: Public Function MakeRelativeUri(uri As Uri) As Uri\n    parameters:\n    - id: uri\n      type: System.Uri\n      description: \"\\n<p>The URI to compare to the current URI.</p>\\n\"\n    return:\n      type: System.Uri\n      description: \"\\n<p>If the hostname and scheme of this URI instance and <em>uri</em> are the same, then this method returns a relative <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that, when appended to the current URI instance, yields <em>uri</em>.</p>\\n<p>If the hostname or scheme is different, then this method returns a <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>  that represents the <em>uri</em> parameter.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>uri</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>This instance represents a relative URI, and this property is valid only for absolute URIs. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Uri.MakeRelativeUri(Uri)\n- uid: System.Uri.op_Equality(System.Uri,System.Uri)\n  commentId: M:System.Uri.op_Equality(System.Uri,System.Uri)\n  id: op_Equality(System.Uri,System.Uri)\n  parent: System.Uri\n  langs:\n  - csharp\n  - vb\n  name: Equality(Uri, Uri)\n  fullName: System.Uri.Equality(System.Uri, System.Uri)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Runtime/ref/System.Runtime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Equality\n    path: src/System.Runtime/ref/System.Runtime.cs\n    startLine: 2171\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Determines whether two <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instances have the same value.</p>\\n\"\n  syntax:\n    content: public static bool operator ==(Uri uri1, Uri uri2)\n    content.vb: Public Shared Operator =(uri1 As Uri, uri2 As Uri) As Boolean\n    parameters:\n    - id: uri1\n      type: System.Uri\n      description: \"\\n<p>A <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance to compare with <em>uri2</em>. </p>\\n\"\n    - id: uri2\n      type: System.Uri\n      description: \"\\n<p>A <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance to compare with <em>uri1</em>. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>A <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that is <strong>true</strong> if the <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instances are equivalent; otherwise, <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Uri.Equality(Uri, Uri)\n- uid: System.Uri.op_Inequality(System.Uri,System.Uri)\n  commentId: M:System.Uri.op_Inequality(System.Uri,System.Uri)\n  id: op_Inequality(System.Uri,System.Uri)\n  parent: System.Uri\n  langs:\n  - csharp\n  - vb\n  name: Inequality(Uri, Uri)\n  fullName: System.Uri.Inequality(System.Uri, System.Uri)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Runtime/ref/System.Runtime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Inequality\n    path: src/System.Runtime/ref/System.Runtime.cs\n    startLine: 2172\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Determines whether two <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instances do not have the same value.</p>\\n\"\n  syntax:\n    content: public static bool operator !=(Uri uri1, Uri uri2)\n    content.vb: Public Shared Operator <>(uri1 As Uri, uri2 As Uri) As Boolean\n    parameters:\n    - id: uri1\n      type: System.Uri\n      description: \"\\n<p>A <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance to compare with <em>uri2</em>. </p>\\n\"\n    - id: uri2\n      type: System.Uri\n      description: \"\\n<p>A <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance to compare with <em>uri1</em>. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>A <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that is <strong>true</strong> if the two <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instances are not equal; otherwise, <strong>false</strong>. If either parameter is <strong>null</strong>, this method returns <strong>true</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Uri.Inequality(Uri, Uri)\n- uid: System.Uri.ToString\n  commentId: M:System.Uri.ToString\n  id: ToString\n  parent: System.Uri\n  langs:\n  - csharp\n  - vb\n  name: ToString()\n  fullName: System.Uri.ToString()\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime/ref/System.Runtime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ToString\n    path: src/System.Runtime/ref/System.Runtime.cs\n    startLine: 2173\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Gets a canonical string representation for the specified <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n  syntax:\n    content: public override string ToString()\n    content.vb: Public Overrides Function ToString As String\n    return:\n      type: System.String\n      description: \"\\n<p>A <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance that contains the unescaped canonical representation of the <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance. All characters are unescaped except #, ?, and %.</p>\\n\"\n  overridden: System.Object.ToString\n  see:\n  - type: System.Security.Permissions.SecurityPermission\n    commentId: T:System.Security.Permissions.SecurityPermission\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: Uri.ToString()\n- uid: System.Uri.TryCreate(System.String,System.UriKind,System.Uri@)\n  commentId: M:System.Uri.TryCreate(System.String,System.UriKind,System.Uri@)\n  id: TryCreate(System.String,System.UriKind,System.Uri@)\n  parent: System.Uri\n  langs:\n  - csharp\n  - vb\n  name: TryCreate(String, UriKind, out Uri)\n  fullName: System.Uri.TryCreate(System.String, System.UriKind, out System.Uri)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime/ref/System.Runtime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: TryCreate\n    path: src/System.Runtime/ref/System.Runtime.cs\n    startLine: 2174\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Creates a new <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> using the specified <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance and a <xref href=\\\"System.UriKind\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public static bool TryCreate(string uriString, UriKind uriKind, out Uri result)\n    content.vb: Public Shared Function TryCreate(uriString As String, uriKind As UriKind, ByRef result As Uri) As Boolean\n    parameters:\n    - id: uriString\n      type: System.String\n      description: \"\\n<p>The <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> representing the <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    - id: uriKind\n      type: System.UriKind\n      description: \"\\n<p>The type of the Uri.</p>\\n\"\n    - id: result\n      type: System.Uri\n      description: \"\\n<p>When this method returns, contains the constructed <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>A <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that is <strong>true</strong> if the <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> was successfully created; otherwise, <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Uri.TryCreate(System.String, System.UriKind, ByRef System.Uri)\n  name.vb: TryCreate(String, UriKind, ByRef Uri)\n  nameWithType: Uri.TryCreate(String, UriKind, out Uri)\n  nameWithType.vb: Uri.TryCreate(String, UriKind, ByRef Uri)\n- uid: System.Uri.TryCreate(System.Uri,System.String,System.Uri@)\n  commentId: M:System.Uri.TryCreate(System.Uri,System.String,System.Uri@)\n  id: TryCreate(System.Uri,System.String,System.Uri@)\n  parent: System.Uri\n  langs:\n  - csharp\n  - vb\n  name: TryCreate(Uri, String, out Uri)\n  fullName: System.Uri.TryCreate(System.Uri, System.String, out System.Uri)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime/ref/System.Runtime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: TryCreate\n    path: src/System.Runtime/ref/System.Runtime.cs\n    startLine: 2175\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Creates a new <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> using the specified base and relative <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instances.</p>\\n\"\n  syntax:\n    content: public static bool TryCreate(Uri baseUri, string relativeUri, out Uri result)\n    content.vb: Public Shared Function TryCreate(baseUri As Uri, relativeUri As String, ByRef result As Uri) As Boolean\n    parameters:\n    - id: baseUri\n      type: System.Uri\n      description: \"\\n<p>The base <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    - id: relativeUri\n      type: System.String\n      description: \"\\n<p>The relative <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, represented as a <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, to add to the base <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    - id: result\n      type: System.Uri\n      description: \"\\n<p>When this method returns, contains a <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> constructed from <em>baseUri</em> and <em>relativeUri</em>. This parameter is passed uninitialized.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>A <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that is <strong>true</strong> if the <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> was successfully created; otherwise, <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Uri.TryCreate(System.Uri, System.String, ByRef System.Uri)\n  name.vb: TryCreate(Uri, String, ByRef Uri)\n  nameWithType: Uri.TryCreate(Uri, String, out Uri)\n  nameWithType.vb: Uri.TryCreate(Uri, String, ByRef Uri)\n- uid: System.Uri.TryCreate(System.Uri,System.Uri,System.Uri@)\n  commentId: M:System.Uri.TryCreate(System.Uri,System.Uri,System.Uri@)\n  id: TryCreate(System.Uri,System.Uri,System.Uri@)\n  parent: System.Uri\n  langs:\n  - csharp\n  - vb\n  name: TryCreate(Uri, Uri, out Uri)\n  fullName: System.Uri.TryCreate(System.Uri, System.Uri, out System.Uri)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime/ref/System.Runtime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: TryCreate\n    path: src/System.Runtime/ref/System.Runtime.cs\n    startLine: 2176\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Creates a new <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> using the specified base and relative <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instances.</p>\\n\"\n  syntax:\n    content: public static bool TryCreate(Uri baseUri, Uri relativeUri, out Uri result)\n    content.vb: Public Shared Function TryCreate(baseUri As Uri, relativeUri As Uri, ByRef result As Uri) As Boolean\n    parameters:\n    - id: baseUri\n      type: System.Uri\n      description: \"\\n<p>The base <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n    - id: relativeUri\n      type: System.Uri\n      description: \"\\n<p>The relative <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to add to the base <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n    - id: result\n      type: System.Uri\n      description: \"\\n<p>When this method returns, contains a <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> constructed from <em>baseUri</em> and <em>relativeUri</em>. This parameter is passed uninitialized.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>A <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that is <strong>true</strong> if the <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> was successfully created; otherwise, <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>baseUri</em> is <strong>null</strong>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Uri.TryCreate(System.Uri, System.Uri, ByRef System.Uri)\n  name.vb: TryCreate(Uri, Uri, ByRef Uri)\n  nameWithType: Uri.TryCreate(Uri, Uri, out Uri)\n  nameWithType.vb: Uri.TryCreate(Uri, Uri, ByRef Uri)\n- uid: System.Uri.UnescapeDataString(System.String)\n  commentId: M:System.Uri.UnescapeDataString(System.String)\n  id: UnescapeDataString(System.String)\n  parent: System.Uri\n  langs:\n  - csharp\n  - vb\n  name: UnescapeDataString(String)\n  fullName: System.Uri.UnescapeDataString(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime/ref/System.Runtime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: UnescapeDataString\n    path: src/System.Runtime/ref/System.Runtime.cs\n    startLine: 2177\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Converts a string to its unescaped representation.</p>\\n\"\n  syntax:\n    content: public static string UnescapeDataString(string stringToUnescape)\n    content.vb: Public Shared Function UnescapeDataString(stringToUnescape As String) As String\n    parameters:\n    - id: stringToUnescape\n      type: System.String\n      description: \"\\n<p>The string to unescape.</p>\\n\"\n    return:\n      type: System.String\n      description: \"\\n<p>A <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the unescaped representation of <em>stringToUnescape</em>. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>stringToUnescape</em> is <strong>null</strong>. </p>\\n\"\n  seealso:\n  - type: System.Uri.EscapeDataString(System.String)\n    commentId: M:System.Uri.EscapeDataString(System.String)\n  - type: System.Uri.EscapeUriString(System.String)\n    commentId: M:System.Uri.EscapeUriString(System.String)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Uri.UnescapeDataString(String)\nreferences:\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.UriKind\n  parent: System\n  isExternal: false\n  name: UriKind\n  fullName: System.UriKind\n  commentId: T:System.UriKind\n  nameWithType: UriKind\n- uid: System.Uri\n  parent: System\n  isExternal: false\n  name: Uri\n  fullName: System.Uri\n  commentId: T:System.Uri\n  nameWithType: Uri\n- uid: System.UriHostNameType\n  parent: System\n  isExternal: false\n  name: UriHostNameType\n  fullName: System.UriHostNameType\n  commentId: T:System.UriHostNameType\n  nameWithType: UriHostNameType\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  commentId: T:System.Int32\n  nameWithType: Int32\n- uid: System.String[]\n  name: String[]\n  fullName: System.String[]\n  fullname.vb: System.String()\n  name.vb: String()\n  spec.csharp:\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: String[]\n  nameWithType.vb: String()\n- uid: System.UriComponents\n  parent: System\n  isExternal: false\n  name: UriComponents\n  fullName: System.UriComponents\n  commentId: T:System.UriComponents\n  nameWithType: UriComponents\n- uid: System.UriFormat\n  parent: System\n  isExternal: false\n  name: UriFormat\n  fullName: System.UriFormat\n  commentId: T:System.UriFormat\n  nameWithType: UriFormat\n- uid: System.StringComparison\n  parent: System\n  isExternal: false\n  name: StringComparison\n  fullName: System.StringComparison\n  commentId: T:System.StringComparison\n  nameWithType: StringComparison\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.UriFormatException\n  isExternal: false\n  name: UriFormatException\n  fullName: System.UriFormatException\n  nameWithType: UriFormatException\n  commentId: T:System.UriFormatException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  commentId: T:System.ArgumentOutOfRangeException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  fullName: System.InvalidOperationException\n  nameWithType: InvalidOperationException\n  commentId: T:System.InvalidOperationException\n"}