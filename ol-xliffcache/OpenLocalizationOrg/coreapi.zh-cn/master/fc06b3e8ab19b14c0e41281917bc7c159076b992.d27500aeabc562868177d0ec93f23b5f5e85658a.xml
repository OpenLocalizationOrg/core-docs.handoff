{"nodes":[{"pos":[187,200],"content":"IEquatable<T>","needQuote":true,"nodes":[{"content":"IEquatable&lt;T&gt;","pos":[0,13],"source":"IEquatable<T>"}]},{"content":"\\n&lt;p&gt;The type of objects to compare.&lt;/p&gt;\\n","pos":[851,893],"source":"\\n<p>The type of objects to compare.</p>\\n"},{"pos":[1425,1434],"content":"Equals(T)","needQuote":true,"nodes":[{"content":"Equals(T)","pos":[0,9]}]},{"content":"\\n&lt;p&gt;An object to compare with this object.&lt;/p&gt;\\n","pos":[2044,2093],"source":"\\n<p>An object to compare with this object.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the current object is equal to the &lt;em&gt;other&lt;/em&gt; parameter; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[2154,2287],"source":"\\n<p>\\n<strong>true</strong> if the current object is equal to the <em>other</em> parameter; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[2478,2484],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[2586,2587],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[2706,2713],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[2832,2833],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]}],"content":"items:\n- uid: System.IEquatable`1\n  commentId: T:System.IEquatable`1\n  id: IEquatable`1\n  parent: System\n  children:\n  - System.IEquatable`1.Equals(`0)\n  langs:\n  - csharp\n  - vb\n  name: IEquatable<T>\n  fullName: System.IEquatable<T>\n  type: Interface\n  source:\n    remote:\n      path: src/mscorlib/src/System/IEquatable.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: IEquatable\n    path: src/mscorlib/src/System/IEquatable.cs\n    startLine: 7\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Defines a generalized method that a value type or class implements to create a type-specific method for determining equality of instances.</p>\\n\"\n  syntax:\n    content: public interface IEquatable<T>\n    content.vb: Public Interface IEquatable(Of T)\n    typeParameters:\n    - id: T\n      description: \"\\n<p>The type of objects to compare.</p>\\n\"\n  seealso:\n  - type: System.IComparable`1\n    commentId: T:System.IComparable`1\n  - type: System.IComparable\n    commentId: T:System.IComparable\n  modifiers.csharp:\n  - public\n  - interface\n  modifiers.vb:\n  - Public\n  - Interface\n  fullName.vb: System.IEquatable(Of T)\n  name.vb: IEquatable(Of T)\n  nameWithType: IEquatable<T>\n  nameWithType.vb: IEquatable(Of T)\n- uid: System.IEquatable`1.Equals(`0)\n  commentId: M:System.IEquatable`1.Equals(`0)\n  id: Equals(`0)\n  parent: System.IEquatable`1\n  langs:\n  - csharp\n  - vb\n  name: Equals(T)\n  fullName: System.IEquatable<T>.Equals(T)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IEquatable.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Equals\n    path: src/mscorlib/src/System/IEquatable.cs\n    startLine: 9\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Indicates whether the current object is equal to another object of the same type.</p>\\n\"\n  syntax:\n    content: bool Equals(T other)\n    content.vb: Function Equals(other As T) As Boolean\n    parameters:\n    - id: other\n      type: '{T}'\n      description: \"\\n<p>An object to compare with this object.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the current object is equal to the <em>other</em> parameter; otherwise, <strong>false</strong>.</p>\\n\"\n  fullName.vb: System.IEquatable(Of T).Equals(T)\n  nameWithType: IEquatable<T>.Equals(T)\n  nameWithType.vb: IEquatable(Of T).Equals(T)\nreferences:\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: '{T}'\n  definition: T\n  name: T\n  fullName: T\n  nameWithType: T\n  commentId: '!:T'\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: T\n  isExternal: false\n  name: T\n  fullName: T\n  nameWithType: T\n"}