{"nodes":[{"pos":[407,426],"content":"FileSystemEventArgs","needQuote":true,"nodes":[{"content":"FileSystemEventArgs","pos":[0,19]}]},{"pos":[3644,3699],"content":"FileSystemEventArgs(WatcherChangeTypes, String, String)","needQuote":true,"nodes":[{"content":"FileSystemEventArgs(WatcherChangeTypes, String, String)","pos":[0,55]}]},{"content":"\\n&lt;p&gt;The root directory of the affected file or directory.","pos":[4915,4973],"source":"\\n<p>The root directory of the affected file or directory."},{"content":"&lt;/p&gt;\\n","pos":[4974,4980],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The name of the affected file or directory.","pos":[5043,5091],"source":"\\n<p>The name of the affected file or directory."},{"content":"&lt;/p&gt;\\n","pos":[5092,5098],"source":" </p>\\n"},{"pos":[5625,5635],"content":"ChangeType","needQuote":true,"nodes":[{"content":"ChangeType","pos":[0,10]}]},{"pos":[6967,6975],"content":"FullPath","needQuote":true,"nodes":[{"content":"FullPath","pos":[0,8]}]},{"content":"\\n&lt;p&gt;The path of the affected file or directory.&lt;/p&gt;\\n","pos":[7681,7735],"source":"\\n<p>The path of the affected file or directory.</p>\\n"},{"pos":[8163,8167],"content":"Name","needQuote":true,"nodes":[{"content":"Name","pos":[0,4]}]},{"content":"\\n&lt;p&gt;The name of the affected file or directory.&lt;/p&gt;\\n","pos":[8842,8896],"source":"\\n<p>The name of the affected file or directory.</p>\\n"},{"pos":[9075,9084],"content":"System.IO","needQuote":true,"nodes":[{"content":"System.IO","pos":[0,9]}]},{"pos":[9224,9230],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9378,9387],"content":"EventArgs","needQuote":true,"nodes":[{"content":"EventArgs","pos":[0,9]}]},{"pos":[9559,9564],"content":"Empty","needQuote":true,"nodes":[{"content":"Empty","pos":[0,5]}]},{"pos":[9751,9761],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[9856,9864],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[9933,9934],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9961,9962],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10032,10040],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[10109,10110],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10137,10138],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10321,10335],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[10454,10460],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[10527,10528],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10578,10584],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10644,10645],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10728,10734],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[10801,10802],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10852,10858],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10918,10919],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11133,11155],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[11303,11309],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[11376,11377],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11427,11433],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[11494,11495]},{"pos":[11550,11556],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11616,11617],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11714,11720],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[11787,11788],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11838,11844],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[11905,11906]},{"pos":[11961,11967],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12027,12028],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12273,12304],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[12470,12485],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[12561,12562],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12612,12618],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[12679,12680]},{"pos":[12735,12741],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12801,12802],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12908,12923],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[12999,13000],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13050,13056],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[13117,13118]},{"pos":[13173,13179],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13239,13240],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13470,13483],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[13584,13595],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[13667,13668],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13695,13696],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13769,13780],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[13852,13853],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13880,13881],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14056,14065],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[14158,14165],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[14233,14234],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14261,14262],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14331,14338],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[14406,14407],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14434,14435],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14610,14627],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[14736,14751],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[14827,14828],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14855,14856],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14933,14948],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[15024,15025],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15052,15053],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15198,15204],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[15353,15371],"content":"WatcherChangeTypes","needQuote":true,"nodes":[{"content":"WatcherChangeTypes","pos":[0,18]}]},{"pos":[15558,15564],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"items:\n- uid: System.IO.FileSystemEventArgs\n  commentId: T:System.IO.FileSystemEventArgs\n  id: FileSystemEventArgs\n  parent: System.IO\n  children:\n  - System.IO.FileSystemEventArgs.#ctor(System.IO.WatcherChangeTypes,System.String,System.String)\n  - System.IO.FileSystemEventArgs.ChangeType\n  - System.IO.FileSystemEventArgs.FullPath\n  - System.IO.FileSystemEventArgs.Name\n  langs:\n  - csharp\n  - vb\n  name: FileSystemEventArgs\n  fullName: System.IO.FileSystemEventArgs\n  type: Class\n  source:\n    remote:\n      path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: FileSystemEventArgs\n    path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs\n    startLine: 16\n  assemblies:\n  - System.IO.FileSystem.Watcher\n  namespace: System.IO\n  summary: \"\\n<p>Provides data for the directory events: <xref href=\\\"System.IO.FileSystemWatcher.Changed\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.IO.FileSystemWatcher.Created\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.IO.FileSystemWatcher.Deleted\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: 'public class FileSystemEventArgs : EventArgs'\n    content.vb: >-\n      Public Class FileSystemEventArgs\n          Inherits EventArgs\n  seealso:\n  - type: System.IO.FileSystemWatcher.Changed\n    commentId: E:System.IO.FileSystemWatcher.Changed\n  - type: System.IO.FileSystemWatcher.Created\n    commentId: E:System.IO.FileSystemWatcher.Created\n  - type: System.IO.FileSystemWatcher.Deleted\n    commentId: E:System.IO.FileSystemWatcher.Deleted\n  - type: System.IO.FileSystemEventHandler\n    commentId: T:System.IO.FileSystemEventHandler\n  - type: System.IO.FileSystemWatcher\n    commentId: T:System.IO.FileSystemWatcher\n  - type: System.IO.InternalBufferOverflowException\n    commentId: T:System.IO.InternalBufferOverflowException\n  - type: System.IO.NotifyFilters\n    commentId: T:System.IO.NotifyFilters\n  - type: System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)\n    commentId: M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)\n  - type: System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)\n    commentId: M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)\n  - type: System.IO.FileSystemWatcher.Path\n    commentId: P:System.IO.FileSystemWatcher.Path\n  - type: System.IO.RenamedEventArgs\n    commentId: T:System.IO.RenamedEventArgs\n  - type: System.IO.RenamedEventHandler\n    commentId: T:System.IO.RenamedEventHandler\n  - type: System.IO.WaitForChangedResult\n    commentId: T:System.IO.WaitForChangedResult\n  - type: System.IO.WatcherChangeTypes\n    commentId: T:System.IO.WatcherChangeTypes\n  inheritance:\n  - System.Object\n  - System.EventArgs\n  inheritedMembers:\n  - System.EventArgs.Empty\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: FileSystemEventArgs\n- uid: System.IO.FileSystemEventArgs.#ctor(System.IO.WatcherChangeTypes,System.String,System.String)\n  commentId: M:System.IO.FileSystemEventArgs.#ctor(System.IO.WatcherChangeTypes,System.String,System.String)\n  id: '#ctor(System.IO.WatcherChangeTypes,System.String,System.String)'\n  parent: System.IO.FileSystemEventArgs\n  langs:\n  - csharp\n  - vb\n  name: FileSystemEventArgs(WatcherChangeTypes, String, String)\n  fullName: System.IO.FileSystemEventArgs.FileSystemEventArgs(System.IO.WatcherChangeTypes, System.String, System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs\n    startLine: 18\n  assemblies:\n  - System.IO.FileSystem.Watcher\n  namespace: System.IO\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.IO.FileSystemEventArgs\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public FileSystemEventArgs(WatcherChangeTypes changeType, string directory, string name)\n    content.vb: Public Sub New(changeType As WatcherChangeTypes, directory As String, name As String)\n    parameters:\n    - id: changeType\n      type: System.IO.WatcherChangeTypes\n      description: \"\\n<p>One of the <xref href=\\\"System.IO.WatcherChangeTypes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values, which represents the kind of change detected in the file system. </p>\\n\"\n    - id: directory\n      type: System.String\n      description: \"\\n<p>The root directory of the affected file or directory. </p>\\n\"\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the affected file or directory. </p>\\n\"\n  seealso:\n  - type: System.IO.FileSystemWatcher\n    commentId: T:System.IO.FileSystemWatcher\n  - type: System.IO.WatcherChangeTypes\n    commentId: T:System.IO.WatcherChangeTypes\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: FileSystemEventArgs.FileSystemEventArgs(WatcherChangeTypes, String, String)\n- uid: System.IO.FileSystemEventArgs.ChangeType\n  commentId: P:System.IO.FileSystemEventArgs.ChangeType\n  id: ChangeType\n  parent: System.IO.FileSystemEventArgs\n  langs:\n  - csharp\n  - vb\n  name: ChangeType\n  fullName: System.IO.FileSystemEventArgs.ChangeType\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ChangeType\n    path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs\n    startLine: 19\n  assemblies:\n  - System.IO.FileSystem.Watcher\n  namespace: System.IO\n  summary: \"\\n<p>Gets the type of directory event that occurred.</p>\\n\"\n  syntax:\n    content: public WatcherChangeTypes ChangeType { get; }\n    content.vb: Public ReadOnly Property ChangeType As WatcherChangeTypes\n    parameters: []\n    return:\n      type: System.IO.WatcherChangeTypes\n      description: \"\\n<p>One of the <xref href=\\\"System.IO.WatcherChangeTypes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values that represents the kind of change detected in the file system.</p>\\n\"\n  seealso:\n  - type: System.IO.WatcherChangeTypes\n    commentId: T:System.IO.WatcherChangeTypes\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: FileSystemEventArgs.ChangeType\n- uid: System.IO.FileSystemEventArgs.FullPath\n  commentId: P:System.IO.FileSystemEventArgs.FullPath\n  id: FullPath\n  parent: System.IO.FileSystemEventArgs\n  langs:\n  - csharp\n  - vb\n  name: FullPath\n  fullName: System.IO.FileSystemEventArgs.FullPath\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: FullPath\n    path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs\n    startLine: 20\n  assemblies:\n  - System.IO.FileSystem.Watcher\n  namespace: System.IO\n  summary: \"\\n<p>Gets the fully qualifed path of the affected file or directory.</p>\\n\"\n  syntax:\n    content: public string FullPath { get; }\n    content.vb: Public ReadOnly Property FullPath As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The path of the affected file or directory.</p>\\n\"\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: FileSystemEventArgs.FullPath\n- uid: System.IO.FileSystemEventArgs.Name\n  commentId: P:System.IO.FileSystemEventArgs.Name\n  id: Name\n  parent: System.IO.FileSystemEventArgs\n  langs:\n  - csharp\n  - vb\n  name: Name\n  fullName: System.IO.FileSystemEventArgs.Name\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Name\n    path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs\n    startLine: 21\n  assemblies:\n  - System.IO.FileSystem.Watcher\n  namespace: System.IO\n  summary: \"\\n<p>Gets the name of the affected file or directory.</p>\\n\"\n  syntax:\n    content: public string Name { get; }\n    content.vb: Public ReadOnly Property Name As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The name of the affected file or directory.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: FileSystemEventArgs.Name\nreferences:\n- uid: System.IO\n  isExternal: false\n  name: System.IO\n  fullName: System.IO\n  commentId: N:System.IO\n  nameWithType: System.IO\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.EventArgs\n  parent: System\n  isExternal: false\n  name: EventArgs\n  fullName: System.EventArgs\n  commentId: T:System.EventArgs\n  nameWithType: EventArgs\n- uid: System.EventArgs.Empty\n  parent: System.EventArgs\n  isExternal: true\n  name: Empty\n  fullName: System.EventArgs.Empty\n  commentId: F:System.EventArgs.Empty\n  nameWithType: EventArgs.Empty\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.IO.WatcherChangeTypes\n  parent: System.IO\n  isExternal: false\n  name: WatcherChangeTypes\n  fullName: System.IO.WatcherChangeTypes\n  commentId: T:System.IO.WatcherChangeTypes\n  nameWithType: WatcherChangeTypes\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n"}