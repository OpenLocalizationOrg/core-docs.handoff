{"nodes":[{"pos":[4108,4138],"content":"SortedDictionary<TKey, TValue>","needQuote":true,"nodes":[{"content":"SortedDictionary&lt;TKey, TValue&gt;","pos":[0,30],"source":"SortedDictionary<TKey, TValue>"}]},{"content":"\\n&lt;p&gt;The type of the keys in the dictionary.&lt;/p&gt;\\n","pos":[5628,5678],"source":"\\n<p>The type of the keys in the dictionary.</p>\\n"},{"content":"\\n&lt;p&gt;The type of the values in the dictionary.&lt;/p&gt;\\n","pos":[5717,5769],"source":"\\n<p>The type of the values in the dictionary.</p>\\n"},{"pos":[36862,36880],"content":"SortedDictionary()","needQuote":true,"nodes":[{"content":"SortedDictionary()","pos":[0,18]}]},{"pos":[38690,38723],"content":"SortedDictionary(IComparer<TKey>)","needQuote":true,"nodes":[{"content":"SortedDictionary(IComparer&lt;TKey&gt;)","pos":[0,33],"source":"SortedDictionary(IComparer<TKey>)"}]},{"pos":[41315,41358],"content":"SortedDictionary(IDictionary<TKey, TValue>)","needQuote":true,"nodes":[{"content":"SortedDictionary(IDictionary&lt;TKey, TValue&gt;)","pos":[0,43],"source":"SortedDictionary(IDictionary<TKey, TValue>)"}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;dictionary&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[43027,43085],"source":"\\n<p>\\n<em>dictionary</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;dictionary&lt;/em&gt; contains one or more duplicate keys.&lt;/p&gt;\\n","pos":[43182,43251],"source":"\\n<p>\\n<em>dictionary</em> contains one or more duplicate keys.</p>\\n"},{"pos":[44578,44638],"content":"SortedDictionary(IDictionary<TKey, TValue>, IComparer<TKey>)","needQuote":true,"nodes":[{"content":"SortedDictionary(IDictionary&lt;TKey, TValue&gt;, IComparer&lt;TKey&gt;)","pos":[0,60],"source":"SortedDictionary(IDictionary<TKey, TValue>, IComparer<TKey>)"}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;dictionary&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[46831,46889],"source":"\\n<p>\\n<em>dictionary</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;dictionary&lt;/em&gt; contains one or more duplicate keys.&lt;/p&gt;\\n","pos":[46986,47055],"source":"\\n<p>\\n<em>dictionary</em> contains one or more duplicate keys.</p>\\n"},{"pos":[48334,48342],"content":"Comparer","needQuote":true,"nodes":[{"content":"Comparer","pos":[0,8]}]},{"pos":[50239,50244],"content":"Count","needQuote":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[52030,52040],"content":"Item[TKey]","needQuote":true,"nodes":[{"content":"Item[TKey]","pos":[0,10]}]},{"content":"\\n&lt;p&gt;The key of the value to get or set.&lt;/p&gt;\\n","pos":[52790,52836],"source":"\\n<p>The key of the value to get or set.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;key&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[53302,53353],"source":"\\n<p>\\n<em>key</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The property is retrieved and &lt;em&gt;key&lt;/em&gt; does not exist in the collection.&lt;/p&gt;\\n","pos":[53496,53583],"source":"\\n<p>The property is retrieved and <em>key</em> does not exist in the collection.</p>\\n"},{"pos":[54436,54440],"content":"Keys","needQuote":true,"nodes":[{"content":"Keys","pos":[0,4]}]},{"pos":[56755,56805],"content":"ICollection<KeyValuePair<TKey, TValue>>.IsReadOnly","needQuote":true,"nodes":[{"content":"ICollection&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;.IsReadOnly","pos":[0,50],"source":"ICollection<KeyValuePair<TKey, TValue>>.IsReadOnly"}]},{"pos":[58969,58999],"content":"IDictionary<TKey, TValue>.Keys","needQuote":true,"nodes":[{"content":"IDictionary&lt;TKey, TValue&gt;.Keys","pos":[0,30],"source":"IDictionary<TKey, TValue>.Keys"}]},{"pos":[60836,60868],"content":"IDictionary<TKey, TValue>.Values","needQuote":true,"nodes":[{"content":"IDictionary&lt;TKey, TValue&gt;.Values","pos":[0,32],"source":"IDictionary<TKey, TValue>.Values"}]},{"pos":[62749,62787],"content":"IReadOnlyDictionary<TKey, TValue>.Keys","needQuote":true,"nodes":[{"content":"IReadOnlyDictionary&lt;TKey, TValue&gt;.Keys","pos":[0,38],"source":"IReadOnlyDictionary<TKey, TValue>.Keys"}]},{"pos":[64728,64768],"content":"IReadOnlyDictionary<TKey, TValue>.Values","needQuote":true,"nodes":[{"content":"IReadOnlyDictionary&lt;TKey, TValue&gt;.Values","pos":[0,40],"source":"IReadOnlyDictionary<TKey, TValue>.Values"}]},{"pos":[66672,66698],"content":"ICollection.IsSynchronized","needQuote":true,"nodes":[{"content":"ICollection.IsSynchronized","pos":[0,26]}]},{"pos":[69057,69077],"content":"ICollection.SyncRoot","needQuote":true,"nodes":[{"content":"ICollection.SyncRoot","pos":[0,20]}]},{"pos":[71139,71162],"content":"IDictionary.IsFixedSize","needQuote":true,"nodes":[{"content":"IDictionary.IsFixedSize","pos":[0,23]}]},{"pos":[73333,73355],"content":"IDictionary.IsReadOnly","needQuote":true,"nodes":[{"content":"IDictionary.IsReadOnly","pos":[0,22]}]},{"pos":[75535,75559],"content":"IDictionary.Item[Object]","needQuote":true,"nodes":[{"content":"IDictionary.Item[Object]","pos":[0,24]}]},{"content":"\\n&lt;p&gt;The key of the element to get.&lt;/p&gt;\\n","pos":[76457,76498],"source":"\\n<p>The key of the element to get.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;key&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[76985,77036],"source":"\\n<p>\\n<em>key</em> is <strong>null</strong>.</p>\\n"},{"pos":[78575,78591],"content":"IDictionary.Keys","needQuote":true,"nodes":[{"content":"IDictionary.Keys","pos":[0,16]}]},{"pos":[80724,80742],"content":"IDictionary.Values","needQuote":true,"nodes":[{"content":"IDictionary.Values","pos":[0,18]}]},{"pos":[82792,82798],"content":"Values","needQuote":true,"nodes":[{"content":"Values","pos":[0,6]}]},{"pos":[84846,84863],"content":"Add(TKey, TValue)","needQuote":true,"nodes":[{"content":"Add(TKey, TValue)","pos":[0,17]}]},{"content":"\\n&lt;p&gt;The key of the element to add.&lt;/p&gt;\\n","pos":[85721,85762],"source":"\\n<p>The key of the element to add.</p>\\n"},{"content":"\\n&lt;p&gt;The value of the element to add.","pos":[85823,85860],"source":"\\n<p>The value of the element to add."},{"content":"The value can be &lt;strong&gt;null&lt;/strong&gt; for reference types.&lt;/p&gt;\\n","pos":[85861,85926],"source":" The value can be <strong>null</strong> for reference types.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;key&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[86045,86096],"source":"\\n<p>\\n<em>key</em> is <strong>null</strong>.</p>\\n"},{"pos":[87395,87402],"content":"Clear()","needQuote":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[88784,88801],"content":"ContainsKey(TKey)","needQuote":true,"nodes":[{"content":"ContainsKey(TKey)","pos":[0,17]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;key&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[90224,90275],"source":"\\n<p>\\n<em>key</em> is <strong>null</strong>.</p>\\n"},{"pos":[91178,91199],"content":"ContainsValue(TValue)","needQuote":true,"nodes":[{"content":"ContainsValue(TValue)","pos":[0,21]}]},{"pos":[93611,93654],"content":"CopyTo(KeyValuePair<TKey, TValue>[], Int32)","needQuote":true,"nodes":[{"content":"CopyTo(KeyValuePair&lt;TKey, TValue&gt;[], Int32)","pos":[0,43],"source":"CopyTo(KeyValuePair<TKey, TValue>[], Int32)"}]},{"content":"\\n&lt;p&gt;The zero-based index in &lt;em&gt;array&lt;/em&gt; at which copying begins.&lt;/p&gt;\\n","pos":[95253,95327],"source":"\\n<p>The zero-based index in <em>array</em> at which copying begins.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[95446,95499],"source":"\\n<p>\\n<em>array</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;index&lt;/em&gt; is less than 0.&lt;/p&gt;\\n","pos":[95616,95659],"source":"\\n<p>\\n<em>index</em> is less than 0.</p>\\n"},{"pos":[96925,96940],"content":"GetEnumerator()","needQuote":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[98917,98929],"content":"Remove(TKey)","needQuote":true,"nodes":[{"content":"Remove(TKey)","pos":[0,12]}]},{"content":"\\n&lt;p&gt;The key of the element to remove.&lt;/p&gt;\\n","pos":[99770,99814],"source":"\\n<p>The key of the element to remove.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;key&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[100295,100346],"source":"\\n<p>\\n<em>key</em> is <strong>null</strong>.</p>\\n"},{"pos":[101653,101724],"content":"ICollection<KeyValuePair<TKey, TValue>>.Add(KeyValuePair<TKey, TValue>)","needQuote":true,"nodes":[{"content":"ICollection&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;.Add(KeyValuePair&lt;TKey, TValue&gt;)","pos":[0,71],"source":"ICollection<KeyValuePair<TKey, TValue>>.Add(KeyValuePair<TKey, TValue>)"}]},{"pos":[104393,104469],"content":"ICollection<KeyValuePair<TKey, TValue>>.Contains(KeyValuePair<TKey, TValue>)","needQuote":true,"nodes":[{"content":"ICollection&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;.Contains(KeyValuePair&lt;TKey, TValue&gt;)","pos":[0,76],"source":"ICollection<KeyValuePair<TKey, TValue>>.Contains(KeyValuePair<TKey, TValue>)"}]},{"pos":[107237,107311],"content":"ICollection<KeyValuePair<TKey, TValue>>.Remove(KeyValuePair<TKey, TValue>)","needQuote":true,"nodes":[{"content":"ICollection&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;.Remove(KeyValuePair&lt;TKey, TValue&gt;)","pos":[0,74],"source":"ICollection<KeyValuePair<TKey, TValue>>.Remove(KeyValuePair<TKey, TValue>)"}]},{"pos":[109936,109991],"content":"IEnumerable<KeyValuePair<TKey, TValue>>.GetEnumerator()","needQuote":true,"nodes":[{"content":"IEnumerable&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;.GetEnumerator()","pos":[0,55],"source":"IEnumerable<KeyValuePair<TKey, TValue>>.GetEnumerator()"}]},{"pos":[112271,112303],"content":"ICollection.CopyTo(Array, Int32)","needQuote":true,"nodes":[{"content":"ICollection.CopyTo(Array, Int32)","pos":[0,32]}]},{"content":"\\n&lt;p&gt;The zero-based index in &lt;em&gt;array&lt;/em&gt; at which copying begins.&lt;/p&gt;\\n","pos":[113631,113705],"source":"\\n<p>The zero-based index in <em>array</em> at which copying begins.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[113824,113877],"source":"\\n<p>\\n<em>array</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;index&lt;/em&gt; is less than 0.&lt;/p&gt;\\n","pos":[113994,114037],"source":"\\n<p>\\n<em>index</em> is less than 0.</p>\\n"},{"pos":[115629,115660],"content":"IDictionary.Add(Object, Object)","needQuote":true,"nodes":[{"content":"IDictionary.Add(Object, Object)","pos":[0,31]}]},{"content":"\\n&lt;p&gt;The object to use as the key of the element to add.&lt;/p&gt;\\n","pos":[116643,116705],"source":"\\n<p>The object to use as the key of the element to add.</p>\\n"},{"content":"\\n&lt;p&gt;The object to use as the value of the element to add.&lt;/p&gt;\\n","pos":[116769,116833],"source":"\\n<p>The object to use as the value of the element to add.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;key&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[116952,117003],"source":"\\n<p>\\n<em>key</em> is <strong>null</strong>.</p>\\n"},{"pos":[118661,118689],"content":"IDictionary.Contains(Object)","needQuote":true,"nodes":[{"content":"IDictionary.Contains(Object)","pos":[0,28]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;key&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[120186,120237],"source":"\\n<p>\\n<em>key</em> is <strong>null</strong>.</p>\\n"},{"pos":[121039,121066],"content":"IDictionary.GetEnumerator()","needQuote":true,"nodes":[{"content":"IDictionary.GetEnumerator()","pos":[0,27]}]},{"pos":[123364,123390],"content":"IDictionary.Remove(Object)","needQuote":true,"nodes":[{"content":"IDictionary.Remove(Object)","pos":[0,26]}]},{"content":"\\n&lt;p&gt;The key of the element to remove.&lt;/p&gt;\\n","pos":[124339,124383],"source":"\\n<p>The key of the element to remove.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;key&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[124502,124553],"source":"\\n<p>\\n<em>key</em> is <strong>null</strong>.</p>\\n"},{"pos":[125345,125372],"content":"IEnumerable.GetEnumerator()","needQuote":true,"nodes":[{"content":"IEnumerable.GetEnumerator()","pos":[0,27]}]},{"pos":[127385,127414],"content":"TryGetValue(TKey, out TValue)","needQuote":true,"nodes":[{"content":"TryGetValue(TKey, out TValue)","pos":[0,29]}]},{"content":"\\n&lt;p&gt;The key of the value to get.&lt;/p&gt;\\n","pos":[128219,128258],"source":"\\n<p>The key of the value to get.</p>\\n"},{"content":"\\n&lt;p&gt;When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the &lt;em&gt;value&lt;/em&gt; parameter.","pos":[128319,128490],"source":"\\n<p>When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the <em>value</em> parameter."},{"content":"&lt;/p&gt;\\n","pos":[128491,128497],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;key&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[128903,128954],"source":"\\n<p>\\n<em>key</em> is <strong>null</strong>.</p>\\n"},{"pos":[129902,129928],"content":"System.Collections.Generic","needQuote":true,"nodes":[{"content":"System.Collections.Generic","pos":[0,26]}]},{"pos":[130119,130125],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[130367,130392],"content":"IDictionary<TKey, TValue>","needQuote":true,"nodes":[{"content":"IDictionary&lt;TKey, TValue&gt;","pos":[0,25],"source":"IDictionary<TKey, TValue>"}]},{"pos":[130644,130655],"content":"IDictionary","needQuote":true,"nodes":[{"content":"IDictionary","pos":[0,11]}]},{"pos":[130740,130741],"content":"<","needQuote":true,"nodes":[]},{"pos":[130768,130772],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[130803,130804]},{"pos":[130836,130842],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[130967,130978],"content":"IDictionary","needQuote":true,"nodes":[{"content":"IDictionary","pos":[0,11]}]},{"content":"(Of","pos":[131064,131067]},{"pos":[131101,131105],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[131136,131137]},{"pos":[131169,131175],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[131207,131208],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[131580,131619],"content":"ICollection<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"ICollection&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,39],"source":"ICollection<KeyValuePair<TKey, TValue>>"}]},{"pos":[131973,131984],"content":"ICollection","needQuote":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"pos":[132048,132049],"content":"<","needQuote":true,"nodes":[]},{"pos":[132127,132139],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[132204,132205],"content":"<","needQuote":true,"nodes":[]},{"pos":[132232,132236],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[132267,132268]},{"pos":[132300,132306],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[132463,132474],"content":"ICollection","needQuote":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"content":"(Of","pos":[132539,132542]},{"pos":[132627,132639],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[132705,132708]},{"pos":[132742,132746],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[132777,132778]},{"pos":[132810,132816],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[132848,132849],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[132876,132877],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[133296,133329],"content":"IReadOnlyDictionary<TKey, TValue>","needQuote":true,"nodes":[{"content":"IReadOnlyDictionary&lt;TKey, TValue&gt;","pos":[0,33],"source":"IReadOnlyDictionary<TKey, TValue>"}]},{"pos":[133613,133632],"content":"IReadOnlyDictionary","needQuote":true,"nodes":[{"content":"IReadOnlyDictionary","pos":[0,19]}]},{"pos":[133725,133726],"content":"<","needQuote":true,"nodes":[]},{"pos":[133753,133757],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[133788,133789]},{"pos":[133821,133827],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[133960,133979],"content":"IReadOnlyDictionary","needQuote":true,"nodes":[{"content":"IReadOnlyDictionary","pos":[0,19]}]},{"content":"(Of","pos":[134073,134076]},{"pos":[134110,134114],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[134145,134146]},{"pos":[134178,134184],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[134216,134217],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[134629,134676],"content":"IReadOnlyCollection<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"IReadOnlyCollection&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,47],"source":"IReadOnlyCollection<KeyValuePair<TKey, TValue>>"}]},{"pos":[135062,135081],"content":"IReadOnlyCollection","needQuote":true,"nodes":[{"content":"IReadOnlyCollection","pos":[0,19]}]},{"pos":[135153,135154],"content":"<","needQuote":true,"nodes":[]},{"pos":[135232,135244],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[135309,135310],"content":"<","needQuote":true,"nodes":[]},{"pos":[135337,135341],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[135372,135373]},{"pos":[135405,135411],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[135576,135595],"content":"IReadOnlyCollection","needQuote":true,"nodes":[{"content":"IReadOnlyCollection","pos":[0,19]}]},{"content":"(Of","pos":[135668,135671]},{"pos":[135756,135768],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[135834,135837]},{"pos":[135871,135875],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[135906,135907]},{"pos":[135939,135945],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[135977,135978],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[136005,136006],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[136474,136513],"content":"IEnumerable<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"IEnumerable&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,39],"source":"IEnumerable<KeyValuePair<TKey, TValue>>"}]},{"pos":[136867,136878],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[136942,136943],"content":"<","needQuote":true,"nodes":[]},{"pos":[137021,137033],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[137098,137099],"content":"<","needQuote":true,"nodes":[]},{"pos":[137126,137130],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[137161,137162]},{"pos":[137194,137200],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[137357,137368],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[137433,137436]},{"pos":[137521,137533],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[137599,137602]},{"pos":[137636,137640],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[137671,137672]},{"pos":[137704,137710],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[137742,137743],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[137770,137771],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[138106,138117],"content":"IDictionary","needQuote":true,"nodes":[{"content":"IDictionary","pos":[0,11]}]},{"pos":[138330,138341],"content":"ICollection","needQuote":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"pos":[138554,138565],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[138764,138774],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[138869,138877],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[138946,138947],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[138974,138975],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[139045,139053],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[139122,139123],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[139150,139151],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[139334,139348],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[139467,139473],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[139540,139541],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[139591,139597],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[139657,139658],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[139741,139747],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[139814,139815],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[139865,139871],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[139931,139932],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[140146,140168],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[140316,140322],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[140389,140390],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[140440,140446],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[140507,140508]},{"pos":[140563,140569],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[140629,140630],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[140727,140733],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[140800,140801],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[140851,140857],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[140918,140919]},{"pos":[140974,140980],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[141040,141041],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[141286,141317],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[141483,141498],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[141574,141575],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[141625,141631],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[141692,141693]},{"pos":[141748,141754],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[141814,141815],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[141921,141936],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[142012,142013],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[142063,142069],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[142130,142131]},{"pos":[142186,142192],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[142252,142253],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[142483,142496],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[142597,142608],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[142680,142681],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[142708,142709],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[142782,142793],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[142865,142866],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[142893,142894],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[143069,143078],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[143171,143178],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[143246,143247],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[143274,143275],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[143344,143351],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[143419,143420],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[143447,143448],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[143623,143640],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[143749,143764],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[143840,143841],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[143868,143869],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[143946,143961],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[144037,144038],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[144065,144066],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[144361,144374],"content":"AsQueryable()","needQuote":true,"nodes":[{"content":"AsQueryable()","pos":[0,13]}]},{"pos":[144491,144502],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[144561,144562],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[144589,144590],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[144671,144682],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[144741,144742],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[144769,144770],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[145175,145216],"content":"AsQueryable<KeyValuePair<TKey, TValue>>()","needQuote":true,"nodes":[{"content":"AsQueryable&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;()","pos":[0,41],"source":"AsQueryable<KeyValuePair<TKey, TValue>>()"}]},{"pos":[145562,145601],"content":"AsQueryable<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"AsQueryable&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,39],"source":"AsQueryable<KeyValuePair<TKey, TValue>>"}]},{"pos":[145715,145716],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[145743,145744],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[145828,145873],"content":"AsQueryable(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"AsQueryable(Of KeyValuePair(Of TKey, TValue))","pos":[0,45]}]},{"pos":[145993,145994],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[146021,146022],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[146498,146510],"content":"AsParallel()","needQuote":true,"nodes":[{"content":"AsParallel()","pos":[0,12]}]},{"pos":[146643,146653],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[146720,146721],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[146748,146749],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[146838,146848],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[146915,146916],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[146943,146944],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[147390,147430],"content":"AsParallel<KeyValuePair<TKey, TValue>>()","needQuote":true,"nodes":[{"content":"AsParallel&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;()","pos":[0,40],"source":"AsParallel<KeyValuePair<TKey, TValue>>()"}]},{"pos":[147799,147837],"content":"AsParallel<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"AsParallel&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,38],"source":"AsParallel<KeyValuePair<TKey, TValue>>"}]},{"pos":[147959,147960],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[147987,147988],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[148080,148124],"content":"AsParallel(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"AsParallel(Of KeyValuePair(Of TKey, TValue))","pos":[0,44]}]},{"pos":[148252,148253],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[148280,148281],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[149040,149167],"content":"Aggregate<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, KeyValuePair<TKey, TValue>, KeyValuePair<TKey, TValue>>)","needQuote":true,"nodes":[{"content":"Aggregate&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, KeyValuePair&lt;TKey, TValue&gt;, KeyValuePair&lt;TKey, TValue&gt;&gt;)","pos":[0,127],"source":"Aggregate<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, KeyValuePair<TKey, TValue>, KeyValuePair<TKey, TValue>>)"}]},{"pos":[149998,150035],"content":"Aggregate<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Aggregate&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,37],"source":"Aggregate<KeyValuePair<TKey, TValue>>"}]},{"pos":[150148,150149],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[150199,150203],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[150261,150262],"content":"<","needQuote":true,"nodes":[]},{"pos":[150340,150352],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[150438,150439],"content":"<","needQuote":true,"nodes":[]},{"pos":[150466,150470],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[150501,150502]},{"pos":[150534,150540],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[150605,150606]},{"pos":[150689,150701],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[150787,150788],"content":"<","needQuote":true,"nodes":[]},{"pos":[150815,150819],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[150850,150851]},{"pos":[150883,150889],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[150954,150955]},{"pos":[151038,151050],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[151136,151137],"content":"<","needQuote":true,"nodes":[]},{"pos":[151164,151168],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[151199,151200]},{"pos":[151232,151238],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[151334,151335],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[151444,151487],"content":"Aggregate(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Aggregate(Of KeyValuePair(Of TKey, TValue))","pos":[0,43]}]},{"pos":[151606,151607],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[151657,151661],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[151720,151723]},{"pos":[151808,151820],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[151907,151910]},{"pos":[151944,151948],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[151979,151980]},{"pos":[152012,152018],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[152050,152051],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[152079,152080]},{"pos":[152163,152175],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[152262,152265]},{"pos":[152299,152303],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[152334,152335]},{"pos":[152367,152373],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[152405,152406],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[152434,152435]},{"pos":[152518,152530],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[152617,152620]},{"pos":[152654,152658],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[152689,152690]},{"pos":[152722,152728],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[152760,152761],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[152788,152789],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[152816,152817],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[153694,153817],"content":"Aggregate<KeyValuePair<TKey, TValue>, TAccumulate>(TAccumulate, Func<TAccumulate, KeyValuePair<TKey, TValue>, TAccumulate>)","needQuote":true,"nodes":[{"content":"Aggregate&lt;KeyValuePair&lt;TKey, TValue&gt;, TAccumulate&gt;(TAccumulate, Func&lt;TAccumulate, KeyValuePair&lt;TKey, TValue&gt;, TAccumulate&gt;)","pos":[0,123],"source":"Aggregate<KeyValuePair<TKey, TValue>, TAccumulate>(TAccumulate, Func<TAccumulate, KeyValuePair<TKey, TValue>, TAccumulate>)"}]},{"pos":[154520,154570],"content":"Aggregate<KeyValuePair<TKey, TValue>, TAccumulate>","needQuote":true,"nodes":[{"content":"Aggregate&lt;KeyValuePair&lt;TKey, TValue&gt;, TAccumulate&gt;","pos":[0,50],"source":"Aggregate<KeyValuePair<TKey, TValue>, TAccumulate>"}]},{"pos":[154696,154697],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[154724,154735],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[154773,154774]},{"pos":[154829,154833],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[154891,154892],"content":"<","needQuote":true,"nodes":[]},{"pos":[154919,154930],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[154968,154969]},{"pos":[155052,155064],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[155150,155151],"content":"<","needQuote":true,"nodes":[]},{"pos":[155178,155182],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[155213,155214]},{"pos":[155246,155252],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[155317,155318]},{"pos":[155350,155361],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"pos":[155430,155431],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[155544,155600],"content":"Aggregate(Of KeyValuePair(Of TKey, TValue), TAccumulate)","needQuote":true,"nodes":[{"content":"Aggregate(Of KeyValuePair(Of TKey, TValue), TAccumulate)","pos":[0,56]}]},{"pos":[155732,155733],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[155760,155771],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[155809,155810]},{"pos":[155865,155869],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[155928,155931]},{"pos":[155965,155976],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[156014,156015]},{"pos":[156098,156110],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[156197,156200]},{"pos":[156234,156238],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[156269,156270]},{"pos":[156302,156308],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[156340,156341],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[156369,156370]},{"pos":[156402,156413],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"pos":[156450,156451],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[156478,156479],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[157404,157564],"content":"Aggregate<KeyValuePair<TKey, TValue>, TAccumulate, TResult>(TAccumulate, Func<TAccumulate, KeyValuePair<TKey, TValue>, TAccumulate>, Func<TAccumulate, TResult>)","needQuote":true,"nodes":[{"content":"Aggregate&lt;KeyValuePair&lt;TKey, TValue&gt;, TAccumulate, TResult&gt;(TAccumulate, Func&lt;TAccumulate, KeyValuePair&lt;TKey, TValue&gt;, TAccumulate&gt;, Func&lt;TAccumulate, TResult&gt;)","pos":[0,160],"source":"Aggregate<KeyValuePair<TKey, TValue>, TAccumulate, TResult>(TAccumulate, Func<TAccumulate, KeyValuePair<TKey, TValue>, TAccumulate>, Func<TAccumulate, TResult>)"}]},{"pos":[158419,158478],"content":"Aggregate<KeyValuePair<TKey, TValue>, TAccumulate, TResult>","needQuote":true,"nodes":[{"content":"Aggregate&lt;KeyValuePair&lt;TKey, TValue&gt;, TAccumulate, TResult&gt;","pos":[0,59],"source":"Aggregate<KeyValuePair<TKey, TValue>, TAccumulate, TResult>"}]},{"pos":[158613,158614],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[158641,158652],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[158690,158691]},{"pos":[158746,158750],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[158808,158809],"content":"<","needQuote":true,"nodes":[]},{"pos":[158836,158847],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[158885,158886]},{"pos":[158969,158981],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[159067,159068],"content":"<","needQuote":true,"nodes":[]},{"pos":[159095,159099],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[159130,159131]},{"pos":[159163,159169],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[159234,159235]},{"pos":[159267,159278],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[159348,159349]},{"pos":[159404,159408],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[159466,159467],"content":"<","needQuote":true,"nodes":[]},{"pos":[159494,159505],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[159543,159544]},{"pos":[159576,159583],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[159648,159649],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[159783,159848],"content":"Aggregate(Of KeyValuePair(Of TKey, TValue), TAccumulate, TResult)","needQuote":true,"nodes":[{"content":"Aggregate(Of KeyValuePair(Of TKey, TValue), TAccumulate, TResult)","pos":[0,65]}]},{"pos":[159989,159990],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[160017,160028],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[160066,160067]},{"pos":[160122,160126],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[160185,160188]},{"pos":[160222,160233],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[160271,160272]},{"pos":[160355,160367],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[160454,160457]},{"pos":[160491,160495],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[160526,160527]},{"pos":[160559,160565],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[160597,160598],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[160626,160627]},{"pos":[160659,160670],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"pos":[160707,160708],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[160736,160737]},{"pos":[160792,160796],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[160855,160858]},{"pos":[160892,160903],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[160941,160942]},{"pos":[160974,160981],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[161014,161015],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[161042,161043],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[161972,162046],"content":"All<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)","needQuote":true,"nodes":[{"content":"All&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Boolean&gt;)","pos":[0,74],"source":"All<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)"}]},{"pos":[162613,162644],"content":"All<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"All&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"All<KeyValuePair<TKey, TValue>>"}]},{"pos":[162751,162752],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[162802,162806],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[162864,162865],"content":"<","needQuote":true,"nodes":[]},{"pos":[162943,162955],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[163041,163042],"content":"<","needQuote":true,"nodes":[]},{"pos":[163069,163073],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[163104,163105]},{"pos":[163137,163143],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[163208,163209]},{"pos":[163265,163272],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[163365,163366],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[163476,163513],"content":"All(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"All(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[163626,163627],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[163677,163681],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[163740,163743]},{"pos":[163828,163840],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[163927,163930]},{"pos":[163964,163968],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[163999,164000]},{"pos":[164032,164038],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[164070,164071],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[164099,164100]},{"pos":[164156,164163],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[164224,164225],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[164252,164253],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[164865,164898],"content":"Any<KeyValuePair<TKey, TValue>>()","needQuote":true,"nodes":[{"content":"Any&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;()","pos":[0,33],"source":"Any<KeyValuePair<TKey, TValue>>()"}]},{"pos":[165215,165246],"content":"Any<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Any&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Any<KeyValuePair<TKey, TValue>>"}]},{"pos":[165353,165354],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[165381,165382],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[165459,165496],"content":"Any(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Any(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[165609,165610],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[165637,165638],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[166248,166322],"content":"Any<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)","needQuote":true,"nodes":[{"content":"Any&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Boolean&gt;)","pos":[0,74],"source":"Any<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)"}]},{"pos":[166889,166920],"content":"Any<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Any&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Any<KeyValuePair<TKey, TValue>>"}]},{"pos":[167027,167028],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[167078,167082],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[167140,167141],"content":"<","needQuote":true,"nodes":[]},{"pos":[167219,167231],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[167317,167318],"content":"<","needQuote":true,"nodes":[]},{"pos":[167345,167349],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[167380,167381]},{"pos":[167413,167419],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[167484,167485]},{"pos":[167541,167548],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[167641,167642],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[167752,167789],"content":"Any(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Any(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[167902,167903],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[167953,167957],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[168016,168019]},{"pos":[168104,168116],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[168203,168206]},{"pos":[168240,168244],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[168275,168276]},{"pos":[168308,168314],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[168346,168347],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[168375,168376]},{"pos":[168432,168439],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[168500,168501],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[168528,168529],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[169159,169201],"content":"AsEnumerable<KeyValuePair<TKey, TValue>>()","needQuote":true,"nodes":[{"content":"AsEnumerable&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;()","pos":[0,42],"source":"AsEnumerable<KeyValuePair<TKey, TValue>>()"}]},{"pos":[169554,169594],"content":"AsEnumerable<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"AsEnumerable&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,40],"source":"AsEnumerable<KeyValuePair<TKey, TValue>>"}]},{"pos":[169710,169711],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[169738,169739],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[169825,169871],"content":"AsEnumerable(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"AsEnumerable(Of KeyValuePair(Of TKey, TValue))","pos":[0,46]}]},{"pos":[169993,169994],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[170021,170022],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[170667,170745],"content":"Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Decimal>)","needQuote":true,"nodes":[{"content":"Average&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Decimal&gt;)","pos":[0,78],"source":"Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Decimal>)"}]},{"pos":[171328,171363],"content":"Average<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Average&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,35],"source":"Average<KeyValuePair<TKey, TValue>>"}]},{"pos":[171474,171475],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[171525,171529],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[171587,171588],"content":"<","needQuote":true,"nodes":[]},{"pos":[171666,171678],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[171764,171765],"content":"<","needQuote":true,"nodes":[]},{"pos":[171792,171796],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[171827,171828]},{"pos":[171860,171866],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[171931,171932]},{"pos":[171988,171995],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[172088,172089],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[172203,172244],"content":"Average(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Average(Of KeyValuePair(Of TKey, TValue))","pos":[0,41]}]},{"pos":[172361,172362],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[172412,172416],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[172475,172478]},{"pos":[172563,172575],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[172662,172665]},{"pos":[172699,172703],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[172734,172735]},{"pos":[172767,172773],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[172805,172806],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[172834,172835]},{"pos":[172891,172898],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[172959,172960],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[172987,172988],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[173736,173813],"content":"Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Double>)","needQuote":true,"nodes":[{"content":"Average&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Double&gt;)","pos":[0,77],"source":"Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Double>)"}]},{"pos":[174392,174427],"content":"Average<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Average&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,35],"source":"Average<KeyValuePair<TKey, TValue>>"}]},{"pos":[174538,174539],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[174589,174593],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[174651,174652],"content":"<","needQuote":true,"nodes":[]},{"pos":[174730,174742],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[174828,174829],"content":"<","needQuote":true,"nodes":[]},{"pos":[174856,174860],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[174891,174892]},{"pos":[174924,174930],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[174995,174996]},{"pos":[175051,175057],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[175149,175150],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[175263,175304],"content":"Average(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Average(Of KeyValuePair(Of TKey, TValue))","pos":[0,41]}]},{"pos":[175421,175422],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[175472,175476],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[175535,175538]},{"pos":[175623,175635],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[175722,175725]},{"pos":[175759,175763],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[175794,175795]},{"pos":[175827,175833],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[175865,175866],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[175894,175895]},{"pos":[175950,175956],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[176016,176017],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[176044,176045],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[176788,176864],"content":"Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32>)","needQuote":true,"nodes":[{"content":"Average&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Int32&gt;)","pos":[0,76],"source":"Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32>)"}]},{"pos":[177439,177474],"content":"Average<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Average&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,35],"source":"Average<KeyValuePair<TKey, TValue>>"}]},{"pos":[177585,177586],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[177636,177640],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[177698,177699],"content":"<","needQuote":true,"nodes":[]},{"pos":[177777,177789],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[177875,177876],"content":"<","needQuote":true,"nodes":[]},{"pos":[177903,177907],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[177938,177939]},{"pos":[177971,177977],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[178042,178043]},{"pos":[178097,178102],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[178193,178194],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[178306,178347],"content":"Average(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Average(Of KeyValuePair(Of TKey, TValue))","pos":[0,41]}]},{"pos":[178464,178465],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[178515,178519],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[178578,178581]},{"pos":[178666,178678],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[178765,178768]},{"pos":[178802,178806],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[178837,178838]},{"pos":[178870,178876],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[178908,178909],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[178937,178938]},{"pos":[178992,178997],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[179056,179057],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[179084,179085],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[179825,179901],"content":"Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int64>)","needQuote":true,"nodes":[{"content":"Average&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Int64&gt;)","pos":[0,76],"source":"Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int64>)"}]},{"pos":[180476,180511],"content":"Average<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Average&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,35],"source":"Average<KeyValuePair<TKey, TValue>>"}]},{"pos":[180622,180623],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[180673,180677],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[180735,180736],"content":"<","needQuote":true,"nodes":[]},{"pos":[180814,180826],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[180912,180913],"content":"<","needQuote":true,"nodes":[]},{"pos":[180940,180944],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[180975,180976]},{"pos":[181008,181014],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[181079,181080]},{"pos":[181134,181139],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[181230,181231],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[181343,181384],"content":"Average(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Average(Of KeyValuePair(Of TKey, TValue))","pos":[0,41]}]},{"pos":[181501,181502],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[181552,181556],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[181615,181618]},{"pos":[181703,181715],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[181802,181805]},{"pos":[181839,181843],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[181874,181875]},{"pos":[181907,181913],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[181945,181946],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[181974,181975]},{"pos":[182029,182034],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[182093,182094],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[182121,182122],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[182900,182988],"content":"Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Decimal>>)","needQuote":true,"nodes":[{"content":"Average&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Nullable&lt;Decimal&gt;&gt;)","pos":[0,88],"source":"Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Decimal>>)"}]},{"pos":[183638,183673],"content":"Average<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Average&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,35],"source":"Average<KeyValuePair<TKey, TValue>>"}]},{"pos":[183784,183785],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[183835,183839],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[183897,183898],"content":"<","needQuote":true,"nodes":[]},{"pos":[183976,183988],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[184074,184075],"content":"<","needQuote":true,"nodes":[]},{"pos":[184102,184106],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[184137,184138]},{"pos":[184170,184176],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[184241,184242]},{"pos":[184301,184309],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[184371,184372],"content":"<","needQuote":true,"nodes":[]},{"pos":[184423,184430],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[184555,184556],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[184687,184728],"content":"Average(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Average(Of KeyValuePair(Of TKey, TValue))","pos":[0,41]}]},{"pos":[184845,184846],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[184896,184900],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[184959,184962]},{"pos":[185047,185059],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[185146,185149]},{"pos":[185183,185187],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[185218,185219]},{"pos":[185251,185257],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[185289,185290],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[185318,185319]},{"pos":[185378,185386],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[185449,185452]},{"pos":[185510,185517],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[185578,185579],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[185606,185607],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[185634,185635],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[186457,186544],"content":"Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Double>>)","needQuote":true,"nodes":[{"content":"Average&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Nullable&lt;Double&gt;&gt;)","pos":[0,87],"source":"Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Double>>)"}]},{"pos":[187190,187225],"content":"Average<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Average&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,35],"source":"Average<KeyValuePair<TKey, TValue>>"}]},{"pos":[187336,187337],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[187387,187391],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[187449,187450],"content":"<","needQuote":true,"nodes":[]},{"pos":[187528,187540],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[187626,187627],"content":"<","needQuote":true,"nodes":[]},{"pos":[187654,187658],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[187689,187690]},{"pos":[187722,187728],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[187793,187794]},{"pos":[187853,187861],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[187923,187924],"content":"<","needQuote":true,"nodes":[]},{"pos":[187974,187980],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[188104,188105],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[188235,188276],"content":"Average(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Average(Of KeyValuePair(Of TKey, TValue))","pos":[0,41]}]},{"pos":[188393,188394],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[188444,188448],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[188507,188510]},{"pos":[188595,188607],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[188694,188697]},{"pos":[188731,188735],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[188766,188767]},{"pos":[188799,188805],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[188837,188838],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[188866,188867]},{"pos":[188926,188934],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[188997,189000]},{"pos":[189057,189063],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[189123,189124],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[189151,189152],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[189179,189180],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[189997,190083],"content":"Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int32>>)","needQuote":true,"nodes":[{"content":"Average&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Nullable&lt;Int32&gt;&gt;)","pos":[0,86],"source":"Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int32>>)"}]},{"pos":[190725,190760],"content":"Average<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Average&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,35],"source":"Average<KeyValuePair<TKey, TValue>>"}]},{"pos":[190871,190872],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[190922,190926],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[190984,190985],"content":"<","needQuote":true,"nodes":[]},{"pos":[191063,191075],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[191161,191162],"content":"<","needQuote":true,"nodes":[]},{"pos":[191189,191193],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[191224,191225]},{"pos":[191257,191263],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[191328,191329]},{"pos":[191388,191396],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[191458,191459],"content":"<","needQuote":true,"nodes":[]},{"pos":[191508,191513],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[191636,191637],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[191766,191807],"content":"Average(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Average(Of KeyValuePair(Of TKey, TValue))","pos":[0,41]}]},{"pos":[191924,191925],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[191975,191979],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[192038,192041]},{"pos":[192126,192138],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[192225,192228]},{"pos":[192262,192266],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[192297,192298]},{"pos":[192330,192336],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[192368,192369],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[192397,192398]},{"pos":[192457,192465],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[192528,192531]},{"pos":[192587,192592],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[192651,192652],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[192679,192680],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[192707,192708],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[193522,193608],"content":"Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int64>>)","needQuote":true,"nodes":[{"content":"Average&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Nullable&lt;Int64&gt;&gt;)","pos":[0,86],"source":"Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int64>>)"}]},{"pos":[194250,194285],"content":"Average<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Average&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,35],"source":"Average<KeyValuePair<TKey, TValue>>"}]},{"pos":[194396,194397],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[194447,194451],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[194509,194510],"content":"<","needQuote":true,"nodes":[]},{"pos":[194588,194600],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[194686,194687],"content":"<","needQuote":true,"nodes":[]},{"pos":[194714,194718],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[194749,194750]},{"pos":[194782,194788],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[194853,194854]},{"pos":[194913,194921],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[194983,194984],"content":"<","needQuote":true,"nodes":[]},{"pos":[195033,195038],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[195161,195162],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[195291,195332],"content":"Average(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Average(Of KeyValuePair(Of TKey, TValue))","pos":[0,41]}]},{"pos":[195449,195450],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[195500,195504],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[195563,195566]},{"pos":[195651,195663],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[195750,195753]},{"pos":[195787,195791],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[195822,195823]},{"pos":[195855,195861],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[195893,195894],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[195922,195923]},{"pos":[195982,195990],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[196053,196056]},{"pos":[196112,196117],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[196176,196177],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[196204,196205],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[196232,196233],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[197049,197136],"content":"Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Single>>)","needQuote":true,"nodes":[{"content":"Average&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Nullable&lt;Single&gt;&gt;)","pos":[0,87],"source":"Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Single>>)"}]},{"pos":[197782,197817],"content":"Average<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Average&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,35],"source":"Average<KeyValuePair<TKey, TValue>>"}]},{"pos":[197928,197929],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[197979,197983],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[198041,198042],"content":"<","needQuote":true,"nodes":[]},{"pos":[198120,198132],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[198218,198219],"content":"<","needQuote":true,"nodes":[]},{"pos":[198246,198250],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[198281,198282]},{"pos":[198314,198320],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[198385,198386]},{"pos":[198445,198453],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[198515,198516],"content":"<","needQuote":true,"nodes":[]},{"pos":[198566,198572],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[198696,198697],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[198827,198868],"content":"Average(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Average(Of KeyValuePair(Of TKey, TValue))","pos":[0,41]}]},{"pos":[198985,198986],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[199036,199040],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[199099,199102]},{"pos":[199187,199199],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[199286,199289]},{"pos":[199323,199327],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[199358,199359]},{"pos":[199391,199397],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[199429,199430],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[199458,199459]},{"pos":[199518,199526],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[199589,199592]},{"pos":[199649,199655],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[199715,199716],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[199743,199744],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[199771,199772],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[200557,200634],"content":"Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Single>)","needQuote":true,"nodes":[{"content":"Average&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Single&gt;)","pos":[0,77],"source":"Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Single>)"}]},{"pos":[201213,201248],"content":"Average<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Average&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,35],"source":"Average<KeyValuePair<TKey, TValue>>"}]},{"pos":[201359,201360],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[201410,201414],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[201472,201473],"content":"<","needQuote":true,"nodes":[]},{"pos":[201551,201563],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[201649,201650],"content":"<","needQuote":true,"nodes":[]},{"pos":[201677,201681],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[201712,201713]},{"pos":[201745,201751],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[201816,201817]},{"pos":[201872,201878],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[201970,201971],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[202084,202125],"content":"Average(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Average(Of KeyValuePair(Of TKey, TValue))","pos":[0,41]}]},{"pos":[202242,202243],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[202293,202297],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[202356,202359]},{"pos":[202444,202456],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[202543,202546]},{"pos":[202580,202584],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[202615,202616]},{"pos":[202648,202654],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[202686,202687],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[202715,202716]},{"pos":[202771,202777],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[202837,202838],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[202865,202866],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[203420,203435],"content":"Cast<TResult>()","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;()","pos":[0,15],"source":"Cast<TResult>()"}]},{"pos":[203639,203652],"content":"Cast<TResult>","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;","pos":[0,13],"source":"Cast<TResult>"}]},{"pos":[203714,203715],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[203742,203743],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[203821,203837],"content":"Cast(Of TResult)","needQuote":true,"nodes":[{"content":"Cast(Of TResult)","pos":[0,16]}]},{"pos":[203902,203903],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[203930,203931],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[204520,204595],"content":"Concat<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>)","needQuote":true,"nodes":[{"content":"Concat&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(IEnumerable&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;)","pos":[0,75],"source":"Concat<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>)"}]},{"pos":[205206,205240],"content":"Concat<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Concat&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,34],"source":"Concat<KeyValuePair<TKey, TValue>>"}]},{"pos":[205350,205351],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[205428,205439],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[205524,205525],"content":"<","needQuote":true,"nodes":[]},{"pos":[205603,205615],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[205701,205702],"content":"<","needQuote":true,"nodes":[]},{"pos":[205729,205733],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[205764,205765]},{"pos":[205797,205803],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[205899,205900],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[206025,206065],"content":"Concat(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Concat(Of KeyValuePair(Of TKey, TValue))","pos":[0,40]}]},{"pos":[206181,206182],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[206259,206270],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[206356,206359]},{"pos":[206444,206456],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[206543,206546]},{"pos":[206580,206584],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[206615,206616]},{"pos":[206648,206654],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[206686,206687],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[206714,206715],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[206742,206743],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[207440,207502],"content":"Append<KeyValuePair<TKey, TValue>>(KeyValuePair<TKey, TValue>)","needQuote":true,"nodes":[{"content":"Append&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(KeyValuePair&lt;TKey, TValue&gt;)","pos":[0,62],"source":"Append<KeyValuePair<TKey, TValue>>(KeyValuePair<TKey, TValue>)"}]},{"pos":[207974,208008],"content":"Append<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Append&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,34],"source":"Append<KeyValuePair<TKey, TValue>>"}]},{"pos":[208118,208119],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[208197,208209],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[208295,208296],"content":"<","needQuote":true,"nodes":[]},{"pos":[208323,208327],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[208358,208359]},{"pos":[208391,208397],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[208461,208462],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[208547,208587],"content":"Append(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Append(Of KeyValuePair(Of TKey, TValue))","pos":[0,40]}]},{"pos":[208703,208704],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[208782,208794],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[208881,208884]},{"pos":[208918,208922],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[208953,208954]},{"pos":[208986,208992],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[209024,209025],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[209052,209053],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[209683,209746],"content":"Prepend<KeyValuePair<TKey, TValue>>(KeyValuePair<TKey, TValue>)","needQuote":true,"nodes":[{"content":"Prepend&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(KeyValuePair&lt;TKey, TValue&gt;)","pos":[0,63],"source":"Prepend<KeyValuePair<TKey, TValue>>(KeyValuePair<TKey, TValue>)"}]},{"pos":[210222,210257],"content":"Prepend<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Prepend&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,35],"source":"Prepend<KeyValuePair<TKey, TValue>>"}]},{"pos":[210368,210369],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[210447,210459],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[210545,210546],"content":"<","needQuote":true,"nodes":[]},{"pos":[210573,210577],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[210608,210609]},{"pos":[210641,210647],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[210711,210712],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[210798,210839],"content":"Prepend(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Prepend(Of KeyValuePair(Of TKey, TValue))","pos":[0,41]}]},{"pos":[210956,210957],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[211035,211047],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[211134,211137]},{"pos":[211171,211175],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[211206,211207]},{"pos":[211239,211245],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[211277,211278],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[211305,211306],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[211941,212005],"content":"Contains<KeyValuePair<TKey, TValue>>(KeyValuePair<TKey, TValue>)","needQuote":true,"nodes":[{"content":"Contains&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(KeyValuePair&lt;TKey, TValue&gt;)","pos":[0,64],"source":"Contains<KeyValuePair<TKey, TValue>>(KeyValuePair<TKey, TValue>)"}]},{"pos":[212485,212521],"content":"Contains<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Contains&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,36],"source":"Contains<KeyValuePair<TKey, TValue>>"}]},{"pos":[212633,212634],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[212712,212724],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[212810,212811],"content":"<","needQuote":true,"nodes":[]},{"pos":[212838,212842],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[212873,212874]},{"pos":[212906,212912],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[212976,212977],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[213064,213106],"content":"Contains(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Contains(Of KeyValuePair(Of TKey, TValue))","pos":[0,42]}]},{"pos":[213224,213225],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[213303,213315],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[213402,213405]},{"pos":[213439,213443],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[213474,213475]},{"pos":[213507,213513],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[213545,213546],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[213573,213574],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[214365,214476],"content":"Contains<KeyValuePair<TKey, TValue>>(KeyValuePair<TKey, TValue>, IEqualityComparer<KeyValuePair<TKey, TValue>>)","needQuote":true,"nodes":[{"content":"Contains&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(KeyValuePair&lt;TKey, TValue&gt;, IEqualityComparer&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;)","pos":[0,111],"source":"Contains<KeyValuePair<TKey, TValue>>(KeyValuePair<TKey, TValue>, IEqualityComparer<KeyValuePair<TKey, TValue>>)"}]},{"pos":[215267,215303],"content":"Contains<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Contains&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,36],"source":"Contains<KeyValuePair<TKey, TValue>>"}]},{"pos":[215415,215416],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[215494,215506],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[215592,215593],"content":"<","needQuote":true,"nodes":[]},{"pos":[215620,215624],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[215655,215656]},{"pos":[215688,215694],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[215759,215760]},{"pos":[215848,215865],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[215956,215957],"content":"<","needQuote":true,"nodes":[]},{"pos":[216035,216047],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[216133,216134],"content":"<","needQuote":true,"nodes":[]},{"pos":[216161,216165],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[216196,216197]},{"pos":[216229,216235],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[216331,216332],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[216469,216511],"content":"Contains(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Contains(Of KeyValuePair(Of TKey, TValue))","pos":[0,42]}]},{"pos":[216629,216630],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[216708,216720],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[216807,216810]},{"pos":[216844,216848],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[216879,216880]},{"pos":[216912,216918],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[216950,216951],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[216979,216980]},{"pos":[217068,217085],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[217177,217180]},{"pos":[217265,217277],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[217364,217367]},{"pos":[217401,217405],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[217436,217437]},{"pos":[217469,217475],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[217507,217508],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[217535,217536],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[217563,217564],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[218284,218319],"content":"Count<KeyValuePair<TKey, TValue>>()","needQuote":true,"nodes":[{"content":"Count&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;()","pos":[0,35],"source":"Count<KeyValuePair<TKey, TValue>>()"}]},{"pos":[218644,218677],"content":"Count<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Count&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,33],"source":"Count<KeyValuePair<TKey, TValue>>"}]},{"pos":[218786,218787],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[218814,218815],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[218894,218933],"content":"Count(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Count(Of KeyValuePair(Of TKey, TValue))","pos":[0,39]}]},{"pos":[219048,219049],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[219076,219077],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[219697,219773],"content":"Count<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)","needQuote":true,"nodes":[{"content":"Count&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Boolean&gt;)","pos":[0,76],"source":"Count<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)"}]},{"pos":[220348,220381],"content":"Count<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Count&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,33],"source":"Count<KeyValuePair<TKey, TValue>>"}]},{"pos":[220490,220491],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[220541,220545],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[220603,220604],"content":"<","needQuote":true,"nodes":[]},{"pos":[220682,220694],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[220780,220781],"content":"<","needQuote":true,"nodes":[]},{"pos":[220808,220812],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[220843,220844]},{"pos":[220876,220882],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[220947,220948]},{"pos":[221004,221011],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[221104,221105],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[221217,221256],"content":"Count(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Count(Of KeyValuePair(Of TKey, TValue))","pos":[0,39]}]},{"pos":[221371,221372],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[221422,221426],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[221485,221488]},{"pos":[221573,221585],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[221672,221675]},{"pos":[221709,221713],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[221744,221745]},{"pos":[221777,221783],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[221815,221816],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[221844,221845]},{"pos":[221901,221908],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[221969,221970],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[221997,221998],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[222638,222682],"content":"DefaultIfEmpty<KeyValuePair<TKey, TValue>>()","needQuote":true,"nodes":[{"content":"DefaultIfEmpty&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;()","pos":[0,44],"source":"DefaultIfEmpty<KeyValuePair<TKey, TValue>>()"}]},{"pos":[223043,223085],"content":"DefaultIfEmpty<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"DefaultIfEmpty&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,42],"source":"DefaultIfEmpty<KeyValuePair<TKey, TValue>>"}]},{"pos":[223203,223204],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[223231,223232],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[223320,223368],"content":"DefaultIfEmpty(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"DefaultIfEmpty(Of KeyValuePair(Of TKey, TValue))","pos":[0,48]}]},{"pos":[223492,223493],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[223520,223521],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[224130,224200],"content":"DefaultIfEmpty<KeyValuePair<TKey, TValue>>(KeyValuePair<TKey, TValue>)","needQuote":true,"nodes":[{"content":"DefaultIfEmpty&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(KeyValuePair&lt;TKey, TValue&gt;)","pos":[0,70],"source":"DefaultIfEmpty<KeyValuePair<TKey, TValue>>(KeyValuePair<TKey, TValue>)"}]},{"pos":[224704,224746],"content":"DefaultIfEmpty<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"DefaultIfEmpty&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,42],"source":"DefaultIfEmpty<KeyValuePair<TKey, TValue>>"}]},{"pos":[224864,224865],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[224943,224955],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[225041,225042],"content":"<","needQuote":true,"nodes":[]},{"pos":[225069,225073],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[225104,225105]},{"pos":[225137,225143],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[225207,225208],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[225301,225349],"content":"DefaultIfEmpty(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"DefaultIfEmpty(Of KeyValuePair(Of TKey, TValue))","pos":[0,48]}]},{"pos":[225473,225474],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[225552,225564],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[225651,225654]},{"pos":[225688,225692],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[225723,225724]},{"pos":[225756,225762],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[225794,225795],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[225822,225823],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[226417,226455],"content":"Distinct<KeyValuePair<TKey, TValue>>()","needQuote":true,"nodes":[{"content":"Distinct&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;()","pos":[0,38],"source":"Distinct<KeyValuePair<TKey, TValue>>()"}]},{"pos":[226792,226828],"content":"Distinct<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Distinct&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,36],"source":"Distinct<KeyValuePair<TKey, TValue>>"}]},{"pos":[226940,226941],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[226968,226969],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[227051,227093],"content":"Distinct(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Distinct(Of KeyValuePair(Of TKey, TValue))","pos":[0,42]}]},{"pos":[227211,227212],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[227239,227240],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[227911,227994],"content":"Distinct<KeyValuePair<TKey, TValue>>(IEqualityComparer<KeyValuePair<TKey, TValue>>)","needQuote":true,"nodes":[{"content":"Distinct&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(IEqualityComparer&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;)","pos":[0,83],"source":"Distinct<KeyValuePair<TKey, TValue>>(IEqualityComparer<KeyValuePair<TKey, TValue>>)"}]},{"pos":[228637,228673],"content":"Distinct<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Distinct&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,36],"source":"Distinct<KeyValuePair<TKey, TValue>>"}]},{"pos":[228785,228786],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[228869,228886],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[228977,228978],"content":"<","needQuote":true,"nodes":[]},{"pos":[229056,229068],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[229154,229155],"content":"<","needQuote":true,"nodes":[]},{"pos":[229182,229186],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[229217,229218]},{"pos":[229250,229256],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[229352,229353],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[229486,229528],"content":"Distinct(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Distinct(Of KeyValuePair(Of TKey, TValue))","pos":[0,42]}]},{"pos":[229646,229647],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[229730,229747],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[229839,229842]},{"pos":[229927,229939],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[230026,230029]},{"pos":[230063,230067],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[230098,230099]},{"pos":[230131,230137],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[230169,230170],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[230197,230198],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[230225,230226],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[230918,230962],"content":"ElementAt<KeyValuePair<TKey, TValue>>(Int32)","needQuote":true,"nodes":[{"content":"ElementAt&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Int32)","pos":[0,44],"source":"ElementAt<KeyValuePair<TKey, TValue>>(Int32)"}]},{"pos":[231346,231383],"content":"ElementAt<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"ElementAt&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,37],"source":"ElementAt<KeyValuePair<TKey, TValue>>"}]},{"pos":[231496,231497],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[231546,231551],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[231610,231611],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[231708,231751],"content":"ElementAt(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"ElementAt(Of KeyValuePair(Of TKey, TValue))","pos":[0,43]}]},{"pos":[231870,231871],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[231920,231925],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[231984,231985],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[232575,232628],"content":"ElementAtOrDefault<KeyValuePair<TKey, TValue>>(Int32)","needQuote":true,"nodes":[{"content":"ElementAtOrDefault&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Int32)","pos":[0,53],"source":"ElementAtOrDefault<KeyValuePair<TKey, TValue>>(Int32)"}]},{"pos":[233048,233094],"content":"ElementAtOrDefault<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"ElementAtOrDefault&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,46],"source":"ElementAtOrDefault<KeyValuePair<TKey, TValue>>"}]},{"pos":[233216,233217],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[233266,233271],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[233330,233331],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[233437,233489],"content":"ElementAtOrDefault(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"ElementAtOrDefault(Of KeyValuePair(Of TKey, TValue))","pos":[0,52]}]},{"pos":[233617,233618],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[233667,233672],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[233731,233732],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[234440,234515],"content":"Except<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>)","needQuote":true,"nodes":[{"content":"Except&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(IEnumerable&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;)","pos":[0,75],"source":"Except<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>)"}]},{"pos":[235126,235160],"content":"Except<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Except&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,34],"source":"Except<KeyValuePair<TKey, TValue>>"}]},{"pos":[235270,235271],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[235348,235359],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[235444,235445],"content":"<","needQuote":true,"nodes":[]},{"pos":[235523,235535],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[235621,235622],"content":"<","needQuote":true,"nodes":[]},{"pos":[235649,235653],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[235684,235685]},{"pos":[235717,235723],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[235819,235820],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[235945,235985],"content":"Except(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Except(Of KeyValuePair(Of TKey, TValue))","pos":[0,40]}]},{"pos":[236101,236102],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[236179,236190],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[236276,236279]},{"pos":[236364,236376],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[236463,236466]},{"pos":[236500,236504],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[236535,236536]},{"pos":[236568,236574],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[236606,236607],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[236634,236635],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[236662,236663],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[237593,237715],"content":"Except<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>, IEqualityComparer<KeyValuePair<TKey, TValue>>)","needQuote":true,"nodes":[{"content":"Except&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(IEnumerable&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;, IEqualityComparer&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;)","pos":[0,122],"source":"Except<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>, IEqualityComparer<KeyValuePair<TKey, TValue>>)"}]},{"pos":[238637,238671],"content":"Except<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Except&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,34],"source":"Except<KeyValuePair<TKey, TValue>>"}]},{"pos":[238781,238782],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[238859,238870],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[238955,238956],"content":"<","needQuote":true,"nodes":[]},{"pos":[239034,239046],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[239132,239133],"content":"<","needQuote":true,"nodes":[]},{"pos":[239160,239164],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[239195,239196]},{"pos":[239228,239234],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[239331,239332]},{"pos":[239420,239437],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[239528,239529],"content":"<","needQuote":true,"nodes":[]},{"pos":[239607,239619],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[239705,239706],"content":"<","needQuote":true,"nodes":[]},{"pos":[239733,239737],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[239768,239769]},{"pos":[239801,239807],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[239903,239904],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[240079,240119],"content":"Except(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Except(Of KeyValuePair(Of TKey, TValue))","pos":[0,40]}]},{"pos":[240235,240236],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[240313,240324],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[240410,240413]},{"pos":[240498,240510],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[240597,240600]},{"pos":[240634,240638],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[240669,240670]},{"pos":[240702,240708],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[240740,240741],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[240768,240769],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[240797,240798]},{"pos":[240886,240903],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[240995,240998]},{"pos":[241083,241095],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[241182,241185]},{"pos":[241219,241223],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[241254,241255]},{"pos":[241287,241293],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[241325,241326],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[241353,241354],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[241381,241382],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[242165,242200],"content":"First<KeyValuePair<TKey, TValue>>()","needQuote":true,"nodes":[{"content":"First&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;()","pos":[0,35],"source":"First<KeyValuePair<TKey, TValue>>()"}]},{"pos":[242525,242558],"content":"First<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"First&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,33],"source":"First<KeyValuePair<TKey, TValue>>"}]},{"pos":[242667,242668],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[242695,242696],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[242775,242814],"content":"First(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"First(Of KeyValuePair(Of TKey, TValue))","pos":[0,39]}]},{"pos":[242929,242930],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[242957,242958],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[243578,243654],"content":"First<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)","needQuote":true,"nodes":[{"content":"First&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Boolean&gt;)","pos":[0,76],"source":"First<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)"}]},{"pos":[244229,244262],"content":"First<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"First&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,33],"source":"First<KeyValuePair<TKey, TValue>>"}]},{"pos":[244371,244372],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[244422,244426],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[244484,244485],"content":"<","needQuote":true,"nodes":[]},{"pos":[244563,244575],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[244661,244662],"content":"<","needQuote":true,"nodes":[]},{"pos":[244689,244693],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[244724,244725]},{"pos":[244757,244763],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[244828,244829]},{"pos":[244885,244892],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[244985,244986],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[245098,245137],"content":"First(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"First(Of KeyValuePair(Of TKey, TValue))","pos":[0,39]}]},{"pos":[245252,245253],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[245303,245307],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[245366,245369]},{"pos":[245454,245466],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[245553,245556]},{"pos":[245590,245594],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[245625,245626]},{"pos":[245658,245664],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[245696,245697],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[245725,245726]},{"pos":[245782,245789],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[245850,245851],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[245878,245879],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[246519,246563],"content":"FirstOrDefault<KeyValuePair<TKey, TValue>>()","needQuote":true,"nodes":[{"content":"FirstOrDefault&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;()","pos":[0,44],"source":"FirstOrDefault<KeyValuePair<TKey, TValue>>()"}]},{"pos":[246924,246966],"content":"FirstOrDefault<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"FirstOrDefault&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,42],"source":"FirstOrDefault<KeyValuePair<TKey, TValue>>"}]},{"pos":[247084,247085],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[247112,247113],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[247201,247249],"content":"FirstOrDefault(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"FirstOrDefault(Of KeyValuePair(Of TKey, TValue))","pos":[0,48]}]},{"pos":[247373,247374],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[247401,247402],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[248067,248152],"content":"FirstOrDefault<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)","needQuote":true,"nodes":[{"content":"FirstOrDefault&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Boolean&gt;)","pos":[0,85],"source":"FirstOrDefault<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)"}]},{"pos":[248763,248805],"content":"FirstOrDefault<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"FirstOrDefault&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,42],"source":"FirstOrDefault<KeyValuePair<TKey, TValue>>"}]},{"pos":[248923,248924],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[248974,248978],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[249036,249037],"content":"<","needQuote":true,"nodes":[]},{"pos":[249115,249127],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[249213,249214],"content":"<","needQuote":true,"nodes":[]},{"pos":[249241,249245],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[249276,249277]},{"pos":[249309,249315],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[249380,249381]},{"pos":[249437,249444],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[249537,249538],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[249659,249707],"content":"FirstOrDefault(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"FirstOrDefault(Of KeyValuePair(Of TKey, TValue))","pos":[0,48]}]},{"pos":[249831,249832],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[249882,249886],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[249945,249948]},{"pos":[250033,250045],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[250132,250135]},{"pos":[250169,250173],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[250204,250205]},{"pos":[250237,250243],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[250275,250276],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[250304,250305]},{"pos":[250361,250368],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[250429,250430],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[250457,250458],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[251210,251291],"content":"GroupBy<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;)","pos":[0,81],"source":"GroupBy<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>)"}]},{"pos":[251858,251899],"content":"GroupBy<KeyValuePair<TKey, TValue>, TKey>","needQuote":true,"nodes":[{"content":"GroupBy&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;","pos":[0,41],"source":"GroupBy<KeyValuePair<TKey, TValue>, TKey>"}]},{"pos":[252016,252017],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[252067,252071],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[252129,252130],"content":"<","needQuote":true,"nodes":[]},{"pos":[252208,252220],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[252306,252307],"content":"<","needQuote":true,"nodes":[]},{"pos":[252334,252338],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[252369,252370]},{"pos":[252402,252408],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[252473,252474]},{"pos":[252506,252510],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[252572,252573],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[252676,252723],"content":"GroupBy(Of KeyValuePair(Of TKey, TValue), TKey)","needQuote":true,"nodes":[{"content":"GroupBy(Of KeyValuePair(Of TKey, TValue), TKey)","pos":[0,47]}]},{"pos":[252846,252847],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[252897,252901],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[252960,252963]},{"pos":[253048,253060],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[253147,253150]},{"pos":[253184,253188],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[253219,253220]},{"pos":[253252,253258],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[253290,253291],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[253319,253320]},{"pos":[253352,253356],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[253386,253387],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[253414,253415],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[254244,254350],"content":"GroupBy<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,106],"source":"GroupBy<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>, IEqualityComparer<TKey>)"}]},{"pos":[255102,255143],"content":"GroupBy<KeyValuePair<TKey, TValue>, TKey>","needQuote":true,"nodes":[{"content":"GroupBy&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;","pos":[0,41],"source":"GroupBy<KeyValuePair<TKey, TValue>, TKey>"}]},{"pos":[255260,255261],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[255311,255315],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[255373,255374],"content":"<","needQuote":true,"nodes":[]},{"pos":[255452,255464],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[255550,255551],"content":"<","needQuote":true,"nodes":[]},{"pos":[255578,255582],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[255613,255614]},{"pos":[255646,255652],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[255717,255718]},{"pos":[255750,255754],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[255817,255818]},{"pos":[255906,255923],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[256014,256015],"content":"<","needQuote":true,"nodes":[]},{"pos":[256042,256046],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[256108,256109],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[256262,256309],"content":"GroupBy(Of KeyValuePair(Of TKey, TValue), TKey)","needQuote":true,"nodes":[{"content":"GroupBy(Of KeyValuePair(Of TKey, TValue), TKey)","pos":[0,47]}]},{"pos":[256432,256433],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[256483,256487],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[256546,256549]},{"pos":[256634,256646],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[256733,256736]},{"pos":[256770,256774],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[256805,256806]},{"pos":[256838,256844],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[256876,256877],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[256905,256906]},{"pos":[256938,256942],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[256972,256973],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[257001,257002]},{"pos":[257090,257107],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[257199,257202]},{"pos":[257236,257240],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[257270,257271],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[257298,257299],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[258230,258365],"content":"GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey, TElement&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;, Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TElement&gt;)","pos":[0,135],"source":"GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>)"}]},{"pos":[259195,259246],"content":"GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement>","needQuote":true,"nodes":[{"content":"GroupBy&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey, TElement&gt;","pos":[0,51],"source":"GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement>"}]},{"pos":[259373,259374],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[259424,259428],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[259486,259487],"content":"<","needQuote":true,"nodes":[]},{"pos":[259565,259577],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[259663,259664],"content":"<","needQuote":true,"nodes":[]},{"pos":[259691,259695],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[259726,259727]},{"pos":[259759,259765],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[259830,259831]},{"pos":[259863,259867],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[259930,259931]},{"pos":[259986,259990],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[260048,260049],"content":"<","needQuote":true,"nodes":[]},{"pos":[260127,260139],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[260225,260226],"content":"<","needQuote":true,"nodes":[]},{"pos":[260253,260257],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[260288,260289]},{"pos":[260321,260327],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[260392,260393]},{"pos":[260425,260433],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[260499,260500],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[260624,260681],"content":"GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TElement)","needQuote":true,"nodes":[{"content":"GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TElement)","pos":[0,57]}]},{"pos":[260814,260815],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[260865,260869],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[260928,260931]},{"pos":[261016,261028],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[261115,261118]},{"pos":[261152,261156],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[261187,261188]},{"pos":[261220,261226],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[261258,261259],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[261287,261288]},{"pos":[261320,261324],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[261354,261355],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[261383,261384]},{"pos":[261439,261443],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[261502,261505]},{"pos":[261590,261602],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[261689,261692]},{"pos":[261726,261730],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[261761,261762]},{"pos":[261794,261800],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[261832,261833],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[261861,261862]},{"pos":[261894,261902],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[261936,261937],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[261964,261965],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[263031,263191],"content":"GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey, TElement&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;, Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TElement&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,160],"source":"GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>, IEqualityComparer<TKey>)"}]},{"pos":[264206,264257],"content":"GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement>","needQuote":true,"nodes":[{"content":"GroupBy&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey, TElement&gt;","pos":[0,51],"source":"GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement>"}]},{"pos":[264384,264385],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[264435,264439],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[264497,264498],"content":"<","needQuote":true,"nodes":[]},{"pos":[264576,264588],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[264674,264675],"content":"<","needQuote":true,"nodes":[]},{"pos":[264702,264706],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[264737,264738]},{"pos":[264770,264776],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[264841,264842]},{"pos":[264874,264878],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[264941,264942]},{"pos":[264997,265001],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[265059,265060],"content":"<","needQuote":true,"nodes":[]},{"pos":[265138,265150],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[265236,265237],"content":"<","needQuote":true,"nodes":[]},{"pos":[265264,265268],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[265299,265300]},{"pos":[265332,265338],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[265403,265404]},{"pos":[265436,265444],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[265511,265512]},{"pos":[265600,265617],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[265708,265709],"content":"<","needQuote":true,"nodes":[]},{"pos":[265736,265740],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[265802,265803],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[265977,266034],"content":"GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TElement)","needQuote":true,"nodes":[{"content":"GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TElement)","pos":[0,57]}]},{"pos":[266167,266168],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[266218,266222],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[266281,266284]},{"pos":[266369,266381],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[266468,266471]},{"pos":[266505,266509],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[266540,266541]},{"pos":[266573,266579],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[266611,266612],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[266640,266641]},{"pos":[266673,266677],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[266707,266708],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[266736,266737]},{"pos":[266792,266796],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[266855,266858]},{"pos":[266943,266955],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[267042,267045]},{"pos":[267079,267083],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[267114,267115]},{"pos":[267147,267153],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[267185,267186],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[267214,267215]},{"pos":[267247,267255],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[267289,267290],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[267318,267319]},{"pos":[267407,267424],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[267516,267519]},{"pos":[267553,267557],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[267587,267588],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[267615,267616],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[268772,268924],"content":"GroupBy<KeyValuePair<TKey, TValue>, TKey, TResult>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<TKey, IEnumerable<KeyValuePair<TKey, TValue>>, TResult>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey, TResult&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;, Func&lt;TKey, IEnumerable&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;, TResult&gt;)","pos":[0,152],"source":"GroupBy<KeyValuePair<TKey, TValue>, TKey, TResult>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<TKey, IEnumerable<KeyValuePair<TKey, TValue>>, TResult>)"}]},{"pos":[269909,269959],"content":"GroupBy<KeyValuePair<TKey, TValue>, TKey, TResult>","needQuote":true,"nodes":[{"content":"GroupBy&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey, TResult&gt;","pos":[0,50],"source":"GroupBy<KeyValuePair<TKey, TValue>, TKey, TResult>"}]},{"pos":[270085,270086],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[270136,270140],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[270198,270199],"content":"<","needQuote":true,"nodes":[]},{"pos":[270277,270289],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[270375,270376],"content":"<","needQuote":true,"nodes":[]},{"pos":[270403,270407],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[270438,270439]},{"pos":[270471,270477],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[270542,270543]},{"pos":[270575,270579],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[270642,270643]},{"pos":[270698,270702],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[270760,270761],"content":"<","needQuote":true,"nodes":[]},{"pos":[270788,270792],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[270823,270824]},{"pos":[270906,270917],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[271002,271003],"content":"<","needQuote":true,"nodes":[]},{"pos":[271081,271093],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[271179,271180],"content":"<","needQuote":true,"nodes":[]},{"pos":[271207,271211],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[271242,271243]},{"pos":[271275,271281],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[271378,271379]},{"pos":[271411,271418],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[271483,271484],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[271652,271708],"content":"GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TResult)","needQuote":true,"nodes":[{"content":"GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TResult)","pos":[0,56]}]},{"pos":[271840,271841],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[271891,271895],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[271954,271957]},{"pos":[272042,272054],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[272141,272144]},{"pos":[272178,272182],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[272213,272214]},{"pos":[272246,272252],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[272284,272285],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[272313,272314]},{"pos":[272346,272350],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[272380,272381],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[272409,272410]},{"pos":[272465,272469],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[272528,272531]},{"pos":[272565,272569],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[272600,272601]},{"pos":[272683,272694],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[272780,272783]},{"pos":[272868,272880],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[272967,272970]},{"pos":[273004,273008],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[273039,273040]},{"pos":[273072,273078],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[273110,273111],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[273138,273139],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[273167,273168]},{"pos":[273200,273207],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[273240,273241],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[273268,273269],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[274506,274683],"content":"GroupBy<KeyValuePair<TKey, TValue>, TKey, TResult>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<TKey, IEnumerable<KeyValuePair<TKey, TValue>>, TResult>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey, TResult&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;, Func&lt;TKey, IEnumerable&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;, TResult&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,177],"source":"GroupBy<KeyValuePair<TKey, TValue>, TKey, TResult>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<TKey, IEnumerable<KeyValuePair<TKey, TValue>>, TResult>, IEqualityComparer<TKey>)"}]},{"pos":[275853,275903],"content":"GroupBy<KeyValuePair<TKey, TValue>, TKey, TResult>","needQuote":true,"nodes":[{"content":"GroupBy&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey, TResult&gt;","pos":[0,50],"source":"GroupBy<KeyValuePair<TKey, TValue>, TKey, TResult>"}]},{"pos":[276029,276030],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[276080,276084],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[276142,276143],"content":"<","needQuote":true,"nodes":[]},{"pos":[276221,276233],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[276319,276320],"content":"<","needQuote":true,"nodes":[]},{"pos":[276347,276351],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[276382,276383]},{"pos":[276415,276421],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[276486,276487]},{"pos":[276519,276523],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[276586,276587]},{"pos":[276642,276646],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[276704,276705],"content":"<","needQuote":true,"nodes":[]},{"pos":[276732,276736],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[276767,276768]},{"pos":[276850,276861],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[276946,276947],"content":"<","needQuote":true,"nodes":[]},{"pos":[277025,277037],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[277123,277124],"content":"<","needQuote":true,"nodes":[]},{"pos":[277151,277155],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[277186,277187]},{"pos":[277219,277225],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[277322,277323]},{"pos":[277355,277362],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[277428,277429]},{"pos":[277517,277534],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[277625,277626],"content":"<","needQuote":true,"nodes":[]},{"pos":[277653,277657],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[277719,277720],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[277938,277994],"content":"GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TResult)","needQuote":true,"nodes":[{"content":"GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TResult)","pos":[0,56]}]},{"pos":[278126,278127],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[278177,278181],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[278240,278243]},{"pos":[278328,278340],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[278427,278430]},{"pos":[278464,278468],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[278499,278500]},{"pos":[278532,278538],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[278570,278571],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[278599,278600]},{"pos":[278632,278636],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[278666,278667],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[278695,278696]},{"pos":[278751,278755],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[278814,278817]},{"pos":[278851,278855],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[278886,278887]},{"pos":[278969,278980],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[279066,279069]},{"pos":[279154,279166],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[279253,279256]},{"pos":[279290,279294],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[279325,279326]},{"pos":[279358,279364],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[279396,279397],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[279424,279425],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[279453,279454]},{"pos":[279486,279493],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[279526,279527],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[279555,279556]},{"pos":[279644,279661],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[279753,279756]},{"pos":[279790,279794],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[279824,279825],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[279852,279853],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[281146,281334],"content":"GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement, TResult>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey, TElement, TResult&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;, Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TElement&gt;, Func&lt;TKey, IEnumerable&lt;TElement&gt;, TResult&gt;)","pos":[0,188],"source":"GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement, TResult>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)"}]},{"pos":[282468,282528],"content":"GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement, TResult>","needQuote":true,"nodes":[{"content":"GroupBy&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey, TElement, TResult&gt;","pos":[0,60],"source":"GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement, TResult>"}]},{"pos":[282664,282665],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[282715,282719],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[282777,282778],"content":"<","needQuote":true,"nodes":[]},{"pos":[282856,282868],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[282954,282955],"content":"<","needQuote":true,"nodes":[]},{"pos":[282982,282986],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[283017,283018]},{"pos":[283050,283056],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[283121,283122]},{"pos":[283154,283158],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[283221,283222]},{"pos":[283277,283281],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[283339,283340],"content":"<","needQuote":true,"nodes":[]},{"pos":[283418,283430],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[283516,283517],"content":"<","needQuote":true,"nodes":[]},{"pos":[283544,283548],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[283579,283580]},{"pos":[283612,283618],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[283683,283684]},{"pos":[283716,283724],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[283791,283792]},{"pos":[283847,283851],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[283909,283910],"content":"<","needQuote":true,"nodes":[]},{"pos":[283937,283941],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[283972,283973]},{"pos":[284055,284066],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[284151,284152],"content":"<","needQuote":true,"nodes":[]},{"pos":[284179,284187],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[284254,284255]},{"pos":[284287,284294],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[284359,284360],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[284549,284615],"content":"GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TElement, TResult)","needQuote":true,"nodes":[{"content":"GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TElement, TResult)","pos":[0,66]}]},{"pos":[284757,284758],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[284808,284812],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[284871,284874]},{"pos":[284959,284971],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[285058,285061]},{"pos":[285095,285099],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[285130,285131]},{"pos":[285163,285169],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[285201,285202],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[285230,285231]},{"pos":[285263,285267],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[285297,285298],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[285326,285327]},{"pos":[285382,285386],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[285445,285448]},{"pos":[285533,285545],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[285632,285635]},{"pos":[285669,285673],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[285704,285705]},{"pos":[285737,285743],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[285775,285776],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[285804,285805]},{"pos":[285837,285845],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[285879,285880],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[285908,285909]},{"pos":[285964,285968],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[286027,286030]},{"pos":[286064,286068],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[286099,286100]},{"pos":[286182,286193],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[286279,286282]},{"pos":[286316,286324],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[286358,286359],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[286387,286388]},{"pos":[286420,286427],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[286460,286461],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[286488,286489],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[287878,288091],"content":"GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement, TResult>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey, TElement, TResult&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;, Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TElement&gt;, Func&lt;TKey, IEnumerable&lt;TElement&gt;, TResult&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,213],"source":"GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement, TResult>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)"}]},{"pos":[289410,289470],"content":"GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement, TResult>","needQuote":true,"nodes":[{"content":"GroupBy&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey, TElement, TResult&gt;","pos":[0,60],"source":"GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement, TResult>"}]},{"pos":[289606,289607],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[289657,289661],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[289719,289720],"content":"<","needQuote":true,"nodes":[]},{"pos":[289798,289810],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[289896,289897],"content":"<","needQuote":true,"nodes":[]},{"pos":[289924,289928],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[289959,289960]},{"pos":[289992,289998],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[290063,290064]},{"pos":[290096,290100],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[290163,290164]},{"pos":[290219,290223],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[290281,290282],"content":"<","needQuote":true,"nodes":[]},{"pos":[290360,290372],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[290458,290459],"content":"<","needQuote":true,"nodes":[]},{"pos":[290486,290490],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[290521,290522]},{"pos":[290554,290560],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[290625,290626]},{"pos":[290658,290666],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[290733,290734]},{"pos":[290789,290793],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[290851,290852],"content":"<","needQuote":true,"nodes":[]},{"pos":[290879,290883],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[290914,290915]},{"pos":[290997,291008],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[291093,291094],"content":"<","needQuote":true,"nodes":[]},{"pos":[291121,291129],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[291196,291197]},{"pos":[291229,291236],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[291302,291303]},{"pos":[291391,291408],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[291499,291500],"content":"<","needQuote":true,"nodes":[]},{"pos":[291527,291531],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[291593,291594],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[291833,291899],"content":"GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TElement, TResult)","needQuote":true,"nodes":[{"content":"GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TElement, TResult)","pos":[0,66]}]},{"pos":[292041,292042],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[292092,292096],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[292155,292158]},{"pos":[292243,292255],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[292342,292345]},{"pos":[292379,292383],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[292414,292415]},{"pos":[292447,292453],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[292485,292486],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[292514,292515]},{"pos":[292547,292551],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[292581,292582],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[292610,292611]},{"pos":[292666,292670],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[292729,292732]},{"pos":[292817,292829],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[292916,292919]},{"pos":[292953,292957],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[292988,292989]},{"pos":[293021,293027],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[293059,293060],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[293088,293089]},{"pos":[293121,293129],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[293163,293164],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[293192,293193]},{"pos":[293248,293252],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[293311,293314]},{"pos":[293348,293352],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[293383,293384]},{"pos":[293466,293477],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[293563,293566]},{"pos":[293600,293608],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[293642,293643],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[293671,293672]},{"pos":[293704,293711],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[293744,293745],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[293773,293774]},{"pos":[293862,293879],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[293971,293974]},{"pos":[294008,294012],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[294042,294043],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[294070,294071],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[295553,295758],"content":"GroupJoin<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>(IEnumerable<TInner>, Func<KeyValuePair<TKey, TValue>, TKey>, Func<TInner, TKey>, Func<KeyValuePair<TKey, TValue>, IEnumerable<TInner>, TResult>)","needQuote":true,"nodes":[{"content":"GroupJoin&lt;KeyValuePair&lt;TKey, TValue&gt;, TInner, TKey, TResult&gt;(IEnumerable&lt;TInner&gt;, Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;, Func&lt;TInner, TKey&gt;, Func&lt;KeyValuePair&lt;TKey, TValue&gt;, IEnumerable&lt;TInner&gt;, TResult&gt;)","pos":[0,205],"source":"GroupJoin<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>(IEnumerable<TInner>, Func<KeyValuePair<TKey, TValue>, TKey>, Func<TInner, TKey>, Func<KeyValuePair<TKey, TValue>, IEnumerable<TInner>, TResult>)"}]},{"pos":[297049,297109],"content":"GroupJoin<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>","needQuote":true,"nodes":[{"content":"GroupJoin&lt;KeyValuePair&lt;TKey, TValue&gt;, TInner, TKey, TResult&gt;","pos":[0,60],"source":"GroupJoin<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>"}]},{"pos":[297245,297246],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[297323,297334],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[297419,297420],"content":"<","needQuote":true,"nodes":[]},{"pos":[297447,297453],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[297518,297519]},{"pos":[297574,297578],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[297636,297637],"content":"<","needQuote":true,"nodes":[]},{"pos":[297715,297727],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[297813,297814],"content":"<","needQuote":true,"nodes":[]},{"pos":[297841,297845],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[297876,297877]},{"pos":[297909,297915],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[297980,297981]},{"pos":[298013,298017],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[298080,298081]},{"pos":[298136,298140],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[298198,298199],"content":"<","needQuote":true,"nodes":[]},{"pos":[298226,298232],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[298265,298266]},{"pos":[298298,298302],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[298365,298366]},{"pos":[298421,298425],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[298483,298484],"content":"<","needQuote":true,"nodes":[]},{"pos":[298562,298574],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[298660,298661],"content":"<","needQuote":true,"nodes":[]},{"pos":[298688,298692],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[298723,298724]},{"pos":[298756,298762],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[298827,298828]},{"pos":[298910,298921],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[299006,299007],"content":"<","needQuote":true,"nodes":[]},{"pos":[299034,299040],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[299105,299106]},{"pos":[299138,299145],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[299210,299211],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[299446,299512],"content":"GroupJoin(Of KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)","needQuote":true,"nodes":[{"content":"GroupJoin(Of KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)","pos":[0,66]}]},{"pos":[299654,299655],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[299732,299743],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[299829,299832]},{"pos":[299866,299872],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[299904,299905],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[299933,299934]},{"pos":[299989,299993],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[300052,300055]},{"pos":[300140,300152],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[300239,300242]},{"pos":[300276,300280],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[300311,300312]},{"pos":[300344,300350],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[300382,300383],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[300411,300412]},{"pos":[300444,300448],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[300478,300479],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[300507,300508]},{"pos":[300563,300567],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[300626,300629]},{"pos":[300663,300669],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[300702,300703]},{"pos":[300735,300739],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[300769,300770],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[300798,300799]},{"pos":[300854,300858],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[300917,300920]},{"pos":[301005,301017],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[301104,301107]},{"pos":[301141,301145],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[301176,301177]},{"pos":[301209,301215],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[301247,301248],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[301276,301277]},{"pos":[301359,301370],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[301456,301459]},{"pos":[301493,301499],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[301531,301532],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[301560,301561]},{"pos":[301593,301600],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[301633,301634],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[301661,301662],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[303227,303457],"content":"GroupJoin<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>(IEnumerable<TInner>, Func<KeyValuePair<TKey, TValue>, TKey>, Func<TInner, TKey>, Func<KeyValuePair<TKey, TValue>, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupJoin&lt;KeyValuePair&lt;TKey, TValue&gt;, TInner, TKey, TResult&gt;(IEnumerable&lt;TInner&gt;, Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;, Func&lt;TInner, TKey&gt;, Func&lt;KeyValuePair&lt;TKey, TValue&gt;, IEnumerable&lt;TInner&gt;, TResult&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,230],"source":"GroupJoin<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>(IEnumerable<TInner>, Func<KeyValuePair<TKey, TValue>, TKey>, Func<TInner, TKey>, Func<KeyValuePair<TKey, TValue>, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)"}]},{"pos":[304933,304993],"content":"GroupJoin<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>","needQuote":true,"nodes":[{"content":"GroupJoin&lt;KeyValuePair&lt;TKey, TValue&gt;, TInner, TKey, TResult&gt;","pos":[0,60],"source":"GroupJoin<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>"}]},{"pos":[305129,305130],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[305207,305218],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[305303,305304],"content":"<","needQuote":true,"nodes":[]},{"pos":[305331,305337],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[305402,305403]},{"pos":[305458,305462],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[305520,305521],"content":"<","needQuote":true,"nodes":[]},{"pos":[305599,305611],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[305697,305698],"content":"<","needQuote":true,"nodes":[]},{"pos":[305725,305729],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[305760,305761]},{"pos":[305793,305799],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[305864,305865]},{"pos":[305897,305901],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[305964,305965]},{"pos":[306020,306024],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[306082,306083],"content":"<","needQuote":true,"nodes":[]},{"pos":[306110,306116],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[306149,306150]},{"pos":[306182,306186],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[306249,306250]},{"pos":[306305,306309],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[306367,306368],"content":"<","needQuote":true,"nodes":[]},{"pos":[306446,306458],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[306544,306545],"content":"<","needQuote":true,"nodes":[]},{"pos":[306572,306576],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[306607,306608]},{"pos":[306640,306646],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[306711,306712]},{"pos":[306794,306805],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[306890,306891],"content":"<","needQuote":true,"nodes":[]},{"pos":[306918,306924],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[306989,306990]},{"pos":[307022,307029],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[307095,307096]},{"pos":[307184,307201],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[307292,307293],"content":"<","needQuote":true,"nodes":[]},{"pos":[307320,307324],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[307386,307387],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[307672,307738],"content":"GroupJoin(Of KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)","needQuote":true,"nodes":[{"content":"GroupJoin(Of KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)","pos":[0,66]}]},{"pos":[307880,307881],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[307958,307969],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[308055,308058]},{"pos":[308092,308098],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[308130,308131],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[308159,308160]},{"pos":[308215,308219],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[308278,308281]},{"pos":[308366,308378],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[308465,308468]},{"pos":[308502,308506],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[308537,308538]},{"pos":[308570,308576],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[308608,308609],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[308637,308638]},{"pos":[308670,308674],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[308704,308705],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[308733,308734]},{"pos":[308789,308793],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[308852,308855]},{"pos":[308889,308895],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[308928,308929]},{"pos":[308961,308965],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[308995,308996],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[309024,309025]},{"pos":[309080,309084],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[309143,309146]},{"pos":[309231,309243],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[309330,309333]},{"pos":[309367,309371],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[309402,309403]},{"pos":[309435,309441],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[309473,309474],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[309502,309503]},{"pos":[309585,309596],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[309682,309685]},{"pos":[309719,309725],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[309757,309758],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[309786,309787]},{"pos":[309819,309826],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[309859,309860],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[309888,309889]},{"pos":[309977,309994],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[310086,310089]},{"pos":[310123,310127],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[310157,310158],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[310185,310186],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[311457,311535],"content":"Intersect<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>)","needQuote":true,"nodes":[{"content":"Intersect&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(IEnumerable&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;)","pos":[0,78],"source":"Intersect<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>)"}]},{"pos":[312158,312195],"content":"Intersect<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Intersect&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,37],"source":"Intersect<KeyValuePair<TKey, TValue>>"}]},{"pos":[312308,312309],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[312386,312397],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[312482,312483],"content":"<","needQuote":true,"nodes":[]},{"pos":[312561,312573],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[312659,312660],"content":"<","needQuote":true,"nodes":[]},{"pos":[312687,312691],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[312722,312723]},{"pos":[312755,312761],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[312857,312858],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[312986,313029],"content":"Intersect(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Intersect(Of KeyValuePair(Of TKey, TValue))","pos":[0,43]}]},{"pos":[313148,313149],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[313226,313237],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[313323,313326]},{"pos":[313411,313423],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[313510,313513]},{"pos":[313547,313551],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[313582,313583]},{"pos":[313615,313621],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[313653,313654],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[313681,313682],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[313709,313710],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[314655,314780],"content":"Intersect<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>, IEqualityComparer<KeyValuePair<TKey, TValue>>)","needQuote":true,"nodes":[{"content":"Intersect&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(IEnumerable&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;, IEqualityComparer&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;)","pos":[0,125],"source":"Intersect<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>, IEqualityComparer<KeyValuePair<TKey, TValue>>)"}]},{"pos":[315714,315751],"content":"Intersect<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Intersect&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,37],"source":"Intersect<KeyValuePair<TKey, TValue>>"}]},{"pos":[315864,315865],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[315942,315953],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[316038,316039],"content":"<","needQuote":true,"nodes":[]},{"pos":[316117,316129],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[316215,316216],"content":"<","needQuote":true,"nodes":[]},{"pos":[316243,316247],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[316278,316279]},{"pos":[316311,316317],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[316414,316415]},{"pos":[316503,316520],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[316611,316612],"content":"<","needQuote":true,"nodes":[]},{"pos":[316690,316702],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[316788,316789],"content":"<","needQuote":true,"nodes":[]},{"pos":[316816,316820],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[316851,316852]},{"pos":[316884,316890],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[316986,316987],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[317165,317208],"content":"Intersect(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Intersect(Of KeyValuePair(Of TKey, TValue))","pos":[0,43]}]},{"pos":[317327,317328],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[317405,317416],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[317502,317505]},{"pos":[317590,317602],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[317689,317692]},{"pos":[317726,317730],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[317761,317762]},{"pos":[317794,317800],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[317832,317833],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[317860,317861],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[317889,317890]},{"pos":[317978,317995],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[318087,318090]},{"pos":[318175,318187],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[318274,318277]},{"pos":[318311,318315],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[318346,318347]},{"pos":[318379,318385],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[318417,318418],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[318445,318446],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[318473,318474],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[319620,319807],"content":"Join<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>(IEnumerable<TInner>, Func<KeyValuePair<TKey, TValue>, TKey>, Func<TInner, TKey>, Func<KeyValuePair<TKey, TValue>, TInner, TResult>)","needQuote":true,"nodes":[{"content":"Join&lt;KeyValuePair&lt;TKey, TValue&gt;, TInner, TKey, TResult&gt;(IEnumerable&lt;TInner&gt;, Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;, Func&lt;TInner, TKey&gt;, Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TInner, TResult&gt;)","pos":[0,187],"source":"Join<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>(IEnumerable<TInner>, Func<KeyValuePair<TKey, TValue>, TKey>, Func<TInner, TKey>, Func<KeyValuePair<TKey, TValue>, TInner, TResult>)"}]},{"pos":[320939,320994],"content":"Join<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>","needQuote":true,"nodes":[{"content":"Join&lt;KeyValuePair&lt;TKey, TValue&gt;, TInner, TKey, TResult&gt;","pos":[0,55],"source":"Join<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>"}]},{"pos":[321125,321126],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[321203,321214],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[321299,321300],"content":"<","needQuote":true,"nodes":[]},{"pos":[321327,321333],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[321398,321399]},{"pos":[321454,321458],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[321516,321517],"content":"<","needQuote":true,"nodes":[]},{"pos":[321595,321607],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[321693,321694],"content":"<","needQuote":true,"nodes":[]},{"pos":[321721,321725],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[321756,321757]},{"pos":[321789,321795],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[321860,321861]},{"pos":[321893,321897],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[321960,321961]},{"pos":[322016,322020],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[322078,322079],"content":"<","needQuote":true,"nodes":[]},{"pos":[322106,322112],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[322145,322146]},{"pos":[322178,322182],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[322245,322246]},{"pos":[322301,322305],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[322363,322364],"content":"<","needQuote":true,"nodes":[]},{"pos":[322442,322454],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[322540,322541],"content":"<","needQuote":true,"nodes":[]},{"pos":[322568,322572],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[322603,322604]},{"pos":[322636,322642],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[322707,322708]},{"pos":[322740,322746],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[322779,322780]},{"pos":[322812,322819],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[322884,322885],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[323075,323136],"content":"Join(Of KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)","needQuote":true,"nodes":[{"content":"Join(Of KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)","pos":[0,61]}]},{"pos":[323273,323274],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[323351,323362],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[323448,323451]},{"pos":[323485,323491],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[323523,323524],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[323552,323553]},{"pos":[323608,323612],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[323671,323674]},{"pos":[323759,323771],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[323858,323861]},{"pos":[323895,323899],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[323930,323931]},{"pos":[323963,323969],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[324001,324002],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[324030,324031]},{"pos":[324063,324067],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[324097,324098],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[324126,324127]},{"pos":[324182,324186],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[324245,324248]},{"pos":[324282,324288],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[324321,324322]},{"pos":[324354,324358],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[324388,324389],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[324417,324418]},{"pos":[324473,324477],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[324536,324539]},{"pos":[324624,324636],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[324723,324726]},{"pos":[324760,324764],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[324795,324796]},{"pos":[324828,324834],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[324866,324867],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[324895,324896]},{"pos":[324928,324934],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[324967,324968]},{"pos":[325000,325007],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[325040,325041],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[325068,325069],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[326460,326672],"content":"Join<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>(IEnumerable<TInner>, Func<KeyValuePair<TKey, TValue>, TKey>, Func<TInner, TKey>, Func<KeyValuePair<TKey, TValue>, TInner, TResult>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"Join&lt;KeyValuePair&lt;TKey, TValue&gt;, TInner, TKey, TResult&gt;(IEnumerable&lt;TInner&gt;, Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;, Func&lt;TInner, TKey&gt;, Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TInner, TResult&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,212],"source":"Join<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>(IEnumerable<TInner>, Func<KeyValuePair<TKey, TValue>, TKey>, Func<TInner, TKey>, Func<KeyValuePair<TKey, TValue>, TInner, TResult>, IEqualityComparer<TKey>)"}]},{"pos":[327989,328044],"content":"Join<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>","needQuote":true,"nodes":[{"content":"Join&lt;KeyValuePair&lt;TKey, TValue&gt;, TInner, TKey, TResult&gt;","pos":[0,55],"source":"Join<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>"}]},{"pos":[328175,328176],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[328253,328264],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[328349,328350],"content":"<","needQuote":true,"nodes":[]},{"pos":[328377,328383],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[328448,328449]},{"pos":[328504,328508],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[328566,328567],"content":"<","needQuote":true,"nodes":[]},{"pos":[328645,328657],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[328743,328744],"content":"<","needQuote":true,"nodes":[]},{"pos":[328771,328775],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[328806,328807]},{"pos":[328839,328845],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[328910,328911]},{"pos":[328943,328947],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[329010,329011]},{"pos":[329066,329070],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[329128,329129],"content":"<","needQuote":true,"nodes":[]},{"pos":[329156,329162],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[329195,329196]},{"pos":[329228,329232],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[329295,329296]},{"pos":[329351,329355],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[329413,329414],"content":"<","needQuote":true,"nodes":[]},{"pos":[329492,329504],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[329590,329591],"content":"<","needQuote":true,"nodes":[]},{"pos":[329618,329622],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[329653,329654]},{"pos":[329686,329692],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[329757,329758]},{"pos":[329790,329796],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[329829,329830]},{"pos":[329862,329869],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[329935,329936]},{"pos":[330024,330041],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[330132,330133],"content":"<","needQuote":true,"nodes":[]},{"pos":[330160,330164],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[330226,330227],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[330467,330528],"content":"Join(Of KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)","needQuote":true,"nodes":[{"content":"Join(Of KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)","pos":[0,61]}]},{"pos":[330665,330666],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[330743,330754],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[330840,330843]},{"pos":[330877,330883],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[330915,330916],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[330944,330945]},{"pos":[331000,331004],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[331063,331066]},{"pos":[331151,331163],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[331250,331253]},{"pos":[331287,331291],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[331322,331323]},{"pos":[331355,331361],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[331393,331394],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[331422,331423]},{"pos":[331455,331459],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[331489,331490],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[331518,331519]},{"pos":[331574,331578],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[331637,331640]},{"pos":[331674,331680],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[331713,331714]},{"pos":[331746,331750],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[331780,331781],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[331809,331810]},{"pos":[331865,331869],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[331928,331931]},{"pos":[332016,332028],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[332115,332118]},{"pos":[332152,332156],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[332187,332188]},{"pos":[332220,332226],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[332258,332259],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[332287,332288]},{"pos":[332320,332326],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[332359,332360]},{"pos":[332392,332399],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[332432,332433],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[332461,332462]},{"pos":[332550,332567],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[332659,332662]},{"pos":[332696,332700],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[332730,332731],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[332758,332759],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[333794,333828],"content":"Last<KeyValuePair<TKey, TValue>>()","needQuote":true,"nodes":[{"content":"Last&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;()","pos":[0,34],"source":"Last<KeyValuePair<TKey, TValue>>()"}]},{"pos":[334149,334181],"content":"Last<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Last&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,32],"source":"Last<KeyValuePair<TKey, TValue>>"}]},{"pos":[334289,334290],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[334317,334318],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[334396,334434],"content":"Last(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Last(Of KeyValuePair(Of TKey, TValue))","pos":[0,38]}]},{"pos":[334548,334549],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[334576,334577],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[335192,335267],"content":"Last<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)","needQuote":true,"nodes":[{"content":"Last&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Boolean&gt;)","pos":[0,75],"source":"Last<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)"}]},{"pos":[335838,335870],"content":"Last<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Last&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,32],"source":"Last<KeyValuePair<TKey, TValue>>"}]},{"pos":[335978,335979],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[336029,336033],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[336091,336092],"content":"<","needQuote":true,"nodes":[]},{"pos":[336170,336182],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[336268,336269],"content":"<","needQuote":true,"nodes":[]},{"pos":[336296,336300],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[336331,336332]},{"pos":[336364,336370],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[336435,336436]},{"pos":[336492,336499],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[336592,336593],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[336704,336742],"content":"Last(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Last(Of KeyValuePair(Of TKey, TValue))","pos":[0,38]}]},{"pos":[336856,336857],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[336907,336911],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[336970,336973]},{"pos":[337058,337070],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[337157,337160]},{"pos":[337194,337198],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[337229,337230]},{"pos":[337262,337268],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[337300,337301],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[337329,337330]},{"pos":[337386,337393],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[337454,337455],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[337482,337483],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[338118,338161],"content":"LastOrDefault<KeyValuePair<TKey, TValue>>()","needQuote":true,"nodes":[{"content":"LastOrDefault&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;()","pos":[0,43],"source":"LastOrDefault<KeyValuePair<TKey, TValue>>()"}]},{"pos":[338518,338559],"content":"LastOrDefault<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"LastOrDefault&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,41],"source":"LastOrDefault<KeyValuePair<TKey, TValue>>"}]},{"pos":[338676,338677],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[338704,338705],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[338792,338839],"content":"LastOrDefault(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"LastOrDefault(Of KeyValuePair(Of TKey, TValue))","pos":[0,47]}]},{"pos":[338962,338963],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[338990,338991],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[339651,339735],"content":"LastOrDefault<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)","needQuote":true,"nodes":[{"content":"LastOrDefault&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Boolean&gt;)","pos":[0,84],"source":"LastOrDefault<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)"}]},{"pos":[340342,340383],"content":"LastOrDefault<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"LastOrDefault&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,41],"source":"LastOrDefault<KeyValuePair<TKey, TValue>>"}]},{"pos":[340500,340501],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[340551,340555],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[340613,340614],"content":"<","needQuote":true,"nodes":[]},{"pos":[340692,340704],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[340790,340791],"content":"<","needQuote":true,"nodes":[]},{"pos":[340818,340822],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[340853,340854]},{"pos":[340886,340892],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[340957,340958]},{"pos":[341014,341021],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[341114,341115],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[341235,341282],"content":"LastOrDefault(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"LastOrDefault(Of KeyValuePair(Of TKey, TValue))","pos":[0,47]}]},{"pos":[341405,341406],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[341456,341460],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[341519,341522]},{"pos":[341607,341619],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[341706,341709]},{"pos":[341743,341747],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[341778,341779]},{"pos":[341811,341817],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[341849,341850],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[341878,341879]},{"pos":[341935,341942],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[342003,342004],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[342031,342032],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[342686,342725],"content":"LongCount<KeyValuePair<TKey, TValue>>()","needQuote":true,"nodes":[{"content":"LongCount&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;()","pos":[0,39],"source":"LongCount<KeyValuePair<TKey, TValue>>()"}]},{"pos":[343066,343103],"content":"LongCount<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"LongCount&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,37],"source":"LongCount<KeyValuePair<TKey, TValue>>"}]},{"pos":[343216,343217],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[343244,343245],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[343328,343371],"content":"LongCount(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"LongCount(Of KeyValuePair(Of TKey, TValue))","pos":[0,43]}]},{"pos":[343490,343491],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[343518,343519],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[344159,344239],"content":"LongCount<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)","needQuote":true,"nodes":[{"content":"LongCount&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Boolean&gt;)","pos":[0,80],"source":"LongCount<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)"}]},{"pos":[344830,344867],"content":"LongCount<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"LongCount&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,37],"source":"LongCount<KeyValuePair<TKey, TValue>>"}]},{"pos":[344980,344981],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[345031,345035],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[345093,345094],"content":"<","needQuote":true,"nodes":[]},{"pos":[345172,345184],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[345270,345271],"content":"<","needQuote":true,"nodes":[]},{"pos":[345298,345302],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[345333,345334]},{"pos":[345366,345372],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[345437,345438]},{"pos":[345494,345501],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[345594,345595],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[345711,345754],"content":"LongCount(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"LongCount(Of KeyValuePair(Of TKey, TValue))","pos":[0,43]}]},{"pos":[345873,345874],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[345924,345928],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[345987,345990]},{"pos":[346075,346087],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[346174,346177]},{"pos":[346211,346215],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[346246,346247]},{"pos":[346279,346285],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[346317,346318],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[346346,346347]},{"pos":[346403,346410],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[346471,346472],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[346499,346500],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[347130,347163],"content":"Max<KeyValuePair<TKey, TValue>>()","needQuote":true,"nodes":[{"content":"Max&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;()","pos":[0,33],"source":"Max<KeyValuePair<TKey, TValue>>()"}]},{"pos":[347480,347511],"content":"Max<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Max&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Max<KeyValuePair<TKey, TValue>>"}]},{"pos":[347618,347619],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[347646,347647],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[347724,347761],"content":"Max(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Max(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[347874,347875],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[347902,347903],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[348513,348587],"content":"Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Decimal>)","needQuote":true,"nodes":[{"content":"Max&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Decimal&gt;)","pos":[0,74],"source":"Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Decimal>)"}]},{"pos":[349154,349185],"content":"Max<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Max&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Max<KeyValuePair<TKey, TValue>>"}]},{"pos":[349292,349293],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[349343,349347],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[349405,349406],"content":"<","needQuote":true,"nodes":[]},{"pos":[349484,349496],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[349582,349583],"content":"<","needQuote":true,"nodes":[]},{"pos":[349610,349614],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[349645,349646]},{"pos":[349678,349684],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[349749,349750]},{"pos":[349806,349813],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[349906,349907],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[350017,350054],"content":"Max(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Max(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[350167,350168],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[350218,350222],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[350281,350284]},{"pos":[350369,350381],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[350468,350471]},{"pos":[350505,350509],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[350540,350541]},{"pos":[350573,350579],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[350611,350612],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[350640,350641]},{"pos":[350697,350704],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[350765,350766],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[350793,350794],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[351522,351595],"content":"Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Double>)","needQuote":true,"nodes":[{"content":"Max&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Double&gt;)","pos":[0,73],"source":"Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Double>)"}]},{"pos":[352158,352189],"content":"Max<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Max&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Max<KeyValuePair<TKey, TValue>>"}]},{"pos":[352296,352297],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[352347,352351],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[352409,352410],"content":"<","needQuote":true,"nodes":[]},{"pos":[352488,352500],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[352586,352587],"content":"<","needQuote":true,"nodes":[]},{"pos":[352614,352618],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[352649,352650]},{"pos":[352682,352688],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[352753,352754]},{"pos":[352809,352815],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[352907,352908],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[353017,353054],"content":"Max(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Max(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[353167,353168],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[353218,353222],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[353281,353284]},{"pos":[353369,353381],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[353468,353471]},{"pos":[353505,353509],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[353540,353541]},{"pos":[353573,353579],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[353611,353612],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[353640,353641]},{"pos":[353696,353702],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[353762,353763],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[353790,353791],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[354514,354586],"content":"Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32>)","needQuote":true,"nodes":[{"content":"Max&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Int32&gt;)","pos":[0,72],"source":"Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32>)"}]},{"pos":[355145,355176],"content":"Max<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Max&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Max<KeyValuePair<TKey, TValue>>"}]},{"pos":[355283,355284],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[355334,355338],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[355396,355397],"content":"<","needQuote":true,"nodes":[]},{"pos":[355475,355487],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[355573,355574],"content":"<","needQuote":true,"nodes":[]},{"pos":[355601,355605],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[355636,355637]},{"pos":[355669,355675],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[355740,355741]},{"pos":[355795,355800],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[355891,355892],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[356000,356037],"content":"Max(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Max(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[356150,356151],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[356201,356205],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[356264,356267]},{"pos":[356352,356364],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[356451,356454]},{"pos":[356488,356492],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[356523,356524]},{"pos":[356556,356562],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[356594,356595],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[356623,356624]},{"pos":[356678,356683],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[356742,356743],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[356770,356771],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[357491,357563],"content":"Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int64>)","needQuote":true,"nodes":[{"content":"Max&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Int64&gt;)","pos":[0,72],"source":"Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int64>)"}]},{"pos":[358122,358153],"content":"Max<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Max&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Max<KeyValuePair<TKey, TValue>>"}]},{"pos":[358260,358261],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[358311,358315],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[358373,358374],"content":"<","needQuote":true,"nodes":[]},{"pos":[358452,358464],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[358550,358551],"content":"<","needQuote":true,"nodes":[]},{"pos":[358578,358582],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[358613,358614]},{"pos":[358646,358652],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[358717,358718]},{"pos":[358772,358777],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[358868,358869],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[358977,359014],"content":"Max(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Max(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[359127,359128],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[359178,359182],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[359241,359244]},{"pos":[359329,359341],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[359428,359431]},{"pos":[359465,359469],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[359500,359501]},{"pos":[359533,359539],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[359571,359572],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[359600,359601]},{"pos":[359655,359660],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[359719,359720],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[359747,359748],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[360506,360590],"content":"Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Decimal>>)","needQuote":true,"nodes":[{"content":"Max&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Nullable&lt;Decimal&gt;&gt;)","pos":[0,84],"source":"Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Decimal>>)"}]},{"pos":[361224,361255],"content":"Max<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Max&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Max<KeyValuePair<TKey, TValue>>"}]},{"pos":[361362,361363],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[361413,361417],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[361475,361476],"content":"<","needQuote":true,"nodes":[]},{"pos":[361554,361566],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[361652,361653],"content":"<","needQuote":true,"nodes":[]},{"pos":[361680,361684],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[361715,361716]},{"pos":[361748,361754],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[361819,361820]},{"pos":[361879,361887],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[361949,361950],"content":"<","needQuote":true,"nodes":[]},{"pos":[362001,362008],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[362133,362134],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[362261,362298],"content":"Max(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Max(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[362411,362412],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[362462,362466],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[362525,362528]},{"pos":[362613,362625],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[362712,362715]},{"pos":[362749,362753],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[362784,362785]},{"pos":[362817,362823],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[362855,362856],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[362884,362885]},{"pos":[362944,362952],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[363015,363018]},{"pos":[363076,363083],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[363144,363145],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[363172,363173],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[363200,363201],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[364003,364086],"content":"Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Double>>)","needQuote":true,"nodes":[{"content":"Max&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Nullable&lt;Double&gt;&gt;)","pos":[0,83],"source":"Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Double>>)"}]},{"pos":[364716,364747],"content":"Max<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Max&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Max<KeyValuePair<TKey, TValue>>"}]},{"pos":[364854,364855],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[364905,364909],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[364967,364968],"content":"<","needQuote":true,"nodes":[]},{"pos":[365046,365058],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[365144,365145],"content":"<","needQuote":true,"nodes":[]},{"pos":[365172,365176],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[365207,365208]},{"pos":[365240,365246],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[365311,365312]},{"pos":[365371,365379],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[365441,365442],"content":"<","needQuote":true,"nodes":[]},{"pos":[365492,365498],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[365622,365623],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[365749,365786],"content":"Max(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Max(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[365899,365900],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[365950,365954],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[366013,366016]},{"pos":[366101,366113],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[366200,366203]},{"pos":[366237,366241],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[366272,366273]},{"pos":[366305,366311],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[366343,366344],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[366372,366373]},{"pos":[366432,366440],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[366503,366506]},{"pos":[366563,366569],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[366629,366630],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[366657,366658],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[366685,366686],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[367483,367565],"content":"Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int32>>)","needQuote":true,"nodes":[{"content":"Max&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Nullable&lt;Int32&gt;&gt;)","pos":[0,82],"source":"Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int32>>)"}]},{"pos":[368191,368222],"content":"Max<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Max&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Max<KeyValuePair<TKey, TValue>>"}]},{"pos":[368329,368330],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[368380,368384],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[368442,368443],"content":"<","needQuote":true,"nodes":[]},{"pos":[368521,368533],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[368619,368620],"content":"<","needQuote":true,"nodes":[]},{"pos":[368647,368651],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[368682,368683]},{"pos":[368715,368721],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[368786,368787]},{"pos":[368846,368854],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[368916,368917],"content":"<","needQuote":true,"nodes":[]},{"pos":[368966,368971],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[369094,369095],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[369220,369257],"content":"Max(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Max(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[369370,369371],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[369421,369425],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[369484,369487]},{"pos":[369572,369584],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[369671,369674]},{"pos":[369708,369712],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[369743,369744]},{"pos":[369776,369782],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[369814,369815],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[369843,369844]},{"pos":[369903,369911],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[369974,369977]},{"pos":[370033,370038],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[370097,370098],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[370125,370126],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[370153,370154],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[370948,371030],"content":"Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int64>>)","needQuote":true,"nodes":[{"content":"Max&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Nullable&lt;Int64&gt;&gt;)","pos":[0,82],"source":"Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int64>>)"}]},{"pos":[371656,371687],"content":"Max<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Max&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Max<KeyValuePair<TKey, TValue>>"}]},{"pos":[371794,371795],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[371845,371849],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[371907,371908],"content":"<","needQuote":true,"nodes":[]},{"pos":[371986,371998],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[372084,372085],"content":"<","needQuote":true,"nodes":[]},{"pos":[372112,372116],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[372147,372148]},{"pos":[372180,372186],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[372251,372252]},{"pos":[372311,372319],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[372381,372382],"content":"<","needQuote":true,"nodes":[]},{"pos":[372431,372436],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[372559,372560],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[372685,372722],"content":"Max(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Max(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[372835,372836],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[372886,372890],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[372949,372952]},{"pos":[373037,373049],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[373136,373139]},{"pos":[373173,373177],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[373208,373209]},{"pos":[373241,373247],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[373279,373280],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[373308,373309]},{"pos":[373368,373376],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[373439,373442]},{"pos":[373498,373503],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[373562,373563],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[373590,373591],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[373618,373619],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[374415,374498],"content":"Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Single>>)","needQuote":true,"nodes":[{"content":"Max&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Nullable&lt;Single&gt;&gt;)","pos":[0,83],"source":"Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Single>>)"}]},{"pos":[375128,375159],"content":"Max<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Max&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Max<KeyValuePair<TKey, TValue>>"}]},{"pos":[375266,375267],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[375317,375321],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[375379,375380],"content":"<","needQuote":true,"nodes":[]},{"pos":[375458,375470],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[375556,375557],"content":"<","needQuote":true,"nodes":[]},{"pos":[375584,375588],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[375619,375620]},{"pos":[375652,375658],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[375723,375724]},{"pos":[375783,375791],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[375853,375854],"content":"<","needQuote":true,"nodes":[]},{"pos":[375904,375910],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[376034,376035],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[376161,376198],"content":"Max(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Max(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[376311,376312],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[376362,376366],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[376425,376428]},{"pos":[376513,376525],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[376612,376615]},{"pos":[376649,376653],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[376684,376685]},{"pos":[376717,376723],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[376755,376756],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[376784,376785]},{"pos":[376844,376852],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[376915,376918]},{"pos":[376975,376981],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[377041,377042],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[377069,377070],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[377097,377098],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[377863,377936],"content":"Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Single>)","needQuote":true,"nodes":[{"content":"Max&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Single&gt;)","pos":[0,73],"source":"Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Single>)"}]},{"pos":[378499,378530],"content":"Max<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Max&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Max<KeyValuePair<TKey, TValue>>"}]},{"pos":[378637,378638],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[378688,378692],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[378750,378751],"content":"<","needQuote":true,"nodes":[]},{"pos":[378829,378841],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[378927,378928],"content":"<","needQuote":true,"nodes":[]},{"pos":[378955,378959],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[378990,378991]},{"pos":[379023,379029],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[379094,379095]},{"pos":[379150,379156],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[379248,379249],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[379358,379395],"content":"Max(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Max(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[379508,379509],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[379559,379563],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[379622,379625]},{"pos":[379710,379722],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[379809,379812]},{"pos":[379846,379850],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[379881,379882]},{"pos":[379914,379920],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[379952,379953],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[379981,379982]},{"pos":[380037,380043],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[380103,380104],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[380131,380132],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[380843,380926],"content":"Max<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, TResult>)","needQuote":true,"nodes":[{"content":"Max&lt;KeyValuePair&lt;TKey, TValue&gt;, TResult&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TResult&gt;)","pos":[0,83],"source":"Max<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, TResult>)"}]},{"pos":[381495,381535],"content":"Max<KeyValuePair<TKey, TValue>, TResult>","needQuote":true,"nodes":[{"content":"Max&lt;KeyValuePair&lt;TKey, TValue&gt;, TResult&gt;","pos":[0,40],"source":"Max<KeyValuePair<TKey, TValue>, TResult>"}]},{"pos":[381651,381652],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[381702,381706],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[381764,381765],"content":"<","needQuote":true,"nodes":[]},{"pos":[381843,381855],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[381941,381942],"content":"<","needQuote":true,"nodes":[]},{"pos":[381969,381973],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[382004,382005]},{"pos":[382037,382043],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[382108,382109]},{"pos":[382141,382148],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[382213,382214],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[382313,382359],"content":"Max(Of KeyValuePair(Of TKey, TValue), TResult)","needQuote":true,"nodes":[{"content":"Max(Of KeyValuePair(Of TKey, TValue), TResult)","pos":[0,46]}]},{"pos":[382481,382482],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[382532,382536],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[382595,382598]},{"pos":[382683,382695],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[382782,382785]},{"pos":[382819,382823],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[382854,382855]},{"pos":[382887,382893],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[382925,382926],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[382954,382955]},{"pos":[382987,382994],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[383027,383028],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[383055,383056],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[383675,383708],"content":"Min<KeyValuePair<TKey, TValue>>()","needQuote":true,"nodes":[{"content":"Min&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;()","pos":[0,33],"source":"Min<KeyValuePair<TKey, TValue>>()"}]},{"pos":[384025,384056],"content":"Min<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Min&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Min<KeyValuePair<TKey, TValue>>"}]},{"pos":[384163,384164],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[384191,384192],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[384269,384306],"content":"Min(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Min(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[384419,384420],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[384447,384448],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[385058,385132],"content":"Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Decimal>)","needQuote":true,"nodes":[{"content":"Min&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Decimal&gt;)","pos":[0,74],"source":"Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Decimal>)"}]},{"pos":[385699,385730],"content":"Min<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Min&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Min<KeyValuePair<TKey, TValue>>"}]},{"pos":[385837,385838],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[385888,385892],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[385950,385951],"content":"<","needQuote":true,"nodes":[]},{"pos":[386029,386041],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[386127,386128],"content":"<","needQuote":true,"nodes":[]},{"pos":[386155,386159],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[386190,386191]},{"pos":[386223,386229],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[386294,386295]},{"pos":[386351,386358],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[386451,386452],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[386562,386599],"content":"Min(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Min(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[386712,386713],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[386763,386767],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[386826,386829]},{"pos":[386914,386926],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[387013,387016]},{"pos":[387050,387054],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[387085,387086]},{"pos":[387118,387124],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[387156,387157],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[387185,387186]},{"pos":[387242,387249],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[387310,387311],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[387338,387339],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[388067,388140],"content":"Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Double>)","needQuote":true,"nodes":[{"content":"Min&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Double&gt;)","pos":[0,73],"source":"Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Double>)"}]},{"pos":[388703,388734],"content":"Min<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Min&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Min<KeyValuePair<TKey, TValue>>"}]},{"pos":[388841,388842],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[388892,388896],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[388954,388955],"content":"<","needQuote":true,"nodes":[]},{"pos":[389033,389045],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[389131,389132],"content":"<","needQuote":true,"nodes":[]},{"pos":[389159,389163],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[389194,389195]},{"pos":[389227,389233],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[389298,389299]},{"pos":[389354,389360],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[389452,389453],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[389562,389599],"content":"Min(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Min(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[389712,389713],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[389763,389767],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[389826,389829]},{"pos":[389914,389926],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[390013,390016]},{"pos":[390050,390054],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[390085,390086]},{"pos":[390118,390124],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[390156,390157],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[390185,390186]},{"pos":[390241,390247],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[390307,390308],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[390335,390336],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[391059,391131],"content":"Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32>)","needQuote":true,"nodes":[{"content":"Min&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Int32&gt;)","pos":[0,72],"source":"Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32>)"}]},{"pos":[391690,391721],"content":"Min<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Min&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Min<KeyValuePair<TKey, TValue>>"}]},{"pos":[391828,391829],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[391879,391883],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[391941,391942],"content":"<","needQuote":true,"nodes":[]},{"pos":[392020,392032],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[392118,392119],"content":"<","needQuote":true,"nodes":[]},{"pos":[392146,392150],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[392181,392182]},{"pos":[392214,392220],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[392285,392286]},{"pos":[392340,392345],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[392436,392437],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[392545,392582],"content":"Min(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Min(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[392695,392696],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[392746,392750],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[392809,392812]},{"pos":[392897,392909],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[392996,392999]},{"pos":[393033,393037],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[393068,393069]},{"pos":[393101,393107],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[393139,393140],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[393168,393169]},{"pos":[393223,393228],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[393287,393288],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[393315,393316],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[394036,394108],"content":"Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int64>)","needQuote":true,"nodes":[{"content":"Min&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Int64&gt;)","pos":[0,72],"source":"Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int64>)"}]},{"pos":[394667,394698],"content":"Min<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Min&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Min<KeyValuePair<TKey, TValue>>"}]},{"pos":[394805,394806],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[394856,394860],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[394918,394919],"content":"<","needQuote":true,"nodes":[]},{"pos":[394997,395009],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[395095,395096],"content":"<","needQuote":true,"nodes":[]},{"pos":[395123,395127],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[395158,395159]},{"pos":[395191,395197],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[395262,395263]},{"pos":[395317,395322],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[395413,395414],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[395522,395559],"content":"Min(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Min(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[395672,395673],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[395723,395727],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[395786,395789]},{"pos":[395874,395886],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[395973,395976]},{"pos":[396010,396014],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[396045,396046]},{"pos":[396078,396084],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[396116,396117],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[396145,396146]},{"pos":[396200,396205],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[396264,396265],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[396292,396293],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[397051,397135],"content":"Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Decimal>>)","needQuote":true,"nodes":[{"content":"Min&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Nullable&lt;Decimal&gt;&gt;)","pos":[0,84],"source":"Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Decimal>>)"}]},{"pos":[397769,397800],"content":"Min<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Min&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Min<KeyValuePair<TKey, TValue>>"}]},{"pos":[397907,397908],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[397958,397962],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[398020,398021],"content":"<","needQuote":true,"nodes":[]},{"pos":[398099,398111],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[398197,398198],"content":"<","needQuote":true,"nodes":[]},{"pos":[398225,398229],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[398260,398261]},{"pos":[398293,398299],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[398364,398365]},{"pos":[398424,398432],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[398494,398495],"content":"<","needQuote":true,"nodes":[]},{"pos":[398546,398553],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[398678,398679],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[398806,398843],"content":"Min(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Min(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[398956,398957],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[399007,399011],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[399070,399073]},{"pos":[399158,399170],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[399257,399260]},{"pos":[399294,399298],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[399329,399330]},{"pos":[399362,399368],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[399400,399401],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[399429,399430]},{"pos":[399489,399497],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[399560,399563]},{"pos":[399621,399628],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[399689,399690],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[399717,399718],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[399745,399746],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[400548,400631],"content":"Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Double>>)","needQuote":true,"nodes":[{"content":"Min&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Nullable&lt;Double&gt;&gt;)","pos":[0,83],"source":"Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Double>>)"}]},{"pos":[401261,401292],"content":"Min<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Min&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Min<KeyValuePair<TKey, TValue>>"}]},{"pos":[401399,401400],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[401450,401454],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[401512,401513],"content":"<","needQuote":true,"nodes":[]},{"pos":[401591,401603],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[401689,401690],"content":"<","needQuote":true,"nodes":[]},{"pos":[401717,401721],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[401752,401753]},{"pos":[401785,401791],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[401856,401857]},{"pos":[401916,401924],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[401986,401987],"content":"<","needQuote":true,"nodes":[]},{"pos":[402037,402043],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[402167,402168],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[402294,402331],"content":"Min(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Min(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[402444,402445],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[402495,402499],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[402558,402561]},{"pos":[402646,402658],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[402745,402748]},{"pos":[402782,402786],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[402817,402818]},{"pos":[402850,402856],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[402888,402889],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[402917,402918]},{"pos":[402977,402985],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[403048,403051]},{"pos":[403108,403114],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[403174,403175],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[403202,403203],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[403230,403231],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[404028,404110],"content":"Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int32>>)","needQuote":true,"nodes":[{"content":"Min&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Nullable&lt;Int32&gt;&gt;)","pos":[0,82],"source":"Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int32>>)"}]},{"pos":[404736,404767],"content":"Min<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Min&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Min<KeyValuePair<TKey, TValue>>"}]},{"pos":[404874,404875],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[404925,404929],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[404987,404988],"content":"<","needQuote":true,"nodes":[]},{"pos":[405066,405078],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[405164,405165],"content":"<","needQuote":true,"nodes":[]},{"pos":[405192,405196],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[405227,405228]},{"pos":[405260,405266],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[405331,405332]},{"pos":[405391,405399],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[405461,405462],"content":"<","needQuote":true,"nodes":[]},{"pos":[405511,405516],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[405639,405640],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[405765,405802],"content":"Min(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Min(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[405915,405916],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[405966,405970],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[406029,406032]},{"pos":[406117,406129],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[406216,406219]},{"pos":[406253,406257],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[406288,406289]},{"pos":[406321,406327],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[406359,406360],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[406388,406389]},{"pos":[406448,406456],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[406519,406522]},{"pos":[406578,406583],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[406642,406643],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[406670,406671],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[406698,406699],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[407493,407575],"content":"Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int64>>)","needQuote":true,"nodes":[{"content":"Min&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Nullable&lt;Int64&gt;&gt;)","pos":[0,82],"source":"Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int64>>)"}]},{"pos":[408201,408232],"content":"Min<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Min&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Min<KeyValuePair<TKey, TValue>>"}]},{"pos":[408339,408340],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[408390,408394],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[408452,408453],"content":"<","needQuote":true,"nodes":[]},{"pos":[408531,408543],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[408629,408630],"content":"<","needQuote":true,"nodes":[]},{"pos":[408657,408661],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[408692,408693]},{"pos":[408725,408731],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[408796,408797]},{"pos":[408856,408864],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[408926,408927],"content":"<","needQuote":true,"nodes":[]},{"pos":[408976,408981],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[409104,409105],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[409230,409267],"content":"Min(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Min(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[409380,409381],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[409431,409435],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[409494,409497]},{"pos":[409582,409594],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[409681,409684]},{"pos":[409718,409722],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[409753,409754]},{"pos":[409786,409792],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[409824,409825],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[409853,409854]},{"pos":[409913,409921],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[409984,409987]},{"pos":[410043,410048],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[410107,410108],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[410135,410136],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[410163,410164],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[410960,411043],"content":"Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Single>>)","needQuote":true,"nodes":[{"content":"Min&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Nullable&lt;Single&gt;&gt;)","pos":[0,83],"source":"Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Single>>)"}]},{"pos":[411673,411704],"content":"Min<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Min&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Min<KeyValuePair<TKey, TValue>>"}]},{"pos":[411811,411812],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[411862,411866],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[411924,411925],"content":"<","needQuote":true,"nodes":[]},{"pos":[412003,412015],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[412101,412102],"content":"<","needQuote":true,"nodes":[]},{"pos":[412129,412133],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[412164,412165]},{"pos":[412197,412203],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[412268,412269]},{"pos":[412328,412336],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[412398,412399],"content":"<","needQuote":true,"nodes":[]},{"pos":[412449,412455],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[412579,412580],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[412706,412743],"content":"Min(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Min(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[412856,412857],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[412907,412911],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[412970,412973]},{"pos":[413058,413070],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[413157,413160]},{"pos":[413194,413198],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[413229,413230]},{"pos":[413262,413268],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[413300,413301],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[413329,413330]},{"pos":[413389,413397],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[413460,413463]},{"pos":[413520,413526],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[413586,413587],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[413614,413615],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[413642,413643],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[414408,414481],"content":"Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Single>)","needQuote":true,"nodes":[{"content":"Min&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Single&gt;)","pos":[0,73],"source":"Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Single>)"}]},{"pos":[415044,415075],"content":"Min<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Min&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Min<KeyValuePair<TKey, TValue>>"}]},{"pos":[415182,415183],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[415233,415237],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[415295,415296],"content":"<","needQuote":true,"nodes":[]},{"pos":[415374,415386],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[415472,415473],"content":"<","needQuote":true,"nodes":[]},{"pos":[415500,415504],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[415535,415536]},{"pos":[415568,415574],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[415639,415640]},{"pos":[415695,415701],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[415793,415794],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[415903,415940],"content":"Min(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Min(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[416053,416054],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[416104,416108],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[416167,416170]},{"pos":[416255,416267],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[416354,416357]},{"pos":[416391,416395],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[416426,416427]},{"pos":[416459,416465],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[416497,416498],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[416526,416527]},{"pos":[416582,416588],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[416648,416649],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[416676,416677],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[417388,417471],"content":"Min<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, TResult>)","needQuote":true,"nodes":[{"content":"Min&lt;KeyValuePair&lt;TKey, TValue&gt;, TResult&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TResult&gt;)","pos":[0,83],"source":"Min<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, TResult>)"}]},{"pos":[418040,418080],"content":"Min<KeyValuePair<TKey, TValue>, TResult>","needQuote":true,"nodes":[{"content":"Min&lt;KeyValuePair&lt;TKey, TValue&gt;, TResult&gt;","pos":[0,40],"source":"Min<KeyValuePair<TKey, TValue>, TResult>"}]},{"pos":[418196,418197],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[418247,418251],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[418309,418310],"content":"<","needQuote":true,"nodes":[]},{"pos":[418388,418400],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[418486,418487],"content":"<","needQuote":true,"nodes":[]},{"pos":[418514,418518],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[418549,418550]},{"pos":[418582,418588],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[418653,418654]},{"pos":[418686,418693],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[418758,418759],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[418858,418904],"content":"Min(Of KeyValuePair(Of TKey, TValue), TResult)","needQuote":true,"nodes":[{"content":"Min(Of KeyValuePair(Of TKey, TValue), TResult)","pos":[0,46]}]},{"pos":[419026,419027],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[419077,419081],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[419140,419143]},{"pos":[419228,419240],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[419327,419330]},{"pos":[419364,419368],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[419399,419400]},{"pos":[419432,419438],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[419470,419471],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[419499,419500]},{"pos":[419532,419539],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[419572,419573],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[419600,419601],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[420157,420174],"content":"OfType<TResult>()","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;()","pos":[0,17],"source":"OfType<TResult>()"}]},{"pos":[420386,420401],"content":"OfType<TResult>","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;","pos":[0,15],"source":"OfType<TResult>"}]},{"pos":[420465,420466],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[420493,420494],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[420574,420592],"content":"OfType(Of TResult)","needQuote":true,"nodes":[{"content":"OfType(Of TResult)","pos":[0,18]}]},{"pos":[420659,420660],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[420687,420688],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[421242,421323],"content":"OrderBy<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>)","needQuote":true,"nodes":[{"content":"OrderBy&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;)","pos":[0,81],"source":"OrderBy<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>)"}]},{"pos":[421890,421931],"content":"OrderBy<KeyValuePair<TKey, TValue>, TKey>","needQuote":true,"nodes":[{"content":"OrderBy&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;","pos":[0,41],"source":"OrderBy<KeyValuePair<TKey, TValue>, TKey>"}]},{"pos":[422048,422049],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[422099,422103],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[422161,422162],"content":"<","needQuote":true,"nodes":[]},{"pos":[422240,422252],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[422338,422339],"content":"<","needQuote":true,"nodes":[]},{"pos":[422366,422370],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[422401,422402]},{"pos":[422434,422440],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[422505,422506]},{"pos":[422538,422542],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[422604,422605],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[422708,422755],"content":"OrderBy(Of KeyValuePair(Of TKey, TValue), TKey)","needQuote":true,"nodes":[{"content":"OrderBy(Of KeyValuePair(Of TKey, TValue), TKey)","pos":[0,47]}]},{"pos":[422878,422879],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[422929,422933],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[422992,422995]},{"pos":[423080,423092],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[423179,423182]},{"pos":[423216,423220],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[423251,423252]},{"pos":[423284,423290],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[423322,423323],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[423351,423352]},{"pos":[423384,423388],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[423418,423419],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[423446,423447],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[424260,424358],"content":"OrderBy<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>, IComparer<TKey>)","needQuote":true,"nodes":[{"content":"OrderBy&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;, IComparer&lt;TKey&gt;)","pos":[0,98],"source":"OrderBy<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>, IComparer<TKey>)"}]},{"pos":[425078,425119],"content":"OrderBy<KeyValuePair<TKey, TValue>, TKey>","needQuote":true,"nodes":[{"content":"OrderBy&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;","pos":[0,41],"source":"OrderBy<KeyValuePair<TKey, TValue>, TKey>"}]},{"pos":[425236,425237],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[425287,425291],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[425349,425350],"content":"<","needQuote":true,"nodes":[]},{"pos":[425428,425440],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[425526,425527],"content":"<","needQuote":true,"nodes":[]},{"pos":[425554,425558],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[425589,425590]},{"pos":[425622,425628],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[425693,425694]},{"pos":[425726,425730],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[425793,425794]},{"pos":[425874,425883],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"pos":[425966,425967],"content":"<","needQuote":true,"nodes":[]},{"pos":[425994,425998],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[426060,426061],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[426206,426253],"content":"OrderBy(Of KeyValuePair(Of TKey, TValue), TKey)","needQuote":true,"nodes":[{"content":"OrderBy(Of KeyValuePair(Of TKey, TValue), TKey)","pos":[0,47]}]},{"pos":[426376,426377],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[426427,426431],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[426490,426493]},{"pos":[426578,426590],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[426677,426680]},{"pos":[426714,426718],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[426749,426750]},{"pos":[426782,426788],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[426820,426821],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[426849,426850]},{"pos":[426882,426886],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[426916,426917],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[426945,426946]},{"pos":[427026,427035],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"content":"(Of","pos":[427119,427122]},{"pos":[427156,427160],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[427190,427191],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[427218,427219],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[428044,428135],"content":"OrderByDescending<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>)","needQuote":true,"nodes":[{"content":"OrderByDescending&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;)","pos":[0,91],"source":"OrderByDescending<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>)"}]},{"pos":[428742,428793],"content":"OrderByDescending<KeyValuePair<TKey, TValue>, TKey>","needQuote":true,"nodes":[{"content":"OrderByDescending&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;","pos":[0,51],"source":"OrderByDescending<KeyValuePair<TKey, TValue>, TKey>"}]},{"pos":[428920,428921],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[428971,428975],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[429033,429034],"content":"<","needQuote":true,"nodes":[]},{"pos":[429112,429124],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[429210,429211],"content":"<","needQuote":true,"nodes":[]},{"pos":[429238,429242],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[429273,429274]},{"pos":[429306,429312],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[429377,429378]},{"pos":[429410,429414],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[429476,429477],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[429590,429647],"content":"OrderByDescending(Of KeyValuePair(Of TKey, TValue), TKey)","needQuote":true,"nodes":[{"content":"OrderByDescending(Of KeyValuePair(Of TKey, TValue), TKey)","pos":[0,57]}]},{"pos":[429780,429781],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[429831,429835],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[429894,429897]},{"pos":[429982,429994],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[430081,430084]},{"pos":[430118,430122],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[430153,430154]},{"pos":[430186,430192],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[430224,430225],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[430253,430254]},{"pos":[430286,430290],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[430320,430321],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[430348,430349],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[431212,431320],"content":"OrderByDescending<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>, IComparer<TKey>)","needQuote":true,"nodes":[{"content":"OrderByDescending&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;, IComparer&lt;TKey&gt;)","pos":[0,108],"source":"OrderByDescending<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>, IComparer<TKey>)"}]},{"pos":[432080,432131],"content":"OrderByDescending<KeyValuePair<TKey, TValue>, TKey>","needQuote":true,"nodes":[{"content":"OrderByDescending&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;","pos":[0,51],"source":"OrderByDescending<KeyValuePair<TKey, TValue>, TKey>"}]},{"pos":[432258,432259],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[432309,432313],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[432371,432372],"content":"<","needQuote":true,"nodes":[]},{"pos":[432450,432462],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[432548,432549],"content":"<","needQuote":true,"nodes":[]},{"pos":[432576,432580],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[432611,432612]},{"pos":[432644,432650],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[432715,432716]},{"pos":[432748,432752],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[432815,432816]},{"pos":[432896,432905],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"pos":[432988,432989],"content":"<","needQuote":true,"nodes":[]},{"pos":[433016,433020],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[433082,433083],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[433238,433295],"content":"OrderByDescending(Of KeyValuePair(Of TKey, TValue), TKey)","needQuote":true,"nodes":[{"content":"OrderByDescending(Of KeyValuePair(Of TKey, TValue), TKey)","pos":[0,57]}]},{"pos":[433428,433429],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[433479,433483],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[433542,433545]},{"pos":[433630,433642],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[433729,433732]},{"pos":[433766,433770],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[433801,433802]},{"pos":[433834,433840],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[433872,433873],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[433901,433902]},{"pos":[433934,433938],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[433968,433969],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[433997,433998]},{"pos":[434078,434087],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"content":"(Of","pos":[434171,434174]},{"pos":[434208,434212],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[434242,434243],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[434270,434271],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[435007,435044],"content":"Reverse<KeyValuePair<TKey, TValue>>()","needQuote":true,"nodes":[{"content":"Reverse&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;()","pos":[0,37],"source":"Reverse<KeyValuePair<TKey, TValue>>()"}]},{"pos":[435377,435412],"content":"Reverse<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Reverse&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,35],"source":"Reverse<KeyValuePair<TKey, TValue>>"}]},{"pos":[435523,435524],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[435551,435552],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[435633,435674],"content":"Reverse(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Reverse(Of KeyValuePair(Of TKey, TValue))","pos":[0,41]}]},{"pos":[435791,435792],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[435819,435820],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[436432,436518],"content":"Select<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, TResult>)","needQuote":true,"nodes":[{"content":"Select&lt;KeyValuePair&lt;TKey, TValue&gt;, TResult&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TResult&gt;)","pos":[0,86],"source":"Select<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, TResult>)"}]},{"pos":[437099,437142],"content":"Select<KeyValuePair<TKey, TValue>, TResult>","needQuote":true,"nodes":[{"content":"Select&lt;KeyValuePair&lt;TKey, TValue&gt;, TResult&gt;","pos":[0,43],"source":"Select<KeyValuePair<TKey, TValue>, TResult>"}]},{"pos":[437261,437262],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[437312,437316],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[437374,437375],"content":"<","needQuote":true,"nodes":[]},{"pos":[437453,437465],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[437551,437552],"content":"<","needQuote":true,"nodes":[]},{"pos":[437579,437583],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[437614,437615]},{"pos":[437647,437653],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[437718,437719]},{"pos":[437751,437758],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[437823,437824],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[437926,437975],"content":"Select(Of KeyValuePair(Of TKey, TValue), TResult)","needQuote":true,"nodes":[{"content":"Select(Of KeyValuePair(Of TKey, TValue), TResult)","pos":[0,49]}]},{"pos":[438100,438101],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[438151,438155],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[438214,438217]},{"pos":[438302,438314],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[438401,438404]},{"pos":[438438,438442],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[438473,438474]},{"pos":[438506,438512],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[438544,438545],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[438573,438574]},{"pos":[438606,438613],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[438646,438647],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[438674,438675],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[439437,439530],"content":"Select<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, Int32, TResult>)","needQuote":true,"nodes":[{"content":"Select&lt;KeyValuePair&lt;TKey, TValue&gt;, TResult&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Int32, TResult&gt;)","pos":[0,93],"source":"Select<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, Int32, TResult>)"}]},{"pos":[440159,440202],"content":"Select<KeyValuePair<TKey, TValue>, TResult>","needQuote":true,"nodes":[{"content":"Select&lt;KeyValuePair&lt;TKey, TValue&gt;, TResult&gt;","pos":[0,43],"source":"Select<KeyValuePair<TKey, TValue>, TResult>"}]},{"pos":[440321,440322],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[440372,440376],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[440434,440435],"content":"<","needQuote":true,"nodes":[]},{"pos":[440513,440525],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[440611,440612],"content":"<","needQuote":true,"nodes":[]},{"pos":[440639,440643],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[440674,440675]},{"pos":[440707,440713],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[440778,440779]},{"pos":[440833,440838],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[440898,440899]},{"pos":[440931,440938],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[441003,441004],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[441119,441168],"content":"Select(Of KeyValuePair(Of TKey, TValue), TResult)","needQuote":true,"nodes":[{"content":"Select(Of KeyValuePair(Of TKey, TValue), TResult)","pos":[0,49]}]},{"pos":[441293,441294],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[441344,441348],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[441407,441410]},{"pos":[441495,441507],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[441594,441597]},{"pos":[441631,441635],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[441666,441667]},{"pos":[441699,441705],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[441737,441738],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[441766,441767]},{"pos":[441821,441826],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[441886,441887]},{"pos":[441919,441926],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[441959,441960],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[441987,441988],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[442839,442942],"content":"SelectMany<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, IEnumerable<TResult>>)","needQuote":true,"nodes":[{"content":"SelectMany&lt;KeyValuePair&lt;TKey, TValue&gt;, TResult&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, IEnumerable&lt;TResult&gt;&gt;)","pos":[0,103],"source":"SelectMany<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, IEnumerable<TResult>>)"}]},{"pos":[443678,443725],"content":"SelectMany<KeyValuePair<TKey, TValue>, TResult>","needQuote":true,"nodes":[{"content":"SelectMany&lt;KeyValuePair&lt;TKey, TValue&gt;, TResult&gt;","pos":[0,47],"source":"SelectMany<KeyValuePair<TKey, TValue>, TResult>"}]},{"pos":[443848,443849],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[443899,443903],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[443961,443962],"content":"<","needQuote":true,"nodes":[]},{"pos":[444040,444052],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[444138,444139],"content":"<","needQuote":true,"nodes":[]},{"pos":[444166,444170],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[444201,444202]},{"pos":[444234,444240],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[444305,444306]},{"pos":[444388,444399],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[444484,444485],"content":"<","needQuote":true,"nodes":[]},{"pos":[444512,444519],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[444616,444617],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[444763,444816],"content":"SelectMany(Of KeyValuePair(Of TKey, TValue), TResult)","needQuote":true,"nodes":[{"content":"SelectMany(Of KeyValuePair(Of TKey, TValue), TResult)","pos":[0,53]}]},{"pos":[444945,444946],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[444996,445000],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[445059,445062]},{"pos":[445147,445159],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[445246,445249]},{"pos":[445283,445287],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[445318,445319]},{"pos":[445351,445357],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[445389,445390],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[445418,445419]},{"pos":[445501,445512],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[445598,445601]},{"pos":[445635,445642],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[445675,445676],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[445703,445704],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[445731,445732],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[446663,446773],"content":"SelectMany<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, Int32, IEnumerable<TResult>>)","needQuote":true,"nodes":[{"content":"SelectMany&lt;KeyValuePair&lt;TKey, TValue&gt;, TResult&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Int32, IEnumerable&lt;TResult&gt;&gt;)","pos":[0,110],"source":"SelectMany<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, Int32, IEnumerable<TResult>>)"}]},{"pos":[447557,447604],"content":"SelectMany<KeyValuePair<TKey, TValue>, TResult>","needQuote":true,"nodes":[{"content":"SelectMany&lt;KeyValuePair&lt;TKey, TValue&gt;, TResult&gt;","pos":[0,47],"source":"SelectMany<KeyValuePair<TKey, TValue>, TResult>"}]},{"pos":[447727,447728],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[447778,447782],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[447840,447841],"content":"<","needQuote":true,"nodes":[]},{"pos":[447919,447931],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[448017,448018],"content":"<","needQuote":true,"nodes":[]},{"pos":[448045,448049],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[448080,448081]},{"pos":[448113,448119],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[448184,448185]},{"pos":[448239,448244],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[448304,448305]},{"pos":[448387,448398],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[448483,448484],"content":"<","needQuote":true,"nodes":[]},{"pos":[448511,448518],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[448615,448616],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[448775,448828],"content":"SelectMany(Of KeyValuePair(Of TKey, TValue), TResult)","needQuote":true,"nodes":[{"content":"SelectMany(Of KeyValuePair(Of TKey, TValue), TResult)","pos":[0,53]}]},{"pos":[448957,448958],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[449008,449012],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[449071,449074]},{"pos":[449159,449171],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[449258,449261]},{"pos":[449295,449299],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[449330,449331]},{"pos":[449363,449369],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[449401,449402],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[449430,449431]},{"pos":[449485,449490],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[449550,449551]},{"pos":[449633,449644],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[449730,449733]},{"pos":[449767,449774],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[449807,449808],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[449835,449836],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[449863,449864],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[450919,451095],"content":"SelectMany<KeyValuePair<TKey, TValue>, TCollection, TResult>(Func<KeyValuePair<TKey, TValue>, IEnumerable<TCollection>>, Func<KeyValuePair<TKey, TValue>, TCollection, TResult>)","needQuote":true,"nodes":[{"content":"SelectMany&lt;KeyValuePair&lt;TKey, TValue&gt;, TCollection, TResult&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, IEnumerable&lt;TCollection&gt;&gt;, Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TCollection, TResult&gt;)","pos":[0,176],"source":"SelectMany<KeyValuePair<TKey, TValue>, TCollection, TResult>(Func<KeyValuePair<TKey, TValue>, IEnumerable<TCollection>>, Func<KeyValuePair<TKey, TValue>, TCollection, TResult>)"}]},{"pos":[452155,452215],"content":"SelectMany<KeyValuePair<TKey, TValue>, TCollection, TResult>","needQuote":true,"nodes":[{"content":"SelectMany&lt;KeyValuePair&lt;TKey, TValue&gt;, TCollection, TResult&gt;","pos":[0,60],"source":"SelectMany<KeyValuePair<TKey, TValue>, TCollection, TResult>"}]},{"pos":[452351,452352],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[452402,452406],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[452464,452465],"content":"<","needQuote":true,"nodes":[]},{"pos":[452543,452555],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[452641,452642],"content":"<","needQuote":true,"nodes":[]},{"pos":[452669,452673],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[452704,452705]},{"pos":[452737,452743],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[452808,452809]},{"pos":[452891,452902],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[452987,452988],"content":"<","needQuote":true,"nodes":[]},{"pos":[453015,453026],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[453128,453129]},{"pos":[453184,453188],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[453246,453247],"content":"<","needQuote":true,"nodes":[]},{"pos":[453325,453337],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[453423,453424],"content":"<","needQuote":true,"nodes":[]},{"pos":[453451,453455],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[453486,453487]},{"pos":[453519,453525],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[453590,453591]},{"pos":[453623,453634],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[453672,453673]},{"pos":[453705,453712],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[453777,453778],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[453949,454015],"content":"SelectMany(Of KeyValuePair(Of TKey, TValue), TCollection, TResult)","needQuote":true,"nodes":[{"content":"SelectMany(Of KeyValuePair(Of TKey, TValue), TCollection, TResult)","pos":[0,66]}]},{"pos":[454157,454158],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[454208,454212],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[454271,454274]},{"pos":[454359,454371],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[454458,454461]},{"pos":[454495,454499],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[454530,454531]},{"pos":[454563,454569],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[454601,454602],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[454630,454631]},{"pos":[454713,454724],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[454810,454813]},{"pos":[454847,454858],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"pos":[454895,454896],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[454923,454924],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[454952,454953]},{"pos":[455008,455012],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[455071,455074]},{"pos":[455159,455171],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[455258,455261]},{"pos":[455295,455299],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[455330,455331]},{"pos":[455363,455369],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[455401,455402],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[455430,455431]},{"pos":[455463,455474],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[455512,455513]},{"pos":[455545,455552],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[455585,455586],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[455613,455614],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[456845,457028],"content":"SelectMany<KeyValuePair<TKey, TValue>, TCollection, TResult>(Func<KeyValuePair<TKey, TValue>, Int32, IEnumerable<TCollection>>, Func<KeyValuePair<TKey, TValue>, TCollection, TResult>)","needQuote":true,"nodes":[{"content":"SelectMany&lt;KeyValuePair&lt;TKey, TValue&gt;, TCollection, TResult&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Int32, IEnumerable&lt;TCollection&gt;&gt;, Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TCollection, TResult&gt;)","pos":[0,183],"source":"SelectMany<KeyValuePair<TKey, TValue>, TCollection, TResult>(Func<KeyValuePair<TKey, TValue>, Int32, IEnumerable<TCollection>>, Func<KeyValuePair<TKey, TValue>, TCollection, TResult>)"}]},{"pos":[458136,458196],"content":"SelectMany<KeyValuePair<TKey, TValue>, TCollection, TResult>","needQuote":true,"nodes":[{"content":"SelectMany&lt;KeyValuePair&lt;TKey, TValue&gt;, TCollection, TResult&gt;","pos":[0,60],"source":"SelectMany<KeyValuePair<TKey, TValue>, TCollection, TResult>"}]},{"pos":[458332,458333],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[458383,458387],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[458445,458446],"content":"<","needQuote":true,"nodes":[]},{"pos":[458524,458536],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[458622,458623],"content":"<","needQuote":true,"nodes":[]},{"pos":[458650,458654],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[458685,458686]},{"pos":[458718,458724],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[458789,458790]},{"pos":[458844,458849],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[458909,458910]},{"pos":[458992,459003],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[459088,459089],"content":"<","needQuote":true,"nodes":[]},{"pos":[459116,459127],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[459229,459230]},{"pos":[459285,459289],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[459347,459348],"content":"<","needQuote":true,"nodes":[]},{"pos":[459426,459438],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[459524,459525],"content":"<","needQuote":true,"nodes":[]},{"pos":[459552,459556],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[459587,459588]},{"pos":[459620,459626],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[459691,459692]},{"pos":[459724,459735],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[459773,459774]},{"pos":[459806,459813],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[459878,459879],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[460063,460129],"content":"SelectMany(Of KeyValuePair(Of TKey, TValue), TCollection, TResult)","needQuote":true,"nodes":[{"content":"SelectMany(Of KeyValuePair(Of TKey, TValue), TCollection, TResult)","pos":[0,66]}]},{"pos":[460271,460272],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[460322,460326],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[460385,460388]},{"pos":[460473,460485],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[460572,460575]},{"pos":[460609,460613],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[460644,460645]},{"pos":[460677,460683],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[460715,460716],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[460744,460745]},{"pos":[460799,460804],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[460864,460865]},{"pos":[460947,460958],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[461044,461047]},{"pos":[461081,461092],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"pos":[461129,461130],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[461157,461158],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[461186,461187]},{"pos":[461242,461246],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[461305,461308]},{"pos":[461393,461405],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[461492,461495]},{"pos":[461529,461533],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[461564,461565]},{"pos":[461597,461603],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[461635,461636],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[461664,461665]},{"pos":[461697,461708],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[461746,461747]},{"pos":[461779,461786],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[461819,461820],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[461847,461848],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[462923,463005],"content":"SequenceEqual<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>)","needQuote":true,"nodes":[{"content":"SequenceEqual&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(IEnumerable&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;)","pos":[0,82],"source":"SequenceEqual<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>)"}]},{"pos":[463644,463685],"content":"SequenceEqual<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"SequenceEqual&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,41],"source":"SequenceEqual<KeyValuePair<TKey, TValue>>"}]},{"pos":[463802,463803],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[463880,463891],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[463976,463977],"content":"<","needQuote":true,"nodes":[]},{"pos":[464055,464067],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[464153,464154],"content":"<","needQuote":true,"nodes":[]},{"pos":[464181,464185],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[464216,464217]},{"pos":[464249,464255],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[464351,464352],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[464484,464531],"content":"SequenceEqual(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"SequenceEqual(Of KeyValuePair(Of TKey, TValue))","pos":[0,47]}]},{"pos":[464654,464655],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[464732,464743],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[464829,464832]},{"pos":[464917,464929],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[465016,465019]},{"pos":[465053,465057],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[465088,465089]},{"pos":[465121,465127],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[465159,465160],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[465187,465188],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[465215,465216],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[466181,466310],"content":"SequenceEqual<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>, IEqualityComparer<KeyValuePair<TKey, TValue>>)","needQuote":true,"nodes":[{"content":"SequenceEqual&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(IEnumerable&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;, IEqualityComparer&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;)","pos":[0,129],"source":"SequenceEqual<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>, IEqualityComparer<KeyValuePair<TKey, TValue>>)"}]},{"pos":[467260,467301],"content":"SequenceEqual<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"SequenceEqual&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,41],"source":"SequenceEqual<KeyValuePair<TKey, TValue>>"}]},{"pos":[467418,467419],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[467496,467507],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[467592,467593],"content":"<","needQuote":true,"nodes":[]},{"pos":[467671,467683],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[467769,467770],"content":"<","needQuote":true,"nodes":[]},{"pos":[467797,467801],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[467832,467833]},{"pos":[467865,467871],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[467968,467969]},{"pos":[468057,468074],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[468165,468166],"content":"<","needQuote":true,"nodes":[]},{"pos":[468244,468256],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[468342,468343],"content":"<","needQuote":true,"nodes":[]},{"pos":[468370,468374],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[468405,468406]},{"pos":[468438,468444],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[468540,468541],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[468723,468770],"content":"SequenceEqual(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"SequenceEqual(Of KeyValuePair(Of TKey, TValue))","pos":[0,47]}]},{"pos":[468893,468894],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[468971,468982],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[469068,469071]},{"pos":[469156,469168],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[469255,469258]},{"pos":[469292,469296],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[469327,469328]},{"pos":[469360,469366],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[469398,469399],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[469426,469427],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[469455,469456]},{"pos":[469544,469561],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[469653,469656]},{"pos":[469741,469753],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[469840,469843]},{"pos":[469877,469881],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[469912,469913]},{"pos":[469945,469951],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[469983,469984],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[470011,470012],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[470039,470040],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[470846,470882],"content":"Single<KeyValuePair<TKey, TValue>>()","needQuote":true,"nodes":[{"content":"Single&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;()","pos":[0,36],"source":"Single<KeyValuePair<TKey, TValue>>()"}]},{"pos":[471211,471245],"content":"Single<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Single&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,34],"source":"Single<KeyValuePair<TKey, TValue>>"}]},{"pos":[471355,471356],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[471383,471384],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[471464,471504],"content":"Single(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Single(Of KeyValuePair(Of TKey, TValue))","pos":[0,40]}]},{"pos":[471620,471621],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[471648,471649],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[472274,472351],"content":"Single<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)","needQuote":true,"nodes":[{"content":"Single&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Boolean&gt;)","pos":[0,77],"source":"Single<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)"}]},{"pos":[472930,472964],"content":"Single<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Single&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,34],"source":"Single<KeyValuePair<TKey, TValue>>"}]},{"pos":[473074,473075],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[473125,473129],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[473187,473188],"content":"<","needQuote":true,"nodes":[]},{"pos":[473266,473278],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[473364,473365],"content":"<","needQuote":true,"nodes":[]},{"pos":[473392,473396],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[473427,473428]},{"pos":[473460,473466],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[473531,473532]},{"pos":[473588,473595],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[473688,473689],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[473802,473842],"content":"Single(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Single(Of KeyValuePair(Of TKey, TValue))","pos":[0,40]}]},{"pos":[473958,473959],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[474009,474013],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[474072,474075]},{"pos":[474160,474172],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[474259,474262]},{"pos":[474296,474300],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[474331,474332]},{"pos":[474364,474370],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[474402,474403],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[474431,474432]},{"pos":[474488,474495],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[474556,474557],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[474584,474585],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[475230,475275],"content":"SingleOrDefault<KeyValuePair<TKey, TValue>>()","needQuote":true,"nodes":[{"content":"SingleOrDefault&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;()","pos":[0,45],"source":"SingleOrDefault<KeyValuePair<TKey, TValue>>()"}]},{"pos":[475640,475683],"content":"SingleOrDefault<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"SingleOrDefault&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,43],"source":"SingleOrDefault<KeyValuePair<TKey, TValue>>"}]},{"pos":[475802,475803],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[475830,475831],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[475920,475969],"content":"SingleOrDefault(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"SingleOrDefault(Of KeyValuePair(Of TKey, TValue))","pos":[0,49]}]},{"pos":[476094,476095],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[476122,476123],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[476793,476879],"content":"SingleOrDefault<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)","needQuote":true,"nodes":[{"content":"SingleOrDefault&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Boolean&gt;)","pos":[0,86],"source":"SingleOrDefault<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)"}]},{"pos":[477494,477537],"content":"SingleOrDefault<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"SingleOrDefault&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,43],"source":"SingleOrDefault<KeyValuePair<TKey, TValue>>"}]},{"pos":[477656,477657],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[477707,477711],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[477769,477770],"content":"<","needQuote":true,"nodes":[]},{"pos":[477848,477860],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[477946,477947],"content":"<","needQuote":true,"nodes":[]},{"pos":[477974,477978],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[478009,478010]},{"pos":[478042,478048],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[478113,478114]},{"pos":[478170,478177],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[478270,478271],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[478393,478442],"content":"SingleOrDefault(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"SingleOrDefault(Of KeyValuePair(Of TKey, TValue))","pos":[0,49]}]},{"pos":[478567,478568],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[478618,478622],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[478681,478684]},{"pos":[478769,478781],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[478868,478871]},{"pos":[478905,478909],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[478940,478941]},{"pos":[478973,478979],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[479011,479012],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[479040,479041]},{"pos":[479097,479104],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[479165,479166],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[479193,479194],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[479871,479910],"content":"Skip<KeyValuePair<TKey, TValue>>(Int32)","needQuote":true,"nodes":[{"content":"Skip&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Int32)","pos":[0,39],"source":"Skip<KeyValuePair<TKey, TValue>>(Int32)"}]},{"pos":[480274,480306],"content":"Skip<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Skip&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,32],"source":"Skip<KeyValuePair<TKey, TValue>>"}]},{"pos":[480414,480415],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[480464,480469],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[480528,480529],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[480621,480659],"content":"Skip(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Skip(Of KeyValuePair(Of TKey, TValue))","pos":[0,38]}]},{"pos":[480773,480774],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[480823,480828],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[480887,480888],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[481536,481616],"content":"SkipWhile<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)","needQuote":true,"nodes":[{"content":"SkipWhile&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Boolean&gt;)","pos":[0,80],"source":"SkipWhile<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)"}]},{"pos":[482207,482244],"content":"SkipWhile<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"SkipWhile&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,37],"source":"SkipWhile<KeyValuePair<TKey, TValue>>"}]},{"pos":[482357,482358],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[482408,482412],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[482470,482471],"content":"<","needQuote":true,"nodes":[]},{"pos":[482549,482561],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[482647,482648],"content":"<","needQuote":true,"nodes":[]},{"pos":[482675,482679],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[482710,482711]},{"pos":[482743,482749],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[482814,482815]},{"pos":[482871,482878],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[482971,482972],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[483088,483131],"content":"SkipWhile(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"SkipWhile(Of KeyValuePair(Of TKey, TValue))","pos":[0,43]}]},{"pos":[483250,483251],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[483301,483305],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[483364,483367]},{"pos":[483452,483464],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[483551,483554]},{"pos":[483588,483592],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[483623,483624]},{"pos":[483656,483662],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[483694,483695],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[483723,483724]},{"pos":[483780,483787],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[483848,483849],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[483876,483877],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[484663,484750],"content":"SkipWhile<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32, Boolean>)","needQuote":true,"nodes":[{"content":"SkipWhile&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Int32, Boolean&gt;)","pos":[0,87],"source":"SkipWhile<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32, Boolean>)"}]},{"pos":[485389,485426],"content":"SkipWhile<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"SkipWhile&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,37],"source":"SkipWhile<KeyValuePair<TKey, TValue>>"}]},{"pos":[485539,485540],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[485590,485594],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[485652,485653],"content":"<","needQuote":true,"nodes":[]},{"pos":[485731,485743],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[485829,485830],"content":"<","needQuote":true,"nodes":[]},{"pos":[485857,485861],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[485892,485893]},{"pos":[485925,485931],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[485996,485997]},{"pos":[486051,486056],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[486116,486117]},{"pos":[486173,486180],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[486273,486274],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[486403,486446],"content":"SkipWhile(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"SkipWhile(Of KeyValuePair(Of TKey, TValue))","pos":[0,43]}]},{"pos":[486565,486566],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[486616,486620],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[486679,486682]},{"pos":[486767,486779],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[486866,486869]},{"pos":[486903,486907],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[486938,486939]},{"pos":[486971,486977],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[487009,487010],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[487038,487039]},{"pos":[487093,487098],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[487158,487159]},{"pos":[487215,487222],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[487283,487284],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[487311,487312],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[488087,488161],"content":"Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Decimal>)","needQuote":true,"nodes":[{"content":"Sum&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Decimal&gt;)","pos":[0,74],"source":"Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Decimal>)"}]},{"pos":[488728,488759],"content":"Sum<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Sum&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Sum<KeyValuePair<TKey, TValue>>"}]},{"pos":[488866,488867],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[488917,488921],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[488979,488980],"content":"<","needQuote":true,"nodes":[]},{"pos":[489058,489070],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[489156,489157],"content":"<","needQuote":true,"nodes":[]},{"pos":[489184,489188],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[489219,489220]},{"pos":[489252,489258],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[489323,489324]},{"pos":[489380,489387],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[489480,489481],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[489591,489628],"content":"Sum(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Sum(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[489741,489742],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[489792,489796],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[489855,489858]},{"pos":[489943,489955],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[490042,490045]},{"pos":[490079,490083],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[490114,490115]},{"pos":[490147,490153],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[490185,490186],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[490214,490215]},{"pos":[490271,490278],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[490339,490340],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[490367,490368],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[491096,491169],"content":"Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Double>)","needQuote":true,"nodes":[{"content":"Sum&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Double&gt;)","pos":[0,73],"source":"Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Double>)"}]},{"pos":[491732,491763],"content":"Sum<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Sum&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Sum<KeyValuePair<TKey, TValue>>"}]},{"pos":[491870,491871],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[491921,491925],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[491983,491984],"content":"<","needQuote":true,"nodes":[]},{"pos":[492062,492074],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[492160,492161],"content":"<","needQuote":true,"nodes":[]},{"pos":[492188,492192],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[492223,492224]},{"pos":[492256,492262],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[492327,492328]},{"pos":[492383,492389],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[492481,492482],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[492591,492628],"content":"Sum(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Sum(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[492741,492742],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[492792,492796],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[492855,492858]},{"pos":[492943,492955],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[493042,493045]},{"pos":[493079,493083],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[493114,493115]},{"pos":[493147,493153],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[493185,493186],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[493214,493215]},{"pos":[493270,493276],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[493336,493337],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[493364,493365],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[494088,494160],"content":"Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32>)","needQuote":true,"nodes":[{"content":"Sum&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Int32&gt;)","pos":[0,72],"source":"Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32>)"}]},{"pos":[494719,494750],"content":"Sum<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Sum&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Sum<KeyValuePair<TKey, TValue>>"}]},{"pos":[494857,494858],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[494908,494912],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[494970,494971],"content":"<","needQuote":true,"nodes":[]},{"pos":[495049,495061],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[495147,495148],"content":"<","needQuote":true,"nodes":[]},{"pos":[495175,495179],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[495210,495211]},{"pos":[495243,495249],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[495314,495315]},{"pos":[495369,495374],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[495465,495466],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[495574,495611],"content":"Sum(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Sum(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[495724,495725],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[495775,495779],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[495838,495841]},{"pos":[495926,495938],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[496025,496028]},{"pos":[496062,496066],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[496097,496098]},{"pos":[496130,496136],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[496168,496169],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[496197,496198]},{"pos":[496252,496257],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[496316,496317],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[496344,496345],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[497065,497137],"content":"Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int64>)","needQuote":true,"nodes":[{"content":"Sum&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Int64&gt;)","pos":[0,72],"source":"Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int64>)"}]},{"pos":[497696,497727],"content":"Sum<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Sum&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Sum<KeyValuePair<TKey, TValue>>"}]},{"pos":[497834,497835],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[497885,497889],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[497947,497948],"content":"<","needQuote":true,"nodes":[]},{"pos":[498026,498038],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[498124,498125],"content":"<","needQuote":true,"nodes":[]},{"pos":[498152,498156],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[498187,498188]},{"pos":[498220,498226],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[498291,498292]},{"pos":[498346,498351],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[498442,498443],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[498551,498588],"content":"Sum(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Sum(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[498701,498702],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[498752,498756],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[498815,498818]},{"pos":[498903,498915],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[499002,499005]},{"pos":[499039,499043],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[499074,499075]},{"pos":[499107,499113],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[499145,499146],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[499174,499175]},{"pos":[499229,499234],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[499293,499294],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[499321,499322],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[500080,500164],"content":"Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Decimal>>)","needQuote":true,"nodes":[{"content":"Sum&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Nullable&lt;Decimal&gt;&gt;)","pos":[0,84],"source":"Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Decimal>>)"}]},{"pos":[500798,500829],"content":"Sum<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Sum&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Sum<KeyValuePair<TKey, TValue>>"}]},{"pos":[500936,500937],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[500987,500991],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[501049,501050],"content":"<","needQuote":true,"nodes":[]},{"pos":[501128,501140],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[501226,501227],"content":"<","needQuote":true,"nodes":[]},{"pos":[501254,501258],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[501289,501290]},{"pos":[501322,501328],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[501393,501394]},{"pos":[501453,501461],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[501523,501524],"content":"<","needQuote":true,"nodes":[]},{"pos":[501575,501582],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[501707,501708],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[501835,501872],"content":"Sum(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Sum(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[501985,501986],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[502036,502040],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[502099,502102]},{"pos":[502187,502199],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[502286,502289]},{"pos":[502323,502327],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[502358,502359]},{"pos":[502391,502397],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[502429,502430],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[502458,502459]},{"pos":[502518,502526],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[502589,502592]},{"pos":[502650,502657],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[502718,502719],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[502746,502747],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[502774,502775],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[503577,503660],"content":"Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Double>>)","needQuote":true,"nodes":[{"content":"Sum&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Nullable&lt;Double&gt;&gt;)","pos":[0,83],"source":"Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Double>>)"}]},{"pos":[504290,504321],"content":"Sum<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Sum&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Sum<KeyValuePair<TKey, TValue>>"}]},{"pos":[504428,504429],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[504479,504483],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[504541,504542],"content":"<","needQuote":true,"nodes":[]},{"pos":[504620,504632],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[504718,504719],"content":"<","needQuote":true,"nodes":[]},{"pos":[504746,504750],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[504781,504782]},{"pos":[504814,504820],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[504885,504886]},{"pos":[504945,504953],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[505015,505016],"content":"<","needQuote":true,"nodes":[]},{"pos":[505066,505072],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[505196,505197],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[505323,505360],"content":"Sum(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Sum(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[505473,505474],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[505524,505528],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[505587,505590]},{"pos":[505675,505687],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[505774,505777]},{"pos":[505811,505815],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[505846,505847]},{"pos":[505879,505885],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[505917,505918],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[505946,505947]},{"pos":[506006,506014],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[506077,506080]},{"pos":[506137,506143],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[506203,506204],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[506231,506232],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[506259,506260],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[507057,507139],"content":"Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int32>>)","needQuote":true,"nodes":[{"content":"Sum&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Nullable&lt;Int32&gt;&gt;)","pos":[0,82],"source":"Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int32>>)"}]},{"pos":[507765,507796],"content":"Sum<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Sum&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Sum<KeyValuePair<TKey, TValue>>"}]},{"pos":[507903,507904],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[507954,507958],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[508016,508017],"content":"<","needQuote":true,"nodes":[]},{"pos":[508095,508107],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[508193,508194],"content":"<","needQuote":true,"nodes":[]},{"pos":[508221,508225],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[508256,508257]},{"pos":[508289,508295],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[508360,508361]},{"pos":[508420,508428],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[508490,508491],"content":"<","needQuote":true,"nodes":[]},{"pos":[508540,508545],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[508668,508669],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[508794,508831],"content":"Sum(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Sum(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[508944,508945],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[508995,508999],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[509058,509061]},{"pos":[509146,509158],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[509245,509248]},{"pos":[509282,509286],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[509317,509318]},{"pos":[509350,509356],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[509388,509389],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[509417,509418]},{"pos":[509477,509485],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[509548,509551]},{"pos":[509607,509612],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[509671,509672],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[509699,509700],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[509727,509728],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[510522,510604],"content":"Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int64>>)","needQuote":true,"nodes":[{"content":"Sum&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Nullable&lt;Int64&gt;&gt;)","pos":[0,82],"source":"Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int64>>)"}]},{"pos":[511230,511261],"content":"Sum<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Sum&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Sum<KeyValuePair<TKey, TValue>>"}]},{"pos":[511368,511369],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[511419,511423],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[511481,511482],"content":"<","needQuote":true,"nodes":[]},{"pos":[511560,511572],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[511658,511659],"content":"<","needQuote":true,"nodes":[]},{"pos":[511686,511690],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[511721,511722]},{"pos":[511754,511760],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[511825,511826]},{"pos":[511885,511893],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[511955,511956],"content":"<","needQuote":true,"nodes":[]},{"pos":[512005,512010],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[512133,512134],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[512259,512296],"content":"Sum(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Sum(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[512409,512410],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[512460,512464],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[512523,512526]},{"pos":[512611,512623],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[512710,512713]},{"pos":[512747,512751],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[512782,512783]},{"pos":[512815,512821],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[512853,512854],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[512882,512883]},{"pos":[512942,512950],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[513013,513016]},{"pos":[513072,513077],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[513136,513137],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[513164,513165],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[513192,513193],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[513989,514072],"content":"Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Single>>)","needQuote":true,"nodes":[{"content":"Sum&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Nullable&lt;Single&gt;&gt;)","pos":[0,83],"source":"Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Single>>)"}]},{"pos":[514702,514733],"content":"Sum<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Sum&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Sum<KeyValuePair<TKey, TValue>>"}]},{"pos":[514840,514841],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[514891,514895],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[514953,514954],"content":"<","needQuote":true,"nodes":[]},{"pos":[515032,515044],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[515130,515131],"content":"<","needQuote":true,"nodes":[]},{"pos":[515158,515162],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[515193,515194]},{"pos":[515226,515232],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[515297,515298]},{"pos":[515357,515365],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[515427,515428],"content":"<","needQuote":true,"nodes":[]},{"pos":[515478,515484],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[515608,515609],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[515735,515772],"content":"Sum(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Sum(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[515885,515886],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[515936,515940],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[515999,516002]},{"pos":[516087,516099],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[516186,516189]},{"pos":[516223,516227],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[516258,516259]},{"pos":[516291,516297],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[516329,516330],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[516358,516359]},{"pos":[516418,516426],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[516489,516492]},{"pos":[516549,516555],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[516615,516616],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[516643,516644],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[516671,516672],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[517437,517510],"content":"Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Single>)","needQuote":true,"nodes":[{"content":"Sum&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Single&gt;)","pos":[0,73],"source":"Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Single>)"}]},{"pos":[518073,518104],"content":"Sum<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Sum&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Sum<KeyValuePair<TKey, TValue>>"}]},{"pos":[518211,518212],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[518262,518266],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[518324,518325],"content":"<","needQuote":true,"nodes":[]},{"pos":[518403,518415],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[518501,518502],"content":"<","needQuote":true,"nodes":[]},{"pos":[518529,518533],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[518564,518565]},{"pos":[518597,518603],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[518668,518669]},{"pos":[518724,518730],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[518822,518823],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[518932,518969],"content":"Sum(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Sum(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[519082,519083],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[519133,519137],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[519196,519199]},{"pos":[519284,519296],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[519383,519386]},{"pos":[519420,519424],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[519455,519456]},{"pos":[519488,519494],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[519526,519527],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[519555,519556]},{"pos":[519611,519617],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[519677,519678],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[519705,519706],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[520344,520383],"content":"Take<KeyValuePair<TKey, TValue>>(Int32)","needQuote":true,"nodes":[{"content":"Take&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Int32)","pos":[0,39],"source":"Take<KeyValuePair<TKey, TValue>>(Int32)"}]},{"pos":[520747,520779],"content":"Take<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Take&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,32],"source":"Take<KeyValuePair<TKey, TValue>>"}]},{"pos":[520887,520888],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[520937,520942],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[521001,521002],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[521094,521132],"content":"Take(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Take(Of KeyValuePair(Of TKey, TValue))","pos":[0,38]}]},{"pos":[521246,521247],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[521296,521301],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[521360,521361],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[522009,522089],"content":"TakeWhile<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)","needQuote":true,"nodes":[{"content":"TakeWhile&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Boolean&gt;)","pos":[0,80],"source":"TakeWhile<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)"}]},{"pos":[522680,522717],"content":"TakeWhile<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"TakeWhile&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,37],"source":"TakeWhile<KeyValuePair<TKey, TValue>>"}]},{"pos":[522830,522831],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[522881,522885],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[522943,522944],"content":"<","needQuote":true,"nodes":[]},{"pos":[523022,523034],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[523120,523121],"content":"<","needQuote":true,"nodes":[]},{"pos":[523148,523152],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[523183,523184]},{"pos":[523216,523222],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[523287,523288]},{"pos":[523344,523351],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[523444,523445],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[523561,523604],"content":"TakeWhile(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"TakeWhile(Of KeyValuePair(Of TKey, TValue))","pos":[0,43]}]},{"pos":[523723,523724],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[523774,523778],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[523837,523840]},{"pos":[523925,523937],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[524024,524027]},{"pos":[524061,524065],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[524096,524097]},{"pos":[524129,524135],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[524167,524168],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[524196,524197]},{"pos":[524253,524260],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[524321,524322],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[524349,524350],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[525136,525223],"content":"TakeWhile<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32, Boolean>)","needQuote":true,"nodes":[{"content":"TakeWhile&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Int32, Boolean&gt;)","pos":[0,87],"source":"TakeWhile<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32, Boolean>)"}]},{"pos":[525862,525899],"content":"TakeWhile<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"TakeWhile&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,37],"source":"TakeWhile<KeyValuePair<TKey, TValue>>"}]},{"pos":[526012,526013],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[526063,526067],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[526125,526126],"content":"<","needQuote":true,"nodes":[]},{"pos":[526204,526216],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[526302,526303],"content":"<","needQuote":true,"nodes":[]},{"pos":[526330,526334],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[526365,526366]},{"pos":[526398,526404],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[526469,526470]},{"pos":[526524,526529],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[526589,526590]},{"pos":[526646,526653],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[526746,526747],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[526876,526919],"content":"TakeWhile(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"TakeWhile(Of KeyValuePair(Of TKey, TValue))","pos":[0,43]}]},{"pos":[527038,527039],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[527089,527093],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[527152,527155]},{"pos":[527240,527252],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[527339,527342]},{"pos":[527376,527380],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[527411,527412]},{"pos":[527444,527450],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[527482,527483],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[527511,527512]},{"pos":[527566,527571],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[527631,527632]},{"pos":[527688,527695],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[527756,527757],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[527784,527785],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[528450,528487],"content":"ToArray<KeyValuePair<TKey, TValue>>()","needQuote":true,"nodes":[{"content":"ToArray&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;()","pos":[0,37],"source":"ToArray<KeyValuePair<TKey, TValue>>()"}]},{"pos":[528820,528855],"content":"ToArray<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"ToArray&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,35],"source":"ToArray<KeyValuePair<TKey, TValue>>"}]},{"pos":[528966,528967],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[528994,528995],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[529076,529117],"content":"ToArray(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"ToArray(Of KeyValuePair(Of TKey, TValue))","pos":[0,41]}]},{"pos":[529234,529235],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[529262,529263],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[529884,529970],"content":"ToDictionary<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>)","needQuote":true,"nodes":[{"content":"ToDictionary&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;)","pos":[0,86],"source":"ToDictionary<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>)"}]},{"pos":[530557,530603],"content":"ToDictionary<KeyValuePair<TKey, TValue>, TKey>","needQuote":true,"nodes":[{"content":"ToDictionary&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;","pos":[0,46],"source":"ToDictionary<KeyValuePair<TKey, TValue>, TKey>"}]},{"pos":[530725,530726],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[530776,530780],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[530838,530839],"content":"<","needQuote":true,"nodes":[]},{"pos":[530917,530929],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[531015,531016],"content":"<","needQuote":true,"nodes":[]},{"pos":[531043,531047],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[531078,531079]},{"pos":[531111,531117],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[531182,531183]},{"pos":[531215,531219],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[531281,531282],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[531390,531442],"content":"ToDictionary(Of KeyValuePair(Of TKey, TValue), TKey)","needQuote":true,"nodes":[{"content":"ToDictionary(Of KeyValuePair(Of TKey, TValue), TKey)","pos":[0,52]}]},{"pos":[531570,531571],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[531621,531625],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[531684,531687]},{"pos":[531772,531784],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[531871,531874]},{"pos":[531908,531912],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[531943,531944]},{"pos":[531976,531982],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[532014,532015],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[532043,532044]},{"pos":[532076,532080],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[532110,532111],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[532138,532139],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[532993,533104],"content":"ToDictionary<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"ToDictionary&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,111],"source":"ToDictionary<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>, IEqualityComparer<TKey>)"}]},{"pos":[533876,533922],"content":"ToDictionary<KeyValuePair<TKey, TValue>, TKey>","needQuote":true,"nodes":[{"content":"ToDictionary&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;","pos":[0,46],"source":"ToDictionary<KeyValuePair<TKey, TValue>, TKey>"}]},{"pos":[534044,534045],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[534095,534099],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[534157,534158],"content":"<","needQuote":true,"nodes":[]},{"pos":[534236,534248],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[534334,534335],"content":"<","needQuote":true,"nodes":[]},{"pos":[534362,534366],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[534397,534398]},{"pos":[534430,534436],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[534501,534502]},{"pos":[534534,534538],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[534601,534602]},{"pos":[534690,534707],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[534798,534799],"content":"<","needQuote":true,"nodes":[]},{"pos":[534826,534830],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[534892,534893],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[535051,535103],"content":"ToDictionary(Of KeyValuePair(Of TKey, TValue), TKey)","needQuote":true,"nodes":[{"content":"ToDictionary(Of KeyValuePair(Of TKey, TValue), TKey)","pos":[0,52]}]},{"pos":[535231,535232],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[535282,535286],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[535345,535348]},{"pos":[535433,535445],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[535532,535535]},{"pos":[535569,535573],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[535604,535605]},{"pos":[535637,535643],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[535675,535676],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[535704,535705]},{"pos":[535737,535741],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[535771,535772],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[535800,535801]},{"pos":[535889,535906],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[535998,536001]},{"pos":[536035,536039],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[536069,536070],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[536097,536098],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[537054,537194],"content":"ToDictionary<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>)","needQuote":true,"nodes":[{"content":"ToDictionary&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey, TElement&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;, Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TElement&gt;)","pos":[0,140],"source":"ToDictionary<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>)"}]},{"pos":[538044,538100],"content":"ToDictionary<KeyValuePair<TKey, TValue>, TKey, TElement>","needQuote":true,"nodes":[{"content":"ToDictionary&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey, TElement&gt;","pos":[0,56],"source":"ToDictionary<KeyValuePair<TKey, TValue>, TKey, TElement>"}]},{"pos":[538232,538233],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[538283,538287],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[538345,538346],"content":"<","needQuote":true,"nodes":[]},{"pos":[538424,538436],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[538522,538523],"content":"<","needQuote":true,"nodes":[]},{"pos":[538550,538554],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[538585,538586]},{"pos":[538618,538624],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[538689,538690]},{"pos":[538722,538726],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[538789,538790]},{"pos":[538845,538849],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[538907,538908],"content":"<","needQuote":true,"nodes":[]},{"pos":[538986,538998],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[539084,539085],"content":"<","needQuote":true,"nodes":[]},{"pos":[539112,539116],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[539147,539148]},{"pos":[539180,539186],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[539251,539252]},{"pos":[539284,539292],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[539358,539359],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[539488,539550],"content":"ToDictionary(Of KeyValuePair(Of TKey, TValue), TKey, TElement)","needQuote":true,"nodes":[{"content":"ToDictionary(Of KeyValuePair(Of TKey, TValue), TKey, TElement)","pos":[0,62]}]},{"pos":[539688,539689],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[539739,539743],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[539802,539805]},{"pos":[539890,539902],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[539989,539992]},{"pos":[540026,540030],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[540061,540062]},{"pos":[540094,540100],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[540132,540133],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[540161,540162]},{"pos":[540194,540198],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[540228,540229],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[540257,540258]},{"pos":[540313,540317],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[540376,540379]},{"pos":[540464,540476],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[540563,540566]},{"pos":[540600,540604],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[540635,540636]},{"pos":[540668,540674],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[540706,540707],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[540735,540736]},{"pos":[540768,540776],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[540810,540811],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[540838,540839],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[541930,542095],"content":"ToDictionary<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"ToDictionary&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey, TElement&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;, Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TElement&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,165],"source":"ToDictionary<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>, IEqualityComparer<TKey>)"}]},{"pos":[543130,543186],"content":"ToDictionary<KeyValuePair<TKey, TValue>, TKey, TElement>","needQuote":true,"nodes":[{"content":"ToDictionary&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey, TElement&gt;","pos":[0,56],"source":"ToDictionary<KeyValuePair<TKey, TValue>, TKey, TElement>"}]},{"pos":[543318,543319],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[543369,543373],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[543431,543432],"content":"<","needQuote":true,"nodes":[]},{"pos":[543510,543522],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[543608,543609],"content":"<","needQuote":true,"nodes":[]},{"pos":[543636,543640],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[543671,543672]},{"pos":[543704,543710],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[543775,543776]},{"pos":[543808,543812],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[543875,543876]},{"pos":[543931,543935],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[543993,543994],"content":"<","needQuote":true,"nodes":[]},{"pos":[544072,544084],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[544170,544171],"content":"<","needQuote":true,"nodes":[]},{"pos":[544198,544202],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[544233,544234]},{"pos":[544266,544272],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[544337,544338]},{"pos":[544370,544378],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[544445,544446]},{"pos":[544534,544551],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[544642,544643],"content":"<","needQuote":true,"nodes":[]},{"pos":[544670,544674],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[544736,544737],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[544916,544978],"content":"ToDictionary(Of KeyValuePair(Of TKey, TValue), TKey, TElement)","needQuote":true,"nodes":[{"content":"ToDictionary(Of KeyValuePair(Of TKey, TValue), TKey, TElement)","pos":[0,62]}]},{"pos":[545116,545117],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[545167,545171],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[545230,545233]},{"pos":[545318,545330],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[545417,545420]},{"pos":[545454,545458],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[545489,545490]},{"pos":[545522,545528],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[545560,545561],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[545589,545590]},{"pos":[545622,545626],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[545656,545657],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[545685,545686]},{"pos":[545741,545745],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[545804,545807]},{"pos":[545892,545904],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[545991,545994]},{"pos":[546028,546032],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[546063,546064]},{"pos":[546096,546102],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[546134,546135],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[546163,546164]},{"pos":[546196,546204],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[546238,546239],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[546267,546268]},{"pos":[546356,546373],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[546465,546468]},{"pos":[546502,546506],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[546536,546537],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[546564,546565],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[547443,547479],"content":"ToList<KeyValuePair<TKey, TValue>>()","needQuote":true,"nodes":[{"content":"ToList&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;()","pos":[0,36],"source":"ToList<KeyValuePair<TKey, TValue>>()"}]},{"pos":[547808,547842],"content":"ToList<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"ToList&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,34],"source":"ToList<KeyValuePair<TKey, TValue>>"}]},{"pos":[547952,547953],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[547980,547981],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[548061,548101],"content":"ToList(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"ToList(Of KeyValuePair(Of TKey, TValue))","pos":[0,40]}]},{"pos":[548217,548218],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[548245,548246],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[548856,548938],"content":"ToLookup<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>)","needQuote":true,"nodes":[{"content":"ToLookup&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;)","pos":[0,82],"source":"ToLookup<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>)"}]},{"pos":[549509,549551],"content":"ToLookup<KeyValuePair<TKey, TValue>, TKey>","needQuote":true,"nodes":[{"content":"ToLookup&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;","pos":[0,42],"source":"ToLookup<KeyValuePair<TKey, TValue>, TKey>"}]},{"pos":[549669,549670],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[549720,549724],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[549782,549783],"content":"<","needQuote":true,"nodes":[]},{"pos":[549861,549873],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[549959,549960],"content":"<","needQuote":true,"nodes":[]},{"pos":[549987,549991],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[550022,550023]},{"pos":[550055,550061],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[550126,550127]},{"pos":[550159,550163],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[550225,550226],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[550330,550378],"content":"ToLookup(Of KeyValuePair(Of TKey, TValue), TKey)","needQuote":true,"nodes":[{"content":"ToLookup(Of KeyValuePair(Of TKey, TValue), TKey)","pos":[0,48]}]},{"pos":[550502,550503],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[550553,550557],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[550616,550619]},{"pos":[550704,550716],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[550803,550806]},{"pos":[550840,550844],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[550875,550876]},{"pos":[550908,550914],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[550946,550947],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[550975,550976]},{"pos":[551008,551012],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[551042,551043],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[551070,551071],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[551905,552012],"content":"ToLookup<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"ToLookup&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,107],"source":"ToLookup<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>, IEqualityComparer<TKey>)"}]},{"pos":[552768,552810],"content":"ToLookup<KeyValuePair<TKey, TValue>, TKey>","needQuote":true,"nodes":[{"content":"ToLookup&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;","pos":[0,42],"source":"ToLookup<KeyValuePair<TKey, TValue>, TKey>"}]},{"pos":[552928,552929],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[552979,552983],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[553041,553042],"content":"<","needQuote":true,"nodes":[]},{"pos":[553120,553132],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[553218,553219],"content":"<","needQuote":true,"nodes":[]},{"pos":[553246,553250],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[553281,553282]},{"pos":[553314,553320],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[553385,553386]},{"pos":[553418,553422],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[553485,553486]},{"pos":[553574,553591],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[553682,553683],"content":"<","needQuote":true,"nodes":[]},{"pos":[553710,553714],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[553776,553777],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[553931,553979],"content":"ToLookup(Of KeyValuePair(Of TKey, TValue), TKey)","needQuote":true,"nodes":[{"content":"ToLookup(Of KeyValuePair(Of TKey, TValue), TKey)","pos":[0,48]}]},{"pos":[554103,554104],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[554154,554158],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[554217,554220]},{"pos":[554305,554317],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[554404,554407]},{"pos":[554441,554445],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[554476,554477]},{"pos":[554509,554515],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[554547,554548],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[554576,554577]},{"pos":[554609,554613],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[554643,554644],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[554672,554673]},{"pos":[554761,554778],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[554870,554873]},{"pos":[554907,554911],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[554941,554942],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[554969,554970],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[555906,556042],"content":"ToLookup<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>)","needQuote":true,"nodes":[{"content":"ToLookup&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey, TElement&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;, Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TElement&gt;)","pos":[0,136],"source":"ToLookup<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>)"}]},{"pos":[556876,556928],"content":"ToLookup<KeyValuePair<TKey, TValue>, TKey, TElement>","needQuote":true,"nodes":[{"content":"ToLookup&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey, TElement&gt;","pos":[0,52],"source":"ToLookup<KeyValuePair<TKey, TValue>, TKey, TElement>"}]},{"pos":[557056,557057],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[557107,557111],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[557169,557170],"content":"<","needQuote":true,"nodes":[]},{"pos":[557248,557260],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[557346,557347],"content":"<","needQuote":true,"nodes":[]},{"pos":[557374,557378],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[557409,557410]},{"pos":[557442,557448],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[557513,557514]},{"pos":[557546,557550],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[557613,557614]},{"pos":[557669,557673],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[557731,557732],"content":"<","needQuote":true,"nodes":[]},{"pos":[557810,557822],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[557908,557909],"content":"<","needQuote":true,"nodes":[]},{"pos":[557936,557940],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[557971,557972]},{"pos":[558004,558010],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[558075,558076]},{"pos":[558108,558116],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[558182,558183],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[558308,558366],"content":"ToLookup(Of KeyValuePair(Of TKey, TValue), TKey, TElement)","needQuote":true,"nodes":[{"content":"ToLookup(Of KeyValuePair(Of TKey, TValue), TKey, TElement)","pos":[0,58]}]},{"pos":[558500,558501],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[558551,558555],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[558614,558617]},{"pos":[558702,558714],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[558801,558804]},{"pos":[558838,558842],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[558873,558874]},{"pos":[558906,558912],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[558944,558945],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[558973,558974]},{"pos":[559006,559010],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[559040,559041],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[559069,559070]},{"pos":[559125,559129],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[559188,559191]},{"pos":[559276,559288],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[559375,559378]},{"pos":[559412,559416],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[559447,559448]},{"pos":[559480,559486],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[559518,559519],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[559547,559548]},{"pos":[559580,559588],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[559622,559623],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[559650,559651],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[560722,560883],"content":"ToLookup<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"ToLookup&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey, TElement&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;, Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TElement&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,161],"source":"ToLookup<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>, IEqualityComparer<TKey>)"}]},{"pos":[561902,561954],"content":"ToLookup<KeyValuePair<TKey, TValue>, TKey, TElement>","needQuote":true,"nodes":[{"content":"ToLookup&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey, TElement&gt;","pos":[0,52],"source":"ToLookup<KeyValuePair<TKey, TValue>, TKey, TElement>"}]},{"pos":[562082,562083],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[562133,562137],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[562195,562196],"content":"<","needQuote":true,"nodes":[]},{"pos":[562274,562286],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[562372,562373],"content":"<","needQuote":true,"nodes":[]},{"pos":[562400,562404],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[562435,562436]},{"pos":[562468,562474],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[562539,562540]},{"pos":[562572,562576],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[562639,562640]},{"pos":[562695,562699],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[562757,562758],"content":"<","needQuote":true,"nodes":[]},{"pos":[562836,562848],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[562934,562935],"content":"<","needQuote":true,"nodes":[]},{"pos":[562962,562966],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[562997,562998]},{"pos":[563030,563036],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[563101,563102]},{"pos":[563134,563142],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[563209,563210]},{"pos":[563298,563315],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[563406,563407],"content":"<","needQuote":true,"nodes":[]},{"pos":[563434,563438],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[563500,563501],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[563676,563734],"content":"ToLookup(Of KeyValuePair(Of TKey, TValue), TKey, TElement)","needQuote":true,"nodes":[{"content":"ToLookup(Of KeyValuePair(Of TKey, TValue), TKey, TElement)","pos":[0,58]}]},{"pos":[563868,563869],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[563919,563923],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[563982,563985]},{"pos":[564070,564082],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[564169,564172]},{"pos":[564206,564210],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[564241,564242]},{"pos":[564274,564280],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[564312,564313],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[564341,564342]},{"pos":[564374,564378],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[564408,564409],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[564437,564438]},{"pos":[564493,564497],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[564556,564559]},{"pos":[564644,564656],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[564743,564746]},{"pos":[564780,564784],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[564815,564816]},{"pos":[564848,564854],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[564886,564887],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[564915,564916]},{"pos":[564948,564956],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[564990,564991],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[565019,565020]},{"pos":[565108,565125],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[565217,565220]},{"pos":[565254,565258],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[565288,565289],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[565316,565317],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[566323,566397],"content":"Union<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>)","needQuote":true,"nodes":[{"content":"Union&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(IEnumerable&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;)","pos":[0,74],"source":"Union<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>)"}]},{"pos":[567004,567037],"content":"Union<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Union&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,33],"source":"Union<KeyValuePair<TKey, TValue>>"}]},{"pos":[567146,567147],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[567224,567235],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[567320,567321],"content":"<","needQuote":true,"nodes":[]},{"pos":[567399,567411],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[567497,567498],"content":"<","needQuote":true,"nodes":[]},{"pos":[567525,567529],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[567560,567561]},{"pos":[567593,567599],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[567695,567696],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[567820,567859],"content":"Union(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Union(Of KeyValuePair(Of TKey, TValue))","pos":[0,39]}]},{"pos":[567974,567975],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[568052,568063],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[568149,568152]},{"pos":[568237,568249],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[568336,568339]},{"pos":[568373,568377],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[568408,568409]},{"pos":[568441,568447],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[568479,568480],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[568507,568508],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[568535,568536],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[569461,569582],"content":"Union<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>, IEqualityComparer<KeyValuePair<TKey, TValue>>)","needQuote":true,"nodes":[{"content":"Union&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(IEnumerable&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;, IEqualityComparer&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;)","pos":[0,121],"source":"Union<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>, IEqualityComparer<KeyValuePair<TKey, TValue>>)"}]},{"pos":[570500,570533],"content":"Union<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Union&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,33],"source":"Union<KeyValuePair<TKey, TValue>>"}]},{"pos":[570642,570643],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[570720,570731],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[570816,570817],"content":"<","needQuote":true,"nodes":[]},{"pos":[570895,570907],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[570993,570994],"content":"<","needQuote":true,"nodes":[]},{"pos":[571021,571025],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[571056,571057]},{"pos":[571089,571095],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[571192,571193]},{"pos":[571281,571298],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[571389,571390],"content":"<","needQuote":true,"nodes":[]},{"pos":[571468,571480],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[571566,571567],"content":"<","needQuote":true,"nodes":[]},{"pos":[571594,571598],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[571629,571630]},{"pos":[571662,571668],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[571764,571765],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[571939,571978],"content":"Union(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Union(Of KeyValuePair(Of TKey, TValue))","pos":[0,39]}]},{"pos":[572093,572094],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[572171,572182],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[572268,572271]},{"pos":[572356,572368],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[572455,572458]},{"pos":[572492,572496],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[572527,572528]},{"pos":[572560,572566],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[572598,572599],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[572626,572627],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[572655,572656]},{"pos":[572744,572761],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[572853,572856]},{"pos":[572941,572953],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[573040,573043]},{"pos":[573077,573081],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[573112,573113]},{"pos":[573145,573151],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[573183,573184],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[573211,573212],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[573239,573240],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[574138,574214],"content":"Where<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)","needQuote":true,"nodes":[{"content":"Where&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Boolean&gt;)","pos":[0,76],"source":"Where<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)"}]},{"pos":[574789,574822],"content":"Where<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Where&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,33],"source":"Where<KeyValuePair<TKey, TValue>>"}]},{"pos":[574931,574932],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[574982,574986],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[575044,575045],"content":"<","needQuote":true,"nodes":[]},{"pos":[575123,575135],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[575221,575222],"content":"<","needQuote":true,"nodes":[]},{"pos":[575249,575253],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[575284,575285]},{"pos":[575317,575323],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[575388,575389]},{"pos":[575445,575452],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[575545,575546],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[575658,575697],"content":"Where(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Where(Of KeyValuePair(Of TKey, TValue))","pos":[0,39]}]},{"pos":[575812,575813],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[575863,575867],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[575926,575929]},{"pos":[576014,576026],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[576113,576116]},{"pos":[576150,576154],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[576185,576186]},{"pos":[576218,576224],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[576256,576257],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[576285,576286]},{"pos":[576342,576349],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[576410,576411],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[576438,576439],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[577205,577288],"content":"Where<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32, Boolean>)","needQuote":true,"nodes":[{"content":"Where&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Int32, Boolean&gt;)","pos":[0,83],"source":"Where<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32, Boolean>)"}]},{"pos":[577911,577944],"content":"Where<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Where&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,33],"source":"Where<KeyValuePair<TKey, TValue>>"}]},{"pos":[578053,578054],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[578104,578108],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[578166,578167],"content":"<","needQuote":true,"nodes":[]},{"pos":[578245,578257],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[578343,578344],"content":"<","needQuote":true,"nodes":[]},{"pos":[578371,578375],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[578406,578407]},{"pos":[578439,578445],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[578510,578511]},{"pos":[578565,578570],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[578630,578631]},{"pos":[578687,578694],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[578787,578788],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[578913,578952],"content":"Where(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Where(Of KeyValuePair(Of TKey, TValue))","pos":[0,39]}]},{"pos":[579067,579068],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[579118,579122],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[579181,579184]},{"pos":[579269,579281],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[579368,579371]},{"pos":[579405,579409],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[579440,579441]},{"pos":[579473,579479],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[579511,579512],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[579540,579541]},{"pos":[579595,579600],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[579660,579661]},{"pos":[579717,579724],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[579785,579786],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[579813,579814],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[580669,580792],"content":"Zip<KeyValuePair<TKey, TValue>, TSecond, TResult>(IEnumerable<TSecond>, Func<KeyValuePair<TKey, TValue>, TSecond, TResult>)","needQuote":true,"nodes":[{"content":"Zip&lt;KeyValuePair&lt;TKey, TValue&gt;, TSecond, TResult&gt;(IEnumerable&lt;TSecond&gt;, Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TSecond, TResult&gt;)","pos":[0,123],"source":"Zip<KeyValuePair<TKey, TValue>, TSecond, TResult>(IEnumerable<TSecond>, Func<KeyValuePair<TKey, TValue>, TSecond, TResult>)"}]},{"pos":[581589,581638],"content":"Zip<KeyValuePair<TKey, TValue>, TSecond, TResult>","needQuote":true,"nodes":[{"content":"Zip&lt;KeyValuePair&lt;TKey, TValue&gt;, TSecond, TResult&gt;","pos":[0,49],"source":"Zip<KeyValuePair<TKey, TValue>, TSecond, TResult>"}]},{"pos":[581763,581764],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[581841,581852],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[581937,581938],"content":"<","needQuote":true,"nodes":[]},{"pos":[581965,581972],"content":"TSecond","needQuote":true,"nodes":[{"content":"TSecond","pos":[0,7]}]},{"content":",","pos":[582038,582039]},{"pos":[582094,582098],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[582156,582157],"content":"<","needQuote":true,"nodes":[]},{"pos":[582235,582247],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[582333,582334],"content":"<","needQuote":true,"nodes":[]},{"pos":[582361,582365],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[582396,582397]},{"pos":[582429,582435],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[582500,582501]},{"pos":[582533,582540],"content":"TSecond","needQuote":true,"nodes":[{"content":"TSecond","pos":[0,7]}]},{"content":",","pos":[582574,582575]},{"pos":[582607,582614],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[582679,582680],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[582827,582882],"content":"Zip(Of KeyValuePair(Of TKey, TValue), TSecond, TResult)","needQuote":true,"nodes":[{"content":"Zip(Of KeyValuePair(Of TKey, TValue), TSecond, TResult)","pos":[0,55]}]},{"pos":[583013,583014],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[583091,583102],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[583188,583191]},{"pos":[583225,583232],"content":"TSecond","needQuote":true,"nodes":[{"content":"TSecond","pos":[0,7]}]},{"pos":[583265,583266],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[583294,583295]},{"pos":[583350,583354],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[583413,583416]},{"pos":[583501,583513],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[583600,583603]},{"pos":[583637,583641],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[583672,583673]},{"pos":[583705,583711],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[583743,583744],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[583772,583773]},{"pos":[583805,583812],"content":"TSecond","needQuote":true,"nodes":[{"content":"TSecond","pos":[0,7]}]},{"content":",","pos":[583846,583847]},{"pos":[583879,583886],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[583919,583920],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[583947,583948],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[584486,584492],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[584633,584658],"content":"IDictionary<TKey, TValue>","needQuote":true,"nodes":[{"content":"IDictionary&lt;TKey, TValue&gt;","pos":[0,25],"source":"IDictionary<TKey, TValue>"}]},{"pos":[584910,584921],"content":"IDictionary","needQuote":true,"nodes":[{"content":"IDictionary","pos":[0,11]}]},{"pos":[584985,584986],"content":"<","needQuote":true,"nodes":[]},{"pos":[585013,585017],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[585048,585049]},{"pos":[585081,585087],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[585212,585223],"content":"IDictionary","needQuote":true,"nodes":[{"content":"IDictionary","pos":[0,11]}]},{"content":"(Of","pos":[585288,585291]},{"pos":[585325,585329],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[585360,585361]},{"pos":[585393,585399],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[585431,585432],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[585671,585685],"content":"ICollection<T>","needQuote":true,"nodes":[{"content":"ICollection&lt;T&gt;","pos":[0,14],"source":"ICollection<T>"}]},{"pos":[585904,585915],"content":"ICollection","needQuote":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"pos":[585979,585980],"content":"<","needQuote":true,"nodes":[]},{"pos":[586007,586008],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[586128,586139],"content":"ICollection","needQuote":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"content":"(Of","pos":[586204,586207]},{"pos":[586241,586242],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[586269,586270],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[586495,586528],"content":"IReadOnlyDictionary<TKey, TValue>","needQuote":true,"nodes":[{"content":"IReadOnlyDictionary&lt;TKey, TValue&gt;","pos":[0,33],"source":"IReadOnlyDictionary<TKey, TValue>"}]},{"pos":[586812,586831],"content":"IReadOnlyDictionary","needQuote":true,"nodes":[{"content":"IReadOnlyDictionary","pos":[0,19]}]},{"pos":[586903,586904],"content":"<","needQuote":true,"nodes":[]},{"pos":[586931,586935],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[586966,586967]},{"pos":[586999,587005],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[587138,587157],"content":"IReadOnlyDictionary","needQuote":true,"nodes":[{"content":"IReadOnlyDictionary","pos":[0,19]}]},{"content":"(Of","pos":[587230,587233]},{"pos":[587267,587271],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[587302,587303]},{"pos":[587335,587341],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[587373,587374],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[587645,587667],"content":"IReadOnlyCollection<T>","needQuote":true,"nodes":[{"content":"IReadOnlyCollection&lt;T&gt;","pos":[0,22],"source":"IReadOnlyCollection<T>"}]},{"pos":[587918,587937],"content":"IReadOnlyCollection","needQuote":true,"nodes":[{"content":"IReadOnlyCollection","pos":[0,19]}]},{"pos":[588009,588010],"content":"<","needQuote":true,"nodes":[]},{"pos":[588037,588038],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[588166,588185],"content":"IReadOnlyCollection","needQuote":true,"nodes":[{"content":"IReadOnlyCollection","pos":[0,19]}]},{"content":"(Of","pos":[588258,588261]},{"pos":[588295,588296],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[588323,588324],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[588565,588579],"content":"IEnumerable<T>","needQuote":true,"nodes":[{"content":"IEnumerable&lt;T&gt;","pos":[0,14],"source":"IEnumerable<T>"}]},{"pos":[588798,588809],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[588873,588874],"content":"<","needQuote":true,"nodes":[]},{"pos":[588901,588902],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[589022,589033],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[589098,589101]},{"pos":[589135,589136],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[589163,589164],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[589359,589377],"content":"System.Collections","needQuote":true,"nodes":[{"content":"System.Collections","pos":[0,18]}]},{"pos":[589578,589602],"content":"AsQueryable(IEnumerable)","needQuote":true,"nodes":[{"content":"AsQueryable(IEnumerable)","pos":[0,24]}]},{"pos":[589781,589792],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[589851,589852],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[589919,589930],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[590007,590008],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[590121,590132],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[590191,590192],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[590259,590270],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[590347,590348],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[590576,590585],"content":"Queryable","needQuote":true,"nodes":[{"content":"Queryable","pos":[0,9]}]},{"pos":[590799,590843],"content":"AsQueryable<TElement>(IEnumerable<TElement>)","needQuote":true,"nodes":[{"content":"AsQueryable&lt;TElement&gt;(IEnumerable&lt;TElement&gt;)","pos":[0,44],"source":"AsQueryable<TElement>(IEnumerable<TElement>)"}]},{"pos":[591243,591264],"content":"AsQueryable<TElement>","needQuote":true,"nodes":[{"content":"AsQueryable&lt;TElement&gt;","pos":[0,21],"source":"AsQueryable<TElement>"}]},{"pos":[591333,591334],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[591411,591422],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[591507,591508],"content":"<","needQuote":true,"nodes":[]},{"pos":[591535,591543],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[591609,591610],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[591739,591763],"content":"AsQueryable(Of TElement)","needQuote":true,"nodes":[{"content":"AsQueryable(Of TElement)","pos":[0,24]}]},{"pos":[591835,591836],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[591913,591924],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[592010,592013]},{"pos":[592047,592055],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[592089,592090],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[592117,592118],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[592491,592514],"content":"AsParallel(IEnumerable)","needQuote":true,"nodes":[{"content":"AsParallel(IEnumerable)","pos":[0,23]}]},{"pos":[592709,592719],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[592786,592787],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[592854,592865],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[592942,592943],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[593064,593074],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[593141,593142],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[593209,593220],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[593297,593298],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[593551,593569],"content":"ParallelEnumerable","needQuote":true,"nodes":[{"content":"ParallelEnumerable","pos":[0,18]}]},{"pos":[593818,593859],"content":"AsParallel<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"AsParallel&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,41],"source":"AsParallel<TSource>(IEnumerable<TSource>)"}]},{"pos":[594276,594295],"content":"AsParallel<TSource>","needQuote":true,"nodes":[{"content":"AsParallel&lt;TSource&gt;","pos":[0,19],"source":"AsParallel<TSource>"}]},{"pos":[594371,594372],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[594449,594460],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[594545,594546],"content":"<","needQuote":true,"nodes":[]},{"pos":[594573,594580],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[594645,594646],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[594783,594805],"content":"AsParallel(Of TSource)","needQuote":true,"nodes":[{"content":"AsParallel(Of TSource)","pos":[0,22]}]},{"pos":[594884,594885],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[594962,594973],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[595059,595062]},{"pos":[595096,595103],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[595136,595137],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[595164,595165],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[595590,595663],"content":"Aggregate<TSource>(IEnumerable<TSource>, Func<TSource, TSource, TSource>)","needQuote":true,"nodes":[{"content":"Aggregate&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TSource, TSource&gt;)","pos":[0,73],"source":"Aggregate<TSource>(IEnumerable<TSource>, Func<TSource, TSource, TSource>)"}]},{"pos":[596196,596214],"content":"Aggregate<TSource>","needQuote":true,"nodes":[{"content":"Aggregate&lt;TSource&gt;","pos":[0,18],"source":"Aggregate<TSource>"}]},{"pos":[596281,596282],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[596359,596370],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[596455,596456],"content":"<","needQuote":true,"nodes":[]},{"pos":[596483,596490],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[596556,596557]},{"pos":[596612,596616],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[596674,596675],"content":"<","needQuote":true,"nodes":[]},{"pos":[596702,596709],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[596743,596744]},{"pos":[596776,596783],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[596817,596818]},{"pos":[596850,596857],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[596922,596923],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[597076,597097],"content":"Aggregate(Of TSource)","needQuote":true,"nodes":[{"content":"Aggregate(Of TSource)","pos":[0,21]}]},{"pos":[597167,597168],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[597245,597256],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[597342,597345]},{"pos":[597379,597386],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[597419,597420],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[597448,597449]},{"pos":[597504,597508],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[597567,597570]},{"pos":[597604,597611],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[597645,597646]},{"pos":[597678,597685],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[597719,597720]},{"pos":[597752,597759],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[597792,597793],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[597820,597821],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[598253,598263],"content":"Enumerable","needQuote":true,"nodes":[{"content":"Enumerable","pos":[0,10]}]},{"pos":[598508,598615],"content":"Aggregate<TSource, TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>)","needQuote":true,"nodes":[{"content":"Aggregate&lt;TSource, TAccumulate&gt;(IEnumerable&lt;TSource&gt;, TAccumulate, Func&lt;TAccumulate, TSource, TAccumulate&gt;)","pos":[0,107],"source":"Aggregate<TSource, TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>)"}]},{"pos":[599254,599285],"content":"Aggregate<TSource, TAccumulate>","needQuote":true,"nodes":[{"content":"Aggregate&lt;TSource, TAccumulate&gt;","pos":[0,31],"source":"Aggregate<TSource, TAccumulate>"}]},{"pos":[599365,599366],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[599443,599454],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[599539,599540],"content":"<","needQuote":true,"nodes":[]},{"pos":[599567,599574],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[599640,599641]},{"pos":[599673,599684],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[599722,599723]},{"pos":[599778,599782],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[599840,599841],"content":"<","needQuote":true,"nodes":[]},{"pos":[599868,599879],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[599917,599918]},{"pos":[599950,599957],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[599991,599992]},{"pos":[600024,600035],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"pos":[600104,600105],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[600262,600296],"content":"Aggregate(Of TSource, TAccumulate)","needQuote":true,"nodes":[{"content":"Aggregate(Of TSource, TAccumulate)","pos":[0,34]}]},{"pos":[600379,600380],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[600457,600468],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[600554,600557]},{"pos":[600591,600598],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[600631,600632],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[600660,600661]},{"pos":[600693,600704],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[600742,600743]},{"pos":[600798,600802],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[600861,600864]},{"pos":[600898,600909],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[600947,600948]},{"pos":[600980,600987],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[601021,601022]},{"pos":[601054,601065],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"pos":[601102,601103],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[601130,601131],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[601720,601864],"content":"Aggregate<TSource, TAccumulate, TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>, Func<TAccumulate, TResult>)","needQuote":true,"nodes":[{"content":"Aggregate&lt;TSource, TAccumulate, TResult&gt;(IEnumerable&lt;TSource&gt;, TAccumulate, Func&lt;TAccumulate, TSource, TAccumulate&gt;, Func&lt;TAccumulate, TResult&gt;)","pos":[0,144],"source":"Aggregate<TSource, TAccumulate, TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>, Func<TAccumulate, TResult>)"}]},{"pos":[602655,602695],"content":"Aggregate<TSource, TAccumulate, TResult>","needQuote":true,"nodes":[{"content":"Aggregate&lt;TSource, TAccumulate, TResult&gt;","pos":[0,40],"source":"Aggregate<TSource, TAccumulate, TResult>"}]},{"pos":[602784,602785],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[602862,602873],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[602958,602959],"content":"<","needQuote":true,"nodes":[]},{"pos":[602986,602993],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[603059,603060]},{"pos":[603092,603103],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[603141,603142]},{"pos":[603197,603201],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[603259,603260],"content":"<","needQuote":true,"nodes":[]},{"pos":[603287,603298],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[603336,603337]},{"pos":[603369,603376],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[603410,603411]},{"pos":[603443,603454],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[603524,603525]},{"pos":[603580,603584],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[603642,603643],"content":"<","needQuote":true,"nodes":[]},{"pos":[603670,603681],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[603719,603720]},{"pos":[603752,603759],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[603824,603825],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[604003,604046],"content":"Aggregate(Of TSource, TAccumulate, TResult)","needQuote":true,"nodes":[{"content":"Aggregate(Of TSource, TAccumulate, TResult)","pos":[0,43]}]},{"pos":[604138,604139],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[604216,604227],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[604313,604316]},{"pos":[604350,604357],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[604390,604391],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[604419,604420]},{"pos":[604452,604463],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[604501,604502]},{"pos":[604557,604561],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[604620,604623]},{"pos":[604657,604668],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[604706,604707]},{"pos":[604739,604746],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[604780,604781]},{"pos":[604813,604824],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"pos":[604861,604862],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[604890,604891]},{"pos":[604946,604950],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[605009,605012]},{"pos":[605046,605057],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[605095,605096]},{"pos":[605128,605135],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[605168,605169],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[605196,605197],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[605860,605918],"content":"All<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"All&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,58],"source":"All<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[606421,606433],"content":"All<TSource>","needQuote":true,"nodes":[{"content":"All&lt;TSource&gt;","pos":[0,12],"source":"All<TSource>"}]},{"pos":[606494,606495],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[606572,606583],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[606668,606669],"content":"<","needQuote":true,"nodes":[]},{"pos":[606696,606703],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[606769,606770]},{"pos":[606825,606829],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[606887,606888],"content":"<","needQuote":true,"nodes":[]},{"pos":[606915,606922],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[606956,606957]},{"pos":[607013,607020],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[607113,607114],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[607268,607283],"content":"All(Of TSource)","needQuote":true,"nodes":[{"content":"All(Of TSource)","pos":[0,15]}]},{"pos":[607347,607348],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[607425,607436],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[607522,607525]},{"pos":[607559,607566],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[607599,607600],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[607628,607629]},{"pos":[607684,607688],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[607747,607750]},{"pos":[607784,607791],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[607825,607826]},{"pos":[607882,607889],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[607950,607951],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[607978,607979],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[608411,608445],"content":"Any<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Any&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,34],"source":"Any<TSource>(IEnumerable<TSource>)"}]},{"pos":[608810,608822],"content":"Any<TSource>","needQuote":true,"nodes":[{"content":"Any&lt;TSource&gt;","pos":[0,12],"source":"Any<TSource>"}]},{"pos":[608883,608884],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[608961,608972],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[609057,609058],"content":"<","needQuote":true,"nodes":[]},{"pos":[609085,609092],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[609157,609158],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[609280,609295],"content":"Any(Of TSource)","needQuote":true,"nodes":[{"content":"Any(Of TSource)","pos":[0,15]}]},{"pos":[609359,609360],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[609437,609448],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[609534,609537]},{"pos":[609571,609578],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[609611,609612],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[609639,609640],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[610021,610079],"content":"Any<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"Any&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,58],"source":"Any<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[610582,610594],"content":"Any<TSource>","needQuote":true,"nodes":[{"content":"Any&lt;TSource&gt;","pos":[0,12],"source":"Any<TSource>"}]},{"pos":[610655,610656],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[610733,610744],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[610829,610830],"content":"<","needQuote":true,"nodes":[]},{"pos":[610857,610864],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[610930,610931]},{"pos":[610986,610990],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[611048,611049],"content":"<","needQuote":true,"nodes":[]},{"pos":[611076,611083],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[611117,611118]},{"pos":[611174,611181],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[611274,611275],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[611429,611444],"content":"Any(Of TSource)","needQuote":true,"nodes":[{"content":"Any(Of TSource)","pos":[0,15]}]},{"pos":[611508,611509],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[611586,611597],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[611683,611686]},{"pos":[611720,611727],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[611760,611761],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[611789,611790]},{"pos":[611845,611849],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[611908,611911]},{"pos":[611945,611952],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[611986,611987]},{"pos":[612043,612050],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[612111,612112],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[612139,612140],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[612581,612624],"content":"AsEnumerable<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"AsEnumerable&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,43],"source":"AsEnumerable<TSource>(IEnumerable<TSource>)"}]},{"pos":[613025,613046],"content":"AsEnumerable<TSource>","needQuote":true,"nodes":[{"content":"AsEnumerable&lt;TSource&gt;","pos":[0,21],"source":"AsEnumerable<TSource>"}]},{"pos":[613116,613117],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[613194,613205],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[613290,613291],"content":"<","needQuote":true,"nodes":[]},{"pos":[613318,613325],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[613390,613391],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[613522,613546],"content":"AsEnumerable(Of TSource)","needQuote":true,"nodes":[{"content":"AsEnumerable(Of TSource)","pos":[0,24]}]},{"pos":[613619,613620],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[613697,613708],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[613794,613797]},{"pos":[613831,613838],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[613871,613872],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[613899,613900],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[614312,614374],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Decimal&gt;)","pos":[0,62],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)"}]},{"pos":[614893,614909],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[614974,614975],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[615052,615063],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[615148,615149],"content":"<","needQuote":true,"nodes":[]},{"pos":[615176,615183],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[615249,615250]},{"pos":[615305,615309],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[615367,615368],"content":"<","needQuote":true,"nodes":[]},{"pos":[615395,615402],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[615436,615437]},{"pos":[615493,615500],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[615593,615594],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[615752,615771],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[615839,615840],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[615917,615928],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[616014,616017]},{"pos":[616051,616058],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[616091,616092],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[616120,616121]},{"pos":[616176,616180],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[616239,616242]},{"pos":[616276,616283],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[616317,616318]},{"pos":[616374,616381],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[616442,616443],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[616470,616471],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[616950,617011],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Double>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Double&gt;)","pos":[0,61],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Double>)"}]},{"pos":[617526,617542],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[617607,617608],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[617685,617696],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[617781,617782],"content":"<","needQuote":true,"nodes":[]},{"pos":[617809,617816],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[617882,617883]},{"pos":[617938,617942],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[618000,618001],"content":"<","needQuote":true,"nodes":[]},{"pos":[618028,618035],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[618069,618070]},{"pos":[618125,618131],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[618223,618224],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[618381,618400],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[618468,618469],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[618546,618557],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[618643,618646]},{"pos":[618680,618687],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[618720,618721],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[618749,618750]},{"pos":[618805,618809],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[618868,618871]},{"pos":[618905,618912],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[618946,618947]},{"pos":[619002,619008],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[619068,619069],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[619096,619097],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[619572,619632],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32&gt;)","pos":[0,60],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)"}]},{"pos":[620143,620159],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[620224,620225],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[620302,620313],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[620398,620399],"content":"<","needQuote":true,"nodes":[]},{"pos":[620426,620433],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[620499,620500]},{"pos":[620555,620559],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[620617,620618],"content":"<","needQuote":true,"nodes":[]},{"pos":[620645,620652],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[620686,620687]},{"pos":[620741,620746],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[620837,620838],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[620994,621013],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[621081,621082],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[621159,621170],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[621256,621259]},{"pos":[621293,621300],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[621333,621334],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[621362,621363]},{"pos":[621418,621422],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[621481,621484]},{"pos":[621518,621525],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[621559,621560]},{"pos":[621614,621619],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[621678,621679],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[621706,621707],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[622179,622239],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int64&gt;)","pos":[0,60],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)"}]},{"pos":[622750,622766],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[622831,622832],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[622909,622920],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[623005,623006],"content":"<","needQuote":true,"nodes":[]},{"pos":[623033,623040],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[623106,623107]},{"pos":[623162,623166],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[623224,623225],"content":"<","needQuote":true,"nodes":[]},{"pos":[623252,623259],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[623293,623294]},{"pos":[623348,623353],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[623444,623445],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[623601,623620],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[623688,623689],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[623766,623777],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[623863,623866]},{"pos":[623900,623907],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[623940,623941],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[623969,623970]},{"pos":[624025,624029],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[624088,624091]},{"pos":[624125,624132],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[624166,624167]},{"pos":[624221,624226],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[624285,624286],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[624313,624314],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[624805,624877],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Decimal&gt;&gt;)","pos":[0,72],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)"}]},{"pos":[625463,625479],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[625544,625545],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[625622,625633],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[625718,625719],"content":"<","needQuote":true,"nodes":[]},{"pos":[625746,625753],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[625819,625820]},{"pos":[625875,625879],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[625937,625938],"content":"<","needQuote":true,"nodes":[]},{"pos":[625965,625972],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[626006,626007]},{"pos":[626066,626074],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[626136,626137],"content":"<","needQuote":true,"nodes":[]},{"pos":[626188,626195],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[626320,626321],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[626496,626515],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[626583,626584],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[626661,626672],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[626758,626761]},{"pos":[626795,626802],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[626835,626836],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[626864,626865]},{"pos":[626920,626924],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[626983,626986]},{"pos":[627020,627027],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[627061,627062]},{"pos":[627121,627129],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[627192,627195]},{"pos":[627253,627260],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[627321,627322],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[627349,627350],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[627377,627378],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[627914,627985],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Double&gt;&gt;)","pos":[0,71],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)"}]},{"pos":[628567,628583],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[628648,628649],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[628726,628737],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[628822,628823],"content":"<","needQuote":true,"nodes":[]},{"pos":[628850,628857],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[628923,628924]},{"pos":[628979,628983],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[629041,629042],"content":"<","needQuote":true,"nodes":[]},{"pos":[629069,629076],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[629110,629111]},{"pos":[629170,629178],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[629240,629241],"content":"<","needQuote":true,"nodes":[]},{"pos":[629291,629297],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[629421,629422],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[629596,629615],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[629683,629684],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[629761,629772],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[629858,629861]},{"pos":[629895,629902],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[629935,629936],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[629964,629965]},{"pos":[630020,630024],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[630083,630086]},{"pos":[630120,630127],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[630161,630162]},{"pos":[630221,630229],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[630292,630295]},{"pos":[630352,630358],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[630418,630419],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[630446,630447],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[630474,630475],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[631007,631077],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Int32&gt;&gt;)","pos":[0,70],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)"}]},{"pos":[631655,631671],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[631736,631737],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[631814,631825],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[631910,631911],"content":"<","needQuote":true,"nodes":[]},{"pos":[631938,631945],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[632011,632012]},{"pos":[632067,632071],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[632129,632130],"content":"<","needQuote":true,"nodes":[]},{"pos":[632157,632164],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[632198,632199]},{"pos":[632258,632266],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[632328,632329],"content":"<","needQuote":true,"nodes":[]},{"pos":[632378,632383],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[632506,632507],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[632680,632699],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[632767,632768],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[632845,632856],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[632942,632945]},{"pos":[632979,632986],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[633019,633020],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[633048,633049]},{"pos":[633104,633108],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[633167,633170]},{"pos":[633204,633211],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[633245,633246]},{"pos":[633305,633313],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[633376,633379]},{"pos":[633435,633440],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[633499,633500],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[633527,633528],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[633555,633556],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[634085,634155],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Int64&gt;&gt;)","pos":[0,70],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)"}]},{"pos":[634733,634749],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[634814,634815],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[634892,634903],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[634988,634989],"content":"<","needQuote":true,"nodes":[]},{"pos":[635016,635023],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[635089,635090]},{"pos":[635145,635149],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[635207,635208],"content":"<","needQuote":true,"nodes":[]},{"pos":[635235,635242],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[635276,635277]},{"pos":[635336,635344],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[635406,635407],"content":"<","needQuote":true,"nodes":[]},{"pos":[635456,635461],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[635584,635585],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[635758,635777],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[635845,635846],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[635923,635934],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[636020,636023]},{"pos":[636057,636064],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[636097,636098],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[636126,636127]},{"pos":[636182,636186],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[636245,636248]},{"pos":[636282,636289],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[636323,636324]},{"pos":[636383,636391],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[636454,636457]},{"pos":[636513,636518],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[636577,636578],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[636605,636606],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[636633,636634],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[637164,637235],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Single&gt;&gt;)","pos":[0,71],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)"}]},{"pos":[637817,637833],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[637898,637899],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[637976,637987],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[638072,638073],"content":"<","needQuote":true,"nodes":[]},{"pos":[638100,638107],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[638173,638174]},{"pos":[638229,638233],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[638291,638292],"content":"<","needQuote":true,"nodes":[]},{"pos":[638319,638326],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[638360,638361]},{"pos":[638420,638428],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[638490,638491],"content":"<","needQuote":true,"nodes":[]},{"pos":[638541,638547],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[638671,638672],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[638846,638865],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[638933,638934],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[639011,639022],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[639108,639111]},{"pos":[639145,639152],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[639185,639186],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[639214,639215]},{"pos":[639270,639274],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[639333,639336]},{"pos":[639370,639377],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[639411,639412]},{"pos":[639471,639479],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[639542,639545]},{"pos":[639602,639608],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[639668,639669],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[639696,639697],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[639724,639725],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[640241,640302],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Single>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Single&gt;)","pos":[0,61],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Single>)"}]},{"pos":[640817,640833],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[640898,640899],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[640976,640987],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[641072,641073],"content":"<","needQuote":true,"nodes":[]},{"pos":[641100,641107],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[641173,641174]},{"pos":[641229,641233],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[641291,641292],"content":"<","needQuote":true,"nodes":[]},{"pos":[641319,641326],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[641360,641361]},{"pos":[641416,641422],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[641514,641515],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[641672,641691],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[641759,641760],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[641837,641848],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[641934,641937]},{"pos":[641971,641978],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[642011,642012],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[642040,642041]},{"pos":[642096,642100],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[642159,642162]},{"pos":[642196,642203],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[642237,642238]},{"pos":[642293,642299],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[642359,642360],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[642387,642388],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[642817,642843],"content":"Cast<TResult>(IEnumerable)","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;(IEnumerable)","pos":[0,26],"source":"Cast<TResult>(IEnumerable)"}]},{"pos":[643150,643163],"content":"Cast<TResult>","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;","pos":[0,13],"source":"Cast<TResult>"}]},{"pos":[643225,643226],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[643293,643304],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[643381,643382],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[643492,643508],"content":"Cast(Of TResult)","needQuote":true,"nodes":[{"content":"Cast(Of TResult)","pos":[0,16]}]},{"pos":[643573,643574],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[643641,643652],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[643729,643730],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[644095,644154],"content":"Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Concat&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;)","pos":[0,59],"source":"Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)"}]},{"pos":[644701,644716],"content":"Concat<TSource>","needQuote":true,"nodes":[{"content":"Concat&lt;TSource&gt;","pos":[0,15],"source":"Concat<TSource>"}]},{"pos":[644780,644781],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[644858,644869],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[644954,644955],"content":"<","needQuote":true,"nodes":[]},{"pos":[644982,644989],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[645055,645056]},{"pos":[645138,645149],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[645234,645235],"content":"<","needQuote":true,"nodes":[]},{"pos":[645262,645269],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[645334,645335],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[645504,645522],"content":"Concat(Of TSource)","needQuote":true,"nodes":[{"content":"Concat(Of TSource)","pos":[0,18]}]},{"pos":[645589,645590],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[645667,645678],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[645764,645767]},{"pos":[645801,645808],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[645841,645842],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[645870,645871]},{"pos":[645953,645964],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[646050,646053]},{"pos":[646087,646094],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[646127,646128],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[646155,646156],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[646612,646658],"content":"Append<TSource>(IEnumerable<TSource>, TSource)","needQuote":true,"nodes":[{"content":"Append&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, TSource)","pos":[0,46],"source":"Append<TSource>(IEnumerable<TSource>, TSource)"}]},{"pos":[647066,647081],"content":"Append<TSource>","needQuote":true,"nodes":[{"content":"Append&lt;TSource&gt;","pos":[0,15],"source":"Append<TSource>"}]},{"pos":[647145,647146],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[647223,647234],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[647319,647320],"content":"<","needQuote":true,"nodes":[]},{"pos":[647347,647354],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[647420,647421]},{"pos":[647453,647460],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[647493,647494],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[647623,647641],"content":"Append(Of TSource)","needQuote":true,"nodes":[{"content":"Append(Of TSource)","pos":[0,18]}]},{"pos":[647708,647709],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[647786,647797],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[647883,647886]},{"pos":[647920,647927],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[647960,647961],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[647989,647990]},{"pos":[648022,648029],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[648062,648063],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[648451,648498],"content":"Prepend<TSource>(IEnumerable<TSource>, TSource)","needQuote":true,"nodes":[{"content":"Prepend&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, TSource)","pos":[0,47],"source":"Prepend<TSource>(IEnumerable<TSource>, TSource)"}]},{"pos":[648910,648926],"content":"Prepend<TSource>","needQuote":true,"nodes":[{"content":"Prepend&lt;TSource&gt;","pos":[0,16],"source":"Prepend<TSource>"}]},{"pos":[648991,648992],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[649069,649080],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[649165,649166],"content":"<","needQuote":true,"nodes":[]},{"pos":[649193,649200],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[649266,649267]},{"pos":[649299,649306],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[649339,649340],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[649470,649489],"content":"Prepend(Of TSource)","needQuote":true,"nodes":[{"content":"Prepend(Of TSource)","pos":[0,19]}]},{"pos":[649557,649558],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[649635,649646],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[649732,649735]},{"pos":[649769,649776],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[649809,649810],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[649838,649839]},{"pos":[649871,649878],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[649911,649912],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[650304,650352],"content":"Contains<TSource>(IEnumerable<TSource>, TSource)","needQuote":true,"nodes":[{"content":"Contains&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, TSource)","pos":[0,48],"source":"Contains<TSource>(IEnumerable<TSource>, TSource)"}]},{"pos":[650768,650785],"content":"Contains<TSource>","needQuote":true,"nodes":[{"content":"Contains&lt;TSource&gt;","pos":[0,17],"source":"Contains<TSource>"}]},{"pos":[650851,650852],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[650929,650940],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[651025,651026],"content":"<","needQuote":true,"nodes":[]},{"pos":[651053,651060],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[651126,651127]},{"pos":[651159,651166],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[651199,651200],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[651331,651351],"content":"Contains(Of TSource)","needQuote":true,"nodes":[{"content":"Contains(Of TSource)","pos":[0,20]}]},{"pos":[651420,651421],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[651498,651509],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[651595,651598]},{"pos":[651632,651639],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[651672,651673],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[651701,651702]},{"pos":[651734,651741],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[651774,651775],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[652220,652296],"content":"Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)","needQuote":true,"nodes":[{"content":"Contains&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, TSource, IEqualityComparer&lt;TSource&gt;)","pos":[0,76],"source":"Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)"}]},{"pos":[652906,652923],"content":"Contains<TSource>","needQuote":true,"nodes":[{"content":"Contains&lt;TSource&gt;","pos":[0,17],"source":"Contains<TSource>"}]},{"pos":[652989,652990],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[653067,653078],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[653163,653164],"content":"<","needQuote":true,"nodes":[]},{"pos":[653191,653198],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[653264,653265]},{"pos":[653297,653304],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[653338,653339]},{"pos":[653427,653444],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[653535,653536],"content":"<","needQuote":true,"nodes":[]},{"pos":[653563,653570],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[653635,653636],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[653817,653837],"content":"Contains(Of TSource)","needQuote":true,"nodes":[{"content":"Contains(Of TSource)","pos":[0,20]}]},{"pos":[653906,653907],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[653984,653995],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[654081,654084]},{"pos":[654118,654125],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[654158,654159],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[654187,654188]},{"pos":[654220,654227],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[654261,654262]},{"pos":[654350,654367],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[654459,654462]},{"pos":[654496,654503],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[654536,654537],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[654564,654565],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[655062,655098],"content":"Count<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Count&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,36],"source":"Count<TSource>(IEnumerable<TSource>)"}]},{"pos":[655471,655485],"content":"Count<TSource>","needQuote":true,"nodes":[{"content":"Count&lt;TSource&gt;","pos":[0,14],"source":"Count<TSource>"}]},{"pos":[655548,655549],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[655626,655637],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[655722,655723],"content":"<","needQuote":true,"nodes":[]},{"pos":[655750,655757],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[655822,655823],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[655947,655964],"content":"Count(Of TSource)","needQuote":true,"nodes":[{"content":"Count(Of TSource)","pos":[0,17]}]},{"pos":[656030,656031],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[656108,656119],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[656205,656208]},{"pos":[656242,656249],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[656282,656283],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[656310,656311],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[656700,656760],"content":"Count<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"Count&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,60],"source":"Count<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[657271,657285],"content":"Count<TSource>","needQuote":true,"nodes":[{"content":"Count&lt;TSource&gt;","pos":[0,14],"source":"Count<TSource>"}]},{"pos":[657348,657349],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[657426,657437],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[657522,657523],"content":"<","needQuote":true,"nodes":[]},{"pos":[657550,657557],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[657623,657624]},{"pos":[657679,657683],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[657741,657742],"content":"<","needQuote":true,"nodes":[]},{"pos":[657769,657776],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[657810,657811]},{"pos":[657867,657874],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[657967,657968],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[658124,658141],"content":"Count(Of TSource)","needQuote":true,"nodes":[{"content":"Count(Of TSource)","pos":[0,17]}]},{"pos":[658207,658208],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[658285,658296],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[658382,658385]},{"pos":[658419,658426],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[658459,658460],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[658488,658489]},{"pos":[658544,658548],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[658607,658610]},{"pos":[658644,658651],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[658685,658686]},{"pos":[658742,658749],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[658810,658811],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[658838,658839],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[659288,659333],"content":"DefaultIfEmpty<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"DefaultIfEmpty&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,45],"source":"DefaultIfEmpty<TSource>(IEnumerable<TSource>)"}]},{"pos":[659742,659765],"content":"DefaultIfEmpty<TSource>","needQuote":true,"nodes":[{"content":"DefaultIfEmpty&lt;TSource&gt;","pos":[0,23],"source":"DefaultIfEmpty<TSource>"}]},{"pos":[659837,659838],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[659915,659926],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[660011,660012],"content":"<","needQuote":true,"nodes":[]},{"pos":[660039,660046],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[660111,660112],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[660245,660271],"content":"DefaultIfEmpty(Of TSource)","needQuote":true,"nodes":[{"content":"DefaultIfEmpty(Of TSource)","pos":[0,26]}]},{"pos":[660346,660347],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[660424,660435],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[660521,660524]},{"pos":[660558,660565],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[660598,660599],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[660626,660627],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[661024,661078],"content":"DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)","needQuote":true,"nodes":[{"content":"DefaultIfEmpty&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, TSource)","pos":[0,54],"source":"DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)"}]},{"pos":[661518,661541],"content":"DefaultIfEmpty<TSource>","needQuote":true,"nodes":[{"content":"DefaultIfEmpty&lt;TSource&gt;","pos":[0,23],"source":"DefaultIfEmpty<TSource>"}]},{"pos":[661613,661614],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[661691,661702],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[661787,661788],"content":"<","needQuote":true,"nodes":[]},{"pos":[661815,661822],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[661888,661889]},{"pos":[661921,661928],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[661961,661962],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[662099,662125],"content":"DefaultIfEmpty(Of TSource)","needQuote":true,"nodes":[{"content":"DefaultIfEmpty(Of TSource)","pos":[0,26]}]},{"pos":[662200,662201],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[662278,662289],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[662375,662378]},{"pos":[662412,662419],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[662452,662453],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[662481,662482]},{"pos":[662514,662521],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[662554,662555],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[662964,663003],"content":"Distinct<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Distinct&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,39],"source":"Distinct<TSource>(IEnumerable<TSource>)"}]},{"pos":[663388,663405],"content":"Distinct<TSource>","needQuote":true,"nodes":[{"content":"Distinct&lt;TSource&gt;","pos":[0,17],"source":"Distinct<TSource>"}]},{"pos":[663471,663472],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[663549,663560],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[663645,663646],"content":"<","needQuote":true,"nodes":[]},{"pos":[663673,663680],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[663745,663746],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[663873,663893],"content":"Distinct(Of TSource)","needQuote":true,"nodes":[{"content":"Distinct(Of TSource)","pos":[0,20]}]},{"pos":[663962,663963],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[664040,664051],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[664137,664140]},{"pos":[664174,664181],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[664214,664215],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[664242,664243],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[664662,664729],"content":"Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)","needQuote":true,"nodes":[{"content":"Distinct&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEqualityComparer&lt;TSource&gt;)","pos":[0,67],"source":"Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)"}]},{"pos":[665308,665325],"content":"Distinct<TSource>","needQuote":true,"nodes":[{"content":"Distinct&lt;TSource&gt;","pos":[0,17],"source":"Distinct<TSource>"}]},{"pos":[665391,665392],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[665469,665480],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[665565,665566],"content":"<","needQuote":true,"nodes":[]},{"pos":[665593,665600],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[665666,665667]},{"pos":[665755,665772],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[665863,665864],"content":"<","needQuote":true,"nodes":[]},{"pos":[665891,665898],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[665963,665964],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[666141,666161],"content":"Distinct(Of TSource)","needQuote":true,"nodes":[{"content":"Distinct(Of TSource)","pos":[0,20]}]},{"pos":[666230,666231],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[666308,666319],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[666405,666408]},{"pos":[666442,666449],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[666482,666483],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[666511,666512]},{"pos":[666600,666617],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[666709,666712]},{"pos":[666746,666753],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[666786,666787],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[666814,666815],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[667307,667354],"content":"ElementAt<TSource>(IEnumerable<TSource>, Int32)","needQuote":true,"nodes":[{"content":"ElementAt&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Int32)","pos":[0,47],"source":"ElementAt<TSource>(IEnumerable<TSource>, Int32)"}]},{"pos":[667791,667809],"content":"ElementAt<TSource>","needQuote":true,"nodes":[{"content":"ElementAt&lt;TSource&gt;","pos":[0,18],"source":"ElementAt<TSource>"}]},{"pos":[667876,667877],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[667954,667965],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[668050,668051],"content":"<","needQuote":true,"nodes":[]},{"pos":[668078,668085],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[668151,668152]},{"pos":[668206,668211],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[668270,668271],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[668412,668433],"content":"ElementAt(Of TSource)","needQuote":true,"nodes":[{"content":"ElementAt(Of TSource)","pos":[0,21]}]},{"pos":[668503,668504],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[668581,668592],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[668678,668681]},{"pos":[668715,668722],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[668755,668756],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[668784,668785]},{"pos":[668839,668844],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[668903,668904],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[669326,669382],"content":"ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)","needQuote":true,"nodes":[{"content":"ElementAtOrDefault&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Int32)","pos":[0,56],"source":"ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)"}]},{"pos":[669855,669882],"content":"ElementAtOrDefault<TSource>","needQuote":true,"nodes":[{"content":"ElementAtOrDefault&lt;TSource&gt;","pos":[0,27],"source":"ElementAtOrDefault<TSource>"}]},{"pos":[669958,669959],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[670036,670047],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[670132,670133],"content":"<","needQuote":true,"nodes":[]},{"pos":[670160,670167],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[670233,670234]},{"pos":[670288,670293],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[670352,670353],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[670503,670533],"content":"ElementAtOrDefault(Of TSource)","needQuote":true,"nodes":[{"content":"ElementAtOrDefault(Of TSource)","pos":[0,30]}]},{"pos":[670612,670613],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[670690,670701],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[670787,670790]},{"pos":[670824,670831],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[670864,670865],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[670893,670894]},{"pos":[670948,670953],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[671012,671013],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[671481,671540],"content":"Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Except&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;)","pos":[0,59],"source":"Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)"}]},{"pos":[672087,672102],"content":"Except<TSource>","needQuote":true,"nodes":[{"content":"Except&lt;TSource&gt;","pos":[0,15],"source":"Except<TSource>"}]},{"pos":[672166,672167],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[672244,672255],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[672340,672341],"content":"<","needQuote":true,"nodes":[]},{"pos":[672368,672375],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[672441,672442]},{"pos":[672524,672535],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[672620,672621],"content":"<","needQuote":true,"nodes":[]},{"pos":[672648,672655],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[672720,672721],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[672890,672908],"content":"Except(Of TSource)","needQuote":true,"nodes":[{"content":"Except(Of TSource)","pos":[0,18]}]},{"pos":[672975,672976],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[673053,673064],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[673150,673153]},{"pos":[673187,673194],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[673227,673228],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[673256,673257]},{"pos":[673339,673350],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[673436,673439]},{"pos":[673473,673480],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[673513,673514],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[673541,673542],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[674088,674175],"content":"Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)","needQuote":true,"nodes":[{"content":"Except&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;, IEqualityComparer&lt;TSource&gt;)","pos":[0,87],"source":"Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)"}]},{"pos":[674916,674931],"content":"Except<TSource>","needQuote":true,"nodes":[{"content":"Except&lt;TSource&gt;","pos":[0,15],"source":"Except<TSource>"}]},{"pos":[674995,674996],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[675073,675084],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[675169,675170],"content":"<","needQuote":true,"nodes":[]},{"pos":[675197,675204],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[675270,675271]},{"pos":[675353,675364],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[675449,675450],"content":"<","needQuote":true,"nodes":[]},{"pos":[675477,675484],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[675550,675551]},{"pos":[675639,675656],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[675747,675748],"content":"<","needQuote":true,"nodes":[]},{"pos":[675775,675782],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[675847,675848],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[676067,676085],"content":"Except(Of TSource)","needQuote":true,"nodes":[{"content":"Except(Of TSource)","pos":[0,18]}]},{"pos":[676152,676153],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[676230,676241],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[676327,676330]},{"pos":[676364,676371],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[676404,676405],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[676433,676434]},{"pos":[676516,676527],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[676613,676616]},{"pos":[676650,676657],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[676690,676691],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[676719,676720]},{"pos":[676808,676825],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[676917,676920]},{"pos":[676954,676961],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[676994,676995],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[677022,677023],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[677583,677619],"content":"First<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"First&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,36],"source":"First<TSource>(IEnumerable<TSource>)"}]},{"pos":[677992,678006],"content":"First<TSource>","needQuote":true,"nodes":[{"content":"First&lt;TSource&gt;","pos":[0,14],"source":"First<TSource>"}]},{"pos":[678069,678070],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[678147,678158],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[678243,678244],"content":"<","needQuote":true,"nodes":[]},{"pos":[678271,678278],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[678343,678344],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[678468,678485],"content":"First(Of TSource)","needQuote":true,"nodes":[{"content":"First(Of TSource)","pos":[0,17]}]},{"pos":[678551,678552],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[678629,678640],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[678726,678729]},{"pos":[678763,678770],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[678803,678804],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[678831,678832],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[679221,679281],"content":"First<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"First&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,60],"source":"First<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[679792,679806],"content":"First<TSource>","needQuote":true,"nodes":[{"content":"First&lt;TSource&gt;","pos":[0,14],"source":"First<TSource>"}]},{"pos":[679869,679870],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[679947,679958],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[680043,680044],"content":"<","needQuote":true,"nodes":[]},{"pos":[680071,680078],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[680144,680145]},{"pos":[680200,680204],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[680262,680263],"content":"<","needQuote":true,"nodes":[]},{"pos":[680290,680297],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[680331,680332]},{"pos":[680388,680395],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[680488,680489],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[680645,680662],"content":"First(Of TSource)","needQuote":true,"nodes":[{"content":"First(Of TSource)","pos":[0,17]}]},{"pos":[680728,680729],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[680806,680817],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[680903,680906]},{"pos":[680940,680947],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[680980,680981],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[681009,681010]},{"pos":[681065,681069],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[681128,681131]},{"pos":[681165,681172],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[681206,681207]},{"pos":[681263,681270],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[681331,681332],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[681359,681360],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[681809,681854],"content":"FirstOrDefault<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"FirstOrDefault&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,45],"source":"FirstOrDefault<TSource>(IEnumerable<TSource>)"}]},{"pos":[682263,682286],"content":"FirstOrDefault<TSource>","needQuote":true,"nodes":[{"content":"FirstOrDefault&lt;TSource&gt;","pos":[0,23],"source":"FirstOrDefault<TSource>"}]},{"pos":[682358,682359],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[682436,682447],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[682532,682533],"content":"<","needQuote":true,"nodes":[]},{"pos":[682560,682567],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[682632,682633],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[682766,682792],"content":"FirstOrDefault(Of TSource)","needQuote":true,"nodes":[{"content":"FirstOrDefault(Of TSource)","pos":[0,26]}]},{"pos":[682867,682868],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[682945,682956],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[683042,683045]},{"pos":[683079,683086],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[683119,683120],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[683147,683148],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[683573,683642],"content":"FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"FirstOrDefault&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,69],"source":"FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[684189,684212],"content":"FirstOrDefault<TSource>","needQuote":true,"nodes":[{"content":"FirstOrDefault&lt;TSource&gt;","pos":[0,23],"source":"FirstOrDefault<TSource>"}]},{"pos":[684284,684285],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[684362,684373],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[684458,684459],"content":"<","needQuote":true,"nodes":[]},{"pos":[684486,684493],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[684559,684560]},{"pos":[684615,684619],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[684677,684678],"content":"<","needQuote":true,"nodes":[]},{"pos":[684705,684712],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[684746,684747]},{"pos":[684803,684810],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[684903,684904],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[685069,685095],"content":"FirstOrDefault(Of TSource)","needQuote":true,"nodes":[{"content":"FirstOrDefault(Of TSource)","pos":[0,26]}]},{"pos":[685170,685171],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[685248,685259],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[685345,685348]},{"pos":[685382,685389],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[685422,685423],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[685451,685452]},{"pos":[685507,685511],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[685570,685573]},{"pos":[685607,685614],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[685648,685649]},{"pos":[685705,685712],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[685773,685774],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[685801,685802],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[686292,686357],"content":"GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;)","pos":[0,65],"source":"GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)"}]},{"pos":[686860,686882],"content":"GroupBy<TSource, TKey>","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey&gt;","pos":[0,22],"source":"GroupBy<TSource, TKey>"}]},{"pos":[686953,686954],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[687031,687042],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[687127,687128],"content":"<","needQuote":true,"nodes":[]},{"pos":[687155,687162],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[687228,687229]},{"pos":[687284,687288],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[687346,687347],"content":"<","needQuote":true,"nodes":[]},{"pos":[687374,687381],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[687415,687416]},{"pos":[687448,687452],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[687514,687515],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[687662,687687],"content":"GroupBy(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"GroupBy(Of TSource, TKey)","pos":[0,25]}]},{"pos":[687761,687762],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[687839,687850],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[687936,687939]},{"pos":[687973,687980],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[688013,688014],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[688042,688043]},{"pos":[688098,688102],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[688161,688164]},{"pos":[688198,688205],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[688239,688240]},{"pos":[688272,688276],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[688306,688307],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[688334,688335],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[688849,688939],"content":"GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,90],"source":"GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)"}]},{"pos":[689627,689649],"content":"GroupBy<TSource, TKey>","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey&gt;","pos":[0,22],"source":"GroupBy<TSource, TKey>"}]},{"pos":[689720,689721],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[689798,689809],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[689894,689895],"content":"<","needQuote":true,"nodes":[]},{"pos":[689922,689929],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[689995,689996]},{"pos":[690051,690055],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[690113,690114],"content":"<","needQuote":true,"nodes":[]},{"pos":[690141,690148],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[690182,690183]},{"pos":[690215,690219],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[690282,690283]},{"pos":[690371,690388],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[690479,690480],"content":"<","needQuote":true,"nodes":[]},{"pos":[690507,690511],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[690573,690574],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[690771,690796],"content":"GroupBy(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"GroupBy(Of TSource, TKey)","pos":[0,25]}]},{"pos":[690870,690871],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[690948,690959],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[691045,691048]},{"pos":[691082,691089],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[691122,691123],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[691151,691152]},{"pos":[691207,691211],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[691270,691273]},{"pos":[691307,691314],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[691348,691349]},{"pos":[691381,691385],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[691415,691416],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[691444,691445]},{"pos":[691533,691550],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[691642,691645]},{"pos":[691679,691683],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[691713,691714],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[691741,691742],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[692330,692430],"content":"GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TElement&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TSource, TElement&gt;)","pos":[0,100],"source":"GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)"}]},{"pos":[693079,693111],"content":"GroupBy<TSource, TKey, TElement>","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TElement&gt;","pos":[0,32],"source":"GroupBy<TSource, TKey, TElement>"}]},{"pos":[693192,693193],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[693270,693281],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[693366,693367],"content":"<","needQuote":true,"nodes":[]},{"pos":[693394,693401],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[693467,693468]},{"pos":[693523,693527],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[693585,693586],"content":"<","needQuote":true,"nodes":[]},{"pos":[693613,693620],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[693654,693655]},{"pos":[693687,693691],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[693754,693755]},{"pos":[693810,693814],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[693872,693873],"content":"<","needQuote":true,"nodes":[]},{"pos":[693900,693907],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[693941,693942]},{"pos":[693974,693982],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[694048,694049],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[694217,694252],"content":"GroupBy(Of TSource, TKey, TElement)","needQuote":true,"nodes":[{"content":"GroupBy(Of TSource, TKey, TElement)","pos":[0,35]}]},{"pos":[694336,694337],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[694414,694425],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[694511,694514]},{"pos":[694548,694555],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[694588,694589],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[694617,694618]},{"pos":[694673,694677],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[694736,694739]},{"pos":[694773,694780],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[694814,694815]},{"pos":[694847,694851],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[694881,694882],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[694910,694911]},{"pos":[694966,694970],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[695029,695032]},{"pos":[695066,695073],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[695107,695108]},{"pos":[695140,695148],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[695182,695183],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[695210,695211],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[695840,695965],"content":"GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TElement&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TSource, TElement&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,125],"source":"GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)"}]},{"pos":[696799,696831],"content":"GroupBy<TSource, TKey, TElement>","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TElement&gt;","pos":[0,32],"source":"GroupBy<TSource, TKey, TElement>"}]},{"pos":[696912,696913],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[696990,697001],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[697086,697087],"content":"<","needQuote":true,"nodes":[]},{"pos":[697114,697121],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[697187,697188]},{"pos":[697243,697247],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[697305,697306],"content":"<","needQuote":true,"nodes":[]},{"pos":[697333,697340],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[697374,697375]},{"pos":[697407,697411],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[697474,697475]},{"pos":[697530,697534],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[697592,697593],"content":"<","needQuote":true,"nodes":[]},{"pos":[697620,697627],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[697661,697662]},{"pos":[697694,697702],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[697769,697770]},{"pos":[697858,697875],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[697966,697967],"content":"<","needQuote":true,"nodes":[]},{"pos":[697994,697998],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[698060,698061],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[698279,698314],"content":"GroupBy(Of TSource, TKey, TElement)","needQuote":true,"nodes":[{"content":"GroupBy(Of TSource, TKey, TElement)","pos":[0,35]}]},{"pos":[698398,698399],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[698476,698487],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[698573,698576]},{"pos":[698610,698617],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[698650,698651],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[698679,698680]},{"pos":[698735,698739],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[698798,698801]},{"pos":[698835,698842],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[698876,698877]},{"pos":[698909,698913],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[698943,698944],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[698972,698973]},{"pos":[699028,699032],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[699091,699094]},{"pos":[699128,699135],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[699169,699170]},{"pos":[699202,699210],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[699244,699245],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[699273,699274]},{"pos":[699362,699379],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[699471,699474]},{"pos":[699508,699512],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[699542,699543],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[699570,699571],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[700297,700414],"content":"GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TKey, IEnumerable&lt;TSource&gt;, TResult&gt;)","pos":[0,117],"source":"GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>)"}]},{"pos":[701218,701249],"content":"GroupBy<TSource, TKey, TResult>","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TResult&gt;","pos":[0,31],"source":"GroupBy<TSource, TKey, TResult>"}]},{"pos":[701329,701330],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[701407,701418],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[701503,701504],"content":"<","needQuote":true,"nodes":[]},{"pos":[701531,701538],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[701604,701605]},{"pos":[701660,701664],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[701722,701723],"content":"<","needQuote":true,"nodes":[]},{"pos":[701750,701757],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[701791,701792]},{"pos":[701824,701828],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[701891,701892]},{"pos":[701947,701951],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[702009,702010],"content":"<","needQuote":true,"nodes":[]},{"pos":[702037,702041],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[702072,702073]},{"pos":[702155,702166],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[702251,702252],"content":"<","needQuote":true,"nodes":[]},{"pos":[702279,702286],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[702352,702353]},{"pos":[702385,702392],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[702457,702458],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[702670,702704],"content":"GroupBy(Of TSource, TKey, TResult)","needQuote":true,"nodes":[{"content":"GroupBy(Of TSource, TKey, TResult)","pos":[0,34]}]},{"pos":[702787,702788],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[702865,702876],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[702962,702965]},{"pos":[702999,703006],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[703039,703040],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[703068,703069]},{"pos":[703124,703128],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[703187,703190]},{"pos":[703224,703231],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[703265,703266]},{"pos":[703298,703302],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[703332,703333],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[703361,703362]},{"pos":[703417,703421],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[703480,703483]},{"pos":[703517,703521],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[703552,703553]},{"pos":[703635,703646],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[703732,703735]},{"pos":[703769,703776],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[703809,703810],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[703838,703839]},{"pos":[703871,703878],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[703911,703912],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[703939,703940],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[704694,704836],"content":"GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TKey, IEnumerable&lt;TSource&gt;, TResult&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,142],"source":"GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>, IEqualityComparer<TKey>)"}]},{"pos":[705825,705856],"content":"GroupBy<TSource, TKey, TResult>","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TResult&gt;","pos":[0,31],"source":"GroupBy<TSource, TKey, TResult>"}]},{"pos":[705936,705937],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[706014,706025],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[706110,706111],"content":"<","needQuote":true,"nodes":[]},{"pos":[706138,706145],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[706211,706212]},{"pos":[706267,706271],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[706329,706330],"content":"<","needQuote":true,"nodes":[]},{"pos":[706357,706364],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[706398,706399]},{"pos":[706431,706435],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[706498,706499]},{"pos":[706554,706558],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[706616,706617],"content":"<","needQuote":true,"nodes":[]},{"pos":[706644,706648],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[706679,706680]},{"pos":[706762,706773],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[706858,706859],"content":"<","needQuote":true,"nodes":[]},{"pos":[706886,706893],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[706959,706960]},{"pos":[706992,706999],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[707065,707066]},{"pos":[707154,707171],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[707262,707263],"content":"<","needQuote":true,"nodes":[]},{"pos":[707290,707294],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[707356,707357],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[707619,707653],"content":"GroupBy(Of TSource, TKey, TResult)","needQuote":true,"nodes":[{"content":"GroupBy(Of TSource, TKey, TResult)","pos":[0,34]}]},{"pos":[707736,707737],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[707814,707825],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[707911,707914]},{"pos":[707948,707955],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[707988,707989],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[708017,708018]},{"pos":[708073,708077],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[708136,708139]},{"pos":[708173,708180],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[708214,708215]},{"pos":[708247,708251],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[708281,708282],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[708310,708311]},{"pos":[708366,708370],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[708429,708432]},{"pos":[708466,708470],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[708501,708502]},{"pos":[708584,708595],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[708681,708684]},{"pos":[708718,708725],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[708758,708759],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[708787,708788]},{"pos":[708820,708827],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[708860,708861],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[708889,708890]},{"pos":[708978,708995],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[709087,709090]},{"pos":[709124,709128],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[709158,709159],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[709186,709187],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[710015,710168],"content":"GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TElement, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TSource, TElement&gt;, Func&lt;TKey, IEnumerable&lt;TElement&gt;, TResult&gt;)","pos":[0,153],"source":"GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)"}]},{"pos":[711121,711162],"content":"GroupBy<TSource, TKey, TElement, TResult>","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TElement, TResult&gt;","pos":[0,41],"source":"GroupBy<TSource, TKey, TElement, TResult>"}]},{"pos":[711252,711253],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[711330,711341],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[711426,711427],"content":"<","needQuote":true,"nodes":[]},{"pos":[711454,711461],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[711527,711528]},{"pos":[711583,711587],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[711645,711646],"content":"<","needQuote":true,"nodes":[]},{"pos":[711673,711680],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[711714,711715]},{"pos":[711747,711751],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[711814,711815]},{"pos":[711870,711874],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[711932,711933],"content":"<","needQuote":true,"nodes":[]},{"pos":[711960,711967],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[712001,712002]},{"pos":[712034,712042],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[712109,712110]},{"pos":[712165,712169],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[712227,712228],"content":"<","needQuote":true,"nodes":[]},{"pos":[712255,712259],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[712290,712291]},{"pos":[712373,712384],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[712469,712470],"content":"<","needQuote":true,"nodes":[]},{"pos":[712497,712505],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[712572,712573]},{"pos":[712605,712612],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[712677,712678],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[712911,712955],"content":"GroupBy(Of TSource, TKey, TElement, TResult)","needQuote":true,"nodes":[{"content":"GroupBy(Of TSource, TKey, TElement, TResult)","pos":[0,44]}]},{"pos":[713048,713049],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[713126,713137],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[713223,713226]},{"pos":[713260,713267],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[713300,713301],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[713329,713330]},{"pos":[713385,713389],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[713448,713451]},{"pos":[713485,713492],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[713526,713527]},{"pos":[713559,713563],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[713593,713594],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[713622,713623]},{"pos":[713678,713682],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[713741,713744]},{"pos":[713778,713785],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[713819,713820]},{"pos":[713852,713860],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[713894,713895],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[713923,713924]},{"pos":[713979,713983],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[714042,714045]},{"pos":[714079,714083],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[714114,714115]},{"pos":[714197,714208],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[714294,714297]},{"pos":[714331,714339],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[714373,714374],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[714402,714403]},{"pos":[714435,714442],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[714475,714476],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[714503,714504],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[715375,715553],"content":"GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TElement, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TSource, TElement&gt;, Func&lt;TKey, IEnumerable&lt;TElement&gt;, TResult&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,178],"source":"GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)"}]},{"pos":[716691,716732],"content":"GroupBy<TSource, TKey, TElement, TResult>","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TElement, TResult&gt;","pos":[0,41],"source":"GroupBy<TSource, TKey, TElement, TResult>"}]},{"pos":[716822,716823],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[716900,716911],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[716996,716997],"content":"<","needQuote":true,"nodes":[]},{"pos":[717024,717031],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[717097,717098]},{"pos":[717153,717157],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[717215,717216],"content":"<","needQuote":true,"nodes":[]},{"pos":[717243,717250],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[717284,717285]},{"pos":[717317,717321],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[717384,717385]},{"pos":[717440,717444],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[717502,717503],"content":"<","needQuote":true,"nodes":[]},{"pos":[717530,717537],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[717571,717572]},{"pos":[717604,717612],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[717679,717680]},{"pos":[717735,717739],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[717797,717798],"content":"<","needQuote":true,"nodes":[]},{"pos":[717825,717829],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[717860,717861]},{"pos":[717943,717954],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[718039,718040],"content":"<","needQuote":true,"nodes":[]},{"pos":[718067,718075],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[718142,718143]},{"pos":[718175,718182],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[718248,718249]},{"pos":[718337,718354],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[718445,718446],"content":"<","needQuote":true,"nodes":[]},{"pos":[718473,718477],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[718539,718540],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[718823,718867],"content":"GroupBy(Of TSource, TKey, TElement, TResult)","needQuote":true,"nodes":[{"content":"GroupBy(Of TSource, TKey, TElement, TResult)","pos":[0,44]}]},{"pos":[718960,718961],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[719038,719049],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[719135,719138]},{"pos":[719172,719179],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[719212,719213],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[719241,719242]},{"pos":[719297,719301],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[719360,719363]},{"pos":[719397,719404],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[719438,719439]},{"pos":[719471,719475],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[719505,719506],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[719534,719535]},{"pos":[719590,719594],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[719653,719656]},{"pos":[719690,719697],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[719731,719732]},{"pos":[719764,719772],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[719806,719807],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[719835,719836]},{"pos":[719891,719895],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[719954,719957]},{"pos":[719991,719995],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[720026,720027]},{"pos":[720109,720120],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[720206,720209]},{"pos":[720243,720251],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[720285,720286],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[720314,720315]},{"pos":[720347,720354],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[720387,720388],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[720416,720417]},{"pos":[720505,720522],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[720614,720617]},{"pos":[720651,720655],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[720685,720686],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[720713,720714],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[721684,721850],"content":"GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>)","needQuote":true,"nodes":[{"content":"GroupJoin&lt;TOuter, TInner, TKey, TResult&gt;(IEnumerable&lt;TOuter&gt;, IEnumerable&lt;TInner&gt;, Func&lt;TOuter, TKey&gt;, Func&lt;TInner, TKey&gt;, Func&lt;TOuter, IEnumerable&lt;TInner&gt;, TResult&gt;)","pos":[0,166],"source":"GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>)"}]},{"pos":[722948,722988],"content":"GroupJoin<TOuter, TInner, TKey, TResult>","needQuote":true,"nodes":[{"content":"GroupJoin&lt;TOuter, TInner, TKey, TResult&gt;","pos":[0,40],"source":"GroupJoin<TOuter, TInner, TKey, TResult>"}]},{"pos":[723077,723078],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[723155,723166],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[723251,723252],"content":"<","needQuote":true,"nodes":[]},{"pos":[723279,723285],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[723350,723351]},{"pos":[723433,723444],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[723529,723530],"content":"<","needQuote":true,"nodes":[]},{"pos":[723557,723563],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[723628,723629]},{"pos":[723684,723688],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[723746,723747],"content":"<","needQuote":true,"nodes":[]},{"pos":[723774,723780],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[723813,723814]},{"pos":[723846,723850],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[723913,723914]},{"pos":[723969,723973],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[724031,724032],"content":"<","needQuote":true,"nodes":[]},{"pos":[724059,724065],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[724098,724099]},{"pos":[724131,724135],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[724198,724199]},{"pos":[724254,724258],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[724316,724317],"content":"<","needQuote":true,"nodes":[]},{"pos":[724344,724350],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[724383,724384]},{"pos":[724466,724477],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[724562,724563],"content":"<","needQuote":true,"nodes":[]},{"pos":[724590,724596],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[724661,724662]},{"pos":[724694,724701],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[724766,724767],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[725046,725089],"content":"GroupJoin(Of TOuter, TInner, TKey, TResult)","needQuote":true,"nodes":[{"content":"GroupJoin(Of TOuter, TInner, TKey, TResult)","pos":[0,43]}]},{"pos":[725181,725182],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[725259,725270],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[725356,725359]},{"pos":[725393,725399],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"pos":[725431,725432],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[725460,725461]},{"pos":[725543,725554],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[725640,725643]},{"pos":[725677,725683],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[725715,725716],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[725744,725745]},{"pos":[725800,725804],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[725863,725866]},{"pos":[725900,725906],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[725939,725940]},{"pos":[725972,725976],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[726006,726007],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[726035,726036]},{"pos":[726091,726095],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[726154,726157]},{"pos":[726191,726197],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[726230,726231]},{"pos":[726263,726267],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[726297,726298],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[726326,726327]},{"pos":[726382,726386],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[726445,726448]},{"pos":[726482,726488],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[726521,726522]},{"pos":[726604,726615],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[726701,726704]},{"pos":[726738,726744],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[726776,726777],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[726805,726806]},{"pos":[726838,726845],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[726878,726879],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[726906,726907],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[727899,728090],"content":"GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupJoin&lt;TOuter, TInner, TKey, TResult&gt;(IEnumerable&lt;TOuter&gt;, IEnumerable&lt;TInner&gt;, Func&lt;TOuter, TKey&gt;, Func&lt;TInner, TKey&gt;, Func&lt;TOuter, IEnumerable&lt;TInner&gt;, TResult&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,191],"source":"GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)"}]},{"pos":[729373,729413],"content":"GroupJoin<TOuter, TInner, TKey, TResult>","needQuote":true,"nodes":[{"content":"GroupJoin&lt;TOuter, TInner, TKey, TResult&gt;","pos":[0,40],"source":"GroupJoin<TOuter, TInner, TKey, TResult>"}]},{"pos":[729502,729503],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[729580,729591],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[729676,729677],"content":"<","needQuote":true,"nodes":[]},{"pos":[729704,729710],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[729775,729776]},{"pos":[729858,729869],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[729954,729955],"content":"<","needQuote":true,"nodes":[]},{"pos":[729982,729988],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[730053,730054]},{"pos":[730109,730113],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[730171,730172],"content":"<","needQuote":true,"nodes":[]},{"pos":[730199,730205],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[730238,730239]},{"pos":[730271,730275],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[730338,730339]},{"pos":[730394,730398],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[730456,730457],"content":"<","needQuote":true,"nodes":[]},{"pos":[730484,730490],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[730523,730524]},{"pos":[730556,730560],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[730623,730624]},{"pos":[730679,730683],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[730741,730742],"content":"<","needQuote":true,"nodes":[]},{"pos":[730769,730775],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[730808,730809]},{"pos":[730891,730902],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[730987,730988],"content":"<","needQuote":true,"nodes":[]},{"pos":[731015,731021],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[731086,731087]},{"pos":[731119,731126],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[731192,731193]},{"pos":[731281,731298],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[731389,731390],"content":"<","needQuote":true,"nodes":[]},{"pos":[731417,731421],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[731483,731484],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[731813,731856],"content":"GroupJoin(Of TOuter, TInner, TKey, TResult)","needQuote":true,"nodes":[{"content":"GroupJoin(Of TOuter, TInner, TKey, TResult)","pos":[0,43]}]},{"pos":[731948,731949],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[732026,732037],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[732123,732126]},{"pos":[732160,732166],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"pos":[732198,732199],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[732227,732228]},{"pos":[732310,732321],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[732407,732410]},{"pos":[732444,732450],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[732482,732483],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[732511,732512]},{"pos":[732567,732571],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[732630,732633]},{"pos":[732667,732673],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[732706,732707]},{"pos":[732739,732743],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[732773,732774],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[732802,732803]},{"pos":[732858,732862],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[732921,732924]},{"pos":[732958,732964],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[732997,732998]},{"pos":[733030,733034],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[733064,733065],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[733093,733094]},{"pos":[733149,733153],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[733212,733215]},{"pos":[733249,733255],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[733288,733289]},{"pos":[733371,733382],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[733468,733471]},{"pos":[733505,733511],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[733543,733544],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[733572,733573]},{"pos":[733605,733612],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[733645,733646],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[733674,733675]},{"pos":[733763,733780],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[733872,733875]},{"pos":[733909,733913],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[733943,733944],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[733971,733972],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[734910,734972],"content":"Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Intersect&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;)","pos":[0,62],"source":"Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)"}]},{"pos":[735531,735549],"content":"Intersect<TSource>","needQuote":true,"nodes":[{"content":"Intersect&lt;TSource&gt;","pos":[0,18],"source":"Intersect<TSource>"}]},{"pos":[735616,735617],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[735694,735705],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[735790,735791],"content":"<","needQuote":true,"nodes":[]},{"pos":[735818,735825],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[735891,735892]},{"pos":[735974,735985],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[736070,736071],"content":"<","needQuote":true,"nodes":[]},{"pos":[736098,736105],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[736170,736171],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[736343,736364],"content":"Intersect(Of TSource)","needQuote":true,"nodes":[{"content":"Intersect(Of TSource)","pos":[0,21]}]},{"pos":[736434,736435],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[736512,736523],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[736609,736612]},{"pos":[736646,736653],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[736686,736687],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[736715,736716]},{"pos":[736798,736809],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[736895,736898]},{"pos":[736932,736939],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[736972,736973],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[737000,737001],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[737559,737649],"content":"Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)","needQuote":true,"nodes":[{"content":"Intersect&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;, IEqualityComparer&lt;TSource&gt;)","pos":[0,90],"source":"Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)"}]},{"pos":[738402,738420],"content":"Intersect<TSource>","needQuote":true,"nodes":[{"content":"Intersect&lt;TSource&gt;","pos":[0,18],"source":"Intersect<TSource>"}]},{"pos":[738487,738488],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[738565,738576],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[738661,738662],"content":"<","needQuote":true,"nodes":[]},{"pos":[738689,738696],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[738762,738763]},{"pos":[738845,738856],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[738941,738942],"content":"<","needQuote":true,"nodes":[]},{"pos":[738969,738976],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[739042,739043]},{"pos":[739131,739148],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[739239,739240],"content":"<","needQuote":true,"nodes":[]},{"pos":[739267,739274],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[739339,739340],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[739562,739583],"content":"Intersect(Of TSource)","needQuote":true,"nodes":[{"content":"Intersect(Of TSource)","pos":[0,21]}]},{"pos":[739653,739654],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[739731,739742],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[739828,739831]},{"pos":[739865,739872],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[739905,739906],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[739934,739935]},{"pos":[740017,740028],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[740114,740117]},{"pos":[740151,740158],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[740191,740192],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[740220,740221]},{"pos":[740309,740326],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[740418,740421]},{"pos":[740455,740462],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[740495,740496],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[740523,740524],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[741203,741351],"content":"Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>)","needQuote":true,"nodes":[{"content":"Join&lt;TOuter, TInner, TKey, TResult&gt;(IEnumerable&lt;TOuter&gt;, IEnumerable&lt;TInner&gt;, Func&lt;TOuter, TKey&gt;, Func&lt;TInner, TKey&gt;, Func&lt;TOuter, TInner, TResult&gt;)","pos":[0,148],"source":"Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>)"}]},{"pos":[742290,742325],"content":"Join<TOuter, TInner, TKey, TResult>","needQuote":true,"nodes":[{"content":"Join&lt;TOuter, TInner, TKey, TResult&gt;","pos":[0,35],"source":"Join<TOuter, TInner, TKey, TResult>"}]},{"pos":[742409,742410],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[742487,742498],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[742583,742584],"content":"<","needQuote":true,"nodes":[]},{"pos":[742611,742617],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[742682,742683]},{"pos":[742765,742776],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[742861,742862],"content":"<","needQuote":true,"nodes":[]},{"pos":[742889,742895],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[742960,742961]},{"pos":[743016,743020],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[743078,743079],"content":"<","needQuote":true,"nodes":[]},{"pos":[743106,743112],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[743145,743146]},{"pos":[743178,743182],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[743245,743246]},{"pos":[743301,743305],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[743363,743364],"content":"<","needQuote":true,"nodes":[]},{"pos":[743391,743397],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[743430,743431]},{"pos":[743463,743467],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[743530,743531]},{"pos":[743586,743590],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[743648,743649],"content":"<","needQuote":true,"nodes":[]},{"pos":[743676,743682],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[743715,743716]},{"pos":[743748,743754],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[743787,743788]},{"pos":[743820,743827],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[743892,743893],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[744127,744165],"content":"Join(Of TOuter, TInner, TKey, TResult)","needQuote":true,"nodes":[{"content":"Join(Of TOuter, TInner, TKey, TResult)","pos":[0,38]}]},{"pos":[744252,744253],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[744330,744341],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[744427,744430]},{"pos":[744464,744470],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"pos":[744502,744503],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[744531,744532]},{"pos":[744614,744625],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[744711,744714]},{"pos":[744748,744754],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[744786,744787],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[744815,744816]},{"pos":[744871,744875],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[744934,744937]},{"pos":[744971,744977],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[745010,745011]},{"pos":[745043,745047],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[745077,745078],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[745106,745107]},{"pos":[745162,745166],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[745225,745228]},{"pos":[745262,745268],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[745301,745302]},{"pos":[745334,745338],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[745368,745369],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[745397,745398]},{"pos":[745453,745457],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[745516,745519]},{"pos":[745553,745559],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[745592,745593]},{"pos":[745625,745631],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[745664,745665]},{"pos":[745697,745704],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[745737,745738],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[745765,745766],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[746629,746802],"content":"Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"Join&lt;TOuter, TInner, TKey, TResult&gt;(IEnumerable&lt;TOuter&gt;, IEnumerable&lt;TInner&gt;, Func&lt;TOuter, TKey&gt;, Func&lt;TInner, TKey&gt;, Func&lt;TOuter, TInner, TResult&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,173],"source":"Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>)"}]},{"pos":[747926,747961],"content":"Join<TOuter, TInner, TKey, TResult>","needQuote":true,"nodes":[{"content":"Join&lt;TOuter, TInner, TKey, TResult&gt;","pos":[0,35],"source":"Join<TOuter, TInner, TKey, TResult>"}]},{"pos":[748045,748046],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[748123,748134],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[748219,748220],"content":"<","needQuote":true,"nodes":[]},{"pos":[748247,748253],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[748318,748319]},{"pos":[748401,748412],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[748497,748498],"content":"<","needQuote":true,"nodes":[]},{"pos":[748525,748531],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[748596,748597]},{"pos":[748652,748656],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[748714,748715],"content":"<","needQuote":true,"nodes":[]},{"pos":[748742,748748],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[748781,748782]},{"pos":[748814,748818],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[748881,748882]},{"pos":[748937,748941],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[748999,749000],"content":"<","needQuote":true,"nodes":[]},{"pos":[749027,749033],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[749066,749067]},{"pos":[749099,749103],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[749166,749167]},{"pos":[749222,749226],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[749284,749285],"content":"<","needQuote":true,"nodes":[]},{"pos":[749312,749318],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[749351,749352]},{"pos":[749384,749390],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[749423,749424]},{"pos":[749456,749463],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[749529,749530]},{"pos":[749618,749635],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[749726,749727],"content":"<","needQuote":true,"nodes":[]},{"pos":[749754,749758],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[749820,749821],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[750105,750143],"content":"Join(Of TOuter, TInner, TKey, TResult)","needQuote":true,"nodes":[{"content":"Join(Of TOuter, TInner, TKey, TResult)","pos":[0,38]}]},{"pos":[750230,750231],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[750308,750319],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[750405,750408]},{"pos":[750442,750448],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"pos":[750480,750481],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[750509,750510]},{"pos":[750592,750603],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[750689,750692]},{"pos":[750726,750732],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[750764,750765],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[750793,750794]},{"pos":[750849,750853],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[750912,750915]},{"pos":[750949,750955],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[750988,750989]},{"pos":[751021,751025],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[751055,751056],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[751084,751085]},{"pos":[751140,751144],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[751203,751206]},{"pos":[751240,751246],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[751279,751280]},{"pos":[751312,751316],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[751346,751347],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[751375,751376]},{"pos":[751431,751435],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[751494,751497]},{"pos":[751531,751537],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[751570,751571]},{"pos":[751603,751609],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[751642,751643]},{"pos":[751675,751682],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[751715,751716],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[751744,751745]},{"pos":[751833,751850],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[751942,751945]},{"pos":[751979,751983],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[752013,752014],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[752041,752042],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[752847,752882],"content":"Last<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Last&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,35],"source":"Last<TSource>(IEnumerable<TSource>)"}]},{"pos":[753251,753264],"content":"Last<TSource>","needQuote":true,"nodes":[{"content":"Last&lt;TSource&gt;","pos":[0,13],"source":"Last<TSource>"}]},{"pos":[753326,753327],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[753404,753415],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[753500,753501],"content":"<","needQuote":true,"nodes":[]},{"pos":[753528,753535],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[753600,753601],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[753724,753740],"content":"Last(Of TSource)","needQuote":true,"nodes":[{"content":"Last(Of TSource)","pos":[0,16]}]},{"pos":[753805,753806],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[753883,753894],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[753980,753983]},{"pos":[754017,754024],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[754057,754058],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[754085,754086],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[754471,754530],"content":"Last<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"Last&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,59],"source":"Last<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[755037,755050],"content":"Last<TSource>","needQuote":true,"nodes":[{"content":"Last&lt;TSource&gt;","pos":[0,13],"source":"Last<TSource>"}]},{"pos":[755112,755113],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[755190,755201],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[755286,755287],"content":"<","needQuote":true,"nodes":[]},{"pos":[755314,755321],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[755387,755388]},{"pos":[755443,755447],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[755505,755506],"content":"<","needQuote":true,"nodes":[]},{"pos":[755533,755540],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[755574,755575]},{"pos":[755631,755638],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[755731,755732],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[755887,755903],"content":"Last(Of TSource)","needQuote":true,"nodes":[{"content":"Last(Of TSource)","pos":[0,16]}]},{"pos":[755968,755969],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[756046,756057],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[756143,756146]},{"pos":[756180,756187],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[756220,756221],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[756249,756250]},{"pos":[756305,756309],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[756368,756371]},{"pos":[756405,756412],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[756446,756447]},{"pos":[756503,756510],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[756571,756572],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[756599,756600],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[757045,757089],"content":"LastOrDefault<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"LastOrDefault&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,44],"source":"LastOrDefault<TSource>(IEnumerable<TSource>)"}]},{"pos":[757494,757516],"content":"LastOrDefault<TSource>","needQuote":true,"nodes":[{"content":"LastOrDefault&lt;TSource&gt;","pos":[0,22],"source":"LastOrDefault<TSource>"}]},{"pos":[757587,757588],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[757665,757676],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[757761,757762],"content":"<","needQuote":true,"nodes":[]},{"pos":[757789,757796],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[757861,757862],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[757994,758019],"content":"LastOrDefault(Of TSource)","needQuote":true,"nodes":[{"content":"LastOrDefault(Of TSource)","pos":[0,25]}]},{"pos":[758093,758094],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[758171,758182],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[758268,758271]},{"pos":[758305,758312],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[758345,758346],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[758373,758374],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[758795,758863],"content":"LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"LastOrDefault&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,68],"source":"LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[759406,759428],"content":"LastOrDefault<TSource>","needQuote":true,"nodes":[{"content":"LastOrDefault&lt;TSource&gt;","pos":[0,22],"source":"LastOrDefault<TSource>"}]},{"pos":[759499,759500],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[759577,759588],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[759673,759674],"content":"<","needQuote":true,"nodes":[]},{"pos":[759701,759708],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[759774,759775]},{"pos":[759830,759834],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[759892,759893],"content":"<","needQuote":true,"nodes":[]},{"pos":[759920,759927],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[759961,759962]},{"pos":[760018,760025],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[760118,760119],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[760283,760308],"content":"LastOrDefault(Of TSource)","needQuote":true,"nodes":[{"content":"LastOrDefault(Of TSource)","pos":[0,25]}]},{"pos":[760382,760383],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[760460,760471],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[760557,760560]},{"pos":[760594,760601],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[760634,760635],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[760663,760664]},{"pos":[760719,760723],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[760782,760785]},{"pos":[760819,760826],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[760860,760861]},{"pos":[760917,760924],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[760985,760986],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[761013,761014],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[761482,761522],"content":"LongCount<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"LongCount&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,40],"source":"LongCount<TSource>(IEnumerable<TSource>)"}]},{"pos":[761911,761929],"content":"LongCount<TSource>","needQuote":true,"nodes":[{"content":"LongCount&lt;TSource&gt;","pos":[0,18],"source":"LongCount<TSource>"}]},{"pos":[761996,761997],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[762074,762085],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[762170,762171],"content":"<","needQuote":true,"nodes":[]},{"pos":[762198,762205],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[762270,762271],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[762399,762420],"content":"LongCount(Of TSource)","needQuote":true,"nodes":[{"content":"LongCount(Of TSource)","pos":[0,21]}]},{"pos":[762490,762491],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[762568,762579],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[762665,762668]},{"pos":[762702,762709],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[762742,762743],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[762770,762771],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[763176,763240],"content":"LongCount<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"LongCount&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,64],"source":"LongCount<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[763767,763785],"content":"LongCount<TSource>","needQuote":true,"nodes":[{"content":"LongCount&lt;TSource&gt;","pos":[0,18],"source":"LongCount<TSource>"}]},{"pos":[763852,763853],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[763930,763941],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[764026,764027],"content":"<","needQuote":true,"nodes":[]},{"pos":[764054,764061],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[764127,764128]},{"pos":[764183,764187],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[764245,764246],"content":"<","needQuote":true,"nodes":[]},{"pos":[764273,764280],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[764314,764315]},{"pos":[764371,764378],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[764471,764472],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[764632,764653],"content":"LongCount(Of TSource)","needQuote":true,"nodes":[{"content":"LongCount(Of TSource)","pos":[0,21]}]},{"pos":[764723,764724],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[764801,764812],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[764898,764901]},{"pos":[764935,764942],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[764975,764976],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[765004,765005]},{"pos":[765060,765064],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[765123,765126]},{"pos":[765160,765167],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[765201,765202]},{"pos":[765258,765265],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[765326,765327],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[765354,765355],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[765805,765839],"content":"Max<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,34],"source":"Max<TSource>(IEnumerable<TSource>)"}]},{"pos":[766204,766216],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[766277,766278],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[766355,766366],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[766451,766452],"content":"<","needQuote":true,"nodes":[]},{"pos":[766479,766486],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[766551,766552],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[766674,766689],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[766753,766754],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[766831,766842],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[766928,766931]},{"pos":[766965,766972],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[767005,767006],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[767033,767034],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[767415,767473],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Decimal&gt;)","pos":[0,58],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)"}]},{"pos":[767976,767988],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[768049,768050],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[768127,768138],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[768223,768224],"content":"<","needQuote":true,"nodes":[]},{"pos":[768251,768258],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[768324,768325]},{"pos":[768380,768384],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[768442,768443],"content":"<","needQuote":true,"nodes":[]},{"pos":[768470,768477],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[768511,768512]},{"pos":[768568,768575],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[768668,768669],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[768823,768838],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[768902,768903],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[768980,768991],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[769077,769080]},{"pos":[769114,769121],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[769154,769155],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[769183,769184]},{"pos":[769239,769243],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[769302,769305]},{"pos":[769339,769346],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[769380,769381]},{"pos":[769437,769444],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[769505,769506],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[769533,769534],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[769997,770054],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Double>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Double&gt;)","pos":[0,57],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Double>)"}]},{"pos":[770553,770565],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[770626,770627],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[770704,770715],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[770800,770801],"content":"<","needQuote":true,"nodes":[]},{"pos":[770828,770835],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[770901,770902]},{"pos":[770957,770961],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[771019,771020],"content":"<","needQuote":true,"nodes":[]},{"pos":[771047,771054],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[771088,771089]},{"pos":[771144,771150],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[771242,771243],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[771396,771411],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[771475,771476],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[771553,771564],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[771650,771653]},{"pos":[771687,771694],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[771727,771728],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[771756,771757]},{"pos":[771812,771816],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[771875,771878]},{"pos":[771912,771919],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[771953,771954]},{"pos":[772009,772015],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[772075,772076],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[772103,772104],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[772563,772619],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32&gt;)","pos":[0,56],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)"}]},{"pos":[773114,773126],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[773187,773188],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[773265,773276],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[773361,773362],"content":"<","needQuote":true,"nodes":[]},{"pos":[773389,773396],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[773462,773463]},{"pos":[773518,773522],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[773580,773581],"content":"<","needQuote":true,"nodes":[]},{"pos":[773608,773615],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[773649,773650]},{"pos":[773704,773709],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[773800,773801],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[773953,773968],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[774032,774033],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[774110,774121],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[774207,774210]},{"pos":[774244,774251],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[774284,774285],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[774313,774314]},{"pos":[774369,774373],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[774432,774435]},{"pos":[774469,774476],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[774510,774511]},{"pos":[774565,774570],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[774629,774630],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[774657,774658],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[775114,775170],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int64&gt;)","pos":[0,56],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)"}]},{"pos":[775665,775677],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[775738,775739],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[775816,775827],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[775912,775913],"content":"<","needQuote":true,"nodes":[]},{"pos":[775940,775947],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[776013,776014]},{"pos":[776069,776073],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[776131,776132],"content":"<","needQuote":true,"nodes":[]},{"pos":[776159,776166],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[776200,776201]},{"pos":[776255,776260],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[776351,776352],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[776504,776519],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[776583,776584],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[776661,776672],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[776758,776761]},{"pos":[776795,776802],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[776835,776836],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[776864,776865]},{"pos":[776920,776924],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[776983,776986]},{"pos":[777020,777027],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[777061,777062]},{"pos":[777116,777121],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[777180,777181],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[777208,777209],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[777684,777752],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Decimal&gt;&gt;)","pos":[0,68],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)"}]},{"pos":[778322,778334],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[778395,778396],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[778473,778484],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[778569,778570],"content":"<","needQuote":true,"nodes":[]},{"pos":[778597,778604],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[778670,778671]},{"pos":[778726,778730],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[778788,778789],"content":"<","needQuote":true,"nodes":[]},{"pos":[778816,778823],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[778857,778858]},{"pos":[778917,778925],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[778987,778988],"content":"<","needQuote":true,"nodes":[]},{"pos":[779039,779046],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[779171,779172],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[779343,779358],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[779422,779423],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[779500,779511],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[779597,779600]},{"pos":[779634,779641],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[779674,779675],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[779703,779704]},{"pos":[779759,779763],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[779822,779825]},{"pos":[779859,779866],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[779900,779901]},{"pos":[779960,779968],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[780031,780034]},{"pos":[780092,780099],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[780160,780161],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[780188,780189],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[780216,780217],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[780737,780804],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Double&gt;&gt;)","pos":[0,67],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)"}]},{"pos":[781370,781382],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[781443,781444],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[781521,781532],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[781617,781618],"content":"<","needQuote":true,"nodes":[]},{"pos":[781645,781652],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[781718,781719]},{"pos":[781774,781778],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[781836,781837],"content":"<","needQuote":true,"nodes":[]},{"pos":[781864,781871],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[781905,781906]},{"pos":[781965,781973],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[782035,782036],"content":"<","needQuote":true,"nodes":[]},{"pos":[782086,782092],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[782216,782217],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[782387,782402],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[782466,782467],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[782544,782555],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[782641,782644]},{"pos":[782678,782685],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[782718,782719],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[782747,782748]},{"pos":[782803,782807],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[782866,782869]},{"pos":[782903,782910],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[782944,782945]},{"pos":[783004,783012],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[783075,783078]},{"pos":[783135,783141],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[783201,783202],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[783229,783230],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[783257,783258],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[783774,783840],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Int32&gt;&gt;)","pos":[0,66],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)"}]},{"pos":[784402,784414],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[784475,784476],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[784553,784564],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[784649,784650],"content":"<","needQuote":true,"nodes":[]},{"pos":[784677,784684],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[784750,784751]},{"pos":[784806,784810],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[784868,784869],"content":"<","needQuote":true,"nodes":[]},{"pos":[784896,784903],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[784937,784938]},{"pos":[784997,785005],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[785067,785068],"content":"<","needQuote":true,"nodes":[]},{"pos":[785117,785122],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[785245,785246],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[785415,785430],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[785494,785495],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[785572,785583],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[785669,785672]},{"pos":[785706,785713],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[785746,785747],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[785775,785776]},{"pos":[785831,785835],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[785894,785897]},{"pos":[785931,785938],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[785972,785973]},{"pos":[786032,786040],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[786103,786106]},{"pos":[786162,786167],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[786226,786227],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[786254,786255],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[786282,786283],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[786796,786862],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Int64&gt;&gt;)","pos":[0,66],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)"}]},{"pos":[787424,787436],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[787497,787498],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[787575,787586],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[787671,787672],"content":"<","needQuote":true,"nodes":[]},{"pos":[787699,787706],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[787772,787773]},{"pos":[787828,787832],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[787890,787891],"content":"<","needQuote":true,"nodes":[]},{"pos":[787918,787925],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[787959,787960]},{"pos":[788019,788027],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[788089,788090],"content":"<","needQuote":true,"nodes":[]},{"pos":[788139,788144],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[788267,788268],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[788437,788452],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[788516,788517],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[788594,788605],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[788691,788694]},{"pos":[788728,788735],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[788768,788769],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[788797,788798]},{"pos":[788853,788857],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[788916,788919]},{"pos":[788953,788960],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[788994,788995]},{"pos":[789054,789062],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[789125,789128]},{"pos":[789184,789189],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[789248,789249],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[789276,789277],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[789304,789305],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[789819,789886],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Single&gt;&gt;)","pos":[0,67],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)"}]},{"pos":[790452,790464],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[790525,790526],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[790603,790614],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[790699,790700],"content":"<","needQuote":true,"nodes":[]},{"pos":[790727,790734],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[790800,790801]},{"pos":[790856,790860],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[790918,790919],"content":"<","needQuote":true,"nodes":[]},{"pos":[790946,790953],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[790987,790988]},{"pos":[791047,791055],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[791117,791118],"content":"<","needQuote":true,"nodes":[]},{"pos":[791168,791174],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[791298,791299],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[791469,791484],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[791548,791549],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[791626,791637],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[791723,791726]},{"pos":[791760,791767],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[791800,791801],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[791829,791830]},{"pos":[791885,791889],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[791948,791951]},{"pos":[791985,791992],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[792026,792027]},{"pos":[792086,792094],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[792157,792160]},{"pos":[792217,792223],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[792283,792284],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[792311,792312],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[792339,792340],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[792840,792897],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Single>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Single&gt;)","pos":[0,57],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Single>)"}]},{"pos":[793396,793408],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[793469,793470],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[793547,793558],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[793643,793644],"content":"<","needQuote":true,"nodes":[]},{"pos":[793671,793678],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[793744,793745]},{"pos":[793800,793804],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[793862,793863],"content":"<","needQuote":true,"nodes":[]},{"pos":[793890,793897],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[793931,793932]},{"pos":[793987,793993],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[794085,794086],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[794239,794254],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[794318,794319],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[794396,794407],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[794493,794496]},{"pos":[794530,794537],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[794570,794571],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[794599,794600]},{"pos":[794655,794659],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[794718,794721]},{"pos":[794755,794762],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[794796,794797]},{"pos":[794852,794858],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[794918,794919],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[794946,794947],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[795397,795464],"content":"Max<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TResult&gt;)","pos":[0,67],"source":"Max<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)"}]},{"pos":[795969,795990],"content":"Max<TSource, TResult>","needQuote":true,"nodes":[{"content":"Max&lt;TSource, TResult&gt;","pos":[0,21],"source":"Max<TSource, TResult>"}]},{"pos":[796060,796061],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[796138,796149],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[796234,796235],"content":"<","needQuote":true,"nodes":[]},{"pos":[796262,796269],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[796335,796336]},{"pos":[796391,796395],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[796453,796454],"content":"<","needQuote":true,"nodes":[]},{"pos":[796481,796488],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[796522,796523]},{"pos":[796555,796562],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[796627,796628],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[796771,796795],"content":"Max(Of TSource, TResult)","needQuote":true,"nodes":[{"content":"Max(Of TSource, TResult)","pos":[0,24]}]},{"pos":[796868,796869],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[796946,796957],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[797043,797046]},{"pos":[797080,797087],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[797120,797121],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[797149,797150]},{"pos":[797205,797209],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[797268,797271]},{"pos":[797305,797312],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[797346,797347]},{"pos":[797379,797386],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[797419,797420],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[797447,797448],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[797887,797921],"content":"Min<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,34],"source":"Min<TSource>(IEnumerable<TSource>)"}]},{"pos":[798286,798298],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[798359,798360],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[798437,798448],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[798533,798534],"content":"<","needQuote":true,"nodes":[]},{"pos":[798561,798568],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[798633,798634],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[798756,798771],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[798835,798836],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[798913,798924],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[799010,799013]},{"pos":[799047,799054],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[799087,799088],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[799115,799116],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[799497,799555],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Decimal&gt;)","pos":[0,58],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)"}]},{"pos":[800058,800070],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[800131,800132],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[800209,800220],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[800305,800306],"content":"<","needQuote":true,"nodes":[]},{"pos":[800333,800340],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[800406,800407]},{"pos":[800462,800466],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[800524,800525],"content":"<","needQuote":true,"nodes":[]},{"pos":[800552,800559],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[800593,800594]},{"pos":[800650,800657],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[800750,800751],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[800905,800920],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[800984,800985],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[801062,801073],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[801159,801162]},{"pos":[801196,801203],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[801236,801237],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[801265,801266]},{"pos":[801321,801325],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[801384,801387]},{"pos":[801421,801428],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[801462,801463]},{"pos":[801519,801526],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[801587,801588],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[801615,801616],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[802079,802136],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Double>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Double&gt;)","pos":[0,57],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Double>)"}]},{"pos":[802635,802647],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[802708,802709],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[802786,802797],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[802882,802883],"content":"<","needQuote":true,"nodes":[]},{"pos":[802910,802917],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[802983,802984]},{"pos":[803039,803043],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[803101,803102],"content":"<","needQuote":true,"nodes":[]},{"pos":[803129,803136],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[803170,803171]},{"pos":[803226,803232],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[803324,803325],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[803478,803493],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[803557,803558],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[803635,803646],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[803732,803735]},{"pos":[803769,803776],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[803809,803810],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[803838,803839]},{"pos":[803894,803898],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[803957,803960]},{"pos":[803994,804001],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[804035,804036]},{"pos":[804091,804097],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[804157,804158],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[804185,804186],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[804645,804701],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32&gt;)","pos":[0,56],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)"}]},{"pos":[805196,805208],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[805269,805270],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[805347,805358],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[805443,805444],"content":"<","needQuote":true,"nodes":[]},{"pos":[805471,805478],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[805544,805545]},{"pos":[805600,805604],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[805662,805663],"content":"<","needQuote":true,"nodes":[]},{"pos":[805690,805697],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[805731,805732]},{"pos":[805786,805791],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[805882,805883],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[806035,806050],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[806114,806115],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[806192,806203],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[806289,806292]},{"pos":[806326,806333],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[806366,806367],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[806395,806396]},{"pos":[806451,806455],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[806514,806517]},{"pos":[806551,806558],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[806592,806593]},{"pos":[806647,806652],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[806711,806712],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[806739,806740],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[807196,807252],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int64&gt;)","pos":[0,56],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)"}]},{"pos":[807747,807759],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[807820,807821],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[807898,807909],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[807994,807995],"content":"<","needQuote":true,"nodes":[]},{"pos":[808022,808029],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[808095,808096]},{"pos":[808151,808155],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[808213,808214],"content":"<","needQuote":true,"nodes":[]},{"pos":[808241,808248],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[808282,808283]},{"pos":[808337,808342],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[808433,808434],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[808586,808601],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[808665,808666],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[808743,808754],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[808840,808843]},{"pos":[808877,808884],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[808917,808918],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[808946,808947]},{"pos":[809002,809006],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[809065,809068]},{"pos":[809102,809109],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[809143,809144]},{"pos":[809198,809203],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[809262,809263],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[809290,809291],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[809766,809834],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Decimal&gt;&gt;)","pos":[0,68],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)"}]},{"pos":[810404,810416],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[810477,810478],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[810555,810566],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[810651,810652],"content":"<","needQuote":true,"nodes":[]},{"pos":[810679,810686],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[810752,810753]},{"pos":[810808,810812],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[810870,810871],"content":"<","needQuote":true,"nodes":[]},{"pos":[810898,810905],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[810939,810940]},{"pos":[810999,811007],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[811069,811070],"content":"<","needQuote":true,"nodes":[]},{"pos":[811121,811128],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[811253,811254],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[811425,811440],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[811504,811505],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[811582,811593],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[811679,811682]},{"pos":[811716,811723],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[811756,811757],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[811785,811786]},{"pos":[811841,811845],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[811904,811907]},{"pos":[811941,811948],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[811982,811983]},{"pos":[812042,812050],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[812113,812116]},{"pos":[812174,812181],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[812242,812243],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[812270,812271],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[812298,812299],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[812819,812886],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Double&gt;&gt;)","pos":[0,67],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)"}]},{"pos":[813452,813464],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[813525,813526],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[813603,813614],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[813699,813700],"content":"<","needQuote":true,"nodes":[]},{"pos":[813727,813734],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[813800,813801]},{"pos":[813856,813860],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[813918,813919],"content":"<","needQuote":true,"nodes":[]},{"pos":[813946,813953],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[813987,813988]},{"pos":[814047,814055],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[814117,814118],"content":"<","needQuote":true,"nodes":[]},{"pos":[814168,814174],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[814298,814299],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[814469,814484],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[814548,814549],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[814626,814637],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[814723,814726]},{"pos":[814760,814767],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[814800,814801],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[814829,814830]},{"pos":[814885,814889],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[814948,814951]},{"pos":[814985,814992],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[815026,815027]},{"pos":[815086,815094],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[815157,815160]},{"pos":[815217,815223],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[815283,815284],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[815311,815312],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[815339,815340],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[815856,815922],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Int32&gt;&gt;)","pos":[0,66],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)"}]},{"pos":[816484,816496],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[816557,816558],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[816635,816646],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[816731,816732],"content":"<","needQuote":true,"nodes":[]},{"pos":[816759,816766],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[816832,816833]},{"pos":[816888,816892],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[816950,816951],"content":"<","needQuote":true,"nodes":[]},{"pos":[816978,816985],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[817019,817020]},{"pos":[817079,817087],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[817149,817150],"content":"<","needQuote":true,"nodes":[]},{"pos":[817199,817204],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[817327,817328],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[817497,817512],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[817576,817577],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[817654,817665],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[817751,817754]},{"pos":[817788,817795],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[817828,817829],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[817857,817858]},{"pos":[817913,817917],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[817976,817979]},{"pos":[818013,818020],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[818054,818055]},{"pos":[818114,818122],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[818185,818188]},{"pos":[818244,818249],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[818308,818309],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[818336,818337],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[818364,818365],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[818878,818944],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Int64&gt;&gt;)","pos":[0,66],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)"}]},{"pos":[819506,819518],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[819579,819580],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[819657,819668],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[819753,819754],"content":"<","needQuote":true,"nodes":[]},{"pos":[819781,819788],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[819854,819855]},{"pos":[819910,819914],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[819972,819973],"content":"<","needQuote":true,"nodes":[]},{"pos":[820000,820007],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[820041,820042]},{"pos":[820101,820109],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[820171,820172],"content":"<","needQuote":true,"nodes":[]},{"pos":[820221,820226],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[820349,820350],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[820519,820534],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[820598,820599],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[820676,820687],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[820773,820776]},{"pos":[820810,820817],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[820850,820851],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[820879,820880]},{"pos":[820935,820939],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[820998,821001]},{"pos":[821035,821042],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[821076,821077]},{"pos":[821136,821144],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[821207,821210]},{"pos":[821266,821271],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[821330,821331],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[821358,821359],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[821386,821387],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[821901,821968],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Single&gt;&gt;)","pos":[0,67],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)"}]},{"pos":[822534,822546],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[822607,822608],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[822685,822696],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[822781,822782],"content":"<","needQuote":true,"nodes":[]},{"pos":[822809,822816],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[822882,822883]},{"pos":[822938,822942],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[823000,823001],"content":"<","needQuote":true,"nodes":[]},{"pos":[823028,823035],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[823069,823070]},{"pos":[823129,823137],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[823199,823200],"content":"<","needQuote":true,"nodes":[]},{"pos":[823250,823256],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[823380,823381],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[823551,823566],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[823630,823631],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[823708,823719],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[823805,823808]},{"pos":[823842,823849],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[823882,823883],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[823911,823912]},{"pos":[823967,823971],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[824030,824033]},{"pos":[824067,824074],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[824108,824109]},{"pos":[824168,824176],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[824239,824242]},{"pos":[824299,824305],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[824365,824366],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[824393,824394],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[824421,824422],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[824922,824979],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Single>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Single&gt;)","pos":[0,57],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Single>)"}]},{"pos":[825478,825490],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[825551,825552],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[825629,825640],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[825725,825726],"content":"<","needQuote":true,"nodes":[]},{"pos":[825753,825760],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[825826,825827]},{"pos":[825882,825886],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[825944,825945],"content":"<","needQuote":true,"nodes":[]},{"pos":[825972,825979],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[826013,826014]},{"pos":[826069,826075],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[826167,826168],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[826321,826336],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[826400,826401],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[826478,826489],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[826575,826578]},{"pos":[826612,826619],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[826652,826653],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[826681,826682]},{"pos":[826737,826741],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[826800,826803]},{"pos":[826837,826844],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[826878,826879]},{"pos":[826934,826940],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[827000,827001],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[827028,827029],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[827479,827546],"content":"Min<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TResult&gt;)","pos":[0,67],"source":"Min<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)"}]},{"pos":[828051,828072],"content":"Min<TSource, TResult>","needQuote":true,"nodes":[{"content":"Min&lt;TSource, TResult&gt;","pos":[0,21],"source":"Min<TSource, TResult>"}]},{"pos":[828142,828143],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[828220,828231],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[828316,828317],"content":"<","needQuote":true,"nodes":[]},{"pos":[828344,828351],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[828417,828418]},{"pos":[828473,828477],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[828535,828536],"content":"<","needQuote":true,"nodes":[]},{"pos":[828563,828570],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[828604,828605]},{"pos":[828637,828644],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[828709,828710],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[828853,828877],"content":"Min(Of TSource, TResult)","needQuote":true,"nodes":[{"content":"Min(Of TSource, TResult)","pos":[0,24]}]},{"pos":[828950,828951],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[829028,829039],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[829125,829128]},{"pos":[829162,829169],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[829202,829203],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[829231,829232]},{"pos":[829287,829291],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[829350,829353]},{"pos":[829387,829394],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[829428,829429]},{"pos":[829461,829468],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[829501,829502],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[829529,829530],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[829959,829987],"content":"OfType<TResult>(IEnumerable)","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;(IEnumerable)","pos":[0,28],"source":"OfType<TResult>(IEnumerable)"}]},{"pos":[830302,830317],"content":"OfType<TResult>","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;","pos":[0,15],"source":"OfType<TResult>"}]},{"pos":[830381,830382],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[830449,830460],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[830537,830538],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[830650,830668],"content":"OfType(Of TResult)","needQuote":true,"nodes":[{"content":"OfType(Of TResult)","pos":[0,18]}]},{"pos":[830735,830736],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[830803,830814],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[830891,830892],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[831241,831306],"content":"OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)","needQuote":true,"nodes":[{"content":"OrderBy&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;)","pos":[0,65],"source":"OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)"}]},{"pos":[831809,831831],"content":"OrderBy<TSource, TKey>","needQuote":true,"nodes":[{"content":"OrderBy&lt;TSource, TKey&gt;","pos":[0,22],"source":"OrderBy<TSource, TKey>"}]},{"pos":[831902,831903],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[831980,831991],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[832076,832077],"content":"<","needQuote":true,"nodes":[]},{"pos":[832104,832111],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[832177,832178]},{"pos":[832233,832237],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[832295,832296],"content":"<","needQuote":true,"nodes":[]},{"pos":[832323,832330],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[832364,832365]},{"pos":[832397,832401],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[832463,832464],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[832611,832636],"content":"OrderBy(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"OrderBy(Of TSource, TKey)","pos":[0,25]}]},{"pos":[832710,832711],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[832788,832799],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[832885,832888]},{"pos":[832922,832929],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[832962,832963],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[832991,832992]},{"pos":[833047,833051],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[833110,833113]},{"pos":[833147,833154],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[833188,833189]},{"pos":[833221,833225],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[833255,833256],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[833283,833284],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[833790,833872],"content":"OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)","needQuote":true,"nodes":[{"content":"OrderBy&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, IComparer&lt;TKey&gt;)","pos":[0,82],"source":"OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)"}]},{"pos":[834528,834550],"content":"OrderBy<TSource, TKey>","needQuote":true,"nodes":[{"content":"OrderBy&lt;TSource, TKey&gt;","pos":[0,22],"source":"OrderBy<TSource, TKey>"}]},{"pos":[834621,834622],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[834699,834710],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[834795,834796],"content":"<","needQuote":true,"nodes":[]},{"pos":[834823,834830],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[834896,834897]},{"pos":[834952,834956],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[835014,835015],"content":"<","needQuote":true,"nodes":[]},{"pos":[835042,835049],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[835083,835084]},{"pos":[835116,835120],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[835183,835184]},{"pos":[835264,835273],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"pos":[835356,835357],"content":"<","needQuote":true,"nodes":[]},{"pos":[835384,835388],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[835450,835451],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[835640,835665],"content":"OrderBy(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"OrderBy(Of TSource, TKey)","pos":[0,25]}]},{"pos":[835739,835740],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[835817,835828],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[835914,835917]},{"pos":[835951,835958],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[835991,835992],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[836020,836021]},{"pos":[836076,836080],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[836139,836142]},{"pos":[836176,836183],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[836217,836218]},{"pos":[836250,836254],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[836284,836285],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[836313,836314]},{"pos":[836394,836403],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"content":"(Of","pos":[836487,836490]},{"pos":[836524,836528],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[836558,836559],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[836586,836587],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[837140,837215],"content":"OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)","needQuote":true,"nodes":[{"content":"OrderByDescending&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;)","pos":[0,75],"source":"OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)"}]},{"pos":[837758,837790],"content":"OrderByDescending<TSource, TKey>","needQuote":true,"nodes":[{"content":"OrderByDescending&lt;TSource, TKey&gt;","pos":[0,32],"source":"OrderByDescending<TSource, TKey>"}]},{"pos":[837871,837872],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[837949,837960],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[838045,838046],"content":"<","needQuote":true,"nodes":[]},{"pos":[838073,838080],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[838146,838147]},{"pos":[838202,838206],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[838264,838265],"content":"<","needQuote":true,"nodes":[]},{"pos":[838292,838299],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[838333,838334]},{"pos":[838366,838370],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[838432,838433],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[838590,838625],"content":"OrderByDescending(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"OrderByDescending(Of TSource, TKey)","pos":[0,35]}]},{"pos":[838709,838710],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[838787,838798],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[838884,838887]},{"pos":[838921,838928],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[838961,838962],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[838990,838991]},{"pos":[839046,839050],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[839109,839112]},{"pos":[839146,839153],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[839187,839188]},{"pos":[839220,839224],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[839254,839255],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[839282,839283],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[839829,839921],"content":"OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)","needQuote":true,"nodes":[{"content":"OrderByDescending&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, IComparer&lt;TKey&gt;)","pos":[0,92],"source":"OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)"}]},{"pos":[840617,840649],"content":"OrderByDescending<TSource, TKey>","needQuote":true,"nodes":[{"content":"OrderByDescending&lt;TSource, TKey&gt;","pos":[0,32],"source":"OrderByDescending<TSource, TKey>"}]},{"pos":[840730,840731],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[840808,840819],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[840904,840905],"content":"<","needQuote":true,"nodes":[]},{"pos":[840932,840939],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[841005,841006]},{"pos":[841061,841065],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[841123,841124],"content":"<","needQuote":true,"nodes":[]},{"pos":[841151,841158],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[841192,841193]},{"pos":[841225,841229],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[841292,841293]},{"pos":[841373,841382],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"pos":[841465,841466],"content":"<","needQuote":true,"nodes":[]},{"pos":[841493,841497],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[841559,841560],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[841759,841794],"content":"OrderByDescending(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"OrderByDescending(Of TSource, TKey)","pos":[0,35]}]},{"pos":[841878,841879],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[841956,841967],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[842053,842056]},{"pos":[842090,842097],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[842130,842131],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[842159,842160]},{"pos":[842215,842219],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[842278,842281]},{"pos":[842315,842322],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[842356,842357]},{"pos":[842389,842393],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[842423,842424],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[842452,842453]},{"pos":[842533,842542],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"content":"(Of","pos":[842626,842629]},{"pos":[842663,842667],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[842697,842698],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[842725,842726],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[843278,843316],"content":"Reverse<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Reverse&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,38],"source":"Reverse<TSource>(IEnumerable<TSource>)"}]},{"pos":[843697,843713],"content":"Reverse<TSource>","needQuote":true,"nodes":[{"content":"Reverse&lt;TSource&gt;","pos":[0,16],"source":"Reverse<TSource>"}]},{"pos":[843778,843779],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[843856,843867],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[843952,843953],"content":"<","needQuote":true,"nodes":[]},{"pos":[843980,843987],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[844052,844053],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[844179,844198],"content":"Reverse(Of TSource)","needQuote":true,"nodes":[{"content":"Reverse(Of TSource)","pos":[0,19]}]},{"pos":[844266,844267],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[844344,844355],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[844441,844444]},{"pos":[844478,844485],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[844518,844519],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[844546,844547],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[844932,845002],"content":"Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)","needQuote":true,"nodes":[{"content":"Select&lt;TSource, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TResult&gt;)","pos":[0,70],"source":"Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)"}]},{"pos":[845519,845543],"content":"Select<TSource, TResult>","needQuote":true,"nodes":[{"content":"Select&lt;TSource, TResult&gt;","pos":[0,24],"source":"Select<TSource, TResult>"}]},{"pos":[845616,845617],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[845694,845705],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[845790,845791],"content":"<","needQuote":true,"nodes":[]},{"pos":[845818,845825],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[845891,845892]},{"pos":[845947,845951],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[846009,846010],"content":"<","needQuote":true,"nodes":[]},{"pos":[846037,846044],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[846078,846079]},{"pos":[846111,846118],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[846183,846184],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[846330,846357],"content":"Select(Of TSource, TResult)","needQuote":true,"nodes":[{"content":"Select(Of TSource, TResult)","pos":[0,27]}]},{"pos":[846433,846434],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[846511,846522],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[846608,846611]},{"pos":[846645,846652],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[846685,846686],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[846714,846715]},{"pos":[846770,846774],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[846833,846836]},{"pos":[846870,846877],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[846911,846912]},{"pos":[846944,846951],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[846984,846985],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[847012,847013],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[847498,847575],"content":"Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, TResult>)","needQuote":true,"nodes":[{"content":"Select&lt;TSource, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32, TResult&gt;)","pos":[0,77],"source":"Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, TResult>)"}]},{"pos":[848140,848164],"content":"Select<TSource, TResult>","needQuote":true,"nodes":[{"content":"Select&lt;TSource, TResult&gt;","pos":[0,24],"source":"Select<TSource, TResult>"}]},{"pos":[848237,848238],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[848315,848326],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[848411,848412],"content":"<","needQuote":true,"nodes":[]},{"pos":[848439,848446],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[848512,848513]},{"pos":[848568,848572],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[848630,848631],"content":"<","needQuote":true,"nodes":[]},{"pos":[848658,848665],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[848699,848700]},{"pos":[848754,848759],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[848819,848820]},{"pos":[848852,848859],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[848924,848925],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[849084,849111],"content":"Select(Of TSource, TResult)","needQuote":true,"nodes":[{"content":"Select(Of TSource, TResult)","pos":[0,27]}]},{"pos":[849187,849188],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[849265,849276],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[849362,849365]},{"pos":[849399,849406],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[849439,849440],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[849468,849469]},{"pos":[849524,849528],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[849587,849590]},{"pos":[849624,849631],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[849665,849666]},{"pos":[849720,849725],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[849785,849786]},{"pos":[849818,849825],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[849858,849859],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[849886,849887],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[850430,850517],"content":"SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TResult>>)","needQuote":true,"nodes":[{"content":"SelectMany&lt;TSource, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, IEnumerable&lt;TResult&gt;&gt;)","pos":[0,87],"source":"SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TResult>>)"}]},{"pos":[851189,851217],"content":"SelectMany<TSource, TResult>","needQuote":true,"nodes":[{"content":"SelectMany&lt;TSource, TResult&gt;","pos":[0,28],"source":"SelectMany<TSource, TResult>"}]},{"pos":[851294,851295],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[851372,851383],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[851468,851469],"content":"<","needQuote":true,"nodes":[]},{"pos":[851496,851503],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[851569,851570]},{"pos":[851625,851629],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[851687,851688],"content":"<","needQuote":true,"nodes":[]},{"pos":[851715,851722],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[851756,851757]},{"pos":[851839,851850],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[851935,851936],"content":"<","needQuote":true,"nodes":[]},{"pos":[851963,851970],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[852067,852068],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[852258,852289],"content":"SelectMany(Of TSource, TResult)","needQuote":true,"nodes":[{"content":"SelectMany(Of TSource, TResult)","pos":[0,31]}]},{"pos":[852369,852370],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[852447,852458],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[852544,852547]},{"pos":[852581,852588],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[852621,852622],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[852650,852651]},{"pos":[852706,852710],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[852769,852772]},{"pos":[852806,852813],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[852847,852848]},{"pos":[852930,852941],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[853027,853030]},{"pos":[853064,853071],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[853104,853105],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[853132,853133],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[853160,853161],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[853771,853865],"content":"SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TResult>>)","needQuote":true,"nodes":[{"content":"SelectMany&lt;TSource, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32, IEnumerable&lt;TResult&gt;&gt;)","pos":[0,94],"source":"SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TResult>>)"}]},{"pos":[854585,854613],"content":"SelectMany<TSource, TResult>","needQuote":true,"nodes":[{"content":"SelectMany&lt;TSource, TResult&gt;","pos":[0,28],"source":"SelectMany<TSource, TResult>"}]},{"pos":[854690,854691],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[854768,854779],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[854864,854865],"content":"<","needQuote":true,"nodes":[]},{"pos":[854892,854899],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[854965,854966]},{"pos":[855021,855025],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[855083,855084],"content":"<","needQuote":true,"nodes":[]},{"pos":[855111,855118],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[855152,855153]},{"pos":[855207,855212],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[855272,855273]},{"pos":[855355,855366],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[855451,855452],"content":"<","needQuote":true,"nodes":[]},{"pos":[855479,855486],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[855583,855584],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[855787,855818],"content":"SelectMany(Of TSource, TResult)","needQuote":true,"nodes":[{"content":"SelectMany(Of TSource, TResult)","pos":[0,31]}]},{"pos":[855898,855899],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[855976,855987],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[856073,856076]},{"pos":[856110,856117],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[856150,856151],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[856179,856180]},{"pos":[856235,856239],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[856298,856301]},{"pos":[856335,856342],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[856376,856377]},{"pos":[856431,856436],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[856496,856497]},{"pos":[856579,856590],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[856676,856679]},{"pos":[856713,856720],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[856753,856754],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[856781,856782],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[856809,856810],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[857459,857600],"content":"SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)","needQuote":true,"nodes":[{"content":"SelectMany&lt;TSource, TCollection, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, IEnumerable&lt;TCollection&gt;&gt;, Func&lt;TSource, TCollection, TResult&gt;)","pos":[0,141],"source":"SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)"}]},{"pos":[858479,858520],"content":"SelectMany<TSource, TCollection, TResult>","needQuote":true,"nodes":[{"content":"SelectMany&lt;TSource, TCollection, TResult&gt;","pos":[0,41],"source":"SelectMany<TSource, TCollection, TResult>"}]},{"pos":[858610,858611],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[858688,858699],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[858784,858785],"content":"<","needQuote":true,"nodes":[]},{"pos":[858812,858819],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[858885,858886]},{"pos":[858941,858945],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[859003,859004],"content":"<","needQuote":true,"nodes":[]},{"pos":[859031,859038],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[859072,859073]},{"pos":[859155,859166],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[859251,859252],"content":"<","needQuote":true,"nodes":[]},{"pos":[859279,859290],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[859392,859393]},{"pos":[859448,859452],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[859510,859511],"content":"<","needQuote":true,"nodes":[]},{"pos":[859538,859545],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[859579,859580]},{"pos":[859612,859623],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[859661,859662]},{"pos":[859694,859701],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[859766,859767],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[859982,860026],"content":"SelectMany(Of TSource, TCollection, TResult)","needQuote":true,"nodes":[{"content":"SelectMany(Of TSource, TCollection, TResult)","pos":[0,44]}]},{"pos":[860119,860120],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[860197,860208],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[860294,860297]},{"pos":[860331,860338],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[860371,860372],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[860400,860401]},{"pos":[860456,860460],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[860519,860522]},{"pos":[860556,860563],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[860597,860598]},{"pos":[860680,860691],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[860777,860780]},{"pos":[860814,860825],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"pos":[860862,860863],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[860890,860891],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[860919,860920]},{"pos":[860975,860979],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[861038,861041]},{"pos":[861075,861082],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[861116,861117]},{"pos":[861149,861160],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[861198,861199]},{"pos":[861231,861238],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[861271,861272],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[861299,861300],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[862071,862219],"content":"SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)","needQuote":true,"nodes":[{"content":"SelectMany&lt;TSource, TCollection, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32, IEnumerable&lt;TCollection&gt;&gt;, Func&lt;TSource, TCollection, TResult&gt;)","pos":[0,148],"source":"SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)"}]},{"pos":[863146,863187],"content":"SelectMany<TSource, TCollection, TResult>","needQuote":true,"nodes":[{"content":"SelectMany&lt;TSource, TCollection, TResult&gt;","pos":[0,41],"source":"SelectMany<TSource, TCollection, TResult>"}]},{"pos":[863277,863278],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[863355,863366],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[863451,863452],"content":"<","needQuote":true,"nodes":[]},{"pos":[863479,863486],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[863552,863553]},{"pos":[863608,863612],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[863670,863671],"content":"<","needQuote":true,"nodes":[]},{"pos":[863698,863705],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[863739,863740]},{"pos":[863794,863799],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[863859,863860]},{"pos":[863942,863953],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[864038,864039],"content":"<","needQuote":true,"nodes":[]},{"pos":[864066,864077],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[864179,864180]},{"pos":[864235,864239],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[864297,864298],"content":"<","needQuote":true,"nodes":[]},{"pos":[864325,864332],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[864366,864367]},{"pos":[864399,864410],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[864448,864449]},{"pos":[864481,864488],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[864553,864554],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[864782,864826],"content":"SelectMany(Of TSource, TCollection, TResult)","needQuote":true,"nodes":[{"content":"SelectMany(Of TSource, TCollection, TResult)","pos":[0,44]}]},{"pos":[864919,864920],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[864997,865008],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[865094,865097]},{"pos":[865131,865138],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[865171,865172],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[865200,865201]},{"pos":[865256,865260],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[865319,865322]},{"pos":[865356,865363],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[865397,865398]},{"pos":[865452,865457],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[865517,865518]},{"pos":[865600,865611],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[865697,865700]},{"pos":[865734,865745],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"pos":[865782,865783],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[865810,865811],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[865839,865840]},{"pos":[865895,865899],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[865958,865961]},{"pos":[865995,866002],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[866036,866037]},{"pos":[866069,866080],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[866118,866119]},{"pos":[866151,866158],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[866191,866192],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[866219,866220],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[866966,867032],"content":"SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"SequenceEqual&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;)","pos":[0,66],"source":"SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)"}]},{"pos":[867607,867629],"content":"SequenceEqual<TSource>","needQuote":true,"nodes":[{"content":"SequenceEqual&lt;TSource&gt;","pos":[0,22],"source":"SequenceEqual<TSource>"}]},{"pos":[867700,867701],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[867778,867789],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[867874,867875],"content":"<","needQuote":true,"nodes":[]},{"pos":[867902,867909],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[867975,867976]},{"pos":[868058,868069],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[868154,868155],"content":"<","needQuote":true,"nodes":[]},{"pos":[868182,868189],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[868254,868255],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[868431,868456],"content":"SequenceEqual(Of TSource)","needQuote":true,"nodes":[{"content":"SequenceEqual(Of TSource)","pos":[0,25]}]},{"pos":[868530,868531],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[868608,868619],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[868705,868708]},{"pos":[868742,868749],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[868782,868783],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[868811,868812]},{"pos":[868894,868905],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[868991,868994]},{"pos":[869028,869035],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[869068,869069],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[869096,869097],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[869671,869765],"content":"SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)","needQuote":true,"nodes":[{"content":"SequenceEqual&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;, IEqualityComparer&lt;TSource&gt;)","pos":[0,94],"source":"SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)"}]},{"pos":[870534,870556],"content":"SequenceEqual<TSource>","needQuote":true,"nodes":[{"content":"SequenceEqual&lt;TSource&gt;","pos":[0,22],"source":"SequenceEqual<TSource>"}]},{"pos":[870627,870628],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[870705,870716],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[870801,870802],"content":"<","needQuote":true,"nodes":[]},{"pos":[870829,870836],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[870902,870903]},{"pos":[870985,870996],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[871081,871082],"content":"<","needQuote":true,"nodes":[]},{"pos":[871109,871116],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[871182,871183]},{"pos":[871271,871288],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[871379,871380],"content":"<","needQuote":true,"nodes":[]},{"pos":[871407,871414],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[871479,871480],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[871706,871731],"content":"SequenceEqual(Of TSource)","needQuote":true,"nodes":[{"content":"SequenceEqual(Of TSource)","pos":[0,25]}]},{"pos":[871805,871806],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[871883,871894],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[871980,871983]},{"pos":[872017,872024],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[872057,872058],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[872086,872087]},{"pos":[872169,872180],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[872266,872269]},{"pos":[872303,872310],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[872343,872344],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[872372,872373]},{"pos":[872461,872478],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[872570,872573]},{"pos":[872607,872614],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[872647,872648],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[872675,872676],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[873258,873295],"content":"Single<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Single&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,37],"source":"Single<TSource>(IEnumerable<TSource>)"}]},{"pos":[873672,873687],"content":"Single<TSource>","needQuote":true,"nodes":[{"content":"Single&lt;TSource&gt;","pos":[0,15],"source":"Single<TSource>"}]},{"pos":[873751,873752],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[873829,873840],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[873925,873926],"content":"<","needQuote":true,"nodes":[]},{"pos":[873953,873960],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[874025,874026],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[874151,874169],"content":"Single(Of TSource)","needQuote":true,"nodes":[{"content":"Single(Of TSource)","pos":[0,18]}]},{"pos":[874236,874237],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[874314,874325],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[874411,874414]},{"pos":[874448,874455],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[874488,874489],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[874516,874517],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[874910,874971],"content":"Single<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"Single&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,61],"source":"Single<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[875486,875501],"content":"Single<TSource>","needQuote":true,"nodes":[{"content":"Single&lt;TSource&gt;","pos":[0,15],"source":"Single<TSource>"}]},{"pos":[875565,875566],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[875643,875654],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[875739,875740],"content":"<","needQuote":true,"nodes":[]},{"pos":[875767,875774],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[875840,875841]},{"pos":[875896,875900],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[875958,875959],"content":"<","needQuote":true,"nodes":[]},{"pos":[875986,875993],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[876027,876028]},{"pos":[876084,876091],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[876184,876185],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[876342,876360],"content":"Single(Of TSource)","needQuote":true,"nodes":[{"content":"Single(Of TSource)","pos":[0,18]}]},{"pos":[876427,876428],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[876505,876516],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[876602,876605]},{"pos":[876639,876646],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[876679,876680],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[876708,876709]},{"pos":[876764,876768],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[876827,876830]},{"pos":[876864,876871],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[876905,876906]},{"pos":[876962,876969],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[877030,877031],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[877058,877059],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[877512,877558],"content":"SingleOrDefault<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"SingleOrDefault&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,46],"source":"SingleOrDefault<TSource>(IEnumerable<TSource>)"}]},{"pos":[877971,877995],"content":"SingleOrDefault<TSource>","needQuote":true,"nodes":[{"content":"SingleOrDefault&lt;TSource&gt;","pos":[0,24],"source":"SingleOrDefault<TSource>"}]},{"pos":[878068,878069],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[878146,878157],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[878242,878243],"content":"<","needQuote":true,"nodes":[]},{"pos":[878270,878277],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[878342,878343],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[878477,878504],"content":"SingleOrDefault(Of TSource)","needQuote":true,"nodes":[{"content":"SingleOrDefault(Of TSource)","pos":[0,27]}]},{"pos":[878580,878581],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[878658,878669],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[878755,878758]},{"pos":[878792,878799],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[878832,878833],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[878860,878861],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[879290,879360],"content":"SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"SingleOrDefault&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,70],"source":"SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[879911,879935],"content":"SingleOrDefault<TSource>","needQuote":true,"nodes":[{"content":"SingleOrDefault&lt;TSource&gt;","pos":[0,24],"source":"SingleOrDefault<TSource>"}]},{"pos":[880008,880009],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[880086,880097],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[880182,880183],"content":"<","needQuote":true,"nodes":[]},{"pos":[880210,880217],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[880283,880284]},{"pos":[880339,880343],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[880401,880402],"content":"<","needQuote":true,"nodes":[]},{"pos":[880429,880436],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[880470,880471]},{"pos":[880527,880534],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[880627,880628],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[880794,880821],"content":"SingleOrDefault(Of TSource)","needQuote":true,"nodes":[{"content":"SingleOrDefault(Of TSource)","pos":[0,27]}]},{"pos":[880897,880898],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[880975,880986],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[881072,881075]},{"pos":[881109,881116],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[881149,881150],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[881178,881179]},{"pos":[881234,881238],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[881297,881300]},{"pos":[881334,881341],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[881375,881376]},{"pos":[881432,881439],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[881500,881501],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[881528,881529],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[882011,882053],"content":"Skip<TSource>(IEnumerable<TSource>, Int32)","needQuote":true,"nodes":[{"content":"Skip&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Int32)","pos":[0,42],"source":"Skip<TSource>(IEnumerable<TSource>, Int32)"}]},{"pos":[882470,882483],"content":"Skip<TSource>","needQuote":true,"nodes":[{"content":"Skip&lt;TSource&gt;","pos":[0,13],"source":"Skip<TSource>"}]},{"pos":[882545,882546],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[882623,882634],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[882719,882720],"content":"<","needQuote":true,"nodes":[]},{"pos":[882747,882754],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[882820,882821]},{"pos":[882875,882880],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[882939,882940],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[883076,883092],"content":"Skip(Of TSource)","needQuote":true,"nodes":[{"content":"Skip(Of TSource)","pos":[0,16]}]},{"pos":[883157,883158],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[883235,883246],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[883332,883335]},{"pos":[883369,883376],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[883409,883410],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[883438,883439]},{"pos":[883493,883498],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[883557,883558],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[883975,884039],"content":"SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"SkipWhile&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,64],"source":"SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[884566,884584],"content":"SkipWhile<TSource>","needQuote":true,"nodes":[{"content":"SkipWhile&lt;TSource&gt;","pos":[0,18],"source":"SkipWhile<TSource>"}]},{"pos":[884651,884652],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[884729,884740],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[884825,884826],"content":"<","needQuote":true,"nodes":[]},{"pos":[884853,884860],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[884926,884927]},{"pos":[884982,884986],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[885044,885045],"content":"<","needQuote":true,"nodes":[]},{"pos":[885072,885079],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[885113,885114]},{"pos":[885170,885177],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[885270,885271],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[885431,885452],"content":"SkipWhile(Of TSource)","needQuote":true,"nodes":[{"content":"SkipWhile(Of TSource)","pos":[0,21]}]},{"pos":[885522,885523],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[885600,885611],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[885697,885700]},{"pos":[885734,885741],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[885774,885775],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[885803,885804]},{"pos":[885859,885863],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[885922,885925]},{"pos":[885959,885966],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[886000,886001]},{"pos":[886057,886064],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[886125,886126],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[886153,886154],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[886655,886726],"content":"SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)","needQuote":true,"nodes":[{"content":"SkipWhile&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32, Boolean&gt;)","pos":[0,71],"source":"SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)"}]},{"pos":[887301,887319],"content":"SkipWhile<TSource>","needQuote":true,"nodes":[{"content":"SkipWhile&lt;TSource&gt;","pos":[0,18],"source":"SkipWhile<TSource>"}]},{"pos":[887386,887387],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[887464,887475],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[887560,887561],"content":"<","needQuote":true,"nodes":[]},{"pos":[887588,887595],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[887661,887662]},{"pos":[887717,887721],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[887779,887780],"content":"<","needQuote":true,"nodes":[]},{"pos":[887807,887814],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[887848,887849]},{"pos":[887903,887908],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[887968,887969]},{"pos":[888025,888032],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[888125,888126],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[888299,888320],"content":"SkipWhile(Of TSource)","needQuote":true,"nodes":[{"content":"SkipWhile(Of TSource)","pos":[0,21]}]},{"pos":[888390,888391],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[888468,888479],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[888565,888568]},{"pos":[888602,888609],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[888642,888643],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[888671,888672]},{"pos":[888727,888731],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[888790,888793]},{"pos":[888827,888834],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[888868,888869]},{"pos":[888923,888928],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[888988,888989]},{"pos":[889045,889052],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[889113,889114],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[889141,889142],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[889651,889709],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Decimal&gt;)","pos":[0,58],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)"}]},{"pos":[890212,890224],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[890285,890286],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[890363,890374],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[890459,890460],"content":"<","needQuote":true,"nodes":[]},{"pos":[890487,890494],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[890560,890561]},{"pos":[890616,890620],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[890678,890679],"content":"<","needQuote":true,"nodes":[]},{"pos":[890706,890713],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[890747,890748]},{"pos":[890804,890811],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[890904,890905],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[891059,891074],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[891138,891139],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[891216,891227],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[891313,891316]},{"pos":[891350,891357],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[891390,891391],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[891419,891420]},{"pos":[891475,891479],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[891538,891541]},{"pos":[891575,891582],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[891616,891617]},{"pos":[891673,891680],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[891741,891742],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[891769,891770],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[892233,892290],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Double>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Double&gt;)","pos":[0,57],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Double>)"}]},{"pos":[892789,892801],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[892862,892863],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[892940,892951],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[893036,893037],"content":"<","needQuote":true,"nodes":[]},{"pos":[893064,893071],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[893137,893138]},{"pos":[893193,893197],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[893255,893256],"content":"<","needQuote":true,"nodes":[]},{"pos":[893283,893290],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[893324,893325]},{"pos":[893380,893386],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[893478,893479],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[893632,893647],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[893711,893712],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[893789,893800],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[893886,893889]},{"pos":[893923,893930],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[893963,893964],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[893992,893993]},{"pos":[894048,894052],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[894111,894114]},{"pos":[894148,894155],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[894189,894190]},{"pos":[894245,894251],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[894311,894312],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[894339,894340],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[894799,894855],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32&gt;)","pos":[0,56],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)"}]},{"pos":[895350,895362],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[895423,895424],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[895501,895512],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[895597,895598],"content":"<","needQuote":true,"nodes":[]},{"pos":[895625,895632],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[895698,895699]},{"pos":[895754,895758],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[895816,895817],"content":"<","needQuote":true,"nodes":[]},{"pos":[895844,895851],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[895885,895886]},{"pos":[895940,895945],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[896036,896037],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[896189,896204],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[896268,896269],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[896346,896357],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[896443,896446]},{"pos":[896480,896487],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[896520,896521],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[896549,896550]},{"pos":[896605,896609],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[896668,896671]},{"pos":[896705,896712],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[896746,896747]},{"pos":[896801,896806],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[896865,896866],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[896893,896894],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[897350,897406],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int64&gt;)","pos":[0,56],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)"}]},{"pos":[897901,897913],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[897974,897975],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[898052,898063],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[898148,898149],"content":"<","needQuote":true,"nodes":[]},{"pos":[898176,898183],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[898249,898250]},{"pos":[898305,898309],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[898367,898368],"content":"<","needQuote":true,"nodes":[]},{"pos":[898395,898402],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[898436,898437]},{"pos":[898491,898496],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[898587,898588],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[898740,898755],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[898819,898820],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[898897,898908],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[898994,898997]},{"pos":[899031,899038],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[899071,899072],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[899100,899101]},{"pos":[899156,899160],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[899219,899222]},{"pos":[899256,899263],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[899297,899298]},{"pos":[899352,899357],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[899416,899417],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[899444,899445],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[899920,899988],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Decimal&gt;&gt;)","pos":[0,68],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)"}]},{"pos":[900558,900570],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[900631,900632],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[900709,900720],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[900805,900806],"content":"<","needQuote":true,"nodes":[]},{"pos":[900833,900840],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[900906,900907]},{"pos":[900962,900966],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[901024,901025],"content":"<","needQuote":true,"nodes":[]},{"pos":[901052,901059],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[901093,901094]},{"pos":[901153,901161],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[901223,901224],"content":"<","needQuote":true,"nodes":[]},{"pos":[901275,901282],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[901407,901408],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[901579,901594],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[901658,901659],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[901736,901747],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[901833,901836]},{"pos":[901870,901877],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[901910,901911],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[901939,901940]},{"pos":[901995,901999],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[902058,902061]},{"pos":[902095,902102],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[902136,902137]},{"pos":[902196,902204],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[902267,902270]},{"pos":[902328,902335],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[902396,902397],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[902424,902425],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[902452,902453],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[902973,903040],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Double&gt;&gt;)","pos":[0,67],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)"}]},{"pos":[903606,903618],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[903679,903680],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[903757,903768],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[903853,903854],"content":"<","needQuote":true,"nodes":[]},{"pos":[903881,903888],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[903954,903955]},{"pos":[904010,904014],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[904072,904073],"content":"<","needQuote":true,"nodes":[]},{"pos":[904100,904107],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[904141,904142]},{"pos":[904201,904209],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[904271,904272],"content":"<","needQuote":true,"nodes":[]},{"pos":[904322,904328],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[904452,904453],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[904623,904638],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[904702,904703],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[904780,904791],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[904877,904880]},{"pos":[904914,904921],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[904954,904955],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[904983,904984]},{"pos":[905039,905043],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[905102,905105]},{"pos":[905139,905146],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[905180,905181]},{"pos":[905240,905248],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[905311,905314]},{"pos":[905371,905377],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[905437,905438],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[905465,905466],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[905493,905494],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[906010,906076],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Int32&gt;&gt;)","pos":[0,66],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)"}]},{"pos":[906638,906650],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[906711,906712],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[906789,906800],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[906885,906886],"content":"<","needQuote":true,"nodes":[]},{"pos":[906913,906920],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[906986,906987]},{"pos":[907042,907046],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[907104,907105],"content":"<","needQuote":true,"nodes":[]},{"pos":[907132,907139],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[907173,907174]},{"pos":[907233,907241],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[907303,907304],"content":"<","needQuote":true,"nodes":[]},{"pos":[907353,907358],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[907481,907482],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[907651,907666],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[907730,907731],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[907808,907819],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[907905,907908]},{"pos":[907942,907949],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[907982,907983],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[908011,908012]},{"pos":[908067,908071],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[908130,908133]},{"pos":[908167,908174],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[908208,908209]},{"pos":[908268,908276],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[908339,908342]},{"pos":[908398,908403],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[908462,908463],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[908490,908491],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[908518,908519],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[909032,909098],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Int64&gt;&gt;)","pos":[0,66],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)"}]},{"pos":[909660,909672],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[909733,909734],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[909811,909822],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[909907,909908],"content":"<","needQuote":true,"nodes":[]},{"pos":[909935,909942],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[910008,910009]},{"pos":[910064,910068],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[910126,910127],"content":"<","needQuote":true,"nodes":[]},{"pos":[910154,910161],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[910195,910196]},{"pos":[910255,910263],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[910325,910326],"content":"<","needQuote":true,"nodes":[]},{"pos":[910375,910380],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[910503,910504],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[910673,910688],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[910752,910753],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[910830,910841],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[910927,910930]},{"pos":[910964,910971],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[911004,911005],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[911033,911034]},{"pos":[911089,911093],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[911152,911155]},{"pos":[911189,911196],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[911230,911231]},{"pos":[911290,911298],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[911361,911364]},{"pos":[911420,911425],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[911484,911485],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[911512,911513],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[911540,911541],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[912055,912122],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Single&gt;&gt;)","pos":[0,67],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)"}]},{"pos":[912688,912700],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[912761,912762],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[912839,912850],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[912935,912936],"content":"<","needQuote":true,"nodes":[]},{"pos":[912963,912970],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[913036,913037]},{"pos":[913092,913096],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[913154,913155],"content":"<","needQuote":true,"nodes":[]},{"pos":[913182,913189],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[913223,913224]},{"pos":[913283,913291],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[913353,913354],"content":"<","needQuote":true,"nodes":[]},{"pos":[913404,913410],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[913534,913535],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[913705,913720],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[913784,913785],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[913862,913873],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[913959,913962]},{"pos":[913996,914003],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[914036,914037],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[914065,914066]},{"pos":[914121,914125],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[914184,914187]},{"pos":[914221,914228],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[914262,914263]},{"pos":[914322,914330],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[914393,914396]},{"pos":[914453,914459],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[914519,914520],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[914547,914548],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[914575,914576],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[915076,915133],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Single>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Single&gt;)","pos":[0,57],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Single>)"}]},{"pos":[915632,915644],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[915705,915706],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[915783,915794],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[915879,915880],"content":"<","needQuote":true,"nodes":[]},{"pos":[915907,915914],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[915980,915981]},{"pos":[916036,916040],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[916098,916099],"content":"<","needQuote":true,"nodes":[]},{"pos":[916126,916133],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[916167,916168]},{"pos":[916223,916229],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[916321,916322],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[916475,916490],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[916554,916555],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[916632,916643],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[916729,916732]},{"pos":[916766,916773],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[916806,916807],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[916835,916836]},{"pos":[916891,916895],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[916954,916957]},{"pos":[916991,916998],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[917032,917033]},{"pos":[917088,917094],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[917154,917155],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[917182,917183],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[917626,917668],"content":"Take<TSource>(IEnumerable<TSource>, Int32)","needQuote":true,"nodes":[{"content":"Take&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Int32)","pos":[0,42],"source":"Take<TSource>(IEnumerable<TSource>, Int32)"}]},{"pos":[918085,918098],"content":"Take<TSource>","needQuote":true,"nodes":[{"content":"Take&lt;TSource&gt;","pos":[0,13],"source":"Take<TSource>"}]},{"pos":[918160,918161],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[918238,918249],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[918334,918335],"content":"<","needQuote":true,"nodes":[]},{"pos":[918362,918369],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[918435,918436]},{"pos":[918490,918495],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[918554,918555],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[918691,918707],"content":"Take(Of TSource)","needQuote":true,"nodes":[{"content":"Take(Of TSource)","pos":[0,16]}]},{"pos":[918772,918773],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[918850,918861],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[918947,918950]},{"pos":[918984,918991],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[919024,919025],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[919053,919054]},{"pos":[919108,919113],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[919172,919173],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[919590,919654],"content":"TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"TakeWhile&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,64],"source":"TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[920181,920199],"content":"TakeWhile<TSource>","needQuote":true,"nodes":[{"content":"TakeWhile&lt;TSource&gt;","pos":[0,18],"source":"TakeWhile<TSource>"}]},{"pos":[920266,920267],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[920344,920355],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[920440,920441],"content":"<","needQuote":true,"nodes":[]},{"pos":[920468,920475],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[920541,920542]},{"pos":[920597,920601],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[920659,920660],"content":"<","needQuote":true,"nodes":[]},{"pos":[920687,920694],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[920728,920729]},{"pos":[920785,920792],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[920885,920886],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[921046,921067],"content":"TakeWhile(Of TSource)","needQuote":true,"nodes":[{"content":"TakeWhile(Of TSource)","pos":[0,21]}]},{"pos":[921137,921138],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[921215,921226],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[921312,921315]},{"pos":[921349,921356],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[921389,921390],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[921418,921419]},{"pos":[921474,921478],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[921537,921540]},{"pos":[921574,921581],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[921615,921616]},{"pos":[921672,921679],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[921740,921741],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[921768,921769],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[922270,922341],"content":"TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)","needQuote":true,"nodes":[{"content":"TakeWhile&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32, Boolean&gt;)","pos":[0,71],"source":"TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)"}]},{"pos":[922916,922934],"content":"TakeWhile<TSource>","needQuote":true,"nodes":[{"content":"TakeWhile&lt;TSource&gt;","pos":[0,18],"source":"TakeWhile<TSource>"}]},{"pos":[923001,923002],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[923079,923090],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[923175,923176],"content":"<","needQuote":true,"nodes":[]},{"pos":[923203,923210],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[923276,923277]},{"pos":[923332,923336],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[923394,923395],"content":"<","needQuote":true,"nodes":[]},{"pos":[923422,923429],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[923463,923464]},{"pos":[923518,923523],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[923583,923584]},{"pos":[923640,923647],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[923740,923741],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[923914,923935],"content":"TakeWhile(Of TSource)","needQuote":true,"nodes":[{"content":"TakeWhile(Of TSource)","pos":[0,21]}]},{"pos":[924005,924006],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[924083,924094],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[924180,924183]},{"pos":[924217,924224],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[924257,924258],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[924286,924287]},{"pos":[924342,924346],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[924405,924408]},{"pos":[924442,924449],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[924483,924484]},{"pos":[924538,924543],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[924603,924604]},{"pos":[924660,924667],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[924728,924729],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[924756,924757],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[925238,925276],"content":"ToArray<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"ToArray&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,38],"source":"ToArray<TSource>(IEnumerable<TSource>)"}]},{"pos":[925657,925673],"content":"ToArray<TSource>","needQuote":true,"nodes":[{"content":"ToArray&lt;TSource&gt;","pos":[0,16],"source":"ToArray<TSource>"}]},{"pos":[925738,925739],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[925816,925827],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[925912,925913],"content":"<","needQuote":true,"nodes":[]},{"pos":[925940,925947],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[926012,926013],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[926139,926158],"content":"ToArray(Of TSource)","needQuote":true,"nodes":[{"content":"ToArray(Of TSource)","pos":[0,19]}]},{"pos":[926226,926227],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[926304,926315],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[926401,926404]},{"pos":[926438,926445],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[926478,926479],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[926506,926507],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[926898,926968],"content":"ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)","needQuote":true,"nodes":[{"content":"ToDictionary&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;)","pos":[0,70],"source":"ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)"}]},{"pos":[927491,927518],"content":"ToDictionary<TSource, TKey>","needQuote":true,"nodes":[{"content":"ToDictionary&lt;TSource, TKey&gt;","pos":[0,27],"source":"ToDictionary<TSource, TKey>"}]},{"pos":[927594,927595],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[927672,927683],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[927768,927769],"content":"<","needQuote":true,"nodes":[]},{"pos":[927796,927803],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[927869,927870]},{"pos":[927925,927929],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[927987,927988],"content":"<","needQuote":true,"nodes":[]},{"pos":[928015,928022],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[928056,928057]},{"pos":[928089,928093],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[928155,928156],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[928308,928338],"content":"ToDictionary(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"ToDictionary(Of TSource, TKey)","pos":[0,30]}]},{"pos":[928417,928418],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[928495,928506],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[928592,928595]},{"pos":[928629,928636],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[928669,928670],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[928698,928699]},{"pos":[928754,928758],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[928817,928820]},{"pos":[928854,928861],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[928895,928896]},{"pos":[928928,928932],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[928962,928963],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[928990,928991],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[929525,929620],"content":"ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"ToDictionary&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,95],"source":"ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)"}]},{"pos":[930328,930355],"content":"ToDictionary<TSource, TKey>","needQuote":true,"nodes":[{"content":"ToDictionary&lt;TSource, TKey&gt;","pos":[0,27],"source":"ToDictionary<TSource, TKey>"}]},{"pos":[930431,930432],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[930509,930520],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[930605,930606],"content":"<","needQuote":true,"nodes":[]},{"pos":[930633,930640],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[930706,930707]},{"pos":[930762,930766],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[930824,930825],"content":"<","needQuote":true,"nodes":[]},{"pos":[930852,930859],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[930893,930894]},{"pos":[930926,930930],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[930993,930994]},{"pos":[931082,931099],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[931190,931191],"content":"<","needQuote":true,"nodes":[]},{"pos":[931218,931222],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[931284,931285],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[931487,931517],"content":"ToDictionary(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"ToDictionary(Of TSource, TKey)","pos":[0,30]}]},{"pos":[931596,931597],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[931674,931685],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[931771,931774]},{"pos":[931808,931815],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[931848,931849],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[931877,931878]},{"pos":[931933,931937],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[931996,931999]},{"pos":[932033,932040],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[932074,932075]},{"pos":[932107,932111],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[932141,932142],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[932170,932171]},{"pos":[932259,932276],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[932368,932371]},{"pos":[932405,932409],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[932439,932440],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[932467,932468],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[933076,933181],"content":"ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)","needQuote":true,"nodes":[{"content":"ToDictionary&lt;TSource, TKey, TElement&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TSource, TElement&gt;)","pos":[0,105],"source":"ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)"}]},{"pos":[933850,933887],"content":"ToDictionary<TSource, TKey, TElement>","needQuote":true,"nodes":[{"content":"ToDictionary&lt;TSource, TKey, TElement&gt;","pos":[0,37],"source":"ToDictionary<TSource, TKey, TElement>"}]},{"pos":[933973,933974],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[934051,934062],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[934147,934148],"content":"<","needQuote":true,"nodes":[]},{"pos":[934175,934182],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[934248,934249]},{"pos":[934304,934308],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[934366,934367],"content":"<","needQuote":true,"nodes":[]},{"pos":[934394,934401],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[934435,934436]},{"pos":[934468,934472],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[934535,934536]},{"pos":[934591,934595],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[934653,934654],"content":"<","needQuote":true,"nodes":[]},{"pos":[934681,934688],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[934722,934723]},{"pos":[934755,934763],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[934829,934830],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[935003,935043],"content":"ToDictionary(Of TSource, TKey, TElement)","needQuote":true,"nodes":[{"content":"ToDictionary(Of TSource, TKey, TElement)","pos":[0,40]}]},{"pos":[935132,935133],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[935210,935221],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[935307,935310]},{"pos":[935344,935351],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[935384,935385],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[935413,935414]},{"pos":[935469,935473],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[935532,935535]},{"pos":[935569,935576],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[935610,935611]},{"pos":[935643,935647],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[935677,935678],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[935706,935707]},{"pos":[935762,935766],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[935825,935828]},{"pos":[935862,935869],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[935903,935904]},{"pos":[935936,935944],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[935978,935979],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[936006,936007],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[936656,936786],"content":"ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"ToDictionary&lt;TSource, TKey, TElement&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TSource, TElement&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,130],"source":"ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)"}]},{"pos":[937640,937677],"content":"ToDictionary<TSource, TKey, TElement>","needQuote":true,"nodes":[{"content":"ToDictionary&lt;TSource, TKey, TElement&gt;","pos":[0,37],"source":"ToDictionary<TSource, TKey, TElement>"}]},{"pos":[937763,937764],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[937841,937852],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[937937,937938],"content":"<","needQuote":true,"nodes":[]},{"pos":[937965,937972],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[938038,938039]},{"pos":[938094,938098],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[938156,938157],"content":"<","needQuote":true,"nodes":[]},{"pos":[938184,938191],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[938225,938226]},{"pos":[938258,938262],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[938325,938326]},{"pos":[938381,938385],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[938443,938444],"content":"<","needQuote":true,"nodes":[]},{"pos":[938471,938478],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[938512,938513]},{"pos":[938545,938553],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[938620,938621]},{"pos":[938709,938726],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[938817,938818],"content":"<","needQuote":true,"nodes":[]},{"pos":[938845,938849],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[938911,938912],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[939135,939175],"content":"ToDictionary(Of TSource, TKey, TElement)","needQuote":true,"nodes":[{"content":"ToDictionary(Of TSource, TKey, TElement)","pos":[0,40]}]},{"pos":[939264,939265],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[939342,939353],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[939439,939442]},{"pos":[939476,939483],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[939516,939517],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[939545,939546]},{"pos":[939601,939605],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[939664,939667]},{"pos":[939701,939708],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[939742,939743]},{"pos":[939775,939779],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[939809,939810],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[939838,939839]},{"pos":[939894,939898],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[939957,939960]},{"pos":[939994,940001],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[940035,940036]},{"pos":[940068,940076],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[940110,940111],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[940139,940140]},{"pos":[940228,940245],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[940337,940340]},{"pos":[940374,940378],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[940408,940409],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[940436,940437],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[941091,941128],"content":"ToList<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"ToList&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,37],"source":"ToList<TSource>(IEnumerable<TSource>)"}]},{"pos":[941505,941520],"content":"ToList<TSource>","needQuote":true,"nodes":[{"content":"ToList&lt;TSource&gt;","pos":[0,15],"source":"ToList<TSource>"}]},{"pos":[941584,941585],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[941662,941673],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[941758,941759],"content":"<","needQuote":true,"nodes":[]},{"pos":[941786,941793],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[941858,941859],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[941984,942002],"content":"ToList(Of TSource)","needQuote":true,"nodes":[{"content":"ToList(Of TSource)","pos":[0,18]}]},{"pos":[942069,942070],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[942147,942158],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[942244,942247]},{"pos":[942281,942288],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[942321,942322],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[942349,942350],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[942734,942800],"content":"ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)","needQuote":true,"nodes":[{"content":"ToLookup&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;)","pos":[0,66],"source":"ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)"}]},{"pos":[943307,943330],"content":"ToLookup<TSource, TKey>","needQuote":true,"nodes":[{"content":"ToLookup&lt;TSource, TKey&gt;","pos":[0,23],"source":"ToLookup<TSource, TKey>"}]},{"pos":[943402,943403],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[943480,943491],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[943576,943577],"content":"<","needQuote":true,"nodes":[]},{"pos":[943604,943611],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[943677,943678]},{"pos":[943733,943737],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[943795,943796],"content":"<","needQuote":true,"nodes":[]},{"pos":[943823,943830],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[943864,943865]},{"pos":[943897,943901],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[943963,943964],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[944112,944138],"content":"ToLookup(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"ToLookup(Of TSource, TKey)","pos":[0,26]}]},{"pos":[944213,944214],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[944291,944302],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[944388,944391]},{"pos":[944425,944432],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[944465,944466],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[944494,944495]},{"pos":[944550,944554],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[944613,944616]},{"pos":[944650,944657],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[944691,944692]},{"pos":[944724,944728],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[944758,944759],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[944786,944787],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[945305,945396],"content":"ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"ToLookup&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,91],"source":"ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)"}]},{"pos":[946088,946111],"content":"ToLookup<TSource, TKey>","needQuote":true,"nodes":[{"content":"ToLookup&lt;TSource, TKey&gt;","pos":[0,23],"source":"ToLookup<TSource, TKey>"}]},{"pos":[946183,946184],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[946261,946272],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[946357,946358],"content":"<","needQuote":true,"nodes":[]},{"pos":[946385,946392],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[946458,946459]},{"pos":[946514,946518],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[946576,946577],"content":"<","needQuote":true,"nodes":[]},{"pos":[946604,946611],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[946645,946646]},{"pos":[946678,946682],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[946745,946746]},{"pos":[946834,946851],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[946942,946943],"content":"<","needQuote":true,"nodes":[]},{"pos":[946970,946974],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[947036,947037],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[947235,947261],"content":"ToLookup(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"ToLookup(Of TSource, TKey)","pos":[0,26]}]},{"pos":[947336,947337],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[947414,947425],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[947511,947514]},{"pos":[947548,947555],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[947588,947589],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[947617,947618]},{"pos":[947673,947677],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[947736,947739]},{"pos":[947773,947780],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[947814,947815]},{"pos":[947847,947851],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[947881,947882],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[947910,947911]},{"pos":[947999,948016],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[948108,948111]},{"pos":[948145,948149],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[948179,948180],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[948207,948208],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[948800,948901],"content":"ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)","needQuote":true,"nodes":[{"content":"ToLookup&lt;TSource, TKey, TElement&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TSource, TElement&gt;)","pos":[0,101],"source":"ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)"}]},{"pos":[949554,949587],"content":"ToLookup<TSource, TKey, TElement>","needQuote":true,"nodes":[{"content":"ToLookup&lt;TSource, TKey, TElement&gt;","pos":[0,33],"source":"ToLookup<TSource, TKey, TElement>"}]},{"pos":[949669,949670],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[949747,949758],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[949843,949844],"content":"<","needQuote":true,"nodes":[]},{"pos":[949871,949878],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[949944,949945]},{"pos":[950000,950004],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[950062,950063],"content":"<","needQuote":true,"nodes":[]},{"pos":[950090,950097],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[950131,950132]},{"pos":[950164,950168],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[950231,950232]},{"pos":[950287,950291],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[950349,950350],"content":"<","needQuote":true,"nodes":[]},{"pos":[950377,950384],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[950418,950419]},{"pos":[950451,950459],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[950525,950526],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[950695,950731],"content":"ToLookup(Of TSource, TKey, TElement)","needQuote":true,"nodes":[{"content":"ToLookup(Of TSource, TKey, TElement)","pos":[0,36]}]},{"pos":[950816,950817],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[950894,950905],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[950991,950994]},{"pos":[951028,951035],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[951068,951069],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[951097,951098]},{"pos":[951153,951157],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[951216,951219]},{"pos":[951253,951260],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[951294,951295]},{"pos":[951327,951331],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[951361,951362],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[951390,951391]},{"pos":[951446,951450],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[951509,951512]},{"pos":[951546,951553],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[951587,951588]},{"pos":[951620,951628],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[951662,951663],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[951690,951691],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[952324,952450],"content":"ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"ToLookup&lt;TSource, TKey, TElement&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TSource, TElement&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,126],"source":"ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)"}]},{"pos":[953288,953321],"content":"ToLookup<TSource, TKey, TElement>","needQuote":true,"nodes":[{"content":"ToLookup&lt;TSource, TKey, TElement&gt;","pos":[0,33],"source":"ToLookup<TSource, TKey, TElement>"}]},{"pos":[953403,953404],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[953481,953492],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[953577,953578],"content":"<","needQuote":true,"nodes":[]},{"pos":[953605,953612],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[953678,953679]},{"pos":[953734,953738],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[953796,953797],"content":"<","needQuote":true,"nodes":[]},{"pos":[953824,953831],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[953865,953866]},{"pos":[953898,953902],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[953965,953966]},{"pos":[954021,954025],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[954083,954084],"content":"<","needQuote":true,"nodes":[]},{"pos":[954111,954118],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[954152,954153]},{"pos":[954185,954193],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[954260,954261]},{"pos":[954349,954366],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[954457,954458],"content":"<","needQuote":true,"nodes":[]},{"pos":[954485,954489],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[954551,954552],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[954771,954807],"content":"ToLookup(Of TSource, TKey, TElement)","needQuote":true,"nodes":[{"content":"ToLookup(Of TSource, TKey, TElement)","pos":[0,36]}]},{"pos":[954892,954893],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[954970,954981],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[955067,955070]},{"pos":[955104,955111],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[955144,955145],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[955173,955174]},{"pos":[955229,955233],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[955292,955295]},{"pos":[955329,955336],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[955370,955371]},{"pos":[955403,955407],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[955437,955438],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[955466,955467]},{"pos":[955522,955526],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[955585,955588]},{"pos":[955622,955629],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[955663,955664]},{"pos":[955696,955704],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[955738,955739],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[955767,955768]},{"pos":[955856,955873],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[955965,955968]},{"pos":[956002,956006],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[956036,956037],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[956064,956065],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[956750,956808],"content":"Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Union&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;)","pos":[0,58],"source":"Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)"}]},{"pos":[957351,957365],"content":"Union<TSource>","needQuote":true,"nodes":[{"content":"Union&lt;TSource&gt;","pos":[0,14],"source":"Union<TSource>"}]},{"pos":[957428,957429],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[957506,957517],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[957602,957603],"content":"<","needQuote":true,"nodes":[]},{"pos":[957630,957637],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[957703,957704]},{"pos":[957786,957797],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[957882,957883],"content":"<","needQuote":true,"nodes":[]},{"pos":[957910,957917],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[957982,957983],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[958151,958168],"content":"Union(Of TSource)","needQuote":true,"nodes":[{"content":"Union(Of TSource)","pos":[0,17]}]},{"pos":[958234,958235],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[958312,958323],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[958409,958412]},{"pos":[958446,958453],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[958486,958487],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[958515,958516]},{"pos":[958598,958609],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[958695,958698]},{"pos":[958732,958739],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[958772,958773],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[958800,958801],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[959343,959429],"content":"Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)","needQuote":true,"nodes":[{"content":"Union&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;, IEqualityComparer&lt;TSource&gt;)","pos":[0,86],"source":"Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)"}]},{"pos":[960166,960180],"content":"Union<TSource>","needQuote":true,"nodes":[{"content":"Union&lt;TSource&gt;","pos":[0,14],"source":"Union<TSource>"}]},{"pos":[960243,960244],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[960321,960332],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[960417,960418],"content":"<","needQuote":true,"nodes":[]},{"pos":[960445,960452],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[960518,960519]},{"pos":[960601,960612],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[960697,960698],"content":"<","needQuote":true,"nodes":[]},{"pos":[960725,960732],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[960798,960799]},{"pos":[960887,960904],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[960995,960996],"content":"<","needQuote":true,"nodes":[]},{"pos":[961023,961030],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[961095,961096],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[961314,961331],"content":"Union(Of TSource)","needQuote":true,"nodes":[{"content":"Union(Of TSource)","pos":[0,17]}]},{"pos":[961397,961398],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[961475,961486],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[961572,961575]},{"pos":[961609,961616],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[961649,961650],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[961678,961679]},{"pos":[961761,961772],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[961858,961861]},{"pos":[961895,961902],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[961935,961936],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[961964,961965]},{"pos":[962053,962070],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[962162,962165]},{"pos":[962199,962206],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[962239,962240],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[962267,962268],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[962857,962917],"content":"Where<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"Where&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,60],"source":"Where<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[963428,963442],"content":"Where<TSource>","needQuote":true,"nodes":[{"content":"Where&lt;TSource&gt;","pos":[0,14],"source":"Where<TSource>"}]},{"pos":[963505,963506],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[963583,963594],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[963679,963680],"content":"<","needQuote":true,"nodes":[]},{"pos":[963707,963714],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[963780,963781]},{"pos":[963836,963840],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[963898,963899],"content":"<","needQuote":true,"nodes":[]},{"pos":[963926,963933],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[963967,963968]},{"pos":[964024,964031],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[964124,964125],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[964281,964298],"content":"Where(Of TSource)","needQuote":true,"nodes":[{"content":"Where(Of TSource)","pos":[0,17]}]},{"pos":[964364,964365],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[964442,964453],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[964539,964542]},{"pos":[964576,964583],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[964616,964617],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[964645,964646]},{"pos":[964701,964705],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[964764,964767]},{"pos":[964801,964808],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[964842,964843]},{"pos":[964899,964906],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[964967,964968],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[964995,964996],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[965481,965548],"content":"Where<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)","needQuote":true,"nodes":[{"content":"Where&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32, Boolean&gt;)","pos":[0,67],"source":"Where<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)"}]},{"pos":[966107,966121],"content":"Where<TSource>","needQuote":true,"nodes":[{"content":"Where&lt;TSource&gt;","pos":[0,14],"source":"Where<TSource>"}]},{"pos":[966184,966185],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[966262,966273],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[966358,966359],"content":"<","needQuote":true,"nodes":[]},{"pos":[966386,966393],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[966459,966460]},{"pos":[966515,966519],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[966577,966578],"content":"<","needQuote":true,"nodes":[]},{"pos":[966605,966612],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[966646,966647]},{"pos":[966701,966706],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[966766,966767]},{"pos":[966823,966830],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[966923,966924],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[967093,967110],"content":"Where(Of TSource)","needQuote":true,"nodes":[{"content":"Where(Of TSource)","pos":[0,17]}]},{"pos":[967176,967177],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[967254,967265],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[967351,967354]},{"pos":[967388,967395],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[967428,967429],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[967457,967458]},{"pos":[967513,967517],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[967576,967579]},{"pos":[967613,967620],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[967654,967655]},{"pos":[967709,967714],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[967774,967775]},{"pos":[967831,967838],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[967899,967900],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[967927,967928],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[968462,968566],"content":"Zip<TFirst, TSecond, TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst, TSecond, TResult>)","needQuote":true,"nodes":[{"content":"Zip&lt;TFirst, TSecond, TResult&gt;(IEnumerable&lt;TFirst&gt;, IEnumerable&lt;TSecond&gt;, Func&lt;TFirst, TSecond, TResult&gt;)","pos":[0,104],"source":"Zip<TFirst, TSecond, TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst, TSecond, TResult>)"}]},{"pos":[969290,969319],"content":"Zip<TFirst, TSecond, TResult>","needQuote":true,"nodes":[{"content":"Zip&lt;TFirst, TSecond, TResult&gt;","pos":[0,29],"source":"Zip<TFirst, TSecond, TResult>"}]},{"pos":[969397,969398],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[969475,969486],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[969571,969572],"content":"<","needQuote":true,"nodes":[]},{"pos":[969599,969605],"content":"TFirst","needQuote":true,"nodes":[{"content":"TFirst","pos":[0,6]}]},{"content":",","pos":[969670,969671]},{"pos":[969753,969764],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[969849,969850],"content":"<","needQuote":true,"nodes":[]},{"pos":[969877,969884],"content":"TSecond","needQuote":true,"nodes":[{"content":"TSecond","pos":[0,7]}]},{"content":",","pos":[969950,969951]},{"pos":[970006,970010],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[970068,970069],"content":"<","needQuote":true,"nodes":[]},{"pos":[970096,970102],"content":"TFirst","needQuote":true,"nodes":[{"content":"TFirst","pos":[0,6]}]},{"content":",","pos":[970135,970136]},{"pos":[970168,970175],"content":"TSecond","needQuote":true,"nodes":[{"content":"TSecond","pos":[0,7]}]},{"content":",","pos":[970209,970210]},{"pos":[970242,970249],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[970314,970315],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[970506,970538],"content":"Zip(Of TFirst, TSecond, TResult)","needQuote":true,"nodes":[{"content":"Zip(Of TFirst, TSecond, TResult)","pos":[0,32]}]},{"pos":[970619,970620],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[970697,970708],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[970794,970797]},{"pos":[970831,970837],"content":"TFirst","needQuote":true,"nodes":[{"content":"TFirst","pos":[0,6]}]},{"pos":[970869,970870],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[970898,970899]},{"pos":[970981,970992],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[971078,971081]},{"pos":[971115,971122],"content":"TSecond","needQuote":true,"nodes":[{"content":"TSecond","pos":[0,7]}]},{"pos":[971155,971156],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[971184,971185]},{"pos":[971240,971244],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[971303,971306]},{"pos":[971340,971346],"content":"TFirst","needQuote":true,"nodes":[{"content":"TFirst","pos":[0,6]}]},{"content":",","pos":[971379,971380]},{"pos":[971412,971419],"content":"TSecond","needQuote":true,"nodes":[{"content":"TSecond","pos":[0,7]}]},{"content":",","pos":[971453,971454]},{"pos":[971486,971493],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[971526,971527],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[971554,971555],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[972057,972068],"content":"System.Linq","needQuote":true,"nodes":[{"content":"System.Linq","pos":[0,11]}]},{"pos":[972298,972313],"content":"IComparer<TKey>","needQuote":true,"nodes":[{"content":"IComparer&lt;TKey&gt;","pos":[0,15],"source":"IComparer<TKey>"}]},{"pos":[972533,972542],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"pos":[972604,972605],"content":"<","needQuote":true,"nodes":[]},{"pos":[972632,972636],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[972757,972766],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"content":"(Of","pos":[972829,972832]},{"pos":[972866,972870],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[972900,972901],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[973119,973131],"content":"IComparer<T>","needQuote":true,"nodes":[{"content":"IComparer&lt;T&gt;","pos":[0,12],"source":"IComparer<T>"}]},{"pos":[973342,973351],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"pos":[973413,973414],"content":"<","needQuote":true,"nodes":[]},{"pos":[973441,973442],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[973560,973569],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"content":"(Of","pos":[973632,973635]},{"pos":[973669,973670],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[973697,973698],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[974119,974124],"content":"Count","needQuote":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[974909,974914],"content":"Count","needQuote":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[975542,975547],"content":"Count","needQuote":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[975748,975753],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[975911,975916],"content":"Count","needQuote":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[976275,976280],"content":"Count","needQuote":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[976803,976813],"content":"Item[TKey]","needQuote":true,"nodes":[{"content":"Item[TKey]","pos":[0,10]}]},{"pos":[977078,977082],"content":"Item","needQuote":true,"nodes":[{"content":"Item","pos":[0,4]}]},{"content":"[","pos":[977187,977188]},{"pos":[977218,977222],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":"]","pos":[977253,977254]},{"pos":[977354,977358],"content":"Item","needQuote":true,"nodes":[{"content":"Item","pos":[0,4]}]},{"pos":[977465,977466],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[977493,977497],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[977527,977528],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[977965,977975],"content":"Item[TKey]","needQuote":true,"nodes":[{"content":"Item[TKey]","pos":[0,10]}]},{"pos":[978264,978268],"content":"Item","needQuote":true,"nodes":[{"content":"Item","pos":[0,4]}]},{"content":"[","pos":[978381,978382]},{"pos":[978412,978416],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":"]","pos":[978447,978448]},{"pos":[978556,978560],"content":"Item","needQuote":true,"nodes":[{"content":"Item","pos":[0,4]}]},{"pos":[978675,978676],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[978703,978707],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[978737,978738],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[979004,979008],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[979116,979122],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[979273,979283],"content":"Item[TKey]","needQuote":true,"nodes":[{"content":"Item[TKey]","pos":[0,10]}]},{"pos":[979548,979552],"content":"Item","needQuote":true,"nodes":[{"content":"Item","pos":[0,4]}]},{"content":"[","pos":[979657,979658]},{"pos":[979688,979692],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":"]","pos":[979723,979724]},{"pos":[979824,979828],"content":"Item","needQuote":true,"nodes":[{"content":"Item","pos":[0,4]}]},{"pos":[979935,979936],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[979963,979967],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[979997,979998],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[980284,980294],"content":"Item[TKey]","needQuote":true,"nodes":[{"content":"Item[TKey]","pos":[0,10]}]},{"pos":[980583,980587],"content":"Item","needQuote":true,"nodes":[{"content":"Item","pos":[0,4]}]},{"content":"[","pos":[980700,980701]},{"pos":[980731,980735],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":"]","pos":[980766,980767]},{"pos":[980875,980879],"content":"Item","needQuote":true,"nodes":[{"content":"Item","pos":[0,4]}]},{"pos":[980994,980995],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[981022,981026],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[981056,981057],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[981315,981319],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[981400,981406],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[981581,981613],"content":"SortedDictionary.KeyCollection<>","needQuote":true,"nodes":[{"content":"SortedDictionary.KeyCollection&lt;&gt;","pos":[0,32],"source":"SortedDictionary.KeyCollection<>"}]},{"pos":[981905,981935],"content":"SortedDictionary.KeyCollection","needQuote":true,"nodes":[{"content":"SortedDictionary.KeyCollection","pos":[0,30]}]},{"pos":[982018,982019],"content":"<","needQuote":true,"nodes":[]},{"pos":[982158,982188],"content":"SortedDictionary.KeyCollection","needQuote":true,"nodes":[{"content":"SortedDictionary.KeyCollection","pos":[0,30]}]},{"content":"(Of","pos":[982272,982275]},{"pos":[982309,982310],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[982802,982812],"content":"IsReadOnly","needQuote":true,"nodes":[{"content":"IsReadOnly","pos":[0,10]}]},{"pos":[983379,983386],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[983555,983565],"content":"IsReadOnly","needQuote":true,"nodes":[{"content":"IsReadOnly","pos":[0,10]}]},{"pos":[984061,984065],"content":"Keys","needQuote":true,"nodes":[{"content":"Keys","pos":[0,4]}]},{"pos":[984532,984549],"content":"ICollection<TKey>","needQuote":true,"nodes":[{"content":"ICollection&lt;TKey&gt;","pos":[0,17],"source":"ICollection<TKey>"}]},{"pos":[984777,984788],"content":"ICollection","needQuote":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"pos":[984852,984853],"content":"<","needQuote":true,"nodes":[]},{"pos":[984880,984884],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[985007,985018],"content":"ICollection","needQuote":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"content":"(Of","pos":[985083,985086]},{"pos":[985120,985124],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[985154,985155],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[985384,985388],"content":"Keys","needQuote":true,"nodes":[{"content":"Keys","pos":[0,4]}]},{"pos":[985902,985908],"content":"Values","needQuote":true,"nodes":[{"content":"Values","pos":[0,6]}]},{"pos":[986387,986406],"content":"ICollection<TValue>","needQuote":true,"nodes":[{"content":"ICollection&lt;TValue&gt;","pos":[0,19],"source":"ICollection<TValue>"}]},{"pos":[986640,986651],"content":"ICollection","needQuote":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"pos":[986715,986716],"content":"<","needQuote":true,"nodes":[]},{"pos":[986743,986749],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[986874,986885],"content":"ICollection","needQuote":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"content":"(Of","pos":[986950,986953]},{"pos":[986987,986993],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[987025,987026],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[987261,987267],"content":"Values","needQuote":true,"nodes":[{"content":"Values","pos":[0,6]}]},{"pos":[987811,987815],"content":"Keys","needQuote":true,"nodes":[{"content":"Keys","pos":[0,4]}]},{"pos":[988322,988339],"content":"IEnumerable<TKey>","needQuote":true,"nodes":[{"content":"IEnumerable&lt;TKey&gt;","pos":[0,17],"source":"IEnumerable<TKey>"}]},{"pos":[988567,988578],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[988642,988643],"content":"<","needQuote":true,"nodes":[]},{"pos":[988670,988674],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[988797,988808],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[988873,988876]},{"pos":[988910,988914],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[988944,988945],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[989182,989186],"content":"Keys","needQuote":true,"nodes":[{"content":"Keys","pos":[0,4]}]},{"pos":[989764,989770],"content":"Values","needQuote":true,"nodes":[{"content":"Values","pos":[0,6]}]},{"pos":[990289,990308],"content":"IEnumerable<TValue>","needQuote":true,"nodes":[{"content":"IEnumerable&lt;TValue&gt;","pos":[0,19],"source":"IEnumerable<TValue>"}]},{"pos":[990542,990553],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[990617,990618],"content":"<","needQuote":true,"nodes":[]},{"pos":[990645,990651],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[990776,990787],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[990852,990855]},{"pos":[990889,990895],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[990927,990928],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[991171,991177],"content":"Values","needQuote":true,"nodes":[{"content":"Values","pos":[0,6]}]},{"pos":[991657,991671],"content":"IsSynchronized","needQuote":true,"nodes":[{"content":"IsSynchronized","pos":[0,14]}]},{"pos":[991950,991958],"content":"SyncRoot","needQuote":true,"nodes":[{"content":"SyncRoot","pos":[0,8]}]},{"pos":[992221,992232],"content":"IsFixedSize","needQuote":true,"nodes":[{"content":"IsFixedSize","pos":[0,11]}]},{"pos":[992503,992513],"content":"IsReadOnly","needQuote":true,"nodes":[{"content":"IsReadOnly","pos":[0,10]}]},{"pos":[992790,992802],"content":"Item[Object]","needQuote":true,"nodes":[{"content":"Item[Object]","pos":[0,12]}]},{"pos":[993041,993045],"content":"Item","needQuote":true,"nodes":[{"content":"Item","pos":[0,4]}]},{"content":"[","pos":[993128,993129]},{"pos":[993182,993188],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":"]","pos":[993249,993250]},{"pos":[993351,993355],"content":"Item","needQuote":true,"nodes":[{"content":"Item","pos":[0,4]}]},{"pos":[993437,993438],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[993488,993494],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[993554,993555],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[993834,993838],"content":"Keys","needQuote":true,"nodes":[{"content":"Keys","pos":[0,4]}]},{"pos":[994084,994090],"content":"Values","needQuote":true,"nodes":[{"content":"Values","pos":[0,6]}]},{"pos":[994363,994397],"content":"SortedDictionary.ValueCollection<>","needQuote":true,"nodes":[{"content":"SortedDictionary.ValueCollection&lt;&gt;","pos":[0,34],"source":"SortedDictionary.ValueCollection<>"}]},{"pos":[994697,994729],"content":"SortedDictionary.ValueCollection","needQuote":true,"nodes":[{"content":"SortedDictionary.ValueCollection","pos":[0,32]}]},{"pos":[994814,994815],"content":"<","needQuote":true,"nodes":[]},{"pos":[994956,994988],"content":"SortedDictionary.ValueCollection","needQuote":true,"nodes":[{"content":"SortedDictionary.ValueCollection","pos":[0,32]}]},{"content":"(Of","pos":[995074,995077]},{"pos":[995111,995112],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[995538,995555],"content":"Add(TKey, TValue)","needQuote":true,"nodes":[{"content":"Add(TKey, TValue)","pos":[0,17]}]},{"pos":[995814,995817],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[995920,995921],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[995948,995952],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[995983,995984]},{"pos":[996016,996022],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[996054,996055],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[996154,996157],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[996263,996264],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[996291,996295],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[996326,996327]},{"pos":[996359,996365],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[996397,996398],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[996699,996716],"content":"Add(TKey, TValue)","needQuote":true,"nodes":[{"content":"Add(TKey, TValue)","pos":[0,17]}]},{"pos":[996975,996978],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[997081,997082],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[997109,997113],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[997144,997145]},{"pos":[997177,997183],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[997215,997216],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[997315,997318],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[997424,997425],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[997452,997456],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[997487,997488]},{"pos":[997520,997526],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[997558,997559],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[998055,998062],"content":"Clear()","needQuote":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[998381,998386],"content":"Clear","needQuote":true,"nodes":[{"content":"Clear","pos":[0,5]}]},{"pos":[998511,998512],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[998539,998540],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[998634,998639],"content":"Clear","needQuote":true,"nodes":[{"content":"Clear","pos":[0,5]}]},{"pos":[998770,998771],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[998798,998799],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[999173,999180],"content":"Clear()","needQuote":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[999303,999308],"content":"Clear","needQuote":true,"nodes":[{"content":"Clear","pos":[0,5]}]},{"pos":[999391,999392],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[999419,999420],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[999504,999509],"content":"Clear","needQuote":true,"nodes":[{"content":"Clear","pos":[0,5]}]},{"pos":[999592,999593],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[999620,999621],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[999808,999815],"content":"Clear()","needQuote":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[1000027,1000032],"content":"Clear","needQuote":true,"nodes":[{"content":"Clear","pos":[0,5]}]},{"pos":[1000105,1000106],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1000133,1000134],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1000228,1000233],"content":"Clear","needQuote":true,"nodes":[{"content":"Clear","pos":[0,5]}]},{"pos":[1000309,1000310],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1000337,1000338],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1000729,1000746],"content":"ContainsKey(TKey)","needQuote":true,"nodes":[{"content":"ContainsKey(TKey)","pos":[0,17]}]},{"pos":[1001010,1001021],"content":"ContainsKey","needQuote":true,"nodes":[{"content":"ContainsKey","pos":[0,11]}]},{"pos":[1001132,1001133],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1001160,1001164],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[1001194,1001195],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1001299,1001310],"content":"ContainsKey","needQuote":true,"nodes":[{"content":"ContainsKey","pos":[0,11]}]},{"pos":[1001424,1001425],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1001452,1001456],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[1001486,1001487],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1001959,1001976],"content":"ContainsKey(TKey)","needQuote":true,"nodes":[{"content":"ContainsKey(TKey)","pos":[0,17]}]},{"pos":[1002264,1002275],"content":"ContainsKey","needQuote":true,"nodes":[{"content":"ContainsKey","pos":[0,11]}]},{"pos":[1002394,1002395],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1002422,1002426],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[1002456,1002457],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1002569,1002580],"content":"ContainsKey","needQuote":true,"nodes":[{"content":"ContainsKey","pos":[0,11]}]},{"pos":[1002702,1002703],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1002730,1002734],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[1002764,1002765],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1003100,1003117],"content":"ContainsKey(TKey)","needQuote":true,"nodes":[{"content":"ContainsKey(TKey)","pos":[0,17]}]},{"pos":[1003381,1003392],"content":"ContainsKey","needQuote":true,"nodes":[{"content":"ContainsKey","pos":[0,11]}]},{"pos":[1003503,1003504],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1003531,1003535],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[1003565,1003566],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1003670,1003681],"content":"ContainsKey","needQuote":true,"nodes":[{"content":"ContainsKey","pos":[0,11]}]},{"pos":[1003795,1003796],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1003823,1003827],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[1003857,1003858],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1004172,1004189],"content":"ContainsKey(TKey)","needQuote":true,"nodes":[{"content":"ContainsKey(TKey)","pos":[0,17]}]},{"pos":[1004477,1004488],"content":"ContainsKey","needQuote":true,"nodes":[{"content":"ContainsKey","pos":[0,11]}]},{"pos":[1004607,1004608],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1004635,1004639],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[1004669,1004670],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1004782,1004793],"content":"ContainsKey","needQuote":true,"nodes":[{"content":"ContainsKey","pos":[0,11]}]},{"pos":[1004915,1004916],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1004943,1004947],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[1004977,1004978],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1005597,1005640],"content":"CopyTo(KeyValuePair<TKey, TValue>[], Int32)","needQuote":true,"nodes":[{"content":"CopyTo(KeyValuePair&lt;TKey, TValue&gt;[], Int32)","pos":[0,43],"source":"CopyTo(KeyValuePair<TKey, TValue>[], Int32)"}]},{"pos":[1006180,1006186],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[1006312,1006313],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1006391,1006403],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[1006468,1006469],"content":"<","needQuote":true,"nodes":[]},{"pos":[1006496,1006500],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[1006531,1006532]},{"pos":[1006564,1006570],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":"[]","pos":[1006635,1006637]},{"content":",","pos":[1006669,1006670]},{"pos":[1006724,1006729],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[1006788,1006789],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1006903,1006909],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[1007041,1007042],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1007120,1007132],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[1007198,1007201]},{"pos":[1007235,1007239],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[1007270,1007271]},{"pos":[1007303,1007309],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[1007341,1007342],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1007369,1007371],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[1007400,1007401]},{"pos":[1007455,1007460],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[1007519,1007520],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1007995,1008023],"content":"KeyValuePair<TKey, TValue>[]","needQuote":true,"nodes":[{"content":"KeyValuePair&lt;TKey, TValue&gt;[]","pos":[0,28],"source":"KeyValuePair<TKey, TValue>[]"}]},{"pos":[1008285,1008297],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[1008383,1008384],"content":"<","needQuote":true,"nodes":[]},{"pos":[1008411,1008415],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[1008446,1008447]},{"pos":[1008479,1008485],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":"[]","pos":[1008550,1008552]},{"pos":[1008645,1008657],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[1008744,1008747]},{"pos":[1008781,1008785],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[1008816,1008817]},{"pos":[1008849,1008855],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[1008887,1008888],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1008915,1008917],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[1009132,1009150],"content":"CopyTo(T[], Int32)","needQuote":true,"nodes":[{"content":"CopyTo(T[], Int32)","pos":[0,18]}]},{"pos":[1009448,1009454],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[1009528,1009529],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1009556,1009557],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":"[]","pos":[1009585,1009587]},{"content":",","pos":[1009619,1009620]},{"pos":[1009674,1009679],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[1009738,1009739],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1009853,1009859],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[1009936,1009937],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1009964,1009965],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[1009992,1009994],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[1010023,1010024]},{"pos":[1010078,1010083],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[1010142,1010143],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1010477,1010506],"content":"SortedDictionary.Enumerator<>","needQuote":true,"nodes":[{"content":"SortedDictionary.Enumerator&lt;&gt;","pos":[0,29],"source":"SortedDictionary.Enumerator<>"}]},{"pos":[1010786,1010813],"content":"SortedDictionary.Enumerator","needQuote":true,"nodes":[{"content":"SortedDictionary.Enumerator","pos":[0,27]}]},{"pos":[1010893,1010894],"content":"<","needQuote":true,"nodes":[]},{"pos":[1011030,1011057],"content":"SortedDictionary.Enumerator","needQuote":true,"nodes":[{"content":"SortedDictionary.Enumerator","pos":[0,27]}]},{"content":"(Of","pos":[1011138,1011141]},{"pos":[1011175,1011176],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1011581,1011593],"content":"Remove(TKey)","needQuote":true,"nodes":[{"content":"Remove(TKey)","pos":[0,12]}]},{"pos":[1011842,1011848],"content":"Remove","needQuote":true,"nodes":[{"content":"Remove","pos":[0,6]}]},{"pos":[1011954,1011955],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1011982,1011986],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[1012016,1012017],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1012116,1012122],"content":"Remove","needQuote":true,"nodes":[{"content":"Remove","pos":[0,6]}]},{"pos":[1012231,1012232],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1012259,1012263],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[1012293,1012294],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1012585,1012597],"content":"Remove(TKey)","needQuote":true,"nodes":[{"content":"Remove(TKey)","pos":[0,12]}]},{"pos":[1012846,1012852],"content":"Remove","needQuote":true,"nodes":[{"content":"Remove","pos":[0,6]}]},{"pos":[1012958,1012959],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1012986,1012990],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[1013020,1013021],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1013120,1013126],"content":"Remove","needQuote":true,"nodes":[{"content":"Remove","pos":[0,6]}]},{"pos":[1013235,1013236],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1013263,1013267],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[1013297,1013298],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1013842,1013873],"content":"Add(KeyValuePair<TKey, TValue>)","needQuote":true,"nodes":[{"content":"Add(KeyValuePair&lt;TKey, TValue&gt;)","pos":[0,31],"source":"Add(KeyValuePair<TKey, TValue>)"}]},{"pos":[1014345,1014348],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[1014471,1014472],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1014550,1014562],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[1014627,1014628],"content":"<","needQuote":true,"nodes":[]},{"pos":[1014655,1014659],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[1014690,1014691]},{"pos":[1014723,1014729],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[1014793,1014794],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1014890,1014893],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[1015022,1015023],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1015101,1015113],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[1015179,1015182]},{"pos":[1015216,1015220],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[1015251,1015252]},{"pos":[1015284,1015290],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[1015322,1015323],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1015350,1015351],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1015875,1015901],"content":"KeyValuePair<TKey, TValue>","needQuote":true,"nodes":[{"content":"KeyValuePair&lt;TKey, TValue&gt;","pos":[0,26],"source":"KeyValuePair<TKey, TValue>"}]},{"pos":[1016157,1016169],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[1016255,1016256],"content":"<","needQuote":true,"nodes":[]},{"pos":[1016283,1016287],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[1016318,1016319]},{"pos":[1016351,1016357],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[1016483,1016495],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[1016582,1016585]},{"pos":[1016619,1016623],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[1016654,1016655]},{"pos":[1016687,1016693],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[1016725,1016726],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1016981,1016987],"content":"Add(T)","needQuote":true,"nodes":[{"content":"Add(T)","pos":[0,6]}]},{"pos":[1017199,1017202],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[1017273,1017274],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1017301,1017302],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[1017329,1017330],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1017426,1017429],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[1017503,1017504],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1017531,1017532],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[1017559,1017560],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1017800,1017826],"content":"KeyValuePair<TKey, TValue>","needQuote":true,"nodes":[{"content":"KeyValuePair&lt;TKey, TValue&gt;","pos":[0,26],"source":"KeyValuePair<TKey, TValue>"}]},{"pos":[1018082,1018094],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[1018159,1018160],"content":"<","needQuote":true,"nodes":[]},{"pos":[1018187,1018191],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[1018222,1018223]},{"pos":[1018255,1018261],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[1018387,1018399],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[1018465,1018468]},{"pos":[1018502,1018506],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[1018537,1018538]},{"pos":[1018570,1018576],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[1018608,1018609],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1019129,1019165],"content":"Contains(KeyValuePair<TKey, TValue>)","needQuote":true,"nodes":[{"content":"Contains(KeyValuePair&lt;TKey, TValue&gt;)","pos":[0,36],"source":"Contains(KeyValuePair<TKey, TValue>)"}]},{"pos":[1019657,1019665],"content":"Contains","needQuote":true,"nodes":[{"content":"Contains","pos":[0,8]}]},{"pos":[1019793,1019794],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1019872,1019884],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[1019949,1019950],"content":"<","needQuote":true,"nodes":[]},{"pos":[1019977,1019981],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[1020012,1020013]},{"pos":[1020045,1020051],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[1020115,1020116],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1020217,1020225],"content":"Contains","needQuote":true,"nodes":[{"content":"Contains","pos":[0,8]}]},{"pos":[1020359,1020360],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1020438,1020450],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[1020516,1020519]},{"pos":[1020553,1020557],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[1020588,1020589]},{"pos":[1020621,1020627],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[1020659,1020660],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1020687,1020688],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1021151,1021162],"content":"Contains(T)","needQuote":true,"nodes":[{"content":"Contains(T)","pos":[0,11]}]},{"pos":[1021389,1021397],"content":"Contains","needQuote":true,"nodes":[{"content":"Contains","pos":[0,8]}]},{"pos":[1021473,1021474],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1021501,1021502],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[1021529,1021530],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1021631,1021639],"content":"Contains","needQuote":true,"nodes":[{"content":"Contains","pos":[0,8]}]},{"pos":[1021718,1021719],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1021746,1021747],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[1021774,1021775],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1022303,1022337],"content":"Remove(KeyValuePair<TKey, TValue>)","needQuote":true,"nodes":[{"content":"Remove(KeyValuePair&lt;TKey, TValue&gt;)","pos":[0,34],"source":"Remove(KeyValuePair<TKey, TValue>)"}]},{"pos":[1022821,1022827],"content":"Remove","needQuote":true,"nodes":[{"content":"Remove","pos":[0,6]}]},{"pos":[1022953,1022954],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1023032,1023044],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[1023109,1023110],"content":"<","needQuote":true,"nodes":[]},{"pos":[1023137,1023141],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[1023172,1023173]},{"pos":[1023205,1023211],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[1023275,1023276],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1023375,1023381],"content":"Remove","needQuote":true,"nodes":[{"content":"Remove","pos":[0,6]}]},{"pos":[1023513,1023514],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1023592,1023604],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[1023670,1023673]},{"pos":[1023707,1023711],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[1023742,1023743]},{"pos":[1023775,1023781],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[1023813,1023814],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1023841,1023842],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1024297,1024306],"content":"Remove(T)","needQuote":true,"nodes":[{"content":"Remove(T)","pos":[0,9]}]},{"pos":[1024527,1024533],"content":"Remove","needQuote":true,"nodes":[{"content":"Remove","pos":[0,6]}]},{"pos":[1024607,1024608],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1024635,1024636],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[1024663,1024664],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1024763,1024769],"content":"Remove","needQuote":true,"nodes":[{"content":"Remove","pos":[0,6]}]},{"pos":[1024846,1024847],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1024874,1024875],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[1024902,1024903],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1025377,1025392],"content":"GetEnumerator()","needQuote":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[1025735,1025748],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[1025881,1025882],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1025909,1025910],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1026012,1026025],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[1026164,1026165],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1026192,1026193],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1026683,1026722],"content":"IEnumerator<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"IEnumerator&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,39],"source":"IEnumerator<KeyValuePair<TKey, TValue>>"}]},{"pos":[1027076,1027087],"content":"IEnumerator","needQuote":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[1027172,1027173],"content":"<","needQuote":true,"nodes":[]},{"pos":[1027251,1027263],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[1027349,1027350],"content":"<","needQuote":true,"nodes":[]},{"pos":[1027377,1027381],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[1027412,1027413]},{"pos":[1027445,1027451],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[1027608,1027619],"content":"IEnumerator","needQuote":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"content":"(Of","pos":[1027705,1027708]},{"pos":[1027793,1027805],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[1027892,1027895]},{"pos":[1027929,1027933],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[1027964,1027965]},{"pos":[1027997,1028003],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[1028035,1028036],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1028063,1028064],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1028394,1028409],"content":"GetEnumerator()","needQuote":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[1028645,1028658],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[1028739,1028740],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1028767,1028768],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1028870,1028883],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[1028967,1028968],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1028995,1028996],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1029259,1029273],"content":"IEnumerator<T>","needQuote":true,"nodes":[{"content":"IEnumerator&lt;T&gt;","pos":[0,14],"source":"IEnumerator<T>"}]},{"pos":[1029492,1029503],"content":"IEnumerator","needQuote":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[1029567,1029568],"content":"<","needQuote":true,"nodes":[]},{"pos":[1029595,1029596],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[1029716,1029727],"content":"IEnumerator","needQuote":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"content":"(Of","pos":[1029792,1029795]},{"pos":[1029829,1029830],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[1029857,1029858],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1030139,1030159],"content":"CopyTo(Array, Int32)","needQuote":true,"nodes":[{"content":"CopyTo(Array, Int32)","pos":[0,20]}]},{"pos":[1030337,1030343],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[1030406,1030407],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1030456,1030461],"content":"Array","needQuote":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"content":",","pos":[1030500,1030501]},{"pos":[1030555,1030560],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[1030619,1030620],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1030732,1030738],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[1030801,1030802],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1030851,1030856],"content":"Array","needQuote":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"content":",","pos":[1030895,1030896]},{"pos":[1030950,1030955],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[1031014,1031015],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1031226,1031231],"content":"Array","needQuote":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[1031446,1031465],"content":"Add(Object, Object)","needQuote":true,"nodes":[{"content":"Add(Object, Object)","pos":[0,19]}]},{"pos":[1031641,1031644],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[1031725,1031726],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1031776,1031782],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[1031843,1031844]},{"pos":[1031899,1031905],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[1031965,1031966],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1032077,1032080],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[1032161,1032162],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1032212,1032218],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[1032279,1032280]},{"pos":[1032335,1032341],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[1032401,1032402],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1032676,1032692],"content":"Contains(Object)","needQuote":true,"nodes":[{"content":"Contains(Object)","pos":[0,16]}]},{"pos":[1032849,1032857],"content":"Contains","needQuote":true,"nodes":[{"content":"Contains","pos":[0,8]}]},{"pos":[1032943,1032944],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1032994,1033000],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[1033060,1033061],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1033163,1033171],"content":"Contains","needQuote":true,"nodes":[{"content":"Contains","pos":[0,8]}]},{"pos":[1033257,1033258],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1033308,1033314],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[1033374,1033375],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1033627,1033642],"content":"GetEnumerator()","needQuote":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[1033781,1033794],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[1033885,1033886],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1033913,1033914],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1034006,1034019],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[1034110,1034111],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1034138,1034139],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1034365,1034386],"content":"IDictionaryEnumerator","needQuote":true,"nodes":[{"content":"IDictionaryEnumerator","pos":[0,21]}]},{"pos":[1034662,1034676],"content":"Remove(Object)","needQuote":true,"nodes":[{"content":"Remove(Object)","pos":[0,14]}]},{"pos":[1034829,1034835],"content":"Remove","needQuote":true,"nodes":[{"content":"Remove","pos":[0,6]}]},{"pos":[1034919,1034920],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1034970,1034976],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[1035036,1035037],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1035137,1035143],"content":"Remove","needQuote":true,"nodes":[{"content":"Remove","pos":[0,6]}]},{"pos":[1035227,1035228],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1035278,1035284],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[1035344,1035345],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1035594,1035609],"content":"GetEnumerator()","needQuote":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[1035748,1035761],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[1035831,1035832],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1035859,1035860],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1035952,1035965],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[1036035,1036036],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1036063,1036064],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1036280,1036291],"content":"IEnumerator","needQuote":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[1036651,1036676],"content":"TryGetValue(TKey, TValue)","needQuote":true,"nodes":[{"content":"TryGetValue(TKey, TValue)","pos":[0,25]}]},{"pos":[1036960,1036971],"content":"TryGetValue","needQuote":true,"nodes":[{"content":"TryGetValue","pos":[0,11]}]},{"pos":[1037082,1037083],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1037110,1037114],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[1037145,1037146]},{"pos":[1037178,1037184],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[1037216,1037217],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1037325,1037336],"content":"TryGetValue","needQuote":true,"nodes":[{"content":"TryGetValue","pos":[0,11]}]},{"pos":[1037450,1037451],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1037478,1037482],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[1037513,1037514]},{"pos":[1037546,1037552],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[1037584,1037585],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1038091,1038116],"content":"TryGetValue(TKey, TValue)","needQuote":true,"nodes":[{"content":"TryGetValue(TKey, TValue)","pos":[0,25]}]},{"pos":[1038424,1038435],"content":"TryGetValue","needQuote":true,"nodes":[{"content":"TryGetValue","pos":[0,11]}]},{"pos":[1038554,1038555],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1038582,1038586],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[1038617,1038618]},{"pos":[1038650,1038656],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[1038688,1038689],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1038805,1038816],"content":"TryGetValue","needQuote":true,"nodes":[{"content":"TryGetValue","pos":[0,11]}]},{"pos":[1038938,1038939],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1038966,1038970],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[1039001,1039002]},{"pos":[1039034,1039040],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[1039072,1039073],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1039432,1039457],"content":"TryGetValue(TKey, TValue)","needQuote":true,"nodes":[{"content":"TryGetValue(TKey, TValue)","pos":[0,25]}]},{"pos":[1039741,1039752],"content":"TryGetValue","needQuote":true,"nodes":[{"content":"TryGetValue","pos":[0,11]}]},{"pos":[1039863,1039864],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1039891,1039895],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[1039926,1039927]},{"pos":[1039959,1039965],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[1039997,1039998],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1040106,1040117],"content":"TryGetValue","needQuote":true,"nodes":[{"content":"TryGetValue","pos":[0,11]}]},{"pos":[1040231,1040232],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1040259,1040263],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[1040294,1040295]},{"pos":[1040327,1040333],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[1040365,1040366],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1040704,1040729],"content":"TryGetValue(TKey, TValue)","needQuote":true,"nodes":[{"content":"TryGetValue(TKey, TValue)","pos":[0,25]}]},{"pos":[1041037,1041048],"content":"TryGetValue","needQuote":true,"nodes":[{"content":"TryGetValue","pos":[0,11]}]},{"pos":[1041167,1041168],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1041195,1041199],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[1041230,1041231]},{"pos":[1041263,1041269],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[1041301,1041302],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1041418,1041429],"content":"TryGetValue","needQuote":true,"nodes":[{"content":"TryGetValue","pos":[0,11]}]},{"pos":[1041551,1041552],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1041579,1041583],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[1041614,1041615]},{"pos":[1041647,1041653],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[1041685,1041686],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1042009,1042030],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[1042231,1042248],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]},{"pos":[1042443,1042463],"content":"KeyNotFoundException","needQuote":true,"nodes":[{"content":"KeyNotFoundException","pos":[0,20]}]},{"pos":[1042694,1042721],"content":"ArgumentOutOfRangeException","needQuote":true,"nodes":[{"content":"ArgumentOutOfRangeException","pos":[0,27]}]}],"content":"items:\n- uid: System.Collections.Generic.SortedDictionary`2\n  commentId: T:System.Collections.Generic.SortedDictionary`2\n  id: SortedDictionary`2\n  parent: System.Collections.Generic\n  children:\n  - System.Collections.Generic.SortedDictionary`2.#ctor\n  - System.Collections.Generic.SortedDictionary`2.#ctor(System.Collections.Generic.IComparer{`0})\n  - System.Collections.Generic.SortedDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})\n  - System.Collections.Generic.SortedDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IComparer{`0})\n  - System.Collections.Generic.SortedDictionary`2.Add(`0,`1)\n  - System.Collections.Generic.SortedDictionary`2.Clear\n  - System.Collections.Generic.SortedDictionary`2.Comparer\n  - System.Collections.Generic.SortedDictionary`2.ContainsKey(`0)\n  - System.Collections.Generic.SortedDictionary`2.ContainsValue(`1)\n  - System.Collections.Generic.SortedDictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)\n  - System.Collections.Generic.SortedDictionary`2.Count\n  - System.Collections.Generic.SortedDictionary`2.GetEnumerator\n  - System.Collections.Generic.SortedDictionary`2.Item(`0)\n  - System.Collections.Generic.SortedDictionary`2.Keys\n  - System.Collections.Generic.SortedDictionary`2.Remove(`0)\n  - System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})\n  - System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})\n  - System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly\n  - System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})\n  - System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Keys\n  - System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Values\n  - System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey,TValue}}#GetEnumerator\n  - System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Keys\n  - System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Values\n  - System.Collections.Generic.SortedDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Collections.Generic.SortedDictionary`2.System#Collections#ICollection#IsSynchronized\n  - System.Collections.Generic.SortedDictionary`2.System#Collections#ICollection#SyncRoot\n  - System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)\n  - System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Contains(System.Object)\n  - System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#GetEnumerator\n  - System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#IsFixedSize\n  - System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#IsReadOnly\n  - System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Item(System.Object)\n  - System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Keys\n  - System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Remove(System.Object)\n  - System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Values\n  - System.Collections.Generic.SortedDictionary`2.System#Collections#IEnumerable#GetEnumerator\n  - System.Collections.Generic.SortedDictionary`2.TryGetValue(`0,`1@)\n  - System.Collections.Generic.SortedDictionary`2.Values\n  langs:\n  - csharp\n  - vb\n  name: SortedDictionary<TKey, TValue>\n  fullName: System.Collections.Generic.SortedDictionary<TKey, TValue>\n  type: Class\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SortedDictionary\n    path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n    startLine: 10\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Represents a collection of key/value pairs that are sorted on the key. </p>\\n\"\n  syntax:\n    content: >-\n      [DebuggerTypeProxy(typeof (IDictionaryDebugView<, >))]\n\n      [DebuggerDisplay(\"Count = {Count}\")]\n\n      public class SortedDictionary<TKey, TValue> : IDictionary<TKey, TValue>, ICollection<KeyValuePair<TKey, TValue>>, IDictionary, ICollection, IReadOnlyDictionary<TKey, TValue>, IReadOnlyCollection<KeyValuePair<TKey, TValue>>, IEnumerable<KeyValuePair<TKey, TValue>>, IEnumerable\n    content.vb: >-\n      <DebuggerTypeProxy(GetType(IDictionaryDebugView(Of , )))>\n\n      <DebuggerDisplay(\"Count = {Count}\")>\n\n      Public Class SortedDictionary(Of TKey, TValue)\n          Implements IDictionary(Of TKey, TValue), ICollection(Of KeyValuePair(Of TKey, TValue)), IDictionary, ICollection, IReadOnlyDictionary(Of TKey, TValue), IReadOnlyCollection(Of KeyValuePair(Of TKey, TValue)), IEnumerable(Of KeyValuePair(Of TKey, TValue)), IEnumerable\n    typeParameters:\n    - id: TKey\n      description: \"\\n<p>The type of the keys in the dictionary.</p>\\n\"\n    - id: TValue\n      description: \"\\n<p>The type of the values in the dictionary.</p>\\n\"\n  seealso:\n  - type: System.Collections.SortedList\n    commentId: T:System.Collections.SortedList\n  - type: System.Collections.Generic.Dictionary`2\n    commentId: T:System.Collections.Generic.Dictionary`2\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.Generic.IDictionary{{TKey},{TValue}}\n  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}\n  - System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}\n  - System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}\n  - System.Collections.IDictionary\n  - System.Collections.ICollection\n  - System.Collections.IEnumerable\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  fullName.vb: System.Collections.Generic.SortedDictionary(Of TKey, TValue)\n  name.vb: SortedDictionary(Of TKey, TValue)\n  nameWithType: SortedDictionary<TKey, TValue>\n  extensionMethods:\n  - System.Collections.IEnumerable.System.Linq.Queryable.AsQueryable\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Queryable.AsQueryable``1\n  - System.Collections.IEnumerable.System.Linq.ParallelEnumerable.AsParallel\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.ParallelEnumerable.AsParallel``1\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Aggregate``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Aggregate``2({TAccumulate},System.Func{{TAccumulate},System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TAccumulate}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Aggregate``3({TAccumulate},System.Func{{TAccumulate},System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TAccumulate}},System.Func{{TAccumulate},{TResult}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.All``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Any``1\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Any``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.AsEnumerable``1\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Decimal})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Double})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int64})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Decimal}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Double}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Int32}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Int64}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Single}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Single})\n  - System.Collections.IEnumerable.System.Linq.Enumerable.Cast``1\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Append``1(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Prepend``1(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Contains``1(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Contains``1(System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Collections.Generic.IEqualityComparer{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Count``1\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Count``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.DefaultIfEmpty``1\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Distinct``1\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEqualityComparer{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ElementAt``1(System.Int32)\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ElementAtOrDefault``1(System.Int32)\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}},System.Collections.Generic.IEqualityComparer{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.First``1\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.First``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.FirstOrDefault``1\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.FirstOrDefault``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupBy``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupBy``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TElement}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{{TKey},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}},{TResult}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{{TKey},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupBy``4(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TElement}},System.Func{{TKey},System.Collections.Generic.IEnumerable{{TElement}},{TResult}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupBy``4(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TElement}},System.Func{{TKey},System.Collections.Generic.IEnumerable{{TElement}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Collections.Generic.IEnumerable{{TInner}},{TResult}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Collections.Generic.IEnumerable{{TInner}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}},System.Collections.Generic.IEqualityComparer{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TInner},{TResult}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TInner},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Last``1\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Last``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.LastOrDefault``1\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.LastOrDefault``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.LongCount``1\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.LongCount``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Decimal})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Double})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int64})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Decimal}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Double}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Int32}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Int64}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Single}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Single})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TResult}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Decimal})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Double})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int64})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Decimal}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Double}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Int32}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Int64}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Single}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Single})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TResult}})\n  - System.Collections.IEnumerable.System.Linq.Enumerable.OfType``1\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.OrderBy``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.OrderBy``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Collections.Generic.IComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.OrderByDescending``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.OrderByDescending``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Collections.Generic.IComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Reverse``1\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Select``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TResult}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Select``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32,{TResult}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SelectMany``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Collections.Generic.IEnumerable{{TResult}}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SelectMany``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32,System.Collections.Generic.IEnumerable{{TResult}}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SelectMany``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Collections.Generic.IEnumerable{{TCollection}}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TCollection},{TResult}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SelectMany``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32,System.Collections.Generic.IEnumerable{{TCollection}}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TCollection},{TResult}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}},System.Collections.Generic.IEqualityComparer{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Single``1\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Single``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SingleOrDefault``1\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SingleOrDefault``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Skip``1(System.Int32)\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SkipWhile``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SkipWhile``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32,System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Decimal})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Double})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int64})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Decimal}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Double}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Int32}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Int64}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Single}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Single})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Take``1(System.Int32)\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.TakeWhile``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.TakeWhile``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32,System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToArray``1\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToDictionary``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToDictionary``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToDictionary``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TElement}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToDictionary``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToList``1\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToLookup``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToLookup``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToLookup``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TElement}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToLookup``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}},System.Collections.Generic.IEqualityComparer{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Where``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Where``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32,System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{{TSecond}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TSecond},{TResult}})\n  nameWithType.vb: SortedDictionary(Of TKey, TValue)\n- uid: System.Collections.Generic.SortedDictionary`2.#ctor\n  commentId: M:System.Collections.Generic.SortedDictionary`2.#ctor\n  id: '#ctor'\n  parent: System.Collections.Generic.SortedDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: SortedDictionary()\n  fullName: System.Collections.Generic.SortedDictionary<TKey, TValue>.SortedDictionary()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n    startLine: 20\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Collections.Generic.SortedDictionary`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class that is empty and uses the default <xref href=\\\"System.Collections.Generic.IComparer`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> implementation for the key type.</p>\\n\"\n  syntax:\n    content: public SortedDictionary()\n    content.vb: Public Sub New\n  seealso:\n  - type: System.Collections.Generic.Comparer`1.Default\n    commentId: P:System.Collections.Generic.Comparer`1.Default\n  - type: System.IComparable`1\n    commentId: T:System.IComparable`1\n  - type: System.IComparable\n    commentId: T:System.IComparable\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.Generic.SortedDictionary(Of TKey, TValue).SortedDictionary()\n  nameWithType: SortedDictionary<TKey, TValue>.SortedDictionary()\n  nameWithType.vb: SortedDictionary(Of TKey, TValue).SortedDictionary()\n- uid: System.Collections.Generic.SortedDictionary`2.#ctor(System.Collections.Generic.IComparer{`0})\n  commentId: M:System.Collections.Generic.SortedDictionary`2.#ctor(System.Collections.Generic.IComparer{`0})\n  id: '#ctor(System.Collections.Generic.IComparer{`0})'\n  parent: System.Collections.Generic.SortedDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: SortedDictionary(IComparer<TKey>)\n  fullName: System.Collections.Generic.SortedDictionary<TKey, TValue>.SortedDictionary(System.Collections.Generic.IComparer<TKey>)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n    startLine: 43\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Collections.Generic.SortedDictionary`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class that is empty and uses the specified <xref href=\\\"System.Collections.Generic.IComparer`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> implementation to compare keys.</p>\\n\"\n  syntax:\n    content: public SortedDictionary(IComparer<TKey> comparer)\n    content.vb: Public Sub New(comparer As IComparer(Of TKey))\n    parameters:\n    - id: comparer\n      type: System.Collections.Generic.IComparer{{TKey}}\n      description: \"\\n<p>The <xref href=\\\"System.Collections.Generic.IComparer`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> implementation to use when comparing keys, or <strong>null</strong> to use the default <xref href=\\\"System.Collections.Generic.Comparer`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for the type of the key.</p>\\n\"\n  seealso:\n  - type: System.Collections.Generic.IComparer`1\n    commentId: T:System.Collections.Generic.IComparer`1\n  - type: System.Collections.Generic.Comparer`1.Default\n    commentId: P:System.Collections.Generic.Comparer`1.Default\n  - type: System.IComparable`1\n    commentId: T:System.IComparable`1\n  - type: System.IComparable\n    commentId: T:System.IComparable\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.Generic.SortedDictionary(Of TKey, TValue).SortedDictionary(System.Collections.Generic.IComparer(Of TKey))\n  name.vb: SortedDictionary(IComparer(Of TKey))\n  nameWithType: SortedDictionary<TKey, TValue>.SortedDictionary(IComparer<TKey>)\n  nameWithType.vb: SortedDictionary(Of TKey, TValue).SortedDictionary(IComparer(Of TKey))\n- uid: System.Collections.Generic.SortedDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})\n  commentId: M:System.Collections.Generic.SortedDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})\n  id: '#ctor(System.Collections.Generic.IDictionary{`0,`1})'\n  parent: System.Collections.Generic.SortedDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: SortedDictionary(IDictionary<TKey, TValue>)\n  fullName: System.Collections.Generic.SortedDictionary<TKey, TValue>.SortedDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n    startLine: 24\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Collections.Generic.SortedDictionary`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class that contains elements copied from the specified <xref href=\\\"System.Collections.Generic.IDictionary`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and uses the default <xref href=\\\"System.Collections.Generic.IComparer`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> implementation for the key type.</p>\\n\"\n  syntax:\n    content: public SortedDictionary(IDictionary<TKey, TValue> dictionary)\n    content.vb: Public Sub New(dictionary As IDictionary(Of TKey, TValue))\n    parameters:\n    - id: dictionary\n      type: System.Collections.Generic.IDictionary{{TKey},{TValue}}\n      description: \"\\n<p>The <xref href=\\\"System.Collections.Generic.IDictionary`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> whose elements are copied to the new <xref href=\\\"System.Collections.Generic.SortedDictionary`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>dictionary</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>dictionary</em> contains one or more duplicate keys.</p>\\n\"\n  seealso:\n  - type: System.Collections.Generic.IDictionary`2\n    commentId: T:System.Collections.Generic.IDictionary`2\n  - type: System.Collections.Generic.Comparer`1.Default\n    commentId: P:System.Collections.Generic.Comparer`1.Default\n  - type: System.IComparable`1\n    commentId: T:System.IComparable`1\n  - type: System.IComparable\n    commentId: T:System.IComparable\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.Generic.SortedDictionary(Of TKey, TValue).SortedDictionary(System.Collections.Generic.IDictionary(Of TKey, TValue))\n  name.vb: SortedDictionary(IDictionary(Of TKey, TValue))\n  nameWithType: SortedDictionary<TKey, TValue>.SortedDictionary(IDictionary<TKey, TValue>)\n  nameWithType.vb: SortedDictionary(Of TKey, TValue).SortedDictionary(IDictionary(Of TKey, TValue))\n- uid: System.Collections.Generic.SortedDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IComparer{`0})\n  commentId: M:System.Collections.Generic.SortedDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IComparer{`0})\n  id: '#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IComparer{`0})'\n  parent: System.Collections.Generic.SortedDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: SortedDictionary(IDictionary<TKey, TValue>, IComparer<TKey>)\n  fullName: System.Collections.Generic.SortedDictionary<TKey, TValue>.SortedDictionary(System.Collections.Generic.IDictionary<TKey, TValue>, System.Collections.Generic.IComparer<TKey>)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n    startLine: 28\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Collections.Generic.SortedDictionary`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class that contains elements copied from the specified <xref href=\\\"System.Collections.Generic.IDictionary`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and uses the specified <xref href=\\\"System.Collections.Generic.IComparer`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> implementation to compare keys.</p>\\n\"\n  syntax:\n    content: public SortedDictionary(IDictionary<TKey, TValue> dictionary, IComparer<TKey> comparer)\n    content.vb: Public Sub New(dictionary As IDictionary(Of TKey, TValue), comparer As IComparer(Of TKey))\n    parameters:\n    - id: dictionary\n      type: System.Collections.Generic.IDictionary{{TKey},{TValue}}\n      description: \"\\n<p>The <xref href=\\\"System.Collections.Generic.IDictionary`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> whose elements are copied to the new <xref href=\\\"System.Collections.Generic.SortedDictionary`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    - id: comparer\n      type: System.Collections.Generic.IComparer{{TKey}}\n      description: \"\\n<p>The <xref href=\\\"System.Collections.Generic.IComparer`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> implementation to use when comparing keys, or <strong>null</strong> to use the default <xref href=\\\"System.Collections.Generic.Comparer`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for the type of the key.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>dictionary</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>dictionary</em> contains one or more duplicate keys.</p>\\n\"\n  seealso:\n  - type: System.Collections.Generic.IDictionary`2\n    commentId: T:System.Collections.Generic.IDictionary`2\n  - type: System.Collections.Generic.IComparer`1\n    commentId: T:System.Collections.Generic.IComparer`1\n  - type: System.Collections.Generic.Comparer`1.Default\n    commentId: P:System.Collections.Generic.Comparer`1.Default\n  - type: System.IComparable`1\n    commentId: T:System.IComparable`1\n  - type: System.IComparable\n    commentId: T:System.IComparable\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.Generic.SortedDictionary(Of TKey, TValue).SortedDictionary(System.Collections.Generic.IDictionary(Of TKey, TValue), System.Collections.Generic.IComparer(Of TKey))\n  name.vb: SortedDictionary(IDictionary(Of TKey, TValue), IComparer(Of TKey))\n  nameWithType: SortedDictionary<TKey, TValue>.SortedDictionary(IDictionary<TKey, TValue>, IComparer<TKey>)\n  nameWithType.vb: SortedDictionary(Of TKey, TValue).SortedDictionary(IDictionary(Of TKey, TValue), IComparer(Of TKey))\n- uid: System.Collections.Generic.SortedDictionary`2.Comparer\n  commentId: P:System.Collections.Generic.SortedDictionary`2.Comparer\n  id: Comparer\n  parent: System.Collections.Generic.SortedDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: Comparer\n  fullName: System.Collections.Generic.SortedDictionary<TKey, TValue>.Comparer\n  type: Property\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Comparer\n    path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n    startLine: 140\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Gets the <xref href=\\\"System.Collections.Generic.IComparer`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> used to order the elements of the <xref href=\\\"System.Collections.Generic.SortedDictionary`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public IComparer<TKey> Comparer { get; }\n    content.vb: Public ReadOnly Property Comparer As IComparer(Of TKey)\n    parameters: []\n    return:\n      type: System.Collections.Generic.IComparer{{TKey}}\n      description: \"\\n<p>The <xref href=\\\"System.Collections.Generic.IComparer`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> used to order the elements of the <xref href=\\\"System.Collections.Generic.SortedDictionary`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref></p>\\n\"\n  seealso:\n  - type: System.Collections.Generic.SortedDictionary`2.#ctor\n    commentId: M:System.Collections.Generic.SortedDictionary`2.#ctor\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  fullName.vb: System.Collections.Generic.SortedDictionary(Of TKey, TValue).Comparer\n  nameWithType: SortedDictionary<TKey, TValue>.Comparer\n  nameWithType.vb: SortedDictionary(Of TKey, TValue).Comparer\n- uid: System.Collections.Generic.SortedDictionary`2.Count\n  commentId: P:System.Collections.Generic.SortedDictionary`2.Count\n  id: Count\n  parent: System.Collections.Generic.SortedDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: Count\n  fullName: System.Collections.Generic.SortedDictionary<TKey, TValue>.Count\n  type: Property\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Count\n    path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n    startLine: 132\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Gets the number of key/value pairs contained in the <xref href=\\\"System.Collections.Generic.SortedDictionary`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public int Count { get; }\n    content.vb: Public ReadOnly Property Count As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The number of key/value pairs contained in the <xref href=\\\"System.Collections.Generic.SortedDictionary`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  implements:\n  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Count\n  - System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Count\n  - System.Collections.ICollection.Count\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  fullName.vb: System.Collections.Generic.SortedDictionary(Of TKey, TValue).Count\n  nameWithType: SortedDictionary<TKey, TValue>.Count\n  nameWithType.vb: SortedDictionary(Of TKey, TValue).Count\n- uid: System.Collections.Generic.SortedDictionary`2.Item(`0)\n  commentId: P:System.Collections.Generic.SortedDictionary`2.Item(`0)\n  id: Item(`0)\n  parent: System.Collections.Generic.SortedDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: Item[TKey]\n  fullName: System.Collections.Generic.SortedDictionary<TKey, TValue>.Item[TKey]\n  type: Property\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: this[]\n    path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n    startLine: 95\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Gets or sets the value associated with the specified key.</p>\\n\"\n  syntax:\n    content: public TValue this[TKey key] { get; set; }\n    content.vb: Public Property Item(key As TKey) As TValue\n    parameters:\n    - id: key\n      type: '{TKey}'\n      description: \"\\n<p>The key of the value to get or set.</p>\\n\"\n    return:\n      type: '{TValue}'\n      description: \"\\n<p>The value associated with the specified key. If the specified key is not found, a get operation throws a <xref href=\\\"System.Collections.Generic.KeyNotFoundException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, and a set operation creates a new element with the specified key.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>key</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.Collections.Generic.KeyNotFoundException\n    commentId: T:System.Collections.Generic.KeyNotFoundException\n    description: \"\\n<p>The property is retrieved and <em>key</em> does not exist in the collection.</p>\\n\"\n  seealso:\n  - type: System.Collections.Generic.SortedDictionary`2.Add(`0,`1)\n    commentId: M:System.Collections.Generic.SortedDictionary`2.Add(`0,`1)\n  implements:\n  - System.Collections.Generic.IDictionary{{TKey},{TValue}}.Item({TKey})\n  - System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}.Item({TKey})\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.Generic.SortedDictionary(Of TKey, TValue).Item(TKey)\n  name.vb: Item(TKey)\n  nameWithType: SortedDictionary<TKey, TValue>.Item[TKey]\n  nameWithType.vb: SortedDictionary(Of TKey, TValue).Item(TKey)\n- uid: System.Collections.Generic.SortedDictionary`2.Keys\n  commentId: P:System.Collections.Generic.SortedDictionary`2.Keys\n  id: Keys\n  parent: System.Collections.Generic.SortedDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: Keys\n  fullName: System.Collections.Generic.SortedDictionary<TKey, TValue>.Keys\n  type: Property\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Keys\n    path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n    startLine: 148\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Gets a collection containing the keys in the <xref href=\\\"System.Collections.Generic.SortedDictionary`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public SortedDictionary<TKey, TValue>.KeyCollection Keys { get; }\n    content.vb: Public ReadOnly Property Keys As SortedDictionary(Of TKey, TValue).KeyCollection\n    parameters: []\n    return:\n      type: System.Collections.Generic.SortedDictionary`2.KeyCollection\n      description: \"\\n<p>A <xref href=\\\"System.Collections.Generic.SortedDictionary`2.KeyCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> containing the keys in the <xref href=\\\"System.Collections.Generic.SortedDictionary`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  seealso:\n  - type: System.Collections.Generic.SortedDictionary`2.KeyCollection\n    commentId: T:System.Collections.Generic.SortedDictionary`2.KeyCollection\n  - type: System.Collections.Generic.SortedDictionary`2.Values\n    commentId: P:System.Collections.Generic.SortedDictionary`2.Values\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  fullName.vb: System.Collections.Generic.SortedDictionary(Of TKey, TValue).Keys\n  nameWithType: SortedDictionary<TKey, TValue>.Keys\n  nameWithType.vb: SortedDictionary(Of TKey, TValue).Keys\n- uid: System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly\n  commentId: P:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly\n  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly\n  isEii: true\n  parent: System.Collections.Generic.SortedDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: ICollection<KeyValuePair<TKey, TValue>>.IsReadOnly\n  fullName: System.Collections.Generic.SortedDictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.IsReadOnly\n  type: Property\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly\n    path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n    startLine: 87\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  syntax:\n    content: bool ICollection<KeyValuePair<TKey, TValue>>.IsReadOnly { get; }\n    content.vb: ReadOnly WriteOnly Property System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly As Boolean Implements ICollection(Of KeyValuePair(Of TKey, TValue)).IsReadOnly\n    parameters: []\n    return:\n      type: System.Boolean\n  implements:\n  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.IsReadOnly\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  fullName.vb: System.Collections.Generic.SortedDictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly\n  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly\n  nameWithType: SortedDictionary<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.IsReadOnly\n  nameWithType.vb: SortedDictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly\n- uid: System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Keys\n  commentId: P:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Keys\n  id: System#Collections#Generic#IDictionary{TKey,TValue}#Keys\n  isEii: true\n  parent: System.Collections.Generic.SortedDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: IDictionary<TKey, TValue>.Keys\n  fullName: System.Collections.Generic.SortedDictionary<TKey, TValue>.System.Collections.Generic.IDictionary<TKey, TValue>.Keys\n  type: Property\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.Generic.IDictionary<TKey,TValue>.Keys\n    path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n    startLine: 157\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  syntax:\n    content: ICollection<TKey> IDictionary<TKey, TValue>.Keys { get; }\n    content.vb: ReadOnly WriteOnly Property System.Collections.Generic.IDictionary<TKey,TValue>.Keys As ICollection(Of TKey) Implements IDictionary(Of TKey, TValue).Keys\n    parameters: []\n    return:\n      type: System.Collections.Generic.ICollection{{TKey}}\n  implements:\n  - System.Collections.Generic.IDictionary{{TKey},{TValue}}.Keys\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  fullName.vb: System.Collections.Generic.SortedDictionary(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Keys\n  name.vb: System.Collections.Generic.IDictionary<TKey,TValue>.Keys\n  nameWithType: SortedDictionary<TKey, TValue>.IDictionary<TKey, TValue>.Keys\n  nameWithType.vb: SortedDictionary(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Keys\n- uid: System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Values\n  commentId: P:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Values\n  id: System#Collections#Generic#IDictionary{TKey,TValue}#Values\n  isEii: true\n  parent: System.Collections.Generic.SortedDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: IDictionary<TKey, TValue>.Values\n  fullName: System.Collections.Generic.SortedDictionary<TKey, TValue>.System.Collections.Generic.IDictionary<TKey, TValue>.Values\n  type: Property\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.Generic.IDictionary<TKey,TValue>.Values\n    path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n    startLine: 182\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  syntax:\n    content: ICollection<TValue> IDictionary<TKey, TValue>.Values { get; }\n    content.vb: ReadOnly WriteOnly Property System.Collections.Generic.IDictionary<TKey,TValue>.Values As ICollection(Of TValue) Implements IDictionary(Of TKey, TValue).Values\n    parameters: []\n    return:\n      type: System.Collections.Generic.ICollection{{TValue}}\n  implements:\n  - System.Collections.Generic.IDictionary{{TKey},{TValue}}.Values\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  fullName.vb: System.Collections.Generic.SortedDictionary(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Values\n  name.vb: System.Collections.Generic.IDictionary<TKey,TValue>.Values\n  nameWithType: SortedDictionary<TKey, TValue>.IDictionary<TKey, TValue>.Values\n  nameWithType.vb: SortedDictionary(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Values\n- uid: System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Keys\n  commentId: P:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Keys\n  id: System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Keys\n  isEii: true\n  parent: System.Collections.Generic.SortedDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: IReadOnlyDictionary<TKey, TValue>.Keys\n  fullName: System.Collections.Generic.SortedDictionary<TKey, TValue>.System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.Keys\n  type: Property\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Keys\n    path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n    startLine: 165\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  syntax:\n    content: IEnumerable<TKey> IReadOnlyDictionary<TKey, TValue>.Keys { get; }\n    content.vb: ReadOnly WriteOnly Property System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Keys As IEnumerable(Of TKey) Implements IReadOnlyDictionary(Of TKey, TValue).Keys\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerable{{TKey}}\n  implements:\n  - System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}.Keys\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  fullName.vb: System.Collections.Generic.SortedDictionary(Of TKey, TValue).System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Keys\n  name.vb: System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Keys\n  nameWithType: SortedDictionary<TKey, TValue>.IReadOnlyDictionary<TKey, TValue>.Keys\n  nameWithType.vb: SortedDictionary(Of TKey, TValue).System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Keys\n- uid: System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Values\n  commentId: P:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Values\n  id: System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Values\n  isEii: true\n  parent: System.Collections.Generic.SortedDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: IReadOnlyDictionary<TKey, TValue>.Values\n  fullName: System.Collections.Generic.SortedDictionary<TKey, TValue>.System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.Values\n  type: Property\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Values\n    path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n    startLine: 190\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  syntax:\n    content: IEnumerable<TValue> IReadOnlyDictionary<TKey, TValue>.Values { get; }\n    content.vb: ReadOnly WriteOnly Property System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Values As IEnumerable(Of TValue) Implements IReadOnlyDictionary(Of TKey, TValue).Values\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerable{{TValue}}\n  implements:\n  - System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}.Values\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  fullName.vb: System.Collections.Generic.SortedDictionary(Of TKey, TValue).System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Values\n  name.vb: System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Values\n  nameWithType: SortedDictionary<TKey, TValue>.IReadOnlyDictionary<TKey, TValue>.Values\n  nameWithType.vb: SortedDictionary(Of TKey, TValue).System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Values\n- uid: System.Collections.Generic.SortedDictionary`2.System#Collections#ICollection#IsSynchronized\n  commentId: P:System.Collections.Generic.SortedDictionary`2.System#Collections#ICollection#IsSynchronized\n  id: System#Collections#ICollection#IsSynchronized\n  isEii: true\n  parent: System.Collections.Generic.SortedDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: ICollection.IsSynchronized\n  fullName: System.Collections.Generic.SortedDictionary<TKey, TValue>.System.Collections.ICollection.IsSynchronized\n  type: Property\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.ICollection.IsSynchronized\n    path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n    startLine: 425\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Gets a value indicating whether access to the <xref href=\\\"System.Collections.ICollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is synchronized (thread safe).</p>\\n\"\n  syntax:\n    content: bool ICollection.IsSynchronized { get; }\n    content.vb: ReadOnly WriteOnly Property System.Collections.ICollection.IsSynchronized As Boolean Implements ICollection.IsSynchronized\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if access to the <xref href=\\\"System.Collections.ICollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is synchronized (thread safe); otherwise, <strong>false</strong>.  In the default implementation of <xref href=\\\"System.Collections.Generic.SortedDictionary`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, this property always returns <strong>false</strong>.</p>\\n\"\n  seealso:\n  - type: System.Collections.ICollection.SyncRoot\n    commentId: P:System.Collections.ICollection.SyncRoot\n  implements:\n  - System.Collections.ICollection.IsSynchronized\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  fullName.vb: System.Collections.Generic.SortedDictionary(Of TKey, TValue).System.Collections.ICollection.IsSynchronized\n  name.vb: System.Collections.ICollection.IsSynchronized\n  nameWithType: SortedDictionary<TKey, TValue>.ICollection.IsSynchronized\n  nameWithType.vb: SortedDictionary(Of TKey, TValue).System.Collections.ICollection.IsSynchronized\n- uid: System.Collections.Generic.SortedDictionary`2.System#Collections#ICollection#SyncRoot\n  commentId: P:System.Collections.Generic.SortedDictionary`2.System#Collections#ICollection#SyncRoot\n  id: System#Collections#ICollection#SyncRoot\n  isEii: true\n  parent: System.Collections.Generic.SortedDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: ICollection.SyncRoot\n  fullName: System.Collections.Generic.SortedDictionary<TKey, TValue>.System.Collections.ICollection.SyncRoot\n  type: Property\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.ICollection.SyncRoot\n    path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n    startLine: 430\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Gets an object that can be used to synchronize access to the <xref href=\\\"System.Collections.ICollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: object ICollection.SyncRoot { get; }\n    content.vb: ReadOnly WriteOnly Property System.Collections.ICollection.SyncRoot As Object Implements ICollection.SyncRoot\n    parameters: []\n    return:\n      type: System.Object\n      description: \"\\n<p>An object that can be used to synchronize access to the <xref href=\\\"System.Collections.ICollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  seealso:\n  - type: System.Collections.ICollection.IsSynchronized\n    commentId: P:System.Collections.ICollection.IsSynchronized\n  implements:\n  - System.Collections.ICollection.SyncRoot\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  fullName.vb: System.Collections.Generic.SortedDictionary(Of TKey, TValue).System.Collections.ICollection.SyncRoot\n  name.vb: System.Collections.ICollection.SyncRoot\n  nameWithType: SortedDictionary<TKey, TValue>.ICollection.SyncRoot\n  nameWithType.vb: SortedDictionary(Of TKey, TValue).System.Collections.ICollection.SyncRoot\n- uid: System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#IsFixedSize\n  commentId: P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#IsFixedSize\n  id: System#Collections#IDictionary#IsFixedSize\n  isEii: true\n  parent: System.Collections.Generic.SortedDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: IDictionary.IsFixedSize\n  fullName: System.Collections.Generic.SortedDictionary<TKey, TValue>.System.Collections.IDictionary.IsFixedSize\n  type: Property\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.IDictionary.IsFixedSize\n    path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n    startLine: 300\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Gets a value indicating whether the <xref href=\\\"System.Collections.IDictionary\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has a fixed size.</p>\\n\"\n  syntax:\n    content: bool IDictionary.IsFixedSize { get; }\n    content.vb: ReadOnly WriteOnly Property System.Collections.IDictionary.IsFixedSize As Boolean Implements IDictionary.IsFixedSize\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the <xref href=\\\"System.Collections.IDictionary\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has a fixed size; otherwise, <strong>false</strong>.  In the default implementation of <xref href=\\\"System.Collections.Generic.SortedDictionary`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, this property always returns <strong>false</strong>.</p>\\n\"\n  implements:\n  - System.Collections.IDictionary.IsFixedSize\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  fullName.vb: System.Collections.Generic.SortedDictionary(Of TKey, TValue).System.Collections.IDictionary.IsFixedSize\n  name.vb: System.Collections.IDictionary.IsFixedSize\n  nameWithType: SortedDictionary<TKey, TValue>.IDictionary.IsFixedSize\n  nameWithType.vb: SortedDictionary(Of TKey, TValue).System.Collections.IDictionary.IsFixedSize\n- uid: System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#IsReadOnly\n  commentId: P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#IsReadOnly\n  id: System#Collections#IDictionary#IsReadOnly\n  isEii: true\n  parent: System.Collections.Generic.SortedDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: IDictionary.IsReadOnly\n  fullName: System.Collections.Generic.SortedDictionary<TKey, TValue>.System.Collections.IDictionary.IsReadOnly\n  type: Property\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.IDictionary.IsReadOnly\n    path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n    startLine: 305\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Gets a value indicating whether the <xref href=\\\"System.Collections.IDictionary\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is read-only.</p>\\n\"\n  syntax:\n    content: bool IDictionary.IsReadOnly { get; }\n    content.vb: ReadOnly WriteOnly Property System.Collections.IDictionary.IsReadOnly As Boolean Implements IDictionary.IsReadOnly\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the <xref href=\\\"System.Collections.IDictionary\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is read-only; otherwise, <strong>false</strong>.  In the default implementation of <xref href=\\\"System.Collections.Generic.SortedDictionary`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, this property always returns <strong>false</strong>.</p>\\n\"\n  implements:\n  - System.Collections.IDictionary.IsReadOnly\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  fullName.vb: System.Collections.Generic.SortedDictionary(Of TKey, TValue).System.Collections.IDictionary.IsReadOnly\n  name.vb: System.Collections.IDictionary.IsReadOnly\n  nameWithType: SortedDictionary<TKey, TValue>.IDictionary.IsReadOnly\n  nameWithType.vb: SortedDictionary(Of TKey, TValue).System.Collections.IDictionary.IsReadOnly\n- uid: System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Item(System.Object)\n  commentId: P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Item(System.Object)\n  id: System#Collections#IDictionary#Item(System.Object)\n  isEii: true\n  parent: System.Collections.Generic.SortedDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: IDictionary.Item[Object]\n  fullName: System.Collections.Generic.SortedDictionary<TKey, TValue>.System.Collections.IDictionary.Item[System.Object]\n  type: Property\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.IDictionary.this[]\n    path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n    startLine: 320\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Gets or sets the element with the specified key.</p>\\n\"\n  syntax:\n    content: object IDictionary.this[object key] { get; set; }\n    content.vb: ReadOnly WriteOnly Property System.Collections.IDictionary.Item(key As Object) As Object Implements IDictionary.this\n    parameters:\n    - id: key\n      type: System.Object\n      description: \"\\n<p>The key of the element to get.</p>\\n\"\n    return:\n      type: System.Object\n      description: \"\\n<p>The element with the specified key, or <strong>null</strong> if <em>key</em> is not in the dictionary or <em>key</em> is of a type that is not assignable to the key type <em>TKey</em> of the <xref href=\\\"System.Collections.Generic.SortedDictionary`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>key</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>A value is being assigned, and <em>key</em> is of a type that is not assignable to the key type <em>TKey</em> of the <xref href=\\\"System.Collections.Generic.SortedDictionary`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or-</p>\\n<p>A value is being assigned, and <em>value</em> is of a type that is not assignable to the value type <em>TValue</em> of the <xref href=\\\"System.Collections.Generic.SortedDictionary`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  seealso:\n  - type: System.Collections.IDictionary.Add(System.Object,System.Object)\n    commentId: M:System.Collections.IDictionary.Add(System.Object,System.Object)\n  implements:\n  - System.Collections.IDictionary.Item(System.Object)\n  modifiers.csharp:\n  - get\n  - set\n  fullName.vb: System.Collections.Generic.SortedDictionary(Of TKey, TValue).System.Collections.IDictionary.Item(System.Object)\n  name.vb: System.Collections.IDictionary.Item(Object)\n  nameWithType: SortedDictionary<TKey, TValue>.IDictionary.Item[Object]\n  nameWithType.vb: SortedDictionary(Of TKey, TValue).System.Collections.IDictionary.Item(Object)\n- uid: System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Keys\n  commentId: P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Keys\n  id: System#Collections#IDictionary#Keys\n  isEii: true\n  parent: System.Collections.Generic.SortedDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: IDictionary.Keys\n  fullName: System.Collections.Generic.SortedDictionary<TKey, TValue>.System.Collections.IDictionary.Keys\n  type: Property\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.IDictionary.Keys\n    path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n    startLine: 310\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Gets an <xref href=\\\"System.Collections.ICollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> containing the keys of the <xref href=\\\"System.Collections.IDictionary\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: ICollection IDictionary.Keys { get; }\n    content.vb: ReadOnly WriteOnly Property System.Collections.IDictionary.Keys As ICollection Implements IDictionary.Keys\n    parameters: []\n    return:\n      type: System.Collections.ICollection\n      description: \"\\n<p>An <xref href=\\\"System.Collections.ICollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> containing the keys of the <xref href=\\\"System.Collections.IDictionary\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  seealso:\n  - type: System.Collections.ICollection\n    commentId: T:System.Collections.ICollection\n  implements:\n  - System.Collections.IDictionary.Keys\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  fullName.vb: System.Collections.Generic.SortedDictionary(Of TKey, TValue).System.Collections.IDictionary.Keys\n  name.vb: System.Collections.IDictionary.Keys\n  nameWithType: SortedDictionary<TKey, TValue>.IDictionary.Keys\n  nameWithType.vb: SortedDictionary(Of TKey, TValue).System.Collections.IDictionary.Keys\n- uid: System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Values\n  commentId: P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Values\n  id: System#Collections#IDictionary#Values\n  isEii: true\n  parent: System.Collections.Generic.SortedDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: IDictionary.Values\n  fullName: System.Collections.Generic.SortedDictionary<TKey, TValue>.System.Collections.IDictionary.Values\n  type: Property\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.IDictionary.Values\n    path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n    startLine: 315\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Gets an <xref href=\\\"System.Collections.ICollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> containing the values in the <xref href=\\\"System.Collections.IDictionary\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: ICollection IDictionary.Values { get; }\n    content.vb: ReadOnly WriteOnly Property System.Collections.IDictionary.Values As ICollection Implements IDictionary.Values\n    parameters: []\n    return:\n      type: System.Collections.ICollection\n      description: \"\\n<p>An <xref href=\\\"System.Collections.ICollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> containing the values in the <xref href=\\\"System.Collections.IDictionary\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  seealso:\n  - type: System.Collections.ICollection\n    commentId: T:System.Collections.ICollection\n  implements:\n  - System.Collections.IDictionary.Values\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  fullName.vb: System.Collections.Generic.SortedDictionary(Of TKey, TValue).System.Collections.IDictionary.Values\n  name.vb: System.Collections.IDictionary.Values\n  nameWithType: SortedDictionary<TKey, TValue>.IDictionary.Values\n  nameWithType.vb: SortedDictionary(Of TKey, TValue).System.Collections.IDictionary.Values\n- uid: System.Collections.Generic.SortedDictionary`2.Values\n  commentId: P:System.Collections.Generic.SortedDictionary`2.Values\n  id: Values\n  parent: System.Collections.Generic.SortedDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: Values\n  fullName: System.Collections.Generic.SortedDictionary<TKey, TValue>.Values\n  type: Property\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Values\n    path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n    startLine: 173\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Gets a collection containing the values in the <xref href=\\\"System.Collections.Generic.SortedDictionary`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public SortedDictionary<TKey, TValue>.ValueCollection Values { get; }\n    content.vb: Public ReadOnly Property Values As SortedDictionary(Of TKey, TValue).ValueCollection\n    parameters: []\n    return:\n      type: System.Collections.Generic.SortedDictionary`2.ValueCollection\n      description: \"\\n<p>A <xref href=\\\"System.Collections.Generic.SortedDictionary`2.ValueCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> containing the values in the <xref href=\\\"System.Collections.Generic.SortedDictionary`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  seealso:\n  - type: System.Collections.Generic.SortedDictionary`2.ValueCollection\n    commentId: T:System.Collections.Generic.SortedDictionary`2.ValueCollection\n  - type: System.Collections.Generic.SortedDictionary`2.Keys\n    commentId: P:System.Collections.Generic.SortedDictionary`2.Keys\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  fullName.vb: System.Collections.Generic.SortedDictionary(Of TKey, TValue).Values\n  nameWithType: SortedDictionary<TKey, TValue>.Values\n  nameWithType.vb: SortedDictionary(Of TKey, TValue).Values\n- uid: System.Collections.Generic.SortedDictionary`2.Add(`0,`1)\n  commentId: M:System.Collections.Generic.SortedDictionary`2.Add(`0,`1)\n  id: Add(`0,`1)\n  parent: System.Collections.Generic.SortedDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: Add(TKey, TValue)\n  fullName: System.Collections.Generic.SortedDictionary<TKey, TValue>.Add(TKey, TValue)\n  type: Method\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Add\n    path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n    startLine: 198\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Adds an element with the specified key and value into the <xref href=\\\"System.Collections.Generic.SortedDictionary`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public void Add(TKey key, TValue value)\n    content.vb: Public Sub Add(key As TKey, value As TValue)\n    parameters:\n    - id: key\n      type: '{TKey}'\n      description: \"\\n<p>The key of the element to add.</p>\\n\"\n    - id: value\n      type: '{TValue}'\n      description: \"\\n<p>The value of the element to add. The value can be <strong>null</strong> for reference types.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>key</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>An element with the same key already exists in the <xref href=\\\"System.Collections.Generic.SortedDictionary`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  seealso:\n  - type: System.Collections.Generic.SortedDictionary`2.Remove(`0)\n    commentId: M:System.Collections.Generic.SortedDictionary`2.Remove(`0)\n  - type: System.Collections.Generic.SortedDictionary`2.Item(`0)\n    commentId: P:System.Collections.Generic.SortedDictionary`2.Item(`0)\n  - type: System.Collections.Generic.IDictionary`2.Add(`0,`1)\n    commentId: M:System.Collections.Generic.IDictionary`2.Add(`0,`1)\n  implements:\n  - System.Collections.Generic.IDictionary{{TKey},{TValue}}.Add({TKey},{TValue})\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.Generic.SortedDictionary(Of TKey, TValue).Add(TKey, TValue)\n  nameWithType: SortedDictionary<TKey, TValue>.Add(TKey, TValue)\n  nameWithType.vb: SortedDictionary(Of TKey, TValue).Add(TKey, TValue)\n- uid: System.Collections.Generic.SortedDictionary`2.Clear\n  commentId: M:System.Collections.Generic.SortedDictionary`2.Clear\n  id: Clear\n  parent: System.Collections.Generic.SortedDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: Clear()\n  fullName: System.Collections.Generic.SortedDictionary<TKey, TValue>.Clear()\n  type: Method\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Clear\n    path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n    startLine: 207\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Removes all elements from the <xref href=\\\"System.Collections.Generic.SortedDictionary`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public void Clear()\n    content.vb: Public Sub Clear\n  implements:\n  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Clear\n  - System.Collections.IDictionary.Clear\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.Generic.SortedDictionary(Of TKey, TValue).Clear()\n  nameWithType: SortedDictionary<TKey, TValue>.Clear()\n  nameWithType.vb: SortedDictionary(Of TKey, TValue).Clear()\n- uid: System.Collections.Generic.SortedDictionary`2.ContainsKey(`0)\n  commentId: M:System.Collections.Generic.SortedDictionary`2.ContainsKey(`0)\n  id: ContainsKey(`0)\n  parent: System.Collections.Generic.SortedDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: ContainsKey(TKey)\n  fullName: System.Collections.Generic.SortedDictionary<TKey, TValue>.ContainsKey(TKey)\n  type: Method\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ContainsKey\n    path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n    startLine: 212\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Determines whether the <xref href=\\\"System.Collections.Generic.SortedDictionary`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> contains an element with the specified key.</p>\\n\"\n  syntax:\n    content: public bool ContainsKey(TKey key)\n    content.vb: Public Function ContainsKey(key As TKey) As Boolean\n    parameters:\n    - id: key\n      type: '{TKey}'\n      description: \"\\n<p>The key to locate in the <xref href=\\\"System.Collections.Generic.SortedDictionary`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the <xref href=\\\"System.Collections.Generic.SortedDictionary`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> contains an element with the specified key; otherwise, <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>key</em> is <strong>null</strong>.</p>\\n\"\n  seealso:\n  - type: System.Collections.Generic.SortedDictionary`2.ContainsValue(`1)\n    commentId: M:System.Collections.Generic.SortedDictionary`2.ContainsValue(`1)\n  implements:\n  - System.Collections.Generic.IDictionary{{TKey},{TValue}}.ContainsKey({TKey})\n  - System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}.ContainsKey({TKey})\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.Generic.SortedDictionary(Of TKey, TValue).ContainsKey(TKey)\n  nameWithType: SortedDictionary<TKey, TValue>.ContainsKey(TKey)\n  nameWithType.vb: SortedDictionary(Of TKey, TValue).ContainsKey(TKey)\n- uid: System.Collections.Generic.SortedDictionary`2.ContainsValue(`1)\n  commentId: M:System.Collections.Generic.SortedDictionary`2.ContainsValue(`1)\n  id: ContainsValue(`1)\n  parent: System.Collections.Generic.SortedDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: ContainsValue(TValue)\n  fullName: System.Collections.Generic.SortedDictionary<TKey, TValue>.ContainsValue(TValue)\n  type: Method\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ContainsValue\n    path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n    startLine: 222\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Determines whether the <xref href=\\\"System.Collections.Generic.SortedDictionary`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> contains an element with the specified value.</p>\\n\"\n  syntax:\n    content: public bool ContainsValue(TValue value)\n    content.vb: Public Function ContainsValue(value As TValue) As Boolean\n    parameters:\n    - id: value\n      type: '{TValue}'\n      description: \"\\n<p>The value to locate in the <xref href=\\\"System.Collections.Generic.SortedDictionary`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. The value can be <strong>null</strong> for reference types.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the <xref href=\\\"System.Collections.Generic.SortedDictionary`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> contains an element with the specified value; otherwise, <strong>false</strong>.</p>\\n\"\n  seealso:\n  - type: System.Collections.Generic.SortedDictionary`2.ContainsKey(`0)\n    commentId: M:System.Collections.Generic.SortedDictionary`2.ContainsKey(`0)\n  - type: System.Collections.Generic.EqualityComparer`1.Default\n    commentId: P:System.Collections.Generic.EqualityComparer`1.Default\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.Generic.SortedDictionary(Of TKey, TValue).ContainsValue(TValue)\n  nameWithType: SortedDictionary<TKey, TValue>.ContainsValue(TValue)\n  nameWithType.vb: SortedDictionary(Of TKey, TValue).ContainsValue(TValue)\n- uid: System.Collections.Generic.SortedDictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)\n  commentId: M:System.Collections.Generic.SortedDictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)\n  id: CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)\n  parent: System.Collections.Generic.SortedDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: CopyTo(KeyValuePair<TKey, TValue>[], Int32)\n  fullName: System.Collections.Generic.SortedDictionary<TKey, TValue>.CopyTo(System.Collections.Generic.KeyValuePair<TKey, TValue>[], System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CopyTo\n    path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n    startLine: 253\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Copies the elements of the <xref href=\\\"System.Collections.Generic.SortedDictionary`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to the specified array of <xref href=\\\"System.Collections.Generic.KeyValuePair`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structures, starting at the specified index.</p>\\n\"\n  syntax:\n    content: public void CopyTo(KeyValuePair<TKey, TValue>[] array, int index)\n    content.vb: Public Sub CopyTo(array As KeyValuePair(Of TKey, TValue)(), index As Integer)\n    parameters:\n    - id: array\n      type: System.Collections.Generic.KeyValuePair{{TKey},{TValue}}[]\n      description: \"\\n<p>The one-dimensional array of <xref href=\\\"System.Collections.Generic.KeyValuePair`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structures that is the destination of the elements copied from the current <xref href=\\\"System.Collections.Generic.SortedDictionary`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> The array must have zero-based indexing.</p>\\n\"\n    - id: index\n      type: System.Int32\n      description: \"\\n<p>The zero-based index in <em>array</em> at which copying begins.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>array</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>index</em> is less than 0.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The number of elements in the source <xref href=\\\"System.Collections.Generic.SortedDictionary`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is greater than the available space from <em>index</em> to the end of the destination <em>array</em>.</p>\\n\"\n  implements:\n  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.CopyTo(System.Collections.Generic.KeyValuePair{{TKey},{TValue}}[],System.Int32)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.Generic.SortedDictionary(Of TKey, TValue).CopyTo(System.Collections.Generic.KeyValuePair(Of TKey, TValue)(), System.Int32)\n  name.vb: CopyTo(KeyValuePair(Of TKey, TValue)(), Int32)\n  nameWithType: SortedDictionary<TKey, TValue>.CopyTo(KeyValuePair<TKey, TValue>[], Int32)\n  nameWithType.vb: SortedDictionary(Of TKey, TValue).CopyTo(KeyValuePair(Of TKey, TValue)(), Int32)\n- uid: System.Collections.Generic.SortedDictionary`2.GetEnumerator\n  commentId: M:System.Collections.Generic.SortedDictionary`2.GetEnumerator\n  id: GetEnumerator\n  parent: System.Collections.Generic.SortedDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: GetEnumerator()\n  fullName: System.Collections.Generic.SortedDictionary<TKey, TValue>.GetEnumerator()\n  type: Method\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetEnumerator\n    path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n    startLine: 258\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Returns an enumerator that iterates through the <xref href=\\\"System.Collections.Generic.SortedDictionary`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public SortedDictionary<TKey, TValue>.Enumerator GetEnumerator()\n    content.vb: Public Function GetEnumerator As SortedDictionary(Of TKey, TValue).Enumerator\n    return:\n      type: System.Collections.Generic.SortedDictionary`2.Enumerator\n      description: \"\\n<p>A <xref href=\\\"System.Collections.Generic.SortedDictionary`2.Enumerator\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for the <xref href=\\\"System.Collections.Generic.SortedDictionary`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  seealso:\n  - type: System.Collections.Generic.SortedDictionary`2.Enumerator\n    commentId: T:System.Collections.Generic.SortedDictionary`2.Enumerator\n  - type: System.Collections.Generic.IEnumerator`1\n    commentId: T:System.Collections.Generic.IEnumerator`1\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.Generic.SortedDictionary(Of TKey, TValue).GetEnumerator()\n  nameWithType: SortedDictionary<TKey, TValue>.GetEnumerator()\n  nameWithType.vb: SortedDictionary(Of TKey, TValue).GetEnumerator()\n- uid: System.Collections.Generic.SortedDictionary`2.Remove(`0)\n  commentId: M:System.Collections.Generic.SortedDictionary`2.Remove(`0)\n  id: Remove(`0)\n  parent: System.Collections.Generic.SortedDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: Remove(TKey)\n  fullName: System.Collections.Generic.SortedDictionary<TKey, TValue>.Remove(TKey)\n  type: Method\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Remove\n    path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n    startLine: 268\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Removes the element with the specified key from the <xref href=\\\"System.Collections.Generic.SortedDictionary`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public bool Remove(TKey key)\n    content.vb: Public Function Remove(key As TKey) As Boolean\n    parameters:\n    - id: key\n      type: '{TKey}'\n      description: \"\\n<p>The key of the element to remove.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the element is successfully removed; otherwise, <strong>false</strong>.  This method also returns <strong>false</strong> if <em>key</em> is not found in the <xref href=\\\"System.Collections.Generic.SortedDictionary`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>key</em> is <strong>null</strong>.</p>\\n\"\n  seealso:\n  - type: System.Collections.Generic.SortedDictionary`2.Add(`0,`1)\n    commentId: M:System.Collections.Generic.SortedDictionary`2.Add(`0,`1)\n  - type: System.Collections.Generic.IDictionary`2.Remove(`0)\n    commentId: M:System.Collections.Generic.IDictionary`2.Remove(`0)\n  implements:\n  - System.Collections.Generic.IDictionary{{TKey},{TValue}}.Remove({TKey})\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.Generic.SortedDictionary(Of TKey, TValue).Remove(TKey)\n  nameWithType: SortedDictionary<TKey, TValue>.Remove(TKey)\n  nameWithType.vb: SortedDictionary(Of TKey, TValue).Remove(TKey)\n- uid: System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})\n  commentId: M:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})\n  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})\n  isEii: true\n  parent: System.Collections.Generic.SortedDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: ICollection<KeyValuePair<TKey, TValue>>.Add(KeyValuePair<TKey, TValue>)\n  fullName: System.Collections.Generic.SortedDictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Add(System.Collections.Generic.KeyValuePair<TKey, TValue>)\n  type: Method\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add\n    path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n    startLine: 48\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  syntax:\n    content: void ICollection<KeyValuePair<TKey, TValue>>.Add(KeyValuePair<TKey, TValue> keyValuePair)\n    content.vb: Sub System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add(keyValuePair As KeyValuePair(Of TKey, TValue)) Implements ICollection(Of KeyValuePair(Of TKey, TValue)).Add\n    parameters:\n    - id: keyValuePair\n      type: System.Collections.Generic.KeyValuePair{{TKey},{TValue}}\n  implements:\n  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Add(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})\n  fullName.vb: System.Collections.Generic.SortedDictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add(System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add(KeyValuePair(Of TKey, TValue))\n  nameWithType: SortedDictionary<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.Add(KeyValuePair<TKey, TValue>)\n  nameWithType.vb: SortedDictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add(KeyValuePair(Of TKey, TValue))\n- uid: System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})\n  commentId: M:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})\n  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})\n  isEii: true\n  parent: System.Collections.Generic.SortedDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: ICollection<KeyValuePair<TKey, TValue>>.Contains(KeyValuePair<TKey, TValue>)\n  fullName: System.Collections.Generic.SortedDictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Contains(System.Collections.Generic.KeyValuePair<TKey, TValue>)\n  type: Method\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains\n    path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n    startLine: 53\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  syntax:\n    content: bool ICollection<KeyValuePair<TKey, TValue>>.Contains(KeyValuePair<TKey, TValue> keyValuePair)\n    content.vb: Function System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains(keyValuePair As KeyValuePair(Of TKey, TValue)) As Boolean Implements ICollection(Of KeyValuePair(Of TKey, TValue)).Contains\n    parameters:\n    - id: keyValuePair\n      type: System.Collections.Generic.KeyValuePair{{TKey},{TValue}}\n    return:\n      type: System.Boolean\n  implements:\n  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Contains(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})\n  fullName.vb: System.Collections.Generic.SortedDictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains(System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains(KeyValuePair(Of TKey, TValue))\n  nameWithType: SortedDictionary<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.Contains(KeyValuePair<TKey, TValue>)\n  nameWithType.vb: SortedDictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains(KeyValuePair(Of TKey, TValue))\n- uid: System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})\n  commentId: M:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})\n  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})\n  isEii: true\n  parent: System.Collections.Generic.SortedDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: ICollection<KeyValuePair<TKey, TValue>>.Remove(KeyValuePair<TKey, TValue>)\n  fullName: System.Collections.Generic.SortedDictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Remove(System.Collections.Generic.KeyValuePair<TKey, TValue>)\n  type: Method\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove\n    path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n    startLine: 71\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  syntax:\n    content: bool ICollection<KeyValuePair<TKey, TValue>>.Remove(KeyValuePair<TKey, TValue> keyValuePair)\n    content.vb: Function System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove(keyValuePair As KeyValuePair(Of TKey, TValue)) As Boolean Implements ICollection(Of KeyValuePair(Of TKey, TValue)).Remove\n    parameters:\n    - id: keyValuePair\n      type: System.Collections.Generic.KeyValuePair{{TKey},{TValue}}\n    return:\n      type: System.Boolean\n  implements:\n  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Remove(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})\n  fullName.vb: System.Collections.Generic.SortedDictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove(System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove(KeyValuePair(Of TKey, TValue))\n  nameWithType: SortedDictionary<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.Remove(KeyValuePair<TKey, TValue>)\n  nameWithType.vb: SortedDictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove(KeyValuePair(Of TKey, TValue))\n- uid: System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey,TValue}}#GetEnumerator\n  commentId: M:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey,TValue}}#GetEnumerator\n  id: System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey,TValue}}#GetEnumerator\n  isEii: true\n  parent: System.Collections.Generic.SortedDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: IEnumerable<KeyValuePair<TKey, TValue>>.GetEnumerator()\n  fullName: System.Collections.Generic.SortedDictionary<TKey, TValue>.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>.GetEnumerator()\n  type: Method\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator\n    path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n    startLine: 263\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  syntax:\n    content: IEnumerator<KeyValuePair<TKey, TValue>> IEnumerable<KeyValuePair<TKey, TValue>>.GetEnumerator()\n    content.vb: Function System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator As IEnumerator(Of KeyValuePair(Of TKey, TValue)) Implements IEnumerable(Of KeyValuePair(Of TKey, TValue)).GetEnumerator\n    return:\n      type: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}\n  implements:\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.GetEnumerator\n  fullName.vb: System.Collections.Generic.SortedDictionary(Of TKey, TValue).System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator()\n  name.vb: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator()\n  nameWithType: SortedDictionary<TKey, TValue>.IEnumerable<KeyValuePair<TKey, TValue>>.GetEnumerator()\n  nameWithType.vb: SortedDictionary(Of TKey, TValue).System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator()\n- uid: System.Collections.Generic.SortedDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  commentId: M:System.Collections.Generic.SortedDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  isEii: true\n  parent: System.Collections.Generic.SortedDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: ICollection.CopyTo(Array, Int32)\n  fullName: System.Collections.Generic.SortedDictionary<TKey, TValue>.System.Collections.ICollection.CopyTo(System.Array, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.ICollection.CopyTo\n    path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n    startLine: 295\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Copies the elements of the <xref href=\\\"System.Collections.Generic.ICollection`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to an array, starting at the specified array index.</p>\\n\"\n  syntax:\n    content: void ICollection.CopyTo(Array array, int index)\n    content.vb: Sub System.Collections.ICollection.CopyTo(array As Array, index As Integer) Implements ICollection.CopyTo\n    parameters:\n    - id: array\n      type: System.Array\n      description: \"\\n<p>The one-dimensional array that is the destination of the elements copied from the <xref href=\\\"System.Collections.Generic.ICollection`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. The array must have zero-based indexing.</p>\\n\"\n    - id: index\n      type: System.Int32\n      description: \"\\n<p>The zero-based index in <em>array</em> at which copying begins.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>array</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>index</em> is less than 0.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>array</em> is multidimensional.</p>\\n<p>-or-</p>\\n<p>\\n<em>array</em> does not have zero-based indexing.</p>\\n<p>-or-</p>\\n<p>The number of elements in the source <xref href=\\\"System.Collections.Generic.ICollection`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is greater than the available space from <em>index</em> to the end of the destination <em>array</em>.</p>\\n<p>-or-</p>\\n<p>The type of the source <xref href=\\\"System.Collections.Generic.ICollection`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> cannot be cast automatically to the type of the destination <em>array</em>.</p>\\n\"\n  implements:\n  - System.Collections.ICollection.CopyTo(System.Array,System.Int32)\n  fullName.vb: System.Collections.Generic.SortedDictionary(Of TKey, TValue).System.Collections.ICollection.CopyTo(System.Array, System.Int32)\n  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)\n  nameWithType: SortedDictionary<TKey, TValue>.ICollection.CopyTo(Array, Int32)\n  nameWithType.vb: SortedDictionary(Of TKey, TValue).System.Collections.ICollection.CopyTo(Array, Int32)\n- uid: System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)\n  commentId: M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)\n  id: System#Collections#IDictionary#Add(System.Object,System.Object)\n  isEii: true\n  parent: System.Collections.Generic.SortedDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: IDictionary.Add(Object, Object)\n  fullName: System.Collections.Generic.SortedDictionary<TKey, TValue>.System.Collections.IDictionary.Add(System.Object, System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.IDictionary.Add\n    path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n    startLine: 364\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Adds an element with the provided key and value to the <xref href=\\\"System.Collections.IDictionary\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: void IDictionary.Add(object key, object value)\n    content.vb: Sub System.Collections.IDictionary.Add(key As Object, value As Object) Implements IDictionary.Add\n    parameters:\n    - id: key\n      type: System.Object\n      description: \"\\n<p>The object to use as the key of the element to add.</p>\\n\"\n    - id: value\n      type: System.Object\n      description: \"\\n<p>The object to use as the value of the element to add.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>key</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>key</em> is of a type that is not assignable to the key type <em>TKey</em> of the <xref href=\\\"System.Collections.IDictionary\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or-</p>\\n<p>\\n<em>value</em> is of a type that is not assignable to the value type <em>TValue</em> of the <xref href=\\\"System.Collections.IDictionary\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or-</p>\\n<p>An element with the same key already exists in the <xref href=\\\"System.Collections.IDictionary\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  seealso:\n  - type: System.Collections.IDictionary.Item(System.Object)\n    commentId: P:System.Collections.IDictionary.Item(System.Object)\n  implements:\n  - System.Collections.IDictionary.Add(System.Object,System.Object)\n  fullName.vb: System.Collections.Generic.SortedDictionary(Of TKey, TValue).System.Collections.IDictionary.Add(System.Object, System.Object)\n  name.vb: System.Collections.IDictionary.Add(Object, Object)\n  nameWithType: SortedDictionary<TKey, TValue>.IDictionary.Add(Object, Object)\n  nameWithType.vb: SortedDictionary(Of TKey, TValue).System.Collections.IDictionary.Add(Object, Object)\n- uid: System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Contains(System.Object)\n  commentId: M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Contains(System.Object)\n  id: System#Collections#IDictionary#Contains(System.Object)\n  isEii: true\n  parent: System.Collections.Generic.SortedDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: IDictionary.Contains(Object)\n  fullName: System.Collections.Generic.SortedDictionary<TKey, TValue>.System.Collections.IDictionary.Contains(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.IDictionary.Contains\n    path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n    startLine: 393\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Determines whether the <xref href=\\\"System.Collections.IDictionary\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> contains an element with the specified key.</p>\\n\"\n  syntax:\n    content: bool IDictionary.Contains(object key)\n    content.vb: Function System.Collections.IDictionary.Contains(key As Object) As Boolean Implements IDictionary.Contains\n    parameters:\n    - id: key\n      type: System.Object\n      description: \"\\n<p>The key to locate in the <xref href=\\\"System.Collections.IDictionary\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the <xref href=\\\"System.Collections.IDictionary\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> contains an element with the key; otherwise, <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>key</em> is <strong>null</strong>.</p>\\n\"\n  implements:\n  - System.Collections.IDictionary.Contains(System.Object)\n  fullName.vb: System.Collections.Generic.SortedDictionary(Of TKey, TValue).System.Collections.IDictionary.Contains(System.Object)\n  name.vb: System.Collections.IDictionary.Contains(Object)\n  nameWithType: SortedDictionary<TKey, TValue>.IDictionary.Contains(Object)\n  nameWithType.vb: SortedDictionary(Of TKey, TValue).System.Collections.IDictionary.Contains(Object)\n- uid: System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#GetEnumerator\n  commentId: M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#GetEnumerator\n  id: System#Collections#IDictionary#GetEnumerator\n  isEii: true\n  parent: System.Collections.Generic.SortedDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: IDictionary.GetEnumerator()\n  fullName: System.Collections.Generic.SortedDictionary<TKey, TValue>.System.Collections.IDictionary.GetEnumerator()\n  type: Method\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.IDictionary.GetEnumerator\n    path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n    startLine: 412\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Returns an <xref href=\\\"System.Collections.IDictionaryEnumerator\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for the <xref href=\\\"System.Collections.IDictionary\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: IDictionaryEnumerator IDictionary.GetEnumerator()\n    content.vb: Function System.Collections.IDictionary.GetEnumerator As IDictionaryEnumerator Implements IDictionary.GetEnumerator\n    return:\n      type: System.Collections.IDictionaryEnumerator\n      description: \"\\n<p>An <xref href=\\\"System.Collections.IDictionaryEnumerator\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for the <xref href=\\\"System.Collections.IDictionary\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  seealso:\n  - type: System.Collections.IDictionaryEnumerator\n    commentId: T:System.Collections.IDictionaryEnumerator\n  - type: System.Collections.IEnumerator\n    commentId: T:System.Collections.IEnumerator\n  implements:\n  - System.Collections.IDictionary.GetEnumerator\n  fullName.vb: System.Collections.Generic.SortedDictionary(Of TKey, TValue).System.Collections.IDictionary.GetEnumerator()\n  name.vb: System.Collections.IDictionary.GetEnumerator()\n  nameWithType: SortedDictionary<TKey, TValue>.IDictionary.GetEnumerator()\n  nameWithType.vb: SortedDictionary(Of TKey, TValue).System.Collections.IDictionary.GetEnumerator()\n- uid: System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Remove(System.Object)\n  commentId: M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Remove(System.Object)\n  id: System#Collections#IDictionary#Remove(System.Object)\n  isEii: true\n  parent: System.Collections.Generic.SortedDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: IDictionary.Remove(Object)\n  fullName: System.Collections.Generic.SortedDictionary<TKey, TValue>.System.Collections.IDictionary.Remove(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.IDictionary.Remove\n    path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n    startLine: 417\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Removes the element with the specified key from the <xref href=\\\"System.Collections.IDictionary\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: void IDictionary.Remove(object key)\n    content.vb: Sub System.Collections.IDictionary.Remove(key As Object) Implements IDictionary.Remove\n    parameters:\n    - id: key\n      type: System.Object\n      description: \"\\n<p>The key of the element to remove.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>key</em> is <strong>null</strong>.</p>\\n\"\n  implements:\n  - System.Collections.IDictionary.Remove(System.Object)\n  fullName.vb: System.Collections.Generic.SortedDictionary(Of TKey, TValue).System.Collections.IDictionary.Remove(System.Object)\n  name.vb: System.Collections.IDictionary.Remove(Object)\n  nameWithType: SortedDictionary<TKey, TValue>.IDictionary.Remove(Object)\n  nameWithType.vb: SortedDictionary(Of TKey, TValue).System.Collections.IDictionary.Remove(Object)\n- uid: System.Collections.Generic.SortedDictionary`2.System#Collections#IEnumerable#GetEnumerator\n  commentId: M:System.Collections.Generic.SortedDictionary`2.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.Collections.Generic.SortedDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: IEnumerable.GetEnumerator()\n  fullName: System.Collections.Generic.SortedDictionary<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator()\n  type: Method\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.IEnumerable.GetEnumerator\n    path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n    startLine: 435\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Returns an enumerator that iterates through the collection.</p>\\n\"\n  syntax:\n    content: IEnumerator IEnumerable.GetEnumerator()\n    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator\n    return:\n      type: System.Collections.IEnumerator\n      description: \"\\n<p>An <xref href=\\\"System.Collections.Generic.IEnumerator`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that can be used to iterate through the collection.</p>\\n\"\n  seealso:\n  - type: System.Collections.Generic.SortedDictionary`2.GetEnumerator\n    commentId: M:System.Collections.Generic.SortedDictionary`2.GetEnumerator\n  - type: System.Collections.Generic.IEnumerator`1\n    commentId: T:System.Collections.Generic.IEnumerator`1\n  implements:\n  - System.Collections.IEnumerable.GetEnumerator\n  fullName.vb: System.Collections.Generic.SortedDictionary(Of TKey, TValue).System.Collections.IEnumerable.GetEnumerator()\n  name.vb: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: SortedDictionary<TKey, TValue>.IEnumerable.GetEnumerator()\n  nameWithType.vb: SortedDictionary(Of TKey, TValue).System.Collections.IEnumerable.GetEnumerator()\n- uid: System.Collections.Generic.SortedDictionary`2.TryGetValue(`0,`1@)\n  commentId: M:System.Collections.Generic.SortedDictionary`2.TryGetValue(`0,`1@)\n  id: TryGetValue(`0,`1@)\n  parent: System.Collections.Generic.SortedDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: TryGetValue(TKey, out TValue)\n  fullName: System.Collections.Generic.SortedDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)\n  type: Method\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: TryGetValue\n    path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs\n    startLine: 278\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Gets the value associated with the specified key.</p>\\n\"\n  syntax:\n    content: public bool TryGetValue(TKey key, out TValue value)\n    content.vb: Public Function TryGetValue(key As TKey, ByRef value As TValue) As Boolean\n    parameters:\n    - id: key\n      type: '{TKey}'\n      description: \"\\n<p>The key of the value to get.</p>\\n\"\n    - id: value\n      type: '{TValue}'\n      description: \"\\n<p>When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the <em>value</em> parameter. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the <xref href=\\\"System.Collections.Generic.SortedDictionary`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> contains an element with the specified key; otherwise, <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>key</em> is <strong>null</strong>.</p>\\n\"\n  seealso:\n  - type: System.Collections.Generic.SortedDictionary`2.ContainsKey(`0)\n    commentId: M:System.Collections.Generic.SortedDictionary`2.ContainsKey(`0)\n  - type: System.Collections.Generic.SortedDictionary`2.Item(`0)\n    commentId: P:System.Collections.Generic.SortedDictionary`2.Item(`0)\n  implements:\n  - System.Collections.Generic.IDictionary{{TKey},{TValue}}.TryGetValue({TKey},{TValue}@)\n  - System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}.TryGetValue({TKey},{TValue}@)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.Generic.SortedDictionary(Of TKey, TValue).TryGetValue(TKey, ByRef TValue)\n  name.vb: TryGetValue(TKey, ByRef TValue)\n  nameWithType: SortedDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)\n  nameWithType.vb: SortedDictionary(Of TKey, TValue).TryGetValue(TKey, ByRef TValue)\nreferences:\n- uid: System.Collections.Generic\n  isExternal: false\n  name: System.Collections.Generic\n  fullName: System.Collections.Generic\n  nameWithType: System.Collections.Generic\n  commentId: N:System.Collections.Generic\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Collections.Generic.IDictionary{{TKey},{TValue}}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IDictionary`2\n  name: IDictionary<TKey, TValue>\n  fullName: System.Collections.Generic.IDictionary<TKey, TValue>\n  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)\n  name.vb: IDictionary(Of TKey, TValue)\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    fullName: System.Collections.Generic.IDictionary\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    fullName: System.Collections.Generic.IDictionary\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  nameWithType: IDictionary<TKey, TValue>\n  nameWithType.vb: IDictionary(Of TKey, TValue)\n  commentId: T:System.Collections.Generic.IDictionary{`0,`1}\n- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.ICollection`1\n  name: ICollection<KeyValuePair<TKey, TValue>>\n  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  fullname.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  name.vb: ICollection(Of KeyValuePair(Of TKey, TValue))\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    fullName: System.Collections.Generic.ICollection\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    fullName: System.Collections.Generic.ICollection\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: ICollection<KeyValuePair<TKey, TValue>>\n  nameWithType.vb: ICollection(Of KeyValuePair(Of TKey, TValue))\n  commentId: T:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}\n- uid: System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IReadOnlyDictionary`2\n  name: IReadOnlyDictionary<TKey, TValue>\n  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>\n  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue)\n  name.vb: IReadOnlyDictionary(Of TKey, TValue)\n  spec.csharp:\n  - uid: System.Collections.Generic.IReadOnlyDictionary`2\n    name: IReadOnlyDictionary\n    fullName: System.Collections.Generic.IReadOnlyDictionary\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IReadOnlyDictionary`2\n    name: IReadOnlyDictionary\n    fullName: System.Collections.Generic.IReadOnlyDictionary\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  nameWithType: IReadOnlyDictionary<TKey, TValue>\n  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue)\n  commentId: T:System.Collections.Generic.IReadOnlyDictionary{`0,`1}\n- uid: System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IReadOnlyCollection`1\n  name: IReadOnlyCollection<KeyValuePair<TKey, TValue>>\n  fullName: System.Collections.Generic.IReadOnlyCollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  fullname.vb: System.Collections.Generic.IReadOnlyCollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  name.vb: IReadOnlyCollection(Of KeyValuePair(Of TKey, TValue))\n  spec.csharp:\n  - uid: System.Collections.Generic.IReadOnlyCollection`1\n    name: IReadOnlyCollection\n    fullName: System.Collections.Generic.IReadOnlyCollection\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IReadOnlyCollection`1\n    name: IReadOnlyCollection\n    fullName: System.Collections.Generic.IReadOnlyCollection\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: IReadOnlyCollection<KeyValuePair<TKey, TValue>>\n  nameWithType.vb: IReadOnlyCollection(Of KeyValuePair(Of TKey, TValue))\n  commentId: T:System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{`0,`1}}\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<KeyValuePair<TKey, TValue>>\n  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  name.vb: IEnumerable(Of KeyValuePair(Of TKey, TValue))\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: IEnumerable<KeyValuePair<TKey, TValue>>\n  nameWithType.vb: IEnumerable(Of KeyValuePair(Of TKey, TValue))\n  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}\n- uid: System.Collections.IDictionary\n  parent: System.Collections\n  isExternal: false\n  name: IDictionary\n  fullName: System.Collections.IDictionary\n  nameWithType: IDictionary\n  commentId: T:System.Collections.IDictionary\n- uid: System.Collections.ICollection\n  parent: System.Collections\n  isExternal: false\n  name: ICollection\n  fullName: System.Collections.ICollection\n  nameWithType: ICollection\n  commentId: T:System.Collections.ICollection\n- uid: System.Collections.IEnumerable\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerable\n  fullName: System.Collections.IEnumerable\n  nameWithType: IEnumerable\n  commentId: T:System.Collections.IEnumerable\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System.Collections.IEnumerable.System.Linq.Queryable.AsQueryable\n  parent: System.Linq.Queryable\n  definition: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  name: AsQueryable()\n  fullName: System.Linq.Queryable.AsQueryable()\n  spec.csharp:\n  - uid: System.Linq.Queryable.AsQueryable\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Queryable.AsQueryable\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Queryable.AsQueryable()\n  commentId: M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Queryable.AsQueryable``1\n  parent: System.Linq.Queryable\n  definition: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n  name: AsQueryable<KeyValuePair<TKey, TValue>>()\n  fullName: System.Linq.Queryable.AsQueryable<System.Collections.Generic.KeyValuePair<TKey, TValue>>()\n  fullname.vb: System.Linq.Queryable.AsQueryable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()\n  name.vb: AsQueryable(Of KeyValuePair(Of TKey, TValue))()\n  spec.csharp:\n  - uid: System.Linq.Queryable.AsQueryable``1\n    name: AsQueryable<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Queryable.AsQueryable<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Queryable.AsQueryable``1\n    name: AsQueryable(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Queryable.AsQueryable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Queryable.AsQueryable<KeyValuePair<TKey, TValue>>()\n  nameWithType.vb: Queryable.AsQueryable(Of KeyValuePair(Of TKey, TValue))()\n  commentId: M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.IEnumerable.System.Linq.ParallelEnumerable.AsParallel\n  parent: System.Linq.ParallelEnumerable\n  definition: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  name: AsParallel()\n  fullName: System.Linq.ParallelEnumerable.AsParallel()\n  spec.csharp:\n  - uid: System.Linq.ParallelEnumerable.AsParallel\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.ParallelEnumerable.AsParallel\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ParallelEnumerable.AsParallel()\n  commentId: M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.ParallelEnumerable.AsParallel``1\n  parent: System.Linq.ParallelEnumerable\n  definition: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n  name: AsParallel<KeyValuePair<TKey, TValue>>()\n  fullName: System.Linq.ParallelEnumerable.AsParallel<System.Collections.Generic.KeyValuePair<TKey, TValue>>()\n  fullname.vb: System.Linq.ParallelEnumerable.AsParallel(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()\n  name.vb: AsParallel(Of KeyValuePair(Of TKey, TValue))()\n  spec.csharp:\n  - uid: System.Linq.ParallelEnumerable.AsParallel``1\n    name: AsParallel<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.ParallelEnumerable.AsParallel<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.ParallelEnumerable.AsParallel``1\n    name: AsParallel(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.ParallelEnumerable.AsParallel(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ParallelEnumerable.AsParallel<KeyValuePair<TKey, TValue>>()\n  nameWithType.vb: ParallelEnumerable.AsParallel(Of KeyValuePair(Of TKey, TValue))()\n  commentId: M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Aggregate``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n  name: Aggregate<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, KeyValuePair<TKey, TValue>, KeyValuePair<TKey, TValue>>)\n  fullName: System.Linq.Enumerable.Aggregate<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Collections.Generic.KeyValuePair<TKey, TValue>>)\n  fullname.vb: System.Linq.Enumerable.Aggregate(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Collections.Generic.KeyValuePair(Of TKey, TValue)))\n  name.vb: Aggregate(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), KeyValuePair(Of TKey, TValue), KeyValuePair(Of TKey, TValue)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Aggregate``1(System.Func{``0,``0,``0})\n    name: Aggregate<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Aggregate<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Aggregate``1(System.Func{``0,``0,``0})\n    name: Aggregate(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Aggregate(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Aggregate<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, KeyValuePair<TKey, TValue>, KeyValuePair<TKey, TValue>>)\n  nameWithType.vb: Enumerable.Aggregate(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), KeyValuePair(Of TKey, TValue), KeyValuePair(Of TKey, TValue)))\n  commentId: M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Aggregate``2({TAccumulate},System.Func{{TAccumulate},System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TAccumulate}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n  name: Aggregate<KeyValuePair<TKey, TValue>, TAccumulate>(TAccumulate, Func<TAccumulate, KeyValuePair<TKey, TValue>, TAccumulate>)\n  fullName: System.Linq.Enumerable.Aggregate<System.Collections.Generic.KeyValuePair<TKey, TValue>, TAccumulate>(TAccumulate, System.Func<TAccumulate, System.Collections.Generic.KeyValuePair<TKey, TValue>, TAccumulate>)\n  fullname.vb: System.Linq.Enumerable.Aggregate(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TAccumulate)(TAccumulate, System.Func(Of TAccumulate, System.Collections.Generic.KeyValuePair(Of TKey, TValue), TAccumulate))\n  name.vb: Aggregate(Of KeyValuePair(Of TKey, TValue), TAccumulate)(TAccumulate, Func(Of TAccumulate, KeyValuePair(Of TKey, TValue), TAccumulate))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Aggregate``2(``1,System.Func{``1,``0,``1})\n    name: Aggregate<KeyValuePair<TKey, TValue>, TAccumulate>\n    fullName: System.Linq.Enumerable.Aggregate<System.Collections.Generic.KeyValuePair<TKey, TValue>, TAccumulate>\n  - name: (\n    fullName: (\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Aggregate``2(``1,System.Func{``1,``0,``1})\n    name: Aggregate(Of KeyValuePair(Of TKey, TValue), TAccumulate)\n    fullName: System.Linq.Enumerable.Aggregate(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TAccumulate)\n  - name: (\n    fullName: (\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Aggregate<KeyValuePair<TKey, TValue>, TAccumulate>(TAccumulate, Func<TAccumulate, KeyValuePair<TKey, TValue>, TAccumulate>)\n  nameWithType.vb: Enumerable.Aggregate(Of KeyValuePair(Of TKey, TValue), TAccumulate)(TAccumulate, Func(Of TAccumulate, KeyValuePair(Of TKey, TValue), TAccumulate))\n  commentId: M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Aggregate``3({TAccumulate},System.Func{{TAccumulate},System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TAccumulate}},System.Func{{TAccumulate},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n  name: Aggregate<KeyValuePair<TKey, TValue>, TAccumulate, TResult>(TAccumulate, Func<TAccumulate, KeyValuePair<TKey, TValue>, TAccumulate>, Func<TAccumulate, TResult>)\n  fullName: System.Linq.Enumerable.Aggregate<System.Collections.Generic.KeyValuePair<TKey, TValue>, TAccumulate, TResult>(TAccumulate, System.Func<TAccumulate, System.Collections.Generic.KeyValuePair<TKey, TValue>, TAccumulate>, System.Func<TAccumulate, TResult>)\n  fullname.vb: System.Linq.Enumerable.Aggregate(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TAccumulate, TResult)(TAccumulate, System.Func(Of TAccumulate, System.Collections.Generic.KeyValuePair(Of TKey, TValue), TAccumulate), System.Func(Of TAccumulate, TResult))\n  name.vb: Aggregate(Of KeyValuePair(Of TKey, TValue), TAccumulate, TResult)(TAccumulate, Func(Of TAccumulate, KeyValuePair(Of TKey, TValue), TAccumulate), Func(Of TAccumulate, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Aggregate``3(``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n    name: Aggregate<KeyValuePair<TKey, TValue>, TAccumulate, TResult>\n    fullName: System.Linq.Enumerable.Aggregate<System.Collections.Generic.KeyValuePair<TKey, TValue>, TAccumulate, TResult>\n  - name: (\n    fullName: (\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Aggregate``3(``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n    name: Aggregate(Of KeyValuePair(Of TKey, TValue), TAccumulate, TResult)\n    fullName: System.Linq.Enumerable.Aggregate(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TAccumulate, TResult)\n  - name: (\n    fullName: (\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Aggregate<KeyValuePair<TKey, TValue>, TAccumulate, TResult>(TAccumulate, Func<TAccumulate, KeyValuePair<TKey, TValue>, TAccumulate>, Func<TAccumulate, TResult>)\n  nameWithType.vb: Enumerable.Aggregate(Of KeyValuePair(Of TKey, TValue), TAccumulate, TResult)(TAccumulate, Func(Of TAccumulate, KeyValuePair(Of TKey, TValue), TAccumulate), Func(Of TAccumulate, TResult))\n  commentId: M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.All``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: All<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  fullName: System.Linq.Enumerable.All<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.All(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Boolean))\n  name.vb: All(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.All``1(System.Func{``0,System.Boolean})\n    name: All<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.All<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.All``1(System.Func{``0,System.Boolean})\n    name: All(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.All(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.All<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  nameWithType.vb: Enumerable.All(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  commentId: M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Any``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n  name: Any<KeyValuePair<TKey, TValue>>()\n  fullName: System.Linq.Enumerable.Any<System.Collections.Generic.KeyValuePair<TKey, TValue>>()\n  fullname.vb: System.Linq.Enumerable.Any(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()\n  name.vb: Any(Of KeyValuePair(Of TKey, TValue))()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Any``1\n    name: Any<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Any<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Any``1\n    name: Any(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Any(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Any<KeyValuePair<TKey, TValue>>()\n  nameWithType.vb: Enumerable.Any(Of KeyValuePair(Of TKey, TValue))()\n  commentId: M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Any``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: Any<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  fullName: System.Linq.Enumerable.Any<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Any(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Boolean))\n  name.vb: Any(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Any``1(System.Func{``0,System.Boolean})\n    name: Any<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Any<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Any``1(System.Func{``0,System.Boolean})\n    name: Any(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Any(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Any<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  nameWithType.vb: Enumerable.Any(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  commentId: M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.AsEnumerable``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n  name: AsEnumerable<KeyValuePair<TKey, TValue>>()\n  fullName: System.Linq.Enumerable.AsEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>()\n  fullname.vb: System.Linq.Enumerable.AsEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()\n  name.vb: AsEnumerable(Of KeyValuePair(Of TKey, TValue))()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.AsEnumerable``1\n    name: AsEnumerable<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.AsEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.AsEnumerable``1\n    name: AsEnumerable(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.AsEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.AsEnumerable<KeyValuePair<TKey, TValue>>()\n  nameWithType.vb: Enumerable.AsEnumerable(Of KeyValuePair(Of TKey, TValue))()\n  commentId: M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Decimal})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  name: Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Decimal>)\n  fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Decimal>)\n  fullname.vb: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Decimal))\n  name.vb: Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Decimal))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Decimal})\n    name: Average<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Decimal})\n    name: Average(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Decimal>)\n  nameWithType.vb: Enumerable.Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Decimal))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Double})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  name: Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Double>)\n  fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Double>)\n  fullname.vb: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Double))\n  name.vb: Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Double))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Double})\n    name: Average<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Double})\n    name: Average(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Double>)\n  nameWithType.vb: Enumerable.Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Double))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  name: Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32>)\n  fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Int32>)\n  fullname.vb: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Int32))\n  name.vb: Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int32))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Int32})\n    name: Average<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Int32})\n    name: Average(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32>)\n  nameWithType.vb: Enumerable.Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int32))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int64})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  name: Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int64>)\n  fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Int64>)\n  fullname.vb: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Int64))\n  name.vb: Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int64))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Int64})\n    name: Average<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Int64})\n    name: Average(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int64>)\n  nameWithType.vb: Enumerable.Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int64))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  name: Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Decimal>>)\n  fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Decimal>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Decimal)))\n  name.vb: Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Decimal)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Decimal}})\n    name: Average<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Decimal}})\n    name: Average(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Decimal>>)\n  nameWithType.vb: Enumerable.Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Decimal)))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  name: Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Double>>)\n  fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Double>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Double)))\n  name.vb: Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Double)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Double}})\n    name: Average<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Double}})\n    name: Average(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Double>>)\n  nameWithType.vb: Enumerable.Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Double)))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  name: Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int32>>)\n  fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Int32>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Int32)))\n  name.vb: Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Int32)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Int32}})\n    name: Average<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Int32}})\n    name: Average(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int32>>)\n  nameWithType.vb: Enumerable.Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Int32)))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  name: Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int64>>)\n  fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Int64>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Int64)))\n  name.vb: Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Int64)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Int64}})\n    name: Average<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Int64}})\n    name: Average(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int64>>)\n  nameWithType.vb: Enumerable.Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Int64)))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  name: Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Single>>)\n  fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Single>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Single)))\n  name.vb: Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Single)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Single}})\n    name: Average<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Single}})\n    name: Average(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Single>>)\n  nameWithType.vb: Enumerable.Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Single)))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Single})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  name: Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Single>)\n  fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Single>)\n  fullname.vb: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Single))\n  name.vb: Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Single))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Single})\n    name: Average<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Single})\n    name: Average(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Single>)\n  nameWithType.vb: Enumerable.Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Single))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n- uid: System.Collections.IEnumerable.System.Linq.Enumerable.Cast``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  name: Cast<TResult>()\n  fullName: System.Linq.Enumerable.Cast<TResult>()\n  fullname.vb: System.Linq.Enumerable.Cast(Of TResult)()\n  name.vb: Cast(Of TResult)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Cast``1\n    name: Cast<TResult>\n    fullName: System.Linq.Enumerable.Cast<TResult>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Cast``1\n    name: Cast(Of TResult)\n    fullName: System.Linq.Enumerable.Cast(Of TResult)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Cast<TResult>()\n  nameWithType.vb: Enumerable.Cast(Of TResult)()\n  commentId: M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  name: Concat<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>)\n  fullName: System.Linq.Enumerable.Concat<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>)\n  fullname.vb: System.Linq.Enumerable.Concat(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)))\n  name.vb: Concat(Of KeyValuePair(Of TKey, TValue))(IEnumerable(Of KeyValuePair(Of TKey, TValue)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0})\n    name: Concat<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Concat<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0})\n    name: Concat(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Concat(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Concat<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>)\n  nameWithType.vb: Enumerable.Concat(Of KeyValuePair(Of TKey, TValue))(IEnumerable(Of KeyValuePair(Of TKey, TValue)))\n  commentId: M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Append``1(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n  name: Append<KeyValuePair<TKey, TValue>>(KeyValuePair<TKey, TValue>)\n  fullName: System.Linq.Enumerable.Append<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Collections.Generic.KeyValuePair<TKey, TValue>)\n  fullname.vb: System.Linq.Enumerable.Append(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  name.vb: Append(Of KeyValuePair(Of TKey, TValue))(KeyValuePair(Of TKey, TValue))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Append``1(``0)\n    name: Append<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Append<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Append``1(``0)\n    name: Append(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Append(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Append<KeyValuePair<TKey, TValue>>(KeyValuePair<TKey, TValue>)\n  nameWithType.vb: Enumerable.Append(Of KeyValuePair(Of TKey, TValue))(KeyValuePair(Of TKey, TValue))\n  commentId: M:System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Prepend``1(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n  name: Prepend<KeyValuePair<TKey, TValue>>(KeyValuePair<TKey, TValue>)\n  fullName: System.Linq.Enumerable.Prepend<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Collections.Generic.KeyValuePair<TKey, TValue>)\n  fullname.vb: System.Linq.Enumerable.Prepend(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  name.vb: Prepend(Of KeyValuePair(Of TKey, TValue))(KeyValuePair(Of TKey, TValue))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Prepend``1(``0)\n    name: Prepend<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Prepend<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Prepend``1(``0)\n    name: Prepend(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Prepend(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Prepend<KeyValuePair<TKey, TValue>>(KeyValuePair<TKey, TValue>)\n  nameWithType.vb: Enumerable.Prepend(Of KeyValuePair(Of TKey, TValue))(KeyValuePair(Of TKey, TValue))\n  commentId: M:System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Contains``1(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n  name: Contains<KeyValuePair<TKey, TValue>>(KeyValuePair<TKey, TValue>)\n  fullName: System.Linq.Enumerable.Contains<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Collections.Generic.KeyValuePair<TKey, TValue>)\n  fullname.vb: System.Linq.Enumerable.Contains(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  name.vb: Contains(Of KeyValuePair(Of TKey, TValue))(KeyValuePair(Of TKey, TValue))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Contains``1(``0)\n    name: Contains<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Contains<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Contains``1(``0)\n    name: Contains(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Contains(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Contains<KeyValuePair<TKey, TValue>>(KeyValuePair<TKey, TValue>)\n  nameWithType.vb: Enumerable.Contains(Of KeyValuePair(Of TKey, TValue))(KeyValuePair(Of TKey, TValue))\n  commentId: M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Contains``1(System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Collections.Generic.IEqualityComparer{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n  name: Contains<KeyValuePair<TKey, TValue>>(KeyValuePair<TKey, TValue>, IEqualityComparer<KeyValuePair<TKey, TValue>>)\n  fullName: System.Linq.Enumerable.Contains<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Collections.Generic.IEqualityComparer<System.Collections.Generic.KeyValuePair<TKey, TValue>>)\n  fullname.vb: System.Linq.Enumerable.Contains(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Collections.Generic.IEqualityComparer(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)))\n  name.vb: Contains(Of KeyValuePair(Of TKey, TValue))(KeyValuePair(Of TKey, TValue), IEqualityComparer(Of KeyValuePair(Of TKey, TValue)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Contains``1(``0,System.Collections.Generic.IEqualityComparer{``0})\n    name: Contains<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Contains<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Contains``1(``0,System.Collections.Generic.IEqualityComparer{``0})\n    name: Contains(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Contains(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Contains<KeyValuePair<TKey, TValue>>(KeyValuePair<TKey, TValue>, IEqualityComparer<KeyValuePair<TKey, TValue>>)\n  nameWithType.vb: Enumerable.Contains(Of KeyValuePair(Of TKey, TValue))(KeyValuePair(Of TKey, TValue), IEqualityComparer(Of KeyValuePair(Of TKey, TValue)))\n  commentId: M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Count``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n  name: Count<KeyValuePair<TKey, TValue>>()\n  fullName: System.Linq.Enumerable.Count<System.Collections.Generic.KeyValuePair<TKey, TValue>>()\n  fullname.vb: System.Linq.Enumerable.Count(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()\n  name.vb: Count(Of KeyValuePair(Of TKey, TValue))()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Count``1\n    name: Count<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Count<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Count``1\n    name: Count(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Count(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Count<KeyValuePair<TKey, TValue>>()\n  nameWithType.vb: Enumerable.Count(Of KeyValuePair(Of TKey, TValue))()\n  commentId: M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Count``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: Count<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  fullName: System.Linq.Enumerable.Count<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Count(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Boolean))\n  name.vb: Count(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Count``1(System.Func{``0,System.Boolean})\n    name: Count<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Count<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Count``1(System.Func{``0,System.Boolean})\n    name: Count(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Count(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Count<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  nameWithType.vb: Enumerable.Count(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  commentId: M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.DefaultIfEmpty``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n  name: DefaultIfEmpty<KeyValuePair<TKey, TValue>>()\n  fullName: System.Linq.Enumerable.DefaultIfEmpty<System.Collections.Generic.KeyValuePair<TKey, TValue>>()\n  fullname.vb: System.Linq.Enumerable.DefaultIfEmpty(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()\n  name.vb: DefaultIfEmpty(Of KeyValuePair(Of TKey, TValue))()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.DefaultIfEmpty``1\n    name: DefaultIfEmpty<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.DefaultIfEmpty<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.DefaultIfEmpty``1\n    name: DefaultIfEmpty(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.DefaultIfEmpty(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.DefaultIfEmpty<KeyValuePair<TKey, TValue>>()\n  nameWithType.vb: Enumerable.DefaultIfEmpty(Of KeyValuePair(Of TKey, TValue))()\n  commentId: M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n  name: DefaultIfEmpty<KeyValuePair<TKey, TValue>>(KeyValuePair<TKey, TValue>)\n  fullName: System.Linq.Enumerable.DefaultIfEmpty<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Collections.Generic.KeyValuePair<TKey, TValue>)\n  fullname.vb: System.Linq.Enumerable.DefaultIfEmpty(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  name.vb: DefaultIfEmpty(Of KeyValuePair(Of TKey, TValue))(KeyValuePair(Of TKey, TValue))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(``0)\n    name: DefaultIfEmpty<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.DefaultIfEmpty<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(``0)\n    name: DefaultIfEmpty(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.DefaultIfEmpty(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.DefaultIfEmpty<KeyValuePair<TKey, TValue>>(KeyValuePair<TKey, TValue>)\n  nameWithType.vb: Enumerable.DefaultIfEmpty(Of KeyValuePair(Of TKey, TValue))(KeyValuePair(Of TKey, TValue))\n  commentId: M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Distinct``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n  name: Distinct<KeyValuePair<TKey, TValue>>()\n  fullName: System.Linq.Enumerable.Distinct<System.Collections.Generic.KeyValuePair<TKey, TValue>>()\n  fullname.vb: System.Linq.Enumerable.Distinct(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()\n  name.vb: Distinct(Of KeyValuePair(Of TKey, TValue))()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Distinct``1\n    name: Distinct<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Distinct<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Distinct``1\n    name: Distinct(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Distinct(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Distinct<KeyValuePair<TKey, TValue>>()\n  nameWithType.vb: Enumerable.Distinct(Of KeyValuePair(Of TKey, TValue))()\n  commentId: M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEqualityComparer{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  name: Distinct<KeyValuePair<TKey, TValue>>(IEqualityComparer<KeyValuePair<TKey, TValue>>)\n  fullName: System.Linq.Enumerable.Distinct<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Collections.Generic.IEqualityComparer<System.Collections.Generic.KeyValuePair<TKey, TValue>>)\n  fullname.vb: System.Linq.Enumerable.Distinct(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Collections.Generic.IEqualityComparer(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)))\n  name.vb: Distinct(Of KeyValuePair(Of TKey, TValue))(IEqualityComparer(Of KeyValuePair(Of TKey, TValue)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEqualityComparer{``0})\n    name: Distinct<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Distinct<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEqualityComparer{``0})\n    name: Distinct(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Distinct(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Distinct<KeyValuePair<TKey, TValue>>(IEqualityComparer<KeyValuePair<TKey, TValue>>)\n  nameWithType.vb: Enumerable.Distinct(Of KeyValuePair(Of TKey, TValue))(IEqualityComparer(Of KeyValuePair(Of TKey, TValue)))\n  commentId: M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ElementAt``1(System.Int32)\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  name: ElementAt<KeyValuePair<TKey, TValue>>(Int32)\n  fullName: System.Linq.Enumerable.ElementAt<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Int32)\n  fullname.vb: System.Linq.Enumerable.ElementAt(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Int32)\n  name.vb: ElementAt(Of KeyValuePair(Of TKey, TValue))(Int32)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ElementAt``1(System.Int32)\n    name: ElementAt<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.ElementAt<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ElementAt``1(System.Int32)\n    name: ElementAt(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.ElementAt(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ElementAt<KeyValuePair<TKey, TValue>>(Int32)\n  nameWithType.vb: Enumerable.ElementAt(Of KeyValuePair(Of TKey, TValue))(Int32)\n  commentId: M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ElementAtOrDefault``1(System.Int32)\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  name: ElementAtOrDefault<KeyValuePair<TKey, TValue>>(Int32)\n  fullName: System.Linq.Enumerable.ElementAtOrDefault<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Int32)\n  fullname.vb: System.Linq.Enumerable.ElementAtOrDefault(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Int32)\n  name.vb: ElementAtOrDefault(Of KeyValuePair(Of TKey, TValue))(Int32)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Int32)\n    name: ElementAtOrDefault<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.ElementAtOrDefault<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Int32)\n    name: ElementAtOrDefault(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.ElementAtOrDefault(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ElementAtOrDefault<KeyValuePair<TKey, TValue>>(Int32)\n  nameWithType.vb: Enumerable.ElementAtOrDefault(Of KeyValuePair(Of TKey, TValue))(Int32)\n  commentId: M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  name: Except<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>)\n  fullName: System.Linq.Enumerable.Except<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>)\n  fullname.vb: System.Linq.Enumerable.Except(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)))\n  name.vb: Except(Of KeyValuePair(Of TKey, TValue))(IEnumerable(Of KeyValuePair(Of TKey, TValue)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0})\n    name: Except<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Except<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0})\n    name: Except(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Except(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Except<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>)\n  nameWithType.vb: Enumerable.Except(Of KeyValuePair(Of TKey, TValue))(IEnumerable(Of KeyValuePair(Of TKey, TValue)))\n  commentId: M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}},System.Collections.Generic.IEqualityComparer{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  name: Except<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>, IEqualityComparer<KeyValuePair<TKey, TValue>>)\n  fullName: System.Linq.Enumerable.Except<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>, System.Collections.Generic.IEqualityComparer<System.Collections.Generic.KeyValuePair<TKey, TValue>>)\n  fullname.vb: System.Linq.Enumerable.Except(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)), System.Collections.Generic.IEqualityComparer(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)))\n  name.vb: Except(Of KeyValuePair(Of TKey, TValue))(IEnumerable(Of KeyValuePair(Of TKey, TValue)), IEqualityComparer(Of KeyValuePair(Of TKey, TValue)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Except<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Except<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Except(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Except(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Except<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>, IEqualityComparer<KeyValuePair<TKey, TValue>>)\n  nameWithType.vb: Enumerable.Except(Of KeyValuePair(Of TKey, TValue))(IEnumerable(Of KeyValuePair(Of TKey, TValue)), IEqualityComparer(Of KeyValuePair(Of TKey, TValue)))\n  commentId: M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.First``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n  name: First<KeyValuePair<TKey, TValue>>()\n  fullName: System.Linq.Enumerable.First<System.Collections.Generic.KeyValuePair<TKey, TValue>>()\n  fullname.vb: System.Linq.Enumerable.First(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()\n  name.vb: First(Of KeyValuePair(Of TKey, TValue))()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.First``1\n    name: First<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.First<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.First``1\n    name: First(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.First(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.First<KeyValuePair<TKey, TValue>>()\n  nameWithType.vb: Enumerable.First(Of KeyValuePair(Of TKey, TValue))()\n  commentId: M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.First``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: First<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  fullName: System.Linq.Enumerable.First<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.First(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Boolean))\n  name.vb: First(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.First``1(System.Func{``0,System.Boolean})\n    name: First<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.First<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.First``1(System.Func{``0,System.Boolean})\n    name: First(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.First(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.First<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  nameWithType.vb: Enumerable.First(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  commentId: M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.FirstOrDefault``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  name: FirstOrDefault<KeyValuePair<TKey, TValue>>()\n  fullName: System.Linq.Enumerable.FirstOrDefault<System.Collections.Generic.KeyValuePair<TKey, TValue>>()\n  fullname.vb: System.Linq.Enumerable.FirstOrDefault(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()\n  name.vb: FirstOrDefault(Of KeyValuePair(Of TKey, TValue))()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.FirstOrDefault``1\n    name: FirstOrDefault<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.FirstOrDefault<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.FirstOrDefault``1\n    name: FirstOrDefault(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.FirstOrDefault(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.FirstOrDefault<KeyValuePair<TKey, TValue>>()\n  nameWithType.vb: Enumerable.FirstOrDefault(Of KeyValuePair(Of TKey, TValue))()\n  commentId: M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.FirstOrDefault``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: FirstOrDefault<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  fullName: System.Linq.Enumerable.FirstOrDefault<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.FirstOrDefault(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Boolean))\n  name.vb: FirstOrDefault(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Func{``0,System.Boolean})\n    name: FirstOrDefault<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.FirstOrDefault<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Func{``0,System.Boolean})\n    name: FirstOrDefault(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.FirstOrDefault(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.FirstOrDefault<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  nameWithType.vb: Enumerable.FirstOrDefault(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  commentId: M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupBy``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  name: GroupBy<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey))\n  name.vb: GroupBy(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``2(System.Func{``0,``1})\n    name: GroupBy<KeyValuePair<TKey, TValue>, TKey>\n    fullName: System.Linq.Enumerable.GroupBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``2(System.Func{``0,``1})\n    name: GroupBy(Of KeyValuePair(Of TKey, TValue), TKey)\n    fullName: System.Linq.Enumerable.GroupBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey))\n  commentId: M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupBy``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  name: GroupBy<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupBy(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy<KeyValuePair<TKey, TValue>, TKey>\n    fullName: System.Linq.Enumerable.GroupBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy(Of KeyValuePair(Of TKey, TValue), TKey)\n    fullName: System.Linq.Enumerable.GroupBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TElement}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  name: GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>)\n  fullName: System.Linq.Enumerable.GroupBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TElement>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TElement>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TElement)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TElement))\n  name.vb: GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TElement)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of KeyValuePair(Of TKey, TValue), TElement))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``0,``2})\n    name: GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement>\n    fullName: System.Linq.Enumerable.GroupBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``0,``2})\n    name: GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TElement)\n    fullName: System.Linq.Enumerable.GroupBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>)\n  nameWithType.vb: Enumerable.GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TElement)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of KeyValuePair(Of TKey, TValue), TElement))\n  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  name: GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TElement>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TElement)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TElement), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TElement)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of KeyValuePair(Of TKey, TValue), TElement), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement>\n    fullName: System.Linq.Enumerable.GroupBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TElement)\n    fullName: System.Linq.Enumerable.GroupBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TElement)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of KeyValuePair(Of TKey, TValue), TElement), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{{TKey},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n  name: GroupBy<KeyValuePair<TKey, TValue>, TKey, TResult>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<TKey, IEnumerable<KeyValuePair<TKey, TValue>>, TResult>)\n  fullName: System.Linq.Enumerable.GroupBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TResult>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Func<TKey, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>, TResult>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TResult)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)), TResult))\n  name.vb: GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TResult)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of TKey, IEnumerable(Of KeyValuePair(Of TKey, TValue)), TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n    name: GroupBy<KeyValuePair<TKey, TValue>, TKey, TResult>\n    fullName: System.Linq.Enumerable.GroupBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n    name: GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TResult)\n    fullName: System.Linq.Enumerable.GroupBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<KeyValuePair<TKey, TValue>, TKey, TResult>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<TKey, IEnumerable<KeyValuePair<TKey, TValue>>, TResult>)\n  nameWithType.vb: Enumerable.GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TResult)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of TKey, IEnumerable(Of KeyValuePair(Of TKey, TValue)), TResult))\n  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{{TKey},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n  name: GroupBy<KeyValuePair<TKey, TValue>, TKey, TResult>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<TKey, IEnumerable<KeyValuePair<TKey, TValue>>, TResult>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TResult>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Func<TKey, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TResult)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TResult)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of TKey, IEnumerable(Of KeyValuePair(Of TKey, TValue)), TResult), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy<KeyValuePair<TKey, TValue>, TKey, TResult>\n    fullName: System.Linq.Enumerable.GroupBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TResult)\n    fullName: System.Linq.Enumerable.GroupBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<KeyValuePair<TKey, TValue>, TKey, TResult>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<TKey, IEnumerable<KeyValuePair<TKey, TValue>>, TResult>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TResult)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of TKey, IEnumerable(Of KeyValuePair(Of TKey, TValue)), TResult), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupBy``4(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TElement}},System.Func{{TKey},System.Collections.Generic.IEnumerable{{TElement}},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n  name: GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement, TResult>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)\n  fullName: System.Linq.Enumerable.GroupBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TElement, TResult>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TElement>, System.Func<TKey, System.Collections.Generic.IEnumerable<TElement>, TResult>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TElement, TResult)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TElement), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TElement), TResult))\n  name.vb: GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TElement, TResult)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of KeyValuePair(Of TKey, TValue), TElement), Func(Of TKey, IEnumerable(Of TElement), TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``4(System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n    name: GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement, TResult>\n    fullName: System.Linq.Enumerable.GroupBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TElement, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``4(System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n    name: GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TElement, TResult)\n    fullName: System.Linq.Enumerable.GroupBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TElement, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement, TResult>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)\n  nameWithType.vb: Enumerable.GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TElement, TResult)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of KeyValuePair(Of TKey, TValue), TElement), Func(Of TKey, IEnumerable(Of TElement), TResult))\n  commentId: M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupBy``4(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TElement}},System.Func{{TKey},System.Collections.Generic.IEnumerable{{TElement}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n  name: GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement, TResult>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TElement, TResult>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TElement>, System.Func<TKey, System.Collections.Generic.IEnumerable<TElement>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TElement, TResult)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TElement), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TElement), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TElement, TResult)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of KeyValuePair(Of TKey, TValue), TElement), Func(Of TKey, IEnumerable(Of TElement), TResult), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``4(System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement, TResult>\n    fullName: System.Linq.Enumerable.GroupBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TElement, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``4(System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TElement, TResult)\n    fullName: System.Linq.Enumerable.GroupBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TElement, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement, TResult>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TElement, TResult)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of KeyValuePair(Of TKey, TValue), TElement), Func(Of TKey, IEnumerable(Of TElement), TResult), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Collections.Generic.IEnumerable{{TInner}},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n  name: GroupJoin<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>(IEnumerable<TInner>, Func<KeyValuePair<TKey, TValue>, TKey>, Func<TInner, TKey>, Func<KeyValuePair<TKey, TValue>, IEnumerable<TInner>, TResult>)\n  fullName: System.Linq.Enumerable.GroupJoin<System.Collections.Generic.KeyValuePair<TKey, TValue>, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TInner>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Func<TInner, TKey>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Collections.Generic.IEnumerable<TInner>, TResult>)\n  fullname.vb: System.Linq.Enumerable.GroupJoin(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Func(Of TInner, TKey), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Collections.Generic.IEnumerable(Of TInner), TResult))\n  name.vb: GroupJoin(Of KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of TInner, TKey), Func(Of KeyValuePair(Of TKey, TValue), IEnumerable(Of TInner), TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n    name: GroupJoin<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>\n    fullName: System.Linq.Enumerable.GroupJoin<System.Collections.Generic.KeyValuePair<TKey, TValue>, TInner, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n    name: GroupJoin(Of KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)\n    fullName: System.Linq.Enumerable.GroupJoin(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupJoin<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>(IEnumerable<TInner>, Func<KeyValuePair<TKey, TValue>, TKey>, Func<TInner, TKey>, Func<KeyValuePair<TKey, TValue>, IEnumerable<TInner>, TResult>)\n  nameWithType.vb: Enumerable.GroupJoin(Of KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of TInner, TKey), Func(Of KeyValuePair(Of TKey, TValue), IEnumerable(Of TInner), TResult))\n  commentId: M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Collections.Generic.IEnumerable{{TInner}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n  name: GroupJoin<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>(IEnumerable<TInner>, Func<KeyValuePair<TKey, TValue>, TKey>, Func<TInner, TKey>, Func<KeyValuePair<TKey, TValue>, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupJoin<System.Collections.Generic.KeyValuePair<TKey, TValue>, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TInner>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Func<TInner, TKey>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Collections.Generic.IEnumerable<TInner>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupJoin(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Func(Of TInner, TKey), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Collections.Generic.IEnumerable(Of TInner), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupJoin(Of KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of TInner, TKey), Func(Of KeyValuePair(Of TKey, TValue), IEnumerable(Of TInner), TResult), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n    name: GroupJoin<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>\n    fullName: System.Linq.Enumerable.GroupJoin<System.Collections.Generic.KeyValuePair<TKey, TValue>, TInner, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n    name: GroupJoin(Of KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)\n    fullName: System.Linq.Enumerable.GroupJoin(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupJoin<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>(IEnumerable<TInner>, Func<KeyValuePair<TKey, TValue>, TKey>, Func<TInner, TKey>, Func<KeyValuePair<TKey, TValue>, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupJoin(Of KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of TInner, TKey), Func(Of KeyValuePair(Of TKey, TValue), IEnumerable(Of TInner), TResult), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  name: Intersect<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>)\n  fullName: System.Linq.Enumerable.Intersect<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>)\n  fullname.vb: System.Linq.Enumerable.Intersect(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)))\n  name.vb: Intersect(Of KeyValuePair(Of TKey, TValue))(IEnumerable(Of KeyValuePair(Of TKey, TValue)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0})\n    name: Intersect<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Intersect<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0})\n    name: Intersect(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Intersect(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Intersect<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>)\n  nameWithType.vb: Enumerable.Intersect(Of KeyValuePair(Of TKey, TValue))(IEnumerable(Of KeyValuePair(Of TKey, TValue)))\n  commentId: M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}},System.Collections.Generic.IEqualityComparer{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  name: Intersect<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>, IEqualityComparer<KeyValuePair<TKey, TValue>>)\n  fullName: System.Linq.Enumerable.Intersect<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>, System.Collections.Generic.IEqualityComparer<System.Collections.Generic.KeyValuePair<TKey, TValue>>)\n  fullname.vb: System.Linq.Enumerable.Intersect(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)), System.Collections.Generic.IEqualityComparer(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)))\n  name.vb: Intersect(Of KeyValuePair(Of TKey, TValue))(IEnumerable(Of KeyValuePair(Of TKey, TValue)), IEqualityComparer(Of KeyValuePair(Of TKey, TValue)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Intersect<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Intersect<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Intersect(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Intersect(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Intersect<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>, IEqualityComparer<KeyValuePair<TKey, TValue>>)\n  nameWithType.vb: Enumerable.Intersect(Of KeyValuePair(Of TKey, TValue))(IEnumerable(Of KeyValuePair(Of TKey, TValue)), IEqualityComparer(Of KeyValuePair(Of TKey, TValue)))\n  commentId: M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TInner},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n  name: Join<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>(IEnumerable<TInner>, Func<KeyValuePair<TKey, TValue>, TKey>, Func<TInner, TKey>, Func<KeyValuePair<TKey, TValue>, TInner, TResult>)\n  fullName: System.Linq.Enumerable.Join<System.Collections.Generic.KeyValuePair<TKey, TValue>, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TInner>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Func<TInner, TKey>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TInner, TResult>)\n  fullname.vb: System.Linq.Enumerable.Join(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Func(Of TInner, TKey), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TInner, TResult))\n  name.vb: Join(Of KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of TInner, TKey), Func(Of KeyValuePair(Of TKey, TValue), TInner, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n    name: Join<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>\n    fullName: System.Linq.Enumerable.Join<System.Collections.Generic.KeyValuePair<TKey, TValue>, TInner, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n    name: Join(Of KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)\n    fullName: System.Linq.Enumerable.Join(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Join<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>(IEnumerable<TInner>, Func<KeyValuePair<TKey, TValue>, TKey>, Func<TInner, TKey>, Func<KeyValuePair<TKey, TValue>, TInner, TResult>)\n  nameWithType.vb: Enumerable.Join(Of KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of TInner, TKey), Func(Of KeyValuePair(Of TKey, TValue), TInner, TResult))\n  commentId: M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TInner},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n  name: Join<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>(IEnumerable<TInner>, Func<KeyValuePair<TKey, TValue>, TKey>, Func<TInner, TKey>, Func<KeyValuePair<TKey, TValue>, TInner, TResult>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.Join<System.Collections.Generic.KeyValuePair<TKey, TValue>, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TInner>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Func<TInner, TKey>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TInner, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.Join(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Func(Of TInner, TKey), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TInner, TResult), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: Join(Of KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of TInner, TKey), Func(Of KeyValuePair(Of TKey, TValue), TInner, TResult), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n    name: Join<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>\n    fullName: System.Linq.Enumerable.Join<System.Collections.Generic.KeyValuePair<TKey, TValue>, TInner, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n    name: Join(Of KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)\n    fullName: System.Linq.Enumerable.Join(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Join<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>(IEnumerable<TInner>, Func<KeyValuePair<TKey, TValue>, TKey>, Func<TInner, TKey>, Func<KeyValuePair<TKey, TValue>, TInner, TResult>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.Join(Of KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of TInner, TKey), Func(Of KeyValuePair(Of TKey, TValue), TInner, TResult), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Last``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n  name: Last<KeyValuePair<TKey, TValue>>()\n  fullName: System.Linq.Enumerable.Last<System.Collections.Generic.KeyValuePair<TKey, TValue>>()\n  fullname.vb: System.Linq.Enumerable.Last(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()\n  name.vb: Last(Of KeyValuePair(Of TKey, TValue))()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Last``1\n    name: Last<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Last<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Last``1\n    name: Last(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Last(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Last<KeyValuePair<TKey, TValue>>()\n  nameWithType.vb: Enumerable.Last(Of KeyValuePair(Of TKey, TValue))()\n  commentId: M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Last``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: Last<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  fullName: System.Linq.Enumerable.Last<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Last(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Boolean))\n  name.vb: Last(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Last``1(System.Func{``0,System.Boolean})\n    name: Last<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Last<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Last``1(System.Func{``0,System.Boolean})\n    name: Last(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Last(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Last<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  nameWithType.vb: Enumerable.Last(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  commentId: M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.LastOrDefault``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  name: LastOrDefault<KeyValuePair<TKey, TValue>>()\n  fullName: System.Linq.Enumerable.LastOrDefault<System.Collections.Generic.KeyValuePair<TKey, TValue>>()\n  fullname.vb: System.Linq.Enumerable.LastOrDefault(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()\n  name.vb: LastOrDefault(Of KeyValuePair(Of TKey, TValue))()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.LastOrDefault``1\n    name: LastOrDefault<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.LastOrDefault<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.LastOrDefault``1\n    name: LastOrDefault(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.LastOrDefault(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.LastOrDefault<KeyValuePair<TKey, TValue>>()\n  nameWithType.vb: Enumerable.LastOrDefault(Of KeyValuePair(Of TKey, TValue))()\n  commentId: M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.LastOrDefault``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: LastOrDefault<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  fullName: System.Linq.Enumerable.LastOrDefault<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.LastOrDefault(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Boolean))\n  name.vb: LastOrDefault(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Func{``0,System.Boolean})\n    name: LastOrDefault<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.LastOrDefault<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Func{``0,System.Boolean})\n    name: LastOrDefault(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.LastOrDefault(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.LastOrDefault<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  nameWithType.vb: Enumerable.LastOrDefault(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  commentId: M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.LongCount``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n  name: LongCount<KeyValuePair<TKey, TValue>>()\n  fullName: System.Linq.Enumerable.LongCount<System.Collections.Generic.KeyValuePair<TKey, TValue>>()\n  fullname.vb: System.Linq.Enumerable.LongCount(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()\n  name.vb: LongCount(Of KeyValuePair(Of TKey, TValue))()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.LongCount``1\n    name: LongCount<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.LongCount<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.LongCount``1\n    name: LongCount(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.LongCount(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.LongCount<KeyValuePair<TKey, TValue>>()\n  nameWithType.vb: Enumerable.LongCount(Of KeyValuePair(Of TKey, TValue))()\n  commentId: M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.LongCount``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: LongCount<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  fullName: System.Linq.Enumerable.LongCount<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.LongCount(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Boolean))\n  name.vb: LongCount(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.LongCount``1(System.Func{``0,System.Boolean})\n    name: LongCount<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.LongCount<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.LongCount``1(System.Func{``0,System.Boolean})\n    name: LongCount(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.LongCount(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.LongCount<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  nameWithType.vb: Enumerable.LongCount(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  commentId: M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n  name: Max<KeyValuePair<TKey, TValue>>()\n  fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>()\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()\n  name.vb: Max(Of KeyValuePair(Of TKey, TValue))()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1\n    name: Max<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1\n    name: Max(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<KeyValuePair<TKey, TValue>>()\n  nameWithType.vb: Enumerable.Max(Of KeyValuePair(Of TKey, TValue))()\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Decimal})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  name: Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Decimal>)\n  fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Decimal>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Decimal))\n  name.vb: Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Decimal))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Decimal})\n    name: Max<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Decimal})\n    name: Max(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Decimal>)\n  nameWithType.vb: Enumerable.Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Decimal))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Double})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  name: Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Double>)\n  fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Double>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Double))\n  name.vb: Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Double))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Double})\n    name: Max<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Double})\n    name: Max(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Double>)\n  nameWithType.vb: Enumerable.Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Double))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  name: Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32>)\n  fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Int32>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Int32))\n  name.vb: Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int32))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Int32})\n    name: Max<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Int32})\n    name: Max(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32>)\n  nameWithType.vb: Enumerable.Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int32))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int64})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  name: Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int64>)\n  fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Int64>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Int64))\n  name.vb: Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int64))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Int64})\n    name: Max<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Int64})\n    name: Max(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int64>)\n  nameWithType.vb: Enumerable.Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int64))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  name: Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Decimal>>)\n  fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Decimal>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Decimal)))\n  name.vb: Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Decimal)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Decimal}})\n    name: Max<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Decimal}})\n    name: Max(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Decimal>>)\n  nameWithType.vb: Enumerable.Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Decimal)))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  name: Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Double>>)\n  fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Double>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Double)))\n  name.vb: Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Double)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Double}})\n    name: Max<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Double}})\n    name: Max(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Double>>)\n  nameWithType.vb: Enumerable.Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Double)))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  name: Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int32>>)\n  fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Int32>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Int32)))\n  name.vb: Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Int32)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Int32}})\n    name: Max<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Int32}})\n    name: Max(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int32>>)\n  nameWithType.vb: Enumerable.Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Int32)))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  name: Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int64>>)\n  fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Int64>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Int64)))\n  name.vb: Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Int64)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Int64}})\n    name: Max<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Int64}})\n    name: Max(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int64>>)\n  nameWithType.vb: Enumerable.Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Int64)))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  name: Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Single>>)\n  fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Single>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Single)))\n  name.vb: Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Single)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Single}})\n    name: Max<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Single}})\n    name: Max(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Single>>)\n  nameWithType.vb: Enumerable.Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Single)))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Single})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  name: Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Single>)\n  fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Single>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Single))\n  name.vb: Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Single))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Single})\n    name: Max<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Single})\n    name: Max(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Single>)\n  nameWithType.vb: Enumerable.Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Single))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  name: Max<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, TResult>)\n  fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>, TResult>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TResult>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TResult)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TResult))\n  name.vb: Max(Of KeyValuePair(Of TKey, TValue), TResult)(Func(Of KeyValuePair(Of TKey, TValue), TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``2(System.Func{``0,``1})\n    name: Max<KeyValuePair<TKey, TValue>, TResult>\n    fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``2(System.Func{``0,``1})\n    name: Max(Of KeyValuePair(Of TKey, TValue), TResult)\n    fullName: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, TResult>)\n  nameWithType.vb: Enumerable.Max(Of KeyValuePair(Of TKey, TValue), TResult)(Func(Of KeyValuePair(Of TKey, TValue), TResult))\n  commentId: M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n  name: Min<KeyValuePair<TKey, TValue>>()\n  fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>()\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()\n  name.vb: Min(Of KeyValuePair(Of TKey, TValue))()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1\n    name: Min<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1\n    name: Min(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<KeyValuePair<TKey, TValue>>()\n  nameWithType.vb: Enumerable.Min(Of KeyValuePair(Of TKey, TValue))()\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Decimal})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  name: Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Decimal>)\n  fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Decimal>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Decimal))\n  name.vb: Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Decimal))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Decimal})\n    name: Min<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Decimal})\n    name: Min(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Decimal>)\n  nameWithType.vb: Enumerable.Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Decimal))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Double})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  name: Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Double>)\n  fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Double>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Double))\n  name.vb: Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Double))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Double})\n    name: Min<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Double})\n    name: Min(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Double>)\n  nameWithType.vb: Enumerable.Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Double))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  name: Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32>)\n  fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Int32>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Int32))\n  name.vb: Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int32))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Int32})\n    name: Min<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Int32})\n    name: Min(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32>)\n  nameWithType.vb: Enumerable.Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int32))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int64})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  name: Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int64>)\n  fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Int64>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Int64))\n  name.vb: Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int64))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Int64})\n    name: Min<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Int64})\n    name: Min(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int64>)\n  nameWithType.vb: Enumerable.Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int64))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  name: Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Decimal>>)\n  fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Decimal>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Decimal)))\n  name.vb: Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Decimal)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Decimal}})\n    name: Min<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Decimal}})\n    name: Min(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Decimal>>)\n  nameWithType.vb: Enumerable.Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Decimal)))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  name: Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Double>>)\n  fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Double>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Double)))\n  name.vb: Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Double)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Double}})\n    name: Min<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Double}})\n    name: Min(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Double>>)\n  nameWithType.vb: Enumerable.Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Double)))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  name: Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int32>>)\n  fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Int32>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Int32)))\n  name.vb: Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Int32)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Int32}})\n    name: Min<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Int32}})\n    name: Min(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int32>>)\n  nameWithType.vb: Enumerable.Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Int32)))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  name: Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int64>>)\n  fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Int64>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Int64)))\n  name.vb: Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Int64)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Int64}})\n    name: Min<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Int64}})\n    name: Min(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int64>>)\n  nameWithType.vb: Enumerable.Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Int64)))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  name: Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Single>>)\n  fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Single>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Single)))\n  name.vb: Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Single)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Single}})\n    name: Min<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Single}})\n    name: Min(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Single>>)\n  nameWithType.vb: Enumerable.Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Single)))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Single})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  name: Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Single>)\n  fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Single>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Single))\n  name.vb: Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Single))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Single})\n    name: Min<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Single})\n    name: Min(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Single>)\n  nameWithType.vb: Enumerable.Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Single))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  name: Min<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, TResult>)\n  fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>, TResult>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TResult>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TResult)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TResult))\n  name.vb: Min(Of KeyValuePair(Of TKey, TValue), TResult)(Func(Of KeyValuePair(Of TKey, TValue), TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``2(System.Func{``0,``1})\n    name: Min<KeyValuePair<TKey, TValue>, TResult>\n    fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``2(System.Func{``0,``1})\n    name: Min(Of KeyValuePair(Of TKey, TValue), TResult)\n    fullName: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, TResult>)\n  nameWithType.vb: Enumerable.Min(Of KeyValuePair(Of TKey, TValue), TResult)(Func(Of KeyValuePair(Of TKey, TValue), TResult))\n  commentId: M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Collections.IEnumerable.System.Linq.Enumerable.OfType``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  name: OfType<TResult>()\n  fullName: System.Linq.Enumerable.OfType<TResult>()\n  fullname.vb: System.Linq.Enumerable.OfType(Of TResult)()\n  name.vb: OfType(Of TResult)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OfType``1\n    name: OfType<TResult>\n    fullName: System.Linq.Enumerable.OfType<TResult>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OfType``1\n    name: OfType(Of TResult)\n    fullName: System.Linq.Enumerable.OfType(Of TResult)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.OfType<TResult>()\n  nameWithType.vb: Enumerable.OfType(Of TResult)()\n  commentId: M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.OrderBy``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  name: OrderBy<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>)\n  fullName: System.Linq.Enumerable.OrderBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>)\n  fullname.vb: System.Linq.Enumerable.OrderBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey))\n  name.vb: OrderBy(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OrderBy``2(System.Func{``0,``1})\n    name: OrderBy<KeyValuePair<TKey, TValue>, TKey>\n    fullName: System.Linq.Enumerable.OrderBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OrderBy``2(System.Func{``0,``1})\n    name: OrderBy(Of KeyValuePair(Of TKey, TValue), TKey)\n    fullName: System.Linq.Enumerable.OrderBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.OrderBy<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>)\n  nameWithType.vb: Enumerable.OrderBy(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey))\n  commentId: M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.OrderBy``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Collections.Generic.IComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  name: OrderBy<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>, IComparer<TKey>)\n  fullName: System.Linq.Enumerable.OrderBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Collections.Generic.IComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.OrderBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Collections.Generic.IComparer(Of TKey))\n  name.vb: OrderBy(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey), IComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OrderBy``2(System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n    name: OrderBy<KeyValuePair<TKey, TValue>, TKey>\n    fullName: System.Linq.Enumerable.OrderBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OrderBy``2(System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n    name: OrderBy(Of KeyValuePair(Of TKey, TValue), TKey)\n    fullName: System.Linq.Enumerable.OrderBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.OrderBy<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>, IComparer<TKey>)\n  nameWithType.vb: Enumerable.OrderBy(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey), IComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.OrderByDescending``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  name: OrderByDescending<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>)\n  fullName: System.Linq.Enumerable.OrderByDescending<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>)\n  fullname.vb: System.Linq.Enumerable.OrderByDescending(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey))\n  name.vb: OrderByDescending(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Func{``0,``1})\n    name: OrderByDescending<KeyValuePair<TKey, TValue>, TKey>\n    fullName: System.Linq.Enumerable.OrderByDescending<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Func{``0,``1})\n    name: OrderByDescending(Of KeyValuePair(Of TKey, TValue), TKey)\n    fullName: System.Linq.Enumerable.OrderByDescending(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.OrderByDescending<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>)\n  nameWithType.vb: Enumerable.OrderByDescending(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey))\n  commentId: M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.OrderByDescending``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Collections.Generic.IComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  name: OrderByDescending<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>, IComparer<TKey>)\n  fullName: System.Linq.Enumerable.OrderByDescending<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Collections.Generic.IComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.OrderByDescending(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Collections.Generic.IComparer(Of TKey))\n  name.vb: OrderByDescending(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey), IComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n    name: OrderByDescending<KeyValuePair<TKey, TValue>, TKey>\n    fullName: System.Linq.Enumerable.OrderByDescending<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n    name: OrderByDescending(Of KeyValuePair(Of TKey, TValue), TKey)\n    fullName: System.Linq.Enumerable.OrderByDescending(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.OrderByDescending<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>, IComparer<TKey>)\n  nameWithType.vb: Enumerable.OrderByDescending(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey), IComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Reverse``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n  name: Reverse<KeyValuePair<TKey, TValue>>()\n  fullName: System.Linq.Enumerable.Reverse<System.Collections.Generic.KeyValuePair<TKey, TValue>>()\n  fullname.vb: System.Linq.Enumerable.Reverse(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()\n  name.vb: Reverse(Of KeyValuePair(Of TKey, TValue))()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Reverse``1\n    name: Reverse<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Reverse<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Reverse``1\n    name: Reverse(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Reverse(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Reverse<KeyValuePair<TKey, TValue>>()\n  nameWithType.vb: Enumerable.Reverse(Of KeyValuePair(Of TKey, TValue))()\n  commentId: M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Select``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  name: Select<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, TResult>)\n  fullName: System.Linq.Enumerable.Select<System.Collections.Generic.KeyValuePair<TKey, TValue>, TResult>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TResult>)\n  fullname.vb: System.Linq.Enumerable.Select(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TResult)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TResult))\n  name.vb: Select(Of KeyValuePair(Of TKey, TValue), TResult)(Func(Of KeyValuePair(Of TKey, TValue), TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Select``2(System.Func{``0,``1})\n    name: Select<KeyValuePair<TKey, TValue>, TResult>\n    fullName: System.Linq.Enumerable.Select<System.Collections.Generic.KeyValuePair<TKey, TValue>, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Select``2(System.Func{``0,``1})\n    name: Select(Of KeyValuePair(Of TKey, TValue), TResult)\n    fullName: System.Linq.Enumerable.Select(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Select<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, TResult>)\n  nameWithType.vb: Enumerable.Select(Of KeyValuePair(Of TKey, TValue), TResult)(Func(Of KeyValuePair(Of TKey, TValue), TResult))\n  commentId: M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Select``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32,{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n  name: Select<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, Int32, TResult>)\n  fullName: System.Linq.Enumerable.Select<System.Collections.Generic.KeyValuePair<TKey, TValue>, TResult>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Int32, TResult>)\n  fullname.vb: System.Linq.Enumerable.Select(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TResult)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Int32, TResult))\n  name.vb: Select(Of KeyValuePair(Of TKey, TValue), TResult)(Func(Of KeyValuePair(Of TKey, TValue), Int32, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Select``2(System.Func{``0,System.Int32,``1})\n    name: Select<KeyValuePair<TKey, TValue>, TResult>\n    fullName: System.Linq.Enumerable.Select<System.Collections.Generic.KeyValuePair<TKey, TValue>, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Select``2(System.Func{``0,System.Int32,``1})\n    name: Select(Of KeyValuePair(Of TKey, TValue), TResult)\n    fullName: System.Linq.Enumerable.Select(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Select<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, Int32, TResult>)\n  nameWithType.vb: Enumerable.Select(Of KeyValuePair(Of TKey, TValue), TResult)(Func(Of KeyValuePair(Of TKey, TValue), Int32, TResult))\n  commentId: M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SelectMany``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Collections.Generic.IEnumerable{{TResult}}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n  name: SelectMany<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, IEnumerable<TResult>>)\n  fullName: System.Linq.Enumerable.SelectMany<System.Collections.Generic.KeyValuePair<TKey, TValue>, TResult>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Collections.Generic.IEnumerable<TResult>>)\n  fullname.vb: System.Linq.Enumerable.SelectMany(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TResult)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Collections.Generic.IEnumerable(Of TResult)))\n  name.vb: SelectMany(Of KeyValuePair(Of TKey, TValue), TResult)(Func(Of KeyValuePair(Of TKey, TValue), IEnumerable(Of TResult)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SelectMany``2(System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n    name: SelectMany<KeyValuePair<TKey, TValue>, TResult>\n    fullName: System.Linq.Enumerable.SelectMany<System.Collections.Generic.KeyValuePair<TKey, TValue>, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SelectMany``2(System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n    name: SelectMany(Of KeyValuePair(Of TKey, TValue), TResult)\n    fullName: System.Linq.Enumerable.SelectMany(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SelectMany<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, IEnumerable<TResult>>)\n  nameWithType.vb: Enumerable.SelectMany(Of KeyValuePair(Of TKey, TValue), TResult)(Func(Of KeyValuePair(Of TKey, TValue), IEnumerable(Of TResult)))\n  commentId: M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SelectMany``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32,System.Collections.Generic.IEnumerable{{TResult}}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n  name: SelectMany<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, Int32, IEnumerable<TResult>>)\n  fullName: System.Linq.Enumerable.SelectMany<System.Collections.Generic.KeyValuePair<TKey, TValue>, TResult>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Int32, System.Collections.Generic.IEnumerable<TResult>>)\n  fullname.vb: System.Linq.Enumerable.SelectMany(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TResult)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Int32, System.Collections.Generic.IEnumerable(Of TResult)))\n  name.vb: SelectMany(Of KeyValuePair(Of TKey, TValue), TResult)(Func(Of KeyValuePair(Of TKey, TValue), Int32, IEnumerable(Of TResult)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SelectMany``2(System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n    name: SelectMany<KeyValuePair<TKey, TValue>, TResult>\n    fullName: System.Linq.Enumerable.SelectMany<System.Collections.Generic.KeyValuePair<TKey, TValue>, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SelectMany``2(System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n    name: SelectMany(Of KeyValuePair(Of TKey, TValue), TResult)\n    fullName: System.Linq.Enumerable.SelectMany(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SelectMany<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, Int32, IEnumerable<TResult>>)\n  nameWithType.vb: Enumerable.SelectMany(Of KeyValuePair(Of TKey, TValue), TResult)(Func(Of KeyValuePair(Of TKey, TValue), Int32, IEnumerable(Of TResult)))\n  commentId: M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SelectMany``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Collections.Generic.IEnumerable{{TCollection}}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TCollection},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  name: SelectMany<KeyValuePair<TKey, TValue>, TCollection, TResult>(Func<KeyValuePair<TKey, TValue>, IEnumerable<TCollection>>, Func<KeyValuePair<TKey, TValue>, TCollection, TResult>)\n  fullName: System.Linq.Enumerable.SelectMany<System.Collections.Generic.KeyValuePair<TKey, TValue>, TCollection, TResult>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Collections.Generic.IEnumerable<TCollection>>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TCollection, TResult>)\n  fullname.vb: System.Linq.Enumerable.SelectMany(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TCollection, TResult)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Collections.Generic.IEnumerable(Of TCollection)), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TCollection, TResult))\n  name.vb: SelectMany(Of KeyValuePair(Of TKey, TValue), TCollection, TResult)(Func(Of KeyValuePair(Of TKey, TValue), IEnumerable(Of TCollection)), Func(Of KeyValuePair(Of TKey, TValue), TCollection, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SelectMany``3(System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n    name: SelectMany<KeyValuePair<TKey, TValue>, TCollection, TResult>\n    fullName: System.Linq.Enumerable.SelectMany<System.Collections.Generic.KeyValuePair<TKey, TValue>, TCollection, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TCollection\n    fullName: TCollection\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TCollection\n    fullName: TCollection\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SelectMany``3(System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n    name: SelectMany(Of KeyValuePair(Of TKey, TValue), TCollection, TResult)\n    fullName: System.Linq.Enumerable.SelectMany(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TCollection, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TCollection\n    fullName: TCollection\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TCollection\n    fullName: TCollection\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SelectMany<KeyValuePair<TKey, TValue>, TCollection, TResult>(Func<KeyValuePair<TKey, TValue>, IEnumerable<TCollection>>, Func<KeyValuePair<TKey, TValue>, TCollection, TResult>)\n  nameWithType.vb: Enumerable.SelectMany(Of KeyValuePair(Of TKey, TValue), TCollection, TResult)(Func(Of KeyValuePair(Of TKey, TValue), IEnumerable(Of TCollection)), Func(Of KeyValuePair(Of TKey, TValue), TCollection, TResult))\n  commentId: M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SelectMany``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32,System.Collections.Generic.IEnumerable{{TCollection}}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TCollection},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  name: SelectMany<KeyValuePair<TKey, TValue>, TCollection, TResult>(Func<KeyValuePair<TKey, TValue>, Int32, IEnumerable<TCollection>>, Func<KeyValuePair<TKey, TValue>, TCollection, TResult>)\n  fullName: System.Linq.Enumerable.SelectMany<System.Collections.Generic.KeyValuePair<TKey, TValue>, TCollection, TResult>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Int32, System.Collections.Generic.IEnumerable<TCollection>>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TCollection, TResult>)\n  fullname.vb: System.Linq.Enumerable.SelectMany(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TCollection, TResult)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Int32, System.Collections.Generic.IEnumerable(Of TCollection)), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TCollection, TResult))\n  name.vb: SelectMany(Of KeyValuePair(Of TKey, TValue), TCollection, TResult)(Func(Of KeyValuePair(Of TKey, TValue), Int32, IEnumerable(Of TCollection)), Func(Of KeyValuePair(Of TKey, TValue), TCollection, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SelectMany``3(System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n    name: SelectMany<KeyValuePair<TKey, TValue>, TCollection, TResult>\n    fullName: System.Linq.Enumerable.SelectMany<System.Collections.Generic.KeyValuePair<TKey, TValue>, TCollection, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TCollection\n    fullName: TCollection\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TCollection\n    fullName: TCollection\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SelectMany``3(System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n    name: SelectMany(Of KeyValuePair(Of TKey, TValue), TCollection, TResult)\n    fullName: System.Linq.Enumerable.SelectMany(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TCollection, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TCollection\n    fullName: TCollection\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TCollection\n    fullName: TCollection\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SelectMany<KeyValuePair<TKey, TValue>, TCollection, TResult>(Func<KeyValuePair<TKey, TValue>, Int32, IEnumerable<TCollection>>, Func<KeyValuePair<TKey, TValue>, TCollection, TResult>)\n  nameWithType.vb: Enumerable.SelectMany(Of KeyValuePair(Of TKey, TValue), TCollection, TResult)(Func(Of KeyValuePair(Of TKey, TValue), Int32, IEnumerable(Of TCollection)), Func(Of KeyValuePair(Of TKey, TValue), TCollection, TResult))\n  commentId: M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  name: SequenceEqual<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>)\n  fullName: System.Linq.Enumerable.SequenceEqual<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>)\n  fullname.vb: System.Linq.Enumerable.SequenceEqual(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)))\n  name.vb: SequenceEqual(Of KeyValuePair(Of TKey, TValue))(IEnumerable(Of KeyValuePair(Of TKey, TValue)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0})\n    name: SequenceEqual<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.SequenceEqual<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0})\n    name: SequenceEqual(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.SequenceEqual(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SequenceEqual<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>)\n  nameWithType.vb: Enumerable.SequenceEqual(Of KeyValuePair(Of TKey, TValue))(IEnumerable(Of KeyValuePair(Of TKey, TValue)))\n  commentId: M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}},System.Collections.Generic.IEqualityComparer{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  name: SequenceEqual<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>, IEqualityComparer<KeyValuePair<TKey, TValue>>)\n  fullName: System.Linq.Enumerable.SequenceEqual<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>, System.Collections.Generic.IEqualityComparer<System.Collections.Generic.KeyValuePair<TKey, TValue>>)\n  fullname.vb: System.Linq.Enumerable.SequenceEqual(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)), System.Collections.Generic.IEqualityComparer(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)))\n  name.vb: SequenceEqual(Of KeyValuePair(Of TKey, TValue))(IEnumerable(Of KeyValuePair(Of TKey, TValue)), IEqualityComparer(Of KeyValuePair(Of TKey, TValue)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: SequenceEqual<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.SequenceEqual<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: SequenceEqual(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.SequenceEqual(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SequenceEqual<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>, IEqualityComparer<KeyValuePair<TKey, TValue>>)\n  nameWithType.vb: Enumerable.SequenceEqual(Of KeyValuePair(Of TKey, TValue))(IEnumerable(Of KeyValuePair(Of TKey, TValue)), IEqualityComparer(Of KeyValuePair(Of TKey, TValue)))\n  commentId: M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Single``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n  name: Single<KeyValuePair<TKey, TValue>>()\n  fullName: System.Linq.Enumerable.Single<System.Collections.Generic.KeyValuePair<TKey, TValue>>()\n  fullname.vb: System.Linq.Enumerable.Single(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()\n  name.vb: Single(Of KeyValuePair(Of TKey, TValue))()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Single``1\n    name: Single<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Single<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Single``1\n    name: Single(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Single(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Single<KeyValuePair<TKey, TValue>>()\n  nameWithType.vb: Enumerable.Single(Of KeyValuePair(Of TKey, TValue))()\n  commentId: M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Single``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: Single<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  fullName: System.Linq.Enumerable.Single<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Single(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Boolean))\n  name.vb: Single(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Single``1(System.Func{``0,System.Boolean})\n    name: Single<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Single<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Single``1(System.Func{``0,System.Boolean})\n    name: Single(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Single(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Single<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  nameWithType.vb: Enumerable.Single(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  commentId: M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SingleOrDefault``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  name: SingleOrDefault<KeyValuePair<TKey, TValue>>()\n  fullName: System.Linq.Enumerable.SingleOrDefault<System.Collections.Generic.KeyValuePair<TKey, TValue>>()\n  fullname.vb: System.Linq.Enumerable.SingleOrDefault(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()\n  name.vb: SingleOrDefault(Of KeyValuePair(Of TKey, TValue))()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SingleOrDefault``1\n    name: SingleOrDefault<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.SingleOrDefault<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SingleOrDefault``1\n    name: SingleOrDefault(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.SingleOrDefault(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SingleOrDefault<KeyValuePair<TKey, TValue>>()\n  nameWithType.vb: Enumerable.SingleOrDefault(Of KeyValuePair(Of TKey, TValue))()\n  commentId: M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SingleOrDefault``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: SingleOrDefault<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  fullName: System.Linq.Enumerable.SingleOrDefault<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.SingleOrDefault(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Boolean))\n  name.vb: SingleOrDefault(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Func{``0,System.Boolean})\n    name: SingleOrDefault<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.SingleOrDefault<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Func{``0,System.Boolean})\n    name: SingleOrDefault(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.SingleOrDefault(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SingleOrDefault<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  nameWithType.vb: Enumerable.SingleOrDefault(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  commentId: M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Skip``1(System.Int32)\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  name: Skip<KeyValuePair<TKey, TValue>>(Int32)\n  fullName: System.Linq.Enumerable.Skip<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Int32)\n  fullname.vb: System.Linq.Enumerable.Skip(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Int32)\n  name.vb: Skip(Of KeyValuePair(Of TKey, TValue))(Int32)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Skip``1(System.Int32)\n    name: Skip<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Skip<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Skip``1(System.Int32)\n    name: Skip(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Skip(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Skip<KeyValuePair<TKey, TValue>>(Int32)\n  nameWithType.vb: Enumerable.Skip(Of KeyValuePair(Of TKey, TValue))(Int32)\n  commentId: M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SkipWhile``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: SkipWhile<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  fullName: System.Linq.Enumerable.SkipWhile<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.SkipWhile(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Boolean))\n  name.vb: SkipWhile(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SkipWhile``1(System.Func{``0,System.Boolean})\n    name: SkipWhile<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.SkipWhile<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SkipWhile``1(System.Func{``0,System.Boolean})\n    name: SkipWhile(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.SkipWhile(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SkipWhile<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  nameWithType.vb: Enumerable.SkipWhile(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  commentId: M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SkipWhile``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  name: SkipWhile<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32, Boolean>)\n  fullName: System.Linq.Enumerable.SkipWhile<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Int32, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.SkipWhile(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Int32, System.Boolean))\n  name.vb: SkipWhile(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int32, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SkipWhile``1(System.Func{``0,System.Int32,System.Boolean})\n    name: SkipWhile<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.SkipWhile<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SkipWhile``1(System.Func{``0,System.Int32,System.Boolean})\n    name: SkipWhile(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.SkipWhile(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SkipWhile<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32, Boolean>)\n  nameWithType.vb: Enumerable.SkipWhile(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int32, Boolean))\n  commentId: M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Decimal})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  name: Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Decimal>)\n  fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Decimal>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Decimal))\n  name.vb: Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Decimal))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Decimal})\n    name: Sum<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Decimal})\n    name: Sum(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Decimal>)\n  nameWithType.vb: Enumerable.Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Decimal))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Double})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  name: Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Double>)\n  fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Double>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Double))\n  name.vb: Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Double))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Double})\n    name: Sum<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Double})\n    name: Sum(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Double>)\n  nameWithType.vb: Enumerable.Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Double))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  name: Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32>)\n  fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Int32>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Int32))\n  name.vb: Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int32))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Int32})\n    name: Sum<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Int32})\n    name: Sum(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32>)\n  nameWithType.vb: Enumerable.Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int32))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int64})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  name: Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int64>)\n  fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Int64>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Int64))\n  name.vb: Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int64))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Int64})\n    name: Sum<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Int64})\n    name: Sum(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int64>)\n  nameWithType.vb: Enumerable.Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int64))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  name: Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Decimal>>)\n  fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Decimal>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Decimal)))\n  name.vb: Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Decimal)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Decimal}})\n    name: Sum<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Decimal}})\n    name: Sum(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Decimal>>)\n  nameWithType.vb: Enumerable.Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Decimal)))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  name: Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Double>>)\n  fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Double>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Double)))\n  name.vb: Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Double)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Double}})\n    name: Sum<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Double}})\n    name: Sum(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Double>>)\n  nameWithType.vb: Enumerable.Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Double)))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  name: Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int32>>)\n  fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Int32>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Int32)))\n  name.vb: Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Int32)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Int32}})\n    name: Sum<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Int32}})\n    name: Sum(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int32>>)\n  nameWithType.vb: Enumerable.Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Int32)))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  name: Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int64>>)\n  fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Int64>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Int64)))\n  name.vb: Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Int64)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Int64}})\n    name: Sum<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Int64}})\n    name: Sum(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int64>>)\n  nameWithType.vb: Enumerable.Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Int64)))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  name: Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Single>>)\n  fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Single>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Single)))\n  name.vb: Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Single)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Single}})\n    name: Sum<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Single}})\n    name: Sum(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Single>>)\n  nameWithType.vb: Enumerable.Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Single)))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Single})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  name: Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Single>)\n  fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Single>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Single))\n  name.vb: Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Single))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Single})\n    name: Sum<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Single})\n    name: Sum(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Single>)\n  nameWithType.vb: Enumerable.Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Single))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Take``1(System.Int32)\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  name: Take<KeyValuePair<TKey, TValue>>(Int32)\n  fullName: System.Linq.Enumerable.Take<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Int32)\n  fullname.vb: System.Linq.Enumerable.Take(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Int32)\n  name.vb: Take(Of KeyValuePair(Of TKey, TValue))(Int32)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Take``1(System.Int32)\n    name: Take<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Take<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Take``1(System.Int32)\n    name: Take(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Take(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Take<KeyValuePair<TKey, TValue>>(Int32)\n  nameWithType.vb: Enumerable.Take(Of KeyValuePair(Of TKey, TValue))(Int32)\n  commentId: M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.TakeWhile``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: TakeWhile<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  fullName: System.Linq.Enumerable.TakeWhile<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.TakeWhile(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Boolean))\n  name.vb: TakeWhile(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.TakeWhile``1(System.Func{``0,System.Boolean})\n    name: TakeWhile<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.TakeWhile<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.TakeWhile``1(System.Func{``0,System.Boolean})\n    name: TakeWhile(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.TakeWhile(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.TakeWhile<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  nameWithType.vb: Enumerable.TakeWhile(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  commentId: M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.TakeWhile``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  name: TakeWhile<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32, Boolean>)\n  fullName: System.Linq.Enumerable.TakeWhile<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Int32, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.TakeWhile(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Int32, System.Boolean))\n  name.vb: TakeWhile(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int32, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.TakeWhile``1(System.Func{``0,System.Int32,System.Boolean})\n    name: TakeWhile<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.TakeWhile<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.TakeWhile``1(System.Func{``0,System.Int32,System.Boolean})\n    name: TakeWhile(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.TakeWhile(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.TakeWhile<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32, Boolean>)\n  nameWithType.vb: Enumerable.TakeWhile(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int32, Boolean))\n  commentId: M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToArray``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n  name: ToArray<KeyValuePair<TKey, TValue>>()\n  fullName: System.Linq.Enumerable.ToArray<System.Collections.Generic.KeyValuePair<TKey, TValue>>()\n  fullname.vb: System.Linq.Enumerable.ToArray(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()\n  name.vb: ToArray(Of KeyValuePair(Of TKey, TValue))()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToArray``1\n    name: ToArray<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.ToArray<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToArray``1\n    name: ToArray(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.ToArray(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToArray<KeyValuePair<TKey, TValue>>()\n  nameWithType.vb: Enumerable.ToArray(Of KeyValuePair(Of TKey, TValue))()\n  commentId: M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToDictionary``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  name: ToDictionary<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>)\n  fullName: System.Linq.Enumerable.ToDictionary<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>)\n  fullname.vb: System.Linq.Enumerable.ToDictionary(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey))\n  name.vb: ToDictionary(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToDictionary``2(System.Func{``0,``1})\n    name: ToDictionary<KeyValuePair<TKey, TValue>, TKey>\n    fullName: System.Linq.Enumerable.ToDictionary<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToDictionary``2(System.Func{``0,``1})\n    name: ToDictionary(Of KeyValuePair(Of TKey, TValue), TKey)\n    fullName: System.Linq.Enumerable.ToDictionary(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToDictionary<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>)\n  nameWithType.vb: Enumerable.ToDictionary(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey))\n  commentId: M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToDictionary``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  name: ToDictionary<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.ToDictionary<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.ToDictionary(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: ToDictionary(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToDictionary``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToDictionary<KeyValuePair<TKey, TValue>, TKey>\n    fullName: System.Linq.Enumerable.ToDictionary<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToDictionary``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToDictionary(Of KeyValuePair(Of TKey, TValue), TKey)\n    fullName: System.Linq.Enumerable.ToDictionary(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToDictionary<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.ToDictionary(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToDictionary``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TElement}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  name: ToDictionary<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>)\n  fullName: System.Linq.Enumerable.ToDictionary<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TElement>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TElement>)\n  fullname.vb: System.Linq.Enumerable.ToDictionary(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TElement)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TElement))\n  name.vb: ToDictionary(Of KeyValuePair(Of TKey, TValue), TKey, TElement)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of KeyValuePair(Of TKey, TValue), TElement))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToDictionary``3(System.Func{``0,``1},System.Func{``0,``2})\n    name: ToDictionary<KeyValuePair<TKey, TValue>, TKey, TElement>\n    fullName: System.Linq.Enumerable.ToDictionary<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToDictionary``3(System.Func{``0,``1},System.Func{``0,``2})\n    name: ToDictionary(Of KeyValuePair(Of TKey, TValue), TKey, TElement)\n    fullName: System.Linq.Enumerable.ToDictionary(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToDictionary<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>)\n  nameWithType.vb: Enumerable.ToDictionary(Of KeyValuePair(Of TKey, TValue), TKey, TElement)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of KeyValuePair(Of TKey, TValue), TElement))\n  commentId: M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToDictionary``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  name: ToDictionary<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.ToDictionary<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TElement>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.ToDictionary(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TElement)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TElement), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: ToDictionary(Of KeyValuePair(Of TKey, TValue), TKey, TElement)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of KeyValuePair(Of TKey, TValue), TElement), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToDictionary``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToDictionary<KeyValuePair<TKey, TValue>, TKey, TElement>\n    fullName: System.Linq.Enumerable.ToDictionary<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToDictionary``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToDictionary(Of KeyValuePair(Of TKey, TValue), TKey, TElement)\n    fullName: System.Linq.Enumerable.ToDictionary(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToDictionary<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.ToDictionary(Of KeyValuePair(Of TKey, TValue), TKey, TElement)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of KeyValuePair(Of TKey, TValue), TElement), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToList``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n  name: ToList<KeyValuePair<TKey, TValue>>()\n  fullName: System.Linq.Enumerable.ToList<System.Collections.Generic.KeyValuePair<TKey, TValue>>()\n  fullname.vb: System.Linq.Enumerable.ToList(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()\n  name.vb: ToList(Of KeyValuePair(Of TKey, TValue))()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToList``1\n    name: ToList<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.ToList<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToList``1\n    name: ToList(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.ToList(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToList<KeyValuePair<TKey, TValue>>()\n  nameWithType.vb: Enumerable.ToList(Of KeyValuePair(Of TKey, TValue))()\n  commentId: M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToLookup``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  name: ToLookup<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>)\n  fullName: System.Linq.Enumerable.ToLookup<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>)\n  fullname.vb: System.Linq.Enumerable.ToLookup(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey))\n  name.vb: ToLookup(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToLookup``2(System.Func{``0,``1})\n    name: ToLookup<KeyValuePair<TKey, TValue>, TKey>\n    fullName: System.Linq.Enumerable.ToLookup<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToLookup``2(System.Func{``0,``1})\n    name: ToLookup(Of KeyValuePair(Of TKey, TValue), TKey)\n    fullName: System.Linq.Enumerable.ToLookup(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToLookup<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>)\n  nameWithType.vb: Enumerable.ToLookup(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey))\n  commentId: M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToLookup``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  name: ToLookup<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.ToLookup<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.ToLookup(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: ToLookup(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToLookup``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToLookup<KeyValuePair<TKey, TValue>, TKey>\n    fullName: System.Linq.Enumerable.ToLookup<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToLookup``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToLookup(Of KeyValuePair(Of TKey, TValue), TKey)\n    fullName: System.Linq.Enumerable.ToLookup(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToLookup<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.ToLookup(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToLookup``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TElement}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  name: ToLookup<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>)\n  fullName: System.Linq.Enumerable.ToLookup<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TElement>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TElement>)\n  fullname.vb: System.Linq.Enumerable.ToLookup(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TElement)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TElement))\n  name.vb: ToLookup(Of KeyValuePair(Of TKey, TValue), TKey, TElement)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of KeyValuePair(Of TKey, TValue), TElement))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToLookup``3(System.Func{``0,``1},System.Func{``0,``2})\n    name: ToLookup<KeyValuePair<TKey, TValue>, TKey, TElement>\n    fullName: System.Linq.Enumerable.ToLookup<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToLookup``3(System.Func{``0,``1},System.Func{``0,``2})\n    name: ToLookup(Of KeyValuePair(Of TKey, TValue), TKey, TElement)\n    fullName: System.Linq.Enumerable.ToLookup(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToLookup<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>)\n  nameWithType.vb: Enumerable.ToLookup(Of KeyValuePair(Of TKey, TValue), TKey, TElement)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of KeyValuePair(Of TKey, TValue), TElement))\n  commentId: M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToLookup``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  name: ToLookup<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.ToLookup<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TElement>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.ToLookup(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TElement)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TElement), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: ToLookup(Of KeyValuePair(Of TKey, TValue), TKey, TElement)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of KeyValuePair(Of TKey, TValue), TElement), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToLookup``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToLookup<KeyValuePair<TKey, TValue>, TKey, TElement>\n    fullName: System.Linq.Enumerable.ToLookup<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToLookup``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToLookup(Of KeyValuePair(Of TKey, TValue), TKey, TElement)\n    fullName: System.Linq.Enumerable.ToLookup(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToLookup<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.ToLookup(Of KeyValuePair(Of TKey, TValue), TKey, TElement)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of KeyValuePair(Of TKey, TValue), TElement), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  name: Union<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>)\n  fullName: System.Linq.Enumerable.Union<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>)\n  fullname.vb: System.Linq.Enumerable.Union(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)))\n  name.vb: Union(Of KeyValuePair(Of TKey, TValue))(IEnumerable(Of KeyValuePair(Of TKey, TValue)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0})\n    name: Union<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Union<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0})\n    name: Union(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Union(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Union<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>)\n  nameWithType.vb: Enumerable.Union(Of KeyValuePair(Of TKey, TValue))(IEnumerable(Of KeyValuePair(Of TKey, TValue)))\n  commentId: M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}},System.Collections.Generic.IEqualityComparer{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  name: Union<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>, IEqualityComparer<KeyValuePair<TKey, TValue>>)\n  fullName: System.Linq.Enumerable.Union<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>, System.Collections.Generic.IEqualityComparer<System.Collections.Generic.KeyValuePair<TKey, TValue>>)\n  fullname.vb: System.Linq.Enumerable.Union(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)), System.Collections.Generic.IEqualityComparer(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)))\n  name.vb: Union(Of KeyValuePair(Of TKey, TValue))(IEnumerable(Of KeyValuePair(Of TKey, TValue)), IEqualityComparer(Of KeyValuePair(Of TKey, TValue)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Union<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Union<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Union(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Union(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Union<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>, IEqualityComparer<KeyValuePair<TKey, TValue>>)\n  nameWithType.vb: Enumerable.Union(Of KeyValuePair(Of TKey, TValue))(IEnumerable(Of KeyValuePair(Of TKey, TValue)), IEqualityComparer(Of KeyValuePair(Of TKey, TValue)))\n  commentId: M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Where``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: Where<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  fullName: System.Linq.Enumerable.Where<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Where(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Boolean))\n  name.vb: Where(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Where``1(System.Func{``0,System.Boolean})\n    name: Where<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Where<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Where``1(System.Func{``0,System.Boolean})\n    name: Where(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Where(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Where<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  nameWithType.vb: Enumerable.Where(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  commentId: M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Where``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  name: Where<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32, Boolean>)\n  fullName: System.Linq.Enumerable.Where<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Int32, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Where(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Int32, System.Boolean))\n  name.vb: Where(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int32, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Where``1(System.Func{``0,System.Int32,System.Boolean})\n    name: Where<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Where<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Where``1(System.Func{``0,System.Int32,System.Boolean})\n    name: Where(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Where(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Where<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32, Boolean>)\n  nameWithType.vb: Enumerable.Where(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int32, Boolean))\n  commentId: M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{{TSecond}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TSecond},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n  name: Zip<KeyValuePair<TKey, TValue>, TSecond, TResult>(IEnumerable<TSecond>, Func<KeyValuePair<TKey, TValue>, TSecond, TResult>)\n  fullName: System.Linq.Enumerable.Zip<System.Collections.Generic.KeyValuePair<TKey, TValue>, TSecond, TResult>(System.Collections.Generic.IEnumerable<TSecond>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TSecond, TResult>)\n  fullname.vb: System.Linq.Enumerable.Zip(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TSecond, TResult)(System.Collections.Generic.IEnumerable(Of TSecond), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TSecond, TResult))\n  name.vb: Zip(Of KeyValuePair(Of TKey, TValue), TSecond, TResult)(IEnumerable(Of TSecond), Func(Of KeyValuePair(Of TKey, TValue), TSecond, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n    name: Zip<KeyValuePair<TKey, TValue>, TSecond, TResult>\n    fullName: System.Linq.Enumerable.Zip<System.Collections.Generic.KeyValuePair<TKey, TValue>, TSecond, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSecond\n    fullName: TSecond\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TSecond\n    fullName: TSecond\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n    name: Zip(Of KeyValuePair(Of TKey, TValue), TSecond, TResult)\n    fullName: System.Linq.Enumerable.Zip(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TSecond, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSecond\n    fullName: TSecond\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TSecond\n    fullName: TSecond\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Zip<KeyValuePair<TKey, TValue>, TSecond, TResult>(IEnumerable<TSecond>, Func<KeyValuePair<TKey, TValue>, TSecond, TResult>)\n  nameWithType.vb: Enumerable.Zip(Of KeyValuePair(Of TKey, TValue), TSecond, TResult)(IEnumerable(Of TSecond), Func(Of KeyValuePair(Of TKey, TValue), TSecond, TResult))\n  commentId: M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Collections.Generic.IDictionary`2\n  isExternal: false\n  name: IDictionary<TKey, TValue>\n  fullName: System.Collections.Generic.IDictionary<TKey, TValue>\n  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)\n  name.vb: IDictionary(Of TKey, TValue)\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    fullName: System.Collections.Generic.IDictionary\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    fullName: System.Collections.Generic.IDictionary\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  nameWithType: IDictionary<TKey, TValue>\n  nameWithType.vb: IDictionary(Of TKey, TValue)\n  commentId: T:System.Collections.Generic.IDictionary`2\n- uid: System.Collections.Generic.ICollection`1\n  isExternal: false\n  name: ICollection<T>\n  fullName: System.Collections.Generic.ICollection<T>\n  fullname.vb: System.Collections.Generic.ICollection(Of T)\n  name.vb: ICollection(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    fullName: System.Collections.Generic.ICollection\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    fullName: System.Collections.Generic.ICollection\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: ICollection<T>\n  nameWithType.vb: ICollection(Of T)\n  commentId: T:System.Collections.Generic.ICollection`1\n- uid: System.Collections.Generic.IReadOnlyDictionary`2\n  isExternal: false\n  name: IReadOnlyDictionary<TKey, TValue>\n  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>\n  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue)\n  name.vb: IReadOnlyDictionary(Of TKey, TValue)\n  spec.csharp:\n  - uid: System.Collections.Generic.IReadOnlyDictionary`2\n    name: IReadOnlyDictionary\n    fullName: System.Collections.Generic.IReadOnlyDictionary\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IReadOnlyDictionary`2\n    name: IReadOnlyDictionary\n    fullName: System.Collections.Generic.IReadOnlyDictionary\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  nameWithType: IReadOnlyDictionary<TKey, TValue>\n  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue)\n  commentId: T:System.Collections.Generic.IReadOnlyDictionary`2\n- uid: System.Collections.Generic.IReadOnlyCollection`1\n  isExternal: false\n  name: IReadOnlyCollection<T>\n  fullName: System.Collections.Generic.IReadOnlyCollection<T>\n  fullname.vb: System.Collections.Generic.IReadOnlyCollection(Of T)\n  name.vb: IReadOnlyCollection(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.IReadOnlyCollection`1\n    name: IReadOnlyCollection\n    fullName: System.Collections.Generic.IReadOnlyCollection\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IReadOnlyCollection`1\n    name: IReadOnlyCollection\n    fullName: System.Collections.Generic.IReadOnlyCollection\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: IReadOnlyCollection<T>\n  nameWithType.vb: IReadOnlyCollection(Of T)\n  commentId: T:System.Collections.Generic.IReadOnlyCollection`1\n- uid: System.Collections.Generic.IEnumerable`1\n  isExternal: false\n  name: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n  fullname.vb: System.Collections.Generic.IEnumerable(Of T)\n  name.vb: IEnumerable(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: IEnumerable<T>\n  nameWithType.vb: IEnumerable(Of T)\n  commentId: T:System.Collections.Generic.IEnumerable`1\n- uid: System.Collections\n  isExternal: false\n  name: System.Collections\n  fullName: System.Collections\n  nameWithType: System.Collections\n  commentId: N:System.Collections\n- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  isExternal: true\n  name: AsQueryable(IEnumerable)\n  fullName: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Queryable.AsQueryable(IEnumerable)\n  commentId: M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n- uid: System.Linq.Queryable\n  parent: System.Linq\n  isExternal: false\n  name: Queryable\n  fullName: System.Linq.Queryable\n  nameWithType: Queryable\n  commentId: T:System.Linq.Queryable\n- uid: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: AsQueryable<TElement>(IEnumerable<TElement>)\n  fullName: System.Linq.Queryable.AsQueryable<TElement>(System.Collections.Generic.IEnumerable<TElement>)\n  fullname.vb: System.Linq.Queryable.AsQueryable(Of TElement)(System.Collections.Generic.IEnumerable(Of TElement))\n  name.vb: AsQueryable(Of TElement)(IEnumerable(Of TElement))\n  spec.csharp:\n  - uid: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n    name: AsQueryable<TElement>\n    fullName: System.Linq.Queryable.AsQueryable<TElement>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n    name: AsQueryable(Of TElement)\n    fullName: System.Linq.Queryable.AsQueryable(Of TElement)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Queryable.AsQueryable<TElement>(IEnumerable<TElement>)\n  nameWithType.vb: Queryable.AsQueryable(Of TElement)(IEnumerable(Of TElement))\n  commentId: M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  isExternal: true\n  name: AsParallel(IEnumerable)\n  fullName: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)\n  commentId: M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n- uid: System.Linq.ParallelEnumerable\n  parent: System.Linq\n  isExternal: false\n  name: ParallelEnumerable\n  fullName: System.Linq.ParallelEnumerable\n  nameWithType: ParallelEnumerable\n  commentId: T:System.Linq.ParallelEnumerable\n- uid: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: AsParallel<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.ParallelEnumerable.AsParallel<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.ParallelEnumerable.AsParallel(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: AsParallel(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n    name: AsParallel<TSource>\n    fullName: System.Linq.ParallelEnumerable.AsParallel<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n    name: AsParallel(Of TSource)\n    fullName: System.Linq.ParallelEnumerable.AsParallel(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: ParallelEnumerable.AsParallel<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: ParallelEnumerable.AsParallel(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n  isExternal: true\n  name: Aggregate<TSource>(IEnumerable<TSource>, Func<TSource, TSource, TSource>)\n  fullName: System.Linq.Enumerable.Aggregate<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TSource>)\n  fullname.vb: System.Linq.Enumerable.Aggregate(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TSource, TSource))\n  name.vb: Aggregate(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, TSource, TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n    name: Aggregate<TSource>\n    fullName: System.Linq.Enumerable.Aggregate<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n    name: Aggregate(Of TSource)\n    fullName: System.Linq.Enumerable.Aggregate(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Aggregate<TSource>(IEnumerable<TSource>, Func<TSource, TSource, TSource>)\n  nameWithType.vb: Enumerable.Aggregate(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, TSource, TSource))\n  commentId: M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n- uid: System.Linq.Enumerable\n  parent: System.Linq\n  isExternal: false\n  name: Enumerable\n  fullName: System.Linq.Enumerable\n  nameWithType: Enumerable\n  commentId: T:System.Linq.Enumerable\n- uid: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n  isExternal: true\n  name: Aggregate<TSource, TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>)\n  fullName: System.Linq.Enumerable.Aggregate<TSource, TAccumulate>(System.Collections.Generic.IEnumerable<TSource>, TAccumulate, System.Func<TAccumulate, TSource, TAccumulate>)\n  fullname.vb: System.Linq.Enumerable.Aggregate(Of TSource, TAccumulate)(System.Collections.Generic.IEnumerable(Of TSource), TAccumulate, System.Func(Of TAccumulate, TSource, TAccumulate))\n  name.vb: Aggregate(Of TSource, TAccumulate)(IEnumerable(Of TSource), TAccumulate, Func(Of TAccumulate, TSource, TAccumulate))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n    name: Aggregate<TSource, TAccumulate>\n    fullName: System.Linq.Enumerable.Aggregate<TSource, TAccumulate>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n    name: Aggregate(Of TSource, TAccumulate)\n    fullName: System.Linq.Enumerable.Aggregate(Of TSource, TAccumulate)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Aggregate<TSource, TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>)\n  nameWithType.vb: Enumerable.Aggregate(Of TSource, TAccumulate)(IEnumerable(Of TSource), TAccumulate, Func(Of TAccumulate, TSource, TAccumulate))\n  commentId: M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n- uid: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n  isExternal: true\n  name: Aggregate<TSource, TAccumulate, TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>, Func<TAccumulate, TResult>)\n  fullName: System.Linq.Enumerable.Aggregate<TSource, TAccumulate, TResult>(System.Collections.Generic.IEnumerable<TSource>, TAccumulate, System.Func<TAccumulate, TSource, TAccumulate>, System.Func<TAccumulate, TResult>)\n  fullname.vb: System.Linq.Enumerable.Aggregate(Of TSource, TAccumulate, TResult)(System.Collections.Generic.IEnumerable(Of TSource), TAccumulate, System.Func(Of TAccumulate, TSource, TAccumulate), System.Func(Of TAccumulate, TResult))\n  name.vb: Aggregate(Of TSource, TAccumulate, TResult)(IEnumerable(Of TSource), TAccumulate, Func(Of TAccumulate, TSource, TAccumulate), Func(Of TAccumulate, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n    name: Aggregate<TSource, TAccumulate, TResult>\n    fullName: System.Linq.Enumerable.Aggregate<TSource, TAccumulate, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n    name: Aggregate(Of TSource, TAccumulate, TResult)\n    fullName: System.Linq.Enumerable.Aggregate(Of TSource, TAccumulate, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Aggregate<TSource, TAccumulate, TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>, Func<TAccumulate, TResult>)\n  nameWithType.vb: Enumerable.Aggregate(Of TSource, TAccumulate, TResult)(IEnumerable(Of TSource), TAccumulate, Func(Of TAccumulate, TSource, TAccumulate), Func(Of TAccumulate, TResult))\n  commentId: M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n- uid: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: All<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.All<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.All(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: All(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: All<TSource>\n    fullName: System.Linq.Enumerable.All<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: All(Of TSource)\n    fullName: System.Linq.Enumerable.All(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.All<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.All(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  commentId: M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Any<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Any<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Any(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Any(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n    name: Any<TSource>\n    fullName: System.Linq.Enumerable.Any<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n    name: Any(Of TSource)\n    fullName: System.Linq.Enumerable.Any(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Any<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Any(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: Any<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.Any<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Any(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: Any(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Any<TSource>\n    fullName: System.Linq.Enumerable.Any<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Any(Of TSource)\n    fullName: System.Linq.Enumerable.Any(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Any<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.Any(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  commentId: M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: AsEnumerable<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.AsEnumerable<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.AsEnumerable(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: AsEnumerable(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n    name: AsEnumerable<TSource>\n    fullName: System.Linq.Enumerable.AsEnumerable<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n    name: AsEnumerable(Of TSource)\n    fullName: System.Linq.Enumerable.AsEnumerable(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.AsEnumerable<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.AsEnumerable(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Decimal>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Decimal))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Double>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Double>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Double))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Double>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int64>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int64))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Decimal>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Decimal)))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Double>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Double)))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int32>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int32)))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int64>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int64)))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Single>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Single)))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Single>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Single>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Single))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Single>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  isExternal: true\n  name: Cast<TResult>(IEnumerable)\n  fullName: System.Linq.Enumerable.Cast<TResult>(System.Collections.IEnumerable)\n  fullname.vb: System.Linq.Enumerable.Cast(Of TResult)(System.Collections.IEnumerable)\n  name.vb: Cast(Of TResult)(IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n    name: Cast<TResult>\n    fullName: System.Linq.Enumerable.Cast<TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n    name: Cast(Of TResult)\n    fullName: System.Linq.Enumerable.Cast(Of TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Cast<TResult>(IEnumerable)\n  nameWithType.vb: Enumerable.Cast(Of TResult)(IEnumerable)\n  commentId: M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n- uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Concat(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Concat(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: Concat<TSource>\n    fullName: System.Linq.Enumerable.Concat<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: Concat(Of TSource)\n    fullName: System.Linq.Enumerable.Concat(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Concat(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n  isExternal: true\n  name: Append<TSource>(IEnumerable<TSource>, TSource)\n  fullName: System.Linq.Enumerable.Append<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)\n  fullname.vb: System.Linq.Enumerable.Append(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), TSource)\n  name.vb: Append(Of TSource)(IEnumerable(Of TSource), TSource)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n    name: Append<TSource>\n    fullName: System.Linq.Enumerable.Append<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n    name: Append(Of TSource)\n    fullName: System.Linq.Enumerable.Append(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Append<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType.vb: Enumerable.Append(Of TSource)(IEnumerable(Of TSource), TSource)\n  commentId: M:System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n- uid: System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n  isExternal: true\n  name: Prepend<TSource>(IEnumerable<TSource>, TSource)\n  fullName: System.Linq.Enumerable.Prepend<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)\n  fullname.vb: System.Linq.Enumerable.Prepend(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), TSource)\n  name.vb: Prepend(Of TSource)(IEnumerable(Of TSource), TSource)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n    name: Prepend<TSource>\n    fullName: System.Linq.Enumerable.Prepend<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n    name: Prepend(Of TSource)\n    fullName: System.Linq.Enumerable.Prepend(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Prepend<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType.vb: Enumerable.Prepend(Of TSource)(IEnumerable(Of TSource), TSource)\n  commentId: M:System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n- uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n  isExternal: true\n  name: Contains<TSource>(IEnumerable<TSource>, TSource)\n  fullName: System.Linq.Enumerable.Contains<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)\n  fullname.vb: System.Linq.Enumerable.Contains(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), TSource)\n  name.vb: Contains(Of TSource)(IEnumerable(Of TSource), TSource)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n    name: Contains<TSource>\n    fullName: System.Linq.Enumerable.Contains<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n    name: Contains(Of TSource)\n    fullName: System.Linq.Enumerable.Contains(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType.vb: Enumerable.Contains(Of TSource)(IEnumerable(Of TSource), TSource)\n  commentId: M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n- uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n  isExternal: true\n  name: Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)\n  fullName: System.Linq.Enumerable.Contains<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)\n  fullname.vb: System.Linq.Enumerable.Contains(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), TSource, System.Collections.Generic.IEqualityComparer(Of TSource))\n  name.vb: Contains(Of TSource)(IEnumerable(Of TSource), TSource, IEqualityComparer(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n    name: Contains<TSource>\n    fullName: System.Linq.Enumerable.Contains<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n    name: Contains(Of TSource)\n    fullName: System.Linq.Enumerable.Contains(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)\n  nameWithType.vb: Enumerable.Contains(Of TSource)(IEnumerable(Of TSource), TSource, IEqualityComparer(Of TSource))\n  commentId: M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n- uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Count<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Count<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Count(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Count(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n    name: Count<TSource>\n    fullName: System.Linq.Enumerable.Count<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n    name: Count(Of TSource)\n    fullName: System.Linq.Enumerable.Count(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Count<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Count(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: Count<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.Count<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Count(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: Count(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Count<TSource>\n    fullName: System.Linq.Enumerable.Count<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Count(Of TSource)\n    fullName: System.Linq.Enumerable.Count(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Count<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.Count(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  commentId: M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: DefaultIfEmpty<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.DefaultIfEmpty<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.DefaultIfEmpty(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: DefaultIfEmpty(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n    name: DefaultIfEmpty<TSource>\n    fullName: System.Linq.Enumerable.DefaultIfEmpty<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n    name: DefaultIfEmpty(Of TSource)\n    fullName: System.Linq.Enumerable.DefaultIfEmpty(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.DefaultIfEmpty(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n  isExternal: true\n  name: DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)\n  fullName: System.Linq.Enumerable.DefaultIfEmpty<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)\n  fullname.vb: System.Linq.Enumerable.DefaultIfEmpty(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), TSource)\n  name.vb: DefaultIfEmpty(Of TSource)(IEnumerable(Of TSource), TSource)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n    name: DefaultIfEmpty<TSource>\n    fullName: System.Linq.Enumerable.DefaultIfEmpty<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n    name: DefaultIfEmpty(Of TSource)\n    fullName: System.Linq.Enumerable.DefaultIfEmpty(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType.vb: Enumerable.DefaultIfEmpty(Of TSource)(IEnumerable(Of TSource), TSource)\n  commentId: M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n- uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Distinct<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Distinct<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Distinct(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Distinct(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n    name: Distinct<TSource>\n    fullName: System.Linq.Enumerable.Distinct<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n    name: Distinct(Of TSource)\n    fullName: System.Linq.Enumerable.Distinct(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Distinct<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Distinct(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  isExternal: true\n  name: Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: System.Linq.Enumerable.Distinct<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)\n  fullname.vb: System.Linq.Enumerable.Distinct(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))\n  name.vb: Distinct(Of TSource)(IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Distinct<TSource>\n    fullName: System.Linq.Enumerable.Distinct<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Distinct(Of TSource)\n    fullName: System.Linq.Enumerable.Distinct(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType.vb: Enumerable.Distinct(Of TSource)(IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n  commentId: M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n- uid: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  isExternal: true\n  name: ElementAt<TSource>(IEnumerable<TSource>, Int32)\n  fullName: System.Linq.Enumerable.ElementAt<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Int32)\n  fullname.vb: System.Linq.Enumerable.ElementAt(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Int32)\n  name.vb: ElementAt(Of TSource)(IEnumerable(Of TSource), Int32)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n    name: ElementAt<TSource>\n    fullName: System.Linq.Enumerable.ElementAt<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n    name: ElementAt(Of TSource)\n    fullName: System.Linq.Enumerable.ElementAt(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ElementAt<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType.vb: Enumerable.ElementAt(Of TSource)(IEnumerable(Of TSource), Int32)\n  commentId: M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n- uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  isExternal: true\n  name: ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)\n  fullName: System.Linq.Enumerable.ElementAtOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Int32)\n  fullname.vb: System.Linq.Enumerable.ElementAtOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Int32)\n  name.vb: ElementAtOrDefault(Of TSource)(IEnumerable(Of TSource), Int32)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n    name: ElementAtOrDefault<TSource>\n    fullName: System.Linq.Enumerable.ElementAtOrDefault<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n    name: ElementAtOrDefault(Of TSource)\n    fullName: System.Linq.Enumerable.ElementAtOrDefault(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType.vb: Enumerable.ElementAtOrDefault(Of TSource)(IEnumerable(Of TSource), Int32)\n  commentId: M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n- uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Except<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Except(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Except(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: Except<TSource>\n    fullName: System.Linq.Enumerable.Except<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: Except(Of TSource)\n    fullName: System.Linq.Enumerable.Except(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Except(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  isExternal: true\n  name: Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: System.Linq.Enumerable.Except<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)\n  fullname.vb: System.Linq.Enumerable.Except(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))\n  name.vb: Except(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Except<TSource>\n    fullName: System.Linq.Enumerable.Except<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Except(Of TSource)\n    fullName: System.Linq.Enumerable.Except(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType.vb: Enumerable.Except(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n  commentId: M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n- uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: First<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.First<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.First(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: First(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n    name: First<TSource>\n    fullName: System.Linq.Enumerable.First<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n    name: First(Of TSource)\n    fullName: System.Linq.Enumerable.First(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.First<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.First(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: First<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.First<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.First(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: First(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: First<TSource>\n    fullName: System.Linq.Enumerable.First<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: First(Of TSource)\n    fullName: System.Linq.Enumerable.First(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.First<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.First(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  commentId: M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: FirstOrDefault<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.FirstOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.FirstOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: FirstOrDefault(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n    name: FirstOrDefault<TSource>\n    fullName: System.Linq.Enumerable.FirstOrDefault<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n    name: FirstOrDefault(Of TSource)\n    fullName: System.Linq.Enumerable.FirstOrDefault(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.FirstOrDefault(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.FirstOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.FirstOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: FirstOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: FirstOrDefault<TSource>\n    fullName: System.Linq.Enumerable.FirstOrDefault<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: FirstOrDefault(Of TSource)\n    fullName: System.Linq.Enumerable.FirstOrDefault(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.FirstOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  commentId: M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  isExternal: true\n  name: GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))\n  name.vb: GroupBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: GroupBy<TSource, TKey>\n    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: GroupBy(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n  commentId: M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  isExternal: true\n  name: GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy<TSource, TKey>\n    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  isExternal: true\n  name: GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)\n  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement))\n  name.vb: GroupBy(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n    name: GroupBy<TSource, TKey, TElement>\n    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n    name: GroupBy(Of TSource, TKey, TElement)\n    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)\n  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))\n  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  isExternal: true\n  name: GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupBy(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy<TSource, TKey, TElement>\n    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy(Of TSource, TKey, TElement)\n    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n  isExternal: true\n  name: GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>)\n  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TKey, System.Collections.Generic.IEnumerable<TSource>, TResult>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TSource), TResult))\n  name.vb: GroupBy(Of TSource, TKey, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TKey, IEnumerable(Of TSource), TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n    name: GroupBy<TSource, TKey, TResult>\n    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n    name: GroupBy(Of TSource, TKey, TResult)\n    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>)\n  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TKey, IEnumerable(Of TSource), TResult))\n  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n  isExternal: true\n  name: GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TKey, System.Collections.Generic.IEnumerable<TSource>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TSource), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupBy(Of TSource, TKey, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TKey, IEnumerable(Of TSource), TResult), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy<TSource, TKey, TResult>\n    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy(Of TSource, TKey, TResult)\n    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TKey, IEnumerable(Of TSource), TResult), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n  isExternal: true\n  name: GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)\n  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Func<TKey, System.Collections.Generic.IEnumerable<TElement>, TResult>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TElement), TResult))\n  name.vb: GroupBy(Of TSource, TKey, TElement, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n    name: GroupBy<TSource, TKey, TElement, TResult>\n    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n    name: GroupBy(Of TSource, TKey, TElement, TResult)\n    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)\n  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult))\n  commentId: M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n- uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n  isExternal: true\n  name: GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Func<TKey, System.Collections.Generic.IEnumerable<TElement>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TElement), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupBy(Of TSource, TKey, TElement, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy<TSource, TKey, TElement, TResult>\n    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy(Of TSource, TKey, TElement, TResult)\n    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n  isExternal: true\n  name: GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>)\n  fullName: System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TOuter>, System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, System.Collections.Generic.IEnumerable<TInner>, TResult>)\n  fullname.vb: System.Linq.Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TOuter), System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of TOuter, TKey), System.Func(Of TInner, TKey), System.Func(Of TOuter, System.Collections.Generic.IEnumerable(Of TInner), TResult))\n  name.vb: GroupJoin(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, IEnumerable(Of TInner), TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n    name: GroupJoin<TOuter, TInner, TKey, TResult>\n    fullName: System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n    name: GroupJoin(Of TOuter, TInner, TKey, TResult)\n    fullName: System.Linq.Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>)\n  nameWithType.vb: Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, IEnumerable(Of TInner), TResult))\n  commentId: M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n- uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n  isExternal: true\n  name: GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TOuter>, System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, System.Collections.Generic.IEnumerable<TInner>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TOuter), System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of TOuter, TKey), System.Func(Of TInner, TKey), System.Func(Of TOuter, System.Collections.Generic.IEnumerable(Of TInner), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupJoin(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, IEnumerable(Of TInner), TResult), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n    name: GroupJoin<TOuter, TInner, TKey, TResult>\n    fullName: System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n    name: GroupJoin(Of TOuter, TInner, TKey, TResult)\n    fullName: System.Linq.Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, IEnumerable(Of TInner), TResult), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n- uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Intersect<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Intersect(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Intersect(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: Intersect<TSource>\n    fullName: System.Linq.Enumerable.Intersect<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: Intersect(Of TSource)\n    fullName: System.Linq.Enumerable.Intersect(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Intersect(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  isExternal: true\n  name: Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: System.Linq.Enumerable.Intersect<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)\n  fullname.vb: System.Linq.Enumerable.Intersect(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))\n  name.vb: Intersect(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Intersect<TSource>\n    fullName: System.Linq.Enumerable.Intersect<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Intersect(Of TSource)\n    fullName: System.Linq.Enumerable.Intersect(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType.vb: Enumerable.Intersect(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n  commentId: M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n- uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n  isExternal: true\n  name: Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>)\n  fullName: System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TOuter>, System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, TInner, TResult>)\n  fullname.vb: System.Linq.Enumerable.Join(Of TOuter, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TOuter), System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of TOuter, TKey), System.Func(Of TInner, TKey), System.Func(Of TOuter, TInner, TResult))\n  name.vb: Join(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, TInner, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n    name: Join<TOuter, TInner, TKey, TResult>\n    fullName: System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n    name: Join(Of TOuter, TInner, TKey, TResult)\n    fullName: System.Linq.Enumerable.Join(Of TOuter, TInner, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>)\n  nameWithType.vb: Enumerable.Join(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, TInner, TResult))\n  commentId: M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n- uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n  isExternal: true\n  name: Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TOuter>, System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, TInner, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.Join(Of TOuter, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TOuter), System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of TOuter, TKey), System.Func(Of TInner, TKey), System.Func(Of TOuter, TInner, TResult), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: Join(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, TInner, TResult), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n    name: Join<TOuter, TInner, TKey, TResult>\n    fullName: System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n    name: Join(Of TOuter, TInner, TKey, TResult)\n    fullName: System.Linq.Enumerable.Join(Of TOuter, TInner, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.Join(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, TInner, TResult), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n- uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Last<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Last<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Last(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Last(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n    name: Last<TSource>\n    fullName: System.Linq.Enumerable.Last<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n    name: Last(Of TSource)\n    fullName: System.Linq.Enumerable.Last(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Last<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Last(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: Last<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.Last<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Last(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: Last(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Last<TSource>\n    fullName: System.Linq.Enumerable.Last<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Last(Of TSource)\n    fullName: System.Linq.Enumerable.Last(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Last<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.Last(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  commentId: M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: LastOrDefault<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.LastOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.LastOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: LastOrDefault(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n    name: LastOrDefault<TSource>\n    fullName: System.Linq.Enumerable.LastOrDefault<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n    name: LastOrDefault(Of TSource)\n    fullName: System.Linq.Enumerable.LastOrDefault(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.LastOrDefault(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.LastOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.LastOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: LastOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: LastOrDefault<TSource>\n    fullName: System.Linq.Enumerable.LastOrDefault<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: LastOrDefault(Of TSource)\n    fullName: System.Linq.Enumerable.LastOrDefault(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.LastOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  commentId: M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: LongCount<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.LongCount<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.LongCount(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: LongCount(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n    name: LongCount<TSource>\n    fullName: System.Linq.Enumerable.LongCount<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n    name: LongCount(Of TSource)\n    fullName: System.Linq.Enumerable.LongCount(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.LongCount<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.LongCount(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: LongCount<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.LongCount<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.LongCount(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: LongCount(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: LongCount<TSource>\n    fullName: System.Linq.Enumerable.LongCount<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: LongCount(Of TSource)\n    fullName: System.Linq.Enumerable.LongCount(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.LongCount<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.LongCount(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  commentId: M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Decimal>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Decimal))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Double>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Double>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Double))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Double>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int64>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int64))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Decimal>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Decimal)))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Double>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Double)))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int32>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int32)))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int64>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int64)))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Single>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Single)))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Single>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Single>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Single))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Single>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n- uid: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  isExternal: true\n  name: Max<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)\n  fullName: System.Linq.Enumerable.Max<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TResult>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TResult))\n  name.vb: Max(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: Max<TSource, TResult>\n    fullName: System.Linq.Enumerable.Max<TSource, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: Max(Of TSource, TResult)\n    fullName: System.Linq.Enumerable.Max(Of TSource, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)\n  nameWithType.vb: Enumerable.Max(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))\n  commentId: M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Decimal>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Decimal))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Double>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Double>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Double))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Double>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int64>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int64))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Decimal>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Decimal)))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Double>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Double)))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int32>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int32)))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int64>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int64)))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Single>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Single)))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Single>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Single>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Single))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Single>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n- uid: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  isExternal: true\n  name: Min<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)\n  fullName: System.Linq.Enumerable.Min<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TResult>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TResult))\n  name.vb: Min(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: Min<TSource, TResult>\n    fullName: System.Linq.Enumerable.Min<TSource, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: Min(Of TSource, TResult)\n    fullName: System.Linq.Enumerable.Min(Of TSource, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)\n  nameWithType.vb: Enumerable.Min(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))\n  commentId: M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  isExternal: true\n  name: OfType<TResult>(IEnumerable)\n  fullName: System.Linq.Enumerable.OfType<TResult>(System.Collections.IEnumerable)\n  fullname.vb: System.Linq.Enumerable.OfType(Of TResult)(System.Collections.IEnumerable)\n  name.vb: OfType(Of TResult)(IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n    name: OfType<TResult>\n    fullName: System.Linq.Enumerable.OfType<TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n    name: OfType(Of TResult)\n    fullName: System.Linq.Enumerable.OfType(Of TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.OfType<TResult>(IEnumerable)\n  nameWithType.vb: Enumerable.OfType(Of TResult)(IEnumerable)\n  commentId: M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n- uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  isExternal: true\n  name: OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  fullName: System.Linq.Enumerable.OrderBy<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)\n  fullname.vb: System.Linq.Enumerable.OrderBy(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))\n  name.vb: OrderBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: OrderBy<TSource, TKey>\n    fullName: System.Linq.Enumerable.OrderBy<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: OrderBy(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.OrderBy(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  nameWithType.vb: Enumerable.OrderBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n  commentId: M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  isExternal: true\n  name: OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)\n  fullName: System.Linq.Enumerable.OrderBy<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.OrderBy(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IComparer(Of TKey))\n  name.vb: OrderBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n    name: OrderBy<TSource, TKey>\n    fullName: System.Linq.Enumerable.OrderBy<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n    name: OrderBy(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.OrderBy(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)\n  nameWithType.vb: Enumerable.OrderBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n- uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  isExternal: true\n  name: OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  fullName: System.Linq.Enumerable.OrderByDescending<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)\n  fullname.vb: System.Linq.Enumerable.OrderByDescending(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))\n  name.vb: OrderByDescending(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: OrderByDescending<TSource, TKey>\n    fullName: System.Linq.Enumerable.OrderByDescending<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: OrderByDescending(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.OrderByDescending(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  nameWithType.vb: Enumerable.OrderByDescending(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n  commentId: M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  isExternal: true\n  name: OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)\n  fullName: System.Linq.Enumerable.OrderByDescending<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.OrderByDescending(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IComparer(Of TKey))\n  name.vb: OrderByDescending(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n    name: OrderByDescending<TSource, TKey>\n    fullName: System.Linq.Enumerable.OrderByDescending<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n    name: OrderByDescending(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.OrderByDescending(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)\n  nameWithType.vb: Enumerable.OrderByDescending(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n- uid: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Reverse<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Reverse<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Reverse(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Reverse(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n    name: Reverse<TSource>\n    fullName: System.Linq.Enumerable.Reverse<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n    name: Reverse(Of TSource)\n    fullName: System.Linq.Enumerable.Reverse(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Reverse<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Reverse(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  isExternal: true\n  name: Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)\n  fullName: System.Linq.Enumerable.Select<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TResult>)\n  fullname.vb: System.Linq.Enumerable.Select(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TResult))\n  name.vb: Select(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: Select<TSource, TResult>\n    fullName: System.Linq.Enumerable.Select<TSource, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: Select(Of TSource, TResult)\n    fullName: System.Linq.Enumerable.Select(Of TSource, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)\n  nameWithType.vb: Enumerable.Select(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))\n  commentId: M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n  isExternal: true\n  name: Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, TResult>)\n  fullName: System.Linq.Enumerable.Select<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, TResult>)\n  fullname.vb: System.Linq.Enumerable.Select(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, TResult))\n  name.vb: Select(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n    name: Select<TSource, TResult>\n    fullName: System.Linq.Enumerable.Select<TSource, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n    name: Select(Of TSource, TResult)\n    fullName: System.Linq.Enumerable.Select(Of TSource, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, TResult>)\n  nameWithType.vb: Enumerable.Select(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, TResult))\n  commentId: M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n- uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n  isExternal: true\n  name: SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TResult>>)\n  fullName: System.Linq.Enumerable.SelectMany<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)\n  fullname.vb: System.Linq.Enumerable.SelectMany(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Collections.Generic.IEnumerable(Of TResult)))\n  name.vb: SelectMany(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, IEnumerable(Of TResult)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n    name: SelectMany<TSource, TResult>\n    fullName: System.Linq.Enumerable.SelectMany<TSource, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n    name: SelectMany(Of TSource, TResult)\n    fullName: System.Linq.Enumerable.SelectMany(Of TSource, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TResult>>)\n  nameWithType.vb: Enumerable.SelectMany(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, IEnumerable(Of TResult)))\n  commentId: M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n- uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n  isExternal: true\n  name: SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TResult>>)\n  fullName: System.Linq.Enumerable.SelectMany<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Collections.Generic.IEnumerable<TResult>>)\n  fullname.vb: System.Linq.Enumerable.SelectMany(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Collections.Generic.IEnumerable(Of TResult)))\n  name.vb: SelectMany(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, IEnumerable(Of TResult)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n    name: SelectMany<TSource, TResult>\n    fullName: System.Linq.Enumerable.SelectMany<TSource, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n    name: SelectMany(Of TSource, TResult)\n    fullName: System.Linq.Enumerable.SelectMany(Of TSource, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TResult>>)\n  nameWithType.vb: Enumerable.SelectMany(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, IEnumerable(Of TResult)))\n  commentId: M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n- uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  isExternal: true\n  name: SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)\n  fullName: System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Collections.Generic.IEnumerable<TCollection>>, System.Func<TSource, TCollection, TResult>)\n  fullname.vb: System.Linq.Enumerable.SelectMany(Of TSource, TCollection, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Collections.Generic.IEnumerable(Of TCollection)), System.Func(Of TSource, TCollection, TResult))\n  name.vb: SelectMany(Of TSource, TCollection, TResult)(IEnumerable(Of TSource), Func(Of TSource, IEnumerable(Of TCollection)), Func(Of TSource, TCollection, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n    name: SelectMany<TSource, TCollection, TResult>\n    fullName: System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TCollection\n    fullName: TCollection\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TCollection\n    fullName: TCollection\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n    name: SelectMany(Of TSource, TCollection, TResult)\n    fullName: System.Linq.Enumerable.SelectMany(Of TSource, TCollection, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TCollection\n    fullName: TCollection\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TCollection\n    fullName: TCollection\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)\n  nameWithType.vb: Enumerable.SelectMany(Of TSource, TCollection, TResult)(IEnumerable(Of TSource), Func(Of TSource, IEnumerable(Of TCollection)), Func(Of TSource, TCollection, TResult))\n  commentId: M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n- uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  isExternal: true\n  name: SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)\n  fullName: System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Collections.Generic.IEnumerable<TCollection>>, System.Func<TSource, TCollection, TResult>)\n  fullname.vb: System.Linq.Enumerable.SelectMany(Of TSource, TCollection, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Collections.Generic.IEnumerable(Of TCollection)), System.Func(Of TSource, TCollection, TResult))\n  name.vb: SelectMany(Of TSource, TCollection, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, IEnumerable(Of TCollection)), Func(Of TSource, TCollection, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n    name: SelectMany<TSource, TCollection, TResult>\n    fullName: System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TCollection\n    fullName: TCollection\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TCollection\n    fullName: TCollection\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n    name: SelectMany(Of TSource, TCollection, TResult)\n    fullName: System.Linq.Enumerable.SelectMany(Of TSource, TCollection, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TCollection\n    fullName: TCollection\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TCollection\n    fullName: TCollection\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)\n  nameWithType.vb: Enumerable.SelectMany(Of TSource, TCollection, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, IEnumerable(Of TCollection)), Func(Of TSource, TCollection, TResult))\n  commentId: M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n- uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.SequenceEqual<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.SequenceEqual(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: SequenceEqual(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: SequenceEqual<TSource>\n    fullName: System.Linq.Enumerable.SequenceEqual<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: SequenceEqual(Of TSource)\n    fullName: System.Linq.Enumerable.SequenceEqual(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.SequenceEqual(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  isExternal: true\n  name: SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: System.Linq.Enumerable.SequenceEqual<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)\n  fullname.vb: System.Linq.Enumerable.SequenceEqual(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))\n  name.vb: SequenceEqual(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: SequenceEqual<TSource>\n    fullName: System.Linq.Enumerable.SequenceEqual<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: SequenceEqual(Of TSource)\n    fullName: System.Linq.Enumerable.SequenceEqual(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType.vb: Enumerable.SequenceEqual(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n  commentId: M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n- uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Single<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Single<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Single(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Single(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n    name: Single<TSource>\n    fullName: System.Linq.Enumerable.Single<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n    name: Single(Of TSource)\n    fullName: System.Linq.Enumerable.Single(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Single<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Single(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: Single<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.Single<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Single(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: Single(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Single<TSource>\n    fullName: System.Linq.Enumerable.Single<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Single(Of TSource)\n    fullName: System.Linq.Enumerable.Single(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Single<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.Single(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  commentId: M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: SingleOrDefault<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.SingleOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.SingleOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: SingleOrDefault(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n    name: SingleOrDefault<TSource>\n    fullName: System.Linq.Enumerable.SingleOrDefault<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n    name: SingleOrDefault(Of TSource)\n    fullName: System.Linq.Enumerable.SingleOrDefault(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.SingleOrDefault(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.SingleOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.SingleOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: SingleOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: SingleOrDefault<TSource>\n    fullName: System.Linq.Enumerable.SingleOrDefault<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: SingleOrDefault(Of TSource)\n    fullName: System.Linq.Enumerable.SingleOrDefault(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.SingleOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  commentId: M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  isExternal: true\n  name: Skip<TSource>(IEnumerable<TSource>, Int32)\n  fullName: System.Linq.Enumerable.Skip<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Int32)\n  fullname.vb: System.Linq.Enumerable.Skip(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Int32)\n  name.vb: Skip(Of TSource)(IEnumerable(Of TSource), Int32)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n    name: Skip<TSource>\n    fullName: System.Linq.Enumerable.Skip<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n    name: Skip(Of TSource)\n    fullName: System.Linq.Enumerable.Skip(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Skip<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType.vb: Enumerable.Skip(Of TSource)(IEnumerable(Of TSource), Int32)\n  commentId: M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n- uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.SkipWhile<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.SkipWhile(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: SkipWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: SkipWhile<TSource>\n    fullName: System.Linq.Enumerable.SkipWhile<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: SkipWhile(Of TSource)\n    fullName: System.Linq.Enumerable.SkipWhile(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.SkipWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  commentId: M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  isExternal: true\n  name: SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)\n  fullName: System.Linq.Enumerable.SkipWhile<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.SkipWhile(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Boolean))\n  name.vb: SkipWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n    name: SkipWhile<TSource>\n    fullName: System.Linq.Enumerable.SkipWhile<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n    name: SkipWhile(Of TSource)\n    fullName: System.Linq.Enumerable.SkipWhile(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)\n  nameWithType.vb: Enumerable.SkipWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))\n  commentId: M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Decimal>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Decimal))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Double>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Double>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Double))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Double>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int64>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int64))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Decimal>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Decimal)))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Double>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Double)))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int32>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int32)))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int64>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int64)))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Single>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Single)))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Single>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Single>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Single))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Single>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n- uid: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  isExternal: true\n  name: Take<TSource>(IEnumerable<TSource>, Int32)\n  fullName: System.Linq.Enumerable.Take<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Int32)\n  fullname.vb: System.Linq.Enumerable.Take(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Int32)\n  name.vb: Take(Of TSource)(IEnumerable(Of TSource), Int32)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n    name: Take<TSource>\n    fullName: System.Linq.Enumerable.Take<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n    name: Take(Of TSource)\n    fullName: System.Linq.Enumerable.Take(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Take<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType.vb: Enumerable.Take(Of TSource)(IEnumerable(Of TSource), Int32)\n  commentId: M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n- uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.TakeWhile<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.TakeWhile(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: TakeWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: TakeWhile<TSource>\n    fullName: System.Linq.Enumerable.TakeWhile<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: TakeWhile(Of TSource)\n    fullName: System.Linq.Enumerable.TakeWhile(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.TakeWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  commentId: M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  isExternal: true\n  name: TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)\n  fullName: System.Linq.Enumerable.TakeWhile<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.TakeWhile(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Boolean))\n  name.vb: TakeWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n    name: TakeWhile<TSource>\n    fullName: System.Linq.Enumerable.TakeWhile<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n    name: TakeWhile(Of TSource)\n    fullName: System.Linq.Enumerable.TakeWhile(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)\n  nameWithType.vb: Enumerable.TakeWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))\n  commentId: M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n- uid: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: ToArray<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.ToArray<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.ToArray(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: ToArray(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n    name: ToArray<TSource>\n    fullName: System.Linq.Enumerable.ToArray<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n    name: ToArray(Of TSource)\n    fullName: System.Linq.Enumerable.ToArray(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToArray<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.ToArray(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  isExternal: true\n  name: ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)\n  fullname.vb: System.Linq.Enumerable.ToDictionary(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))\n  name.vb: ToDictionary(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: ToDictionary<TSource, TKey>\n    fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: ToDictionary(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.ToDictionary(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  nameWithType.vb: Enumerable.ToDictionary(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n  commentId: M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  isExternal: true\n  name: ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.ToDictionary(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: ToDictionary(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToDictionary<TSource, TKey>\n    fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToDictionary(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.ToDictionary(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.ToDictionary(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  isExternal: true\n  name: ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)\n  fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>)\n  fullname.vb: System.Linq.Enumerable.ToDictionary(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement))\n  name.vb: ToDictionary(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n    name: ToDictionary<TSource, TKey, TElement>\n    fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n    name: ToDictionary(Of TSource, TKey, TElement)\n    fullName: System.Linq.Enumerable.ToDictionary(Of TSource, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)\n  nameWithType.vb: Enumerable.ToDictionary(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))\n  commentId: M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n- uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  isExternal: true\n  name: ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.ToDictionary(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: ToDictionary(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToDictionary<TSource, TKey, TElement>\n    fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToDictionary(Of TSource, TKey, TElement)\n    fullName: System.Linq.Enumerable.ToDictionary(Of TSource, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.ToDictionary(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: ToList<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.ToList<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.ToList(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: ToList(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n    name: ToList<TSource>\n    fullName: System.Linq.Enumerable.ToList<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n    name: ToList(Of TSource)\n    fullName: System.Linq.Enumerable.ToList(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToList<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.ToList(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  isExternal: true\n  name: ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  fullName: System.Linq.Enumerable.ToLookup<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)\n  fullname.vb: System.Linq.Enumerable.ToLookup(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))\n  name.vb: ToLookup(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: ToLookup<TSource, TKey>\n    fullName: System.Linq.Enumerable.ToLookup<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: ToLookup(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.ToLookup(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  nameWithType.vb: Enumerable.ToLookup(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n  commentId: M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  isExternal: true\n  name: ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.ToLookup<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.ToLookup(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: ToLookup(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToLookup<TSource, TKey>\n    fullName: System.Linq.Enumerable.ToLookup<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToLookup(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.ToLookup(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.ToLookup(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  isExternal: true\n  name: ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)\n  fullName: System.Linq.Enumerable.ToLookup<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>)\n  fullname.vb: System.Linq.Enumerable.ToLookup(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement))\n  name.vb: ToLookup(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n    name: ToLookup<TSource, TKey, TElement>\n    fullName: System.Linq.Enumerable.ToLookup<TSource, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n    name: ToLookup(Of TSource, TKey, TElement)\n    fullName: System.Linq.Enumerable.ToLookup(Of TSource, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)\n  nameWithType.vb: Enumerable.ToLookup(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))\n  commentId: M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n- uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  isExternal: true\n  name: ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.ToLookup<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.ToLookup(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: ToLookup(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToLookup<TSource, TKey, TElement>\n    fullName: System.Linq.Enumerable.ToLookup<TSource, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToLookup(Of TSource, TKey, TElement)\n    fullName: System.Linq.Enumerable.ToLookup(Of TSource, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.ToLookup(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Union(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Union(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: Union<TSource>\n    fullName: System.Linq.Enumerable.Union<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: Union(Of TSource)\n    fullName: System.Linq.Enumerable.Union(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Union(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  isExternal: true\n  name: Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: System.Linq.Enumerable.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)\n  fullname.vb: System.Linq.Enumerable.Union(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))\n  name.vb: Union(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Union<TSource>\n    fullName: System.Linq.Enumerable.Union<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Union(Of TSource)\n    fullName: System.Linq.Enumerable.Union(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType.vb: Enumerable.Union(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n  commentId: M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n- uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: Where<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.Where<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Where(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: Where(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Where<TSource>\n    fullName: System.Linq.Enumerable.Where<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Where(Of TSource)\n    fullName: System.Linq.Enumerable.Where(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.Where(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  commentId: M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  isExternal: true\n  name: Where<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)\n  fullName: System.Linq.Enumerable.Where<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Where(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Boolean))\n  name.vb: Where(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n    name: Where<TSource>\n    fullName: System.Linq.Enumerable.Where<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n    name: Where(Of TSource)\n    fullName: System.Linq.Enumerable.Where(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)\n  nameWithType.vb: Enumerable.Where(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))\n  commentId: M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n- uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n  isExternal: true\n  name: Zip<TFirst, TSecond, TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst, TSecond, TResult>)\n  fullName: System.Linq.Enumerable.Zip<TFirst, TSecond, TResult>(System.Collections.Generic.IEnumerable<TFirst>, System.Collections.Generic.IEnumerable<TSecond>, System.Func<TFirst, TSecond, TResult>)\n  fullname.vb: System.Linq.Enumerable.Zip(Of TFirst, TSecond, TResult)(System.Collections.Generic.IEnumerable(Of TFirst), System.Collections.Generic.IEnumerable(Of TSecond), System.Func(Of TFirst, TSecond, TResult))\n  name.vb: Zip(Of TFirst, TSecond, TResult)(IEnumerable(Of TFirst), IEnumerable(Of TSecond), Func(Of TFirst, TSecond, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n    name: Zip<TFirst, TSecond, TResult>\n    fullName: System.Linq.Enumerable.Zip<TFirst, TSecond, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TFirst\n    fullName: TFirst\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSecond\n    fullName: TSecond\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TFirst\n    fullName: TFirst\n  - name: ', '\n    fullName: ', '\n  - name: TSecond\n    fullName: TSecond\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n    name: Zip(Of TFirst, TSecond, TResult)\n    fullName: System.Linq.Enumerable.Zip(Of TFirst, TSecond, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TFirst\n    fullName: TFirst\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSecond\n    fullName: TSecond\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TFirst\n    fullName: TFirst\n  - name: ', '\n    fullName: ', '\n  - name: TSecond\n    fullName: TSecond\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Zip<TFirst, TSecond, TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst, TSecond, TResult>)\n  nameWithType.vb: Enumerable.Zip(Of TFirst, TSecond, TResult)(IEnumerable(Of TFirst), IEnumerable(Of TSecond), Func(Of TFirst, TSecond, TResult))\n  commentId: M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n- uid: System.Linq\n  isExternal: false\n  name: System.Linq\n  fullName: System.Linq\n  nameWithType: System.Linq\n  commentId: N:System.Linq\n- uid: System.Collections.Generic.IComparer{{TKey}}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IComparer`1\n  name: IComparer<TKey>\n  fullName: System.Collections.Generic.IComparer<TKey>\n  fullname.vb: System.Collections.Generic.IComparer(Of TKey)\n  name.vb: IComparer(Of TKey)\n  spec.csharp:\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  nameWithType: IComparer<TKey>\n  nameWithType.vb: IComparer(Of TKey)\n  commentId: T:System.Collections.Generic.IComparer{``1}\n- uid: System.Collections.Generic.IComparer`1\n  isExternal: false\n  name: IComparer<T>\n  fullName: System.Collections.Generic.IComparer<T>\n  fullname.vb: System.Collections.Generic.IComparer(Of T)\n  name.vb: IComparer(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: IComparer<T>\n  nameWithType.vb: IComparer(Of T)\n  commentId: T:System.Collections.Generic.IComparer`1\n- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Count\n  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}\n  definition: System.Collections.Generic.ICollection`1.Count\n  name: Count\n  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Count\n  fullname.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).Count\n  nameWithType: ICollection<KeyValuePair<TKey, TValue>>.Count\n  nameWithType.vb: ICollection(Of KeyValuePair(Of TKey, TValue)).Count\n  commentId: P:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.Count\n- uid: System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Count\n  parent: System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}\n  definition: System.Collections.Generic.IReadOnlyCollection`1.Count\n  name: Count\n  fullName: System.Collections.Generic.IReadOnlyCollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Count\n  fullname.vb: System.Collections.Generic.IReadOnlyCollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).Count\n  nameWithType: IReadOnlyCollection<KeyValuePair<TKey, TValue>>.Count\n  nameWithType.vb: IReadOnlyCollection(Of KeyValuePair(Of TKey, TValue)).Count\n  commentId: P:System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{`0,`1}}.Count\n- uid: System.Collections.ICollection.Count\n  parent: System.Collections.ICollection\n  isExternal: false\n  name: Count\n  fullName: System.Collections.ICollection.Count\n  nameWithType: ICollection.Count\n  commentId: P:System.Collections.ICollection.Count\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.Collections.Generic.ICollection`1.Count\n  isExternal: false\n  name: Count\n  fullName: System.Collections.Generic.ICollection<T>.Count\n  fullname.vb: System.Collections.Generic.ICollection(Of T).Count\n  nameWithType: ICollection<T>.Count\n  nameWithType.vb: ICollection(Of T).Count\n  commentId: P:System.Collections.Generic.ICollection`1.Count\n- uid: System.Collections.Generic.IReadOnlyCollection`1.Count\n  isExternal: false\n  name: Count\n  fullName: System.Collections.Generic.IReadOnlyCollection<T>.Count\n  fullname.vb: System.Collections.Generic.IReadOnlyCollection(Of T).Count\n  nameWithType: IReadOnlyCollection<T>.Count\n  nameWithType.vb: IReadOnlyCollection(Of T).Count\n  commentId: P:System.Collections.Generic.IReadOnlyCollection`1.Count\n- uid: System.Collections.Generic.IDictionary{{TKey},{TValue}}.Item({TKey})\n  parent: System.Collections.Generic.IDictionary{{TKey},{TValue}}\n  definition: System.Collections.Generic.IDictionary`2.Item(`0)\n  name: Item[TKey]\n  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Item[TKey]\n  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Item(TKey)\n  name.vb: Item(TKey)\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2.Item(`0)\n    name: Item\n    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Item\n    isExternal: true\n  - name: '['\n    fullName: '['\n  - name: TKey\n    fullName: TKey\n  - name: ']'\n    fullName: ']'\n  spec.vb:\n  - uid: System.Collections.Generic.IDictionary`2.Item(`0)\n    name: Item\n    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).Item\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  nameWithType: IDictionary<TKey, TValue>.Item[TKey]\n  nameWithType.vb: IDictionary(Of TKey, TValue).Item(TKey)\n  commentId: P:System.Collections.Generic.IDictionary{`0,`1}.Item(`0)\n- uid: System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}.Item({TKey})\n  parent: System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}\n  definition: System.Collections.Generic.IReadOnlyDictionary`2.Item(`0)\n  name: Item[TKey]\n  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.Item[TKey]\n  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue).Item(TKey)\n  name.vb: Item(TKey)\n  spec.csharp:\n  - uid: System.Collections.Generic.IReadOnlyDictionary`2.Item(`0)\n    name: Item\n    fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.Item\n    isExternal: true\n  - name: '['\n    fullName: '['\n  - name: TKey\n    fullName: TKey\n  - name: ']'\n    fullName: ']'\n  spec.vb:\n  - uid: System.Collections.Generic.IReadOnlyDictionary`2.Item(`0)\n    name: Item\n    fullName: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue).Item\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  nameWithType: IReadOnlyDictionary<TKey, TValue>.Item[TKey]\n  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue).Item(TKey)\n  commentId: P:System.Collections.Generic.IReadOnlyDictionary{`0,`1}.Item(`0)\n- uid: '{TKey}'\n  definition: TKey\n  name: TKey\n  fullName: TKey\n  nameWithType: TKey\n  commentId: '!:TKey'\n- uid: '{TValue}'\n  definition: TValue\n  name: TValue\n  fullName: TValue\n  nameWithType: TValue\n  commentId: '!:TValue'\n- uid: System.Collections.Generic.IDictionary`2.Item(`0)\n  isExternal: true\n  name: Item[TKey]\n  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Item[TKey]\n  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Item(TKey)\n  name.vb: Item(TKey)\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2.Item(`0)\n    name: Item\n    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Item\n    isExternal: true\n  - name: '['\n    fullName: '['\n  - name: TKey\n    fullName: TKey\n  - name: ']'\n    fullName: ']'\n  spec.vb:\n  - uid: System.Collections.Generic.IDictionary`2.Item(`0)\n    name: Item\n    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).Item\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  nameWithType: IDictionary<TKey, TValue>.Item[TKey]\n  nameWithType.vb: IDictionary(Of TKey, TValue).Item(TKey)\n  commentId: P:System.Collections.Generic.IDictionary`2.Item(`0)\n- uid: System.Collections.Generic.IReadOnlyDictionary`2.Item(`0)\n  isExternal: true\n  name: Item[TKey]\n  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.Item[TKey]\n  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue).Item(TKey)\n  name.vb: Item(TKey)\n  spec.csharp:\n  - uid: System.Collections.Generic.IReadOnlyDictionary`2.Item(`0)\n    name: Item\n    fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.Item\n    isExternal: true\n  - name: '['\n    fullName: '['\n  - name: TKey\n    fullName: TKey\n  - name: ']'\n    fullName: ']'\n  spec.vb:\n  - uid: System.Collections.Generic.IReadOnlyDictionary`2.Item(`0)\n    name: Item\n    fullName: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue).Item\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  nameWithType: IReadOnlyDictionary<TKey, TValue>.Item[TKey]\n  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue).Item(TKey)\n  commentId: P:System.Collections.Generic.IReadOnlyDictionary`2.Item(`0)\n- uid: TKey\n  isExternal: false\n  name: TKey\n  fullName: TKey\n  nameWithType: TKey\n- uid: TValue\n  isExternal: false\n  name: TValue\n  fullName: TValue\n  nameWithType: TValue\n- uid: System.Collections.Generic.SortedDictionary`2.KeyCollection\n  parent: System.Collections.Generic\n  isExternal: false\n  name: SortedDictionary.KeyCollection<>\n  fullName: System.Collections.Generic.SortedDictionary.KeyCollection<>\n  fullname.vb: System.Collections.Generic.SortedDictionary.KeyCollection(Of )\n  name.vb: SortedDictionary.KeyCollection(Of )\n  spec.csharp:\n  - uid: System.Collections.Generic.SortedDictionary`2.KeyCollection\n    name: SortedDictionary.KeyCollection\n    fullName: System.Collections.Generic.SortedDictionary.KeyCollection\n  - name: <\n    fullName: <\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.SortedDictionary`2.KeyCollection\n    name: SortedDictionary.KeyCollection\n    fullName: System.Collections.Generic.SortedDictionary.KeyCollection\n  - name: '(Of '\n    fullName: '(Of '\n  - name: )\n    fullName: )\n  nameWithType: SortedDictionary.KeyCollection<>\n  nameWithType.vb: SortedDictionary.KeyCollection(Of )\n  commentId: T:System.Collections.Generic.SortedDictionary`2.KeyCollection\n- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.IsReadOnly\n  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}\n  definition: System.Collections.Generic.ICollection`1.IsReadOnly\n  name: IsReadOnly\n  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.IsReadOnly\n  fullname.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).IsReadOnly\n  nameWithType: ICollection<KeyValuePair<TKey, TValue>>.IsReadOnly\n  nameWithType.vb: ICollection(Of KeyValuePair(Of TKey, TValue)).IsReadOnly\n  commentId: P:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.IsReadOnly\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.Collections.Generic.ICollection`1.IsReadOnly\n  isExternal: false\n  name: IsReadOnly\n  fullName: System.Collections.Generic.ICollection<T>.IsReadOnly\n  fullname.vb: System.Collections.Generic.ICollection(Of T).IsReadOnly\n  nameWithType: ICollection<T>.IsReadOnly\n  nameWithType.vb: ICollection(Of T).IsReadOnly\n  commentId: P:System.Collections.Generic.ICollection`1.IsReadOnly\n- uid: System.Collections.Generic.IDictionary{{TKey},{TValue}}.Keys\n  parent: System.Collections.Generic.IDictionary{{TKey},{TValue}}\n  definition: System.Collections.Generic.IDictionary`2.Keys\n  name: Keys\n  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Keys\n  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Keys\n  nameWithType: IDictionary<TKey, TValue>.Keys\n  nameWithType.vb: IDictionary(Of TKey, TValue).Keys\n  commentId: P:System.Collections.Generic.IDictionary{`0,`1}.Keys\n- uid: System.Collections.Generic.ICollection{{TKey}}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.ICollection`1\n  name: ICollection<TKey>\n  fullName: System.Collections.Generic.ICollection<TKey>\n  fullname.vb: System.Collections.Generic.ICollection(Of TKey)\n  name.vb: ICollection(Of TKey)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    fullName: System.Collections.Generic.ICollection\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    fullName: System.Collections.Generic.ICollection\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  nameWithType: ICollection<TKey>\n  nameWithType.vb: ICollection(Of TKey)\n  commentId: T:System.Collections.Generic.ICollection{`0}\n- uid: System.Collections.Generic.IDictionary`2.Keys\n  isExternal: true\n  name: Keys\n  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Keys\n  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Keys\n  nameWithType: IDictionary<TKey, TValue>.Keys\n  nameWithType.vb: IDictionary(Of TKey, TValue).Keys\n  commentId: P:System.Collections.Generic.IDictionary`2.Keys\n- uid: System.Collections.Generic.IDictionary{{TKey},{TValue}}.Values\n  parent: System.Collections.Generic.IDictionary{{TKey},{TValue}}\n  definition: System.Collections.Generic.IDictionary`2.Values\n  name: Values\n  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Values\n  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Values\n  nameWithType: IDictionary<TKey, TValue>.Values\n  nameWithType.vb: IDictionary(Of TKey, TValue).Values\n  commentId: P:System.Collections.Generic.IDictionary{`0,`1}.Values\n- uid: System.Collections.Generic.ICollection{{TValue}}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.ICollection`1\n  name: ICollection<TValue>\n  fullName: System.Collections.Generic.ICollection<TValue>\n  fullname.vb: System.Collections.Generic.ICollection(Of TValue)\n  name.vb: ICollection(Of TValue)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    fullName: System.Collections.Generic.ICollection\n  - name: <\n    fullName: <\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    fullName: System.Collections.Generic.ICollection\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  nameWithType: ICollection<TValue>\n  nameWithType.vb: ICollection(Of TValue)\n  commentId: T:System.Collections.Generic.ICollection{`1}\n- uid: System.Collections.Generic.IDictionary`2.Values\n  isExternal: true\n  name: Values\n  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Values\n  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Values\n  nameWithType: IDictionary<TKey, TValue>.Values\n  nameWithType.vb: IDictionary(Of TKey, TValue).Values\n  commentId: P:System.Collections.Generic.IDictionary`2.Values\n- uid: System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}.Keys\n  parent: System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}\n  definition: System.Collections.Generic.IReadOnlyDictionary`2.Keys\n  name: Keys\n  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.Keys\n  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue).Keys\n  nameWithType: IReadOnlyDictionary<TKey, TValue>.Keys\n  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue).Keys\n  commentId: P:System.Collections.Generic.IReadOnlyDictionary{`0,`1}.Keys\n- uid: System.Collections.Generic.IEnumerable{{TKey}}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<TKey>\n  fullName: System.Collections.Generic.IEnumerable<TKey>\n  fullname.vb: System.Collections.Generic.IEnumerable(Of TKey)\n  name.vb: IEnumerable(Of TKey)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  nameWithType: IEnumerable<TKey>\n  nameWithType.vb: IEnumerable(Of TKey)\n  commentId: T:System.Collections.Generic.IEnumerable{`0}\n- uid: System.Collections.Generic.IReadOnlyDictionary`2.Keys\n  isExternal: true\n  name: Keys\n  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.Keys\n  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue).Keys\n  nameWithType: IReadOnlyDictionary<TKey, TValue>.Keys\n  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue).Keys\n  commentId: P:System.Collections.Generic.IReadOnlyDictionary`2.Keys\n- uid: System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}.Values\n  parent: System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}\n  definition: System.Collections.Generic.IReadOnlyDictionary`2.Values\n  name: Values\n  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.Values\n  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue).Values\n  nameWithType: IReadOnlyDictionary<TKey, TValue>.Values\n  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue).Values\n  commentId: P:System.Collections.Generic.IReadOnlyDictionary{`0,`1}.Values\n- uid: System.Collections.Generic.IEnumerable{{TValue}}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<TValue>\n  fullName: System.Collections.Generic.IEnumerable<TValue>\n  fullname.vb: System.Collections.Generic.IEnumerable(Of TValue)\n  name.vb: IEnumerable(Of TValue)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    fullName: <\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  nameWithType: IEnumerable<TValue>\n  nameWithType.vb: IEnumerable(Of TValue)\n  commentId: T:System.Collections.Generic.IEnumerable{`1}\n- uid: System.Collections.Generic.IReadOnlyDictionary`2.Values\n  isExternal: true\n  name: Values\n  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.Values\n  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue).Values\n  nameWithType: IReadOnlyDictionary<TKey, TValue>.Values\n  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue).Values\n  commentId: P:System.Collections.Generic.IReadOnlyDictionary`2.Values\n- uid: System.Collections.ICollection.IsSynchronized\n  parent: System.Collections.ICollection\n  isExternal: false\n  name: IsSynchronized\n  fullName: System.Collections.ICollection.IsSynchronized\n  nameWithType: ICollection.IsSynchronized\n  commentId: P:System.Collections.ICollection.IsSynchronized\n- uid: System.Collections.ICollection.SyncRoot\n  parent: System.Collections.ICollection\n  isExternal: false\n  name: SyncRoot\n  fullName: System.Collections.ICollection.SyncRoot\n  nameWithType: ICollection.SyncRoot\n  commentId: P:System.Collections.ICollection.SyncRoot\n- uid: System.Collections.IDictionary.IsFixedSize\n  parent: System.Collections.IDictionary\n  isExternal: true\n  name: IsFixedSize\n  fullName: System.Collections.IDictionary.IsFixedSize\n  nameWithType: IDictionary.IsFixedSize\n  commentId: P:System.Collections.IDictionary.IsFixedSize\n- uid: System.Collections.IDictionary.IsReadOnly\n  parent: System.Collections.IDictionary\n  isExternal: true\n  name: IsReadOnly\n  fullName: System.Collections.IDictionary.IsReadOnly\n  nameWithType: IDictionary.IsReadOnly\n  commentId: P:System.Collections.IDictionary.IsReadOnly\n- uid: System.Collections.IDictionary.Item(System.Object)\n  parent: System.Collections.IDictionary\n  isExternal: true\n  name: Item[Object]\n  fullName: System.Collections.IDictionary.Item[System.Object]\n  fullname.vb: System.Collections.IDictionary.Item(System.Object)\n  name.vb: Item(Object)\n  spec.csharp:\n  - uid: System.Collections.IDictionary.Item(System.Object)\n    name: Item\n    fullName: System.Collections.IDictionary.Item\n    isExternal: true\n  - name: '['\n    fullName: '['\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ']'\n    fullName: ']'\n  spec.vb:\n  - uid: System.Collections.IDictionary.Item(System.Object)\n    name: Item\n    fullName: System.Collections.IDictionary.Item\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: IDictionary.Item[Object]\n  nameWithType.vb: IDictionary.Item(Object)\n  commentId: P:System.Collections.IDictionary.Item(System.Object)\n- uid: System.Collections.IDictionary.Keys\n  parent: System.Collections.IDictionary\n  isExternal: true\n  name: Keys\n  fullName: System.Collections.IDictionary.Keys\n  nameWithType: IDictionary.Keys\n  commentId: P:System.Collections.IDictionary.Keys\n- uid: System.Collections.IDictionary.Values\n  parent: System.Collections.IDictionary\n  isExternal: true\n  name: Values\n  fullName: System.Collections.IDictionary.Values\n  nameWithType: IDictionary.Values\n  commentId: P:System.Collections.IDictionary.Values\n- uid: System.Collections.Generic.SortedDictionary`2.ValueCollection\n  parent: System.Collections.Generic\n  isExternal: false\n  name: SortedDictionary.ValueCollection<>\n  fullName: System.Collections.Generic.SortedDictionary.ValueCollection<>\n  fullname.vb: System.Collections.Generic.SortedDictionary.ValueCollection(Of )\n  name.vb: SortedDictionary.ValueCollection(Of )\n  spec.csharp:\n  - uid: System.Collections.Generic.SortedDictionary`2.ValueCollection\n    name: SortedDictionary.ValueCollection\n    fullName: System.Collections.Generic.SortedDictionary.ValueCollection\n  - name: <\n    fullName: <\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.SortedDictionary`2.ValueCollection\n    name: SortedDictionary.ValueCollection\n    fullName: System.Collections.Generic.SortedDictionary.ValueCollection\n  - name: '(Of '\n    fullName: '(Of '\n  - name: )\n    fullName: )\n  nameWithType: SortedDictionary.ValueCollection<>\n  nameWithType.vb: SortedDictionary.ValueCollection(Of )\n  commentId: T:System.Collections.Generic.SortedDictionary`2.ValueCollection\n- uid: System.Collections.Generic.IDictionary{{TKey},{TValue}}.Add({TKey},{TValue})\n  parent: System.Collections.Generic.IDictionary{{TKey},{TValue}}\n  definition: System.Collections.Generic.IDictionary`2.Add(`0,`1)\n  name: Add(TKey, TValue)\n  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)\n  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Add(TKey, TValue)\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2.Add(`0,`1)\n    name: Add\n    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Add\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.IDictionary`2.Add(`0,`1)\n    name: Add\n    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).Add\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  nameWithType: IDictionary<TKey, TValue>.Add(TKey, TValue)\n  nameWithType.vb: IDictionary(Of TKey, TValue).Add(TKey, TValue)\n  commentId: M:System.Collections.Generic.IDictionary{`0,`1}.Add(`0,`1)\n- uid: System.Collections.Generic.IDictionary`2.Add(`0,`1)\n  isExternal: true\n  name: Add(TKey, TValue)\n  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)\n  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Add(TKey, TValue)\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2.Add(`0,`1)\n    name: Add\n    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Add\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.IDictionary`2.Add(`0,`1)\n    name: Add\n    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).Add\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  nameWithType: IDictionary<TKey, TValue>.Add(TKey, TValue)\n  nameWithType.vb: IDictionary(Of TKey, TValue).Add(TKey, TValue)\n  commentId: M:System.Collections.Generic.IDictionary`2.Add(`0,`1)\n- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Clear\n  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}\n  definition: System.Collections.Generic.ICollection`1.Clear\n  name: Clear()\n  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Clear()\n  fullname.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).Clear()\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.Clear\n    name: Clear\n    fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Clear\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.Clear\n    name: Clear\n    fullName: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).Clear\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ICollection<KeyValuePair<TKey, TValue>>.Clear()\n  nameWithType.vb: ICollection(Of KeyValuePair(Of TKey, TValue)).Clear()\n  commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.Clear\n- uid: System.Collections.IDictionary.Clear\n  parent: System.Collections.IDictionary\n  isExternal: true\n  name: Clear()\n  fullName: System.Collections.IDictionary.Clear()\n  spec.csharp:\n  - uid: System.Collections.IDictionary.Clear\n    name: Clear\n    fullName: System.Collections.IDictionary.Clear\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.IDictionary.Clear\n    name: Clear\n    fullName: System.Collections.IDictionary.Clear\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: IDictionary.Clear()\n  commentId: M:System.Collections.IDictionary.Clear\n- uid: System.Collections.Generic.ICollection`1.Clear\n  isExternal: false\n  name: Clear()\n  fullName: System.Collections.Generic.ICollection<T>.Clear()\n  fullname.vb: System.Collections.Generic.ICollection(Of T).Clear()\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.Clear\n    name: Clear\n    fullName: System.Collections.Generic.ICollection<T>.Clear\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.Clear\n    name: Clear\n    fullName: System.Collections.Generic.ICollection(Of T).Clear\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ICollection<T>.Clear()\n  nameWithType.vb: ICollection(Of T).Clear()\n  commentId: M:System.Collections.Generic.ICollection`1.Clear\n- uid: System.Collections.Generic.IDictionary{{TKey},{TValue}}.ContainsKey({TKey})\n  parent: System.Collections.Generic.IDictionary{{TKey},{TValue}}\n  definition: System.Collections.Generic.IDictionary`2.ContainsKey(`0)\n  name: ContainsKey(TKey)\n  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)\n  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).ContainsKey(TKey)\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2.ContainsKey(`0)\n    name: ContainsKey\n    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.IDictionary`2.ContainsKey(`0)\n    name: ContainsKey\n    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).ContainsKey\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  nameWithType: IDictionary<TKey, TValue>.ContainsKey(TKey)\n  nameWithType.vb: IDictionary(Of TKey, TValue).ContainsKey(TKey)\n  commentId: M:System.Collections.Generic.IDictionary{`0,`1}.ContainsKey(`0)\n- uid: System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}.ContainsKey({TKey})\n  parent: System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}\n  definition: System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)\n  name: ContainsKey(TKey)\n  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)\n  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue).ContainsKey(TKey)\n  spec.csharp:\n  - uid: System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)\n    name: ContainsKey\n    fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.ContainsKey\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)\n    name: ContainsKey\n    fullName: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue).ContainsKey\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  nameWithType: IReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)\n  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue).ContainsKey(TKey)\n  commentId: M:System.Collections.Generic.IReadOnlyDictionary{`0,`1}.ContainsKey(`0)\n- uid: System.Collections.Generic.IDictionary`2.ContainsKey(`0)\n  isExternal: true\n  name: ContainsKey(TKey)\n  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)\n  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).ContainsKey(TKey)\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2.ContainsKey(`0)\n    name: ContainsKey\n    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.IDictionary`2.ContainsKey(`0)\n    name: ContainsKey\n    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).ContainsKey\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  nameWithType: IDictionary<TKey, TValue>.ContainsKey(TKey)\n  nameWithType.vb: IDictionary(Of TKey, TValue).ContainsKey(TKey)\n  commentId: M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)\n- uid: System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)\n  isExternal: true\n  name: ContainsKey(TKey)\n  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)\n  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue).ContainsKey(TKey)\n  spec.csharp:\n  - uid: System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)\n    name: ContainsKey\n    fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.ContainsKey\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)\n    name: ContainsKey\n    fullName: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue).ContainsKey\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  nameWithType: IReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)\n  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue).ContainsKey(TKey)\n  commentId: M:System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)\n- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.CopyTo(System.Collections.Generic.KeyValuePair{{TKey},{TValue}}[],System.Int32)\n  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}\n  definition: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)\n  name: CopyTo(KeyValuePair<TKey, TValue>[], Int32)\n  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.CopyTo(System.Collections.Generic.KeyValuePair<TKey, TValue>[], System.Int32)\n  fullname.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).CopyTo(System.Collections.Generic.KeyValuePair(Of TKey, TValue)(), System.Int32)\n  name.vb: CopyTo(KeyValuePair(Of TKey, TValue)(), Int32)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)\n    name: CopyTo\n    fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.CopyTo\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)\n    name: CopyTo\n    fullName: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).CopyTo\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: ICollection<KeyValuePair<TKey, TValue>>.CopyTo(KeyValuePair<TKey, TValue>[], Int32)\n  nameWithType.vb: ICollection(Of KeyValuePair(Of TKey, TValue)).CopyTo(KeyValuePair(Of TKey, TValue)(), Int32)\n  commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)\n- uid: System.Collections.Generic.KeyValuePair{{TKey},{TValue}}[]\n  name: KeyValuePair<TKey, TValue>[]\n  fullName: System.Collections.Generic.KeyValuePair<TKey, TValue>[]\n  fullname.vb: System.Collections.Generic.KeyValuePair(Of TKey, TValue)()\n  name.vb: KeyValuePair(Of TKey, TValue)()\n  spec.csharp:\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ()\n    fullName: ()\n  nameWithType: KeyValuePair<TKey, TValue>[]\n  nameWithType.vb: KeyValuePair(Of TKey, TValue)()\n- uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)\n  isExternal: true\n  name: CopyTo(T[], Int32)\n  fullName: System.Collections.Generic.ICollection<T>.CopyTo(T[], System.Int32)\n  fullname.vb: System.Collections.Generic.ICollection(Of T).CopyTo(T(), System.Int32)\n  name.vb: CopyTo(T(), Int32)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)\n    name: CopyTo\n    fullName: System.Collections.Generic.ICollection<T>.CopyTo\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)\n    name: CopyTo\n    fullName: System.Collections.Generic.ICollection(Of T).CopyTo\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: ICollection<T>.CopyTo(T[], Int32)\n  nameWithType.vb: ICollection(Of T).CopyTo(T(), Int32)\n  commentId: M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)\n- uid: System.Collections.Generic.SortedDictionary`2.Enumerator\n  parent: System.Collections.Generic\n  isExternal: false\n  name: SortedDictionary.Enumerator<>\n  fullName: System.Collections.Generic.SortedDictionary.Enumerator<>\n  fullname.vb: System.Collections.Generic.SortedDictionary.Enumerator(Of )\n  name.vb: SortedDictionary.Enumerator(Of )\n  spec.csharp:\n  - uid: System.Collections.Generic.SortedDictionary`2.Enumerator\n    name: SortedDictionary.Enumerator\n    fullName: System.Collections.Generic.SortedDictionary.Enumerator\n  - name: <\n    fullName: <\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.SortedDictionary`2.Enumerator\n    name: SortedDictionary.Enumerator\n    fullName: System.Collections.Generic.SortedDictionary.Enumerator\n  - name: '(Of '\n    fullName: '(Of '\n  - name: )\n    fullName: )\n  nameWithType: SortedDictionary.Enumerator<>\n  nameWithType.vb: SortedDictionary.Enumerator(Of )\n  commentId: T:System.Collections.Generic.SortedDictionary`2.Enumerator\n- uid: System.Collections.Generic.IDictionary{{TKey},{TValue}}.Remove({TKey})\n  parent: System.Collections.Generic.IDictionary{{TKey},{TValue}}\n  definition: System.Collections.Generic.IDictionary`2.Remove(`0)\n  name: Remove(TKey)\n  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Remove(TKey)\n  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Remove(TKey)\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2.Remove(`0)\n    name: Remove\n    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Remove\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.IDictionary`2.Remove(`0)\n    name: Remove\n    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).Remove\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  nameWithType: IDictionary<TKey, TValue>.Remove(TKey)\n  nameWithType.vb: IDictionary(Of TKey, TValue).Remove(TKey)\n  commentId: M:System.Collections.Generic.IDictionary{`0,`1}.Remove(`0)\n- uid: System.Collections.Generic.IDictionary`2.Remove(`0)\n  isExternal: true\n  name: Remove(TKey)\n  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Remove(TKey)\n  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Remove(TKey)\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2.Remove(`0)\n    name: Remove\n    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Remove\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.IDictionary`2.Remove(`0)\n    name: Remove\n    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).Remove\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  nameWithType: IDictionary<TKey, TValue>.Remove(TKey)\n  nameWithType.vb: IDictionary(Of TKey, TValue).Remove(TKey)\n  commentId: M:System.Collections.Generic.IDictionary`2.Remove(`0)\n- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Add(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})\n  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}\n  definition: System.Collections.Generic.ICollection`1.Add(`0)\n  name: Add(KeyValuePair<TKey, TValue>)\n  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Add(System.Collections.Generic.KeyValuePair<TKey, TValue>)\n  fullname.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).Add(System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  name.vb: Add(KeyValuePair(Of TKey, TValue))\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.Add(`0)\n    name: Add\n    fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Add\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.Add(`0)\n    name: Add\n    fullName: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).Add\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: ICollection<KeyValuePair<TKey, TValue>>.Add(KeyValuePair<TKey, TValue>)\n  nameWithType.vb: ICollection(Of KeyValuePair(Of TKey, TValue)).Add(KeyValuePair(Of TKey, TValue))\n  commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.Add(System.Collections.Generic.KeyValuePair{`0,`1})\n- uid: System.Collections.Generic.KeyValuePair{{TKey},{TValue}}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.KeyValuePair`2\n  name: KeyValuePair<TKey, TValue>\n  fullName: System.Collections.Generic.KeyValuePair<TKey, TValue>\n  fullname.vb: System.Collections.Generic.KeyValuePair(Of TKey, TValue)\n  name.vb: KeyValuePair(Of TKey, TValue)\n  spec.csharp:\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  nameWithType: KeyValuePair<TKey, TValue>\n  nameWithType.vb: KeyValuePair(Of TKey, TValue)\n  commentId: T:System.Collections.Generic.KeyValuePair{`0,`1}\n- uid: System.Collections.Generic.ICollection`1.Add(`0)\n  isExternal: false\n  name: Add(T)\n  fullName: System.Collections.Generic.ICollection<T>.Add(T)\n  fullname.vb: System.Collections.Generic.ICollection(Of T).Add(T)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.Add(`0)\n    name: Add\n    fullName: System.Collections.Generic.ICollection<T>.Add\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.Add(`0)\n    name: Add\n    fullName: System.Collections.Generic.ICollection(Of T).Add\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: ICollection<T>.Add(T)\n  nameWithType.vb: ICollection(Of T).Add(T)\n  commentId: M:System.Collections.Generic.ICollection`1.Add(`0)\n- uid: System.Collections.Generic.KeyValuePair`2\n  isExternal: false\n  name: KeyValuePair<TKey, TValue>\n  fullName: System.Collections.Generic.KeyValuePair<TKey, TValue>\n  fullname.vb: System.Collections.Generic.KeyValuePair(Of TKey, TValue)\n  name.vb: KeyValuePair(Of TKey, TValue)\n  spec.csharp:\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  nameWithType: KeyValuePair<TKey, TValue>\n  nameWithType.vb: KeyValuePair(Of TKey, TValue)\n  commentId: T:System.Collections.Generic.KeyValuePair`2\n- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Contains(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})\n  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}\n  definition: System.Collections.Generic.ICollection`1.Contains(`0)\n  name: Contains(KeyValuePair<TKey, TValue>)\n  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Contains(System.Collections.Generic.KeyValuePair<TKey, TValue>)\n  fullname.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).Contains(System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  name.vb: Contains(KeyValuePair(Of TKey, TValue))\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.Contains(`0)\n    name: Contains\n    fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Contains\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.Contains(`0)\n    name: Contains\n    fullName: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).Contains\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: ICollection<KeyValuePair<TKey, TValue>>.Contains(KeyValuePair<TKey, TValue>)\n  nameWithType.vb: ICollection(Of KeyValuePair(Of TKey, TValue)).Contains(KeyValuePair(Of TKey, TValue))\n  commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.Contains(System.Collections.Generic.KeyValuePair{`0,`1})\n- uid: System.Collections.Generic.ICollection`1.Contains(`0)\n  isExternal: false\n  name: Contains(T)\n  fullName: System.Collections.Generic.ICollection<T>.Contains(T)\n  fullname.vb: System.Collections.Generic.ICollection(Of T).Contains(T)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.Contains(`0)\n    name: Contains\n    fullName: System.Collections.Generic.ICollection<T>.Contains\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.Contains(`0)\n    name: Contains\n    fullName: System.Collections.Generic.ICollection(Of T).Contains\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: ICollection<T>.Contains(T)\n  nameWithType.vb: ICollection(Of T).Contains(T)\n  commentId: M:System.Collections.Generic.ICollection`1.Contains(`0)\n- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Remove(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})\n  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}\n  definition: System.Collections.Generic.ICollection`1.Remove(`0)\n  name: Remove(KeyValuePair<TKey, TValue>)\n  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Remove(System.Collections.Generic.KeyValuePair<TKey, TValue>)\n  fullname.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).Remove(System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  name.vb: Remove(KeyValuePair(Of TKey, TValue))\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.Remove(`0)\n    name: Remove\n    fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Remove\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.Remove(`0)\n    name: Remove\n    fullName: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).Remove\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: ICollection<KeyValuePair<TKey, TValue>>.Remove(KeyValuePair<TKey, TValue>)\n  nameWithType.vb: ICollection(Of KeyValuePair(Of TKey, TValue)).Remove(KeyValuePair(Of TKey, TValue))\n  commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.Remove(System.Collections.Generic.KeyValuePair{`0,`1})\n- uid: System.Collections.Generic.ICollection`1.Remove(`0)\n  isExternal: false\n  name: Remove(T)\n  fullName: System.Collections.Generic.ICollection<T>.Remove(T)\n  fullname.vb: System.Collections.Generic.ICollection(Of T).Remove(T)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.Remove(`0)\n    name: Remove\n    fullName: System.Collections.Generic.ICollection<T>.Remove\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.Remove(`0)\n    name: Remove\n    fullName: System.Collections.Generic.ICollection(Of T).Remove\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: ICollection<T>.Remove(T)\n  nameWithType.vb: ICollection(Of T).Remove(T)\n  commentId: M:System.Collections.Generic.ICollection`1.Remove(`0)\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.GetEnumerator\n  parent: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}\n  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator\n  name: GetEnumerator()\n  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>.GetEnumerator()\n  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).GetEnumerator()\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>.GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: IEnumerable<KeyValuePair<TKey, TValue>>.GetEnumerator()\n  nameWithType.vb: IEnumerable(Of KeyValuePair(Of TKey, TValue)).GetEnumerator()\n  commentId: M:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.GetEnumerator\n- uid: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IEnumerator`1\n  name: IEnumerator<KeyValuePair<TKey, TValue>>\n  fullName: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  fullname.vb: System.Collections.Generic.IEnumerator(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  name.vb: IEnumerator(Of KeyValuePair(Of TKey, TValue))\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    fullName: System.Collections.Generic.IEnumerator\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    fullName: System.Collections.Generic.IEnumerator\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: IEnumerator<KeyValuePair<TKey, TValue>>\n  nameWithType.vb: IEnumerator(Of KeyValuePair(Of TKey, TValue))\n  commentId: T:System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{`0,`1}}\n- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator\n  isExternal: false\n  name: GetEnumerator()\n  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()\n  fullname.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: IEnumerable<T>.GetEnumerator()\n  nameWithType.vb: IEnumerable(Of T).GetEnumerator()\n  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator\n- uid: System.Collections.Generic.IEnumerator`1\n  isExternal: false\n  name: IEnumerator<T>\n  fullName: System.Collections.Generic.IEnumerator<T>\n  fullname.vb: System.Collections.Generic.IEnumerator(Of T)\n  name.vb: IEnumerator(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    fullName: System.Collections.Generic.IEnumerator\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    fullName: System.Collections.Generic.IEnumerator\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: IEnumerator<T>\n  nameWithType.vb: IEnumerator(Of T)\n  commentId: T:System.Collections.Generic.IEnumerator`1\n- uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)\n  parent: System.Collections.ICollection\n  isExternal: true\n  name: CopyTo(Array, Int32)\n  fullName: System.Collections.ICollection.CopyTo(System.Array, System.Int32)\n  spec.csharp:\n  - uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)\n    name: CopyTo\n    fullName: System.Collections.ICollection.CopyTo\n  - name: (\n    fullName: (\n  - uid: System.Array\n    name: Array\n    fullName: System.Array\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)\n    name: CopyTo\n    fullName: System.Collections.ICollection.CopyTo\n  - name: (\n    fullName: (\n  - uid: System.Array\n    name: Array\n    fullName: System.Array\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: ICollection.CopyTo(Array, Int32)\n  commentId: M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  fullName: System.Array\n  nameWithType: Array\n  commentId: T:System.Array\n- uid: System.Collections.IDictionary.Add(System.Object,System.Object)\n  parent: System.Collections.IDictionary\n  isExternal: true\n  name: Add(Object, Object)\n  fullName: System.Collections.IDictionary.Add(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Collections.IDictionary.Add(System.Object,System.Object)\n    name: Add\n    fullName: System.Collections.IDictionary.Add\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.IDictionary.Add(System.Object,System.Object)\n    name: Add\n    fullName: System.Collections.IDictionary.Add\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: IDictionary.Add(Object, Object)\n  commentId: M:System.Collections.IDictionary.Add(System.Object,System.Object)\n- uid: System.Collections.IDictionary.Contains(System.Object)\n  parent: System.Collections.IDictionary\n  isExternal: true\n  name: Contains(Object)\n  fullName: System.Collections.IDictionary.Contains(System.Object)\n  spec.csharp:\n  - uid: System.Collections.IDictionary.Contains(System.Object)\n    name: Contains\n    fullName: System.Collections.IDictionary.Contains\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.IDictionary.Contains(System.Object)\n    name: Contains\n    fullName: System.Collections.IDictionary.Contains\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: IDictionary.Contains(Object)\n  commentId: M:System.Collections.IDictionary.Contains(System.Object)\n- uid: System.Collections.IDictionary.GetEnumerator\n  parent: System.Collections.IDictionary\n  isExternal: true\n  name: GetEnumerator()\n  fullName: System.Collections.IDictionary.GetEnumerator()\n  spec.csharp:\n  - uid: System.Collections.IDictionary.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Collections.IDictionary.GetEnumerator\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.IDictionary.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Collections.IDictionary.GetEnumerator\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: IDictionary.GetEnumerator()\n  commentId: M:System.Collections.IDictionary.GetEnumerator\n- uid: System.Collections.IDictionaryEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IDictionaryEnumerator\n  fullName: System.Collections.IDictionaryEnumerator\n  nameWithType: IDictionaryEnumerator\n  commentId: T:System.Collections.IDictionaryEnumerator\n- uid: System.Collections.IDictionary.Remove(System.Object)\n  parent: System.Collections.IDictionary\n  isExternal: true\n  name: Remove(Object)\n  fullName: System.Collections.IDictionary.Remove(System.Object)\n  spec.csharp:\n  - uid: System.Collections.IDictionary.Remove(System.Object)\n    name: Remove\n    fullName: System.Collections.IDictionary.Remove\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.IDictionary.Remove(System.Object)\n    name: Remove\n    fullName: System.Collections.IDictionary.Remove\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: IDictionary.Remove(Object)\n  commentId: M:System.Collections.IDictionary.Remove(System.Object)\n- uid: System.Collections.IEnumerable.GetEnumerator\n  parent: System.Collections.IEnumerable\n  isExternal: false\n  name: GetEnumerator()\n  fullName: System.Collections.IEnumerable.GetEnumerator()\n  spec.csharp:\n  - uid: System.Collections.IEnumerable.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Collections.IEnumerable.GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.IEnumerable.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Collections.IEnumerable.GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: IEnumerable.GetEnumerator()\n  commentId: M:System.Collections.IEnumerable.GetEnumerator\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  fullName: System.Collections.IEnumerator\n  nameWithType: IEnumerator\n  commentId: T:System.Collections.IEnumerator\n- uid: System.Collections.Generic.IDictionary{{TKey},{TValue}}.TryGetValue({TKey},{TValue}@)\n  parent: System.Collections.Generic.IDictionary{{TKey},{TValue}}\n  definition: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)\n  name: TryGetValue(TKey, TValue)\n  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, TValue)\n  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)\n    name: TryGetValue\n    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)\n    name: TryGetValue\n    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).TryGetValue\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  nameWithType: IDictionary<TKey, TValue>.TryGetValue(TKey, TValue)\n  nameWithType.vb: IDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)\n  commentId: M:System.Collections.Generic.IDictionary{`0,`1}.TryGetValue(`0,`1@)\n- uid: System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}.TryGetValue({TKey},{TValue}@)\n  parent: System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}\n  definition: System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)\n  name: TryGetValue(TKey, TValue)\n  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, TValue)\n  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)\n  spec.csharp:\n  - uid: System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)\n    name: TryGetValue\n    fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.TryGetValue\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)\n    name: TryGetValue\n    fullName: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue).TryGetValue\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  nameWithType: IReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, TValue)\n  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)\n  commentId: M:System.Collections.Generic.IReadOnlyDictionary{`0,`1}.TryGetValue(`0,`1@)\n- uid: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)\n  isExternal: true\n  name: TryGetValue(TKey, TValue)\n  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, TValue)\n  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)\n    name: TryGetValue\n    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)\n    name: TryGetValue\n    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).TryGetValue\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  nameWithType: IDictionary<TKey, TValue>.TryGetValue(TKey, TValue)\n  nameWithType.vb: IDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)\n  commentId: M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)\n- uid: System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)\n  isExternal: true\n  name: TryGetValue(TKey, TValue)\n  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, TValue)\n  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)\n  spec.csharp:\n  - uid: System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)\n    name: TryGetValue\n    fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.TryGetValue\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)\n    name: TryGetValue\n    fullName: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue).TryGetValue\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  nameWithType: IReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, TValue)\n  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)\n  commentId: M:System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n- uid: System.Collections.Generic.KeyNotFoundException\n  isExternal: false\n  name: KeyNotFoundException\n  fullName: System.Collections.Generic.KeyNotFoundException\n  nameWithType: KeyNotFoundException\n  commentId: T:System.Collections.Generic.KeyNotFoundException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  commentId: T:System.ArgumentOutOfRangeException\n"}