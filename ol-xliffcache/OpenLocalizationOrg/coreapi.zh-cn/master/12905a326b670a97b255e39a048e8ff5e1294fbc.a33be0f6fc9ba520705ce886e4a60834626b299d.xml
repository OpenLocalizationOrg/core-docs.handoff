{"nodes":[{"pos":[355,366],"content":"DbException","needQuote":true,"nodes":[{"content":"DbException","pos":[0,11]}]},{"pos":[2331,2344],"content":"DbException()","needQuote":true,"nodes":[{"content":"DbException()","pos":[0,13]}]},{"pos":[3333,3352],"content":"DbException(String)","needQuote":true,"nodes":[{"content":"DbException(String)","pos":[0,19]}]},{"content":"\\n&lt;p&gt;The message to display for this exception.&lt;/p&gt;\\n","pos":[4163,4216],"source":"\\n<p>The message to display for this exception.</p>\\n"},{"pos":[4612,4642],"content":"DbException(String, Exception)","needQuote":true,"nodes":[{"content":"DbException(String, Exception)","pos":[0,30]}]},{"content":"\\n&lt;p&gt;The error message string.&lt;/p&gt;\\n","pos":[5601,5637],"source":"\\n<p>The error message string.</p>\\n"},{"content":"\\n&lt;p&gt;The inner exception reference.&lt;/p&gt;\\n","pos":[5713,5754],"source":"\\n<p>The inner exception reference.</p>\\n"},{"pos":[5945,5963],"content":"System.Data.Common","needQuote":true,"nodes":[{"content":"System.Data.Common","pos":[0,18]}]},{"pos":[6130,6136],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6284,6293],"content":"Exception","needQuote":true,"nodes":[{"content":"Exception","pos":[0,9]}]},{"pos":[6498,6511],"content":"ISerializable","needQuote":true,"nodes":[{"content":"ISerializable","pos":[0,13]}]},{"pos":[6772,6782],"content":"_Exception","needQuote":true,"nodes":[{"content":"_Exception","pos":[0,10]}]},{"pos":[7017,7035],"content":"GetBaseException()","needQuote":true,"nodes":[{"content":"GetBaseException()","pos":[0,18]}]},{"pos":[7152,7168],"content":"GetBaseException","needQuote":true,"nodes":[{"content":"GetBaseException","pos":[0,16]}]},{"pos":[7227,7228],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7255,7256],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7337,7353],"content":"GetBaseException","needQuote":true,"nodes":[{"content":"GetBaseException","pos":[0,16]}]},{"pos":[7412,7413],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7440,7441],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7640,7650],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[7751,7759],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[7810,7811],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7838,7839],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7912,7920],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[7971,7972],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7999,8000],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8281,8331],"content":"GetObjectData(SerializationInfo, StreamingContext)","needQuote":true,"nodes":[{"content":"GetObjectData(SerializationInfo, StreamingContext)","pos":[0,50]}]},{"pos":[8629,8642],"content":"GetObjectData","needQuote":true,"nodes":[{"content":"GetObjectData","pos":[0,13]}]},{"pos":[8719,8720],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8803,8820],"content":"SerializationInfo","needQuote":true,"nodes":[{"content":"SerializationInfo","pos":[0,17]}]},{"content":",","pos":[8914,8915]},{"pos":[9002,9018],"content":"StreamingContext","needQuote":true,"nodes":[{"content":"StreamingContext","pos":[0,16]}]},{"pos":[9110,9111],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9283,9296],"content":"GetObjectData","needQuote":true,"nodes":[{"content":"GetObjectData","pos":[0,13]}]},{"pos":[9373,9374],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9457,9474],"content":"SerializationInfo","needQuote":true,"nodes":[{"content":"SerializationInfo","pos":[0,17]}]},{"content":",","pos":[9568,9569]},{"pos":[9656,9672],"content":"StreamingContext","needQuote":true,"nodes":[{"content":"StreamingContext","pos":[0,16]}]},{"pos":[9764,9765],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10085,10094],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[10193,10200],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[10271,10272],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10299,10300],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10372,10379],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[10450,10451],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10478,10479],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10659,10666],"content":"Message","needQuote":true,"nodes":[{"content":"Message","pos":[0,7]}]},{"pos":[10862,10866],"content":"Data","needQuote":true,"nodes":[{"content":"Data","pos":[0,4]}]},{"pos":[11063,11077],"content":"InnerException","needQuote":true,"nodes":[{"content":"InnerException","pos":[0,14]}]},{"pos":[11299,11309],"content":"TargetSite","needQuote":true,"nodes":[{"content":"TargetSite","pos":[0,10]}]},{"pos":[11520,11530],"content":"StackTrace","needQuote":true,"nodes":[{"content":"StackTrace","pos":[0,10]}]},{"pos":[11739,11747],"content":"HelpLink","needQuote":true,"nodes":[{"content":"HelpLink","pos":[0,8]}]},{"pos":[11948,11954],"content":"Source","needQuote":true,"nodes":[{"content":"Source","pos":[0,6]}]},{"pos":[12150,12157],"content":"HResult","needQuote":true,"nodes":[{"content":"HResult","pos":[0,7]}]},{"pos":[12368,12388],"content":"SerializeObjectState","needQuote":true,"nodes":[{"content":"SerializeObjectState","pos":[0,20]}]},{"pos":[12633,12647],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[12766,12772],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[12839,12840],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12890,12896],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12956,12957],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13040,13046],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[13113,13114],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13164,13170],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13230,13231],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13445,13467],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[13615,13621],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[13688,13689],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13739,13745],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[13806,13807]},{"pos":[13862,13868],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13928,13929],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14026,14032],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[14099,14100],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14150,14156],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[14217,14218]},{"pos":[14273,14279],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14339,14340],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14585,14616],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[14782,14797],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[14873,14874],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14924,14930],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[14991,14992]},{"pos":[15047,15053],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15113,15114],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15220,15235],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[15311,15312],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15362,15368],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[15429,15430]},{"pos":[15485,15491],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15551,15552],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15782,15795],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[15896,15907],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[15979,15980],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16007,16008],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16081,16092],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[16164,16165],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16192,16193],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16376,16393],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[16502,16517],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[16593,16594],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16621,16622],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16699,16714],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[16790,16791],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16818,16819],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16964,16970],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[17099,17127],"content":"System.Runtime.Serialization","needQuote":true,"nodes":[{"content":"System.Runtime.Serialization","pos":[0,28]}]},{"pos":[17324,17354],"content":"System.Runtime.InteropServices","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices","pos":[0,30]}]},{"pos":[17557,17563],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"items:\n- uid: System.Data.Common.DbException\n  commentId: T:System.Data.Common.DbException\n  id: DbException\n  parent: System.Data.Common\n  children:\n  - System.Data.Common.DbException.#ctor\n  - System.Data.Common.DbException.#ctor(System.String)\n  - System.Data.Common.DbException.#ctor(System.String,System.Exception)\n  langs:\n  - csharp\n  - vb\n  name: DbException\n  fullName: System.Data.Common.DbException\n  type: Class\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/Common/DbException.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: DbException\n    path: src/System.Data.Common/src/System/Data/Common/DbException.cs\n    startLine: 10\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data.Common\n  summary: \"\\n<p>The base class for all exceptions thrown on behalf of the data source.</p>\\n\"\n  syntax:\n    content: 'public abstract class DbException : Exception, ISerializable, _Exception'\n    content.vb: >-\n      Public MustInherit Class DbException\n          Inherits Exception\n          Implements ISerializable, _Exception\n  inheritance:\n  - System.Object\n  - System.Exception\n  implements:\n  - System.Runtime.Serialization.ISerializable\n  - System.Runtime.InteropServices._Exception\n  inheritedMembers:\n  - System.Exception.GetBaseException\n  - System.Exception.ToString\n  - System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Exception.GetType\n  - System.Exception.Message\n  - System.Exception.Data\n  - System.Exception.InnerException\n  - System.Exception.TargetSite\n  - System.Exception.StackTrace\n  - System.Exception.HelpLink\n  - System.Exception.Source\n  - System.Exception.HResult\n  - System.Exception.SerializeObjectState\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - abstract\n  - class\n  modifiers.vb:\n  - Public\n  - MustInherit\n  - Class\n  nameWithType: DbException\n- uid: System.Data.Common.DbException.#ctor\n  commentId: M:System.Data.Common.DbException.#ctor\n  id: '#ctor'\n  parent: System.Data.Common.DbException\n  langs:\n  - csharp\n  - vb\n  name: DbException()\n  fullName: System.Data.Common.DbException.DbException()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/Common/DbException.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Data.Common/src/System/Data/Common/DbException.cs\n    startLine: 13\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data.Common\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Data.Common.DbException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: protected DbException()\n    content.vb: Protected Sub New\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: DbException.DbException()\n- uid: System.Data.Common.DbException.#ctor(System.String)\n  commentId: M:System.Data.Common.DbException.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Data.Common.DbException\n  langs:\n  - csharp\n  - vb\n  name: DbException(String)\n  fullName: System.Data.Common.DbException.DbException(System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/Common/DbException.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Data.Common/src/System/Data/Common/DbException.cs\n    startLine: 17\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data.Common\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Data.Common.DbException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified error message.</p>\\n\"\n  syntax:\n    content: protected DbException(string message)\n    content.vb: Protected Sub New(message As String)\n    parameters:\n    - id: message\n      type: System.String\n      description: \"\\n<p>The message to display for this exception.</p>\\n\"\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: DbException.DbException(String)\n- uid: System.Data.Common.DbException.#ctor(System.String,System.Exception)\n  commentId: M:System.Data.Common.DbException.#ctor(System.String,System.Exception)\n  id: '#ctor(System.String,System.Exception)'\n  parent: System.Data.Common.DbException\n  langs:\n  - csharp\n  - vb\n  name: DbException(String, Exception)\n  fullName: System.Data.Common.DbException.DbException(System.String, System.Exception)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/Common/DbException.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Data.Common/src/System/Data/Common/DbException.cs\n    startLine: 21\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data.Common\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Data.Common.DbException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified error message and a reference to the inner exception that is the cause of this exception.</p>\\n\"\n  syntax:\n    content: protected DbException(string message, Exception innerException)\n    content.vb: Protected Sub New(message As String, innerException As Exception)\n    parameters:\n    - id: message\n      type: System.String\n      description: \"\\n<p>The error message string.</p>\\n\"\n    - id: innerException\n      type: System.Exception\n      description: \"\\n<p>The inner exception reference.</p>\\n\"\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: DbException.DbException(String, Exception)\nreferences:\n- uid: System.Data.Common\n  isExternal: false\n  name: System.Data.Common\n  fullName: System.Data.Common\n  nameWithType: System.Data.Common\n  commentId: N:System.Data.Common\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  fullName: System.Exception\n  nameWithType: Exception\n  commentId: T:System.Exception\n- uid: System.Runtime.Serialization.ISerializable\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: ISerializable\n  fullName: System.Runtime.Serialization.ISerializable\n  nameWithType: ISerializable\n  commentId: T:System.Runtime.Serialization.ISerializable\n- uid: System.Runtime.InteropServices._Exception\n  parent: System.Runtime.InteropServices\n  isExternal: true\n  name: _Exception\n  fullName: System.Runtime.InteropServices._Exception\n  nameWithType: _Exception\n  commentId: T:System.Runtime.InteropServices._Exception\n- uid: System.Exception.GetBaseException\n  parent: System.Exception\n  isExternal: false\n  name: GetBaseException()\n  fullName: System.Exception.GetBaseException()\n  spec.csharp:\n  - uid: System.Exception.GetBaseException\n    name: GetBaseException\n    fullName: System.Exception.GetBaseException\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Exception.GetBaseException\n    name: GetBaseException\n    fullName: System.Exception.GetBaseException\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Exception.GetBaseException()\n  commentId: M:System.Exception.GetBaseException\n- uid: System.Exception.ToString\n  parent: System.Exception\n  isExternal: false\n  name: ToString()\n  fullName: System.Exception.ToString()\n  spec.csharp:\n  - uid: System.Exception.ToString\n    name: ToString\n    fullName: System.Exception.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Exception.ToString\n    name: ToString\n    fullName: System.Exception.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Exception.ToString()\n  commentId: M:System.Exception.ToString\n- uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Exception\n  isExternal: true\n  name: GetObjectData(SerializationInfo, StreamingContext)\n  fullName: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)\n  spec.csharp:\n  - uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n    name: GetObjectData\n    fullName: System.Exception.GetObjectData\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Runtime.Serialization.SerializationInfo\n    name: SerializationInfo\n    fullName: System.Runtime.Serialization.SerializationInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Runtime.Serialization.StreamingContext\n    name: StreamingContext\n    fullName: System.Runtime.Serialization.StreamingContext\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n    name: GetObjectData\n    fullName: System.Exception.GetObjectData\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Runtime.Serialization.SerializationInfo\n    name: SerializationInfo\n    fullName: System.Runtime.Serialization.SerializationInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Runtime.Serialization.StreamingContext\n    name: StreamingContext\n    fullName: System.Runtime.Serialization.StreamingContext\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Exception.GetObjectData(SerializationInfo, StreamingContext)\n  commentId: M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n- uid: System.Exception.GetType\n  parent: System.Exception\n  isExternal: true\n  name: GetType()\n  fullName: System.Exception.GetType()\n  spec.csharp:\n  - uid: System.Exception.GetType\n    name: GetType\n    fullName: System.Exception.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Exception.GetType\n    name: GetType\n    fullName: System.Exception.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Exception.GetType()\n  commentId: M:System.Exception.GetType\n- uid: System.Exception.Message\n  parent: System.Exception\n  isExternal: false\n  name: Message\n  fullName: System.Exception.Message\n  nameWithType: Exception.Message\n  commentId: P:System.Exception.Message\n- uid: System.Exception.Data\n  parent: System.Exception\n  isExternal: false\n  name: Data\n  fullName: System.Exception.Data\n  nameWithType: Exception.Data\n  commentId: P:System.Exception.Data\n- uid: System.Exception.InnerException\n  parent: System.Exception\n  isExternal: false\n  name: InnerException\n  fullName: System.Exception.InnerException\n  nameWithType: Exception.InnerException\n  commentId: P:System.Exception.InnerException\n- uid: System.Exception.TargetSite\n  parent: System.Exception\n  isExternal: true\n  name: TargetSite\n  fullName: System.Exception.TargetSite\n  nameWithType: Exception.TargetSite\n  commentId: P:System.Exception.TargetSite\n- uid: System.Exception.StackTrace\n  parent: System.Exception\n  isExternal: false\n  name: StackTrace\n  fullName: System.Exception.StackTrace\n  nameWithType: Exception.StackTrace\n  commentId: P:System.Exception.StackTrace\n- uid: System.Exception.HelpLink\n  parent: System.Exception\n  isExternal: false\n  name: HelpLink\n  fullName: System.Exception.HelpLink\n  nameWithType: Exception.HelpLink\n  commentId: P:System.Exception.HelpLink\n- uid: System.Exception.Source\n  parent: System.Exception\n  isExternal: false\n  name: Source\n  fullName: System.Exception.Source\n  nameWithType: Exception.Source\n  commentId: P:System.Exception.Source\n- uid: System.Exception.HResult\n  parent: System.Exception\n  isExternal: false\n  name: HResult\n  fullName: System.Exception.HResult\n  nameWithType: Exception.HResult\n  commentId: P:System.Exception.HResult\n- uid: System.Exception.SerializeObjectState\n  parent: System.Exception\n  isExternal: true\n  name: SerializeObjectState\n  fullName: System.Exception.SerializeObjectState\n  nameWithType: Exception.SerializeObjectState\n  commentId: E:System.Exception.SerializeObjectState\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Runtime.Serialization\n  isExternal: false\n  name: System.Runtime.Serialization\n  fullName: System.Runtime.Serialization\n  nameWithType: System.Runtime.Serialization\n  commentId: N:System.Runtime.Serialization\n- uid: System.Runtime.InteropServices\n  isExternal: false\n  name: System.Runtime.InteropServices\n  fullName: System.Runtime.InteropServices\n  nameWithType: System.Runtime.InteropServices\n  commentId: N:System.Runtime.InteropServices\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n"}