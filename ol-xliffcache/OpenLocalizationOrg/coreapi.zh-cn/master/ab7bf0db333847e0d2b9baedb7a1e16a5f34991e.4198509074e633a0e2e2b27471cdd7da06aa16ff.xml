{"nodes":[{"pos":[737,744],"content":"XObject","needQuote":true,"nodes":[{"content":"XObject","pos":[0,7]}]},{"pos":[1686,1693],"content":"BaseUri","needQuote":true,"nodes":[{"content":"BaseUri","pos":[0,7]}]},{"pos":[2896,2904],"content":"Document","needQuote":true,"nodes":[{"content":"Document","pos":[0,8]}]},{"pos":[4195,4203],"content":"NodeType","needQuote":true,"nodes":[{"content":"NodeType","pos":[0,8]}]},{"pos":[5389,5395],"content":"Parent","needQuote":true,"nodes":[{"content":"Parent","pos":[0,6]}]},{"pos":[6679,6686],"content":"Changed","needQuote":true,"nodes":[{"content":"Changed","pos":[0,7]}]},{"pos":[7740,7748],"content":"Changing","needQuote":true,"nodes":[{"content":"Changing","pos":[0,8]}]},{"pos":[8874,8895],"content":"AddAnnotation(Object)","needQuote":true,"nodes":[{"content":"AddAnnotation(Object)","pos":[0,21]}]},{"pos":[10121,10137],"content":"Annotation(Type)","needQuote":true,"nodes":[{"content":"Annotation(Type)","pos":[0,16]}]},{"pos":[11610,11625],"content":"Annotation<T>()","needQuote":true,"nodes":[{"content":"Annotation&lt;T&gt;()","pos":[0,15],"source":"Annotation<T>()"}]},{"content":"\\n&lt;p&gt;The type of the annotation to retrieve.&lt;/p&gt;\\n","pos":[12373,12423],"source":"\\n<p>The type of the annotation to retrieve.</p>\\n"},{"content":"\\n&lt;p&gt;The first annotation object that matches the specified type, or &lt;strong&gt;null&lt;/strong&gt; if no annotation is of the specified type.&lt;/p&gt;\\n","pos":[12475,12614],"source":"\\n<p>The first annotation object that matches the specified type, or <strong>null</strong> if no annotation is of the specified type.</p>\\n"},{"pos":[13068,13085],"content":"Annotations(Type)","needQuote":true,"nodes":[{"content":"Annotations(Type)","pos":[0,17]}]},{"pos":[14749,14765],"content":"Annotations<T>()","needQuote":true,"nodes":[{"content":"Annotations&lt;T&gt;()","pos":[0,16],"source":"Annotations<T>()"}]},{"content":"\\n&lt;p&gt;The type of the annotations to retrieve.&lt;/p&gt;\\n","pos":[15545,15596],"source":"\\n<p>The type of the annotations to retrieve.</p>\\n"},{"pos":[16400,16423],"content":"RemoveAnnotations(Type)","needQuote":true,"nodes":[{"content":"RemoveAnnotations(Type)","pos":[0,23]}]},{"pos":[17630,17652],"content":"RemoveAnnotations<T>()","needQuote":true,"nodes":[{"content":"RemoveAnnotations&lt;T&gt;()","pos":[0,22],"source":"RemoveAnnotations<T>()"}]},{"content":"\\n&lt;p&gt;The type of annotations to remove.&lt;/p&gt;\\n","pos":[18412,18457],"source":"\\n<p>The type of annotations to remove.</p>\\n"},{"pos":[18782,18797],"content":"System.Xml.Linq","needQuote":true,"nodes":[{"content":"System.Xml.Linq","pos":[0,15]}]},{"pos":[18955,18961],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[19082,19088],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[19219,19225],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[19391,19400],"content":"XDocument","needQuote":true,"nodes":[{"content":"XDocument","pos":[0,9]}]},{"pos":[19585,19596],"content":"XmlNodeType","needQuote":true,"nodes":[{"content":"XmlNodeType","pos":[0,11]}]},{"pos":[19744,19754],"content":"System.Xml","needQuote":true,"nodes":[{"content":"System.Xml","pos":[0,10]}]},{"pos":[19917,19925],"content":"XElement","needQuote":true,"nodes":[{"content":"XElement","pos":[0,8]}]},{"pos":[20156,20192],"content":"EventHandler<XObjectChangeEventArgs>","needQuote":true,"nodes":[{"content":"EventHandler&lt;XObjectChangeEventArgs&gt;","pos":[0,36],"source":"EventHandler<XObjectChangeEventArgs>"}]},{"pos":[20450,20462],"content":"EventHandler","needQuote":true,"nodes":[{"content":"EventHandler","pos":[0,12]}]},{"pos":[20528,20529],"content":"<","needQuote":true,"nodes":[]},{"pos":[20604,20626],"content":"XObjectChangeEventArgs","needQuote":true,"nodes":[{"content":"XObjectChangeEventArgs","pos":[0,22]}]},{"pos":[20764,20776],"content":"EventHandler","needQuote":true,"nodes":[{"content":"EventHandler","pos":[0,12]}]},{"content":"(Of","pos":[20843,20846]},{"pos":[20928,20950],"content":"XObjectChangeEventArgs","needQuote":true,"nodes":[{"content":"XObjectChangeEventArgs","pos":[0,22]}]},{"pos":[21014,21015],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21276,21300],"content":"EventHandler<TEventArgs>","needQuote":true,"nodes":[{"content":"EventHandler&lt;TEventArgs&gt;","pos":[0,24],"source":"EventHandler<TEventArgs>"}]},{"pos":[21490,21502],"content":"EventHandler","needQuote":true,"nodes":[{"content":"EventHandler","pos":[0,12]}]},{"pos":[21547,21548],"content":"<","needQuote":true,"nodes":[]},{"pos":[21575,21585],"content":"TEventArgs","needQuote":true,"nodes":[{"content":"TEventArgs","pos":[0,10]}]},{"pos":[21695,21707],"content":"EventHandler","needQuote":true,"nodes":[{"content":"EventHandler","pos":[0,12]}]},{"content":"(Of","pos":[21753,21756]},{"pos":[21790,21800],"content":"TEventArgs","needQuote":true,"nodes":[{"content":"TEventArgs","pos":[0,10]}]},{"pos":[21836,21837],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22043,22047],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[22157,22158],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[22247,22248],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[22442,22461],"content":"IEnumerable<Object>","needQuote":true,"nodes":[{"content":"IEnumerable&lt;Object&gt;","pos":[0,19],"source":"IEnumerable<Object>"}]},{"pos":[22709,22720],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[22805,22806],"content":"<","needQuote":true,"nodes":[]},{"pos":[22856,22862],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[23015,23026],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[23112,23115]},{"pos":[23172,23178],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[23238,23239],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23479,23493],"content":"IEnumerable<T>","needQuote":true,"nodes":[{"content":"IEnumerable&lt;T&gt;","pos":[0,14],"source":"IEnumerable<T>"}]},{"pos":[23712,23723],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[23787,23788],"content":"<","needQuote":true,"nodes":[]},{"pos":[23815,23816],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[23936,23947],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[24012,24015]},{"pos":[24049,24050],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[24077,24078],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24281,24307],"content":"System.Collections.Generic","needQuote":true,"nodes":[{"content":"System.Collections.Generic","pos":[0,26]}]},{"pos":[24583,24597],"content":"IEnumerable<T>","needQuote":true,"nodes":[{"content":"IEnumerable&lt;T&gt;","pos":[0,14],"source":"IEnumerable<T>"}]},{"pos":[24816,24827],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[24891,24892],"content":"<","needQuote":true,"nodes":[]},{"pos":[24919,24920],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[25040,25051],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[25116,25119]},{"pos":[25153,25154],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[25181,25182],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]}],"content":"items:\n- uid: System.Xml.Linq.XObject\n  commentId: T:System.Xml.Linq.XObject\n  id: XObject\n  parent: System.Xml.Linq\n  children:\n  - System.Xml.Linq.XObject.AddAnnotation(System.Object)\n  - System.Xml.Linq.XObject.Annotation(System.Type)\n  - System.Xml.Linq.XObject.Annotation``1\n  - System.Xml.Linq.XObject.Annotations(System.Type)\n  - System.Xml.Linq.XObject.Annotations``1\n  - System.Xml.Linq.XObject.BaseUri\n  - System.Xml.Linq.XObject.Changed\n  - System.Xml.Linq.XObject.Changing\n  - System.Xml.Linq.XObject.Document\n  - System.Xml.Linq.XObject.NodeType\n  - System.Xml.Linq.XObject.Parent\n  - System.Xml.Linq.XObject.RemoveAnnotations(System.Type)\n  - System.Xml.Linq.XObject.RemoveAnnotations``1\n  langs:\n  - csharp\n  - vb\n  name: XObject\n  fullName: System.Xml.Linq.XObject\n  type: Class\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: XObject\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 388\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Represents a node or an attribute in an XML tree. </p>\\n\"\n  syntax:\n    content: 'public abstract class XObject : IXmlLineInfo'\n    content.vb: >-\n      Public MustInherit Class XObject\n          Inherits IXmlLineInfo\n  inheritance:\n  - System.Object\n  modifiers.csharp:\n  - public\n  - abstract\n  - class\n  modifiers.vb:\n  - Public\n  - MustInherit\n  - Class\n  nameWithType: XObject\n- uid: System.Xml.Linq.XObject.BaseUri\n  commentId: P:System.Xml.Linq.XObject.BaseUri\n  id: BaseUri\n  parent: System.Xml.Linq.XObject\n  langs:\n  - csharp\n  - vb\n  name: BaseUri\n  fullName: System.Xml.Linq.XObject.BaseUri\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: BaseUri\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 391\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Gets the base URI for this <xref href=\\\"System.Xml.Linq.XObject\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public string BaseUri { get; }\n    content.vb: Public ReadOnly Property BaseUri As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>A <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the base URI for this <xref href=\\\"System.Xml.Linq.XObject\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: XObject.BaseUri\n- uid: System.Xml.Linq.XObject.Document\n  commentId: P:System.Xml.Linq.XObject.Document\n  id: Document\n  parent: System.Xml.Linq.XObject\n  langs:\n  - csharp\n  - vb\n  name: Document\n  fullName: System.Xml.Linq.XObject.Document\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Document\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 392\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Gets the <xref href=\\\"System.Xml.Linq.XDocument\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for this <xref href=\\\"System.Xml.Linq.XObject\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public XDocument Document { get; }\n    content.vb: Public ReadOnly Property Document As XDocument\n    parameters: []\n    return:\n      type: System.Xml.Linq.XDocument\n      description: \"\\n<p>The <xref href=\\\"System.Xml.Linq.XDocument\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for this <xref href=\\\"System.Xml.Linq.XObject\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: XObject.Document\n- uid: System.Xml.Linq.XObject.NodeType\n  commentId: P:System.Xml.Linq.XObject.NodeType\n  id: NodeType\n  parent: System.Xml.Linq.XObject\n  langs:\n  - csharp\n  - vb\n  name: NodeType\n  fullName: System.Xml.Linq.XObject.NodeType\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: NodeType\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 393\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Gets the node type for this <xref href=\\\"System.Xml.Linq.XObject\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public abstract XmlNodeType NodeType { get; }\n    content.vb: Public MustOverride ReadOnly Property NodeType As XmlNodeType\n    parameters: []\n    return:\n      type: System.Xml.XmlNodeType\n      description: \"\\n<p>The node type for this <xref href=\\\"System.Xml.Linq.XObject\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: XObject.NodeType\n- uid: System.Xml.Linq.XObject.Parent\n  commentId: P:System.Xml.Linq.XObject.Parent\n  id: Parent\n  parent: System.Xml.Linq.XObject\n  langs:\n  - csharp\n  - vb\n  name: Parent\n  fullName: System.Xml.Linq.XObject.Parent\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Parent\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 394\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Gets the parent <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of this <xref href=\\\"System.Xml.Linq.XObject\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public XElement Parent { get; }\n    content.vb: Public ReadOnly Property Parent As XElement\n    parameters: []\n    return:\n      type: System.Xml.Linq.XElement\n      description: \"\\n<p>The parent <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of this <xref href=\\\"System.Xml.Linq.XObject\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: XObject.Parent\n- uid: System.Xml.Linq.XObject.Changed\n  commentId: E:System.Xml.Linq.XObject.Changed\n  id: Changed\n  parent: System.Xml.Linq.XObject\n  langs:\n  - csharp\n  - vb\n  name: Changed\n  fullName: System.Xml.Linq.XObject.Changed\n  type: Event\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Changed\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 397\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Raised when this <xref href=\\\"System.Xml.Linq.XObject\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or any of its descendants have changed.</p>\\n\"\n  syntax:\n    content: public event EventHandler<XObjectChangeEventArgs> Changed\n    content.vb: Public Event Changed As EventHandler(Of XObjectChangeEventArgs)\n    return:\n      type: System.EventHandler{System.Xml.Linq.XObjectChangeEventArgs}\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XObject.Changed\n- uid: System.Xml.Linq.XObject.Changing\n  commentId: E:System.Xml.Linq.XObject.Changing\n  id: Changing\n  parent: System.Xml.Linq.XObject\n  langs:\n  - csharp\n  - vb\n  name: Changing\n  fullName: System.Xml.Linq.XObject.Changing\n  type: Event\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Changing\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 398\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Raised when this <xref href=\\\"System.Xml.Linq.XObject\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or any of its descendants are about to change.</p>\\n\"\n  syntax:\n    content: public event EventHandler<XObjectChangeEventArgs> Changing\n    content.vb: Public Event Changing As EventHandler(Of XObjectChangeEventArgs)\n    return:\n      type: System.EventHandler{System.Xml.Linq.XObjectChangeEventArgs}\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XObject.Changing\n- uid: System.Xml.Linq.XObject.AddAnnotation(System.Object)\n  commentId: M:System.Xml.Linq.XObject.AddAnnotation(System.Object)\n  id: AddAnnotation(System.Object)\n  parent: System.Xml.Linq.XObject\n  langs:\n  - csharp\n  - vb\n  name: AddAnnotation(Object)\n  fullName: System.Xml.Linq.XObject.AddAnnotation(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AddAnnotation\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 399\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Adds an object to the annotation list of this <xref href=\\\"System.Xml.Linq.XObject\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public void AddAnnotation(object annotation)\n    content.vb: Public Sub AddAnnotation(annotation As Object)\n    parameters:\n    - id: annotation\n      type: System.Object\n      description: \"\\n<p>An <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the annotation to add.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XObject.AddAnnotation(Object)\n- uid: System.Xml.Linq.XObject.Annotation(System.Type)\n  commentId: M:System.Xml.Linq.XObject.Annotation(System.Type)\n  id: Annotation(System.Type)\n  parent: System.Xml.Linq.XObject\n  langs:\n  - csharp\n  - vb\n  name: Annotation(Type)\n  fullName: System.Xml.Linq.XObject.Annotation(System.Type)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Annotation\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 400\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Gets the first annotation object of the specified type from this <xref href=\\\"System.Xml.Linq.XObject\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public object Annotation(Type type)\n    content.vb: Public Function Annotation(type As Type) As Object\n    parameters:\n    - id: type\n      type: System.Type\n      description: \"\\n<p>The <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the annotation to retrieve.</p>\\n\"\n    return:\n      type: System.Object\n      description: \"\\n<p>The <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the first annotation object that matches the specified type, or <strong>null</strong> if no annotation is of the specified type.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XObject.Annotation(Type)\n- uid: System.Xml.Linq.XObject.Annotation``1\n  commentId: M:System.Xml.Linq.XObject.Annotation``1\n  id: Annotation``1\n  parent: System.Xml.Linq.XObject\n  langs:\n  - csharp\n  - vb\n  name: Annotation<T>()\n  fullName: System.Xml.Linq.XObject.Annotation<T>()\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Annotation\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 401\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Get the first annotation object of the specified type from this <xref href=\\\"System.Xml.Linq.XObject\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  syntax:\n    content: 'public T Annotation<T>()where T : class'\n    content.vb: Public Function Annotation(Of T As Class) As T\n    typeParameters:\n    - id: T\n      description: \"\\n<p>The type of the annotation to retrieve.</p>\\n\"\n    return:\n      type: '{T}'\n      description: \"\\n<p>The first annotation object that matches the specified type, or <strong>null</strong> if no annotation is of the specified type.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Xml.Linq.XObject.Annotation(Of T)()\n  name.vb: Annotation(Of T)()\n  nameWithType: XObject.Annotation<T>()\n  nameWithType.vb: XObject.Annotation(Of T)()\n- uid: System.Xml.Linq.XObject.Annotations(System.Type)\n  commentId: M:System.Xml.Linq.XObject.Annotations(System.Type)\n  id: Annotations(System.Type)\n  parent: System.Xml.Linq.XObject\n  langs:\n  - csharp\n  - vb\n  name: Annotations(Type)\n  fullName: System.Xml.Linq.XObject.Annotations(System.Type)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Annotations\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 402\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Gets a collection of annotations of the specified type for this <xref href=\\\"System.Xml.Linq.XObject\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public IEnumerable<object> Annotations(Type type)\n    content.vb: Public Function Annotations(type As Type) As IEnumerable(Of Object)\n    parameters:\n    - id: type\n      type: System.Type\n      description: \"\\n<p>The <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the annotations to retrieve.</p>\\n\"\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Object}\n      description: \"\\n<p>An <xref href=\\\"System.Collections.Generic.IEnumerable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the annotations that match the specified type for this <xref href=\\\"System.Xml.Linq.XObject\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XObject.Annotations(Type)\n- uid: System.Xml.Linq.XObject.Annotations``1\n  commentId: M:System.Xml.Linq.XObject.Annotations``1\n  id: Annotations``1\n  parent: System.Xml.Linq.XObject\n  langs:\n  - csharp\n  - vb\n  name: Annotations<T>()\n  fullName: System.Xml.Linq.XObject.Annotations<T>()\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Annotations\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 403\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Gets a collection of annotations of the specified type for this <xref href=\\\"System.Xml.Linq.XObject\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: 'public IEnumerable<T> Annotations<T>()where T : class'\n    content.vb: Public Function Annotations(Of T As Class) As IEnumerable(Of T)\n    typeParameters:\n    - id: T\n      description: \"\\n<p>The type of the annotations to retrieve.</p>\\n\"\n    return:\n      type: System.Collections.Generic.IEnumerable{{T}}\n      description: \"\\n<p>An <xref href=\\\"System.Collections.Generic.IEnumerable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the annotations for this <xref href=\\\"System.Xml.Linq.XObject\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Xml.Linq.XObject.Annotations(Of T)()\n  name.vb: Annotations(Of T)()\n  nameWithType: XObject.Annotations<T>()\n  nameWithType.vb: XObject.Annotations(Of T)()\n- uid: System.Xml.Linq.XObject.RemoveAnnotations(System.Type)\n  commentId: M:System.Xml.Linq.XObject.RemoveAnnotations(System.Type)\n  id: RemoveAnnotations(System.Type)\n  parent: System.Xml.Linq.XObject\n  langs:\n  - csharp\n  - vb\n  name: RemoveAnnotations(Type)\n  fullName: System.Xml.Linq.XObject.RemoveAnnotations(System.Type)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RemoveAnnotations\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 404\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Removes the annotations of the specified type from this <xref href=\\\"System.Xml.Linq.XObject\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public void RemoveAnnotations(Type type)\n    content.vb: Public Sub RemoveAnnotations(type As Type)\n    parameters:\n    - id: type\n      type: System.Type\n      description: \"\\n<p>The <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of annotations to remove.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XObject.RemoveAnnotations(Type)\n- uid: System.Xml.Linq.XObject.RemoveAnnotations``1\n  commentId: M:System.Xml.Linq.XObject.RemoveAnnotations``1\n  id: RemoveAnnotations``1\n  parent: System.Xml.Linq.XObject\n  langs:\n  - csharp\n  - vb\n  name: RemoveAnnotations<T>()\n  fullName: System.Xml.Linq.XObject.RemoveAnnotations<T>()\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RemoveAnnotations\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 405\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Removes the annotations of the specified type from this <xref href=\\\"System.Xml.Linq.XObject\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: 'public void RemoveAnnotations<T>()where T : class'\n    content.vb: Public Sub RemoveAnnotations(Of T As Class)\n    typeParameters:\n    - id: T\n      description: \"\\n<p>The type of annotations to remove.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Xml.Linq.XObject.RemoveAnnotations(Of T)()\n  name.vb: RemoveAnnotations(Of T)()\n  nameWithType: XObject.RemoveAnnotations<T>()\n  nameWithType.vb: XObject.RemoveAnnotations(Of T)()\nreferences:\n- uid: System.Xml.Linq\n  isExternal: false\n  name: System.Xml.Linq\n  fullName: System.Xml.Linq\n  commentId: N:System.Xml.Linq\n  nameWithType: System.Xml.Linq\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.Xml.Linq.XDocument\n  parent: System.Xml.Linq\n  isExternal: false\n  name: XDocument\n  fullName: System.Xml.Linq.XDocument\n  commentId: T:System.Xml.Linq.XDocument\n  nameWithType: XDocument\n- uid: System.Xml.XmlNodeType\n  parent: System.Xml\n  isExternal: false\n  name: XmlNodeType\n  fullName: System.Xml.XmlNodeType\n  commentId: T:System.Xml.XmlNodeType\n  nameWithType: XmlNodeType\n- uid: System.Xml\n  isExternal: false\n  name: System.Xml\n  fullName: System.Xml\n  commentId: N:System.Xml\n  nameWithType: System.Xml\n- uid: System.Xml.Linq.XElement\n  parent: System.Xml.Linq\n  isExternal: false\n  name: XElement\n  fullName: System.Xml.Linq.XElement\n  commentId: T:System.Xml.Linq.XElement\n  nameWithType: XElement\n- uid: System.EventHandler{System.Xml.Linq.XObjectChangeEventArgs}\n  parent: System\n  definition: System.EventHandler`1\n  name: EventHandler<XObjectChangeEventArgs>\n  fullName: System.EventHandler<System.Xml.Linq.XObjectChangeEventArgs>\n  fullname.vb: System.EventHandler(Of System.Xml.Linq.XObjectChangeEventArgs)\n  name.vb: EventHandler(Of XObjectChangeEventArgs)\n  spec.csharp:\n  - uid: System.EventHandler`1\n    name: EventHandler\n    fullName: System.EventHandler\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Xml.Linq.XObjectChangeEventArgs\n    name: XObjectChangeEventArgs\n    fullName: System.Xml.Linq.XObjectChangeEventArgs\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.EventHandler`1\n    name: EventHandler\n    fullName: System.EventHandler\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Xml.Linq.XObjectChangeEventArgs\n    name: XObjectChangeEventArgs\n    fullName: System.Xml.Linq.XObjectChangeEventArgs\n  - name: )\n    fullName: )\n  commentId: T:System.EventHandler{System.Xml.Linq.XObjectChangeEventArgs}\n  nameWithType: EventHandler<XObjectChangeEventArgs>\n  nameWithType.vb: EventHandler(Of XObjectChangeEventArgs)\n- uid: System.EventHandler`1\n  isExternal: false\n  name: EventHandler<TEventArgs>\n  fullName: System.EventHandler<TEventArgs>\n  fullname.vb: System.EventHandler(Of TEventArgs)\n  name.vb: EventHandler(Of TEventArgs)\n  spec.csharp:\n  - uid: System.EventHandler`1\n    name: EventHandler\n    fullName: System.EventHandler\n  - name: <\n    fullName: <\n  - name: TEventArgs\n    fullName: TEventArgs\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.EventHandler`1\n    name: EventHandler\n    fullName: System.EventHandler\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TEventArgs\n    fullName: TEventArgs\n  - name: )\n    fullName: )\n  commentId: T:System.EventHandler`1\n  nameWithType: EventHandler<TEventArgs>\n  nameWithType.vb: EventHandler(Of TEventArgs)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  fullName: System.Type\n  commentId: T:System.Type\n  nameWithType: Type\n- uid: '{T}'\n  definition: T\n  name: T\n  fullName: T\n  commentId: '!:T'\n  nameWithType: T\n- uid: T\n  isExternal: false\n  name: T\n  fullName: T\n  nameWithType: T\n- uid: System.Collections.Generic.IEnumerable{System.Object}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<Object>\n  fullName: System.Collections.Generic.IEnumerable<System.Object>\n  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Object)\n  name.vb: IEnumerable(Of Object)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: T:System.Collections.Generic.IEnumerable{System.Object}\n  nameWithType: IEnumerable<Object>\n  nameWithType.vb: IEnumerable(Of Object)\n- uid: System.Collections.Generic.IEnumerable`1\n  isExternal: false\n  name: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n  fullname.vb: System.Collections.Generic.IEnumerable(Of T)\n  name.vb: IEnumerable(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  commentId: T:System.Collections.Generic.IEnumerable`1\n  nameWithType: IEnumerable<T>\n  nameWithType.vb: IEnumerable(Of T)\n- uid: System.Collections.Generic\n  isExternal: false\n  name: System.Collections.Generic\n  fullName: System.Collections.Generic\n  commentId: N:System.Collections.Generic\n  nameWithType: System.Collections.Generic\n- uid: System.Collections.Generic.IEnumerable{{T}}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n  fullname.vb: System.Collections.Generic.IEnumerable(Of T)\n  name.vb: IEnumerable(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  commentId: T:System.Collections.Generic.IEnumerable{`0}\n  nameWithType: IEnumerable<T>\n  nameWithType.vb: IEnumerable(Of T)\n"}