{"nodes":[{"pos":[463,494],"content":"CompilationRelaxationsAttribute","needQuote":true,"nodes":[{"content":"CompilationRelaxationsAttribute","pos":[0,31]}]},{"pos":[2854,2892],"content":"CompilationRelaxationsAttribute(Int32)","needQuote":true,"nodes":[{"content":"CompilationRelaxationsAttribute(Int32)","pos":[0,38]}]},{"content":"\\n&lt;p&gt;The compilation relaxations.","pos":[3859,3892],"source":"\\n<p>The compilation relaxations."},{"content":"&lt;/p&gt;\\n","pos":[3893,3899],"source":" </p>\\n"},{"pos":[4528,4550],"content":"CompilationRelaxations","needQuote":true,"nodes":[{"content":"CompilationRelaxations","pos":[0,22]}]},{"pos":[6161,6192],"content":"System.Runtime.CompilerServices","needQuote":true,"nodes":[{"content":"System.Runtime.CompilerServices","pos":[0,31]}]},{"pos":[6398,6404],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6552,6561],"content":"Attribute","needQuote":true,"nodes":[{"content":"Attribute","pos":[0,9]}]},{"pos":[6749,6763],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[6888,6894],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[6943,6944],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6994,7000],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7060,7061],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7147,7153],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[7202,7203],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7253,7259],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7319,7320],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7523,7536],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[7643,7654],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[7708,7709],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7736,7737],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7813,7824],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[7878,7879],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7906,7907],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8089,8099],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[8194,8202],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[8271,8272],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8299,8300],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8370,8378],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[8447,8448],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8475,8476],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8673,8695],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[8843,8849],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[8916,8917],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8967,8973],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[9034,9035]},{"pos":[9090,9096],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9156,9157],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9254,9260],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[9327,9328],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9378,9384],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[9445,9446]},{"pos":[9501,9507],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9567,9568],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9813,9844],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[10010,10025],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[10101,10102],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10152,10158],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[10219,10220]},{"pos":[10275,10281],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10341,10342],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10448,10463],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[10539,10540],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10590,10596],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[10657,10658]},{"pos":[10713,10719],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10779,10780],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11006,11015],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[11108,11115],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[11183,11184],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11211,11212],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11281,11288],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[11356,11357],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11384,11385],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11560,11577],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[11686,11701],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[11777,11778],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11805,11806],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11883,11898],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[11974,11975],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12002,12003],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12148,12154],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[12284,12289],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]}],"content":"items:\n- uid: System.Runtime.CompilerServices.CompilationRelaxationsAttribute\n  commentId: T:System.Runtime.CompilerServices.CompilationRelaxationsAttribute\n  id: CompilationRelaxationsAttribute\n  parent: System.Runtime.CompilerServices\n  children:\n  - System.Runtime.CompilerServices.CompilationRelaxationsAttribute.#ctor(System.Int32)\n  - System.Runtime.CompilerServices.CompilationRelaxationsAttribute.CompilationRelaxations\n  langs:\n  - csharp\n  - vb\n  name: CompilationRelaxationsAttribute\n  fullName: System.Runtime.CompilerServices.CompilationRelaxationsAttribute\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/CompilerServices/CompilationRelaxations.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: CompilationRelaxationsAttribute\n    path: src/mscorlib/src/System/Runtime/CompilerServices/CompilationRelaxations.cs\n    startLine: 23\n  assemblies:\n  - System.Runtime\n  namespace: System.Runtime.CompilerServices\n  summary: \"\\n<p>Controls the strictness of the code generated by the common language runtime's just-in-time (JIT) compiler.</p>\\n\"\n  syntax:\n    content: >-\n      [Serializable]\n\n      [AttributeUsage(AttributeTargets.Assembly | AttributeTargets.Module | AttributeTargets.Class | AttributeTargets.Method)]\n\n      [ComVisible(true)]\n\n      public class CompilationRelaxationsAttribute : Attribute, _Attribute\n    content.vb: >-\n      <Serializable>\n\n      <AttributeUsage(AttributeTargets.Assembly Or AttributeTargets.Module Or AttributeTargets.Class Or AttributeTargets.Method)>\n\n      <ComVisible(True)>\n\n      Public Class CompilationRelaxationsAttribute\n          Inherits Attribute\n          Implements _Attribute\n  seealso:\n  - type: System.Runtime.CompilerServices.CompilationRelaxations\n    commentId: T:System.Runtime.CompilerServices.CompilationRelaxations\n  inheritance:\n  - System.Object\n  - System.Attribute\n  inheritedMembers:\n  - System.Attribute.Equals(System.Object)\n  - System.Attribute.GetHashCode\n  - System.Object.ToString\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  attributes:\n  - type: System.AttributeUsageAttribute\n    ctor: System.AttributeUsageAttribute.#ctor(System.AttributeTargets)\n    arguments:\n    - type: System.AttributeTargets\n      value: 71\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: CompilationRelaxationsAttribute\n- uid: System.Runtime.CompilerServices.CompilationRelaxationsAttribute.#ctor(System.Int32)\n  commentId: M:System.Runtime.CompilerServices.CompilationRelaxationsAttribute.#ctor(System.Int32)\n  id: '#ctor(System.Int32)'\n  parent: System.Runtime.CompilerServices.CompilationRelaxationsAttribute\n  langs:\n  - csharp\n  - vb\n  name: CompilationRelaxationsAttribute(Int32)\n  fullName: System.Runtime.CompilerServices.CompilationRelaxationsAttribute.CompilationRelaxationsAttribute(System.Int32)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/CompilerServices/CompilationRelaxations.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Runtime/CompilerServices/CompilationRelaxations.cs\n    startLine: 30\n  assemblies:\n  - System.Runtime\n  namespace: System.Runtime.CompilerServices\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Runtime.CompilerServices.CompilationRelaxationsAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified compilation relaxations.</p>\\n\"\n  syntax:\n    content: public CompilationRelaxationsAttribute(int relaxations)\n    content.vb: Public Sub New(relaxations As Integer)\n    parameters:\n    - id: relaxations\n      type: System.Int32\n      description: \"\\n<p>The compilation relaxations. </p>\\n\"\n  seealso:\n  - type: System.Runtime.CompilerServices.CompilationRelaxations\n    commentId: T:System.Runtime.CompilerServices.CompilationRelaxations\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: CompilationRelaxationsAttribute.CompilationRelaxationsAttribute(Int32)\n- uid: System.Runtime.CompilerServices.CompilationRelaxationsAttribute.CompilationRelaxations\n  commentId: P:System.Runtime.CompilerServices.CompilationRelaxationsAttribute.CompilationRelaxations\n  id: CompilationRelaxations\n  parent: System.Runtime.CompilerServices.CompilationRelaxationsAttribute\n  langs:\n  - csharp\n  - vb\n  name: CompilationRelaxations\n  fullName: System.Runtime.CompilerServices.CompilationRelaxationsAttribute.CompilationRelaxations\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/CompilerServices/CompilationRelaxations.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: CompilationRelaxations\n    path: src/mscorlib/src/System/Runtime/CompilerServices/CompilationRelaxations.cs\n    startLine: 42\n  assemblies:\n  - System.Runtime\n  namespace: System.Runtime.CompilerServices\n  summary: \"\\n<p>Gets the compilation relaxations specified when the current object was constructed.</p>\\n\"\n  syntax:\n    content: public int CompilationRelaxations { get; }\n    content.vb: Public ReadOnly Property CompilationRelaxations As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The compilation relaxations specified when the current object was constructed.</p>\\n<p>Use the <xref href=\\\"System.Runtime.CompilerServices.CompilationRelaxations\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> enumeration with the <xref href=\\\"System.Runtime.CompilerServices.CompilationRelaxationsAttribute.CompilationRelaxations\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property.</p>\\n\"\n  seealso:\n  - type: System.Runtime.CompilerServices.CompilationRelaxations\n    commentId: T:System.Runtime.CompilerServices.CompilationRelaxations\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: CompilationRelaxationsAttribute.CompilationRelaxations\nreferences:\n- uid: System.Runtime.CompilerServices\n  isExternal: false\n  name: System.Runtime.CompilerServices\n  fullName: System.Runtime.CompilerServices\n  nameWithType: System.Runtime.CompilerServices\n  commentId: N:System.Runtime.CompilerServices\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Attribute\n  parent: System\n  isExternal: false\n  name: Attribute\n  fullName: System.Attribute\n  nameWithType: Attribute\n  commentId: T:System.Attribute\n- uid: System.Attribute.Equals(System.Object)\n  parent: System.Attribute\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Attribute.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Attribute.Equals(System.Object)\n    name: Equals\n    fullName: System.Attribute.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Attribute.Equals(System.Object)\n    name: Equals\n    fullName: System.Attribute.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Attribute.Equals(Object)\n  commentId: M:System.Attribute.Equals(System.Object)\n- uid: System.Attribute.GetHashCode\n  parent: System.Attribute\n  isExternal: false\n  name: GetHashCode()\n  fullName: System.Attribute.GetHashCode()\n  spec.csharp:\n  - uid: System.Attribute.GetHashCode\n    name: GetHashCode\n    fullName: System.Attribute.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Attribute.GetHashCode\n    name: GetHashCode\n    fullName: System.Attribute.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Attribute.GetHashCode()\n  commentId: M:System.Attribute.GetHashCode\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n"}