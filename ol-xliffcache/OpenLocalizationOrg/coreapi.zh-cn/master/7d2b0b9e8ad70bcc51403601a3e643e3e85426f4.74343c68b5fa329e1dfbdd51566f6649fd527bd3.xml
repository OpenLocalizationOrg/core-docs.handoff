{"nodes":[{"pos":[915,945],"content":"DataContractSerializerSettings","needQuote":true,"nodes":[{"content":"DataContractSerializerSettings","pos":[0,30]}]},{"pos":[2371,2403],"content":"DataContractSerializerSettings()","needQuote":true,"nodes":[{"content":"DataContractSerializerSettings()","pos":[0,32]}]},{"pos":[3655,3675],"content":"DataContractResolver","needQuote":true,"nodes":[{"content":"DataContractResolver","pos":[0,20]}]},{"content":"\\n&lt;p&gt;The component used to dynamically map xsi:type declarations to known contract types.&lt;/p&gt;\\n","pos":[4592,4687],"source":"\\n<p>The component used to dynamically map xsi:type declarations to known contract types.</p>\\n"},{"pos":[5117,5127],"content":"KnownTypes","needQuote":true,"nodes":[{"content":"KnownTypes","pos":[0,10]}]},{"content":"\\n&lt;p&gt;A collection of types that may be present in the object graph serialized using this instance of the DataContractSerializerSettings.&lt;/p&gt;\\n","pos":[6050,6192],"source":"\\n<p>A collection of types that may be present in the object graph serialized using this instance of the DataContractSerializerSettings.</p>\\n"},{"pos":[6645,6666],"content":"MaxItemsInObjectGraph","needQuote":true,"nodes":[{"content":"MaxItemsInObjectGraph","pos":[0,21]}]},{"content":"\\n&lt;p&gt;The maximum number of items in an object graph to serialize or deserialize.&lt;/p&gt;\\n","pos":[7511,7597],"source":"\\n<p>The maximum number of items in an object graph to serialize or deserialize.</p>\\n"},{"pos":[8070,8094],"content":"PreserveObjectReferences","needQuote":true,"nodes":[{"content":"PreserveObjectReferences","pos":[0,24]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;True&lt;/strong&gt; to use non-standard XML constructs to preserve object reference data; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[8979,9118],"source":"\\n<p>\\n<strong>True</strong> to use non-standard XML constructs to preserve object reference data; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[9546,9554],"content":"RootName","needQuote":true,"nodes":[{"content":"RootName","pos":[0,8]}]},{"content":"\\n&lt;p&gt;The root name of the selected object.&lt;/p&gt;\\n","pos":[10355,10403],"source":"\\n<p>The root name of the selected object.</p>\\n"},{"pos":[10830,10843],"content":"RootNamespace","needQuote":true,"nodes":[{"content":"RootNamespace","pos":[0,13]}]},{"content":"\\n&lt;p&gt;The root namespace for the specified object.&lt;/p&gt;\\n","pos":[11671,11726],"source":"\\n<p>The root namespace for the specified object.</p>\\n"},{"pos":[12185,12207],"content":"SerializeReadOnlyTypes","needQuote":true,"nodes":[{"content":"SerializeReadOnlyTypes","pos":[0,22]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;True&lt;/strong&gt; to serialize read only types; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[13044,13143],"source":"\\n<p>\\n<strong>True</strong> to serialize read only types; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[13365,13393],"content":"System.Runtime.Serialization","needQuote":true,"nodes":[{"content":"System.Runtime.Serialization","pos":[0,28]}]},{"pos":[13590,13596],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13756,13766],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[13861,13869],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[13938,13939],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13966,13967],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14037,14045],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[14114,14115],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14142,14143],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14326,14340],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[14459,14465],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[14532,14533],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14583,14589],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14649,14650],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14733,14739],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[14806,14807],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14857,14863],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14923,14924],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15138,15160],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[15308,15314],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[15381,15382],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15432,15438],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[15499,15500]},{"pos":[15555,15561],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15621,15622],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15719,15725],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[15792,15793],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15843,15849],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[15910,15911]},{"pos":[15966,15972],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16032,16033],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16278,16309],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[16475,16490],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[16566,16567],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16617,16623],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[16684,16685]},{"pos":[16740,16746],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16806,16807],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16913,16928],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[17004,17005],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17055,17061],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[17122,17123]},{"pos":[17178,17184],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17244,17245],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17475,17488],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[17589,17600],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[17672,17673],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17700,17701],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17774,17785],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[17857,17858],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17885,17886],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18061,18070],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[18163,18170],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[18238,18239],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18266,18267],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18336,18343],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[18411,18412],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18439,18440],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18615,18632],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[18741,18756],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[18832,18833],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18860,18861],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18938,18953],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[19029,19030],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19057,19058],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19203,19209],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[19398,19418],"content":"DataContractResolver","needQuote":true,"nodes":[{"content":"DataContractResolver","pos":[0,20]}]},{"pos":[19742,19759],"content":"IEnumerable<Type>","needQuote":true,"nodes":[{"content":"IEnumerable&lt;Type&gt;","pos":[0,17],"source":"IEnumerable<Type>"}]},{"pos":[20001,20012],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[20097,20098],"content":"<","needQuote":true,"nodes":[]},{"pos":[20146,20150],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[20301,20312],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[20398,20401]},{"pos":[20456,20460],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[20518,20519],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20753,20767],"content":"IEnumerable<T>","needQuote":true,"nodes":[{"content":"IEnumerable&lt;T&gt;","pos":[0,14],"source":"IEnumerable<T>"}]},{"pos":[20986,20997],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[21061,21062],"content":"<","needQuote":true,"nodes":[]},{"pos":[21089,21090],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[21210,21221],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[21286,21289]},{"pos":[21323,21324],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[21351,21352],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21555,21581],"content":"System.Collections.Generic","needQuote":true,"nodes":[{"content":"System.Collections.Generic","pos":[0,26]}]},{"pos":[21771,21776],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[21919,21926],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[22095,22114],"content":"XmlDictionaryString","needQuote":true,"nodes":[{"content":"XmlDictionaryString","pos":[0,19]}]},{"pos":[22286,22296],"content":"System.Xml","needQuote":true,"nodes":[{"content":"System.Xml","pos":[0,10]}]}],"content":"items:\n- uid: System.Runtime.Serialization.DataContractSerializerSettings\n  commentId: T:System.Runtime.Serialization.DataContractSerializerSettings\n  id: DataContractSerializerSettings\n  parent: System.Runtime.Serialization\n  children:\n  - System.Runtime.Serialization.DataContractSerializerSettings.#ctor\n  - System.Runtime.Serialization.DataContractSerializerSettings.DataContractResolver\n  - System.Runtime.Serialization.DataContractSerializerSettings.KnownTypes\n  - System.Runtime.Serialization.DataContractSerializerSettings.MaxItemsInObjectGraph\n  - System.Runtime.Serialization.DataContractSerializerSettings.PreserveObjectReferences\n  - System.Runtime.Serialization.DataContractSerializerSettings.RootName\n  - System.Runtime.Serialization.DataContractSerializerSettings.RootNamespace\n  - System.Runtime.Serialization.DataContractSerializerSettings.SerializeReadOnlyTypes\n  langs:\n  - csharp\n  - vb\n  name: DataContractSerializerSettings\n  fullName: System.Runtime.Serialization.DataContractSerializerSettings\n  type: Class\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: DataContractSerializerSettings\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 48\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Specifies data contract serializer settings.</p>\\n\"\n  syntax:\n    content: public class DataContractSerializerSettings\n    content.vb: Public Class DataContractSerializerSettings\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: DataContractSerializerSettings\n- uid: System.Runtime.Serialization.DataContractSerializerSettings.#ctor\n  commentId: M:System.Runtime.Serialization.DataContractSerializerSettings.#ctor\n  id: '#ctor'\n  parent: System.Runtime.Serialization.DataContractSerializerSettings\n  langs:\n  - csharp\n  - vb\n  name: DataContractSerializerSettings()\n  fullName: System.Runtime.Serialization.DataContractSerializerSettings.DataContractSerializerSettings()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 50\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Runtime.Serialization.DataContractSerializerSettings\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public DataContractSerializerSettings()\n    content.vb: Public Sub New\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: DataContractSerializerSettings.DataContractSerializerSettings()\n- uid: System.Runtime.Serialization.DataContractSerializerSettings.DataContractResolver\n  commentId: P:System.Runtime.Serialization.DataContractSerializerSettings.DataContractResolver\n  id: DataContractResolver\n  parent: System.Runtime.Serialization.DataContractSerializerSettings\n  langs:\n  - csharp\n  - vb\n  name: DataContractResolver\n  fullName: System.Runtime.Serialization.DataContractSerializerSettings.DataContractResolver\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: DataContractResolver\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 51\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Gets or sets the component used to dynamically map xsi:type declarations to known contract types.</p>\\n\"\n  syntax:\n    content: public DataContractResolver DataContractResolver { get; set; }\n    content.vb: Public Property DataContractResolver As DataContractResolver\n    parameters: []\n    return:\n      type: System.Runtime.Serialization.DataContractResolver\n      description: \"\\n<p>The component used to dynamically map xsi:type declarations to known contract types.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: DataContractSerializerSettings.DataContractResolver\n- uid: System.Runtime.Serialization.DataContractSerializerSettings.KnownTypes\n  commentId: P:System.Runtime.Serialization.DataContractSerializerSettings.KnownTypes\n  id: KnownTypes\n  parent: System.Runtime.Serialization.DataContractSerializerSettings\n  langs:\n  - csharp\n  - vb\n  name: KnownTypes\n  fullName: System.Runtime.Serialization.DataContractSerializerSettings.KnownTypes\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: KnownTypes\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 52\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Gets or sets a collection of types that may be present in the object graph serialized using this instance of the DataContractSerializerSettings.</p>\\n\"\n  syntax:\n    content: public IEnumerable<Type> KnownTypes { get; set; }\n    content.vb: Public Property KnownTypes As IEnumerable(Of Type)\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Type}\n      description: \"\\n<p>A collection of types that may be present in the object graph serialized using this instance of the DataContractSerializerSettings.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: DataContractSerializerSettings.KnownTypes\n- uid: System.Runtime.Serialization.DataContractSerializerSettings.MaxItemsInObjectGraph\n  commentId: P:System.Runtime.Serialization.DataContractSerializerSettings.MaxItemsInObjectGraph\n  id: MaxItemsInObjectGraph\n  parent: System.Runtime.Serialization.DataContractSerializerSettings\n  langs:\n  - csharp\n  - vb\n  name: MaxItemsInObjectGraph\n  fullName: System.Runtime.Serialization.DataContractSerializerSettings.MaxItemsInObjectGraph\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: MaxItemsInObjectGraph\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 53\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Gets or sets the maximum number of items in an object graph to serialize or deserialize.</p>\\n\"\n  syntax:\n    content: public int MaxItemsInObjectGraph { get; set; }\n    content.vb: Public Property MaxItemsInObjectGraph As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The maximum number of items in an object graph to serialize or deserialize.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: DataContractSerializerSettings.MaxItemsInObjectGraph\n- uid: System.Runtime.Serialization.DataContractSerializerSettings.PreserveObjectReferences\n  commentId: P:System.Runtime.Serialization.DataContractSerializerSettings.PreserveObjectReferences\n  id: PreserveObjectReferences\n  parent: System.Runtime.Serialization.DataContractSerializerSettings\n  langs:\n  - csharp\n  - vb\n  name: PreserveObjectReferences\n  fullName: System.Runtime.Serialization.DataContractSerializerSettings.PreserveObjectReferences\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: PreserveObjectReferences\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 54\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Gets or sets a value that specifies whether to use non-standard XML constructs to preserve object reference data.</p>\\n\"\n  syntax:\n    content: public bool PreserveObjectReferences { get; set; }\n    content.vb: Public Property PreserveObjectReferences As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>True</strong> to use non-standard XML constructs to preserve object reference data; otherwise, <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: DataContractSerializerSettings.PreserveObjectReferences\n- uid: System.Runtime.Serialization.DataContractSerializerSettings.RootName\n  commentId: P:System.Runtime.Serialization.DataContractSerializerSettings.RootName\n  id: RootName\n  parent: System.Runtime.Serialization.DataContractSerializerSettings\n  langs:\n  - csharp\n  - vb\n  name: RootName\n  fullName: System.Runtime.Serialization.DataContractSerializerSettings.RootName\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RootName\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 55\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Gets or sets the root name of the selected object.</p>\\n\"\n  syntax:\n    content: public XmlDictionaryString RootName { get; set; }\n    content.vb: Public Property RootName As XmlDictionaryString\n    parameters: []\n    return:\n      type: System.Xml.XmlDictionaryString\n      description: \"\\n<p>The root name of the selected object.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: DataContractSerializerSettings.RootName\n- uid: System.Runtime.Serialization.DataContractSerializerSettings.RootNamespace\n  commentId: P:System.Runtime.Serialization.DataContractSerializerSettings.RootNamespace\n  id: RootNamespace\n  parent: System.Runtime.Serialization.DataContractSerializerSettings\n  langs:\n  - csharp\n  - vb\n  name: RootNamespace\n  fullName: System.Runtime.Serialization.DataContractSerializerSettings.RootNamespace\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RootNamespace\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 56\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Gets or sets the root namespace for the specified object.</p>\\n\"\n  syntax:\n    content: public XmlDictionaryString RootNamespace { get; set; }\n    content.vb: Public Property RootNamespace As XmlDictionaryString\n    parameters: []\n    return:\n      type: System.Xml.XmlDictionaryString\n      description: \"\\n<p>The root namespace for the specified object.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: DataContractSerializerSettings.RootNamespace\n- uid: System.Runtime.Serialization.DataContractSerializerSettings.SerializeReadOnlyTypes\n  commentId: P:System.Runtime.Serialization.DataContractSerializerSettings.SerializeReadOnlyTypes\n  id: SerializeReadOnlyTypes\n  parent: System.Runtime.Serialization.DataContractSerializerSettings\n  langs:\n  - csharp\n  - vb\n  name: SerializeReadOnlyTypes\n  fullName: System.Runtime.Serialization.DataContractSerializerSettings.SerializeReadOnlyTypes\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SerializeReadOnlyTypes\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 57\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Gets or sets a value that specifies whether to serialize read only types.</p>\\n\"\n  syntax:\n    content: public bool SerializeReadOnlyTypes { get; set; }\n    content.vb: Public Property SerializeReadOnlyTypes As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>True</strong> to serialize read only types; otherwise, <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: DataContractSerializerSettings.SerializeReadOnlyTypes\nreferences:\n- uid: System.Runtime.Serialization\n  isExternal: false\n  name: System.Runtime.Serialization\n  fullName: System.Runtime.Serialization\n  commentId: N:System.Runtime.Serialization\n  nameWithType: System.Runtime.Serialization\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Runtime.Serialization.DataContractResolver\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: DataContractResolver\n  fullName: System.Runtime.Serialization.DataContractResolver\n  commentId: T:System.Runtime.Serialization.DataContractResolver\n  nameWithType: DataContractResolver\n- uid: System.Collections.Generic.IEnumerable{System.Type}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<Type>\n  fullName: System.Collections.Generic.IEnumerable<System.Type>\n  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Type)\n  name.vb: IEnumerable(Of Type)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: T:System.Collections.Generic.IEnumerable{System.Type}\n  nameWithType: IEnumerable<Type>\n  nameWithType.vb: IEnumerable(Of Type)\n- uid: System.Collections.Generic.IEnumerable`1\n  isExternal: false\n  name: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n  fullname.vb: System.Collections.Generic.IEnumerable(Of T)\n  name.vb: IEnumerable(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  commentId: T:System.Collections.Generic.IEnumerable`1\n  nameWithType: IEnumerable<T>\n  nameWithType.vb: IEnumerable(Of T)\n- uid: System.Collections.Generic\n  isExternal: false\n  name: System.Collections.Generic\n  fullName: System.Collections.Generic\n  commentId: N:System.Collections.Generic\n  nameWithType: System.Collections.Generic\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  commentId: T:System.Int32\n  nameWithType: Int32\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.Xml.XmlDictionaryString\n  parent: System.Xml\n  isExternal: false\n  name: XmlDictionaryString\n  fullName: System.Xml.XmlDictionaryString\n  commentId: T:System.Xml.XmlDictionaryString\n  nameWithType: XmlDictionaryString\n- uid: System.Xml\n  isExternal: false\n  name: System.Xml\n  fullName: System.Xml\n  commentId: N:System.Xml\n  nameWithType: System.Xml\n"}