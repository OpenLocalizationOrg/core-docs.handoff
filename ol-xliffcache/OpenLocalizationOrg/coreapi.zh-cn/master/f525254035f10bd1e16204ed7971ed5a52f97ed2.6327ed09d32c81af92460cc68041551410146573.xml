{"nodes":[{"pos":[2744,2753],"content":"Directory","needQuote":true,"nodes":[{"content":"Directory","pos":[0,9]}]},{"pos":[4420,4443],"content":"CreateDirectory(String)","needQuote":true,"nodes":[{"content":"CreateDirectory(String)","pos":[0,23]}]},{"content":"\\n&lt;p&gt;The directory to create.","pos":[5260,5289],"source":"\\n<p>The directory to create."},{"content":"&lt;/p&gt;\\n","pos":[5290,5296],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An object that represents the directory at the specified path.","pos":[5366,5433],"source":"\\n<p>An object that represents the directory at the specified path."},{"content":"This object is returned regardless of whether a directory at the specified path already exists.&lt;/p&gt;\\n","pos":[5434,5535],"source":" This object is returned regardless of whether a directory at the specified path already exists.</p>\\n"},{"content":"\\n&lt;p&gt;The directory specified by &lt;em&gt;path&lt;/em&gt; is a file.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;The network name is not known.&lt;/p&gt;\\n","pos":[5640,5754],"source":"\\n<p>The directory specified by <em>path</em> is a file.</p>\\n<p>-or-</p>\\n<p>The network name is not known.</p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[5871,5925],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[5926,5932],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[6505,6551],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[6552,6558],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or both exceed the system-defined maximum length.","pos":[6667,6752],"source":"\\n<p>The specified path, file name, or both exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.","pos":[6753,6881]},{"content":"&lt;/p&gt;\\n","pos":[6882,6888],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path is invalid (for example, it is on an unmapped drive).","pos":[7009,7086],"source":"\\n<p>The specified path is invalid (for example, it is on an unmapped drive)."},{"content":"&lt;/p&gt;\\n","pos":[7087,7093],"source":" </p>\\n"},{"pos":[7842,7856],"content":"Delete(String)","needQuote":true,"nodes":[{"content":"Delete(String)","pos":[0,14]}]},{"content":"\\n&lt;p&gt;The name of the empty directory to remove.","pos":[8566,8613],"source":"\\n<p>The name of the empty directory to remove."},{"content":"This directory must be writable and empty.","pos":[8614,8656]},{"content":"&lt;/p&gt;\\n","pos":[8657,8663],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A file with the same name and location specified by &lt;em&gt;path&lt;/em&gt; exists.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;The directory is the application's current working directory.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;The directory specified by &lt;em&gt;path&lt;/em&gt; is not empty.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;The directory is read-only or contains a read-only file.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;The directory is being used by another process.&lt;/p&gt;\\n","pos":[8768,9158],"source":"\\n<p>A file with the same name and location specified by <em>path</em> exists.</p>\\n<p>-or-</p>\\n<p>The directory is the application's current working directory.</p>\\n<p>-or-</p>\\n<p>The directory specified by <em>path</em> is not empty.</p>\\n<p>-or-</p>\\n<p>The directory is read-only or contains a read-only file.</p>\\n<p>-or-</p>\\n<p>The directory is being used by another process.</p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[9275,9329],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[9330,9336],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[9814,9860],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[9861,9867],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or both exceed the system-defined maximum length.","pos":[9976,10061],"source":"\\n<p>The specified path, file name, or both exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.","pos":[10062,10190]},{"content":"&lt;/p&gt;\\n","pos":[10191,10197],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; does not exist or could not be found.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;The specified path is invalid (for example, it is on an unmapped drive).","pos":[10318,10470],"source":"\\n<p>\\n<em>path</em> does not exist or could not be found.</p>\\n<p>-or-</p>\\n<p>The specified path is invalid (for example, it is on an unmapped drive)."},{"content":"&lt;/p&gt;\\n","pos":[10471,10477],"source":" </p>\\n"},{"pos":[10968,10991],"content":"Delete(String, Boolean)","needQuote":true,"nodes":[{"content":"Delete(String, Boolean)","pos":[0,23]}]},{"content":"\\n&lt;p&gt;The name of the directory to remove.","pos":[11804,11845],"source":"\\n<p>The name of the directory to remove."},{"content":"&lt;/p&gt;\\n","pos":[11846,11852],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to remove directories, subdirectories, and files in &lt;em&gt;path&lt;/em&gt;; otherwise, &lt;strong&gt;false&lt;/strong&gt;.","pos":[11921,12051],"source":"\\n<p>\\n<strong>true</strong> to remove directories, subdirectories, and files in <em>path</em>; otherwise, <strong>false</strong>."},{"content":"&lt;/p&gt;\\n","pos":[12052,12058],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A file with the same name and location specified by &lt;em&gt;path&lt;/em&gt; exists.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;The directory specified by &lt;em&gt;path&lt;/em&gt; is read-only, or &lt;em&gt;recursive&lt;/em&gt; is &lt;strong&gt;false&lt;/strong&gt; and &lt;em&gt;path&lt;/em&gt; is not an empty directory.","pos":[12163,12410],"source":"\\n<p>A file with the same name and location specified by <em>path</em> exists.</p>\\n<p>-or-</p>\\n<p>The directory specified by <em>path</em> is read-only, or <em>recursive</em> is <strong>false</strong> and <em>path</em> is not an empty directory."},{"content":"&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;The directory is the application's current working directory.","pos":[12411,12494],"source":" </p>\\n<p>-or-</p>\\n<p>The directory is the application's current working directory."},{"content":"&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;The directory contains a read-only file.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;The directory is being used by another process.&lt;/p&gt;\\n","pos":[12495,12632],"source":" </p>\\n<p>-or-</p>\\n<p>The directory contains a read-only file.</p>\\n<p>-or-</p>\\n<p>The directory is being used by another process.</p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.&lt;/p&gt;\\n","pos":[12749,12809],"source":"\\n<p>The caller does not have the required permission.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[13287,13333],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[13334,13340],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or both exceed the system-defined maximum length.","pos":[13449,13534],"source":"\\n<p>The specified path, file name, or both exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.","pos":[13535,13663]},{"content":"&lt;/p&gt;\\n","pos":[13664,13670],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; does not exist or could not be found.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;The specified path is invalid (for example, it is on an unmapped drive).","pos":[13791,13943],"source":"\\n<p>\\n<em>path</em> does not exist or could not be found.</p>\\n<p>-or-</p>\\n<p>The specified path is invalid (for example, it is on an unmapped drive)."},{"content":"&lt;/p&gt;\\n","pos":[13944,13950],"source":" </p>\\n"},{"pos":[14447,14475],"content":"EnumerateDirectories(String)","needQuote":true,"nodes":[{"content":"EnumerateDirectories(String)","pos":[0,28]}]},{"content":"\\n&lt;p&gt;The relative or absolute path to the directory to search.","pos":[15231,15293],"source":"\\n<p>The relative or absolute path to the directory to search."},{"content":"This string is not case-sensitive.&lt;/p&gt;\\n","pos":[15294,15334],"source":" This string is not case-sensitive.</p>\\n"},{"content":"\\n&lt;p&gt;An enumerable collection of the full names (including paths) for the directories in the directory specified by &lt;em&gt;path&lt;/em&gt;.&lt;/p&gt;\\n","pos":[15434,15570],"source":"\\n<p>An enumerable collection of the full names (including paths) for the directories in the directory specified by <em>path</em>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[16049,16095],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[16096,16102],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is invalid, such as referring to an unmapped drive.","pos":[16223,16295],"source":"\\n<p>\\n<em>path</em> is invalid, such as referring to an unmapped drive."},{"content":"&lt;/p&gt;\\n","pos":[16296,16302],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is a file name.&lt;/p&gt;\\n","pos":[16393,16435],"source":"\\n<p>\\n<em>path</em> is a file name.</p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or combined exceed the system-defined maximum length.","pos":[16544,16633],"source":"\\n<p>The specified path, file name, or combined exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.&lt;/p&gt;\\n","pos":[16634,16768],"source":" For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.</p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[16883,16937],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[16938,16944],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.&lt;/p&gt;\\n","pos":[17061,17121],"source":"\\n<p>The caller does not have the required permission.</p>\\n"},{"pos":[17541,17577],"content":"EnumerateDirectories(String, String)","needQuote":true,"nodes":[{"content":"EnumerateDirectories(String, String)","pos":[0,36]}]},{"content":"\\n&lt;p&gt;The relative or absolute path to the directory to search.","pos":[18423,18485],"source":"\\n<p>The relative or absolute path to the directory to search."},{"content":"This string is not case-sensitive.&lt;/p&gt;\\n","pos":[18486,18526],"source":" This string is not case-sensitive.</p>\\n"},{"content":"\\n&lt;p&gt;The search string to match against the names of directories in &lt;em&gt;path&lt;/em&gt;.","pos":[18598,18680],"source":"\\n<p>The search string to match against the names of directories in <em>path</em>."},{"content":"This parameter can contain a combination of valid literal path and wildcard (* and ?) characters (see Remarks), but doesn't support regular expressions.&lt;/p&gt;\\n","pos":[18682,18840],"source":"  This parameter can contain a combination of valid literal path and wildcard (* and ?) characters (see Remarks), but doesn't support regular expressions.</p>\\n"},{"content":"\\n&lt;p&gt;An enumerable collection of the full names (including paths) for the directories in the directory specified by &lt;em&gt;path&lt;/em&gt; and that match the specified search pattern.&lt;/p&gt;\\n","pos":[18940,19120],"source":"\\n<p>An enumerable collection of the full names (including paths) for the directories in the directory specified by <em>path</em> and that match the specified search pattern.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;searchPattern&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[19678,19796],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>.</p>\\n<p>-or-</p>\\n<p>\\n<em>searchPattern</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[19797,19803],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is invalid, such as referring to an unmapped drive.","pos":[19924,19996],"source":"\\n<p>\\n<em>path</em> is invalid, such as referring to an unmapped drive."},{"content":"&lt;/p&gt;\\n","pos":[19997,20003],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is a file name.&lt;/p&gt;\\n","pos":[20094,20136],"source":"\\n<p>\\n<em>path</em> is a file name.</p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or combined exceed the system-defined maximum length.","pos":[20245,20334],"source":"\\n<p>The specified path, file name, or combined exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.&lt;/p&gt;\\n","pos":[20335,20469],"source":" For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.</p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[20584,20638],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[20639,20645],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.&lt;/p&gt;\\n","pos":[20762,20822],"source":"\\n<p>The caller does not have the required permission.</p>\\n"},{"pos":[21319,21369],"content":"EnumerateDirectories(String, String, SearchOption)","needQuote":true,"nodes":[{"content":"EnumerateDirectories(String, String, SearchOption)","pos":[0,50]}]},{"content":"\\n&lt;p&gt;The relative or absolute path to the directory to search.","pos":[22336,22398],"source":"\\n<p>The relative or absolute path to the directory to search."},{"content":"This string is not case-sensitive.&lt;/p&gt;\\n","pos":[22399,22439],"source":" This string is not case-sensitive.</p>\\n"},{"content":"\\n&lt;p&gt;The search string to match against the names of directories in &lt;em&gt;path&lt;/em&gt;.","pos":[22511,22593],"source":"\\n<p>The search string to match against the names of directories in <em>path</em>."},{"content":"This parameter can contain a combination of valid literal path and wildcard (* and ?) characters (see Remarks), but doesn't support regular expressions.&lt;/p&gt;\\n","pos":[22595,22753],"source":"  This parameter can contain a combination of valid literal path and wildcard (* and ?) characters (see Remarks), but doesn't support regular expressions.</p>\\n"},{"content":"\\n&lt;p&gt;An enumerable collection of the full names (including paths) for the directories in the directory specified by &lt;em&gt;path&lt;/em&gt; and that match the specified search pattern and option.&lt;/p&gt;\\n","pos":[23227,23418],"source":"\\n<p>An enumerable collection of the full names (including paths) for the directories in the directory specified by <em>path</em> and that match the specified search pattern and option.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;searchPattern&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[23980,24098],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>.</p>\\n<p>-or-</p>\\n<p>\\n<em>searchPattern</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[24099,24105],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is invalid, such as referring to an unmapped drive.","pos":[24482,24554],"source":"\\n<p>\\n<em>path</em> is invalid, such as referring to an unmapped drive."},{"content":"&lt;/p&gt;\\n","pos":[24555,24561],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is a file name.&lt;/p&gt;\\n","pos":[24652,24694],"source":"\\n<p>\\n<em>path</em> is a file name.</p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or combined exceed the system-defined maximum length.","pos":[24803,24892],"source":"\\n<p>The specified path, file name, or combined exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.&lt;/p&gt;\\n","pos":[24893,25027],"source":" For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.</p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[25142,25196],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[25197,25203],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.&lt;/p&gt;\\n","pos":[25320,25380],"source":"\\n<p>The caller does not have the required permission.</p>\\n"},{"pos":[25762,25784],"content":"EnumerateFiles(String)","needQuote":true,"nodes":[{"content":"EnumerateFiles(String)","pos":[0,22]}]},{"content":"\\n&lt;p&gt;The relative or absolute path to the directory to search.","pos":[26511,26573],"source":"\\n<p>The relative or absolute path to the directory to search."},{"content":"This string is not case-sensitive.&lt;/p&gt;\\n","pos":[26574,26614],"source":" This string is not case-sensitive.</p>\\n"},{"content":"\\n&lt;p&gt;An enumerable collection of the full names (including paths) for the files in the directory specified by &lt;em&gt;path&lt;/em&gt;.&lt;/p&gt;\\n","pos":[26714,26844],"source":"\\n<p>An enumerable collection of the full names (including paths) for the files in the directory specified by <em>path</em>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[27323,27369],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[27370,27376],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is invalid, such as referring to an unmapped drive.","pos":[27497,27569],"source":"\\n<p>\\n<em>path</em> is invalid, such as referring to an unmapped drive."},{"content":"&lt;/p&gt;\\n","pos":[27570,27576],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is a file name.&lt;/p&gt;\\n","pos":[27667,27709],"source":"\\n<p>\\n<em>path</em> is a file name.</p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or combined exceed the system-defined maximum length.","pos":[27818,27907],"source":"\\n<p>The specified path, file name, or combined exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.&lt;/p&gt;\\n","pos":[27908,28042],"source":" For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.</p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[28157,28211],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[28212,28218],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.&lt;/p&gt;\\n","pos":[28335,28395],"source":"\\n<p>The caller does not have the required permission.</p>\\n"},{"pos":[28791,28821],"content":"EnumerateFiles(String, String)","needQuote":true,"nodes":[{"content":"EnumerateFiles(String, String)","pos":[0,30]}]},{"content":"\\n&lt;p&gt;The relative or absolute path to the directory to search.","pos":[29638,29700],"source":"\\n<p>The relative or absolute path to the directory to search."},{"content":"This string is not case-sensitive.&lt;/p&gt;\\n","pos":[29701,29741],"source":" This string is not case-sensitive.</p>\\n"},{"content":"\\n&lt;p&gt;The search string to match against the names of files in &lt;em&gt;path&lt;/em&gt;.","pos":[29813,29889],"source":"\\n<p>The search string to match against the names of files in <em>path</em>."},{"content":"This parameter can contain a combination of valid literal path and wildcard (* and ?) characters (see Remarks), but doesn't support regular expressions.","pos":[29891,30043]},{"content":"&lt;/p&gt;\\n","pos":[30044,30050],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An enumerable collection of the full names (including paths) for the files in the directory specified by &lt;em&gt;path&lt;/em&gt; and that match the specified search pattern.&lt;/p&gt;\\n","pos":[30150,30324],"source":"\\n<p>An enumerable collection of the full names (including paths) for the files in the directory specified by <em>path</em> and that match the specified search pattern.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;searchPattern&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[30885,31003],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>.</p>\\n<p>-or-</p>\\n<p>\\n<em>searchPattern</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[31004,31010],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is invalid, such as referring to an unmapped drive.","pos":[31131,31203],"source":"\\n<p>\\n<em>path</em> is invalid, such as referring to an unmapped drive."},{"content":"&lt;/p&gt;\\n","pos":[31204,31210],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is a file name.&lt;/p&gt;\\n","pos":[31301,31343],"source":"\\n<p>\\n<em>path</em> is a file name.</p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or combined exceed the system-defined maximum length.","pos":[31452,31541],"source":"\\n<p>The specified path, file name, or combined exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.&lt;/p&gt;\\n","pos":[31542,31676],"source":" For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.</p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[31791,31845],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[31846,31852],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.&lt;/p&gt;\\n","pos":[31969,32029],"source":"\\n<p>The caller does not have the required permission.</p>\\n"},{"pos":[32502,32546],"content":"EnumerateFiles(String, String, SearchOption)","needQuote":true,"nodes":[{"content":"EnumerateFiles(String, String, SearchOption)","pos":[0,44]}]},{"content":"\\n&lt;p&gt;The relative or absolute path to the directory to search.","pos":[33484,33546],"source":"\\n<p>The relative or absolute path to the directory to search."},{"content":"This string is not case-sensitive.&lt;/p&gt;\\n","pos":[33547,33587],"source":" This string is not case-sensitive.</p>\\n"},{"content":"\\n&lt;p&gt;The search string to match against the names of files in &lt;em&gt;path&lt;/em&gt;.","pos":[33659,33735],"source":"\\n<p>The search string to match against the names of files in <em>path</em>."},{"content":"This parameter can contain a combination of valid literal path and wildcard (* and ?) characters (see Remarks), but doesn't support regular expressions.","pos":[33737,33889]},{"content":"&lt;/p&gt;\\n","pos":[33891,33897],"source":"  </p>\\n"},{"content":"\\n&lt;p&gt;An enumerable collection of the full names (including paths) for the files in the directory specified by &lt;em&gt;path&lt;/em&gt; and that match the specified search pattern and option.&lt;/p&gt;\\n","pos":[34371,34556],"source":"\\n<p>An enumerable collection of the full names (including paths) for the files in the directory specified by <em>path</em> and that match the specified search pattern and option.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;searchPattern&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[35117,35235],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>.</p>\\n<p>-or-</p>\\n<p>\\n<em>searchPattern</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[35236,35242],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is invalid, such as referring to an unmapped drive.","pos":[35619,35691],"source":"\\n<p>\\n<em>path</em> is invalid, such as referring to an unmapped drive."},{"content":"&lt;/p&gt;\\n","pos":[35692,35698],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is a file name.&lt;/p&gt;\\n","pos":[35789,35831],"source":"\\n<p>\\n<em>path</em> is a file name.</p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or combined exceed the system-defined maximum length.","pos":[35940,36029],"source":"\\n<p>The specified path, file name, or combined exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.&lt;/p&gt;\\n","pos":[36030,36164],"source":" For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.</p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[36279,36333],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[36334,36340],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.&lt;/p&gt;\\n","pos":[36457,36517],"source":"\\n<p>The caller does not have the required permission.</p>\\n"},{"pos":[36929,36963],"content":"EnumerateFileSystemEntries(String)","needQuote":true,"nodes":[{"content":"EnumerateFileSystemEntries(String)","pos":[0,34]}]},{"content":"\\n&lt;p&gt;The relative or absolute path to the directory to search.","pos":[37759,37821],"source":"\\n<p>The relative or absolute path to the directory to search."},{"content":"This string is not case-sensitive.&lt;/p&gt;\\n","pos":[37822,37862],"source":" This string is not case-sensitive.</p>\\n"},{"content":"\\n&lt;p&gt;An enumerable collection of file-system entries in the directory specified by &lt;em&gt;path&lt;/em&gt;.&lt;/p&gt;\\n","pos":[37962,38065],"source":"\\n<p>An enumerable collection of file-system entries in the directory specified by <em>path</em>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[38544,38590],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[38591,38597],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is invalid, such as referring to an unmapped drive.","pos":[38718,38790],"source":"\\n<p>\\n<em>path</em> is invalid, such as referring to an unmapped drive."},{"content":"&lt;/p&gt;\\n","pos":[38791,38797],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is a file name.&lt;/p&gt;\\n","pos":[38888,38930],"source":"\\n<p>\\n<em>path</em> is a file name.</p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or combined exceed the system-defined maximum length.","pos":[39039,39128],"source":"\\n<p>The specified path, file name, or combined exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.&lt;/p&gt;\\n","pos":[39129,39263],"source":" For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.</p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[39378,39432],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[39433,39439],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.&lt;/p&gt;\\n","pos":[39556,39616],"source":"\\n<p>The caller does not have the required permission.</p>\\n"},{"pos":[40060,40102],"content":"EnumerateFileSystemEntries(String, String)","needQuote":true,"nodes":[{"content":"EnumerateFileSystemEntries(String, String)","pos":[0,42]}]},{"content":"\\n&lt;p&gt;The relative or absolute path to the directory to search.","pos":[40988,41050],"source":"\\n<p>The relative or absolute path to the directory to search."},{"content":"This string is not case-sensitive.","pos":[41051,41085]},{"content":"&lt;/p&gt;\\n","pos":[41086,41092],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The search string to match against the names of file-system entries in &lt;em&gt;path&lt;/em&gt;.","pos":[41164,41254],"source":"\\n<p>The search string to match against the names of file-system entries in <em>path</em>."},{"content":"This parameter can contain a combination of valid literal path and wildcard (* and ?) characters (see Remarks), but doesn't support regular expressions.","pos":[41256,41408]},{"content":"&lt;/p&gt;\\n","pos":[41410,41416],"source":"  </p>\\n"},{"content":"\\n&lt;p&gt;An enumerable collection of file-system entries in the directory specified by &lt;em&gt;path&lt;/em&gt; and that match the specified search pattern.&lt;/p&gt;\\n","pos":[41516,41663],"source":"\\n<p>An enumerable collection of file-system entries in the directory specified by <em>path</em> and that match the specified search pattern.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;searchPattern&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[42224,42342],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>.</p>\\n<p>-or-</p>\\n<p>\\n<em>searchPattern</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[42343,42349],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is invalid, such as referring to an unmapped drive.","pos":[42470,42542],"source":"\\n<p>\\n<em>path</em> is invalid, such as referring to an unmapped drive."},{"content":"&lt;/p&gt;\\n","pos":[42543,42549],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is a file name.&lt;/p&gt;\\n","pos":[42640,42682],"source":"\\n<p>\\n<em>path</em> is a file name.</p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or combined exceed the system-defined maximum length.","pos":[42791,42880],"source":"\\n<p>The specified path, file name, or combined exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.&lt;/p&gt;\\n","pos":[42881,43015],"source":" For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.</p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[43130,43184],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[43185,43191],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.&lt;/p&gt;\\n","pos":[43308,43368],"source":"\\n<p>The caller does not have the required permission.</p>\\n"},{"pos":[43889,43945],"content":"EnumerateFileSystemEntries(String, String, SearchOption)","needQuote":true,"nodes":[{"content":"EnumerateFileSystemEntries(String, String, SearchOption)","pos":[0,56]}]},{"content":"\\n&lt;p&gt;The relative or absolute path to the directory to search.","pos":[44951,45013],"source":"\\n<p>The relative or absolute path to the directory to search."},{"content":"This string is not case-sensitive.&lt;/p&gt;\\n","pos":[45014,45054],"source":" This string is not case-sensitive.</p>\\n"},{"content":"\\n&lt;p&gt;The search string to match against file-system entries in &lt;em&gt;path&lt;/em&gt;.","pos":[45126,45203],"source":"\\n<p>The search string to match against file-system entries in <em>path</em>."},{"content":"This parameter can contain a combination of valid literal path and wildcard (* and ?) characters (see Remarks), but doesn't support regular expressions.&lt;/p&gt;\\n","pos":[45205,45363],"source":"  This parameter can contain a combination of valid literal path and wildcard (* and ?) characters (see Remarks), but doesn't support regular expressions.</p>\\n"},{"content":"\\n&lt;p&gt;An enumerable collection of file-system entries in the directory specified by &lt;em&gt;path&lt;/em&gt; and that match the specified search pattern and option.&lt;/p&gt;\\n","pos":[45838,45996],"source":"\\n<p>An enumerable collection of file-system entries in the directory specified by <em>path</em> and that match the specified search pattern and option.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;searchPattern&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[46557,46675],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>.</p>\\n<p>-or-</p>\\n<p>\\n<em>searchPattern</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[46676,46682],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is invalid, such as referring to an unmapped drive.","pos":[47059,47131],"source":"\\n<p>\\n<em>path</em> is invalid, such as referring to an unmapped drive."},{"content":"&lt;/p&gt;\\n","pos":[47132,47138],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is a file name.&lt;/p&gt;\\n","pos":[47229,47271],"source":"\\n<p>\\n<em>path</em> is a file name.</p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or combined exceed the system-defined maximum length.","pos":[47380,47469],"source":"\\n<p>The specified path, file name, or combined exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.&lt;/p&gt;\\n","pos":[47470,47604],"source":" For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.</p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[47719,47773],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[47774,47780],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.&lt;/p&gt;\\n","pos":[47897,47957],"source":"\\n<p>The caller does not have the required permission.</p>\\n"},{"pos":[48321,48335],"content":"Exists(String)","needQuote":true,"nodes":[{"content":"Exists(String)","pos":[0,14]}]},{"content":"\\n&lt;p&gt;The path to test.","pos":[49085,49107],"source":"\\n<p>The path to test."},{"content":"&lt;/p&gt;\\n","pos":[49108,49114],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if &lt;em&gt;path&lt;/em&gt; refers to an existing directory; &lt;strong&gt;false&lt;/strong&gt; if the directory does not exist or an error occurs when trying to determine if the specified file exists.&lt;/p&gt;\\n","pos":[49175,49388],"source":"\\n<p>\\n<strong>true</strong> if <em>path</em> refers to an existing directory; <strong>false</strong> if the directory does not exist or an error occurs when trying to determine if the specified file exists.</p>\\n"},{"pos":[49947,49970],"content":"GetCreationTime(String)","needQuote":true,"nodes":[{"content":"GetCreationTime(String)","pos":[0,23]}]},{"content":"\\n&lt;p&gt;The path of the directory.","pos":[50652,50683],"source":"\\n<p>The path of the directory."},{"content":"&lt;/p&gt;\\n","pos":[50684,50690],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A structure that is set to the creation date and time for the specified directory.","pos":[50752,50839],"source":"\\n<p>A structure that is set to the creation date and time for the specified directory."},{"content":"This value is expressed in local time.&lt;/p&gt;\\n","pos":[50840,50884],"source":" This value is expressed in local time.</p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[51015,51069],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[51070,51076],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[51554,51600],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[51601,51607],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or both exceed the system-defined maximum length.","pos":[51716,51801],"source":"\\n<p>The specified path, file name, or both exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.","pos":[51802,51930]},{"content":"&lt;/p&gt;\\n","pos":[51931,51937],"source":" </p>\\n"},{"pos":[52522,52548],"content":"GetCreationTimeUtc(String)","needQuote":true,"nodes":[{"content":"GetCreationTimeUtc(String)","pos":[0,26]}]},{"content":"\\n&lt;p&gt;The path of the directory.","pos":[53287,53318],"source":"\\n<p>The path of the directory."},{"content":"&lt;/p&gt;\\n","pos":[53319,53325],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A structure that is set to the creation date and time for the specified directory.","pos":[53387,53474],"source":"\\n<p>A structure that is set to the creation date and time for the specified directory."},{"content":"This value is expressed in UTC time.&lt;/p&gt;\\n","pos":[53475,53517],"source":" This value is expressed in UTC time.</p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[53648,53702],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[53703,53709],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[54187,54233],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[54234,54240],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or both exceed the system-defined maximum length.","pos":[54349,54434],"source":"\\n<p>The specified path, file name, or both exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.","pos":[54435,54563]},{"content":"&lt;/p&gt;\\n","pos":[54564,54570],"source":" </p>\\n"},{"pos":[55116,55137],"content":"GetCurrentDirectory()","needQuote":true,"nodes":[{"content":"GetCurrentDirectory()","pos":[0,21]}]},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[56108,56162],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[56163,56169],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The operating system is Windows CE, which does not have current directory functionality.&lt;/p&gt;\\n&lt;p&gt;This method is available in the .NET Compact Framework, but is not currently supported.&lt;/p&gt;\\n","pos":[56274,56469],"source":"\\n<p>The operating system is Windows CE, which does not have current directory functionality.</p>\\n<p>This method is available in the .NET Compact Framework, but is not currently supported.</p>\\n"},{"pos":[56946,56968],"content":"GetDirectories(String)","needQuote":true,"nodes":[{"content":"GetDirectories(String)","pos":[0,22]}]},{"content":"\\n&lt;p&gt;The relative or absolute path to the directory to search.","pos":[57690,57752],"source":"\\n<p>The relative or absolute path to the directory to search."},{"content":"This string is not case-sensitive.&lt;/p&gt;\\n","pos":[57753,57793],"source":" This string is not case-sensitive.</p>\\n"},{"content":"\\n&lt;p&gt;An array of the full names (including paths) of subdirectories in the specified path, or an empty array if no directories are found.&lt;/p&gt;\\n","pos":[57855,57998],"source":"\\n<p>An array of the full names (including paths) of subdirectories in the specified path, or an empty array if no directories are found.</p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[58129,58183],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[58184,58190],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[58668,58714],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[58715,58721],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or both exceed the system-defined maximum length.","pos":[58830,58915],"source":"\\n<p>The specified path, file name, or both exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.","pos":[58916,59044]},{"content":"&lt;/p&gt;\\n","pos":[59045,59051],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is a file name.","pos":[59142,59178],"source":"\\n<p>\\n<em>path</em> is a file name."},{"content":"&lt;/p&gt;\\n","pos":[59179,59185],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path is invalid (for example, it is on an unmapped drive).","pos":[59306,59383],"source":"\\n<p>The specified path is invalid (for example, it is on an unmapped drive)."},{"content":"&lt;/p&gt;\\n","pos":[59384,59390],"source":" </p>\\n"},{"pos":[60028,60058],"content":"GetDirectories(String, String)","needQuote":true,"nodes":[{"content":"GetDirectories(String, String)","pos":[0,30]}]},{"content":"\\n&lt;p&gt;The relative or absolute path to the directory to search.","pos":[60882,60944],"source":"\\n<p>The relative or absolute path to the directory to search."},{"content":"This string is not case-sensitive.&lt;/p&gt;\\n","pos":[60945,60985],"source":" This string is not case-sensitive.</p>\\n"},{"content":"\\n&lt;p&gt;The search string to match against the names of subdirectories in &lt;em&gt;path&lt;/em&gt;.","pos":[61057,61142],"source":"\\n<p>The search string to match against the names of subdirectories in <em>path</em>."},{"content":"This parameter can contain a combination of valid literal and wildcard characters (see Remarks), but doesn't support regular expressions.","pos":[61143,61280]},{"content":"&lt;/p&gt;\\n","pos":[61281,61287],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An array of the full names (including paths) of the subdirectories that match the search pattern in the specified directory, or an empty array if no directories are found.&lt;/p&gt;\\n","pos":[61349,61531],"source":"\\n<p>An array of the full names (including paths) of the subdirectories that match the search pattern in the specified directory, or an empty array if no directories are found.</p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[61662,61716],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[61717,61723],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; or &lt;em&gt;searchPattern&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[62270,62342],"source":"\\n<p>\\n<em>path</em> or <em>searchPattern</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[62343,62349],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or both exceed the system-defined maximum length.","pos":[62458,62543],"source":"\\n<p>The specified path, file name, or both exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.","pos":[62544,62672]},{"content":"&lt;/p&gt;\\n","pos":[62673,62679],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is a file name.","pos":[62770,62806],"source":"\\n<p>\\n<em>path</em> is a file name."},{"content":"&lt;/p&gt;\\n","pos":[62807,62813],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path is invalid (for example, it is on an unmapped drive).","pos":[62934,63011],"source":"\\n<p>The specified path is invalid (for example, it is on an unmapped drive)."},{"content":"&lt;/p&gt;\\n","pos":[63012,63018],"source":" </p>\\n"},{"pos":[63733,63777],"content":"GetDirectories(String, String, SearchOption)","needQuote":true,"nodes":[{"content":"GetDirectories(String, String, SearchOption)","pos":[0,44]}]},{"content":"\\n&lt;p&gt;The relative or absolute path to the directory to search.","pos":[64726,64788],"source":"\\n<p>The relative or absolute path to the directory to search."},{"content":"This string is not case-sensitive.&lt;/p&gt;\\n","pos":[64789,64829],"source":" This string is not case-sensitive.</p>\\n"},{"content":"\\n&lt;p&gt;The search string to match against the names of subdirectories in &lt;em&gt;path&lt;/em&gt;.","pos":[64901,64986],"source":"\\n<p>The search string to match against the names of subdirectories in <em>path</em>."},{"content":"This parameter can contain a combination of valid literal and wildcard characters (see Remarks), but doesn't support regular expressions.&lt;/p&gt;\\n","pos":[64987,65130],"source":" This parameter can contain a combination of valid literal and wildcard characters (see Remarks), but doesn't support regular expressions.</p>\\n"},{"content":"\\n&lt;p&gt;One of the enumeration values that specifies whether the search operation should include all subdirectories or only the current directory.","pos":[65210,65353],"source":"\\n<p>One of the enumeration values that specifies whether the search operation should include all subdirectories or only the current directory."},{"content":"&lt;/p&gt;\\n","pos":[65354,65360],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An array of the full names (including paths) of the subdirectories that match the specified criteria, or an empty array if no directories are found.&lt;/p&gt;\\n","pos":[65422,65581],"source":"\\n<p>An array of the full names (including paths) of the subdirectories that match the specified criteria, or an empty array if no directories are found.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; or &lt;em&gt;searchPattern&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[66154,66226],"source":"\\n<p>\\n<em>path</em> or <em>searchPattern</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[66227,66233],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[66606,66660],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[66661,66667],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or both exceed the system-defined maximum length.","pos":[66776,66861],"source":"\\n<p>The specified path, file name, or both exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.","pos":[66862,66990]},{"content":"&lt;/p&gt;\\n","pos":[66991,66997],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is a file name.","pos":[67088,67124],"source":"\\n<p>\\n<em>path</em> is a file name."},{"content":"&lt;/p&gt;\\n","pos":[67125,67131],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path is invalid (for example, it is on an unmapped drive).","pos":[67252,67329],"source":"\\n<p>The specified path is invalid (for example, it is on an unmapped drive)."},{"content":"&lt;/p&gt;\\n","pos":[67330,67336],"source":" </p>\\n"},{"pos":[67960,67984],"content":"GetDirectoryRoot(String)","needQuote":true,"nodes":[{"content":"GetDirectoryRoot(String)","pos":[0,24]}]},{"content":"\\n&lt;p&gt;The path of a file or directory.","pos":[68782,68819],"source":"\\n<p>The path of a file or directory."},{"content":"&lt;/p&gt;\\n","pos":[68820,68826],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A string that contains the volume information, root information, or both for the specified path.&lt;/p&gt;\\n","pos":[68886,68993],"source":"\\n<p>A string that contains the volume information, root information, or both for the specified path.</p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[69124,69178],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[69179,69185],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[69648,69694],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[69695,69701],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or both exceed the system-defined maximum length.","pos":[69810,69895],"source":"\\n<p>The specified path, file name, or both exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.","pos":[69896,70024]},{"content":"&lt;/p&gt;\\n","pos":[70025,70031],"source":" </p>\\n"},{"pos":[70493,70509],"content":"GetFiles(String)","needQuote":true,"nodes":[{"content":"GetFiles(String)","pos":[0,16]}]},{"content":"\\n&lt;p&gt;The relative or absolute path to the directory to search.","pos":[71198,71260],"source":"\\n<p>The relative or absolute path to the directory to search."},{"content":"This string is not case-sensitive.&lt;/p&gt;\\n","pos":[71261,71301],"source":" This string is not case-sensitive.</p>\\n"},{"content":"\\n&lt;p&gt;An array of the full names (including paths) for the files in the specified directory, or an empty array if no files are found.&lt;/p&gt;\\n","pos":[71363,71501],"source":"\\n<p>An array of the full names (including paths) for the files in the specified directory, or an empty array if no files are found.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is a file name.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;A network error has occurred.","pos":[71606,71693],"source":"\\n<p>\\n<em>path</em> is a file name.</p>\\n<p>-or-</p>\\n<p>A network error has occurred."},{"content":"&lt;/p&gt;\\n","pos":[71694,71700],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[71817,71871],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[71872,71878],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[72356,72402],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[72403,72409],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or both exceed the system-defined maximum length.","pos":[72518,72603],"source":"\\n<p>The specified path, file name, or both exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.","pos":[72604,72732]},{"content":"&lt;/p&gt;\\n","pos":[72733,72739],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path is not found or is invalid (for example, it is on an unmapped drive).","pos":[72860,72953],"source":"\\n<p>The specified path is not found or is invalid (for example, it is on an unmapped drive)."},{"content":"&lt;/p&gt;\\n","pos":[72954,72960],"source":" </p>\\n"},{"pos":[73456,73480],"content":"GetFiles(String, String)","needQuote":true,"nodes":[{"content":"GetFiles(String, String)","pos":[0,24]}]},{"content":"\\n&lt;p&gt;The relative or absolute path to the directory to search.","pos":[74271,74333],"source":"\\n<p>The relative or absolute path to the directory to search."},{"content":"This string is not case-sensitive.&lt;/p&gt;\\n","pos":[74334,74374],"source":" This string is not case-sensitive.</p>\\n"},{"content":"\\n&lt;p&gt;The search string to match against the names of files in &lt;em&gt;path&lt;/em&gt;.","pos":[74446,74522],"source":"\\n<p>The search string to match against the names of files in <em>path</em>."},{"content":"This parameter can contain a combination of valid literal path and wildcard (* and ?) characters (see Remarks), but doesn't support regular expressions.&lt;/p&gt;\\n","pos":[74524,74682],"source":"  This parameter can contain a combination of valid literal path and wildcard (* and ?) characters (see Remarks), but doesn't support regular expressions.</p>\\n"},{"content":"\\n&lt;p&gt;An array of the full names (including paths) for the files in the specified directory that match the specified search pattern, or an empty array if no files are found.&lt;/p&gt;\\n","pos":[74744,74922],"source":"\\n<p>An array of the full names (including paths) for the files in the specified directory that match the specified search pattern, or an empty array if no files are found.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is a file name.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;A network error has occurred.","pos":[75027,75114],"source":"\\n<p>\\n<em>path</em> is a file name.</p>\\n<p>-or-</p>\\n<p>A network error has occurred."},{"content":"&lt;/p&gt;\\n","pos":[75115,75121],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[75238,75292],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[75293,75299],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; or &lt;em&gt;searchPattern&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[75846,75918],"source":"\\n<p>\\n<em>path</em> or <em>searchPattern</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[75919,75925],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or both exceed the system-defined maximum length.","pos":[76034,76119],"source":"\\n<p>The specified path, file name, or both exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.","pos":[76120,76248]},{"content":"&lt;/p&gt;\\n","pos":[76249,76255],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path is not found or is invalid (for example, it is on an unmapped drive).","pos":[76376,76469],"source":"\\n<p>The specified path is not found or is invalid (for example, it is on an unmapped drive)."},{"content":"&lt;/p&gt;\\n","pos":[76470,76476],"source":" </p>\\n"},{"pos":[77049,77087],"content":"GetFiles(String, String, SearchOption)","needQuote":true,"nodes":[{"content":"GetFiles(String, String, SearchOption)","pos":[0,38]}]},{"content":"\\n&lt;p&gt;The relative or absolute path to the directory to search.","pos":[78020,78082],"source":"\\n<p>The relative or absolute path to the directory to search."},{"content":"This string is not case-sensitive.&lt;/p&gt;\\n","pos":[78083,78123],"source":" This string is not case-sensitive.</p>\\n"},{"content":"\\n&lt;p&gt;The search string to match against the names of files in &lt;em&gt;path&lt;/em&gt;.","pos":[78195,78271],"source":"\\n<p>The search string to match against the names of files in <em>path</em>."},{"content":"This parameter can contain a combination of valid literal path and wildcard (* and ?) characters (see Remarks), but doesn't support regular expressions.&lt;/p&gt;\\n","pos":[78273,78431],"source":"  This parameter can contain a combination of valid literal path and wildcard (* and ?) characters (see Remarks), but doesn't support regular expressions.</p>\\n"},{"content":"\\n&lt;p&gt;One of the enumeration values that specifies whether the search operation should include all subdirectories or only the current directory.","pos":[78511,78654],"source":"\\n<p>One of the enumeration values that specifies whether the search operation should include all subdirectories or only the current directory."},{"content":"&lt;/p&gt;\\n","pos":[78655,78661],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An array of the full names (including paths) for the files in the specified directory that match the specified search pattern and option, or an empty array if no files are found.&lt;/p&gt;\\n","pos":[78723,78912],"source":"\\n<p>An array of the full names (including paths) for the files in the specified directory that match the specified search pattern and option, or an empty array if no files are found.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; or &lt;em&gt;searchpattern&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[79481,79559],"source":"\\n<p>\\n<em>path</em> or <em>searchpattern</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[79932,79986],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[79987,79993],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path is not found or is invalid (for example, it is on an unmapped drive).","pos":[80114,80207],"source":"\\n<p>The specified path is not found or is invalid (for example, it is on an unmapped drive)."},{"content":"&lt;/p&gt;\\n","pos":[80208,80214],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or both exceed the system-defined maximum length.","pos":[80323,80408],"source":"\\n<p>The specified path, file name, or both exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.","pos":[80409,80537]},{"content":"&lt;/p&gt;\\n","pos":[80538,80544],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is a file name.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;A network error has occurred.","pos":[80635,80722],"source":"\\n<p>\\n<em>path</em> is a file name.</p>\\n<p>-or-</p>\\n<p>A network error has occurred."},{"content":"&lt;/p&gt;\\n","pos":[80723,80729],"source":" </p>\\n"},{"pos":[81241,81269],"content":"GetFileSystemEntries(String)","needQuote":true,"nodes":[{"content":"GetFileSystemEntries(String)","pos":[0,28]}]},{"content":"\\n&lt;p&gt;The relative or absolute path to the directory to search.","pos":[81998,82060],"source":"\\n<p>The relative or absolute path to the directory to search."},{"content":"This string is not case-sensitive.&lt;/p&gt;\\n","pos":[82061,82101],"source":" This string is not case-sensitive.</p>\\n"},{"content":"\\n&lt;p&gt;An array of the names of files and subdirectories in the specified directory, or an empty array if no files or subdirectories are found.&lt;/p&gt;\\n","pos":[82163,82310],"source":"\\n<p>An array of the names of files and subdirectories in the specified directory, or an empty array if no files or subdirectories are found.</p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[82441,82495],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[82496,82502],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[82965,83011],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[83012,83018],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or both exceed the system-defined maximum length.","pos":[83127,83212],"source":"\\n<p>The specified path, file name, or both exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.","pos":[83213,83341]},{"content":"&lt;/p&gt;\\n","pos":[83342,83348],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is a file name.","pos":[83439,83475],"source":"\\n<p>\\n<em>path</em> is a file name."},{"content":"&lt;/p&gt;\\n","pos":[83476,83482],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path is invalid (for example, it is on an unmapped drive).","pos":[83603,83680],"source":"\\n<p>The specified path is invalid (for example, it is on an unmapped drive)."},{"content":"&lt;/p&gt;\\n","pos":[83681,83687],"source":" </p>\\n"},{"pos":[84402,84438],"content":"GetFileSystemEntries(String, String)","needQuote":true,"nodes":[{"content":"GetFileSystemEntries(String, String)","pos":[0,36]}]},{"content":"\\n&lt;p&gt;The relative or absolute path to the directory to search.","pos":[85263,85325],"source":"\\n<p>The relative or absolute path to the directory to search."},{"content":"This string is not case-sensitive.&lt;/p&gt;\\n","pos":[85326,85366],"source":" This string is not case-sensitive.</p>\\n"},{"content":"\\n&lt;p&gt;The search string to match against the names of file and directories in &lt;em&gt;path&lt;/em&gt;.","pos":[85438,85529],"source":"\\n<p>The search string to match against the names of file and directories in <em>path</em>."},{"content":"This parameter can contain a combination of valid literal path and wildcard (* and ?) characters (see Remarks), but doesn't support regular expressions.&lt;/p&gt;\\n","pos":[85531,85689],"source":"  This parameter can contain a combination of valid literal path and wildcard (* and ?) characters (see Remarks), but doesn't support regular expressions.</p>\\n"},{"content":"\\n&lt;p&gt;An array of file names and directory names that match the specified search criteria, or an empty array if no files or directories are found.&lt;/p&gt;\\n","pos":[85751,85902],"source":"\\n<p>An array of file names and directory names that match the specified search criteria, or an empty array if no files or directories are found.</p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[86033,86087],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[86088,86094],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; or &lt;em&gt;searchPattern&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[86649,86721],"source":"\\n<p>\\n<em>path</em> or <em>searchPattern</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[86722,86728],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or both exceed the system-defined maximum length.","pos":[86837,86922],"source":"\\n<p>The specified path, file name, or both exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.","pos":[86923,87051]},{"content":"&lt;/p&gt;\\n","pos":[87052,87058],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is a file name.","pos":[87149,87185],"source":"\\n<p>\\n<em>path</em> is a file name."},{"content":"&lt;/p&gt;\\n","pos":[87186,87192],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path is invalid (for example, it is on an unmapped drive).","pos":[87313,87390],"source":"\\n<p>The specified path is invalid (for example, it is on an unmapped drive)."},{"content":"&lt;/p&gt;\\n","pos":[87391,87397],"source":" </p>\\n"},{"pos":[88189,88239],"content":"GetFileSystemEntries(String, String, SearchOption)","needQuote":true,"nodes":[{"content":"GetFileSystemEntries(String, String, SearchOption)","pos":[0,50]}]},{"content":"\\n&lt;p&gt;The relative or absolute path to the directory to search.","pos":[89188,89250],"source":"\\n<p>The relative or absolute path to the directory to search."},{"content":"This string is not case-sensitive.&lt;/p&gt;\\n","pos":[89251,89291],"source":" This string is not case-sensitive.</p>\\n"},{"content":"\\n&lt;p&gt;The search string to match against the names of files and directories in &lt;em&gt;path&lt;/em&gt;.","pos":[89363,89455],"source":"\\n<p>The search string to match against the names of files and directories in <em>path</em>."},{"content":"This parameter can contain a combination of valid literal path and wildcard (* and ?) characters (see Remarks), but doesn't support regular expressions.&lt;/p&gt;\\n","pos":[89457,89615],"source":"  This parameter can contain a combination of valid literal path and wildcard (* and ?) characters (see Remarks), but doesn't support regular expressions.</p>\\n"},{"content":"\\n&lt;p&gt;An array of file the file names and directory names that match the specified search criteria, or an empty array if no files or directories are found.&lt;/p&gt;\\n","pos":[90051,90211],"source":"\\n<p>An array of file the file names and directory names that match the specified search criteria, or an empty array if no files or directories are found.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;searchPattern&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[90772,90890],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>.</p>\\n<p>-or-</p>\\n<p>\\n<em>searchPattern</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[90891,90897],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is invalid, such as referring to an unmapped drive.","pos":[91274,91346],"source":"\\n<p>\\n<em>path</em> is invalid, such as referring to an unmapped drive."},{"content":"&lt;/p&gt;\\n","pos":[91347,91353],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is a file name.&lt;/p&gt;\\n","pos":[91444,91486],"source":"\\n<p>\\n<em>path</em> is a file name.</p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or combined exceed the system-defined maximum length.","pos":[91595,91684],"source":"\\n<p>The specified path, file name, or combined exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.&lt;/p&gt;\\n","pos":[91685,91819],"source":" For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.</p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[91934,91988],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[91989,91995],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.&lt;/p&gt;\\n","pos":[92112,92172],"source":"\\n<p>The caller does not have the required permission.</p>\\n"},{"pos":[92657,92682],"content":"GetLastAccessTime(String)","needQuote":true,"nodes":[{"content":"GetLastAccessTime(String)","pos":[0,25]}]},{"content":"\\n&lt;p&gt;The file or directory for which to obtain access date and time information.","pos":[93401,93481],"source":"\\n<p>The file or directory for which to obtain access date and time information."},{"content":"&lt;/p&gt;\\n","pos":[93482,93488],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A structure that is set to the date and time the specified file or directory was last accessed.","pos":[93550,93650],"source":"\\n<p>A structure that is set to the date and time the specified file or directory was last accessed."},{"content":"This value is expressed in local time.&lt;/p&gt;\\n","pos":[93651,93695],"source":" This value is expressed in local time.</p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[93826,93880],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[93881,93887],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[94361,94407],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[94408,94414],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or both exceed the system-defined maximum length.","pos":[94523,94608],"source":"\\n<p>The specified path, file name, or both exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.","pos":[94609,94737]},{"content":"&lt;/p&gt;\\n","pos":[94738,94744],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;path&lt;/em&gt; parameter is in an invalid format.","pos":[94849,94906],"source":"\\n<p>The <em>path</em> parameter is in an invalid format."},{"content":"&lt;/p&gt;\\n","pos":[94907,94913],"source":" </p>\\n"},{"pos":[95506,95534],"content":"GetLastAccessTimeUtc(String)","needQuote":true,"nodes":[{"content":"GetLastAccessTimeUtc(String)","pos":[0,28]}]},{"content":"\\n&lt;p&gt;The file or directory for which to obtain access date and time information.","pos":[96315,96395],"source":"\\n<p>The file or directory for which to obtain access date and time information."},{"content":"&lt;/p&gt;\\n","pos":[96396,96402],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A structure that is set to the date and time the specified file or directory was last accessed.","pos":[96464,96564],"source":"\\n<p>A structure that is set to the date and time the specified file or directory was last accessed."},{"content":"This value is expressed in UTC time.&lt;/p&gt;\\n","pos":[96565,96607],"source":" This value is expressed in UTC time.</p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[96738,96792],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[96793,96799],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[97274,97320],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[97321,97327],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or both exceed the system-defined maximum length.","pos":[97436,97521],"source":"\\n<p>The specified path, file name, or both exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.","pos":[97522,97650]},{"content":"&lt;/p&gt;\\n","pos":[97651,97657],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;path&lt;/em&gt; parameter is in an invalid format.","pos":[97762,97819],"source":"\\n<p>The <em>path</em> parameter is in an invalid format."},{"content":"&lt;/p&gt;\\n","pos":[97820,97826],"source":" </p>\\n"},{"pos":[98410,98434],"content":"GetLastWriteTime(String)","needQuote":true,"nodes":[{"content":"GetLastWriteTime(String)","pos":[0,24]}]},{"content":"\\n&lt;p&gt;The file or directory for which to obtain modification date and time information.","pos":[99151,99237],"source":"\\n<p>The file or directory for which to obtain modification date and time information."},{"content":"&lt;/p&gt;\\n","pos":[99238,99244],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A structure that is set to the date and time the specified file or directory was last written to.","pos":[99306,99408],"source":"\\n<p>A structure that is set to the date and time the specified file or directory was last written to."},{"content":"This value is expressed in local time.&lt;/p&gt;\\n","pos":[99409,99453],"source":" This value is expressed in local time.</p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[99584,99638],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[99639,99645],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[100120,100166],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[100167,100173],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or both exceed the system-defined maximum length.","pos":[100282,100367],"source":"\\n<p>The specified path, file name, or both exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.","pos":[100368,100496]},{"content":"&lt;/p&gt;\\n","pos":[100497,100503],"source":" </p>\\n"},{"pos":[101092,101119],"content":"GetLastWriteTimeUtc(String)","needQuote":true,"nodes":[{"content":"GetLastWriteTimeUtc(String)","pos":[0,27]}]},{"content":"\\n&lt;p&gt;The file or directory for which to obtain modification date and time information.","pos":[101898,101984],"source":"\\n<p>The file or directory for which to obtain modification date and time information."},{"content":"&lt;/p&gt;\\n","pos":[101985,101991],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A structure that is set to the date and time the specified file or directory was last written to.","pos":[102053,102155],"source":"\\n<p>A structure that is set to the date and time the specified file or directory was last written to."},{"content":"This value is expressed in UTC time.&lt;/p&gt;\\n","pos":[102156,102198],"source":" This value is expressed in UTC time.</p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[102329,102383],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[102384,102390],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[102865,102911],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[102912,102918],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or both exceed the system-defined maximum length.","pos":[103027,103112],"source":"\\n<p>The specified path, file name, or both exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.","pos":[103113,103241]},{"content":"&lt;/p&gt;\\n","pos":[103242,103248],"source":" </p>\\n"},{"pos":[103810,103827],"content":"GetParent(String)","needQuote":true,"nodes":[{"content":"GetParent(String)","pos":[0,17]}]},{"content":"\\n&lt;p&gt;The path for which to retrieve the parent directory.","pos":[104548,104605],"source":"\\n<p>The path for which to retrieve the parent directory."},{"content":"&lt;/p&gt;\\n","pos":[104606,104612],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The parent directory, or &lt;strong&gt;null&lt;/strong&gt; if &lt;em&gt;path&lt;/em&gt; is the root directory, including the root of a UNC server or share name.&lt;/p&gt;\\n","pos":[104682,104829],"source":"\\n<p>The parent directory, or <strong>null</strong> if <em>path</em> is the root directory, including the root of a UNC server or share name.</p>\\n"},{"content":"\\n&lt;p&gt;The directory specified by &lt;em&gt;path&lt;/em&gt; is read-only.","pos":[104934,104993],"source":"\\n<p>The directory specified by <em>path</em> is read-only."},{"content":"&lt;/p&gt;\\n","pos":[104994,105000],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[105117,105171],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[105172,105178],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[105653,105699],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[105700,105706],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or both exceed the system-defined maximum length.","pos":[105815,105900],"source":"\\n<p>The specified path, file name, or both exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.","pos":[105901,106029]},{"content":"&lt;/p&gt;\\n","pos":[106030,106036],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path was not found.","pos":[106157,106195],"source":"\\n<p>The specified path was not found."},{"content":"&lt;/p&gt;\\n","pos":[106196,106202],"source":" </p>\\n"},{"pos":[106773,106793],"content":"Move(String, String)","needQuote":true,"nodes":[{"content":"Move(String, String)","pos":[0,20]}]},{"content":"\\n&lt;p&gt;The path of the file or directory to move.","pos":[107594,107641],"source":"\\n<p>The path of the file or directory to move."},{"content":"&lt;/p&gt;\\n","pos":[107642,107648],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The path to the new location for &lt;em&gt;sourceDirName&lt;/em&gt;.","pos":[107718,107779],"source":"\\n<p>The path to the new location for <em>sourceDirName</em>."},{"content":"If &lt;em&gt;sourceDirName&lt;/em&gt; is a file, then &lt;em&gt;destDirName&lt;/em&gt; must also be a file name.&lt;/p&gt;\\n","pos":[107780,107874],"source":" If <em>sourceDirName</em> is a file, then <em>destDirName</em> must also be a file name.</p>\\n"},{"content":"\\n&lt;p&gt;An attempt was made to move a directory to a different volume.","pos":[107979,108046],"source":"\\n<p>An attempt was made to move a directory to a different volume."},{"content":"&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;destDirName&lt;/em&gt; already exists.","pos":[108047,108108],"source":" </p>\\n<p>-or- </p>\\n<p>\\n<em>destDirName</em> already exists."},{"content":"&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;The &lt;em&gt;sourceDirName&lt;/em&gt; and &lt;em&gt;destDirName&lt;/em&gt; parameters refer to the same file or directory.","pos":[108109,108231],"source":" </p>\\n<p>-or- </p>\\n<p>The <em>sourceDirName</em> and <em>destDirName</em> parameters refer to the same file or directory."},{"content":"&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;The directory or a file within it is being used by another process.&lt;/p&gt;\\n","pos":[108232,108327],"source":" </p>\\n<p>-or-</p>\\n<p>The directory or a file within it is being used by another process.</p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[108444,108498],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[108499,108505],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;sourceDirName&lt;/em&gt; or &lt;em&gt;destDirName&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[109013,109092],"source":"\\n<p>\\n<em>sourceDirName</em> or <em>destDirName</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[109093,109099],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or both exceed the system-defined maximum length.","pos":[109208,109293],"source":"\\n<p>The specified path, file name, or both exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.","pos":[109294,109422]},{"content":"&lt;/p&gt;\\n","pos":[109423,109429],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The path specified by &lt;em&gt;sourceDirName&lt;/em&gt; is invalid (for example, it is on an unmapped drive).","pos":[109550,109653],"source":"\\n<p>The path specified by <em>sourceDirName</em> is invalid (for example, it is on an unmapped drive)."},{"content":"&lt;/p&gt;\\n","pos":[109654,109660],"source":" </p>\\n"},{"pos":[110187,110220],"content":"SetCreationTime(String, DateTime)","needQuote":true,"nodes":[{"content":"SetCreationTime(String, DateTime)","pos":[0,33]}]},{"content":"\\n&lt;p&gt;The file or directory for which to set the creation date and time information.","pos":[110968,111051],"source":"\\n<p>The file or directory for which to set the creation date and time information."},{"content":"&lt;/p&gt;\\n","pos":[111052,111058],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The date and time the file or directory was last written to.","pos":[111131,111196],"source":"\\n<p>The date and time the file or directory was last written to."},{"content":"This value is expressed in local time.&lt;/p&gt;\\n","pos":[111197,111241],"source":" This value is expressed in local time.</p>\\n"},{"content":"\\n&lt;p&gt;The specified path was not found.","pos":[111366,111404],"source":"\\n<p>The specified path was not found."},{"content":"&lt;/p&gt;\\n","pos":[111405,111411],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[111886,111932],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[111933,111939],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or both exceed the system-defined maximum length.","pos":[112048,112133],"source":"\\n<p>The specified path, file name, or both exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.","pos":[112134,112262]},{"content":"&lt;/p&gt;\\n","pos":[112263,112269],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[112386,112440],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[112441,112447],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;creationTime&lt;/em&gt; specifies a value outside the range of dates or times permitted for this operation.","pos":[112564,112676],"source":"\\n<p>\\n<em>creationTime</em> specifies a value outside the range of dates or times permitted for this operation."},{"content":"&lt;/p&gt;\\n","pos":[112677,112683],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The current operating system is not Windows NT or later.&lt;/p&gt;\\n","pos":[112804,112871],"source":"\\n<p>The current operating system is not Windows NT or later.</p>\\n"},{"pos":[113514,113550],"content":"SetCreationTimeUtc(String, DateTime)","needQuote":true,"nodes":[{"content":"SetCreationTimeUtc(String, DateTime)","pos":[0,36]}]},{"content":"\\n&lt;p&gt;The file or directory for which to set the creation date and time information.","pos":[114439,114522],"source":"\\n<p>The file or directory for which to set the creation date and time information."},{"content":"&lt;/p&gt;\\n","pos":[114523,114529],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The date and time the directory or file was created.","pos":[114605,114662],"source":"\\n<p>The date and time the directory or file was created."},{"content":"This value is expressed in local time.&lt;/p&gt;\\n","pos":[114663,114707],"source":" This value is expressed in local time.</p>\\n"},{"content":"\\n&lt;p&gt;The specified path was not found.","pos":[114832,114870],"source":"\\n<p>The specified path was not found."},{"content":"&lt;/p&gt;\\n","pos":[114871,114877],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[115352,115398],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[115399,115405],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or both exceed the system-defined maximum length.","pos":[115514,115599],"source":"\\n<p>The specified path, file name, or both exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.","pos":[115600,115728]},{"content":"&lt;/p&gt;\\n","pos":[115729,115735],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[115852,115906],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[115907,115913],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;creationTime&lt;/em&gt; specifies a value outside the range of dates or times permitted for this operation.","pos":[116030,116142],"source":"\\n<p>\\n<em>creationTime</em> specifies a value outside the range of dates or times permitted for this operation."},{"content":"&lt;/p&gt;\\n","pos":[116143,116149],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The current operating system is not Windows NT or later.&lt;/p&gt;\\n","pos":[116270,116337],"source":"\\n<p>The current operating system is not Windows NT or later.</p>\\n"},{"pos":[116938,116965],"content":"SetCurrentDirectory(String)","needQuote":true,"nodes":[{"content":"SetCurrentDirectory(String)","pos":[0,27]}]},{"content":"\\n&lt;p&gt;The path to which the current working directory is set.","pos":[117746,117806],"source":"\\n<p>The path to which the current working directory is set."},{"content":"&lt;/p&gt;\\n","pos":[117807,117813],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurred.","pos":[117918,117945],"source":"\\n<p>An I/O error occurred."},{"content":"&lt;/p&gt;\\n","pos":[117946,117952],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[118427,118473],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[118474,118480],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or both exceed the system-defined maximum length.","pos":[118589,118674],"source":"\\n<p>The specified path, file name, or both exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.","pos":[118675,118803]},{"content":"&lt;/p&gt;\\n","pos":[118804,118810],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission to access unmanaged code.","pos":[118925,119004],"source":"\\n<p>The caller does not have the required permission to access unmanaged code."},{"content":"&lt;/p&gt;\\n","pos":[119005,119011],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path was not found.","pos":[119122,119160],"source":"\\n<p>The specified path was not found."},{"content":"&lt;/p&gt;\\n","pos":[119161,119167],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified directory was not found.&lt;/p&gt;\\n","pos":[119288,119337],"source":"\\n<p>The specified directory was not found.</p>\\n"},{"pos":[120092,120127],"content":"SetLastAccessTime(String, DateTime)","needQuote":true,"nodes":[{"content":"SetLastAccessTime(String, DateTime)","pos":[0,35]}]},{"content":"\\n&lt;p&gt;The file or directory for which to set the access date and time information.","pos":[120892,120973],"source":"\\n<p>The file or directory for which to set the access date and time information."},{"content":"&lt;/p&gt;\\n","pos":[120974,120980],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An object that contains the value to set for the access date and time of &lt;em&gt;path&lt;/em&gt;.","pos":[121055,121147],"source":"\\n<p>An object that contains the value to set for the access date and time of <em>path</em>."},{"content":"This value is expressed in local time.","pos":[121148,121186]},{"content":"&lt;/p&gt;\\n","pos":[121187,121193],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path was not found.","pos":[121318,121356],"source":"\\n<p>The specified path was not found."},{"content":"&lt;/p&gt;\\n","pos":[121357,121363],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[121838,121884],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[121885,121891],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or both exceed the system-defined maximum length.","pos":[122000,122085],"source":"\\n<p>The specified path, file name, or both exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.","pos":[122086,122214]},{"content":"&lt;/p&gt;\\n","pos":[122215,122221],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[122338,122392],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[122393,122399],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The current operating system is not Windows NT or later.&lt;/p&gt;\\n","pos":[122520,122587],"source":"\\n<p>The current operating system is not Windows NT or later.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;lastAccessTime&lt;/em&gt; specifies a value outside the range of dates or times permitted for this operation.&lt;/p&gt;\\n","pos":[122704,122824],"source":"\\n<p>\\n<em>lastAccessTime</em> specifies a value outside the range of dates or times permitted for this operation.</p>\\n"},{"pos":[123475,123513],"content":"SetLastAccessTimeUtc(String, DateTime)","needQuote":true,"nodes":[{"content":"SetLastAccessTimeUtc(String, DateTime)","pos":[0,38]}]},{"content":"\\n&lt;p&gt;The file or directory for which to set the access date and time information.","pos":[124424,124505],"source":"\\n<p>The file or directory for which to set the access date and time information."},{"content":"&lt;/p&gt;\\n","pos":[124506,124512],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An object that  contains the value to set for the access date and time of &lt;em&gt;path&lt;/em&gt;.","pos":[124590,124683],"source":"\\n<p>An object that  contains the value to set for the access date and time of <em>path</em>."},{"content":"This value is expressed in UTC time.","pos":[124684,124720]},{"content":"&lt;/p&gt;\\n","pos":[124721,124727],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path was not found.","pos":[124852,124890],"source":"\\n<p>The specified path was not found."},{"content":"&lt;/p&gt;\\n","pos":[124891,124897],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[125372,125418],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[125419,125425],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or both exceed the system-defined maximum length.","pos":[125534,125619],"source":"\\n<p>The specified path, file name, or both exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.","pos":[125620,125748]},{"content":"&lt;/p&gt;\\n","pos":[125749,125755],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[125872,125926],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[125927,125933],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The current operating system is not Windows NT or later.&lt;/p&gt;\\n","pos":[126054,126121],"source":"\\n<p>The current operating system is not Windows NT or later.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;lastAccessTimeUtc&lt;/em&gt; specifies a value outside the range of dates or times permitted for this operation.&lt;/p&gt;\\n","pos":[126238,126361],"source":"\\n<p>\\n<em>lastAccessTimeUtc</em> specifies a value outside the range of dates or times permitted for this operation.</p>\\n"},{"pos":[127003,127037],"content":"SetLastWriteTime(String, DateTime)","needQuote":true,"nodes":[{"content":"SetLastWriteTime(String, DateTime)","pos":[0,34]}]},{"content":"\\n&lt;p&gt;The path of the directory.","pos":[127778,127809],"source":"\\n<p>The path of the directory."},{"content":"&lt;/p&gt;\\n","pos":[127810,127816],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The date and time the directory was last written to.","pos":[127890,127947],"source":"\\n<p>The date and time the directory was last written to."},{"content":"This value is expressed in local time.","pos":[127948,127986]},{"content":"&lt;/p&gt;\\n","pos":[127988,127994],"source":"  </p>\\n"},{"content":"\\n&lt;p&gt;The specified path was not found.","pos":[128119,128157],"source":"\\n<p>The specified path was not found."},{"content":"&lt;/p&gt;\\n","pos":[128158,128164],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[128639,128685],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[128686,128692],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or both exceed the system-defined maximum length.","pos":[128801,128886],"source":"\\n<p>The specified path, file name, or both exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.","pos":[128887,129015]},{"content":"&lt;/p&gt;\\n","pos":[129016,129022],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[129139,129193],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[129194,129200],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The current operating system is not Windows NT or later.&lt;/p&gt;\\n","pos":[129321,129388],"source":"\\n<p>The current operating system is not Windows NT or later.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;lastWriteTime&lt;/em&gt; specifies a value outside the range of dates or times permitted for this operation.&lt;/p&gt;\\n","pos":[129505,129624],"source":"\\n<p>\\n<em>lastWriteTime</em> specifies a value outside the range of dates or times permitted for this operation.</p>\\n"},{"pos":[130271,130308],"content":"SetLastWriteTimeUtc(String, DateTime)","needQuote":true,"nodes":[{"content":"SetLastWriteTimeUtc(String, DateTime)","pos":[0,37]}]},{"content":"\\n&lt;p&gt;The path of the directory.","pos":[131195,131226],"source":"\\n<p>The path of the directory."},{"content":"&lt;/p&gt;\\n","pos":[131227,131233],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The date and time the directory was last written to.","pos":[131310,131367],"source":"\\n<p>The date and time the directory was last written to."},{"content":"This value is expressed in UTC time.","pos":[131368,131404]},{"content":"&lt;/p&gt;\\n","pos":[131405,131411],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path was not found.","pos":[131536,131574],"source":"\\n<p>The specified path was not found."},{"content":"&lt;/p&gt;\\n","pos":[131575,131581],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[132056,132102],"source":"\\n<p>\\n<em>path</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[132103,132109],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified path, file name, or both exceed the system-defined maximum length.","pos":[132218,132303],"source":"\\n<p>The specified path, file name, or both exceed the system-defined maximum length."},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.","pos":[132304,132432]},{"content":"&lt;/p&gt;\\n","pos":[132433,132439],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the required permission.","pos":[132556,132610],"source":"\\n<p>The caller does not have the required permission."},{"content":"&lt;/p&gt;\\n","pos":[132611,132617],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The current operating system is not Windows NT or later.&lt;/p&gt;\\n","pos":[132738,132805],"source":"\\n<p>The current operating system is not Windows NT or later.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;lastWriteTimeUtc&lt;/em&gt; specifies a value outside the range of dates or times permitted for this operation.&lt;/p&gt;\\n","pos":[132922,133044],"source":"\\n<p>\\n<em>lastWriteTimeUtc</em> specifies a value outside the range of dates or times permitted for this operation.</p>\\n"},{"pos":[133465,133474],"content":"System.IO","needQuote":true,"nodes":[{"content":"System.IO","pos":[0,9]}]},{"pos":[133614,133620],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[133780,133790],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[133885,133893],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[133962,133963],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[133990,133991],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[134061,134069],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[134138,134139],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[134166,134167],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[134350,134364],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[134483,134489],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[134556,134557],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[134607,134613],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[134673,134674],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[134757,134763],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[134830,134831],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[134881,134887],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[134947,134948],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[135162,135184],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[135332,135338],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[135405,135406],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[135456,135462],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[135523,135524]},{"pos":[135579,135585],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[135645,135646],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[135743,135749],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[135816,135817],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[135867,135873],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[135934,135935]},{"pos":[135990,135996],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[136056,136057],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[136302,136333],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[136499,136514],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[136590,136591],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[136641,136647],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[136708,136709]},{"pos":[136764,136770],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[136830,136831],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[136937,136952],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[137028,137029],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[137079,137085],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[137146,137147]},{"pos":[137202,137208],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[137268,137269],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[137499,137512],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[137613,137624],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[137696,137697],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[137724,137725],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[137798,137809],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[137881,137882],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[137909,137910],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[138085,138094],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[138187,138194],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[138262,138263],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[138290,138291],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[138360,138367],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[138435,138436],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[138463,138464],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[138639,138656],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[138765,138780],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[138856,138857],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[138884,138885],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[138962,138977],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[139053,139054],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[139081,139082],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[139227,139233],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[139364,139370],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[139528,139541],"content":"DirectoryInfo","needQuote":true,"nodes":[{"content":"DirectoryInfo","pos":[0,13]}]},{"pos":[139714,139721],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[139964,139983],"content":"IEnumerable<String>","needQuote":true,"nodes":[{"content":"IEnumerable&lt;String&gt;","pos":[0,19],"source":"IEnumerable<String>"}]},{"pos":[140231,140242],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[140306,140307],"content":"<","needQuote":true,"nodes":[]},{"pos":[140357,140363],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[140516,140527],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[140592,140595]},{"pos":[140652,140658],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[140718,140719],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[140959,140973],"content":"IEnumerable<T>","needQuote":true,"nodes":[{"content":"IEnumerable&lt;T&gt;","pos":[0,14],"source":"IEnumerable<T>"}]},{"pos":[141192,141203],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[141267,141268],"content":"<","needQuote":true,"nodes":[]},{"pos":[141295,141296],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[141416,141427],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[141492,141495]},{"pos":[141529,141530],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[141557,141558],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[141761,141787],"content":"System.Collections.Generic","needQuote":true,"nodes":[{"content":"System.Collections.Generic","pos":[0,26]}]},{"pos":[141990,142002],"content":"SearchOption","needQuote":true,"nodes":[{"content":"SearchOption","pos":[0,12]}]},{"pos":[142173,142181],"content":"DateTime","needQuote":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[142297,142305],"content":"String[]","needQuote":true,"nodes":[{"content":"String[]","pos":[0,8]}]},{"pos":[142433,142439],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":"[]","pos":[142500,142502]},{"pos":[142567,142573],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[142633,142635],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[142783,142794],"content":"IOException","needQuote":true,"nodes":[{"content":"IOException","pos":[0,11]}]},{"pos":[142981,143008],"content":"UnauthorizedAccessException","needQuote":true,"nodes":[{"content":"UnauthorizedAccessException","pos":[0,27]}]},{"pos":[143227,143244],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]},{"pos":[143420,143441],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[143631,143651],"content":"PathTooLongException","needQuote":true,"nodes":[{"content":"PathTooLongException","pos":[0,20]}]},{"pos":[143850,143876],"content":"DirectoryNotFoundException","needQuote":true,"nodes":[{"content":"DirectoryNotFoundException","pos":[0,26]}]},{"pos":[144102,144123],"content":"NotSupportedException","needQuote":true,"nodes":[{"content":"NotSupportedException","pos":[0,21]}]},{"pos":[144316,144333],"content":"SecurityException","needQuote":true,"nodes":[{"content":"SecurityException","pos":[0,17]}]},{"pos":[144533,144560],"content":"ArgumentOutOfRangeException","needQuote":true,"nodes":[{"content":"ArgumentOutOfRangeException","pos":[0,27]}]},{"pos":[144769,144790],"content":"FileNotFoundException","needQuote":true,"nodes":[{"content":"FileNotFoundException","pos":[0,21]}]},{"pos":[144992,145021],"content":"PlatformNotSupportedException","needQuote":true,"nodes":[{"content":"PlatformNotSupportedException","pos":[0,29]}]}],"content":"items:\n- uid: System.IO.Directory\n  commentId: T:System.IO.Directory\n  id: Directory\n  parent: System.IO\n  children:\n  - System.IO.Directory.CreateDirectory(System.String)\n  - System.IO.Directory.Delete(System.String)\n  - System.IO.Directory.Delete(System.String,System.Boolean)\n  - System.IO.Directory.EnumerateDirectories(System.String)\n  - System.IO.Directory.EnumerateDirectories(System.String,System.String)\n  - System.IO.Directory.EnumerateDirectories(System.String,System.String,System.IO.SearchOption)\n  - System.IO.Directory.EnumerateFiles(System.String)\n  - System.IO.Directory.EnumerateFiles(System.String,System.String)\n  - System.IO.Directory.EnumerateFiles(System.String,System.String,System.IO.SearchOption)\n  - System.IO.Directory.EnumerateFileSystemEntries(System.String)\n  - System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String)\n  - System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String,System.IO.SearchOption)\n  - System.IO.Directory.Exists(System.String)\n  - System.IO.Directory.GetCreationTime(System.String)\n  - System.IO.Directory.GetCreationTimeUtc(System.String)\n  - System.IO.Directory.GetCurrentDirectory\n  - System.IO.Directory.GetDirectories(System.String)\n  - System.IO.Directory.GetDirectories(System.String,System.String)\n  - System.IO.Directory.GetDirectories(System.String,System.String,System.IO.SearchOption)\n  - System.IO.Directory.GetDirectoryRoot(System.String)\n  - System.IO.Directory.GetFiles(System.String)\n  - System.IO.Directory.GetFiles(System.String,System.String)\n  - System.IO.Directory.GetFiles(System.String,System.String,System.IO.SearchOption)\n  - System.IO.Directory.GetFileSystemEntries(System.String)\n  - System.IO.Directory.GetFileSystemEntries(System.String,System.String)\n  - System.IO.Directory.GetFileSystemEntries(System.String,System.String,System.IO.SearchOption)\n  - System.IO.Directory.GetLastAccessTime(System.String)\n  - System.IO.Directory.GetLastAccessTimeUtc(System.String)\n  - System.IO.Directory.GetLastWriteTime(System.String)\n  - System.IO.Directory.GetLastWriteTimeUtc(System.String)\n  - System.IO.Directory.GetParent(System.String)\n  - System.IO.Directory.Move(System.String,System.String)\n  - System.IO.Directory.SetCreationTime(System.String,System.DateTime)\n  - System.IO.Directory.SetCreationTimeUtc(System.String,System.DateTime)\n  - System.IO.Directory.SetCurrentDirectory(System.String)\n  - System.IO.Directory.SetLastAccessTime(System.String,System.DateTime)\n  - System.IO.Directory.SetLastAccessTimeUtc(System.String,System.DateTime)\n  - System.IO.Directory.SetLastWriteTime(System.String,System.DateTime)\n  - System.IO.Directory.SetLastWriteTimeUtc(System.String,System.DateTime)\n  langs:\n  - csharp\n  - vb\n  name: Directory\n  fullName: System.IO.Directory\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/Directory.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Directory\n    path: src/mscorlib/src/System/IO/Directory.cs\n    startLine: 36\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Exposes static methods for creating, moving, and enumerating through directories and subdirectories. This class cannot be inherited.</p>\\n\"\n  syntax:\n    content: >-\n      [ComVisible(true)]\n\n      public class Directory\n    content.vb: >-\n      <ComVisible(True)>\n\n      Public Class Directory\n  seealso:\n  - type: System.IO.DriveInfo\n    commentId: T:System.IO.DriveInfo\n  - type: System.IO.File\n    commentId: T:System.IO.File\n  - type: System.IO.DirectoryInfo\n    commentId: T:System.IO.DirectoryInfo\n  - type: System.IO.FileInfo\n    commentId: T:System.IO.FileInfo\n  - type: System.IO.FileSystemWatcher\n    commentId: T:System.IO.FileSystemWatcher\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: Directory\n- uid: System.IO.Directory.CreateDirectory(System.String)\n  commentId: M:System.IO.Directory.CreateDirectory(System.String)\n  id: CreateDirectory(System.String)\n  parent: System.IO.Directory\n  langs:\n  - csharp\n  - vb\n  name: CreateDirectory(String)\n  fullName: System.IO.Directory.CreateDirectory(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/Directory.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: CreateDirectory\n    path: src/mscorlib/src/System/IO/Directory.cs\n    startLine: 55\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Creates all directories and subdirectories in the specified path unless they already exist.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public static DirectoryInfo CreateDirectory(string path)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Shared Function CreateDirectory(path As String) As DirectoryInfo\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The directory to create. </p>\\n\"\n    return:\n      type: System.IO.DirectoryInfo\n      description: \"\\n<p>An object that represents the directory at the specified path. This object is returned regardless of whether a directory at the specified path already exists.</p>\\n\"\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>The directory specified by <em>path</em> is a file.</p>\\n<p>-or-</p>\\n<p>The network name is not known.</p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is a zero-length string, contains only white space, or contains one or more invalid characters. You can query for invalid characters by using the <xref href=\\\"System.IO.Path.GetInvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method.</p>\\n<p>-or-</p>\\n<p>\\n<em>path</em> is prefixed with, or contains, only a colon character (:).</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters. </p>\\n\"\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: \"\\n<p>The specified path is invalid (for example, it is on an unmapped drive). </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>path</em> contains a colon character (:) that is not part of a drive label (\\\"C:\\\\\\\").</p>\\n\"\n  seealso:\n  - type: System.IO.DirectoryInfo\n    commentId: T:System.IO.DirectoryInfo\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Directory.CreateDirectory(String)\n- uid: System.IO.Directory.Delete(System.String)\n  commentId: M:System.IO.Directory.Delete(System.String)\n  id: Delete(System.String)\n  parent: System.IO.Directory\n  langs:\n  - csharp\n  - vb\n  name: Delete(String)\n  fullName: System.IO.Directory.Delete(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/Directory.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Delete\n    path: src/mscorlib/src/System/IO/Directory.cs\n    startLine: 1146\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Deletes an empty directory from a specified path.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public static void Delete(string path)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Shared Sub Delete(path As String)\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The name of the empty directory to remove. This directory must be writable and empty. </p>\\n\"\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>A file with the same name and location specified by <em>path</em> exists.</p>\\n<p>-or-</p>\\n<p>The directory is the application's current working directory.</p>\\n<p>-or-</p>\\n<p>The directory specified by <em>path</em> is not empty.</p>\\n<p>-or-</p>\\n<p>The directory is read-only or contains a read-only file.</p>\\n<p>-or-</p>\\n<p>The directory is being used by another process.</p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is a zero-length string, contains only white space, or contains one or more invalid characters. You can query for invalid characters by using the <xref href=\\\"System.IO.Path.GetInvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters. </p>\\n\"\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: \"\\n<p>\\n<em>path</em> does not exist or could not be found.</p>\\n<p>-or-</p>\\n<p>The specified path is invalid (for example, it is on an unmapped drive). </p>\\n\"\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Directory.Delete(String)\n- uid: System.IO.Directory.Delete(System.String,System.Boolean)\n  commentId: M:System.IO.Directory.Delete(System.String,System.Boolean)\n  id: Delete(System.String,System.Boolean)\n  parent: System.IO.Directory\n  langs:\n  - csharp\n  - vb\n  name: Delete(String, Boolean)\n  fullName: System.IO.Directory.Delete(System.String, System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/Directory.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Delete\n    path: src/mscorlib/src/System/IO/Directory.cs\n    startLine: 1153\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Deletes the specified directory and, if indicated, any subdirectories and files in the directory. </p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public static void Delete(string path, bool recursive)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Shared Sub Delete(path As String, recursive As Boolean)\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The name of the directory to remove. </p>\\n\"\n    - id: recursive\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to remove directories, subdirectories, and files in <em>path</em>; otherwise, <strong>false</strong>. </p>\\n\"\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>A file with the same name and location specified by <em>path</em> exists.</p>\\n<p>-or-</p>\\n<p>The directory specified by <em>path</em> is read-only, or <em>recursive</em> is <strong>false</strong> and <em>path</em> is not an empty directory. </p>\\n<p>-or-</p>\\n<p>The directory is the application's current working directory. </p>\\n<p>-or-</p>\\n<p>The directory contains a read-only file.</p>\\n<p>-or-</p>\\n<p>The directory is being used by another process.</p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The caller does not have the required permission.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is a zero-length string, contains only white space, or contains one or more invalid characters. You can query for invalid characters by using the <xref href=\\\"System.IO.Path.GetInvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters. </p>\\n\"\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: \"\\n<p>\\n<em>path</em> does not exist or could not be found.</p>\\n<p>-or-</p>\\n<p>The specified path is invalid (for example, it is on an unmapped drive). </p>\\n\"\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Directory.Delete(String, Boolean)\n- uid: System.IO.Directory.EnumerateDirectories(System.String)\n  commentId: M:System.IO.Directory.EnumerateDirectories(System.String)\n  id: EnumerateDirectories(System.String)\n  parent: System.IO.Directory\n  langs:\n  - csharp\n  - vb\n  name: EnumerateDirectories(String)\n  fullName: System.IO.Directory.EnumerateDirectories(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/Directory.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: EnumerateDirectories\n    path: src/mscorlib/src/System/IO/Directory.cs\n    startLine: 733\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Returns an enumerable collection of directory names in a specified path.</p>\\n\"\n  syntax:\n    content: public static IEnumerable<string> EnumerateDirectories(string path)\n    content.vb: Public Shared Function EnumerateDirectories(path As String) As IEnumerable(Of String)\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The relative or absolute path to the directory to search. This string is not case-sensitive.</p>\\n\"\n    return:\n      type: System.Collections.Generic.IEnumerable{System.String}\n      description: \"\\n<p>An enumerable collection of the full names (including paths) for the directories in the directory specified by <em>path</em>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path </em>is a zero-length string, contains only white space, or contains invalid characters. You can query for invalid characters by using the <xref href=\\\"System.IO.Path.GetInvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: \"\\n<p>\\n<em>path</em> is invalid, such as referring to an unmapped drive. </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>\\n<em>path</em> is a file name.</p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or combined exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.</p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The caller does not have the required permission.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Directory.EnumerateDirectories(String)\n- uid: System.IO.Directory.EnumerateDirectories(System.String,System.String)\n  commentId: M:System.IO.Directory.EnumerateDirectories(System.String,System.String)\n  id: EnumerateDirectories(System.String,System.String)\n  parent: System.IO.Directory\n  langs:\n  - csharp\n  - vb\n  name: EnumerateDirectories(String, String)\n  fullName: System.IO.Directory.EnumerateDirectories(System.String, System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/Directory.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: EnumerateDirectories\n    path: src/mscorlib/src/System/IO/Directory.cs\n    startLine: 742\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Returns an enumerable collection of directory names that match a search pattern in a specified path.</p>\\n\"\n  syntax:\n    content: public static IEnumerable<string> EnumerateDirectories(string path, string searchPattern)\n    content.vb: Public Shared Function EnumerateDirectories(path As String, searchPattern As String) As IEnumerable(Of String)\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The relative or absolute path to the directory to search. This string is not case-sensitive.</p>\\n\"\n    - id: searchPattern\n      type: System.String\n      description: \"\\n<p>The search string to match against the names of directories in <em>path</em>.  This parameter can contain a combination of valid literal path and wildcard (* and ?) characters (see Remarks), but doesn't support regular expressions.</p>\\n\"\n    return:\n      type: System.Collections.Generic.IEnumerable{System.String}\n      description: \"\\n<p>An enumerable collection of the full names (including paths) for the directories in the directory specified by <em>path</em> and that match the specified search pattern.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path </em>is a zero-length string, contains only white space, or contains invalid characters. You can query for invalid characters with the  <xref href=\\\"System.IO.Path.GetInvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method.</p>\\n<p>- or -</p>\\n<p>\\n<em>searchPattern</em> does not contain a valid pattern.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>.</p>\\n<p>-or-</p>\\n<p>\\n<em>searchPattern</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: \"\\n<p>\\n<em>path</em> is invalid, such as referring to an unmapped drive. </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>\\n<em>path</em> is a file name.</p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or combined exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.</p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The caller does not have the required permission.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Directory.EnumerateDirectories(String, String)\n- uid: System.IO.Directory.EnumerateDirectories(System.String,System.String,System.IO.SearchOption)\n  commentId: M:System.IO.Directory.EnumerateDirectories(System.String,System.String,System.IO.SearchOption)\n  id: EnumerateDirectories(System.String,System.String,System.IO.SearchOption)\n  parent: System.IO.Directory\n  langs:\n  - csharp\n  - vb\n  name: EnumerateDirectories(String, String, SearchOption)\n  fullName: System.IO.Directory.EnumerateDirectories(System.String, System.String, System.IO.SearchOption)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/Directory.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: EnumerateDirectories\n    path: src/mscorlib/src/System/IO/Directory.cs\n    startLine: 753\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Returns an enumerable collection of directory names that match a search pattern in a specified path, and optionally searches subdirectories.</p>\\n\"\n  syntax:\n    content: public static IEnumerable<string> EnumerateDirectories(string path, string searchPattern, SearchOption searchOption)\n    content.vb: Public Shared Function EnumerateDirectories(path As String, searchPattern As String, searchOption As SearchOption) As IEnumerable(Of String)\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The relative or absolute path to the directory to search. This string is not case-sensitive.</p>\\n\"\n    - id: searchPattern\n      type: System.String\n      description: \"\\n<p>The search string to match against the names of directories in <em>path</em>.  This parameter can contain a combination of valid literal path and wildcard (* and ?) characters (see Remarks), but doesn't support regular expressions.</p>\\n\"\n    - id: searchOption\n      type: System.IO.SearchOption\n      description: \"\\n<p>One of the enumeration values that specifies whether the search operation should include only the current directory or should include all subdirectories.</p>\\n<p>The default value is <xref href=\\\"System.IO.SearchOption.TopDirectoryOnly\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    return:\n      type: System.Collections.Generic.IEnumerable{System.String}\n      description: \"\\n<p>An enumerable collection of the full names (including paths) for the directories in the directory specified by <em>path</em> and that match the specified search pattern and option.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path </em>is a zero-length string, contains only white space, or contains invalid characters. You can query for invalid characters by using the  <xref href=\\\"System.IO.Path.GetInvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method.</p>\\n<p>- or -</p>\\n<p>\\n<em>searchPattern</em> does not contain a valid pattern.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>.</p>\\n<p>-or-</p>\\n<p>\\n<em>searchPattern</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>searchOption</em> is not a valid <xref href=\\\"System.IO.SearchOption\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: \"\\n<p>\\n<em>path</em> is invalid, such as referring to an unmapped drive. </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>\\n<em>path</em> is a file name.</p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or combined exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.</p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The caller does not have the required permission.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Directory.EnumerateDirectories(String, String, SearchOption)\n- uid: System.IO.Directory.EnumerateFiles(System.String)\n  commentId: M:System.IO.Directory.EnumerateFiles(System.String)\n  id: EnumerateFiles(System.String)\n  parent: System.IO.Directory\n  langs:\n  - csharp\n  - vb\n  name: EnumerateFiles(String)\n  fullName: System.IO.Directory.EnumerateFiles(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/Directory.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: EnumerateFiles\n    path: src/mscorlib/src/System/IO/Directory.cs\n    startLine: 775\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Returns an enumerable collection of file names in a specified path.</p>\\n\"\n  syntax:\n    content: public static IEnumerable<string> EnumerateFiles(string path)\n    content.vb: Public Shared Function EnumerateFiles(path As String) As IEnumerable(Of String)\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The relative or absolute path to the directory to search. This string is not case-sensitive.</p>\\n\"\n    return:\n      type: System.Collections.Generic.IEnumerable{System.String}\n      description: \"\\n<p>An enumerable collection of the full names (including paths) for the files in the directory specified by <em>path</em>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path </em>is a zero-length string, contains only white space, or contains invalid characters. You can query for invalid characters by using the <xref href=\\\"System.IO.Path.GetInvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: \"\\n<p>\\n<em>path</em> is invalid, such as referring to an unmapped drive. </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>\\n<em>path</em> is a file name.</p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or combined exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.</p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The caller does not have the required permission.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Directory.EnumerateFiles(String)\n- uid: System.IO.Directory.EnumerateFiles(System.String,System.String)\n  commentId: M:System.IO.Directory.EnumerateFiles(System.String,System.String)\n  id: EnumerateFiles(System.String,System.String)\n  parent: System.IO.Directory\n  langs:\n  - csharp\n  - vb\n  name: EnumerateFiles(String, String)\n  fullName: System.IO.Directory.EnumerateFiles(System.String, System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/Directory.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: EnumerateFiles\n    path: src/mscorlib/src/System/IO/Directory.cs\n    startLine: 785\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Returns an enumerable collection of file names that match a search pattern in a specified path.</p>\\n\"\n  syntax:\n    content: public static IEnumerable<string> EnumerateFiles(string path, string searchPattern)\n    content.vb: Public Shared Function EnumerateFiles(path As String, searchPattern As String) As IEnumerable(Of String)\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The relative or absolute path to the directory to search. This string is not case-sensitive.</p>\\n\"\n    - id: searchPattern\n      type: System.String\n      description: \"\\n<p>The search string to match against the names of files in <em>path</em>.  This parameter can contain a combination of valid literal path and wildcard (* and ?) characters (see Remarks), but doesn't support regular expressions. </p>\\n\"\n    return:\n      type: System.Collections.Generic.IEnumerable{System.String}\n      description: \"\\n<p>An enumerable collection of the full names (including paths) for the files in the directory specified by <em>path</em> and that match the specified search pattern.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path </em>is a zero-length string, contains only white space, or contains invalid characters. You can query for invalid characters by using the <xref href=\\\"System.IO.Path.GetInvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method.</p>\\n<p>- or -</p>\\n<p>\\n<em>searchPattern</em> does not contain a valid pattern.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>.</p>\\n<p>-or-</p>\\n<p>\\n<em>searchPattern</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: \"\\n<p>\\n<em>path</em> is invalid, such as referring to an unmapped drive. </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>\\n<em>path</em> is a file name.</p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or combined exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.</p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The caller does not have the required permission.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Directory.EnumerateFiles(String, String)\n- uid: System.IO.Directory.EnumerateFiles(System.String,System.String,System.IO.SearchOption)\n  commentId: M:System.IO.Directory.EnumerateFiles(System.String,System.String,System.IO.SearchOption)\n  id: EnumerateFiles(System.String,System.String,System.IO.SearchOption)\n  parent: System.IO.Directory\n  langs:\n  - csharp\n  - vb\n  name: EnumerateFiles(String, String, SearchOption)\n  fullName: System.IO.Directory.EnumerateFiles(System.String, System.String, System.IO.SearchOption)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/Directory.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: EnumerateFiles\n    path: src/mscorlib/src/System/IO/Directory.cs\n    startLine: 797\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Returns an enumerable collection of file names that match a search pattern in a specified path, and optionally searches subdirectories.</p>\\n\"\n  syntax:\n    content: public static IEnumerable<string> EnumerateFiles(string path, string searchPattern, SearchOption searchOption)\n    content.vb: Public Shared Function EnumerateFiles(path As String, searchPattern As String, searchOption As SearchOption) As IEnumerable(Of String)\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The relative or absolute path to the directory to search. This string is not case-sensitive.</p>\\n\"\n    - id: searchPattern\n      type: System.String\n      description: \"\\n<p>The search string to match against the names of files in <em>path</em>.  This parameter can contain a combination of valid literal path and wildcard (* and ?) characters (see Remarks), but doesn't support regular expressions.  </p>\\n\"\n    - id: searchOption\n      type: System.IO.SearchOption\n      description: \"\\n<p>One of the enumeration values that specifies whether the search operation should include only the current directory or should include all subdirectories.</p>\\n<p>The default value is <xref href=\\\"System.IO.SearchOption.TopDirectoryOnly\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    return:\n      type: System.Collections.Generic.IEnumerable{System.String}\n      description: \"\\n<p>An enumerable collection of the full names (including paths) for the files in the directory specified by <em>path</em> and that match the specified search pattern and option.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path </em>is a zero-length string, contains only white space, or contains invalid characters. You can query for invalid characters by using the <xref href=\\\"System.IO.Path.GetInvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method.</p>\\n<p>- or -</p>\\n<p>\\n<em>searchPattern</em> does not contain a valid pattern.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>.</p>\\n<p>-or-</p>\\n<p>\\n<em>searchPattern</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>searchOption</em> is not a valid <xref href=\\\"System.IO.SearchOption\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: \"\\n<p>\\n<em>path</em> is invalid, such as referring to an unmapped drive. </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>\\n<em>path</em> is a file name.</p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or combined exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.</p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The caller does not have the required permission.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Directory.EnumerateFiles(String, String, SearchOption)\n- uid: System.IO.Directory.EnumerateFileSystemEntries(System.String)\n  commentId: M:System.IO.Directory.EnumerateFileSystemEntries(System.String)\n  id: EnumerateFileSystemEntries(System.String)\n  parent: System.IO.Directory\n  langs:\n  - csharp\n  - vb\n  name: EnumerateFileSystemEntries(String)\n  fullName: System.IO.Directory.EnumerateFileSystemEntries(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/Directory.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: EnumerateFileSystemEntries\n    path: src/mscorlib/src/System/IO/Directory.cs\n    startLine: 821\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Returns an enumerable collection of file names and directory names in a specified path. </p>\\n\"\n  syntax:\n    content: public static IEnumerable<string> EnumerateFileSystemEntries(string path)\n    content.vb: Public Shared Function EnumerateFileSystemEntries(path As String) As IEnumerable(Of String)\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The relative or absolute path to the directory to search. This string is not case-sensitive.</p>\\n\"\n    return:\n      type: System.Collections.Generic.IEnumerable{System.String}\n      description: \"\\n<p>An enumerable collection of file-system entries in the directory specified by <em>path</em>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path </em>is a zero-length string, contains only white space, or contains invalid characters. You can query for invalid characters by using the <xref href=\\\"System.IO.Path.GetInvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: \"\\n<p>\\n<em>path</em> is invalid, such as referring to an unmapped drive. </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>\\n<em>path</em> is a file name.</p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or combined exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.</p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The caller does not have the required permission.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Directory.EnumerateFileSystemEntries(String)\n- uid: System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String)\n  commentId: M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String)\n  id: EnumerateFileSystemEntries(System.String,System.String)\n  parent: System.IO.Directory\n  langs:\n  - csharp\n  - vb\n  name: EnumerateFileSystemEntries(String, String)\n  fullName: System.IO.Directory.EnumerateFileSystemEntries(System.String, System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/Directory.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: EnumerateFileSystemEntries\n    path: src/mscorlib/src/System/IO/Directory.cs\n    startLine: 831\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Returns an enumerable collection of file names and directory names that  match a search pattern in a specified path.</p>\\n\"\n  syntax:\n    content: public static IEnumerable<string> EnumerateFileSystemEntries(string path, string searchPattern)\n    content.vb: Public Shared Function EnumerateFileSystemEntries(path As String, searchPattern As String) As IEnumerable(Of String)\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The relative or absolute path to the directory to search. This string is not case-sensitive. </p>\\n\"\n    - id: searchPattern\n      type: System.String\n      description: \"\\n<p>The search string to match against the names of file-system entries in <em>path</em>.  This parameter can contain a combination of valid literal path and wildcard (* and ?) characters (see Remarks), but doesn't support regular expressions.  </p>\\n\"\n    return:\n      type: System.Collections.Generic.IEnumerable{System.String}\n      description: \"\\n<p>An enumerable collection of file-system entries in the directory specified by <em>path</em> and that match the specified search pattern.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path </em>is a zero-length string, contains only white space, or contains invalid characters. You can query for invalid characters by using the <xref href=\\\"System.IO.Path.GetInvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method.</p>\\n<p>- or -</p>\\n<p>\\n<em>searchPattern</em> does not contain a valid pattern.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>.</p>\\n<p>-or-</p>\\n<p>\\n<em>searchPattern</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: \"\\n<p>\\n<em>path</em> is invalid, such as referring to an unmapped drive. </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>\\n<em>path</em> is a file name.</p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or combined exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.</p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The caller does not have the required permission.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Directory.EnumerateFileSystemEntries(String, String)\n- uid: System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String,System.IO.SearchOption)\n  commentId: M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String,System.IO.SearchOption)\n  id: EnumerateFileSystemEntries(System.String,System.String,System.IO.SearchOption)\n  parent: System.IO.Directory\n  langs:\n  - csharp\n  - vb\n  name: EnumerateFileSystemEntries(String, String, SearchOption)\n  fullName: System.IO.Directory.EnumerateFileSystemEntries(System.String, System.String, System.IO.SearchOption)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/Directory.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: EnumerateFileSystemEntries\n    path: src/mscorlib/src/System/IO/Directory.cs\n    startLine: 843\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Returns an enumerable collection of file names and directory names that match a search pattern in a specified path, and optionally searches subdirectories.</p>\\n\"\n  syntax:\n    content: public static IEnumerable<string> EnumerateFileSystemEntries(string path, string searchPattern, SearchOption searchOption)\n    content.vb: Public Shared Function EnumerateFileSystemEntries(path As String, searchPattern As String, searchOption As SearchOption) As IEnumerable(Of String)\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The relative or absolute path to the directory to search. This string is not case-sensitive.</p>\\n\"\n    - id: searchPattern\n      type: System.String\n      description: \"\\n<p>The search string to match against file-system entries in <em>path</em>.  This parameter can contain a combination of valid literal path and wildcard (* and ?) characters (see Remarks), but doesn't support regular expressions.</p>\\n\"\n    - id: searchOption\n      type: System.IO.SearchOption\n      description: \"\\n<p>One of the enumeration values  that specifies whether the search operation should include only the current directory or should include all subdirectories.</p>\\n<p>The default value is <xref href=\\\"System.IO.SearchOption.TopDirectoryOnly\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    return:\n      type: System.Collections.Generic.IEnumerable{System.String}\n      description: \"\\n<p>An enumerable collection of file-system entries in the directory specified by <em>path</em> and that match the specified search pattern and option.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path </em>is a zero-length string, contains only white space, or contains invalid characters. You can query for invalid characters by using the <xref href=\\\"System.IO.Path.GetInvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method.</p>\\n<p>- or -</p>\\n<p>\\n<em>searchPattern</em> does not contain a valid pattern.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>.</p>\\n<p>-or-</p>\\n<p>\\n<em>searchPattern</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>searchOption</em> is not a valid <xref href=\\\"System.IO.SearchOption\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: \"\\n<p>\\n<em>path</em> is invalid, such as referring to an unmapped drive. </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>\\n<em>path</em> is a file name.</p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or combined exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.</p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The caller does not have the required permission.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Directory.EnumerateFileSystemEntries(String, String, SearchOption)\n- uid: System.IO.Directory.Exists(System.String)\n  commentId: M:System.IO.Directory.Exists(System.String)\n  id: Exists(System.String)\n  parent: System.IO.Directory\n  langs:\n  - csharp\n  - vb\n  name: Exists(String)\n  fullName: System.IO.Directory.Exists(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/Directory.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Exists\n    path: src/mscorlib/src/System/IO/Directory.cs\n    startLine: 337\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Determines whether the given path refers to an existing directory on disk.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public static bool Exists(string path)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Shared Function Exists(path As String) As Boolean\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The path to test. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if <em>path</em> refers to an existing directory; <strong>false</strong> if the directory does not exist or an error occurs when trying to determine if the specified file exists.</p>\\n\"\n  seealso:\n  - type: System.IO.DirectoryInfo\n    commentId: T:System.IO.DirectoryInfo\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Directory.Exists(String)\n- uid: System.IO.Directory.GetCreationTime(System.String)\n  commentId: M:System.IO.Directory.GetCreationTime(System.String)\n  id: GetCreationTime(System.String)\n  parent: System.IO.Directory\n  langs:\n  - csharp\n  - vb\n  name: GetCreationTime(String)\n  fullName: System.IO.Directory.GetCreationTime(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/Directory.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetCreationTime\n    path: src/mscorlib/src/System/IO/Directory.cs\n    startLine: 425\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Gets the creation date and time of a directory.</p>\\n\"\n  syntax:\n    content: public static DateTime GetCreationTime(string path)\n    content.vb: Public Shared Function GetCreationTime(path As String) As Date\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The path of the directory. </p>\\n\"\n    return:\n      type: System.DateTime\n      description: \"\\n<p>A structure that is set to the creation date and time for the specified directory. This value is expressed in local time.</p>\\n\"\n  exceptions:\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is a zero-length string, contains only white space, or contains one or more invalid characters. You can query for invalid characters by using the <xref href=\\\"System.IO.Path.GetInvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters. </p>\\n\"\n  seealso:\n  - type: System.IO.FileSystemWatcher\n    commentId: T:System.IO.FileSystemWatcher\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Directory.GetCreationTime(String)\n- uid: System.IO.Directory.GetCreationTimeUtc(System.String)\n  commentId: M:System.IO.Directory.GetCreationTimeUtc(System.String)\n  id: GetCreationTimeUtc(System.String)\n  parent: System.IO.Directory\n  langs:\n  - csharp\n  - vb\n  name: GetCreationTimeUtc(String)\n  fullName: System.IO.Directory.GetCreationTimeUtc(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/Directory.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetCreationTimeUtc\n    path: src/mscorlib/src/System/IO/Directory.cs\n    startLine: 430\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Gets the creation date and time, in Coordinated Universal Time (UTC) format, of a directory.</p>\\n\"\n  syntax:\n    content: public static DateTime GetCreationTimeUtc(string path)\n    content.vb: Public Shared Function GetCreationTimeUtc(path As String) As Date\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The path of the directory. </p>\\n\"\n    return:\n      type: System.DateTime\n      description: \"\\n<p>A structure that is set to the creation date and time for the specified directory. This value is expressed in UTC time.</p>\\n\"\n  exceptions:\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is a zero-length string, contains only white space, or contains one or more invalid characters. You can query for invalid characters by using the <xref href=\\\"System.IO.Path.GetInvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters. </p>\\n\"\n  seealso:\n  - type: System.IO.FileSystemWatcher\n    commentId: T:System.IO.FileSystemWatcher\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Directory.GetCreationTimeUtc(String)\n- uid: System.IO.Directory.GetCurrentDirectory\n  commentId: M:System.IO.Directory.GetCurrentDirectory\n  id: GetCurrentDirectory\n  parent: System.IO.Directory\n  langs:\n  - csharp\n  - vb\n  name: GetCurrentDirectory()\n  fullName: System.IO.Directory.GetCurrentDirectory()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/Directory.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetCurrentDirectory\n    path: src/mscorlib/src/System/IO/Directory.cs\n    startLine: 948\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Gets the current working directory of the application.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public static string GetCurrentDirectory()\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Shared Function GetCurrentDirectory As String\n    return:\n      type: System.String\n      description: \"\\n<p>A string that contains the path of the current working directory, and does not end with a backslash (\\\\).</p>\\n\"\n  exceptions:\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The operating system is Windows CE, which does not have current directory functionality.</p>\\n<p>This method is available in the .NET Compact Framework, but is not currently supported.</p>\\n\"\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Directory.GetCurrentDirectory()\n- uid: System.IO.Directory.GetDirectories(System.String)\n  commentId: M:System.IO.Directory.GetDirectories(System.String)\n  id: GetDirectories(System.String)\n  parent: System.IO.Directory\n  langs:\n  - csharp\n  - vb\n  name: GetDirectories(String)\n  fullName: System.IO.Directory.GetDirectories(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/Directory.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetDirectories\n    path: src/mscorlib/src/System/IO/Directory.cs\n    startLine: 579\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Returns the names of subdirectories (including their paths) in the specified directory.</p>\\n\"\n  syntax:\n    content: public static string[] GetDirectories(string path)\n    content.vb: Public Shared Function GetDirectories(path As String) As String()\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The relative or absolute path to the directory to search. This string is not case-sensitive.</p>\\n\"\n    return:\n      type: System.String[]\n      description: \"\\n<p>An array of the full names (including paths) of subdirectories in the specified path, or an empty array if no directories are found.</p>\\n\"\n  exceptions:\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is a zero-length string, contains only white space, or contains one or more invalid characters. You can query for invalid characters by using the <xref href=\\\"System.IO.Path.GetInvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters. </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>\\n<em>path</em> is a file name. </p>\\n\"\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: \"\\n<p>The specified path is invalid (for example, it is on an unmapped drive). </p>\\n\"\n  seealso:\n  - type: System.IO.Directory.GetCurrentDirectory\n    commentId: M:System.IO.Directory.GetCurrentDirectory\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Directory.GetDirectories(String)\n- uid: System.IO.Directory.GetDirectories(System.String,System.String)\n  commentId: M:System.IO.Directory.GetDirectories(System.String,System.String)\n  id: GetDirectories(System.String,System.String)\n  parent: System.IO.Directory\n  langs:\n  - csharp\n  - vb\n  name: GetDirectories(String, String)\n  fullName: System.IO.Directory.GetDirectories(System.String, System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/Directory.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetDirectories\n    path: src/mscorlib/src/System/IO/Directory.cs\n    startLine: 591\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Returns the names of subdirectories (including their paths) that match the specified search pattern in the specified directory.</p>\\n\"\n  syntax:\n    content: public static string[] GetDirectories(string path, string searchPattern)\n    content.vb: Public Shared Function GetDirectories(path As String, searchPattern As String) As String()\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The relative or absolute path to the directory to search. This string is not case-sensitive.</p>\\n\"\n    - id: searchPattern\n      type: System.String\n      description: \"\\n<p>The search string to match against the names of subdirectories in <em>path</em>. This parameter can contain a combination of valid literal and wildcard characters (see Remarks), but doesn't support regular expressions. </p>\\n\"\n    return:\n      type: System.String[]\n      description: \"\\n<p>An array of the full names (including paths) of the subdirectories that match the search pattern in the specified directory, or an empty array if no directories are found.</p>\\n\"\n  exceptions:\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is a zero-length string, contains only white space, or contains one or more invalid characters. You can query for invalid characters by using <xref href=\\\"System.IO.Path.GetInvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or- </p>\\n<p>\\n<em>searchPattern</em> doesn't contain a valid pattern. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> or <em>searchPattern</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters. </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>\\n<em>path</em> is a file name. </p>\\n\"\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: \"\\n<p>The specified path is invalid (for example, it is on an unmapped drive). </p>\\n\"\n  seealso:\n  - type: System.IO.Directory.GetCurrentDirectory\n    commentId: M:System.IO.Directory.GetCurrentDirectory\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Directory.GetDirectories(String, String)\n- uid: System.IO.Directory.GetDirectories(System.String,System.String,System.IO.SearchOption)\n  commentId: M:System.IO.Directory.GetDirectories(System.String,System.String,System.IO.SearchOption)\n  id: GetDirectories(System.String,System.String,System.IO.SearchOption)\n  parent: System.IO.Directory\n  langs:\n  - csharp\n  - vb\n  name: GetDirectories(String, String, SearchOption)\n  fullName: System.IO.Directory.GetDirectories(System.String, System.String, System.IO.SearchOption)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/Directory.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetDirectories\n    path: src/mscorlib/src/System/IO/Directory.cs\n    startLine: 605\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Returns the names of the subdirectories (including their paths) that match the specified search pattern in the specified directory, and optionally searches subdirectories.</p>\\n\"\n  syntax:\n    content: public static string[] GetDirectories(string path, string searchPattern, SearchOption searchOption)\n    content.vb: Public Shared Function GetDirectories(path As String, searchPattern As String, searchOption As SearchOption) As String()\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The relative or absolute path to the directory to search. This string is not case-sensitive.</p>\\n\"\n    - id: searchPattern\n      type: System.String\n      description: \"\\n<p>The search string to match against the names of subdirectories in <em>path</em>. This parameter can contain a combination of valid literal and wildcard characters (see Remarks), but doesn't support regular expressions.</p>\\n\"\n    - id: searchOption\n      type: System.IO.SearchOption\n      description: \"\\n<p>One of the enumeration values that specifies whether the search operation should include all subdirectories or only the current directory. </p>\\n\"\n    return:\n      type: System.String[]\n      description: \"\\n<p>An array of the full names (including paths) of the subdirectories that match the specified criteria, or an empty array if no directories are found.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is a zero-length string, contains only white space, or contains one or more invalid characters. You can query for invalid characters by using the <xref href=\\\"System.IO.Path.GetInvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method.</p>\\n<p>-or- </p>\\n<p>\\n<em>searchPattern</em> does not contain a valid pattern. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> or <em>searchPattern</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>searchOption</em> is not a valid <xref href=\\\"System.IO.SearchOption\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters. </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>\\n<em>path</em> is a file name. </p>\\n\"\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: \"\\n<p>The specified path is invalid (for example, it is on an unmapped drive). </p>\\n\"\n  seealso:\n  - type: System.IO.Directory.GetCurrentDirectory\n    commentId: M:System.IO.Directory.GetCurrentDirectory\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Directory.GetDirectories(String, String, SearchOption)\n- uid: System.IO.Directory.GetDirectoryRoot(System.String)\n  commentId: M:System.IO.Directory.GetDirectoryRoot(System.String)\n  id: GetDirectoryRoot(System.String)\n  parent: System.IO.Directory\n  langs:\n  - csharp\n  - vb\n  name: GetDirectoryRoot(String)\n  fullName: System.IO.Directory.GetDirectoryRoot(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/Directory.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetDirectoryRoot\n    path: src/mscorlib/src/System/IO/Directory.cs\n    startLine: 916\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Returns the volume information, root information, or both for the specified path.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public static string GetDirectoryRoot(string path)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Shared Function GetDirectoryRoot(path As String) As String\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The path of a file or directory. </p>\\n\"\n    return:\n      type: System.String\n      description: \"\\n<p>A string that contains the volume information, root information, or both for the specified path.</p>\\n\"\n  exceptions:\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is a zero-length string, contains only white space, or contains one or more invalid characters. You can query for invalid characters with <xref href=\\\"System.IO.Path.GetInvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters. </p>\\n\"\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Directory.GetDirectoryRoot(String)\n- uid: System.IO.Directory.GetFiles(System.String)\n  commentId: M:System.IO.Directory.GetFiles(System.String)\n  id: GetFiles(System.String)\n  parent: System.IO.Directory\n  langs:\n  - csharp\n  - vb\n  name: GetFiles(String)\n  fullName: System.IO.Directory.GetFiles(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/Directory.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetFiles\n    path: src/mscorlib/src/System/IO/Directory.cs\n    startLine: 517\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Returns the names of files (including their paths) in the specified directory.</p>\\n\"\n  syntax:\n    content: public static string[] GetFiles(string path)\n    content.vb: Public Shared Function GetFiles(path As String) As String()\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The relative or absolute path to the directory to search. This string is not case-sensitive.</p>\\n\"\n    return:\n      type: System.String[]\n      description: \"\\n<p>An array of the full names (including paths) for the files in the specified directory, or an empty array if no files are found.</p>\\n\"\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>\\n<em>path</em> is a file name.</p>\\n<p>-or-</p>\\n<p>A network error has occurred. </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is a zero-length string, contains only white space, or contains one or more invalid characters. You can query for invalid characters by using the <xref href=\\\"System.IO.Path.GetInvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters. </p>\\n\"\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: \"\\n<p>The specified path is not found or is invalid (for example, it is on an unmapped drive). </p>\\n\"\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Directory.GetFiles(String)\n- uid: System.IO.Directory.GetFiles(System.String,System.String)\n  commentId: M:System.IO.Directory.GetFiles(System.String,System.String)\n  id: GetFiles(System.String,System.String)\n  parent: System.IO.Directory\n  langs:\n  - csharp\n  - vb\n  name: GetFiles(String, String)\n  fullName: System.IO.Directory.GetFiles(System.String, System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/Directory.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetFiles\n    path: src/mscorlib/src/System/IO/Directory.cs\n    startLine: 529\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Returns the names of files (including their paths) that match the specified search pattern in the specified directory.</p>\\n\"\n  syntax:\n    content: public static string[] GetFiles(string path, string searchPattern)\n    content.vb: Public Shared Function GetFiles(path As String, searchPattern As String) As String()\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The relative or absolute path to the directory to search. This string is not case-sensitive.</p>\\n\"\n    - id: searchPattern\n      type: System.String\n      description: \"\\n<p>The search string to match against the names of files in <em>path</em>.  This parameter can contain a combination of valid literal path and wildcard (* and ?) characters (see Remarks), but doesn't support regular expressions.</p>\\n\"\n    return:\n      type: System.String[]\n      description: \"\\n<p>An array of the full names (including paths) for the files in the specified directory that match the specified search pattern, or an empty array if no files are found.</p>\\n\"\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>\\n<em>path</em> is a file name.</p>\\n<p>-or-</p>\\n<p>A network error has occurred. </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is a zero-length string, contains only white space, or contains one or more invalid characters. You can query for invalid characters by using <xref href=\\\"System.IO.Path.GetInvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or- </p>\\n<p>\\n<em>searchPattern</em> doesn't contain a valid pattern. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> or <em>searchPattern</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters. </p>\\n\"\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: \"\\n<p>The specified path is not found or is invalid (for example, it is on an unmapped drive). </p>\\n\"\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Directory.GetFiles(String, String)\n- uid: System.IO.Directory.GetFiles(System.String,System.String,System.IO.SearchOption)\n  commentId: M:System.IO.Directory.GetFiles(System.String,System.String,System.IO.SearchOption)\n  id: GetFiles(System.String,System.String,System.IO.SearchOption)\n  parent: System.IO.Directory\n  langs:\n  - csharp\n  - vb\n  name: GetFiles(String, String, SearchOption)\n  fullName: System.IO.Directory.GetFiles(System.String, System.String, System.IO.SearchOption)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/Directory.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetFiles\n    path: src/mscorlib/src/System/IO/Directory.cs\n    startLine: 543\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Returns the names of files (including their paths) that match the specified search pattern in the specified directory, using a value to determine whether to search subdirectories.</p>\\n\"\n  syntax:\n    content: public static string[] GetFiles(string path, string searchPattern, SearchOption searchOption)\n    content.vb: Public Shared Function GetFiles(path As String, searchPattern As String, searchOption As SearchOption) As String()\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The relative or absolute path to the directory to search. This string is not case-sensitive.</p>\\n\"\n    - id: searchPattern\n      type: System.String\n      description: \"\\n<p>The search string to match against the names of files in <em>path</em>.  This parameter can contain a combination of valid literal path and wildcard (* and ?) characters (see Remarks), but doesn't support regular expressions.</p>\\n\"\n    - id: searchOption\n      type: System.IO.SearchOption\n      description: \"\\n<p>One of the enumeration values that specifies whether the search operation should include all subdirectories or only the current directory. </p>\\n\"\n    return:\n      type: System.String[]\n      description: \"\\n<p>An array of the full names (including paths) for the files in the specified directory that match the specified search pattern and option, or an empty array if no files are found.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is a zero-length string, contains only white space, or contains one or more invalid characters. You can query for invalid characters with the <xref href=\\\"System.IO.Path.GetInvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method. </p>\\n<p>-or- </p>\\n<p>\\n<em>searchPattern</em> does not contain a valid pattern.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> or <em>searchpattern</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>searchOption</em> is not a valid <xref href=\\\"System.IO.SearchOption\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: \"\\n<p>The specified path is not found or is invalid (for example, it is on an unmapped drive). </p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters. </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>\\n<em>path</em> is a file name.</p>\\n<p>-or-</p>\\n<p>A network error has occurred. </p>\\n\"\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Directory.GetFiles(String, String, SearchOption)\n- uid: System.IO.Directory.GetFileSystemEntries(System.String)\n  commentId: M:System.IO.Directory.GetFileSystemEntries(System.String)\n  id: GetFileSystemEntries(System.String)\n  parent: System.IO.Directory\n  langs:\n  - csharp\n  - vb\n  name: GetFileSystemEntries(String)\n  fullName: System.IO.Directory.GetFileSystemEntries(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/Directory.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetFileSystemEntries\n    path: src/mscorlib/src/System/IO/Directory.cs\n    startLine: 643\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Returns the names of all files and subdirectories in a specified path.</p>\\n\"\n  syntax:\n    content: public static string[] GetFileSystemEntries(string path)\n    content.vb: Public Shared Function GetFileSystemEntries(path As String) As String()\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The relative or absolute path to the directory to search. This string is not case-sensitive.</p>\\n\"\n    return:\n      type: System.String[]\n      description: \"\\n<p>An array of the names of files and subdirectories in the specified directory, or an empty array if no files or subdirectories are found.</p>\\n\"\n  exceptions:\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is a zero-length string, contains only white space, or contains one or more invalid characters. You can query for invalid characters with <xref href=\\\"System.IO.Path.GetInvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters. </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>\\n<em>path</em> is a file name. </p>\\n\"\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: \"\\n<p>The specified path is invalid (for example, it is on an unmapped drive). </p>\\n\"\n  seealso:\n  - type: System.IO.FileSystemWatcher\n    commentId: T:System.IO.FileSystemWatcher\n  - type: System.IO.FileSystemInfo\n    commentId: T:System.IO.FileSystemInfo\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Directory.GetFileSystemEntries(String)\n- uid: System.IO.Directory.GetFileSystemEntries(System.String,System.String)\n  commentId: M:System.IO.Directory.GetFileSystemEntries(System.String,System.String)\n  id: GetFileSystemEntries(System.String,System.String)\n  parent: System.IO.Directory\n  langs:\n  - csharp\n  - vb\n  name: GetFileSystemEntries(String, String)\n  fullName: System.IO.Directory.GetFileSystemEntries(System.String, System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/Directory.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetFileSystemEntries\n    path: src/mscorlib/src/System/IO/Directory.cs\n    startLine: 655\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Returns an array of file names and directory names that that match a search pattern in a specified path.</p>\\n\"\n  syntax:\n    content: public static string[] GetFileSystemEntries(string path, string searchPattern)\n    content.vb: Public Shared Function GetFileSystemEntries(path As String, searchPattern As String) As String()\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The relative or absolute path to the directory to search. This string is not case-sensitive.</p>\\n\"\n    - id: searchPattern\n      type: System.String\n      description: \"\\n<p>The search string to match against the names of file and directories in <em>path</em>.  This parameter can contain a combination of valid literal path and wildcard (* and ?) characters (see Remarks), but doesn't support regular expressions.</p>\\n\"\n    return:\n      type: System.String[]\n      description: \"\\n<p>An array of file names and directory names that match the specified search criteria, or an empty array if no files or directories are found.</p>\\n\"\n  exceptions:\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is a zero-length string, contains only white space, or contains one or more invalid characters. You can query for invalid characters with the <xref href=\\\"System.IO.Path.GetInvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method.</p>\\n<p>-or- </p>\\n<p>\\n<em>searchPattern</em> does not contain a valid pattern. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> or <em>searchPattern</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters. </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>\\n<em>path</em> is a file name. </p>\\n\"\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: \"\\n<p>The specified path is invalid (for example, it is on an unmapped drive). </p>\\n\"\n  seealso:\n  - type: System.IO.FileSystemInfo\n    commentId: T:System.IO.FileSystemInfo\n  - type: System.IO.FileSystemWatcher\n    commentId: T:System.IO.FileSystemWatcher\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Directory.GetFileSystemEntries(String, String)\n- uid: System.IO.Directory.GetFileSystemEntries(System.String,System.String,System.IO.SearchOption)\n  commentId: M:System.IO.Directory.GetFileSystemEntries(System.String,System.String,System.IO.SearchOption)\n  id: GetFileSystemEntries(System.String,System.String,System.IO.SearchOption)\n  parent: System.IO.Directory\n  langs:\n  - csharp\n  - vb\n  name: GetFileSystemEntries(String, String, SearchOption)\n  fullName: System.IO.Directory.GetFileSystemEntries(System.String, System.String, System.IO.SearchOption)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/Directory.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetFileSystemEntries\n    path: src/mscorlib/src/System/IO/Directory.cs\n    startLine: 669\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Returns an array of all the file names and directory names that match a search pattern in a specified path, and optionally searches subdirectories.</p>\\n\"\n  syntax:\n    content: public static string[] GetFileSystemEntries(string path, string searchPattern, SearchOption searchOption)\n    content.vb: Public Shared Function GetFileSystemEntries(path As String, searchPattern As String, searchOption As SearchOption) As String()\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The relative or absolute path to the directory to search. This string is not case-sensitive.</p>\\n\"\n    - id: searchPattern\n      type: System.String\n      description: \"\\n<p>The search string to match against the names of files and directories in <em>path</em>.  This parameter can contain a combination of valid literal path and wildcard (* and ?) characters (see Remarks), but doesn't support regular expressions.</p>\\n\"\n    - id: searchOption\n      type: System.IO.SearchOption\n      description: \"\\n<p>One of the enumeration values that specifies whether the search operation should include only the current directory or should include all subdirectories.</p>\\n<p>The default value is <xref href=\\\"System.IO.SearchOption.TopDirectoryOnly\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    return:\n      type: System.String[]\n      description: \"\\n<p>An array of file the file names and directory names that match the specified search criteria, or an empty array if no files or directories are found.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path </em>is a zero-length string, contains only white space, or contains invalid characters. You can query for invalid characters by using the <xref href=\\\"System.IO.Path.GetInvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method.</p>\\n<p>- or -</p>\\n<p>\\n<em>searchPattern</em> does not contain a valid pattern.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>.</p>\\n<p>-or-</p>\\n<p>\\n<em>searchPattern</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>searchOption</em> is not a valid <xref href=\\\"System.IO.SearchOption\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: \"\\n<p>\\n<em>path</em> is invalid, such as referring to an unmapped drive. </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>\\n<em>path</em> is a file name.</p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or combined exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.</p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The caller does not have the required permission.</p>\\n\"\n  seealso:\n  - type: System.IO.FileSystemWatcher\n    commentId: T:System.IO.FileSystemWatcher\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Directory.GetFileSystemEntries(String, String, SearchOption)\n- uid: System.IO.Directory.GetLastAccessTime(System.String)\n  commentId: M:System.IO.Directory.GetLastAccessTime(System.String)\n  id: GetLastAccessTime(System.String)\n  parent: System.IO.Directory\n  langs:\n  - csharp\n  - vb\n  name: GetLastAccessTime(String)\n  fullName: System.IO.Directory.GetLastAccessTime(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/Directory.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetLastAccessTime\n    path: src/mscorlib/src/System/IO/Directory.cs\n    startLine: 483\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Returns the date and time the specified file or directory was last accessed.</p>\\n\"\n  syntax:\n    content: public static DateTime GetLastAccessTime(string path)\n    content.vb: Public Shared Function GetLastAccessTime(path As String) As Date\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The file or directory for which to obtain access date and time information. </p>\\n\"\n    return:\n      type: System.DateTime\n      description: \"\\n<p>A structure that is set to the date and time the specified file or directory was last accessed. This value is expressed in local time.</p>\\n\"\n  exceptions:\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is a zero-length string, contains only white space, or contains one or more invalid characters. You can query for invalid characters with the <xref href=\\\"System.IO.Path.GetInvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The <em>path</em> parameter is in an invalid format. </p>\\n\"\n  seealso:\n  - type: System.IO.FileSystemWatcher\n    commentId: T:System.IO.FileSystemWatcher\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Directory.GetLastAccessTime(String)\n- uid: System.IO.Directory.GetLastAccessTimeUtc(System.String)\n  commentId: M:System.IO.Directory.GetLastAccessTimeUtc(System.String)\n  id: GetLastAccessTimeUtc(System.String)\n  parent: System.IO.Directory\n  langs:\n  - csharp\n  - vb\n  name: GetLastAccessTimeUtc(String)\n  fullName: System.IO.Directory.GetLastAccessTimeUtc(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/Directory.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetLastAccessTimeUtc\n    path: src/mscorlib/src/System/IO/Directory.cs\n    startLine: 488\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Returns the date and time, in Coordinated Universal Time (UTC) format, that the specified file or directory was last accessed.</p>\\n\"\n  syntax:\n    content: public static DateTime GetLastAccessTimeUtc(string path)\n    content.vb: Public Shared Function GetLastAccessTimeUtc(path As String) As Date\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The file or directory for which to obtain access date and time information. </p>\\n\"\n    return:\n      type: System.DateTime\n      description: \"\\n<p>A structure that is set to the date and time the specified file or directory was last accessed. This value is expressed in UTC time.</p>\\n\"\n  exceptions:\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is a zero-length string, contains only white space, or contains one or more invalid characters. You can query for invalid characters with the  <xref href=\\\"System.IO.Path.GetInvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The <em>path</em> parameter is in an invalid format. </p>\\n\"\n  seealso:\n  - type: System.IO.FileSystemWatcher\n    commentId: T:System.IO.FileSystemWatcher\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Directory.GetLastAccessTimeUtc(String)\n- uid: System.IO.Directory.GetLastWriteTime(System.String)\n  commentId: M:System.IO.Directory.GetLastWriteTime(System.String)\n  id: GetLastWriteTime(System.String)\n  parent: System.IO.Directory\n  langs:\n  - csharp\n  - vb\n  name: GetLastWriteTime(String)\n  fullName: System.IO.Directory.GetLastWriteTime(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/Directory.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetLastWriteTime\n    path: src/mscorlib/src/System/IO/Directory.cs\n    startLine: 454\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Returns the date and time the specified file or directory was last written to.</p>\\n\"\n  syntax:\n    content: public static DateTime GetLastWriteTime(string path)\n    content.vb: Public Shared Function GetLastWriteTime(path As String) As Date\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The file or directory for which to obtain modification date and time information. </p>\\n\"\n    return:\n      type: System.DateTime\n      description: \"\\n<p>A structure that is set to the date and time the specified file or directory was last written to. This value is expressed in local time.</p>\\n\"\n  exceptions:\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is a zero-length string, contains only white space, or contains one or more invalid characters. You can query for invalid characters with the  <xref href=\\\"System.IO.Path.GetInvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters. </p>\\n\"\n  seealso:\n  - type: System.IO.FileSystemWatcher\n    commentId: T:System.IO.FileSystemWatcher\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Directory.GetLastWriteTime(String)\n- uid: System.IO.Directory.GetLastWriteTimeUtc(System.String)\n  commentId: M:System.IO.Directory.GetLastWriteTimeUtc(System.String)\n  id: GetLastWriteTimeUtc(System.String)\n  parent: System.IO.Directory\n  langs:\n  - csharp\n  - vb\n  name: GetLastWriteTimeUtc(String)\n  fullName: System.IO.Directory.GetLastWriteTimeUtc(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/Directory.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetLastWriteTimeUtc\n    path: src/mscorlib/src/System/IO/Directory.cs\n    startLine: 459\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Returns the date and time, in Coordinated Universal Time (UTC) format, that the specified file or directory was last written to.</p>\\n\"\n  syntax:\n    content: public static DateTime GetLastWriteTimeUtc(string path)\n    content.vb: Public Shared Function GetLastWriteTimeUtc(path As String) As Date\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The file or directory for which to obtain modification date and time information. </p>\\n\"\n    return:\n      type: System.DateTime\n      description: \"\\n<p>A structure that is set to the date and time the specified file or directory was last written to. This value is expressed in UTC time.</p>\\n\"\n  exceptions:\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is a zero-length string, contains only white space, or contains one or more invalid characters. You can query for invalid characters with the  <xref href=\\\"System.IO.Path.GetInvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters. </p>\\n\"\n  seealso:\n  - type: System.IO.FileSystemWatcher\n    commentId: T:System.IO.FileSystemWatcher\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Directory.GetLastWriteTimeUtc(String)\n- uid: System.IO.Directory.GetParent(System.String)\n  commentId: M:System.IO.Directory.GetParent(System.String)\n  id: GetParent(System.String)\n  parent: System.IO.Directory\n  langs:\n  - csharp\n  - vb\n  name: GetParent(String)\n  fullName: System.IO.Directory.GetParent(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/Directory.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetParent\n    path: src/mscorlib/src/System/IO/Directory.cs\n    startLine: 38\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Retrieves the parent directory of the specified path, including both absolute and relative paths.</p>\\n\"\n  syntax:\n    content: public static DirectoryInfo GetParent(string path)\n    content.vb: Public Shared Function GetParent(path As String) As DirectoryInfo\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The path for which to retrieve the parent directory. </p>\\n\"\n    return:\n      type: System.IO.DirectoryInfo\n      description: \"\\n<p>The parent directory, or <strong>null</strong> if <em>path</em> is the root directory, including the root of a UNC server or share name.</p>\\n\"\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>The directory specified by <em>path</em> is read-only. </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is a zero-length string, contains only white space, or contains one or more invalid characters. You can query for invalid characters with the  <xref href=\\\"System.IO.Path.GetInvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters. </p>\\n\"\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: \"\\n<p>The specified path was not found. </p>\\n\"\n  seealso:\n  - type: System.IO.DirectoryInfo\n    commentId: T:System.IO.DirectoryInfo\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Directory.GetParent(String)\n- uid: System.IO.Directory.Move(System.String,System.String)\n  commentId: M:System.IO.Directory.Move(System.String,System.String)\n  id: Move(System.String,System.String)\n  parent: System.IO.Directory\n  langs:\n  - csharp\n  - vb\n  name: Move(String, String)\n  fullName: System.IO.Directory.Move(System.String, System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/Directory.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Move\n    path: src/mscorlib/src/System/IO/Directory.cs\n    startLine: 1076\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Moves a file or a directory and its contents to a new location.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public static void Move(string sourceDirName, string destDirName)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Shared Sub Move(sourceDirName As String, destDirName As String)\n    parameters:\n    - id: sourceDirName\n      type: System.String\n      description: \"\\n<p>The path of the file or directory to move. </p>\\n\"\n    - id: destDirName\n      type: System.String\n      description: \"\\n<p>The path to the new location for <em>sourceDirName</em>. If <em>sourceDirName</em> is a file, then <em>destDirName</em> must also be a file name.</p>\\n\"\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An attempt was made to move a directory to a different volume. </p>\\n<p>-or- </p>\\n<p>\\n<em>destDirName</em> already exists. </p>\\n<p>-or- </p>\\n<p>The <em>sourceDirName</em> and <em>destDirName</em> parameters refer to the same file or directory. </p>\\n<p>-or-</p>\\n<p>The directory or a file within it is being used by another process.</p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>sourceDirName</em> or <em>destDirName</em> is a zero-length string, contains only white space, or contains one or more invalid characters. You can query for invalid characters with the  <xref href=\\\"System.IO.Path.GetInvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>sourceDirName</em> or <em>destDirName</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters. </p>\\n\"\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: \"\\n<p>The path specified by <em>sourceDirName</em> is invalid (for example, it is on an unmapped drive). </p>\\n\"\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Directory.Move(String, String)\n- uid: System.IO.Directory.SetCreationTime(System.String,System.DateTime)\n  commentId: M:System.IO.Directory.SetCreationTime(System.String,System.DateTime)\n  id: SetCreationTime(System.String,System.DateTime)\n  parent: System.IO.Directory\n  langs:\n  - csharp\n  - vb\n  name: SetCreationTime(String, DateTime)\n  fullName: System.IO.Directory.SetCreationTime(System.String, System.DateTime)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/Directory.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: SetCreationTime\n    path: src/mscorlib/src/System/IO/Directory.cs\n    startLine: 406\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Sets the creation date and time for the specified file or directory.</p>\\n\"\n  syntax:\n    content: public static void SetCreationTime(string path, DateTime creationTime)\n    content.vb: Public Shared Sub SetCreationTime(path As String, creationTime As Date)\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The file or directory for which to set the creation date and time information. </p>\\n\"\n    - id: creationTime\n      type: System.DateTime\n      description: \"\\n<p>The date and time the file or directory was last written to. This value is expressed in local time.</p>\\n\"\n  exceptions:\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: \"\\n<p>The specified path was not found. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is a zero-length string, contains only white space, or contains one or more invalid characters. You can query for invalid characters with the  <xref href=\\\"System.IO.Path.GetInvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters. </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>creationTime</em> specifies a value outside the range of dates or times permitted for this operation. </p>\\n\"\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>The current operating system is not Windows NT or later.</p>\\n\"\n  seealso:\n  - type: System.IO.FileSystemWatcher\n    commentId: T:System.IO.FileSystemWatcher\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Directory.SetCreationTime(String, DateTime)\n- uid: System.IO.Directory.SetCreationTimeUtc(System.String,System.DateTime)\n  commentId: M:System.IO.Directory.SetCreationTimeUtc(System.String,System.DateTime)\n  id: SetCreationTimeUtc(System.String,System.DateTime)\n  parent: System.IO.Directory\n  langs:\n  - csharp\n  - vb\n  name: SetCreationTimeUtc(String, DateTime)\n  fullName: System.IO.Directory.SetCreationTimeUtc(System.String, System.DateTime)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/Directory.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: SetCreationTimeUtc\n    path: src/mscorlib/src/System/IO/Directory.cs\n    startLine: 411\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Sets the creation date and time, in Coordinated Universal Time (UTC) format, for the specified file or directory.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public static void SetCreationTimeUtc(string path, DateTime creationTimeUtc)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Shared Sub SetCreationTimeUtc(path As String, creationTimeUtc As Date)\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The file or directory for which to set the creation date and time information. </p>\\n\"\n    - id: creationTimeUtc\n      type: System.DateTime\n      description: \"\\n<p>The date and time the directory or file was created. This value is expressed in local time.</p>\\n\"\n  exceptions:\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: \"\\n<p>The specified path was not found. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is a zero-length string, contains only white space, or contains one or more invalid characters. You can query for invalid characters with the  <xref href=\\\"System.IO.Path.GetInvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters. </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>creationTime</em> specifies a value outside the range of dates or times permitted for this operation. </p>\\n\"\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>The current operating system is not Windows NT or later.</p>\\n\"\n  seealso:\n  - type: System.IO.FileSystemWatcher\n    commentId: T:System.IO.FileSystemWatcher\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Directory.SetCreationTimeUtc(String, DateTime)\n- uid: System.IO.Directory.SetCurrentDirectory(System.String)\n  commentId: M:System.IO.Directory.SetCurrentDirectory(System.String)\n  id: SetCurrentDirectory(System.String)\n  parent: System.IO.Directory\n  langs:\n  - csharp\n  - vb\n  name: SetCurrentDirectory(String)\n  fullName: System.IO.Directory.SetCurrentDirectory(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/Directory.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: SetCurrentDirectory\n    path: src/mscorlib/src/System/IO/Directory.cs\n    startLine: 1043\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Sets the application's current working directory to the specified directory.</p>\\n\"\n  syntax:\n    content: >-\n      [SecurityCritical]\n\n      public static void SetCurrentDirectory(string path)\n    content.vb: >-\n      <SecurityCritical>\n\n      Public Shared Sub SetCurrentDirectory(path As String)\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The path to which the current working directory is set. </p>\\n\"\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurred. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is a zero-length string, contains only white space, or contains one or more invalid characters. You can query for invalid characters with the  <xref href=\\\"System.IO.Path.GetInvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters. </p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The caller does not have the required permission to access unmanaged code. </p>\\n\"\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: \"\\n<p>The specified path was not found. </p>\\n\"\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: \"\\n<p>The specified directory was not found.</p>\\n\"\n  seealso:\n  - type: System.IO.FileSystemWatcher\n    commentId: T:System.IO.FileSystemWatcher\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  - type: System.Security.Permissions.SecurityPermission\n    commentId: T:System.Security.Permissions.SecurityPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Directory.SetCurrentDirectory(String)\n- uid: System.IO.Directory.SetLastAccessTime(System.String,System.DateTime)\n  commentId: M:System.IO.Directory.SetLastAccessTime(System.String,System.DateTime)\n  id: SetLastAccessTime(System.String,System.DateTime)\n  parent: System.IO.Directory\n  langs:\n  - csharp\n  - vb\n  name: SetLastAccessTime(String, DateTime)\n  fullName: System.IO.Directory.SetLastAccessTime(System.String, System.DateTime)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/Directory.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: SetLastAccessTime\n    path: src/mscorlib/src/System/IO/Directory.cs\n    startLine: 464\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Sets the date and time the specified file or directory was last accessed.</p>\\n\"\n  syntax:\n    content: public static void SetLastAccessTime(string path, DateTime lastAccessTime)\n    content.vb: Public Shared Sub SetLastAccessTime(path As String, lastAccessTime As Date)\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The file or directory for which to set the access date and time information. </p>\\n\"\n    - id: lastAccessTime\n      type: System.DateTime\n      description: \"\\n<p>An object that contains the value to set for the access date and time of <em>path</em>. This value is expressed in local time. </p>\\n\"\n  exceptions:\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: \"\\n<p>The specified path was not found. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is a zero-length string, contains only white space, or contains one or more invalid characters. You can query for invalid characters with the  <xref href=\\\"System.IO.Path.GetInvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters. </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>The current operating system is not Windows NT or later.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>lastAccessTime</em> specifies a value outside the range of dates or times permitted for this operation.</p>\\n\"\n  seealso:\n  - type: System.IO.FileSystemWatcher\n    commentId: T:System.IO.FileSystemWatcher\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Directory.SetLastAccessTime(String, DateTime)\n- uid: System.IO.Directory.SetLastAccessTimeUtc(System.String,System.DateTime)\n  commentId: M:System.IO.Directory.SetLastAccessTimeUtc(System.String,System.DateTime)\n  id: SetLastAccessTimeUtc(System.String,System.DateTime)\n  parent: System.IO.Directory\n  langs:\n  - csharp\n  - vb\n  name: SetLastAccessTimeUtc(String, DateTime)\n  fullName: System.IO.Directory.SetLastAccessTimeUtc(System.String, System.DateTime)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/Directory.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: SetLastAccessTimeUtc\n    path: src/mscorlib/src/System/IO/Directory.cs\n    startLine: 469\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Sets the date and time, in Coordinated Universal Time (UTC) format, that the specified file or directory was last accessed.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public static void SetLastAccessTimeUtc(string path, DateTime lastAccessTimeUtc)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Shared Sub SetLastAccessTimeUtc(path As String, lastAccessTimeUtc As Date)\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The file or directory for which to set the access date and time information. </p>\\n\"\n    - id: lastAccessTimeUtc\n      type: System.DateTime\n      description: \"\\n<p>An object that  contains the value to set for the access date and time of <em>path</em>. This value is expressed in UTC time. </p>\\n\"\n  exceptions:\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: \"\\n<p>The specified path was not found. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is a zero-length string, contains only white space, or contains one or more invalid characters. You can query for invalid characters with the  <xref href=\\\"System.IO.Path.GetInvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters. </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>The current operating system is not Windows NT or later.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>lastAccessTimeUtc</em> specifies a value outside the range of dates or times permitted for this operation.</p>\\n\"\n  seealso:\n  - type: System.IO.FileSystemWatcher\n    commentId: T:System.IO.FileSystemWatcher\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Directory.SetLastAccessTimeUtc(String, DateTime)\n- uid: System.IO.Directory.SetLastWriteTime(System.String,System.DateTime)\n  commentId: M:System.IO.Directory.SetLastWriteTime(System.String,System.DateTime)\n  id: SetLastWriteTime(System.String,System.DateTime)\n  parent: System.IO.Directory\n  langs:\n  - csharp\n  - vb\n  name: SetLastWriteTime(String, DateTime)\n  fullName: System.IO.Directory.SetLastWriteTime(System.String, System.DateTime)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/Directory.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: SetLastWriteTime\n    path: src/mscorlib/src/System/IO/Directory.cs\n    startLine: 435\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Sets the date and time a directory was last written to.</p>\\n\"\n  syntax:\n    content: public static void SetLastWriteTime(string path, DateTime lastWriteTime)\n    content.vb: Public Shared Sub SetLastWriteTime(path As String, lastWriteTime As Date)\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The path of the directory. </p>\\n\"\n    - id: lastWriteTime\n      type: System.DateTime\n      description: \"\\n<p>The date and time the directory was last written to. This value is expressed in local time.  </p>\\n\"\n  exceptions:\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: \"\\n<p>The specified path was not found. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is a zero-length string, contains only white space, or contains one or more invalid characters. You can query for invalid characters with the  <xref href=\\\"System.IO.Path.GetInvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters. </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>The current operating system is not Windows NT or later.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>lastWriteTime</em> specifies a value outside the range of dates or times permitted for this operation.</p>\\n\"\n  seealso:\n  - type: System.IO.FileSystemWatcher\n    commentId: T:System.IO.FileSystemWatcher\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Directory.SetLastWriteTime(String, DateTime)\n- uid: System.IO.Directory.SetLastWriteTimeUtc(System.String,System.DateTime)\n  commentId: M:System.IO.Directory.SetLastWriteTimeUtc(System.String,System.DateTime)\n  id: SetLastWriteTimeUtc(System.String,System.DateTime)\n  parent: System.IO.Directory\n  langs:\n  - csharp\n  - vb\n  name: SetLastWriteTimeUtc(String, DateTime)\n  fullName: System.IO.Directory.SetLastWriteTimeUtc(System.String, System.DateTime)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/Directory.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: SetLastWriteTimeUtc\n    path: src/mscorlib/src/System/IO/Directory.cs\n    startLine: 440\n  assemblies:\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: \"\\n<p>Sets the date and time, in Coordinated Universal Time (UTC) format, that a directory was last written to.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public static void SetLastWriteTimeUtc(string path, DateTime lastWriteTimeUtc)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Shared Sub SetLastWriteTimeUtc(path As String, lastWriteTimeUtc As Date)\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The path of the directory. </p>\\n\"\n    - id: lastWriteTimeUtc\n      type: System.DateTime\n      description: \"\\n<p>The date and time the directory was last written to. This value is expressed in UTC time. </p>\\n\"\n  exceptions:\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: \"\\n<p>The specified path was not found. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>path</em> is a zero-length string, contains only white space, or contains one or more invalid characters. You can query for invalid characters with the  <xref href=\\\"System.IO.Path.GetInvalidPathChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>path</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters. </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The caller does not have the required permission. </p>\\n\"\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>The current operating system is not Windows NT or later.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>lastWriteTimeUtc</em> specifies a value outside the range of dates or times permitted for this operation.</p>\\n\"\n  seealso:\n  - type: System.IO.FileSystemWatcher\n    commentId: T:System.IO.FileSystemWatcher\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Directory.SetLastWriteTimeUtc(String, DateTime)\nreferences:\n- uid: System.IO\n  isExternal: false\n  name: System.IO\n  fullName: System.IO\n  nameWithType: System.IO\n  commentId: N:System.IO\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.IO.DirectoryInfo\n  parent: System.IO\n  isExternal: false\n  name: DirectoryInfo\n  fullName: System.IO.DirectoryInfo\n  nameWithType: DirectoryInfo\n  commentId: T:System.IO.DirectoryInfo\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.Collections.Generic.IEnumerable{System.String}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<String>\n  fullName: System.Collections.Generic.IEnumerable<System.String>\n  fullname.vb: System.Collections.Generic.IEnumerable(Of System.String)\n  name.vb: IEnumerable(Of String)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    fullName: <\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: IEnumerable<String>\n  nameWithType.vb: IEnumerable(Of String)\n  commentId: T:System.Collections.Generic.IEnumerable{System.String}\n- uid: System.Collections.Generic.IEnumerable`1\n  isExternal: false\n  name: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n  fullname.vb: System.Collections.Generic.IEnumerable(Of T)\n  name.vb: IEnumerable(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: IEnumerable<T>\n  nameWithType.vb: IEnumerable(Of T)\n  commentId: T:System.Collections.Generic.IEnumerable`1\n- uid: System.Collections.Generic\n  isExternal: false\n  name: System.Collections.Generic\n  fullName: System.Collections.Generic\n  nameWithType: System.Collections.Generic\n  commentId: N:System.Collections.Generic\n- uid: System.IO.SearchOption\n  parent: System.IO\n  isExternal: false\n  name: SearchOption\n  fullName: System.IO.SearchOption\n  nameWithType: SearchOption\n  commentId: T:System.IO.SearchOption\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  fullName: System.DateTime\n  nameWithType: DateTime\n  commentId: T:System.DateTime\n- uid: System.String[]\n  name: String[]\n  fullName: System.String[]\n  fullname.vb: System.String()\n  name.vb: String()\n  spec.csharp:\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: String[]\n  nameWithType.vb: String()\n- uid: System.IO.IOException\n  parent: System.IO\n  isExternal: false\n  name: IOException\n  fullName: System.IO.IOException\n  nameWithType: IOException\n  commentId: T:System.IO.IOException\n- uid: System.UnauthorizedAccessException\n  parent: System\n  isExternal: false\n  name: UnauthorizedAccessException\n  fullName: System.UnauthorizedAccessException\n  nameWithType: UnauthorizedAccessException\n  commentId: T:System.UnauthorizedAccessException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.IO.PathTooLongException\n  isExternal: false\n  name: PathTooLongException\n  fullName: System.IO.PathTooLongException\n  nameWithType: PathTooLongException\n  commentId: T:System.IO.PathTooLongException\n- uid: System.IO.DirectoryNotFoundException\n  isExternal: false\n  name: DirectoryNotFoundException\n  fullName: System.IO.DirectoryNotFoundException\n  nameWithType: DirectoryNotFoundException\n  commentId: T:System.IO.DirectoryNotFoundException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  fullName: System.NotSupportedException\n  nameWithType: NotSupportedException\n  commentId: T:System.NotSupportedException\n- uid: System.Security.SecurityException\n  isExternal: false\n  name: SecurityException\n  fullName: System.Security.SecurityException\n  nameWithType: SecurityException\n  commentId: T:System.Security.SecurityException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  commentId: T:System.ArgumentOutOfRangeException\n- uid: System.IO.FileNotFoundException\n  isExternal: false\n  name: FileNotFoundException\n  fullName: System.IO.FileNotFoundException\n  nameWithType: FileNotFoundException\n  commentId: T:System.IO.FileNotFoundException\n- uid: System.PlatformNotSupportedException\n  isExternal: false\n  name: PlatformNotSupportedException\n  fullName: System.PlatformNotSupportedException\n  nameWithType: PlatformNotSupportedException\n  commentId: T:System.PlatformNotSupportedException\n"}