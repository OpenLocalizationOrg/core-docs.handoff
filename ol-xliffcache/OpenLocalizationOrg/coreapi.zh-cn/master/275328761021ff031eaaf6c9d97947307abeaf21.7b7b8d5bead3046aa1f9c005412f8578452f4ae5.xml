{"nodes":[{"pos":[155,168],"content":"Comparison<T>","needQuote":true,"nodes":[{"content":"Comparison&lt;T&gt;","pos":[0,13],"source":"Comparison<T>"}]},{"content":"\\n&lt;p&gt;The first object to compare.&lt;/p&gt;\\n","pos":[807,846],"source":"\\n<p>The first object to compare.</p>\\n"},{"content":"\\n&lt;p&gt;The second object to compare.&lt;/p&gt;\\n","pos":[898,938],"source":"\\n<p>The second object to compare.</p>\\n"},{"content":"\\n&lt;p&gt;The type of the objects to compare.&lt;/p&gt;\\n","pos":[992,1038],"source":"\\n<p>The type of the objects to compare.</p>\\n"},{"content":"\\n&lt;p&gt;A signed integer that indicates the relative values of &lt;em&gt;x&lt;/em&gt; and &lt;em&gt;y&lt;/em&gt;, as shown in the following table.&lt;/p&gt;\\n&lt;p&gt;Value &lt;/p&gt;\\n&lt;p&gt;Meaning &lt;/p&gt;\\n&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;\\n&lt;p&gt;Less than 0 &lt;/p&gt;\\n&lt;/td&gt;&lt;td&gt;\\n&lt;p&gt;\\n&lt;em&gt;x&lt;/em&gt; is less than &lt;em&gt;y&lt;/em&gt;.&lt;/p&gt;\\n&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;\\n&lt;p&gt;0 &lt;/p&gt;\\n&lt;/td&gt;&lt;td&gt;\\n&lt;p&gt;\\n&lt;em&gt;x&lt;/em&gt; equals &lt;em&gt;y&lt;/em&gt;.&lt;/p&gt;\\n&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;\\n&lt;p&gt;Greater than 0 &lt;/p&gt;\\n&lt;/td&gt;&lt;td&gt;\\n&lt;p&gt;\\n&lt;em&gt;x&lt;/em&gt; is greater than &lt;em&gt;y&lt;/em&gt;.&lt;/p&gt;\\n&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\\n","pos":[1097,1570],"source":"\\n<p>A signed integer that indicates the relative values of <em>x</em> and <em>y</em>, as shown in the following table.</p>\\n<p>Value </p>\\n<p>Meaning </p>\\n<table><tbody><tr><td>\\n<p>Less than 0 </p>\\n</td><td>\\n<p>\\n<em>x</em> is less than <em>y</em>.</p>\\n</td></tr><tr><td>\\n<p>0 </p>\\n</td><td>\\n<p>\\n<em>x</em> equals <em>y</em>.</p>\\n</td></tr><tr><td>\\n<p>Greater than 0 </p>\\n</td><td>\\n<p>\\n<em>x</em> is greater than <em>y</em>.</p>\\n</td></tr></tbody></table>\\n"},{"pos":[2234,2240],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[2543,2558],"content":"GetMethodInfo()","needQuote":true,"nodes":[{"content":"GetMethodInfo()","pos":[0,15]}]},{"pos":[2727,2740],"content":"GetMethodInfo","needQuote":true,"nodes":[{"content":"GetMethodInfo","pos":[0,13]}]},{"pos":[2825,2826],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[2853,2854],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[2961,2974],"content":"GetMethodInfo","needQuote":true,"nodes":[{"content":"GetMethodInfo","pos":[0,13]}]},{"pos":[3059,3060],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[3087,3088],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[3294,3295],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[3412,3417],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[3604,3627],"content":"GetMethodInfo(Delegate)","needQuote":true,"nodes":[{"content":"GetMethodInfo(Delegate)","pos":[0,23]}]},{"pos":[3828,3841],"content":"GetMethodInfo","needQuote":true,"nodes":[{"content":"GetMethodInfo","pos":[0,13]}]},{"pos":[3926,3927],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[3979,3987],"content":"Delegate","needQuote":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[4049,4050],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[4174,4187],"content":"GetMethodInfo","needQuote":true,"nodes":[{"content":"GetMethodInfo","pos":[0,13]}]},{"pos":[4272,4273],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[4325,4333],"content":"Delegate","needQuote":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[4395,4396],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[4682,4709],"content":"RuntimeReflectionExtensions","needQuote":true,"nodes":[{"content":"RuntimeReflectionExtensions","pos":[0,27]}]},{"pos":[4910,4911],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[4997,5014],"content":"System.Reflection","needQuote":true,"nodes":[{"content":"System.Reflection","pos":[0,17]}]}],"content":"items:\n- uid: System.Comparison`1\n  commentId: T:System.Comparison`1\n  id: Comparison`1\n  parent: System\n  children: []\n  langs:\n  - csharp\n  - vb\n  name: Comparison<T>\n  fullName: System.Comparison<T>\n  type: Delegate\n  source:\n    remote:\n      path: src/mscorlib/src/System/Action.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Comparison\n    path: src/mscorlib/src/System/Action.cs\n    startLine: 88\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Represents the method that compares two objects of the same type.</p>\\n\"\n  syntax:\n    content: public delegate int Comparison<in T>(T x, T y);\n    content.vb: Public Delegate Function Comparison(Of In T)(x As T, y As T) As Integer\n    parameters:\n    - id: x\n      type: '{T}'\n      description: \"\\n<p>The first object to compare.</p>\\n\"\n    - id: y\n      type: '{T}'\n      description: \"\\n<p>The second object to compare.</p>\\n\"\n    typeParameters:\n    - id: T\n      description: \"\\n<p>The type of the objects to compare.</p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>A signed integer that indicates the relative values of <em>x</em> and <em>y</em>, as shown in the following table.</p>\\n<p>Value </p>\\n<p>Meaning </p>\\n<table><tbody><tr><td>\\n<p>Less than 0 </p>\\n</td><td>\\n<p>\\n<em>x</em> is less than <em>y</em>.</p>\\n</td></tr><tr><td>\\n<p>0 </p>\\n</td><td>\\n<p>\\n<em>x</em> equals <em>y</em>.</p>\\n</td></tr><tr><td>\\n<p>Greater than 0 </p>\\n</td><td>\\n<p>\\n<em>x</em> is greater than <em>y</em>.</p>\\n</td></tr></tbody></table>\\n\"\n  seealso:\n  - type: System.Array.Sort``1(``0[],System.Comparison{``0})\n    commentId: M:System.Array.Sort``1(``0[],System.Comparison{``0})\n  - type: System.Collections.Generic.List`1.Sort(System.Comparison{`0})\n    commentId: M:System.Collections.Generic.List`1.Sort(System.Comparison{`0})\n  modifiers.csharp:\n  - public\n  - delegate\n  modifiers.vb:\n  - Public\n  - Delegate\n  fullName.vb: System.Comparison(Of T)\n  name.vb: Comparison(Of T)\n  nameWithType: Comparison<T>\n  extensionMethods:\n  - System.Delegate.System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n  nameWithType.vb: Comparison(Of T)\nreferences:\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Delegate.System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n  parent: System.Reflection.RuntimeReflectionExtensions\n  definition: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  name: GetMethodInfo()\n  fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo()\n  spec.csharp:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n    name: GetMethodInfo\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n    name: GetMethodInfo\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: RuntimeReflectionExtensions.GetMethodInfo()\n  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n- uid: '{T}'\n  definition: T\n  name: T\n  fullName: T\n  nameWithType: T\n  commentId: '!:T'\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  isExternal: true\n  name: GetMethodInfo(Delegate)\n  fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  spec.csharp:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n    name: GetMethodInfo\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n  - name: (\n    fullName: (\n  - uid: System.Delegate\n    name: Delegate\n    fullName: System.Delegate\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n    name: GetMethodInfo\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n  - name: (\n    fullName: (\n  - uid: System.Delegate\n    name: Delegate\n    fullName: System.Delegate\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: RuntimeReflectionExtensions.GetMethodInfo(Delegate)\n  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n- uid: System.Reflection.RuntimeReflectionExtensions\n  parent: System.Reflection\n  isExternal: false\n  name: RuntimeReflectionExtensions\n  fullName: System.Reflection.RuntimeReflectionExtensions\n  nameWithType: RuntimeReflectionExtensions\n  commentId: T:System.Reflection.RuntimeReflectionExtensions\n- uid: T\n  isExternal: false\n  name: T\n  fullName: T\n  nameWithType: T\n- uid: System.Reflection\n  isExternal: false\n  name: System.Reflection\n  fullName: System.Reflection\n  nameWithType: System.Reflection\n  commentId: N:System.Reflection\n"}