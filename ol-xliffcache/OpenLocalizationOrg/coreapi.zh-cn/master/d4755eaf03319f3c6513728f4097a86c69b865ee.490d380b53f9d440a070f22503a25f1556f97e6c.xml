{"nodes":[{"pos":[877,890],"content":"CspParameters","needQuote":true,"nodes":[{"content":"CspParameters","pos":[0,13]}]},{"pos":[2372,2388],"content":"KeyContainerName","needQuote":true,"nodes":[{"content":"KeyContainerName","pos":[0,16]}]},{"pos":[3524,3533],"content":"KeyNumber","needQuote":true,"nodes":[{"content":"KeyNumber","pos":[0,9]}]},{"pos":[4584,4596],"content":"ProviderName","needQuote":true,"nodes":[{"content":"ProviderName","pos":[0,12]}]},{"pos":[5716,5728],"content":"ProviderType","needQuote":true,"nodes":[{"content":"ProviderType","pos":[0,12]}]},{"pos":[6831,6846],"content":"CspParameters()","needQuote":true,"nodes":[{"content":"CspParameters()","pos":[0,15]}]},{"pos":[7944,7964],"content":"CspParameters(Int32)","needQuote":true,"nodes":[{"content":"CspParameters(Int32)","pos":[0,20]}]},{"content":"\\n&lt;p&gt;A provider type code that specifies the kind of provider to create.","pos":[8857,8929],"source":"\\n<p>A provider type code that specifies the kind of provider to create."},{"content":"&lt;/p&gt;\\n","pos":[8930,8936],"source":" </p>\\n"},{"pos":[9353,9381],"content":"CspParameters(Int32, String)","needQuote":true,"nodes":[{"content":"CspParameters(Int32, String)","pos":[0,28]}]},{"content":"\\n&lt;p&gt;A provider type code that specifies the kind of provider to create.&lt;/p&gt;\\n","pos":[10353,10431],"source":"\\n<p>A provider type code that specifies the kind of provider to create.</p>\\n"},{"content":"\\n&lt;p&gt;A provider name.","pos":[10507,10528],"source":"\\n<p>A provider name."},{"content":"&lt;/p&gt;\\n","pos":[10529,10535],"source":" </p>\\n"},{"pos":[11002,11038],"content":"CspParameters(Int32, String, String)","needQuote":true,"nodes":[{"content":"CspParameters(Int32, String, String)","pos":[0,36]}]},{"content":"\\n&lt;p&gt;The provider type code that specifies the kind of provider to create.&lt;/p&gt;\\n","pos":[12116,12196],"source":"\\n<p>The provider type code that specifies the kind of provider to create.</p>\\n"},{"content":"\\n&lt;p&gt;A provider name.","pos":[12272,12293],"source":"\\n<p>A provider name."},{"content":"&lt;/p&gt;\\n","pos":[12294,12300],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A container name.","pos":[12377,12399],"source":"\\n<p>A container name."},{"content":"&lt;/p&gt;\\n","pos":[12400,12406],"source":" </p>\\n"},{"pos":[12753,12758],"content":"Flags","needQuote":true,"nodes":[{"content":"Flags","pos":[0,5]}]},{"content":"\\n&lt;p&gt;An enumeration value, or a bitwise combination of enumeration values.&lt;/p&gt;\\n","pos":[13686,13766],"source":"\\n<p>An enumeration value, or a bitwise combination of enumeration values.</p>\\n"},{"content":"\\n&lt;p&gt;Value is not a valid enumeration value.&lt;/p&gt;\\n","pos":[13877,13927],"source":"\\n<p>Value is not a valid enumeration value.</p>\\n"},{"pos":[14298,14316],"content":"ParentWindowHandle","needQuote":true,"nodes":[{"content":"ParentWindowHandle","pos":[0,18]}]},{"content":"\\n&lt;p&gt;A handle to the parent window for a smart card password dialog box.&lt;/p&gt;\\n","pos":[15137,15215],"source":"\\n<p>A handle to the parent window for a smart card password dialog box.</p>\\n"},{"pos":[15416,15444],"content":"System.Security.Cryptography","needQuote":true,"nodes":[{"content":"System.Security.Cryptography","pos":[0,28]}]},{"pos":[15641,15647],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15807,15817],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[15912,15920],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[15989,15990],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16017,16018],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16088,16096],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[16165,16166],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16193,16194],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16377,16391],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[16510,16516],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[16583,16584],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16634,16640],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16700,16701],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16784,16790],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[16857,16858],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16908,16914],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16974,16975],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17189,17211],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[17359,17365],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[17432,17433],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17483,17489],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[17550,17551]},{"pos":[17606,17612],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17672,17673],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17770,17776],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[17843,17844],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17894,17900],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[17961,17962]},{"pos":[18017,18023],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18083,18084],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18329,18360],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[18526,18541],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[18617,18618],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18668,18674],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[18735,18736]},{"pos":[18791,18797],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18857,18858],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18964,18979],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[19055,19056],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19106,19112],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[19173,19174]},{"pos":[19229,19235],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[19295,19296],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19526,19539],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[19640,19651],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[19723,19724],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19751,19752],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19825,19836],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[19908,19909],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19936,19937],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20112,20121],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[20214,20221],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[20289,20290],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20317,20318],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20387,20394],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[20462,20463],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20490,20491],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20666,20683],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[20792,20807],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[20883,20884],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20911,20912],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20989,21004],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[21080,21081],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21108,21109],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21254,21260],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[21391,21397],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[21541,21546],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[21742,21758],"content":"CspProviderFlags","needQuote":true,"nodes":[{"content":"CspProviderFlags","pos":[0,16]}]},{"pos":[21977,21983],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[22139,22156],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]}],"content":"items:\n- uid: System.Security.Cryptography.CspParameters\n  commentId: T:System.Security.Cryptography.CspParameters\n  id: CspParameters\n  parent: System.Security.Cryptography\n  children:\n  - System.Security.Cryptography.CspParameters.#ctor\n  - System.Security.Cryptography.CspParameters.#ctor(System.Int32)\n  - System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String)\n  - System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String)\n  - System.Security.Cryptography.CspParameters.Flags\n  - System.Security.Cryptography.CspParameters.KeyContainerName\n  - System.Security.Cryptography.CspParameters.KeyNumber\n  - System.Security.Cryptography.CspParameters.ParentWindowHandle\n  - System.Security.Cryptography.CspParameters.ProviderName\n  - System.Security.Cryptography.CspParameters.ProviderType\n  langs:\n  - csharp\n  - vb\n  name: CspParameters\n  fullName: System.Security.Cryptography.CspParameters\n  type: Class\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CspParameters\n    path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs\n    startLine: 26\n  assemblies:\n  - System.Security.Cryptography.Csp\n  namespace: System.Security.Cryptography\n  summary: \"\\n<p>Contains parameters that are passed to the cryptographic service provider (CSP) that performs cryptographic computations. This class cannot be inherited.</p>\\n\"\n  syntax:\n    content: public sealed class CspParameters\n    content.vb: Public NotInheritable Class CspParameters\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: CspParameters\n- uid: System.Security.Cryptography.CspParameters.KeyContainerName\n  commentId: F:System.Security.Cryptography.CspParameters.KeyContainerName\n  id: KeyContainerName\n  parent: System.Security.Cryptography.CspParameters\n  langs:\n  - csharp\n  - vb\n  name: KeyContainerName\n  fullName: System.Security.Cryptography.CspParameters.KeyContainerName\n  type: Field\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: KeyContainerName\n    path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs\n    startLine: 28\n  assemblies:\n  - System.Security.Cryptography.Csp\n  namespace: System.Security.Cryptography\n  summary: \"\\n<p>Represents the key container name for <xref href=\\\"System.Security.Cryptography.CspParameters\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public string KeyContainerName\n    content.vb: Public KeyContainerName As String\n    return:\n      type: System.String\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: CspParameters.KeyContainerName\n- uid: System.Security.Cryptography.CspParameters.KeyNumber\n  commentId: F:System.Security.Cryptography.CspParameters.KeyNumber\n  id: KeyNumber\n  parent: System.Security.Cryptography.CspParameters\n  langs:\n  - csharp\n  - vb\n  name: KeyNumber\n  fullName: System.Security.Cryptography.CspParameters.KeyNumber\n  type: Field\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: KeyNumber\n    path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs\n    startLine: 29\n  assemblies:\n  - System.Security.Cryptography.Csp\n  namespace: System.Security.Cryptography\n  summary: \"\\n<p>Specifies whether an asymmetric key is created as a signature key or an exchange key.</p>\\n\"\n  syntax:\n    content: public int KeyNumber\n    content.vb: Public KeyNumber As Integer\n    return:\n      type: System.Int32\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: CspParameters.KeyNumber\n- uid: System.Security.Cryptography.CspParameters.ProviderName\n  commentId: F:System.Security.Cryptography.CspParameters.ProviderName\n  id: ProviderName\n  parent: System.Security.Cryptography.CspParameters\n  langs:\n  - csharp\n  - vb\n  name: ProviderName\n  fullName: System.Security.Cryptography.CspParameters.ProviderName\n  type: Field\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ProviderName\n    path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs\n    startLine: 30\n  assemblies:\n  - System.Security.Cryptography.Csp\n  namespace: System.Security.Cryptography\n  summary: \"\\n<p>Represents the provider name for <xref href=\\\"System.Security.Cryptography.CspParameters\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public string ProviderName\n    content.vb: Public ProviderName As String\n    return:\n      type: System.String\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: CspParameters.ProviderName\n- uid: System.Security.Cryptography.CspParameters.ProviderType\n  commentId: F:System.Security.Cryptography.CspParameters.ProviderType\n  id: ProviderType\n  parent: System.Security.Cryptography.CspParameters\n  langs:\n  - csharp\n  - vb\n  name: ProviderType\n  fullName: System.Security.Cryptography.CspParameters.ProviderType\n  type: Field\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ProviderType\n    path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs\n    startLine: 31\n  assemblies:\n  - System.Security.Cryptography.Csp\n  namespace: System.Security.Cryptography\n  summary: \"\\n<p>Represents the provider type code for <xref href=\\\"System.Security.Cryptography.CspParameters\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public int ProviderType\n    content.vb: Public ProviderType As Integer\n    return:\n      type: System.Int32\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: CspParameters.ProviderType\n- uid: System.Security.Cryptography.CspParameters.#ctor\n  commentId: M:System.Security.Cryptography.CspParameters.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.CspParameters\n  langs:\n  - csharp\n  - vb\n  name: CspParameters()\n  fullName: System.Security.Cryptography.CspParameters.CspParameters()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs\n    startLine: 32\n  assemblies:\n  - System.Security.Cryptography.Csp\n  namespace: System.Security.Cryptography\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.Cryptography.CspParameters\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public CspParameters()\n    content.vb: Public Sub New\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: CspParameters.CspParameters()\n- uid: System.Security.Cryptography.CspParameters.#ctor(System.Int32)\n  commentId: M:System.Security.Cryptography.CspParameters.#ctor(System.Int32)\n  id: '#ctor(System.Int32)'\n  parent: System.Security.Cryptography.CspParameters\n  langs:\n  - csharp\n  - vb\n  name: CspParameters(Int32)\n  fullName: System.Security.Cryptography.CspParameters.CspParameters(System.Int32)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs\n    startLine: 33\n  assemblies:\n  - System.Security.Cryptography.Csp\n  namespace: System.Security.Cryptography\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.Cryptography.CspParameters\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified provider type code.</p>\\n\"\n  syntax:\n    content: public CspParameters(int dwTypeIn)\n    content.vb: Public Sub New(dwTypeIn As Integer)\n    parameters:\n    - id: dwTypeIn\n      type: System.Int32\n      description: \"\\n<p>A provider type code that specifies the kind of provider to create. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: CspParameters.CspParameters(Int32)\n- uid: System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String)\n  commentId: M:System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String)\n  id: '#ctor(System.Int32,System.String)'\n  parent: System.Security.Cryptography.CspParameters\n  langs:\n  - csharp\n  - vb\n  name: CspParameters(Int32, String)\n  fullName: System.Security.Cryptography.CspParameters.CspParameters(System.Int32, System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs\n    startLine: 34\n  assemblies:\n  - System.Security.Cryptography.Csp\n  namespace: System.Security.Cryptography\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.Cryptography.CspParameters\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified provider type code and name.</p>\\n\"\n  syntax:\n    content: public CspParameters(int dwTypeIn, string strProviderNameIn)\n    content.vb: Public Sub New(dwTypeIn As Integer, strProviderNameIn As String)\n    parameters:\n    - id: dwTypeIn\n      type: System.Int32\n      description: \"\\n<p>A provider type code that specifies the kind of provider to create.</p>\\n\"\n    - id: strProviderNameIn\n      type: System.String\n      description: \"\\n<p>A provider name. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: CspParameters.CspParameters(Int32, String)\n- uid: System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String)\n  commentId: M:System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String)\n  id: '#ctor(System.Int32,System.String,System.String)'\n  parent: System.Security.Cryptography.CspParameters\n  langs:\n  - csharp\n  - vb\n  name: CspParameters(Int32, String, String)\n  fullName: System.Security.Cryptography.CspParameters.CspParameters(System.Int32, System.String, System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs\n    startLine: 35\n  assemblies:\n  - System.Security.Cryptography.Csp\n  namespace: System.Security.Cryptography\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.Cryptography.CspParameters\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified provider type code and name, and the specified container name.</p>\\n\"\n  syntax:\n    content: public CspParameters(int dwTypeIn, string strProviderNameIn, string strContainerNameIn)\n    content.vb: Public Sub New(dwTypeIn As Integer, strProviderNameIn As String, strContainerNameIn As String)\n    parameters:\n    - id: dwTypeIn\n      type: System.Int32\n      description: \"\\n<p>The provider type code that specifies the kind of provider to create.</p>\\n\"\n    - id: strProviderNameIn\n      type: System.String\n      description: \"\\n<p>A provider name. </p>\\n\"\n    - id: strContainerNameIn\n      type: System.String\n      description: \"\\n<p>A container name. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: CspParameters.CspParameters(Int32, String, String)\n- uid: System.Security.Cryptography.CspParameters.Flags\n  commentId: P:System.Security.Cryptography.CspParameters.Flags\n  id: Flags\n  parent: System.Security.Cryptography.CspParameters\n  langs:\n  - csharp\n  - vb\n  name: Flags\n  fullName: System.Security.Cryptography.CspParameters.Flags\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Flags\n    path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs\n    startLine: 36\n  assemblies:\n  - System.Security.Cryptography.Csp\n  namespace: System.Security.Cryptography\n  summary: \"\\n<p>Represents the flags for <xref href=\\\"System.Security.Cryptography.CspParameters\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that modify the behavior of the cryptographic service provider (CSP).</p>\\n\"\n  syntax:\n    content: public CspProviderFlags Flags { get; set; }\n    content.vb: Public Property Flags As CspProviderFlags\n    parameters: []\n    return:\n      type: System.Security.Cryptography.CspProviderFlags\n      description: \"\\n<p>An enumeration value, or a bitwise combination of enumeration values.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>Value is not a valid enumeration value.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: CspParameters.Flags\n- uid: System.Security.Cryptography.CspParameters.ParentWindowHandle\n  commentId: P:System.Security.Cryptography.CspParameters.ParentWindowHandle\n  id: ParentWindowHandle\n  parent: System.Security.Cryptography.CspParameters\n  langs:\n  - csharp\n  - vb\n  name: ParentWindowHandle\n  fullName: System.Security.Cryptography.CspParameters.ParentWindowHandle\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ParentWindowHandle\n    path: src/System.Security.Cryptography.Csp/ref/System.Security.Cryptography.Csp.cs\n    startLine: 37\n  assemblies:\n  - System.Security.Cryptography.Csp\n  namespace: System.Security.Cryptography\n  summary: \"\\n<p>Gets or sets a handle to the unmanaged parent window for a smart card password dialog box.</p>\\n\"\n  syntax:\n    content: public IntPtr ParentWindowHandle { get; set; }\n    content.vb: Public Property ParentWindowHandle As IntPtr\n    parameters: []\n    return:\n      type: System.IntPtr\n      description: \"\\n<p>A handle to the parent window for a smart card password dialog box.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: CspParameters.ParentWindowHandle\nreferences:\n- uid: System.Security.Cryptography\n  isExternal: false\n  name: System.Security.Cryptography\n  fullName: System.Security.Cryptography\n  commentId: N:System.Security.Cryptography\n  nameWithType: System.Security.Cryptography\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  commentId: T:System.Int32\n  nameWithType: Int32\n- uid: System.Security.Cryptography.CspProviderFlags\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CspProviderFlags\n  fullName: System.Security.Cryptography.CspProviderFlags\n  commentId: T:System.Security.Cryptography.CspProviderFlags\n  nameWithType: CspProviderFlags\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  fullName: System.IntPtr\n  commentId: T:System.IntPtr\n  nameWithType: IntPtr\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n"}