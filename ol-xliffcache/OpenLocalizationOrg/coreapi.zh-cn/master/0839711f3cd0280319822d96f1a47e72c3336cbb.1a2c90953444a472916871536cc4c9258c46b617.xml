{"nodes":[{"pos":[904,927],"content":"DynamicMetaObjectBinder","needQuote":true,"nodes":[{"content":"DynamicMetaObjectBinder","pos":[0,23]}]},{"pos":[2756,2781],"content":"DynamicMetaObjectBinder()","needQuote":true,"nodes":[{"content":"DynamicMetaObjectBinder()","pos":[0,25]}]},{"pos":[3850,3860],"content":"ReturnType","needQuote":true,"nodes":[{"content":"ReturnType","pos":[0,10]}]},{"pos":[5286,5330],"content":"Bind(DynamicMetaObject, DynamicMetaObject[])","needQuote":true,"nodes":[{"content":"Bind(DynamicMetaObject, DynamicMetaObject[])","pos":[0,44]}]},{"content":"\\n&lt;p&gt;The target of the dynamic operation.&lt;/p&gt;\\n","pos":[6283,6330],"source":"\\n<p>The target of the dynamic operation.</p>\\n"},{"content":"\\n&lt;p&gt;An array of arguments of the dynamic operation.&lt;/p&gt;\\n","pos":[6414,6472],"source":"\\n<p>An array of arguments of the dynamic operation.</p>\\n"},{"pos":[7795,7863],"content":"Bind(Object[], ReadOnlyCollection<ParameterExpression>, LabelTarget)","needQuote":true,"nodes":[{"content":"Bind(Object[], ReadOnlyCollection&lt;ParameterExpression&gt;, LabelTarget)","pos":[0,68],"source":"Bind(Object[], ReadOnlyCollection<ParameterExpression>, LabelTarget)"}]},{"content":"\\n&lt;p&gt;An array of arguments to the dynamic operation.&lt;/p&gt;\\n","pos":[8928,8986],"source":"\\n<p>An array of arguments to the dynamic operation.</p>\\n"},{"content":"\\n&lt;p&gt;A LabelTarget used to return the result of the dynamic binding.&lt;/p&gt;\\n","pos":[9436,9510],"source":"\\n<p>A LabelTarget used to return the result of the dynamic binding.</p>\\n"},{"pos":[11231,11276],"content":"Defer(DynamicMetaObject, DynamicMetaObject[])","needQuote":true,"nodes":[{"content":"Defer(DynamicMetaObject, DynamicMetaObject[])","pos":[0,45]}]},{"content":"\\n&lt;p&gt;The target of the dynamic operation.&lt;/p&gt;\\n","pos":[12276,12323],"source":"\\n<p>The target of the dynamic operation.</p>\\n"},{"content":"\\n&lt;p&gt;An array of arguments of the dynamic operation.&lt;/p&gt;\\n","pos":[12407,12465],"source":"\\n<p>An array of arguments of the dynamic operation.</p>\\n"},{"pos":[13429,13455],"content":"Defer(DynamicMetaObject[])","needQuote":true,"nodes":[{"content":"Defer(DynamicMetaObject[])","pos":[0,26]}]},{"content":"\\n&lt;p&gt;An array of arguments of the dynamic operation.&lt;/p&gt;\\n","pos":[14366,14424],"source":"\\n<p>An array of arguments of the dynamic operation.</p>\\n"},{"pos":[15270,15295],"content":"GetUpdateExpression(Type)","needQuote":true,"nodes":[{"content":"GetUpdateExpression(Type)","pos":[0,25]}]},{"content":"\\n&lt;p&gt;The update expression.&lt;/p&gt;\\n","pos":[16632,16665],"source":"\\n<p>The update expression.</p>\\n"},{"pos":[16853,16867],"content":"System.Dynamic","needQuote":true,"nodes":[{"content":"System.Dynamic","pos":[0,14]}]},{"pos":[17022,17028],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17231,17245],"content":"CallSiteBinder","needQuote":true,"nodes":[{"content":"CallSiteBinder","pos":[0,14]}]},{"pos":[17549,17560],"content":"UpdateLabel","needQuote":true,"nodes":[{"content":"UpdateLabel","pos":[0,11]}]},{"pos":[18087,18125],"content":"BindDelegate<T>(CallSite<T>, Object[])","needQuote":true,"nodes":[{"content":"BindDelegate&lt;T&gt;(CallSite&lt;T&gt;, Object[])","pos":[0,38],"source":"BindDelegate<T>(CallSite<T>, Object[])"}]},{"pos":[18625,18640],"content":"BindDelegate<T>","needQuote":true,"nodes":[{"content":"BindDelegate&lt;T&gt;","pos":[0,15],"source":"BindDelegate<T>"}]},{"pos":[18728,18729],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18808,18816],"content":"CallSite","needQuote":true,"nodes":[{"content":"CallSite","pos":[0,8]}]},{"pos":[18882,18883],"content":"<","needQuote":true,"nodes":[]},{"pos":[18910,18911],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[18971,18972]},{"pos":[19027,19033],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":"[]","pos":[19094,19096]},{"pos":[19127,19128],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19301,19319],"content":"BindDelegate(Of T)","needQuote":true,"nodes":[{"content":"BindDelegate(Of T)","pos":[0,18]}]},{"pos":[19410,19411],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19490,19498],"content":"CallSite","needQuote":true,"nodes":[{"content":"CallSite","pos":[0,8]}]},{"content":"(Of","pos":[19565,19568]},{"pos":[19602,19603],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[19630,19631],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[19659,19660]},{"pos":[19715,19721],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[19781,19783],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[19811,19812],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20339,20356],"content":"CacheTarget<T>(T)","needQuote":true,"nodes":[{"content":"CacheTarget&lt;T&gt;(T)","pos":[0,17],"source":"CacheTarget<T>(T)"}]},{"pos":[20650,20664],"content":"CacheTarget<T>","needQuote":true,"nodes":[{"content":"CacheTarget&lt;T&gt;","pos":[0,14],"source":"CacheTarget<T>"}]},{"pos":[20751,20752],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20779,20780],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[20807,20808],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20922,20939],"content":"CacheTarget(Of T)","needQuote":true,"nodes":[{"content":"CacheTarget(Of T)","pos":[0,17]}]},{"pos":[21029,21030],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21057,21058],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[21085,21086],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21370,21380],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[21475,21483],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[21552,21553],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21580,21581],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21651,21659],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[21728,21729],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21756,21757],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21940,21954],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[22073,22079],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[22146,22147],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22197,22203],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[22263,22264],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22347,22353],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[22420,22421],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22471,22477],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[22537,22538],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22752,22774],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[22922,22928],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[22995,22996],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23046,23052],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[23113,23114]},{"pos":[23169,23175],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[23235,23236],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23333,23339],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[23406,23407],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23457,23463],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[23524,23525]},{"pos":[23580,23586],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[23646,23647],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23892,23923],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[24089,24104],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[24180,24181],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24231,24237],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[24298,24299]},{"pos":[24354,24360],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[24420,24421],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24527,24542],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[24618,24619],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24669,24675],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[24736,24737]},{"pos":[24792,24798],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[24858,24859],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25089,25102],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[25203,25214],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[25286,25287],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25314,25315],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25388,25399],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[25471,25472],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25499,25500],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25675,25684],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[25777,25784],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[25852,25853],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25880,25881],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25950,25957],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[26025,26026],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26053,26054],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26229,26246],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[26355,26370],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[26446,26447],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26474,26475],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26552,26567],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[26643,26644],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26671,26672],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26817,26823],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[26955,26986],"content":"System.Runtime.CompilerServices","needQuote":true,"nodes":[{"content":"System.Runtime.CompilerServices","pos":[0,31]}]},{"pos":[27286,27324],"content":"BindDelegate<T>(CallSite<T>, Object[])","needQuote":true,"nodes":[{"content":"BindDelegate&lt;T&gt;(CallSite&lt;T&gt;, Object[])","pos":[0,38],"source":"BindDelegate<T>(CallSite<T>, Object[])"}]},{"pos":[27824,27839],"content":"BindDelegate<T>","needQuote":true,"nodes":[{"content":"BindDelegate&lt;T&gt;","pos":[0,15],"source":"BindDelegate<T>"}]},{"pos":[27927,27928],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28007,28015],"content":"CallSite","needQuote":true,"nodes":[{"content":"CallSite","pos":[0,8]}]},{"pos":[28081,28082],"content":"<","needQuote":true,"nodes":[]},{"pos":[28109,28110],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[28170,28171]},{"pos":[28226,28232],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":"[]","pos":[28293,28295]},{"pos":[28326,28327],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28500,28518],"content":"BindDelegate(Of T)","needQuote":true,"nodes":[{"content":"BindDelegate(Of T)","pos":[0,18]}]},{"pos":[28609,28610],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28689,28697],"content":"CallSite","needQuote":true,"nodes":[{"content":"CallSite","pos":[0,8]}]},{"content":"(Of","pos":[28764,28767]},{"pos":[28801,28802],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[28829,28830],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[28858,28859]},{"pos":[28914,28920],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[28980,28982],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[29010,29011],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29420,29437],"content":"CacheTarget<T>(T)","needQuote":true,"nodes":[{"content":"CacheTarget&lt;T&gt;(T)","pos":[0,17],"source":"CacheTarget<T>(T)"}]},{"pos":[29731,29745],"content":"CacheTarget<T>","needQuote":true,"nodes":[{"content":"CacheTarget&lt;T&gt;","pos":[0,14],"source":"CacheTarget<T>"}]},{"pos":[29832,29833],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29860,29861],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[29888,29889],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30003,30020],"content":"CacheTarget(Of T)","needQuote":true,"nodes":[{"content":"CacheTarget(Of T)","pos":[0,17]}]},{"pos":[30110,30111],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30138,30139],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[30166,30167],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30434,30438],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[30604,30621],"content":"DynamicMetaObject","needQuote":true,"nodes":[{"content":"DynamicMetaObject","pos":[0,17]}]},{"pos":[30799,30818],"content":"DynamicMetaObject[]","needQuote":true,"nodes":[{"content":"DynamicMetaObject[]","pos":[0,19]}]},{"pos":[31014,31031],"content":"DynamicMetaObject","needQuote":true,"nodes":[{"content":"DynamicMetaObject","pos":[0,17]}]},{"content":"[]","pos":[31090,31092]},{"pos":[31176,31193],"content":"DynamicMetaObject","needQuote":true,"nodes":[{"content":"DynamicMetaObject","pos":[0,17]}]},{"pos":[31251,31253],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[31637,31705],"content":"Bind(Object[], ReadOnlyCollection<ParameterExpression>, LabelTarget)","needQuote":true,"nodes":[{"content":"Bind(Object[], ReadOnlyCollection&lt;ParameterExpression&gt;, LabelTarget)","pos":[0,68],"source":"Bind(Object[], ReadOnlyCollection<ParameterExpression>, LabelTarget)"}]},{"pos":[32457,32461],"content":"Bind","needQuote":true,"nodes":[{"content":"Bind","pos":[0,4]}]},{"pos":[32538,32539],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[32589,32595],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":"[]","pos":[32656,32658]},{"content":",","pos":[32690,32691]},{"pos":[32784,32802],"content":"ReadOnlyCollection","needQuote":true,"nodes":[{"content":"ReadOnlyCollection","pos":[0,18]}]},{"pos":[32898,32899],"content":"<","needQuote":true,"nodes":[]},{"pos":[32979,32998],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":",","pos":[33121,33122]},{"pos":[33199,33210],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[33292,33293],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[33540,33544],"content":"Bind","needQuote":true,"nodes":[{"content":"Bind","pos":[0,4]}]},{"pos":[33621,33622],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[33672,33678],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[33738,33740],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[33769,33770]},{"pos":[33863,33881],"content":"ReadOnlyCollection","needQuote":true,"nodes":[{"content":"ReadOnlyCollection","pos":[0,18]}]},{"content":"(Of","pos":[33978,33981]},{"pos":[34068,34087],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[34177,34178],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[34206,34207]},{"pos":[34284,34295],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[34377,34378],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34847,34855],"content":"Object[]","needQuote":true,"nodes":[{"content":"Object[]","pos":[0,8]}]},{"pos":[34983,34989],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":"[]","pos":[35050,35052]},{"pos":[35117,35123],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[35183,35185],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[35473,35512],"content":"ReadOnlyCollection<ParameterExpression>","needQuote":true,"nodes":[{"content":"ReadOnlyCollection&lt;ParameterExpression&gt;","pos":[0,39],"source":"ReadOnlyCollection<ParameterExpression>"}]},{"pos":[35873,35891],"content":"ReadOnlyCollection","needQuote":true,"nodes":[{"content":"ReadOnlyCollection","pos":[0,18]}]},{"pos":[35987,35988],"content":"<","needQuote":true,"nodes":[]},{"pos":[36068,36087],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[36260,36278],"content":"ReadOnlyCollection","needQuote":true,"nodes":[{"content":"ReadOnlyCollection","pos":[0,18]}]},{"content":"(Of","pos":[36375,36378]},{"pos":[36465,36484],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[36553,36554],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[36904,36915],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[37147,37157],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[37369,37390],"content":"ReadOnlyCollection<T>","needQuote":true,"nodes":[{"content":"ReadOnlyCollection&lt;T&gt;","pos":[0,21],"source":"ReadOnlyCollection<T>"}]},{"pos":[37649,37667],"content":"ReadOnlyCollection","needQuote":true,"nodes":[{"content":"ReadOnlyCollection","pos":[0,18]}]},{"pos":[37742,37743],"content":"<","needQuote":true,"nodes":[]},{"pos":[37770,37771],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[37902,37920],"content":"ReadOnlyCollection","needQuote":true,"nodes":[{"content":"ReadOnlyCollection","pos":[0,18]}]},{"content":"(Of","pos":[37996,37999]},{"pos":[38033,38034],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[38061,38062],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[38294,38324],"content":"System.Collections.ObjectModel","needQuote":true,"nodes":[{"content":"System.Collections.ObjectModel","pos":[0,30]}]},{"pos":[38520,38543],"content":"System.Linq.Expressions","needQuote":true,"nodes":[{"content":"System.Linq.Expressions","pos":[0,23]}]}],"content":"items:\n- uid: System.Dynamic.DynamicMetaObjectBinder\n  commentId: T:System.Dynamic.DynamicMetaObjectBinder\n  id: DynamicMetaObjectBinder\n  parent: System.Dynamic\n  children:\n  - System.Dynamic.DynamicMetaObjectBinder.#ctor\n  - System.Dynamic.DynamicMetaObjectBinder.Bind(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])\n  - System.Dynamic.DynamicMetaObjectBinder.Bind(System.Object[],System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.LabelTarget)\n  - System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])\n  - System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject[])\n  - System.Dynamic.DynamicMetaObjectBinder.GetUpdateExpression(System.Type)\n  - System.Dynamic.DynamicMetaObjectBinder.ReturnType\n  langs:\n  - csharp\n  - vb\n  name: DynamicMetaObjectBinder\n  fullName: System.Dynamic.DynamicMetaObjectBinder\n  type: Class\n  source:\n    remote:\n      path: src/System.Dynamic.Runtime/src/System/Dynamic/DynamicMetaObjectBinder.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: DynamicMetaObjectBinder\n    path: src/System.Dynamic.Runtime/src/System/Dynamic/DynamicMetaObjectBinder.cs\n    startLine: 21\n  assemblies:\n  - System.Dynamic.Runtime\n  namespace: System.Dynamic\n  summary: \"\\n<p>The dynamic call site binder that participates in the <xref href=\\\"System.Dynamic.DynamicMetaObject\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> binding protocol.</p>\\n\"\n  syntax:\n    content: 'public abstract class DynamicMetaObjectBinder : CallSiteBinder'\n    content.vb: >-\n      Public MustInherit Class DynamicMetaObjectBinder\n          Inherits CallSiteBinder\n  inheritance:\n  - System.Object\n  - System.Runtime.CompilerServices.CallSiteBinder\n  inheritedMembers:\n  - System.Runtime.CompilerServices.CallSiteBinder.UpdateLabel\n  - System.Runtime.CompilerServices.CallSiteBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{{T}},System.Object[])\n  - System.Runtime.CompilerServices.CallSiteBinder.CacheTarget``1({T})\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - abstract\n  - class\n  modifiers.vb:\n  - Public\n  - MustInherit\n  - Class\n  nameWithType: DynamicMetaObjectBinder\n- uid: System.Dynamic.DynamicMetaObjectBinder.#ctor\n  commentId: M:System.Dynamic.DynamicMetaObjectBinder.#ctor\n  id: '#ctor'\n  parent: System.Dynamic.DynamicMetaObjectBinder\n  langs:\n  - csharp\n  - vb\n  name: DynamicMetaObjectBinder()\n  fullName: System.Dynamic.DynamicMetaObjectBinder.DynamicMetaObjectBinder()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Dynamic.Runtime/src/System/Dynamic/DynamicMetaObjectBinder.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Dynamic.Runtime/src/System/Dynamic/DynamicMetaObjectBinder.cs\n    startLine: 28\n  assemblies:\n  - System.Dynamic.Runtime\n  namespace: System.Dynamic\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Dynamic.DynamicMetaObjectBinder\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: protected DynamicMetaObjectBinder()\n    content.vb: Protected Sub New\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: DynamicMetaObjectBinder.DynamicMetaObjectBinder()\n- uid: System.Dynamic.DynamicMetaObjectBinder.ReturnType\n  commentId: P:System.Dynamic.DynamicMetaObjectBinder.ReturnType\n  id: ReturnType\n  parent: System.Dynamic.DynamicMetaObjectBinder\n  langs:\n  - csharp\n  - vb\n  name: ReturnType\n  fullName: System.Dynamic.DynamicMetaObjectBinder.ReturnType\n  type: Property\n  source:\n    remote:\n      path: src/System.Dynamic.Runtime/src/System/Dynamic/DynamicMetaObjectBinder.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReturnType\n    path: src/System.Dynamic.Runtime/src/System/Dynamic/DynamicMetaObjectBinder.cs\n    startLine: 35\n  assemblies:\n  - System.Dynamic.Runtime\n  namespace: System.Dynamic\n  summary: \"\\n<p>The result type of the operation.</p>\\n\"\n  syntax:\n    content: public virtual Type ReturnType { get; }\n    content.vb: Public Overridable ReadOnly Property ReturnType As Type\n    parameters: []\n    return:\n      type: System.Type\n      description: \"\\n<p>The <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object representing the result type of the operation.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  nameWithType: DynamicMetaObjectBinder.ReturnType\n- uid: System.Dynamic.DynamicMetaObjectBinder.Bind(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])\n  commentId: M:System.Dynamic.DynamicMetaObjectBinder.Bind(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])\n  id: Bind(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])\n  parent: System.Dynamic.DynamicMetaObjectBinder\n  langs:\n  - csharp\n  - vb\n  name: Bind(DynamicMetaObject, DynamicMetaObject[])\n  fullName: System.Dynamic.DynamicMetaObjectBinder.Bind(System.Dynamic.DynamicMetaObject, System.Dynamic.DynamicMetaObject[])\n  type: Method\n  source:\n    remote:\n      path: src/System.Dynamic.Runtime/src/System/Dynamic/DynamicMetaObjectBinder.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Bind\n    path: src/System.Dynamic.Runtime/src/System/Dynamic/DynamicMetaObjectBinder.cs\n    startLine: 172\n  assemblies:\n  - System.Dynamic.Runtime\n  namespace: System.Dynamic\n  summary: \"\\n<p>When overridden in the derived class, performs the binding of the dynamic operation.</p>\\n\"\n  syntax:\n    content: public abstract DynamicMetaObject Bind(DynamicMetaObject target, DynamicMetaObject[] args)\n    content.vb: Public MustOverride Function Bind(target As DynamicMetaObject, args As DynamicMetaObject()) As DynamicMetaObject\n    parameters:\n    - id: target\n      type: System.Dynamic.DynamicMetaObject\n      description: \"\\n<p>The target of the dynamic operation.</p>\\n\"\n    - id: args\n      type: System.Dynamic.DynamicMetaObject[]\n      description: \"\\n<p>An array of arguments of the dynamic operation.</p>\\n\"\n    return:\n      type: System.Dynamic.DynamicMetaObject\n      description: \"\\n<p>The <xref href=\\\"System.Dynamic.DynamicMetaObject\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> representing the result of the binding.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  modifiers.vb:\n  - Public\n  - MustOverride\n  fullName.vb: System.Dynamic.DynamicMetaObjectBinder.Bind(System.Dynamic.DynamicMetaObject, System.Dynamic.DynamicMetaObject())\n  name.vb: Bind(DynamicMetaObject, DynamicMetaObject())\n  nameWithType: DynamicMetaObjectBinder.Bind(DynamicMetaObject, DynamicMetaObject[])\n  nameWithType.vb: DynamicMetaObjectBinder.Bind(DynamicMetaObject, DynamicMetaObject())\n- uid: System.Dynamic.DynamicMetaObjectBinder.Bind(System.Object[],System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.LabelTarget)\n  commentId: M:System.Dynamic.DynamicMetaObjectBinder.Bind(System.Object[],System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.LabelTarget)\n  id: Bind(System.Object[],System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.LabelTarget)\n  parent: System.Dynamic.DynamicMetaObjectBinder\n  langs:\n  - csharp\n  - vb\n  name: Bind(Object[], ReadOnlyCollection<ParameterExpression>, LabelTarget)\n  fullName: System.Dynamic.DynamicMetaObjectBinder.Bind(System.Object[], System.Collections.ObjectModel.ReadOnlyCollection<System.Linq.Expressions.ParameterExpression>, System.Linq.Expressions.LabelTarget)\n  type: Method\n  source:\n    remote:\n      path: src/System.Dynamic.Runtime/ref/System.Dynamic.Runtime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Bind\n    path: src/System.Dynamic.Runtime/ref/System.Dynamic.Runtime.cs\n    startLine: 108\n  assemblies:\n  - System.Dynamic.Runtime\n  namespace: System.Dynamic\n  summary: \"\\n<p>Performs the runtime binding of the dynamic operation on a set of arguments.</p>\\n\"\n  syntax:\n    content: public override sealed Expression Bind(object[] args, ReadOnlyCollection<ParameterExpression> parameters, LabelTarget returnLabel)\n    content.vb: Public NotOverridable Overrides Function Bind(args As Object(), parameters As ReadOnlyCollection(Of ParameterExpression), returnLabel As LabelTarget) As Expression\n    parameters:\n    - id: args\n      type: System.Object[]\n      description: \"\\n<p>An array of arguments to the dynamic operation.</p>\\n\"\n    - id: parameters\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ParameterExpression}\n      description: \"\\n<p>The array of <xref href=\\\"System.Linq.Expressions.ParameterExpression\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instances that represent the parameters of the call site in the binding process.</p>\\n\"\n    - id: returnLabel\n      type: System.Linq.Expressions.LabelTarget\n      description: \"\\n<p>A LabelTarget used to return the result of the dynamic binding.</p>\\n\"\n    return:\n      type: System.Linq.Expressions.Expression\n      description: \"\\n<p>An Expression that performs tests on the dynamic operation arguments, and performs the dynamic operation if the tests are valid. If the tests fail on subsequent occurrences of the dynamic operation, Bind will be called again to produce a new <xref href=\\\"System.Linq.Expressions.Expression\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for the new argument types.</p>\\n\"\n  overridden: System.Runtime.CompilerServices.CallSiteBinder.Bind(System.Object[],System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.LabelTarget)\n  modifiers.csharp:\n  - public\n  - override\n  - sealed\n  modifiers.vb:\n  - Public\n  - Overrides\n  - NotOverridable\n  fullName.vb: System.Dynamic.DynamicMetaObjectBinder.Bind(System.Object(), System.Collections.ObjectModel.ReadOnlyCollection(Of System.Linq.Expressions.ParameterExpression), System.Linq.Expressions.LabelTarget)\n  name.vb: Bind(Object(), ReadOnlyCollection(Of ParameterExpression), LabelTarget)\n  nameWithType: DynamicMetaObjectBinder.Bind(Object[], ReadOnlyCollection<ParameterExpression>, LabelTarget)\n  nameWithType.vb: DynamicMetaObjectBinder.Bind(Object(), ReadOnlyCollection(Of ParameterExpression), LabelTarget)\n- uid: System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])\n  commentId: M:System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])\n  id: Defer(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])\n  parent: System.Dynamic.DynamicMetaObjectBinder\n  langs:\n  - csharp\n  - vb\n  name: Defer(DynamicMetaObject, DynamicMetaObject[])\n  fullName: System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject, System.Dynamic.DynamicMetaObject[])\n  type: Method\n  source:\n    remote:\n      path: src/System.Dynamic.Runtime/src/System/Dynamic/DynamicMetaObjectBinder.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Defer\n    path: src/System.Dynamic.Runtime/src/System/Dynamic/DynamicMetaObjectBinder.cs\n    startLine: 194\n  assemblies:\n  - System.Dynamic.Runtime\n  namespace: System.Dynamic\n  summary: \"\\n<p>Defers the binding of the operation until later time when the runtime values of all dynamic operation arguments have been computed.</p>\\n\"\n  syntax:\n    content: public DynamicMetaObject Defer(DynamicMetaObject target, params DynamicMetaObject[] args)\n    content.vb: Public Function Defer(target As DynamicMetaObject, ParamArray args As DynamicMetaObject()) As DynamicMetaObject\n    parameters:\n    - id: target\n      type: System.Dynamic.DynamicMetaObject\n      description: \"\\n<p>The target of the dynamic operation.</p>\\n\"\n    - id: args\n      type: System.Dynamic.DynamicMetaObject[]\n      description: \"\\n<p>An array of arguments of the dynamic operation.</p>\\n\"\n    return:\n      type: System.Dynamic.DynamicMetaObject\n      description: \"\\n<p>The <xref href=\\\"System.Dynamic.DynamicMetaObject\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> representing the result of the binding.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject, System.Dynamic.DynamicMetaObject())\n  name.vb: Defer(DynamicMetaObject, DynamicMetaObject())\n  nameWithType: DynamicMetaObjectBinder.Defer(DynamicMetaObject, DynamicMetaObject[])\n  nameWithType.vb: DynamicMetaObjectBinder.Defer(DynamicMetaObject, DynamicMetaObject())\n- uid: System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject[])\n  commentId: M:System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject[])\n  id: Defer(System.Dynamic.DynamicMetaObject[])\n  parent: System.Dynamic.DynamicMetaObjectBinder\n  langs:\n  - csharp\n  - vb\n  name: Defer(DynamicMetaObject[])\n  fullName: System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject[])\n  type: Method\n  source:\n    remote:\n      path: src/System.Dynamic.Runtime/src/System/Dynamic/DynamicMetaObjectBinder.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Defer\n    path: src/System.Dynamic.Runtime/src/System/Dynamic/DynamicMetaObjectBinder.cs\n    startLine: 216\n  assemblies:\n  - System.Dynamic.Runtime\n  namespace: System.Dynamic\n  summary: \"\\n<p>Defers the binding of the operation until later time when the runtime values of all dynamic operation arguments have been computed.</p>\\n\"\n  syntax:\n    content: public DynamicMetaObject Defer(params DynamicMetaObject[] args)\n    content.vb: Public Function Defer(ParamArray args As DynamicMetaObject()) As DynamicMetaObject\n    parameters:\n    - id: args\n      type: System.Dynamic.DynamicMetaObject[]\n      description: \"\\n<p>An array of arguments of the dynamic operation.</p>\\n\"\n    return:\n      type: System.Dynamic.DynamicMetaObject\n      description: \"\\n<p>The <xref href=\\\"System.Dynamic.DynamicMetaObject\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> representing the result of the binding.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject())\n  name.vb: Defer(DynamicMetaObject())\n  nameWithType: DynamicMetaObjectBinder.Defer(DynamicMetaObject[])\n  nameWithType.vb: DynamicMetaObjectBinder.Defer(DynamicMetaObject())\n- uid: System.Dynamic.DynamicMetaObjectBinder.GetUpdateExpression(System.Type)\n  commentId: M:System.Dynamic.DynamicMetaObjectBinder.GetUpdateExpression(System.Type)\n  id: GetUpdateExpression(System.Type)\n  parent: System.Dynamic.DynamicMetaObjectBinder\n  langs:\n  - csharp\n  - vb\n  name: GetUpdateExpression(Type)\n  fullName: System.Dynamic.DynamicMetaObjectBinder.GetUpdateExpression(System.Type)\n  type: Method\n  source:\n    remote:\n      path: src/System.Dynamic.Runtime/src/System/Dynamic/DynamicMetaObjectBinder.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetUpdateExpression\n    path: src/System.Dynamic.Runtime/src/System/Dynamic/DynamicMetaObjectBinder.cs\n    startLine: 182\n  assemblies:\n  - System.Dynamic.Runtime\n  namespace: System.Dynamic\n  summary: \"\\n<p>Gets an expression that will cause the binding to be updated. It indicates that the expression's binding is no longer valid. This is typically used when the \\\"version\\\" of a dynamic object has changed.</p>\\n\"\n  syntax:\n    content: >-\n      [SuppressMessage(\"Microsoft.Performance\", \"CA1822:MarkMembersAsStatic\")]\n\n      public Expression GetUpdateExpression(Type type)\n    content.vb: >-\n      <SuppressMessage(\"Microsoft.Performance\", \"CA1822:MarkMembersAsStatic\")>\n\n      Public Function GetUpdateExpression(type As Type) As Expression\n    parameters:\n    - id: type\n      type: System.Type\n      description: \"\\n<p>The <xref href=\\\"System.Linq.Expressions.Expression.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property of the resulting expression; any type is allowed.</p>\\n\"\n    return:\n      type: Expression\n      description: \"\\n<p>The update expression.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: DynamicMetaObjectBinder.GetUpdateExpression(Type)\nreferences:\n- uid: System.Dynamic\n  isExternal: false\n  name: System.Dynamic\n  fullName: System.Dynamic\n  nameWithType: System.Dynamic\n  commentId: N:System.Dynamic\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Runtime.CompilerServices.CallSiteBinder\n  parent: System.Runtime.CompilerServices\n  isExternal: false\n  name: CallSiteBinder\n  fullName: System.Runtime.CompilerServices.CallSiteBinder\n  nameWithType: CallSiteBinder\n  commentId: T:System.Runtime.CompilerServices.CallSiteBinder\n- uid: System.Runtime.CompilerServices.CallSiteBinder.UpdateLabel\n  parent: System.Runtime.CompilerServices.CallSiteBinder\n  isExternal: false\n  name: UpdateLabel\n  fullName: System.Runtime.CompilerServices.CallSiteBinder.UpdateLabel\n  nameWithType: CallSiteBinder.UpdateLabel\n  commentId: P:System.Runtime.CompilerServices.CallSiteBinder.UpdateLabel\n- uid: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{{T}},System.Object[])\n  parent: System.Runtime.CompilerServices.CallSiteBinder\n  definition: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{``0},System.Object[])\n  name: BindDelegate<T>(CallSite<T>, Object[])\n  fullName: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate<T>(System.Runtime.CompilerServices.CallSite<T>, System.Object[])\n  fullname.vb: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate(Of T)(System.Runtime.CompilerServices.CallSite(Of T), System.Object())\n  name.vb: BindDelegate(Of T)(CallSite(Of T), Object())\n  spec.csharp:\n  - uid: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{``0},System.Object[])\n    name: BindDelegate<T>\n    fullName: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate<T>\n  - name: (\n    fullName: (\n  - uid: System.Runtime.CompilerServices.CallSite`1\n    name: CallSite\n    fullName: System.Runtime.CompilerServices.CallSite\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{``0},System.Object[])\n    name: BindDelegate(Of T)\n    fullName: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Runtime.CompilerServices.CallSite`1\n    name: CallSite\n    fullName: System.Runtime.CompilerServices.CallSite\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: CallSiteBinder.BindDelegate<T>(CallSite<T>, Object[])\n  nameWithType.vb: CallSiteBinder.BindDelegate(Of T)(CallSite(Of T), Object())\n  commentId: M:System.Runtime.CompilerServices.CallSiteBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{``0},System.Object[])\n- uid: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget``1({T})\n  parent: System.Runtime.CompilerServices.CallSiteBinder\n  definition: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget``1(``0)\n  name: CacheTarget<T>(T)\n  fullName: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget<T>(T)\n  fullname.vb: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget(Of T)(T)\n  name.vb: CacheTarget(Of T)(T)\n  spec.csharp:\n  - uid: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget``1(``0)\n    name: CacheTarget<T>\n    fullName: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget<T>\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget``1(``0)\n    name: CacheTarget(Of T)\n    fullName: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget(Of T)\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: CallSiteBinder.CacheTarget<T>(T)\n  nameWithType.vb: CallSiteBinder.CacheTarget(Of T)(T)\n  commentId: M:System.Runtime.CompilerServices.CallSiteBinder.CacheTarget``1(``0)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Runtime.CompilerServices\n  isExternal: false\n  name: System.Runtime.CompilerServices\n  fullName: System.Runtime.CompilerServices\n  nameWithType: System.Runtime.CompilerServices\n  commentId: N:System.Runtime.CompilerServices\n- uid: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{``0},System.Object[])\n  isExternal: true\n  name: BindDelegate<T>(CallSite<T>, Object[])\n  fullName: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate<T>(System.Runtime.CompilerServices.CallSite<T>, System.Object[])\n  fullname.vb: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate(Of T)(System.Runtime.CompilerServices.CallSite(Of T), System.Object())\n  name.vb: BindDelegate(Of T)(CallSite(Of T), Object())\n  spec.csharp:\n  - uid: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{``0},System.Object[])\n    name: BindDelegate<T>\n    fullName: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate<T>\n  - name: (\n    fullName: (\n  - uid: System.Runtime.CompilerServices.CallSite`1\n    name: CallSite\n    fullName: System.Runtime.CompilerServices.CallSite\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{``0},System.Object[])\n    name: BindDelegate(Of T)\n    fullName: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Runtime.CompilerServices.CallSite`1\n    name: CallSite\n    fullName: System.Runtime.CompilerServices.CallSite\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: CallSiteBinder.BindDelegate<T>(CallSite<T>, Object[])\n  nameWithType.vb: CallSiteBinder.BindDelegate(Of T)(CallSite(Of T), Object())\n  commentId: M:System.Runtime.CompilerServices.CallSiteBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{``0},System.Object[])\n- uid: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget``1(``0)\n  isExternal: false\n  name: CacheTarget<T>(T)\n  fullName: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget<T>(T)\n  fullname.vb: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget(Of T)(T)\n  name.vb: CacheTarget(Of T)(T)\n  spec.csharp:\n  - uid: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget``1(``0)\n    name: CacheTarget<T>\n    fullName: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget<T>\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget``1(``0)\n    name: CacheTarget(Of T)\n    fullName: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget(Of T)\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: CallSiteBinder.CacheTarget<T>(T)\n  nameWithType.vb: CallSiteBinder.CacheTarget(Of T)(T)\n  commentId: M:System.Runtime.CompilerServices.CallSiteBinder.CacheTarget``1(``0)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  fullName: System.Type\n  nameWithType: Type\n  commentId: T:System.Type\n- uid: System.Dynamic.DynamicMetaObject\n  parent: System.Dynamic\n  isExternal: false\n  name: DynamicMetaObject\n  fullName: System.Dynamic.DynamicMetaObject\n  nameWithType: DynamicMetaObject\n  commentId: T:System.Dynamic.DynamicMetaObject\n- uid: System.Dynamic.DynamicMetaObject[]\n  name: DynamicMetaObject[]\n  fullName: System.Dynamic.DynamicMetaObject[]\n  fullname.vb: System.Dynamic.DynamicMetaObject()\n  name.vb: DynamicMetaObject()\n  spec.csharp:\n  - uid: System.Dynamic.DynamicMetaObject\n    name: DynamicMetaObject\n    fullName: System.Dynamic.DynamicMetaObject\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Dynamic.DynamicMetaObject\n    name: DynamicMetaObject\n    fullName: System.Dynamic.DynamicMetaObject\n  - name: ()\n    fullName: ()\n  nameWithType: DynamicMetaObject[]\n  nameWithType.vb: DynamicMetaObject()\n- uid: System.Runtime.CompilerServices.CallSiteBinder.Bind(System.Object[],System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.LabelTarget)\n  parent: System.Runtime.CompilerServices.CallSiteBinder\n  isExternal: true\n  name: Bind(Object[], ReadOnlyCollection<ParameterExpression>, LabelTarget)\n  fullName: System.Runtime.CompilerServices.CallSiteBinder.Bind(System.Object[], System.Collections.ObjectModel.ReadOnlyCollection<System.Linq.Expressions.ParameterExpression>, System.Linq.Expressions.LabelTarget)\n  fullname.vb: System.Runtime.CompilerServices.CallSiteBinder.Bind(System.Object(), System.Collections.ObjectModel.ReadOnlyCollection(Of System.Linq.Expressions.ParameterExpression), System.Linq.Expressions.LabelTarget)\n  name.vb: Bind(Object(), ReadOnlyCollection(Of ParameterExpression), LabelTarget)\n  spec.csharp:\n  - uid: System.Runtime.CompilerServices.CallSiteBinder.Bind(System.Object[],System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.LabelTarget)\n    name: Bind\n    fullName: System.Runtime.CompilerServices.CallSiteBinder.Bind\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.CompilerServices.CallSiteBinder.Bind(System.Object[],System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.LabelTarget)\n    name: Bind\n    fullName: System.Runtime.CompilerServices.CallSiteBinder.Bind\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CallSiteBinder.Bind(Object[], ReadOnlyCollection<ParameterExpression>, LabelTarget)\n  nameWithType.vb: CallSiteBinder.Bind(Object(), ReadOnlyCollection(Of ParameterExpression), LabelTarget)\n  commentId: M:System.Runtime.CompilerServices.CallSiteBinder.Bind(System.Object[],System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.LabelTarget)\n- uid: System.Object[]\n  name: Object[]\n  fullName: System.Object[]\n  fullname.vb: System.Object()\n  name.vb: Object()\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: Object[]\n  nameWithType.vb: Object()\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ParameterExpression}\n  parent: System.Collections.ObjectModel\n  definition: System.Collections.ObjectModel.ReadOnlyCollection`1\n  name: ReadOnlyCollection<ParameterExpression>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Linq.Expressions.ParameterExpression>\n  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of System.Linq.Expressions.ParameterExpression)\n  name.vb: ReadOnlyCollection(Of ParameterExpression)\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  nameWithType: ReadOnlyCollection<ParameterExpression>\n  nameWithType.vb: ReadOnlyCollection(Of ParameterExpression)\n  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ParameterExpression}\n- uid: System.Linq.Expressions.LabelTarget\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: LabelTarget\n  fullName: System.Linq.Expressions.LabelTarget\n  nameWithType: LabelTarget\n  commentId: T:System.Linq.Expressions.LabelTarget\n- uid: System.Linq.Expressions.Expression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression\n  fullName: System.Linq.Expressions.Expression\n  nameWithType: Expression\n  commentId: T:System.Linq.Expressions.Expression\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: ReadOnlyCollection<T>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>\n  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T)\n  name.vb: ReadOnlyCollection(Of T)\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: ReadOnlyCollection<T>\n  nameWithType.vb: ReadOnlyCollection(Of T)\n  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection`1\n- uid: System.Collections.ObjectModel\n  isExternal: false\n  name: System.Collections.ObjectModel\n  fullName: System.Collections.ObjectModel\n  nameWithType: System.Collections.ObjectModel\n  commentId: N:System.Collections.ObjectModel\n- uid: System.Linq.Expressions\n  isExternal: false\n  name: System.Linq.Expressions\n  fullName: System.Linq.Expressions\n  nameWithType: System.Linq.Expressions\n  commentId: N:System.Linq.Expressions\n"}