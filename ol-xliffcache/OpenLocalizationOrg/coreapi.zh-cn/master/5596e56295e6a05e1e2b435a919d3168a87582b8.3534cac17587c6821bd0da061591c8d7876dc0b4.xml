{"nodes":[{"pos":[364,380],"content":"StreamingContext","needQuote":true,"nodes":[{"content":"StreamingContext","pos":[0,16]}]},{"pos":[2205,2219],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"content":"\\n&lt;p&gt;An object to compare with the current instance.","pos":[3097,3149],"source":"\\n<p>An object to compare with the current instance."},{"content":"&lt;/p&gt;\\n","pos":[3150,3156],"source":" </p>\\n"},{"pos":[3915,3928],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[5202,5230],"content":"System.Runtime.Serialization","needQuote":true,"nodes":[{"content":"System.Runtime.Serialization","pos":[0,28]}]},{"pos":[5449,5459],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[5560,5568],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[5619,5620],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[5647,5648],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[5721,5729],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[5780,5781],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[5808,5809],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6012,6034],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[6182,6188],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[6255,6256],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6306,6312],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[6373,6374]},{"pos":[6429,6435],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6495,6496],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6593,6599],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[6666,6667],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6717,6723],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[6784,6785]},{"pos":[6840,6846],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6906,6907],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7152,7183],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[7349,7364],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[7440,7441],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7491,7497],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[7558,7559]},{"pos":[7614,7620],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7680,7681],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7787,7802],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[7878,7879],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7929,7935],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[7996,7997]},{"pos":[8052,8058],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8118,8119],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8345,8354],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[8447,8454],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[8522,8523],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8550,8551],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8620,8627],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[8695,8696],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8723,8724],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8880,8889],"content":"ValueType","needQuote":true,"nodes":[{"content":"ValueType","pos":[0,9]}]},{"pos":[9043,9049],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9170,9176],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[9341,9355],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[9480,9486],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[9535,9536],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9586,9592],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9652,9653],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9739,9745],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[9794,9795],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9845,9851],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9911,9912],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10091,10098],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[10271,10284],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[10391,10402],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[10456,10457],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10484,10485],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10561,10572],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[10626,10627],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10654,10655],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10821,10826],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]}],"content":"items:\n- uid: System.Runtime.Serialization.StreamingContext\n  commentId: T:System.Runtime.Serialization.StreamingContext\n  id: StreamingContext\n  parent: System.Runtime.Serialization\n  children:\n  - System.Runtime.Serialization.StreamingContext.Equals(System.Object)\n  - System.Runtime.Serialization.StreamingContext.GetHashCode\n  langs:\n  - csharp\n  - vb\n  name: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n  type: Struct\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/Serialization/StreamingContext.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: StreamingContext\n    path: src/mscorlib/src/System/Runtime/Serialization/StreamingContext.cs\n    startLine: 17\n  assemblies:\n  - System.Runtime.Serialization.Primitives\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Describes the source and destination of a given serialized stream, and provides an additional caller-defined context.</p>\\n\"\n  syntax:\n    content: >-\n      [Serializable]\n\n      [ComVisible(true)]\n\n      public struct StreamingContext\n    content.vb: >-\n      <Serializable>\n\n      <ComVisible(True)>\n\n      Public Structure StreamingContext\n  seealso:\n  - type: System.Runtime.Serialization.StreamingContext.State\n    commentId: P:System.Runtime.Serialization.StreamingContext.State\n  inheritedMembers:\n  - System.ValueType.ToString\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  attributes:\n  - type: System.Runtime.InteropServices.StructLayoutAttribute\n    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)\n    arguments:\n    - type: System.Runtime.InteropServices.LayoutKind\n      value: 0\n  modifiers.csharp:\n  - public\n  - struct\n  modifiers.vb:\n  - Public\n  - Structure\n  nameWithType: StreamingContext\n- uid: System.Runtime.Serialization.StreamingContext.Equals(System.Object)\n  commentId: M:System.Runtime.Serialization.StreamingContext.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Runtime.Serialization.StreamingContext\n  langs:\n  - csharp\n  - vb\n  name: Equals(Object)\n  fullName: System.Runtime.Serialization.StreamingContext.Equals(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/Serialization/StreamingContext.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Equals\n    path: src/mscorlib/src/System/Runtime/Serialization/StreamingContext.cs\n    startLine: 36\n  assemblies:\n  - System.Runtime.Serialization.Primitives\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Determines whether two <xref href=\\\"System.Runtime.Serialization.StreamingContext\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instances contain the same values.</p>\\n\"\n  syntax:\n    content: public override bool Equals(object obj)\n    content.vb: Public Overrides Function Equals(obj As Object) As Boolean\n    parameters:\n    - id: obj\n      type: System.Object\n      description: \"\\n<p>An object to compare with the current instance. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the specified object is an instance of <xref href=\\\"System.Runtime.Serialization.StreamingContext\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and equals the value of the current instance; otherwise, <strong>false</strong>.</p>\\n\"\n  overridden: System.ValueType.Equals(System.Object)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: StreamingContext.Equals(Object)\n- uid: System.Runtime.Serialization.StreamingContext.GetHashCode\n  commentId: M:System.Runtime.Serialization.StreamingContext.GetHashCode\n  id: GetHashCode\n  parent: System.Runtime.Serialization.StreamingContext\n  langs:\n  - csharp\n  - vb\n  name: GetHashCode()\n  fullName: System.Runtime.Serialization.StreamingContext.GetHashCode()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/Serialization/StreamingContext.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetHashCode\n    path: src/mscorlib/src/System/Runtime/Serialization/StreamingContext.cs\n    startLine: 47\n  assemblies:\n  - System.Runtime.Serialization.Primitives\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Returns a hash code of this object.</p>\\n\"\n  syntax:\n    content: public override int GetHashCode()\n    content.vb: Public Overrides Function GetHashCode As Integer\n    return:\n      type: System.Int32\n      description: \"\\n<p>The <xref href=\\\"System.Runtime.Serialization.StreamingContextStates\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that contains the source or destination of the serialization for this <xref href=\\\"System.Runtime.Serialization.StreamingContext\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  overridden: System.ValueType.GetHashCode\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: StreamingContext.GetHashCode()\nreferences:\n- uid: System.Runtime.Serialization\n  isExternal: false\n  name: System.Runtime.Serialization\n  fullName: System.Runtime.Serialization\n  nameWithType: System.Runtime.Serialization\n  commentId: N:System.Runtime.Serialization\n- uid: System.ValueType.ToString\n  parent: System.ValueType\n  isExternal: false\n  name: ToString()\n  fullName: System.ValueType.ToString()\n  spec.csharp:\n  - uid: System.ValueType.ToString\n    name: ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.ToString\n    name: ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ValueType.ToString()\n  commentId: M:System.ValueType.ToString\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  fullName: System.ValueType\n  nameWithType: ValueType\n  commentId: T:System.ValueType\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.ValueType.Equals(System.Object)\n  parent: System.ValueType\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.ValueType.Equals(System.Object)\n  spec.csharp:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: ValueType.Equals(Object)\n  commentId: M:System.ValueType.Equals(System.Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.ValueType.GetHashCode\n  parent: System.ValueType\n  isExternal: false\n  name: GetHashCode()\n  fullName: System.ValueType.GetHashCode()\n  spec.csharp:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ValueType.GetHashCode()\n  commentId: M:System.ValueType.GetHashCode\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n"}