{"nodes":[{"pos":[481,491],"content":"IContainer","needQuote":true,"nodes":[{"content":"IContainer","pos":[0,10]}]},{"pos":[1886,1896],"content":"Components","needQuote":true,"nodes":[{"content":"Components","pos":[0,10]}]},{"pos":[3392,3407],"content":"Add(IComponent)","needQuote":true,"nodes":[{"content":"Add(IComponent)","pos":[0,15]}]},{"pos":[4843,4866],"content":"Add(IComponent, String)","needQuote":true,"nodes":[{"content":"Add(IComponent, String)","pos":[0,23]}]},{"content":"\\n&lt;p&gt;The unique, case-insensitive name to assign to the component.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;\\n&lt;strong&gt;null&lt;/strong&gt; that leaves the component unnamed.","pos":[6073,6220],"source":"\\n<p>The unique, case-insensitive name to assign to the component.</p>\\n<p>-or- </p>\\n<p>\\n<strong>null</strong> that leaves the component unnamed."},{"content":"&lt;/p&gt;\\n","pos":[6221,6227],"source":" </p>\\n"},{"pos":[6575,6593],"content":"Remove(IComponent)","needQuote":true,"nodes":[{"content":"Remove(IComponent)","pos":[0,18]}]},{"pos":[7675,7696],"content":"System.ComponentModel","needQuote":true,"nodes":[{"content":"System.ComponentModel","pos":[0,21]}]},{"pos":[7897,7906],"content":"Dispose()","needQuote":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[8009,8016],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[8068,8069],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8096,8097],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8171,8178],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[8230,8231],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8258,8259],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8427,8438],"content":"IDisposable","needQuote":true,"nodes":[{"content":"IDisposable","pos":[0,11]}]},{"pos":[8574,8580],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[8754,8773],"content":"ComponentCollection","needQuote":true,"nodes":[{"content":"ComponentCollection","pos":[0,19]}]},{"pos":[9021,9031],"content":"IComponent","needQuote":true,"nodes":[{"content":"IComponent","pos":[0,10]}]},{"pos":[9218,9224],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"items:\n- uid: System.ComponentModel.IContainer\n  commentId: T:System.ComponentModel.IContainer\n  id: IContainer\n  parent: System.ComponentModel\n  children:\n  - System.ComponentModel.IContainer.Add(System.ComponentModel.IComponent)\n  - System.ComponentModel.IContainer.Add(System.ComponentModel.IComponent,System.String)\n  - System.ComponentModel.IContainer.Components\n  - System.ComponentModel.IContainer.Remove(System.ComponentModel.IComponent)\n  langs:\n  - csharp\n  - vb\n  name: IContainer\n  fullName: System.ComponentModel.IContainer\n  type: Interface\n  source:\n    remote:\n      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/IContainer.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IContainer\n    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/IContainer.cs\n    startLine: 21\n  assemblies:\n  - System.ComponentModel.Primitives\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Provides functionality for containers. Containers are objects that logically contain zero or more components.</p>\\n\"\n  syntax:\n    content: 'public interface IContainer : IDisposable'\n    content.vb: >-\n      Public Interface IContainer\n          Inherits IDisposable\n  seealso:\n  - type: System.ComponentModel.Component\n    commentId: T:System.ComponentModel.Component\n  - type: System.ComponentModel.IComponent\n    commentId: T:System.ComponentModel.IComponent\n  - type: System.ComponentModel.Container\n    commentId: T:System.ComponentModel.Container\n  inheritedMembers:\n  - System.IDisposable.Dispose\n  modifiers.csharp:\n  - public\n  - interface\n  modifiers.vb:\n  - Public\n  - Interface\n  nameWithType: IContainer\n- uid: System.ComponentModel.IContainer.Components\n  commentId: P:System.ComponentModel.IContainer.Components\n  id: Components\n  parent: System.ComponentModel.IContainer\n  langs:\n  - csharp\n  - vb\n  name: Components\n  fullName: System.ComponentModel.IContainer.Components\n  type: Property\n  source:\n    remote:\n      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/IContainer.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Components\n    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/IContainer.cs\n    startLine: 41\n  assemblies:\n  - System.ComponentModel.Primitives\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Gets all the components in the <xref href=\\\"System.ComponentModel.IContainer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: ComponentCollection Components { get; }\n    content.vb: ReadOnly Property Components As ComponentCollection\n    parameters: []\n    return:\n      type: System.ComponentModel.ComponentCollection\n      description: \"\\n<p>A collection of <xref href=\\\"System.ComponentModel.IComponent\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects that represents all the components in the <xref href=\\\"System.ComponentModel.IContainer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  nameWithType: IContainer.Components\n- uid: System.ComponentModel.IContainer.Add(System.ComponentModel.IComponent)\n  commentId: M:System.ComponentModel.IContainer.Add(System.ComponentModel.IComponent)\n  id: Add(System.ComponentModel.IComponent)\n  parent: System.ComponentModel.IContainer\n  langs:\n  - csharp\n  - vb\n  name: Add(IComponent)\n  fullName: System.ComponentModel.IContainer.Add(System.ComponentModel.IComponent)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/IContainer.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Add\n    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/IContainer.cs\n    startLine: 28\n  assemblies:\n  - System.ComponentModel.Primitives\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Adds the specified <xref href=\\\"System.ComponentModel.IComponent\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to the <xref href=\\\"System.ComponentModel.IContainer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> at the end of the list.</p>\\n\"\n  syntax:\n    content: void Add(IComponent component)\n    content.vb: Sub Add(component As IComponent)\n    parameters:\n    - id: component\n      type: System.ComponentModel.IComponent\n      description: \"\\n<p>The <xref href=\\\"System.ComponentModel.IComponent\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to add. </p>\\n\"\n  nameWithType: IContainer.Add(IComponent)\n- uid: System.ComponentModel.IContainer.Add(System.ComponentModel.IComponent,System.String)\n  commentId: M:System.ComponentModel.IContainer.Add(System.ComponentModel.IComponent,System.String)\n  id: Add(System.ComponentModel.IComponent,System.String)\n  parent: System.ComponentModel.IContainer\n  langs:\n  - csharp\n  - vb\n  name: Add(IComponent, String)\n  fullName: System.ComponentModel.IContainer.Add(System.ComponentModel.IComponent, System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/IContainer.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Add\n    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/IContainer.cs\n    startLine: 35\n  assemblies:\n  - System.ComponentModel.Primitives\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Adds the specified <xref href=\\\"System.ComponentModel.IComponent\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to the <xref href=\\\"System.ComponentModel.IContainer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> at the end of the list, and assigns a name to the component.</p>\\n\"\n  syntax:\n    content: void Add(IComponent component, string name)\n    content.vb: Sub Add(component As IComponent, name As String)\n    parameters:\n    - id: component\n      type: System.ComponentModel.IComponent\n      description: \"\\n<p>The <xref href=\\\"System.ComponentModel.IComponent\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to add. </p>\\n\"\n    - id: name\n      type: System.String\n      description: \"\\n<p>The unique, case-insensitive name to assign to the component.</p>\\n<p>-or- </p>\\n<p>\\n<strong>null</strong> that leaves the component unnamed. </p>\\n\"\n  nameWithType: IContainer.Add(IComponent, String)\n- uid: System.ComponentModel.IContainer.Remove(System.ComponentModel.IComponent)\n  commentId: M:System.ComponentModel.IContainer.Remove(System.ComponentModel.IComponent)\n  id: Remove(System.ComponentModel.IComponent)\n  parent: System.ComponentModel.IContainer\n  langs:\n  - csharp\n  - vb\n  name: Remove(IComponent)\n  fullName: System.ComponentModel.IContainer.Remove(System.ComponentModel.IComponent)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/IContainer.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Remove\n    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/IContainer.cs\n    startLine: 47\n  assemblies:\n  - System.ComponentModel.Primitives\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Removes a component from the <xref href=\\\"System.ComponentModel.IContainer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: void Remove(IComponent component)\n    content.vb: Sub Remove(component As IComponent)\n    parameters:\n    - id: component\n      type: System.ComponentModel.IComponent\n      description: \"\\n<p>The <xref href=\\\"System.ComponentModel.IComponent\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to remove. </p>\\n\"\n  nameWithType: IContainer.Remove(IComponent)\nreferences:\n- uid: System.ComponentModel\n  isExternal: false\n  name: System.ComponentModel\n  fullName: System.ComponentModel\n  nameWithType: System.ComponentModel\n  commentId: N:System.ComponentModel\n- uid: System.IDisposable.Dispose\n  parent: System.IDisposable\n  isExternal: false\n  name: Dispose()\n  fullName: System.IDisposable.Dispose()\n  spec.csharp:\n  - uid: System.IDisposable.Dispose\n    name: Dispose\n    fullName: System.IDisposable.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IDisposable.Dispose\n    name: Dispose\n    fullName: System.IDisposable.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: IDisposable.Dispose()\n  commentId: M:System.IDisposable.Dispose\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  fullName: System.IDisposable\n  nameWithType: IDisposable\n  commentId: T:System.IDisposable\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.ComponentModel.ComponentCollection\n  parent: System.ComponentModel\n  isExternal: false\n  name: ComponentCollection\n  fullName: System.ComponentModel.ComponentCollection\n  nameWithType: ComponentCollection\n  commentId: T:System.ComponentModel.ComponentCollection\n- uid: System.ComponentModel.IComponent\n  parent: System.ComponentModel\n  isExternal: false\n  name: IComponent\n  fullName: System.ComponentModel.IComponent\n  nameWithType: IComponent\n  commentId: T:System.ComponentModel.IComponent\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n"}