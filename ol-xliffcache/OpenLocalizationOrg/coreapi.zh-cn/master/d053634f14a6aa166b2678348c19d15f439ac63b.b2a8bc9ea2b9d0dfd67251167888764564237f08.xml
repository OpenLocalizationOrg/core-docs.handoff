{"nodes":[{"pos":[737,751],"content":"ThreadLocal<T>","needQuote":true,"nodes":[{"content":"ThreadLocal&lt;T&gt;","pos":[0,14],"source":"ThreadLocal<T>"}]},{"content":"\\n&lt;p&gt;Specifies the type of data stored per-thread.&lt;/p&gt;\\n","pos":[1957,2013],"source":"\\n<p>Specifies the type of data stored per-thread.</p>\\n"},{"pos":[2916,2929],"content":"ThreadLocal()","needQuote":true,"nodes":[{"content":"ThreadLocal()","pos":[0,13]}]},{"pos":[4052,4072],"content":"ThreadLocal(Boolean)","needQuote":true,"nodes":[{"content":"ThreadLocal(Boolean)","pos":[0,20]}]},{"pos":[5618,5638],"content":"ThreadLocal(Func<T>)","needQuote":true,"nodes":[{"content":"ThreadLocal(Func&lt;T&gt;)","pos":[0,20],"source":"ThreadLocal(Func<T>)"}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;valueFactory&lt;/em&gt; is a null reference (Nothing in Visual Basic).&lt;/p&gt;\\n","pos":[6878,6959],"source":"\\n<p>\\n<em>valueFactory</em> is a null reference (Nothing in Visual Basic).</p>\\n"},{"pos":[7596,7625],"content":"ThreadLocal(Func<T>, Boolean)","needQuote":true,"nodes":[{"content":"ThreadLocal(Func&lt;T&gt;, Boolean)","pos":[0,29],"source":"ThreadLocal(Func<T>, Boolean)"}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;valueFactory&lt;/em&gt; is a &lt;strong&gt;null&lt;/strong&gt; reference (&lt;strong&gt;Nothing&lt;/strong&gt; in Visual Basic).&lt;/p&gt;\\n","pos":[9322,9437],"source":"\\n<p>\\n<em>valueFactory</em> is a <strong>null</strong> reference (<strong>Nothing</strong> in Visual Basic).</p>\\n"},{"pos":[9980,9994],"content":"IsValueCreated","needQuote":true,"nodes":[{"content":"IsValueCreated","pos":[0,14]}]},{"pos":[11687,11692],"content":"Value","needQuote":true,"nodes":[{"content":"Value","pos":[0,5]}]},{"content":"\\n&lt;p&gt;Returns an instance of the object that this ThreadLocal is responsible for initializing.&lt;/p&gt;\\n","pos":[12455,12554],"source":"\\n<p>Returns an instance of the object that this ThreadLocal is responsible for initializing.</p>\\n"},{"content":"\\n&lt;p&gt;No default constructor is provided and no value factory is supplied.&lt;/p&gt;\\n","pos":[13201,13280],"source":"\\n<p>No default constructor is provided and no value factory is supplied.</p>\\n"},{"pos":[13745,13751],"content":"Values","needQuote":true,"nodes":[{"content":"Values","pos":[0,6]}]},{"content":"\\n&lt;p&gt;A list for all of the values currently stored by all of the threads that have accessed this instance.&lt;/p&gt;\\n","pos":[14482,14594],"source":"\\n<p>A list for all of the values currently stored by all of the threads that have accessed this instance.</p>\\n"},{"content":"\\n&lt;p&gt;Values stored by all threads are not available because this instance was initialized with the &lt;em&gt;trackAllValues&lt;/em&gt; argument set to &lt;strong&gt;false&lt;/strong&gt; in the call to a class constructor.","pos":[14721,14918],"source":"\\n<p>Values stored by all threads are not available because this instance was initialized with the <em>trackAllValues</em> argument set to <strong>false</strong> in the call to a class constructor."},{"content":"&lt;/p&gt;\\n","pos":[14919,14925],"source":" </p>\\n"},{"pos":[15577,15586],"content":"Dispose()","needQuote":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[16785,16801],"content":"Dispose(Boolean)","needQuote":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[18307,18317],"content":"Finalize()","needQuote":true,"nodes":[{"content":"Finalize()","pos":[0,10]}]},{"pos":[19425,19435],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"content":"\\n&lt;p&gt;No default constructor is provided and no value factory is supplied.&lt;/p&gt;\\n","pos":[21297,21376],"source":"\\n<p>No default constructor is provided and no value factory is supplied.</p>\\n"},{"pos":[21744,21760],"content":"System.Threading","needQuote":true,"nodes":[{"content":"System.Threading","pos":[0,16]}]},{"pos":[21921,21927],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[22077,22088],"content":"IDisposable","needQuote":true,"nodes":[{"content":"IDisposable","pos":[0,11]}]},{"pos":[22276,22290],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[22409,22415],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[22482,22483],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22533,22539],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[22599,22600],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22683,22689],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[22756,22757],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22807,22813],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[22873,22874],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23088,23110],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[23258,23264],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[23331,23332],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23382,23388],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[23449,23450]},{"pos":[23505,23511],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[23571,23572],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23669,23675],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[23742,23743],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23793,23799],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[23860,23861]},{"pos":[23916,23922],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[23982,23983],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24228,24259],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[24425,24440],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[24516,24517],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24567,24573],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[24634,24635]},{"pos":[24690,24696],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[24756,24757],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24863,24878],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[24954,24955],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25005,25011],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[25072,25073]},{"pos":[25128,25134],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[25194,25195],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25425,25438],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[25539,25550],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[25622,25623],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25650,25651],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25724,25735],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[25807,25808],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25835,25836],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26011,26020],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[26113,26120],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[26188,26189],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26216,26217],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26286,26293],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[26361,26362],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26389,26390],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26565,26582],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[26691,26706],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[26782,26783],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26810,26811],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26888,26903],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[26979,26980],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27007,27008],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27153,27159],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[27291,27298],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[27457,27464],"content":"Func<T>","needQuote":true,"nodes":[{"content":"Func&lt;T&gt;","pos":[0,7],"source":"Func<T>"}]},{"pos":[27595,27599],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[27636,27637],"content":"<","needQuote":true,"nodes":[]},{"pos":[27664,27665],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[27758,27762],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[27800,27803]},{"pos":[27837,27838],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[27865,27866],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28018,28031],"content":"Func<TResult>","needQuote":true,"nodes":[{"content":"Func&lt;TResult&gt;","pos":[0,13],"source":"Func<TResult>"}]},{"pos":[28180,28184],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[28221,28222],"content":"<","needQuote":true,"nodes":[]},{"pos":[28249,28256],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[28355,28359],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[28397,28400]},{"pos":[28434,28441],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[28474,28475],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28624,28625],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[28714,28715],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[28887,28895],"content":"IList<T>","needQuote":true,"nodes":[{"content":"IList&lt;T&gt;","pos":[0,8],"source":"IList<T>"}]},{"pos":[29090,29095],"content":"IList","needQuote":true,"nodes":[{"content":"IList","pos":[0,5]}]},{"pos":[29153,29154],"content":"<","needQuote":true,"nodes":[]},{"pos":[29181,29182],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[29296,29301],"content":"IList","needQuote":true,"nodes":[{"content":"IList","pos":[0,5]}]},{"content":"(Of","pos":[29360,29363]},{"pos":[29397,29398],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[29425,29426],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29621,29629],"content":"IList<T>","needQuote":true,"nodes":[{"content":"IList&lt;T&gt;","pos":[0,8],"source":"IList<T>"}]},{"pos":[29824,29829],"content":"IList","needQuote":true,"nodes":[{"content":"IList","pos":[0,5]}]},{"pos":[29887,29888],"content":"<","needQuote":true,"nodes":[]},{"pos":[29915,29916],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[30030,30035],"content":"IList","needQuote":true,"nodes":[{"content":"IList","pos":[0,5]}]},{"content":"(Of","pos":[30094,30097]},{"pos":[30131,30132],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[30159,30160],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30345,30371],"content":"System.Collections.Generic","needQuote":true,"nodes":[{"content":"System.Collections.Generic","pos":[0,26]}]},{"pos":[30587,30596],"content":"Dispose()","needQuote":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[30699,30706],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[30758,30759],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30786,30787],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30861,30868],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[30920,30921],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30948,30949],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31127,31137],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[31232,31240],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[31309,31310],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31337,31338],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31408,31416],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[31485,31486],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31513,31514],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31669,31675],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[31818,31839],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[32029,32052],"content":"ObjectDisposedException","needQuote":true,"nodes":[{"content":"ObjectDisposedException","pos":[0,23]}]},{"pos":[32267,32292],"content":"InvalidOperationException","needQuote":true,"nodes":[{"content":"InvalidOperationException","pos":[0,25]}]},{"pos":[32510,32532],"content":"MissingMemberException","needQuote":true,"nodes":[{"content":"MissingMemberException","pos":[0,22]}]},{"pos":[32724,32746],"content":"NullReferenceException","needQuote":true,"nodes":[{"content":"NullReferenceException","pos":[0,22]}]}],"content":"items:\n- uid: System.Threading.ThreadLocal`1\n  commentId: T:System.Threading.ThreadLocal`1\n  id: ThreadLocal`1\n  parent: System.Threading\n  children:\n  - System.Threading.ThreadLocal`1.#ctor\n  - System.Threading.ThreadLocal`1.#ctor(System.Boolean)\n  - System.Threading.ThreadLocal`1.#ctor(System.Func{`0})\n  - System.Threading.ThreadLocal`1.#ctor(System.Func{`0},System.Boolean)\n  - System.Threading.ThreadLocal`1.Dispose\n  - System.Threading.ThreadLocal`1.Dispose(System.Boolean)\n  - System.Threading.ThreadLocal`1.Finalize\n  - System.Threading.ThreadLocal`1.IsValueCreated\n  - System.Threading.ThreadLocal`1.ToString\n  - System.Threading.ThreadLocal`1.Value\n  - System.Threading.ThreadLocal`1.Values\n  langs:\n  - csharp\n  - vb\n  name: ThreadLocal<T>\n  fullName: System.Threading.ThreadLocal<T>\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/ThreadLocal.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ThreadLocal\n    path: src/mscorlib/src/System/Threading/ThreadLocal.cs\n    startLine: 35\n  assemblies:\n  - System.Threading\n  namespace: System.Threading\n  summary: \"\\n<p>Provides thread-local storage of data.</p>\\n\"\n  syntax:\n    content: >-\n      [DebuggerTypeProxy(typeof (SystemThreading_ThreadLocalDebugView<>))]\n\n      [DebuggerDisplay(\"IsValueCreated={IsValueCreated}, Value={ValueForDebugDisplay}, Count={ValuesCountForDebugDisplay}\")]\n\n      [HostProtection(Synchronization = true, ExternalThreading = true)]\n\n      public class ThreadLocal<T> : IDisposable\n    content.vb: >-\n      <DebuggerTypeProxy(GetType(SystemThreading_ThreadLocalDebugView(Of )))>\n\n      <DebuggerDisplay(\"IsValueCreated={IsValueCreated}, Value={ValueForDebugDisplay}, Count={ValuesCountForDebugDisplay}\")>\n\n      <HostProtection(Synchronization:=True, ExternalThreading:=True)>\n\n      Public Class ThreadLocal(Of T)\n          Implements IDisposable\n    typeParameters:\n    - id: T\n      description: \"\\n<p>Specifies the type of data stored per-thread.</p>\\n\"\n  seealso:\n  - type: System.Lazy`1\n    commentId: T:System.Lazy`1\n  - type: System.Threading.AsyncLocal`1\n    commentId: T:System.Threading.AsyncLocal`1\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  fullName.vb: System.Threading.ThreadLocal(Of T)\n  name.vb: ThreadLocal(Of T)\n  nameWithType: ThreadLocal<T>\n  nameWithType.vb: ThreadLocal(Of T)\n- uid: System.Threading.ThreadLocal`1.#ctor\n  commentId: M:System.Threading.ThreadLocal`1.#ctor\n  id: '#ctor'\n  parent: System.Threading.ThreadLocal`1\n  langs:\n  - csharp\n  - vb\n  name: ThreadLocal()\n  fullName: System.Threading.ThreadLocal<T>.ThreadLocal()\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/ThreadLocal.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Threading/ThreadLocal.cs\n    startLine: 80\n  assemblies:\n  - System.Threading\n  namespace: System.Threading\n  summary: \"\\n<p>Initializes the <xref href=\\\"System.Threading.ThreadLocal`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n  syntax:\n    content: public ThreadLocal()\n    content.vb: Public Sub New\n  seealso:\n  - type: System.Lazy`1\n    commentId: T:System.Lazy`1\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Threading.ThreadLocal(Of T).ThreadLocal()\n  nameWithType: ThreadLocal<T>.ThreadLocal()\n  nameWithType.vb: ThreadLocal(Of T).ThreadLocal()\n- uid: System.Threading.ThreadLocal`1.#ctor(System.Boolean)\n  commentId: M:System.Threading.ThreadLocal`1.#ctor(System.Boolean)\n  id: '#ctor(System.Boolean)'\n  parent: System.Threading.ThreadLocal`1\n  langs:\n  - csharp\n  - vb\n  name: ThreadLocal(Boolean)\n  fullName: System.Threading.ThreadLocal<T>.ThreadLocal(System.Boolean)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/ThreadLocal.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Threading/ThreadLocal.cs\n    startLine: 89\n  assemblies:\n  - System.Threading\n  namespace: System.Threading\n  summary: \"\\n<p>Initializes the <xref href=\\\"System.Threading.ThreadLocal`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance and specifies whether all values are accessible from any thread.</p>\\n\"\n  syntax:\n    content: public ThreadLocal(bool trackAllValues)\n    content.vb: Public Sub New(trackAllValues As Boolean)\n    parameters:\n    - id: trackAllValues\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to track all values set on the instance and expose them through the <xref href=\\\"System.Threading.ThreadLocal`1.Values\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property; <strong>false</strong> otherwise.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Threading.ThreadLocal(Of T).ThreadLocal(System.Boolean)\n  nameWithType: ThreadLocal<T>.ThreadLocal(Boolean)\n  nameWithType.vb: ThreadLocal(Of T).ThreadLocal(Boolean)\n- uid: System.Threading.ThreadLocal`1.#ctor(System.Func{`0})\n  commentId: M:System.Threading.ThreadLocal`1.#ctor(System.Func{`0})\n  id: '#ctor(System.Func{`0})'\n  parent: System.Threading.ThreadLocal`1\n  langs:\n  - csharp\n  - vb\n  name: ThreadLocal(Func<T>)\n  fullName: System.Threading.ThreadLocal<T>.ThreadLocal(System.Func<T>)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/ThreadLocal.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Threading/ThreadLocal.cs\n    startLine: 106\n  assemblies:\n  - System.Threading\n  namespace: System.Threading\n  summary: \"\\n<p>Initializes the <xref href=\\\"System.Threading.ThreadLocal`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance with the specified <em>valueFactory</em> function.</p>\\n\"\n  syntax:\n    content: public ThreadLocal(Func<T> valueFactory)\n    content.vb: Public Sub New(valueFactory As Func(Of T))\n    parameters:\n    - id: valueFactory\n      type: System.Func{{T}}\n      description: \"\\n<p>The  <xref href=\\\"System.Func`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> invoked to produce a lazily-initialized value when an attempt is made to retrieve <xref href=\\\"System.Threading.ThreadLocal`1.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> without it having been previously initialized.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>valueFactory</em> is a null reference (Nothing in Visual Basic).</p>\\n\"\n  seealso:\n  - type: System.Lazy`1\n    commentId: T:System.Lazy`1\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Threading.ThreadLocal(Of T).ThreadLocal(System.Func(Of T))\n  name.vb: ThreadLocal(Func(Of T))\n  nameWithType: ThreadLocal<T>.ThreadLocal(Func<T>)\n  nameWithType.vb: ThreadLocal(Of T).ThreadLocal(Func(Of T))\n- uid: System.Threading.ThreadLocal`1.#ctor(System.Func{`0},System.Boolean)\n  commentId: M:System.Threading.ThreadLocal`1.#ctor(System.Func{`0},System.Boolean)\n  id: '#ctor(System.Func{`0},System.Boolean)'\n  parent: System.Threading.ThreadLocal`1\n  langs:\n  - csharp\n  - vb\n  name: ThreadLocal(Func<T>, Boolean)\n  fullName: System.Threading.ThreadLocal<T>.ThreadLocal(System.Func<T>, System.Boolean)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/ThreadLocal.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Threading/ThreadLocal.cs\n    startLine: 126\n  assemblies:\n  - System.Threading\n  namespace: System.Threading\n  summary: \"\\n<p>Initializes the <xref href=\\\"System.Threading.ThreadLocal`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance with the specified <em>valueFactory</em> function and a flag that indicates whether all values are accessible from any thread.</p>\\n\"\n  syntax:\n    content: public ThreadLocal(Func<T> valueFactory, bool trackAllValues)\n    content.vb: Public Sub New(valueFactory As Func(Of T), trackAllValues As Boolean)\n    parameters:\n    - id: valueFactory\n      type: System.Func{{T}}\n      description: \"\\n<p>The <xref href=\\\"System.Func`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> invoked to produce a lazily-initialized value when an attempt is made to retrieve <xref href=\\\"System.Threading.ThreadLocal`1.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> without it having been previously initialized.</p>\\n\"\n    - id: trackAllValues\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to track all values set on the instance and expose them through the <xref href=\\\"System.Threading.ThreadLocal`1.Values\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property; <strong>false</strong> otherwise.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>valueFactory</em> is a <strong>null</strong> reference (<strong>Nothing</strong> in Visual Basic).</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Threading.ThreadLocal(Of T).ThreadLocal(System.Func(Of T), System.Boolean)\n  name.vb: ThreadLocal(Func(Of T), Boolean)\n  nameWithType: ThreadLocal<T>.ThreadLocal(Func<T>, Boolean)\n  nameWithType.vb: ThreadLocal(Of T).ThreadLocal(Func(Of T), Boolean)\n- uid: System.Threading.ThreadLocal`1.IsValueCreated\n  commentId: P:System.Threading.ThreadLocal`1.IsValueCreated\n  id: IsValueCreated\n  parent: System.Threading.ThreadLocal`1\n  langs:\n  - csharp\n  - vb\n  name: IsValueCreated\n  fullName: System.Threading.ThreadLocal<T>.IsValueCreated\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/ThreadLocal.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: IsValueCreated\n    path: src/mscorlib/src/System/Threading/ThreadLocal.cs\n    startLine: 509\n  assemblies:\n  - System.Threading\n  namespace: System.Threading\n  summary: \"\\n<p>Gets whether <xref href=\\\"System.Threading.ThreadLocal`1.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is initialized on the current thread.</p>\\n\"\n  syntax:\n    content: public bool IsValueCreated { get; }\n    content.vb: Public ReadOnly Property IsValueCreated As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>true if <xref href=\\\"System.Threading.ThreadLocal`1.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is initialized on the current thread; otherwise false.</p>\\n\"\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Threading.ThreadLocal`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance has been disposed.</p>\\n\"\n  seealso:\n  - type: System.Lazy`1\n    commentId: T:System.Lazy`1\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  fullName.vb: System.Threading.ThreadLocal(Of T).IsValueCreated\n  nameWithType: ThreadLocal<T>.IsValueCreated\n  nameWithType.vb: ThreadLocal(Of T).IsValueCreated\n- uid: System.Threading.ThreadLocal`1.Value\n  commentId: P:System.Threading.ThreadLocal`1.Value\n  id: Value\n  parent: System.Threading.ThreadLocal`1\n  langs:\n  - csharp\n  - vb\n  name: Value\n  fullName: System.Threading.ThreadLocal<T>.Value\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/ThreadLocal.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Value\n    path: src/mscorlib/src/System/Threading/ThreadLocal.cs\n    startLine: 263\n  assemblies:\n  - System.Threading\n  namespace: System.Threading\n  summary: \"\\n<p>Gets or sets the value of this instance for the current thread.</p>\\n\"\n  syntax:\n    content: >-\n      [DebuggerBrowsable(DebuggerBrowsableState.Never)]\n\n      public T Value { get; set; }\n    content.vb: >-\n      <DebuggerBrowsable(DebuggerBrowsableState.Never)>\n\n      Public Property Value As T\n    parameters: []\n    return:\n      type: '{T}'\n      description: \"\\n<p>Returns an instance of the object that this ThreadLocal is responsible for initializing.</p>\\n\"\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Threading.ThreadLocal`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance has been disposed.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The initialization function attempted to reference <xref href=\\\"System.Threading.ThreadLocal`1.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> recursively.</p>\\n\"\n  - type: System.MissingMemberException\n    commentId: T:System.MissingMemberException\n    description: \"\\n<p>No default constructor is provided and no value factory is supplied.</p>\\n\"\n  seealso:\n  - type: System.Lazy`1\n    commentId: T:System.Lazy`1\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Threading.ThreadLocal(Of T).Value\n  nameWithType: ThreadLocal<T>.Value\n  nameWithType.vb: ThreadLocal(Of T).Value\n- uid: System.Threading.ThreadLocal`1.Values\n  commentId: P:System.Threading.ThreadLocal`1.Values\n  id: Values\n  parent: System.Threading.ThreadLocal`1\n  langs:\n  - csharp\n  - vb\n  name: Values\n  fullName: System.Threading.ThreadLocal<T>.Values\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/ThreadLocal.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Values\n    path: src/mscorlib/src/System/Threading/ThreadLocal.cs\n    startLine: 453\n  assemblies:\n  - System.Threading\n  namespace: System.Threading\n  summary: \"\\n<p>Gets a list for all of the values currently stored by all of the threads that have accessed this instance.</p>\\n\"\n  syntax:\n    content: public IList<T> Values { get; }\n    content.vb: Public ReadOnly Property Values As IList(Of T)\n    parameters: []\n    return:\n      type: System.Collections.Generic.IList{{T}}\n      description: \"\\n<p>A list for all of the values currently stored by all of the threads that have accessed this instance.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>Values stored by all threads are not available because this instance was initialized with the <em>trackAllValues</em> argument set to <strong>false</strong> in the call to a class constructor. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Threading.ThreadLocal`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance has been disposed.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  fullName.vb: System.Threading.ThreadLocal(Of T).Values\n  nameWithType: ThreadLocal<T>.Values\n  nameWithType.vb: ThreadLocal(Of T).Values\n- uid: System.Threading.ThreadLocal`1.Dispose\n  commentId: M:System.Threading.ThreadLocal`1.Dispose\n  id: Dispose\n  parent: System.Threading.ThreadLocal`1\n  langs:\n  - csharp\n  - vb\n  name: Dispose()\n  fullName: System.Threading.ThreadLocal<T>.Dispose()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/ThreadLocal.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Dispose\n    path: src/mscorlib/src/System/Threading/ThreadLocal.cs\n    startLine: 169\n  assemblies:\n  - System.Threading\n  namespace: System.Threading\n  summary: \"\\n<p>Releases all resources used by the current instance of the <xref href=\\\"System.Threading.ThreadLocal`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public void Dispose()\n    content.vb: Public Sub Dispose\n  seealso:\n  - type: System.Lazy`1\n    commentId: T:System.Lazy`1\n  implements:\n  - System.IDisposable.Dispose\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Threading.ThreadLocal(Of T).Dispose()\n  nameWithType: ThreadLocal<T>.Dispose()\n  nameWithType.vb: ThreadLocal(Of T).Dispose()\n- uid: System.Threading.ThreadLocal`1.Dispose(System.Boolean)\n  commentId: M:System.Threading.ThreadLocal`1.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Threading.ThreadLocal`1\n  langs:\n  - csharp\n  - vb\n  name: Dispose(Boolean)\n  fullName: System.Threading.ThreadLocal<T>.Dispose(System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/ThreadLocal.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Dispose\n    path: src/mscorlib/src/System/Threading/ThreadLocal.cs\n    startLine: 184\n  assemblies:\n  - System.Threading\n  namespace: System.Threading\n  summary: \"\\n<p>Releases the resources used by this <xref href=\\\"System.Threading.ThreadLocal`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n  syntax:\n    content: protected virtual void Dispose(bool disposing)\n    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: \"\\n<p>A Boolean value that indicates whether this method is being called due to a call to <xref href=\\\"System.Threading.ThreadLocal`1.Dispose\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  seealso:\n  - type: System.Lazy`1\n    commentId: T:System.Lazy`1\n  modifiers.csharp:\n  - protected\n  - virtual\n  modifiers.vb:\n  - Protected\n  - Overridable\n  fullName.vb: System.Threading.ThreadLocal(Of T).Dispose(System.Boolean)\n  nameWithType: ThreadLocal<T>.Dispose(Boolean)\n  nameWithType.vb: ThreadLocal(Of T).Dispose(Boolean)\n- uid: System.Threading.ThreadLocal`1.Finalize\n  commentId: M:System.Threading.ThreadLocal`1.Finalize\n  id: Finalize\n  parent: System.Threading.ThreadLocal`1\n  langs:\n  - csharp\n  - vb\n  name: Finalize()\n  fullName: System.Threading.ThreadLocal<T>.Finalize()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/ThreadLocal.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Finalize\n    path: src/mscorlib/src/System/Threading/ThreadLocal.cs\n    startLine: 155\n  assemblies:\n  - System.Threading\n  namespace: System.Threading\n  summary: \"\\n<p>Releases the resources used by this <xref href=\\\"System.Threading.ThreadLocal`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n  syntax:\n    content: protected void Finalize()\n    content.vb: Protected Sub Finalize\n  seealso:\n  - type: System.Lazy`1\n    commentId: T:System.Lazy`1\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  fullName.vb: System.Threading.ThreadLocal(Of T).Finalize()\n  nameWithType: ThreadLocal<T>.Finalize()\n  nameWithType.vb: ThreadLocal(Of T).Finalize()\n- uid: System.Threading.ThreadLocal`1.ToString\n  commentId: M:System.Threading.ThreadLocal`1.ToString\n  id: ToString\n  parent: System.Threading.ThreadLocal`1\n  langs:\n  - csharp\n  - vb\n  name: ToString()\n  fullName: System.Threading.ThreadLocal<T>.ToString()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/ThreadLocal.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ToString\n    path: src/mscorlib/src/System/Threading/ThreadLocal.cs\n    startLine: 242\n  assemblies:\n  - System.Threading\n  namespace: System.Threading\n  summary: \"\\n<p>Creates and returns a string representation of this instance for the current thread.</p>\\n\"\n  syntax:\n    content: public override string ToString()\n    content.vb: Public Overrides Function ToString As String\n    return:\n      type: System.String\n      description: \"\\n<p>The result of calling <xref href=\\\"System.Object.ToString\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> on the <xref href=\\\"System.Threading.ThreadLocal`1.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  overridden: System.Object.ToString\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Threading.ThreadLocal`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance has been disposed.</p>\\n\"\n  - type: System.NullReferenceException\n    commentId: T:System.NullReferenceException\n    description: \"\\n<p>The <xref href=\\\"System.Threading.ThreadLocal`1.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for the current thread is a null reference (Nothing in Visual Basic).</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The initialization function attempted to reference <xref href=\\\"System.Threading.ThreadLocal`1.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> recursively.</p>\\n\"\n  - type: System.MissingMemberException\n    commentId: T:System.MissingMemberException\n    description: \"\\n<p>No default constructor is provided and no value factory is supplied.</p>\\n\"\n  seealso:\n  - type: System.Lazy`1\n    commentId: T:System.Lazy`1\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  fullName.vb: System.Threading.ThreadLocal(Of T).ToString()\n  nameWithType: ThreadLocal<T>.ToString()\n  nameWithType.vb: ThreadLocal(Of T).ToString()\nreferences:\n- uid: System.Threading\n  isExternal: false\n  name: System.Threading\n  fullName: System.Threading\n  nameWithType: System.Threading\n  commentId: N:System.Threading\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  fullName: System.IDisposable\n  nameWithType: IDisposable\n  commentId: T:System.IDisposable\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.Func{{T}}\n  parent: System\n  definition: System.Func`1\n  name: Func<T>\n  fullName: System.Func<T>\n  fullname.vb: System.Func(Of T)\n  name.vb: Func(Of T)\n  spec.csharp:\n  - uid: System.Func`1\n    name: Func\n    fullName: System.Func\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Func`1\n    name: Func\n    fullName: System.Func\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: Func<T>\n  nameWithType.vb: Func(Of T)\n  commentId: T:System.Func{``0}\n- uid: System.Func`1\n  isExternal: false\n  name: Func<TResult>\n  fullName: System.Func<TResult>\n  fullname.vb: System.Func(Of TResult)\n  name.vb: Func(Of TResult)\n  spec.csharp:\n  - uid: System.Func`1\n    name: Func\n    fullName: System.Func\n  - name: <\n    fullName: <\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Func`1\n    name: Func\n    fullName: System.Func\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  nameWithType: Func<TResult>\n  nameWithType.vb: Func(Of TResult)\n  commentId: T:System.Func`1\n- uid: '{T}'\n  definition: T\n  name: T\n  fullName: T\n  nameWithType: T\n  commentId: '!:T'\n- uid: T\n  isExternal: false\n  name: T\n  fullName: T\n  nameWithType: T\n- uid: System.Collections.Generic.IList{{T}}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IList`1\n  name: IList<T>\n  fullName: System.Collections.Generic.IList<T>\n  fullname.vb: System.Collections.Generic.IList(Of T)\n  name.vb: IList(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    fullName: System.Collections.Generic.IList\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    fullName: System.Collections.Generic.IList\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: IList<T>\n  nameWithType.vb: IList(Of T)\n  commentId: T:System.Collections.Generic.IList{`0}\n- uid: System.Collections.Generic.IList`1\n  isExternal: false\n  name: IList<T>\n  fullName: System.Collections.Generic.IList<T>\n  fullname.vb: System.Collections.Generic.IList(Of T)\n  name.vb: IList(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    fullName: System.Collections.Generic.IList\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    fullName: System.Collections.Generic.IList\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: IList<T>\n  nameWithType.vb: IList(Of T)\n  commentId: T:System.Collections.Generic.IList`1\n- uid: System.Collections.Generic\n  isExternal: false\n  name: System.Collections.Generic\n  fullName: System.Collections.Generic\n  nameWithType: System.Collections.Generic\n  commentId: N:System.Collections.Generic\n- uid: System.IDisposable.Dispose\n  parent: System.IDisposable\n  isExternal: false\n  name: Dispose()\n  fullName: System.IDisposable.Dispose()\n  spec.csharp:\n  - uid: System.IDisposable.Dispose\n    name: Dispose\n    fullName: System.IDisposable.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IDisposable.Dispose\n    name: Dispose\n    fullName: System.IDisposable.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: IDisposable.Dispose()\n  commentId: M:System.IDisposable.Dispose\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.ObjectDisposedException\n  isExternal: false\n  name: ObjectDisposedException\n  fullName: System.ObjectDisposedException\n  nameWithType: ObjectDisposedException\n  commentId: T:System.ObjectDisposedException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  fullName: System.InvalidOperationException\n  nameWithType: InvalidOperationException\n  commentId: T:System.InvalidOperationException\n- uid: System.MissingMemberException\n  parent: System\n  isExternal: false\n  name: MissingMemberException\n  fullName: System.MissingMemberException\n  nameWithType: MissingMemberException\n  commentId: T:System.MissingMemberException\n- uid: System.NullReferenceException\n  isExternal: false\n  name: NullReferenceException\n  fullName: System.NullReferenceException\n  nameWithType: NullReferenceException\n  commentId: T:System.NullReferenceException\n"}