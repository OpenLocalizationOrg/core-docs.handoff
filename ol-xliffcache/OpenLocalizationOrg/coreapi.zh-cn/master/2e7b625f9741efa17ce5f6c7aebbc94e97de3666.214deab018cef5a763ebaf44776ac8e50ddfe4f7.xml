{"nodes":[{"pos":[654,668],"content":"SqlTransaction","needQuote":true,"nodes":[{"content":"SqlTransaction","pos":[0,14]}]},{"pos":[1800,1810],"content":"Connection","needQuote":true,"nodes":[{"content":"Connection","pos":[0,10]}]},{"pos":[3215,3227],"content":"DbConnection","needQuote":true,"nodes":[{"content":"DbConnection","pos":[0,12]}]},{"pos":[4276,4290],"content":"IsolationLevel","needQuote":true,"nodes":[{"content":"IsolationLevel","pos":[0,14]}]},{"pos":[5658,5666],"content":"Commit()","needQuote":true,"nodes":[{"content":"Commit()","pos":[0,8]}]},{"content":"\\n&lt;p&gt;An error occurred while trying to commit the transaction.","pos":[6351,6413],"source":"\\n<p>An error occurred while trying to commit the transaction."},{"content":"&lt;/p&gt;\\n","pos":[6414,6420],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The transaction has already been committed or rolled back.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;The connection is broken.","pos":[6533,6644],"source":"\\n<p>The transaction has already been committed or rolled back.</p>\\n<p>-or- </p>\\n<p>The connection is broken."},{"content":"&lt;/p&gt;\\n","pos":[6645,6651],"source":" </p>\\n"},{"pos":[7034,7050],"content":"Dispose(Boolean)","needQuote":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[8057,8067],"content":"Rollback()","needQuote":true,"nodes":[{"content":"Rollback()","pos":[0,10]}]},{"content":"\\n&lt;p&gt;An error occurred while trying to commit the transaction.","pos":[8773,8835],"source":"\\n<p>An error occurred while trying to commit the transaction."},{"content":"&lt;/p&gt;\\n","pos":[8836,8842],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The transaction has already been committed or rolled back.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;The connection is broken.","pos":[8955,9066],"source":"\\n<p>The transaction has already been committed or rolled back.</p>\\n<p>-or- </p>\\n<p>The connection is broken."},{"content":"&lt;/p&gt;\\n","pos":[9067,9073],"source":" </p>\\n"},{"pos":[9458,9474],"content":"Rollback(String)","needQuote":true,"nodes":[{"content":"Rollback(String)","pos":[0,16]}]},{"content":"\\n&lt;p&gt;The name of the transaction to roll back, or the savepoint to which to roll back.","pos":[10267,10353],"source":"\\n<p>The name of the transaction to roll back, or the savepoint to which to roll back."},{"content":"&lt;/p&gt;\\n","pos":[10354,10360],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;No transaction name was specified.","pos":[10471,10510],"source":"\\n<p>No transaction name was specified."},{"content":"&lt;/p&gt;\\n","pos":[10511,10517],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The transaction has already been committed or rolled back.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;The connection is broken.","pos":[10630,10741],"source":"\\n<p>The transaction has already been committed or rolled back.</p>\\n<p>-or- </p>\\n<p>The connection is broken."},{"content":"&lt;/p&gt;\\n","pos":[10742,10748],"source":" </p>\\n"},{"pos":[11100,11112],"content":"Save(String)","needQuote":true,"nodes":[{"content":"Save(String)","pos":[0,12]}]},{"content":"\\n&lt;p&gt;The name of the savepoint.","pos":[11917,11948],"source":"\\n<p>The name of the savepoint."},{"content":"&lt;/p&gt;\\n","pos":[11949,11955],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An error occurred while trying to commit the transaction.","pos":[12050,12112],"source":"\\n<p>An error occurred while trying to commit the transaction."},{"content":"&lt;/p&gt;\\n","pos":[12113,12119],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The transaction has already been committed or rolled back.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;The connection is broken.","pos":[12232,12343],"source":"\\n<p>The transaction has already been committed or rolled back.</p>\\n<p>-or- </p>\\n<p>The connection is broken."},{"content":"&lt;/p&gt;\\n","pos":[12344,12350],"source":" </p>\\n"},{"pos":[12523,12544],"content":"System.Data.SqlClient","needQuote":true,"nodes":[{"content":"System.Data.SqlClient","pos":[0,21]}]},{"pos":[12720,12726],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12847,12853],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[13021,13034],"content":"SqlConnection","needQuote":true,"nodes":[{"content":"SqlConnection","pos":[0,13]}]},{"pos":[13260,13272],"content":"DbConnection","needQuote":true,"nodes":[{"content":"DbConnection","pos":[0,12]}]},{"pos":[13447,13465],"content":"System.Data.Common","needQuote":true,"nodes":[{"content":"System.Data.Common","pos":[0,18]}]},{"pos":[13650,13664],"content":"IsolationLevel","needQuote":true,"nodes":[{"content":"IsolationLevel","pos":[0,14]}]},{"pos":[13824,13835],"content":"System.Data","needQuote":true,"nodes":[{"content":"System.Data","pos":[0,11]}]},{"pos":[13982,13989],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[14137,14143],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[14291,14300],"content":"Exception","needQuote":true,"nodes":[{"content":"Exception","pos":[0,9]}]},{"pos":[14473,14498],"content":"InvalidOperationException","needQuote":true,"nodes":[{"content":"InvalidOperationException","pos":[0,25]}]},{"pos":[14711,14728],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]}],"content":"items:\n- uid: System.Data.SqlClient.SqlTransaction\n  commentId: T:System.Data.SqlClient.SqlTransaction\n  id: SqlTransaction\n  parent: System.Data.SqlClient\n  children:\n  - System.Data.SqlClient.SqlTransaction.Commit\n  - System.Data.SqlClient.SqlTransaction.Connection\n  - System.Data.SqlClient.SqlTransaction.DbConnection\n  - System.Data.SqlClient.SqlTransaction.Dispose(System.Boolean)\n  - System.Data.SqlClient.SqlTransaction.IsolationLevel\n  - System.Data.SqlClient.SqlTransaction.Rollback\n  - System.Data.SqlClient.SqlTransaction.Rollback(System.String)\n  - System.Data.SqlClient.SqlTransaction.Save(System.String)\n  langs:\n  - csharp\n  - vb\n  name: SqlTransaction\n  fullName: System.Data.SqlClient.SqlTransaction\n  type: Class\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlTransaction.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SqlTransaction\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlTransaction.cs\n    startLine: 13\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Represents a Transact-SQL transaction to be made in a SQL Server database. This class cannot be inherited. </p>\\n\"\n  syntax:\n    content: 'public sealed class SqlTransaction : DbTransaction'\n    content.vb: >-\n      Public NotInheritable Class SqlTransaction\n          Inherits DbTransaction\n  inheritance:\n  - System.Object\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: SqlTransaction\n- uid: System.Data.SqlClient.SqlTransaction.Connection\n  commentId: P:System.Data.SqlClient.SqlTransaction.Connection\n  id: Connection\n  parent: System.Data.SqlClient.SqlTransaction\n  langs:\n  - csharp\n  - vb\n  name: Connection\n  fullName: System.Data.SqlClient.SqlTransaction.Connection\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlTransaction.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Connection\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlTransaction.cs\n    startLine: 44\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Gets the <xref href=\\\"System.Data.SqlClient.SqlConnection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object associated with the transaction, or <strong>null</strong> if the transaction is no longer valid.</p>\\n\"\n  syntax:\n    content: public SqlConnection Connection { get; }\n    content.vb: Public ReadOnly Property Connection As SqlConnection\n    parameters: []\n    return:\n      type: System.Data.SqlClient.SqlConnection\n      description: \"\\n<p>The <xref href=\\\"System.Data.SqlClient.SqlConnection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object associated with the transaction.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: SqlTransaction.Connection\n- uid: System.Data.SqlClient.SqlTransaction.DbConnection\n  commentId: P:System.Data.SqlClient.SqlTransaction.DbConnection\n  id: DbConnection\n  parent: System.Data.SqlClient.SqlTransaction\n  langs:\n  - csharp\n  - vb\n  name: DbConnection\n  fullName: System.Data.SqlClient.SqlTransaction.DbConnection\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlTransaction.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: DbConnection\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlTransaction.cs\n    startLine: 59\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  syntax:\n    content: protected override DbConnection DbConnection { get; }\n    content.vb: Protected Overrides ReadOnly Property DbConnection As DbConnection\n    parameters: []\n    return:\n      type: DbConnection\n  modifiers.csharp:\n  - protected\n  - override\n  - get\n  modifiers.vb:\n  - Protected\n  - Overrides\n  - ReadOnly\n  nameWithType: SqlTransaction.DbConnection\n- uid: System.Data.SqlClient.SqlTransaction.IsolationLevel\n  commentId: P:System.Data.SqlClient.SqlTransaction.IsolationLevel\n  id: IsolationLevel\n  parent: System.Data.SqlClient.SqlTransaction\n  langs:\n  - csharp\n  - vb\n  name: IsolationLevel\n  fullName: System.Data.SqlClient.SqlTransaction.IsolationLevel\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlTransaction.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsolationLevel\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlTransaction.cs\n    startLine: 75\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Specifies the <xref href=\\\"System.Data.IsolationLevel\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for this transaction.</p>\\n\"\n  syntax:\n    content: public override IsolationLevel IsolationLevel { get; }\n    content.vb: Public Overrides ReadOnly Property IsolationLevel As IsolationLevel\n    parameters: []\n    return:\n      type: IsolationLevel\n      description: \"\\n<p>The <xref href=\\\"System.Data.IsolationLevel\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for this transaction. The default is <strong>ReadCommitted</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: SqlTransaction.IsolationLevel\n- uid: System.Data.SqlClient.SqlTransaction.Commit\n  commentId: M:System.Data.SqlClient.SqlTransaction.Commit\n  id: Commit\n  parent: System.Data.SqlClient.SqlTransaction\n  langs:\n  - csharp\n  - vb\n  name: Commit()\n  fullName: System.Data.SqlClient.SqlTransaction.Commit()\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlTransaction.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Commit\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlTransaction.cs\n    startLine: 120\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Commits the database transaction.</p>\\n\"\n  syntax:\n    content: public override void Commit()\n    content.vb: Public Overrides Sub Commit\n  exceptions:\n  - type: System.Exception\n    commentId: T:System.Exception\n    description: \"\\n<p>An error occurred while trying to commit the transaction. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The transaction has already been committed or rolled back.</p>\\n<p>-or- </p>\\n<p>The connection is broken. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: SqlTransaction.Commit()\n- uid: System.Data.SqlClient.SqlTransaction.Dispose(System.Boolean)\n  commentId: M:System.Data.SqlClient.SqlTransaction.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Data.SqlClient.SqlTransaction\n  langs:\n  - csharp\n  - vb\n  name: Dispose(Boolean)\n  fullName: System.Data.SqlClient.SqlTransaction.Dispose(System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlTransaction.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Dispose\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlTransaction.cs\n    startLine: 141\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  syntax:\n    content: protected override void Dispose(bool disposing)\n    content.vb: Protected Overrides Sub Dispose(disposing As Boolean)\n    parameters:\n    - id: disposing\n      type: System.Boolean\n  modifiers.csharp:\n  - protected\n  - override\n  modifiers.vb:\n  - Protected\n  - Overrides\n  nameWithType: SqlTransaction.Dispose(Boolean)\n- uid: System.Data.SqlClient.SqlTransaction.Rollback\n  commentId: M:System.Data.SqlClient.SqlTransaction.Rollback\n  id: Rollback\n  parent: System.Data.SqlClient.SqlTransaction\n  langs:\n  - csharp\n  - vb\n  name: Rollback()\n  fullName: System.Data.SqlClient.SqlTransaction.Rollback()\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlTransaction.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Rollback\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlTransaction.cs\n    startLine: 153\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Rolls back a transaction from a pending state.</p>\\n\"\n  syntax:\n    content: public override void Rollback()\n    content.vb: Public Overrides Sub Rollback\n  exceptions:\n  - type: System.Exception\n    commentId: T:System.Exception\n    description: \"\\n<p>An error occurred while trying to commit the transaction. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The transaction has already been committed or rolled back.</p>\\n<p>-or- </p>\\n<p>The connection is broken. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: SqlTransaction.Rollback()\n- uid: System.Data.SqlClient.SqlTransaction.Rollback(System.String)\n  commentId: M:System.Data.SqlClient.SqlTransaction.Rollback(System.String)\n  id: Rollback(System.String)\n  parent: System.Data.SqlClient.SqlTransaction\n  langs:\n  - csharp\n  - vb\n  name: Rollback(String)\n  fullName: System.Data.SqlClient.SqlTransaction.Rollback(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlTransaction.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Rollback\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlTransaction.cs\n    startLine: 182\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Rolls back a transaction from a pending state, and specifies the transaction or savepoint name.</p>\\n\"\n  syntax:\n    content: public void Rollback(string transactionName)\n    content.vb: Public Sub Rollback(transactionName As String)\n    parameters:\n    - id: transactionName\n      type: System.String\n      description: \"\\n<p>The name of the transaction to roll back, or the savepoint to which to roll back. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>No transaction name was specified. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The transaction has already been committed or rolled back.</p>\\n<p>-or- </p>\\n<p>The connection is broken. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlTransaction.Rollback(String)\n- uid: System.Data.SqlClient.SqlTransaction.Save(System.String)\n  commentId: M:System.Data.SqlClient.SqlTransaction.Save(System.String)\n  id: Save(System.String)\n  parent: System.Data.SqlClient.SqlTransaction\n  langs:\n  - csharp\n  - vb\n  name: Save(String)\n  fullName: System.Data.SqlClient.SqlTransaction.Save(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlTransaction.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Save\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlTransaction.cs\n    startLine: 203\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Creates a savepoint in the transaction that can be used to roll back a part of the transaction, and specifies the savepoint name.</p>\\n\"\n  syntax:\n    content: public void Save(string savePointName)\n    content.vb: Public Sub Save(savePointName As String)\n    parameters:\n    - id: savePointName\n      type: System.String\n      description: \"\\n<p>The name of the savepoint. </p>\\n\"\n  exceptions:\n  - type: System.Exception\n    commentId: T:System.Exception\n    description: \"\\n<p>An error occurred while trying to commit the transaction. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The transaction has already been committed or rolled back.</p>\\n<p>-or- </p>\\n<p>The connection is broken. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlTransaction.Save(String)\nreferences:\n- uid: System.Data.SqlClient\n  isExternal: false\n  name: System.Data.SqlClient\n  fullName: System.Data.SqlClient\n  nameWithType: System.Data.SqlClient\n  commentId: N:System.Data.SqlClient\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Data.SqlClient.SqlConnection\n  parent: System.Data.SqlClient\n  isExternal: false\n  name: SqlConnection\n  fullName: System.Data.SqlClient.SqlConnection\n  nameWithType: SqlConnection\n  commentId: T:System.Data.SqlClient.SqlConnection\n- uid: System.Data.Common.DbConnection\n  parent: System.Data.Common\n  isExternal: false\n  name: DbConnection\n  fullName: System.Data.Common.DbConnection\n  nameWithType: DbConnection\n  commentId: T:System.Data.Common.DbConnection\n- uid: System.Data.Common\n  isExternal: false\n  name: System.Data.Common\n  fullName: System.Data.Common\n  nameWithType: System.Data.Common\n  commentId: N:System.Data.Common\n- uid: System.Data.IsolationLevel\n  parent: System.Data\n  isExternal: false\n  name: IsolationLevel\n  fullName: System.Data.IsolationLevel\n  nameWithType: IsolationLevel\n  commentId: T:System.Data.IsolationLevel\n- uid: System.Data\n  isExternal: false\n  name: System.Data\n  fullName: System.Data\n  nameWithType: System.Data\n  commentId: N:System.Data\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  fullName: System.Exception\n  commentId: T:System.Exception\n  nameWithType: Exception\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  fullName: System.InvalidOperationException\n  nameWithType: InvalidOperationException\n  commentId: T:System.InvalidOperationException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n"}