{"nodes":[{"pos":[929,958],"content":"X509EnhancedKeyUsageExtension","needQuote":true,"nodes":[{"content":"X509EnhancedKeyUsageExtension","pos":[0,29]}]},{"pos":[2591,2622],"content":"X509EnhancedKeyUsageExtension()","needQuote":true,"nodes":[{"content":"X509EnhancedKeyUsageExtension()","pos":[0,31]}]},{"pos":[4170,4224],"content":"X509EnhancedKeyUsageExtension(AsnEncodedData, Boolean)","needQuote":true,"nodes":[{"content":"X509EnhancedKeyUsageExtension(AsnEncodedData, Boolean)","pos":[0,54]}]},{"content":"\\n&lt;p&gt;The encoded data to use to create the extension.&lt;/p&gt;\\n","pos":[5622,5681],"source":"\\n<p>The encoded data to use to create the extension.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the extension is critical; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[5749,5848],"source":"\\n<p>\\n<strong>true</strong> if the extension is critical; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[6507,6560],"content":"X509EnhancedKeyUsageExtension(OidCollection, Boolean)","needQuote":true,"nodes":[{"content":"X509EnhancedKeyUsageExtension(OidCollection, Boolean)","pos":[0,53]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the extension is critical; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[8123,8222],"source":"\\n<p>\\n<strong>true</strong> if the extension is critical; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[9067,9084],"content":"EnhancedKeyUsages","needQuote":true,"nodes":[{"content":"EnhancedKeyUsages","pos":[0,17]}]},{"pos":[10848,10872],"content":"CopyFrom(AsnEncodedData)","needQuote":true,"nodes":[{"content":"CopyFrom(AsnEncodedData)","pos":[0,24]}]},{"content":"\\n&lt;p&gt;The encoded data to use to create the extension.&lt;/p&gt;\\n","pos":[12111,12170],"source":"\\n<p>The encoded data to use to create the extension.</p>\\n"},{"pos":[12549,12594],"content":"System.Security.Cryptography.X509Certificates","needQuote":true,"nodes":[{"content":"System.Security.Cryptography.X509Certificates","pos":[0,45]}]},{"pos":[12842,12848],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13078,13091],"content":"X509Extension","needQuote":true,"nodes":[{"content":"X509Extension","pos":[0,13]}]},{"pos":[13443,13451],"content":"Critical","needQuote":true,"nodes":[{"content":"Critical","pos":[0,8]}]},{"pos":[13698,13704],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[13887,13901],"content":"AsnEncodedData","needQuote":true,"nodes":[{"content":"AsnEncodedData","pos":[0,14]}]},{"pos":[14115,14122],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[14268,14296],"content":"System.Security.Cryptography","needQuote":true,"nodes":[{"content":"System.Security.Cryptography","pos":[0,28]}]},{"pos":[14505,14518],"content":"OidCollection","needQuote":true,"nodes":[{"content":"OidCollection","pos":[0,13]}]},{"pos":[14880,14904],"content":"CopyFrom(AsnEncodedData)","needQuote":true,"nodes":[{"content":"CopyFrom(AsnEncodedData)","pos":[0,24]}]},{"pos":[15179,15187],"content":"CopyFrom","needQuote":true,"nodes":[{"content":"CopyFrom","pos":[0,8]}]},{"pos":[15281,15282],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15362,15376],"content":"AsnEncodedData","needQuote":true,"nodes":[{"content":"AsnEncodedData","pos":[0,14]}]},{"pos":[15466,15467],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15628,15636],"content":"CopyFrom","needQuote":true,"nodes":[{"content":"CopyFrom","pos":[0,8]}]},{"pos":[15730,15731],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15811,15825],"content":"AsnEncodedData","needQuote":true,"nodes":[{"content":"AsnEncodedData","pos":[0,14]}]},{"pos":[15915,15916],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16204,16226],"content":"CryptographicException","needQuote":true,"nodes":[{"content":"CryptographicException","pos":[0,22]}]}],"content":"items:\n- uid: System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension\n  commentId: T:System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension\n  id: X509EnhancedKeyUsageExtension\n  parent: System.Security.Cryptography.X509Certificates\n  children:\n  - System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension.#ctor\n  - System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension.#ctor(System.Security.Cryptography.AsnEncodedData,System.Boolean)\n  - System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension.#ctor(System.Security.Cryptography.OidCollection,System.Boolean)\n  - System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension.CopyFrom(System.Security.Cryptography.AsnEncodedData)\n  - System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension.EnhancedKeyUsages\n  langs:\n  - csharp\n  - vb\n  name: X509EnhancedKeyUsageExtension\n  fullName: System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension\n  type: Class\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: X509EnhancedKeyUsageExtension\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 315\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Defines the collection of object identifiers (OIDs) that indicates the applications that use the key. This class cannot be inherited.</p>\\n\"\n  syntax:\n    content: 'public sealed class X509EnhancedKeyUsageExtension : X509Extension'\n    content.vb: >-\n      Public NotInheritable Class X509EnhancedKeyUsageExtension\n          Inherits X509Extension\n  inheritance:\n  - System.Object\n  - System.Security.Cryptography.X509Certificates.X509Extension\n  inheritedMembers:\n  - System.Security.Cryptography.X509Certificates.X509Extension.Critical\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: X509EnhancedKeyUsageExtension\n- uid: System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension.#ctor\n  commentId: M:System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension\n  langs:\n  - csharp\n  - vb\n  name: X509EnhancedKeyUsageExtension()\n  fullName: System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension.X509EnhancedKeyUsageExtension()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 317\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public X509EnhancedKeyUsageExtension()\n    content.vb: Public Sub New\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: X509EnhancedKeyUsageExtension.X509EnhancedKeyUsageExtension()\n- uid: System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension.#ctor(System.Security.Cryptography.AsnEncodedData,System.Boolean)\n  commentId: M:System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension.#ctor(System.Security.Cryptography.AsnEncodedData,System.Boolean)\n  id: '#ctor(System.Security.Cryptography.AsnEncodedData,System.Boolean)'\n  parent: System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension\n  langs:\n  - csharp\n  - vb\n  name: X509EnhancedKeyUsageExtension(AsnEncodedData, Boolean)\n  fullName: System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension.X509EnhancedKeyUsageExtension(System.Security.Cryptography.AsnEncodedData, System.Boolean)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 318\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class using an <xref href=\\\"System.Security.Cryptography.AsnEncodedData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object and a value that identifies whether the extension is critical.</p>\\n\"\n  syntax:\n    content: public X509EnhancedKeyUsageExtension(AsnEncodedData encodedEnhancedKeyUsages, bool critical)\n    content.vb: Public Sub New(encodedEnhancedKeyUsages As AsnEncodedData, critical As Boolean)\n    parameters:\n    - id: encodedEnhancedKeyUsages\n      type: System.Security.Cryptography.AsnEncodedData\n      description: \"\\n<p>The encoded data to use to create the extension.</p>\\n\"\n    - id: critical\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the extension is critical; otherwise, <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: X509EnhancedKeyUsageExtension.X509EnhancedKeyUsageExtension(AsnEncodedData, Boolean)\n- uid: System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension.#ctor(System.Security.Cryptography.OidCollection,System.Boolean)\n  commentId: M:System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension.#ctor(System.Security.Cryptography.OidCollection,System.Boolean)\n  id: '#ctor(System.Security.Cryptography.OidCollection,System.Boolean)'\n  parent: System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension\n  langs:\n  - csharp\n  - vb\n  name: X509EnhancedKeyUsageExtension(OidCollection, Boolean)\n  fullName: System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension.X509EnhancedKeyUsageExtension(System.Security.Cryptography.OidCollection, System.Boolean)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 319\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class using an <xref href=\\\"System.Security.Cryptography.OidCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and a value that identifies whether the extension is critical. </p>\\n\"\n  syntax:\n    content: public X509EnhancedKeyUsageExtension(OidCollection enhancedKeyUsages, bool critical)\n    content.vb: Public Sub New(enhancedKeyUsages As OidCollection, critical As Boolean)\n    parameters:\n    - id: enhancedKeyUsages\n      type: System.Security.Cryptography.OidCollection\n      description: \"\\n<p>An <xref href=\\\"System.Security.Cryptography.OidCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> collection. </p>\\n\"\n    - id: critical\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the extension is critical; otherwise, <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: \"\\n<p>The specified <xref href=\\\"System.Security.Cryptography.OidCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>  contains one or more corrupt values.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: X509EnhancedKeyUsageExtension.X509EnhancedKeyUsageExtension(OidCollection, Boolean)\n- uid: System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension.EnhancedKeyUsages\n  commentId: P:System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension.EnhancedKeyUsages\n  id: EnhancedKeyUsages\n  parent: System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension\n  langs:\n  - csharp\n  - vb\n  name: EnhancedKeyUsages\n  fullName: System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension.EnhancedKeyUsages\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: EnhancedKeyUsages\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 320\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Gets the collection of object identifiers (OIDs) that indicate the applications that use the key.</p>\\n\"\n  syntax:\n    content: public OidCollection EnhancedKeyUsages { get; }\n    content.vb: Public ReadOnly Property EnhancedKeyUsages As OidCollection\n    parameters: []\n    return:\n      type: System.Security.Cryptography.OidCollection\n      description: \"\\n<p>An <xref href=\\\"System.Security.Cryptography.OidCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object indicating the applications that use the key.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: X509EnhancedKeyUsageExtension.EnhancedKeyUsages\n- uid: System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension.CopyFrom(System.Security.Cryptography.AsnEncodedData)\n  commentId: M:System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension.CopyFrom(System.Security.Cryptography.AsnEncodedData)\n  id: CopyFrom(System.Security.Cryptography.AsnEncodedData)\n  parent: System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension\n  langs:\n  - csharp\n  - vb\n  name: CopyFrom(AsnEncodedData)\n  fullName: System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension.CopyFrom(System.Security.Cryptography.AsnEncodedData)\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CopyFrom\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 321\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class using an <xref href=\\\"System.Security.Cryptography.AsnEncodedData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public override void CopyFrom(AsnEncodedData asnEncodedData)\n    content.vb: Public Overrides Sub CopyFrom(asnEncodedData As AsnEncodedData)\n    parameters:\n    - id: asnEncodedData\n      type: System.Security.Cryptography.AsnEncodedData\n      description: \"\\n<p>The encoded data to use to create the extension.</p>\\n\"\n  overridden: System.Security.Cryptography.X509Certificates.X509Extension.CopyFrom(System.Security.Cryptography.AsnEncodedData)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: X509EnhancedKeyUsageExtension.CopyFrom(AsnEncodedData)\nreferences:\n- uid: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: System.Security.Cryptography.X509Certificates\n  fullName: System.Security.Cryptography.X509Certificates\n  commentId: N:System.Security.Cryptography.X509Certificates\n  nameWithType: System.Security.Cryptography.X509Certificates\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Security.Cryptography.X509Certificates.X509Extension\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509Extension\n  fullName: System.Security.Cryptography.X509Certificates.X509Extension\n  commentId: T:System.Security.Cryptography.X509Certificates.X509Extension\n  nameWithType: X509Extension\n- uid: System.Security.Cryptography.X509Certificates.X509Extension.Critical\n  parent: System.Security.Cryptography.X509Certificates.X509Extension\n  isExternal: false\n  name: Critical\n  fullName: System.Security.Cryptography.X509Certificates.X509Extension.Critical\n  commentId: P:System.Security.Cryptography.X509Certificates.X509Extension.Critical\n  nameWithType: X509Extension.Critical\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Security.Cryptography.AsnEncodedData\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: AsnEncodedData\n  fullName: System.Security.Cryptography.AsnEncodedData\n  commentId: T:System.Security.Cryptography.AsnEncodedData\n  nameWithType: AsnEncodedData\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.Security.Cryptography\n  isExternal: false\n  name: System.Security.Cryptography\n  fullName: System.Security.Cryptography\n  commentId: N:System.Security.Cryptography\n  nameWithType: System.Security.Cryptography\n- uid: System.Security.Cryptography.OidCollection\n  isExternal: false\n  name: OidCollection\n  fullName: System.Security.Cryptography.OidCollection\n  commentId: T:System.Security.Cryptography.OidCollection\n  nameWithType: OidCollection\n- uid: System.Security.Cryptography.X509Certificates.X509Extension.CopyFrom(System.Security.Cryptography.AsnEncodedData)\n  parent: System.Security.Cryptography.X509Certificates.X509Extension\n  isExternal: true\n  name: CopyFrom(AsnEncodedData)\n  fullName: System.Security.Cryptography.X509Certificates.X509Extension.CopyFrom(System.Security.Cryptography.AsnEncodedData)\n  spec.csharp:\n  - uid: System.Security.Cryptography.X509Certificates.X509Extension.CopyFrom(System.Security.Cryptography.AsnEncodedData)\n    name: CopyFrom\n    fullName: System.Security.Cryptography.X509Certificates.X509Extension.CopyFrom\n  - name: (\n    fullName: (\n  - uid: System.Security.Cryptography.AsnEncodedData\n    name: AsnEncodedData\n    fullName: System.Security.Cryptography.AsnEncodedData\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.Cryptography.X509Certificates.X509Extension.CopyFrom(System.Security.Cryptography.AsnEncodedData)\n    name: CopyFrom\n    fullName: System.Security.Cryptography.X509Certificates.X509Extension.CopyFrom\n  - name: (\n    fullName: (\n  - uid: System.Security.Cryptography.AsnEncodedData\n    name: AsnEncodedData\n    fullName: System.Security.Cryptography.AsnEncodedData\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Extension.CopyFrom(System.Security.Cryptography.AsnEncodedData)\n  nameWithType: X509Extension.CopyFrom(AsnEncodedData)\n- uid: System.Security.Cryptography.CryptographicException\n  isExternal: false\n  name: CryptographicException\n  fullName: System.Security.Cryptography.CryptographicException\n  commentId: T:System.Security.Cryptography.CryptographicException\n  nameWithType: CryptographicException\n"}