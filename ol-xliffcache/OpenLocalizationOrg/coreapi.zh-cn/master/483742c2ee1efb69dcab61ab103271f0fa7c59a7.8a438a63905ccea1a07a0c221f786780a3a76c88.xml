{"nodes":[{"pos":[665,680],"content":"ZipArchiveEntry","needQuote":true,"nodes":[{"content":"ZipArchiveEntry","pos":[0,15]}]},{"pos":[1879,1886],"content":"Archive","needQuote":true,"nodes":[{"content":"Archive","pos":[0,7]}]},{"content":"\\n&lt;p&gt;The zip archive that the entry belongs to, or &lt;strong&gt;null&lt;/strong&gt; if the entry has been deleted.&lt;/p&gt;\\n","pos":[2584,2693],"source":"\\n<p>The zip archive that the entry belongs to, or <strong>null</strong> if the entry has been deleted.</p>\\n"},{"pos":[3052,3068],"content":"CompressedLength","needQuote":true,"nodes":[{"content":"CompressedLength","pos":[0,16]}]},{"content":"\\n&lt;p&gt;The compressed size of the entry in the zip archive.&lt;/p&gt;\\n","pos":[3780,3843],"source":"\\n<p>The compressed size of the entry in the zip archive.</p>\\n"},{"content":"\\n&lt;p&gt;The value of the property is not available because the entry has been modified.&lt;/p&gt;\\n","pos":[3970,4060],"source":"\\n<p>The value of the property is not available because the entry has been modified.</p>\\n"},{"pos":[4404,4412],"content":"FullName","needQuote":true,"nodes":[{"content":"FullName","pos":[0,8]}]},{"content":"\\n&lt;p&gt;The relative path of the entry in the zip archive.&lt;/p&gt;\\n","pos":[5095,5156],"source":"\\n<p>The relative path of the entry in the zip archive.</p>\\n"},{"pos":[5507,5520],"content":"LastWriteTime","needQuote":true,"nodes":[{"content":"LastWriteTime","pos":[0,13]}]},{"content":"\\n&lt;p&gt;The last time the entry in the zip archive was changed.&lt;/p&gt;\\n","pos":[6256,6322],"source":"\\n<p>The last time the entry in the zip archive was changed.</p>\\n"},{"content":"\\n&lt;p&gt;An attempt was made to set this property to a value that is either earlier than 1980 January 1 0:00:00 (midnight) or later than 2107 December 31 23:59:58 (one second before midnight).&lt;/p&gt;\\n","pos":[7179,7373],"source":"\\n<p>An attempt was made to set this property to a value that is either earlier than 1980 January 1 0:00:00 (midnight) or later than 2107 December 31 23:59:58 (one second before midnight).</p>\\n"},{"pos":[7703,7709],"content":"Length","needQuote":true,"nodes":[{"content":"Length","pos":[0,6]}]},{"content":"\\n&lt;p&gt;The uncompressed size of the entry in the zip archive.&lt;/p&gt;\\n","pos":[8383,8448],"source":"\\n<p>The uncompressed size of the entry in the zip archive.</p>\\n"},{"content":"\\n&lt;p&gt;The value of the property is not available because the entry has been modified.&lt;/p&gt;\\n","pos":[8575,8665],"source":"\\n<p>The value of the property is not available because the entry has been modified.</p>\\n"},{"pos":[8987,8991],"content":"Name","needQuote":true,"nodes":[{"content":"Name","pos":[0,4]}]},{"content":"\\n&lt;p&gt;The file name of the entry in the zip archive.&lt;/p&gt;\\n","pos":[9654,9711],"source":"\\n<p>The file name of the entry in the zip archive.</p>\\n"},{"pos":[10037,10045],"content":"Delete()","needQuote":true,"nodes":[{"content":"Delete()","pos":[0,8]}]},{"content":"\\n&lt;p&gt;The entry is already open for reading or writing.&lt;/p&gt;\\n","pos":[10697,10757],"source":"\\n<p>The entry is already open for reading or writing.</p>\\n"},{"content":"\\n&lt;p&gt;The zip archive for this entry has been disposed.&lt;/p&gt;\\n","pos":[11150,11210],"source":"\\n<p>The zip archive for this entry has been disposed.</p>\\n"},{"pos":[11513,11519],"content":"Open()","needQuote":true,"nodes":[{"content":"Open()","pos":[0,6]}]},{"content":"\\n&lt;p&gt;The stream that represents the contents of the entry.&lt;/p&gt;\\n","pos":[12136,12200],"source":"\\n<p>The stream that represents the contents of the entry.</p>\\n"},{"content":"\\n&lt;p&gt;The entry is either missing from the archive or is corrupt and cannot be read.","pos":[12762,12845],"source":"\\n<p>The entry is either missing from the archive or is corrupt and cannot be read."},{"content":"&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;The entry has been compressed by using a compression method that is not supported.&lt;/p&gt;\\n","pos":[12846,12956],"source":" </p>\\n<p>-or-</p>\\n<p>The entry has been compressed by using a compression method that is not supported.</p>\\n"},{"content":"\\n&lt;p&gt;The zip archive for this entry has been disposed.&lt;/p&gt;\\n","pos":[13065,13125],"source":"\\n<p>The zip archive for this entry has been disposed.</p>\\n"},{"pos":[13438,13448],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[14548,14569],"content":"System.IO.Compression","needQuote":true,"nodes":[{"content":"System.IO.Compression","pos":[0,21]}]},{"pos":[14745,14751],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14924,14938],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[15057,15063],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[15130,15131],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15181,15187],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15247,15248],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15331,15337],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[15404,15405],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15455,15461],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15521,15522],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15736,15758],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[15906,15912],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[15979,15980],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16030,16036],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[16097,16098]},{"pos":[16153,16159],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16219,16220],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16317,16323],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[16390,16391],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16441,16447],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[16508,16509]},{"pos":[16564,16570],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16630,16631],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16876,16907],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[17073,17088],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[17164,17165],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17215,17221],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[17282,17283]},{"pos":[17338,17344],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17404,17405],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17511,17526],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[17602,17603],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17653,17659],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[17720,17721]},{"pos":[17776,17782],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17842,17843],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18073,18086],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[18187,18198],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[18270,18271],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18298,18299],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18372,18383],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[18455,18456],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18483,18484],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18659,18668],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[18761,18768],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[18836,18837],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18864,18865],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18934,18941],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[19009,19010],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19037,19038],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19213,19230],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[19339,19354],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[19430,19431],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19458,19459],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19536,19551],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[19627,19628],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19655,19656],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19801,19807],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[19972,19982],"content":"ZipArchive","needQuote":true,"nodes":[{"content":"ZipArchive","pos":[0,10]}]},{"pos":[20168,20173],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[20315,20321],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[20474,20488],"content":"DateTimeOffset","needQuote":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[20663,20669],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[20799,20808],"content":"System.IO","needQuote":true,"nodes":[{"content":"System.IO","pos":[0,9]}]},{"pos":[20963,20973],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[21068,21076],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[21145,21146],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21173,21174],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21244,21252],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[21321,21322],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21349,21350],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21524,21549],"content":"InvalidOperationException","needQuote":true,"nodes":[{"content":"InvalidOperationException","pos":[0,25]}]},{"pos":[21766,21787],"content":"NotSupportedException","needQuote":true,"nodes":[{"content":"NotSupportedException","pos":[0,21]}]},{"pos":[21988,21999],"content":"IOException","needQuote":true,"nodes":[{"content":"IOException","pos":[0,11]}]},{"pos":[22169,22196],"content":"ArgumentOutOfRangeException","needQuote":true,"nodes":[{"content":"ArgumentOutOfRangeException","pos":[0,27]}]},{"pos":[22404,22427],"content":"ObjectDisposedException","needQuote":true,"nodes":[{"content":"ObjectDisposedException","pos":[0,23]}]},{"pos":[22623,22643],"content":"InvalidDataException","needQuote":true,"nodes":[{"content":"InvalidDataException","pos":[0,20]}]}],"content":"items:\n- uid: System.IO.Compression.ZipArchiveEntry\n  commentId: T:System.IO.Compression.ZipArchiveEntry\n  id: ZipArchiveEntry\n  parent: System.IO.Compression\n  children:\n  - System.IO.Compression.ZipArchiveEntry.Archive\n  - System.IO.Compression.ZipArchiveEntry.CompressedLength\n  - System.IO.Compression.ZipArchiveEntry.Delete\n  - System.IO.Compression.ZipArchiveEntry.FullName\n  - System.IO.Compression.ZipArchiveEntry.LastWriteTime\n  - System.IO.Compression.ZipArchiveEntry.Length\n  - System.IO.Compression.ZipArchiveEntry.Name\n  - System.IO.Compression.ZipArchiveEntry.Open\n  - System.IO.Compression.ZipArchiveEntry.ToString\n  langs:\n  - csharp\n  - vb\n  name: ZipArchiveEntry\n  fullName: System.IO.Compression.ZipArchiveEntry\n  type: Class\n  source:\n    remote:\n      path: src/System.IO.Compression/ref/System.IO.Compression.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ZipArchiveEntry\n    path: src/System.IO.Compression/ref/System.IO.Compression.cs\n    startLine: 77\n  assemblies:\n  - System.IO.Compression\n  namespace: System.IO.Compression\n  summary: \"\\n<p>Represents a compressed file within a zip archive.</p>\\n\"\n  syntax:\n    content: public class ZipArchiveEntry\n    content.vb: Public Class ZipArchiveEntry\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: ZipArchiveEntry\n- uid: System.IO.Compression.ZipArchiveEntry.Archive\n  commentId: P:System.IO.Compression.ZipArchiveEntry.Archive\n  id: Archive\n  parent: System.IO.Compression.ZipArchiveEntry\n  langs:\n  - csharp\n  - vb\n  name: Archive\n  fullName: System.IO.Compression.ZipArchiveEntry.Archive\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.Compression/ref/System.IO.Compression.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Archive\n    path: src/System.IO.Compression/ref/System.IO.Compression.cs\n    startLine: 80\n  assemblies:\n  - System.IO.Compression\n  namespace: System.IO.Compression\n  summary: \"\\n<p>Gets the zip archive that the entry belongs to.</p>\\n\"\n  syntax:\n    content: public ZipArchive Archive { get; }\n    content.vb: Public ReadOnly Property Archive As ZipArchive\n    parameters: []\n    return:\n      type: System.IO.Compression.ZipArchive\n      description: \"\\n<p>The zip archive that the entry belongs to, or <strong>null</strong> if the entry has been deleted.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: ZipArchiveEntry.Archive\n- uid: System.IO.Compression.ZipArchiveEntry.CompressedLength\n  commentId: P:System.IO.Compression.ZipArchiveEntry.CompressedLength\n  id: CompressedLength\n  parent: System.IO.Compression.ZipArchiveEntry\n  langs:\n  - csharp\n  - vb\n  name: CompressedLength\n  fullName: System.IO.Compression.ZipArchiveEntry.CompressedLength\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.Compression/ref/System.IO.Compression.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CompressedLength\n    path: src/System.IO.Compression/ref/System.IO.Compression.cs\n    startLine: 81\n  assemblies:\n  - System.IO.Compression\n  namespace: System.IO.Compression\n  summary: \"\\n<p>Gets the compressed size of the entry in the zip archive.</p>\\n\"\n  syntax:\n    content: public long CompressedLength { get; }\n    content.vb: Public ReadOnly Property CompressedLength As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>The compressed size of the entry in the zip archive.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The value of the property is not available because the entry has been modified.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: ZipArchiveEntry.CompressedLength\n- uid: System.IO.Compression.ZipArchiveEntry.FullName\n  commentId: P:System.IO.Compression.ZipArchiveEntry.FullName\n  id: FullName\n  parent: System.IO.Compression.ZipArchiveEntry\n  langs:\n  - csharp\n  - vb\n  name: FullName\n  fullName: System.IO.Compression.ZipArchiveEntry.FullName\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.Compression/ref/System.IO.Compression.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: FullName\n    path: src/System.IO.Compression/ref/System.IO.Compression.cs\n    startLine: 82\n  assemblies:\n  - System.IO.Compression\n  namespace: System.IO.Compression\n  summary: \"\\n<p>Gets the relative path of the entry in the zip archive.</p>\\n\"\n  syntax:\n    content: public string FullName { get; }\n    content.vb: Public ReadOnly Property FullName As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The relative path of the entry in the zip archive.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: ZipArchiveEntry.FullName\n- uid: System.IO.Compression.ZipArchiveEntry.LastWriteTime\n  commentId: P:System.IO.Compression.ZipArchiveEntry.LastWriteTime\n  id: LastWriteTime\n  parent: System.IO.Compression.ZipArchiveEntry\n  langs:\n  - csharp\n  - vb\n  name: LastWriteTime\n  fullName: System.IO.Compression.ZipArchiveEntry.LastWriteTime\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.Compression/ref/System.IO.Compression.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: LastWriteTime\n    path: src/System.IO.Compression/ref/System.IO.Compression.cs\n    startLine: 83\n  assemblies:\n  - System.IO.Compression\n  namespace: System.IO.Compression\n  summary: \"\\n<p>Gets or sets the last time the entry in the zip archive was changed.</p>\\n\"\n  syntax:\n    content: public DateTimeOffset LastWriteTime { get; set; }\n    content.vb: Public Property LastWriteTime As DateTimeOffset\n    parameters: []\n    return:\n      type: System.DateTimeOffset\n      description: \"\\n<p>The last time the entry in the zip archive was changed.</p>\\n\"\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The attempt to set this property failed, because the zip archive for the entry is in <xref href=\\\"System.IO.Compression.ZipArchiveMode.Read\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> mode.</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>The archive mode is set to <xref href=\\\"System.IO.Compression.ZipArchiveMode.Create\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>- or -</p>\\n<p>The archive mode is set to <xref href=\\\"System.IO.Compression.ZipArchiveMode.Update\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and the entry has been opened.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>An attempt was made to set this property to a value that is either earlier than 1980 January 1 0:00:00 (midnight) or later than 2107 December 31 23:59:58 (one second before midnight).</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: ZipArchiveEntry.LastWriteTime\n- uid: System.IO.Compression.ZipArchiveEntry.Length\n  commentId: P:System.IO.Compression.ZipArchiveEntry.Length\n  id: Length\n  parent: System.IO.Compression.ZipArchiveEntry\n  langs:\n  - csharp\n  - vb\n  name: Length\n  fullName: System.IO.Compression.ZipArchiveEntry.Length\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.Compression/ref/System.IO.Compression.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Length\n    path: src/System.IO.Compression/ref/System.IO.Compression.cs\n    startLine: 84\n  assemblies:\n  - System.IO.Compression\n  namespace: System.IO.Compression\n  summary: \"\\n<p>Gets the uncompressed size of the entry in the zip archive.</p>\\n\"\n  syntax:\n    content: public long Length { get; }\n    content.vb: Public ReadOnly Property Length As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>The uncompressed size of the entry in the zip archive.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The value of the property is not available because the entry has been modified.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: ZipArchiveEntry.Length\n- uid: System.IO.Compression.ZipArchiveEntry.Name\n  commentId: P:System.IO.Compression.ZipArchiveEntry.Name\n  id: Name\n  parent: System.IO.Compression.ZipArchiveEntry\n  langs:\n  - csharp\n  - vb\n  name: Name\n  fullName: System.IO.Compression.ZipArchiveEntry.Name\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.Compression/ref/System.IO.Compression.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Name\n    path: src/System.IO.Compression/ref/System.IO.Compression.cs\n    startLine: 85\n  assemblies:\n  - System.IO.Compression\n  namespace: System.IO.Compression\n  summary: \"\\n<p>Gets the file name of the entry in the zip archive.</p>\\n\"\n  syntax:\n    content: public string Name { get; }\n    content.vb: Public ReadOnly Property Name As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The file name of the entry in the zip archive.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: ZipArchiveEntry.Name\n- uid: System.IO.Compression.ZipArchiveEntry.Delete\n  commentId: M:System.IO.Compression.ZipArchiveEntry.Delete\n  id: Delete\n  parent: System.IO.Compression.ZipArchiveEntry\n  langs:\n  - csharp\n  - vb\n  name: Delete()\n  fullName: System.IO.Compression.ZipArchiveEntry.Delete()\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Compression/ref/System.IO.Compression.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Delete\n    path: src/System.IO.Compression/ref/System.IO.Compression.cs\n    startLine: 86\n  assemblies:\n  - System.IO.Compression\n  namespace: System.IO.Compression\n  summary: \"\\n<p>Deletes the entry from the zip archive.</p>\\n\"\n  syntax:\n    content: public void Delete()\n    content.vb: Public Sub Delete\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>The entry is already open for reading or writing.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The zip archive for this entry was opened in a mode other than <xref href=\\\"System.IO.Compression.ZipArchiveMode.Update\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The zip archive for this entry has been disposed.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: ZipArchiveEntry.Delete()\n- uid: System.IO.Compression.ZipArchiveEntry.Open\n  commentId: M:System.IO.Compression.ZipArchiveEntry.Open\n  id: Open\n  parent: System.IO.Compression.ZipArchiveEntry\n  langs:\n  - csharp\n  - vb\n  name: Open()\n  fullName: System.IO.Compression.ZipArchiveEntry.Open()\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Compression/ref/System.IO.Compression.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Open\n    path: src/System.IO.Compression/ref/System.IO.Compression.cs\n    startLine: 87\n  assemblies:\n  - System.IO.Compression\n  namespace: System.IO.Compression\n  summary: \"\\n<p>Opens the entry from the zip archive.</p>\\n\"\n  syntax:\n    content: public Stream Open()\n    content.vb: Public Function Open As Stream\n    return:\n      type: System.IO.Stream\n      description: \"\\n<p>The stream that represents the contents of the entry.</p>\\n\"\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>The entry is already currently open for writing.</p>\\n<p>-or-</p>\\n<p>The entry has been deleted from the archive.</p>\\n<p>-or-</p>\\n<p>The archive for this entry was opened with the <xref href=\\\"System.IO.Compression.ZipArchiveMode.Create\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> mode, and this entry has already been written to. </p>\\n\"\n  - type: System.IO.InvalidDataException\n    commentId: T:System.IO.InvalidDataException\n    description: \"\\n<p>The entry is either missing from the archive or is corrupt and cannot be read. </p>\\n<p>-or-</p>\\n<p>The entry has been compressed by using a compression method that is not supported.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The zip archive for this entry has been disposed.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: ZipArchiveEntry.Open()\n- uid: System.IO.Compression.ZipArchiveEntry.ToString\n  commentId: M:System.IO.Compression.ZipArchiveEntry.ToString\n  id: ToString\n  parent: System.IO.Compression.ZipArchiveEntry\n  langs:\n  - csharp\n  - vb\n  name: ToString()\n  fullName: System.IO.Compression.ZipArchiveEntry.ToString()\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Compression/ref/System.IO.Compression.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ToString\n    path: src/System.IO.Compression/ref/System.IO.Compression.cs\n    startLine: 88\n  assemblies:\n  - System.IO.Compression\n  namespace: System.IO.Compression\n  summary: \"\\n<p>Retrieves the relative path of the entry in the zip archive.</p>\\n\"\n  syntax:\n    content: public override string ToString()\n    content.vb: Public Overrides Function ToString As String\n    return:\n      type: System.String\n      description: \"\\n<p>The relative path of the entry, which is the value stored in the <xref href=\\\"System.IO.Compression.ZipArchiveEntry.FullName\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property.</p>\\n\"\n  overridden: System.Object.ToString\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: ZipArchiveEntry.ToString()\nreferences:\n- uid: System.IO.Compression\n  isExternal: false\n  name: System.IO.Compression\n  fullName: System.IO.Compression\n  commentId: N:System.IO.Compression\n  nameWithType: System.IO.Compression\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.IO.Compression.ZipArchive\n  parent: System.IO.Compression\n  isExternal: false\n  name: ZipArchive\n  fullName: System.IO.Compression.ZipArchive\n  commentId: T:System.IO.Compression.ZipArchive\n  nameWithType: ZipArchive\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  fullName: System.Int64\n  commentId: T:System.Int64\n  nameWithType: Int64\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.DateTimeOffset\n  parent: System\n  isExternal: false\n  name: DateTimeOffset\n  fullName: System.DateTimeOffset\n  commentId: T:System.DateTimeOffset\n  nameWithType: DateTimeOffset\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  fullName: System.IO.Stream\n  commentId: T:System.IO.Stream\n  nameWithType: Stream\n- uid: System.IO\n  isExternal: false\n  name: System.IO\n  fullName: System.IO\n  commentId: N:System.IO\n  nameWithType: System.IO\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  fullName: System.InvalidOperationException\n  nameWithType: InvalidOperationException\n  commentId: T:System.InvalidOperationException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  fullName: System.NotSupportedException\n  nameWithType: NotSupportedException\n  commentId: T:System.NotSupportedException\n- uid: System.IO.IOException\n  parent: System.IO\n  isExternal: false\n  name: IOException\n  fullName: System.IO.IOException\n  nameWithType: IOException\n  commentId: T:System.IO.IOException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  commentId: T:System.ArgumentOutOfRangeException\n- uid: System.ObjectDisposedException\n  isExternal: false\n  name: ObjectDisposedException\n  fullName: System.ObjectDisposedException\n  nameWithType: ObjectDisposedException\n  commentId: T:System.ObjectDisposedException\n- uid: System.IO.InvalidDataException\n  isExternal: false\n  name: InvalidDataException\n  fullName: System.IO.InvalidDataException\n  nameWithType: InvalidDataException\n  commentId: T:System.IO.InvalidDataException\n"}