{"nodes":[{"pos":[878,899],"content":"X509KeyUsageExtension","needQuote":true,"nodes":[{"content":"X509KeyUsageExtension","pos":[0,21]}]},{"pos":[2433,2456],"content":"X509KeyUsageExtension()","needQuote":true,"nodes":[{"content":"X509KeyUsageExtension()","pos":[0,23]}]},{"pos":[3932,3978],"content":"X509KeyUsageExtension(AsnEncodedData, Boolean)","needQuote":true,"nodes":[{"content":"X509KeyUsageExtension(AsnEncodedData, Boolean)","pos":[0,46]}]},{"content":"\\n&lt;p&gt;The encoded data to use to create the extension.&lt;/p&gt;\\n","pos":[5318,5377],"source":"\\n<p>The encoded data to use to create the extension.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the extension is critical; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[5445,5544],"source":"\\n<p>\\n<strong>true</strong> if the extension is critical; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[6226,6275],"content":"X509KeyUsageExtension(X509KeyUsageFlags, Boolean)","needQuote":true,"nodes":[{"content":"X509KeyUsageExtension(X509KeyUsageFlags, Boolean)","pos":[0,49]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the extension is critical; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[7928,8027],"source":"\\n<p>\\n<strong>true</strong> if the extension is critical; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[8482,8491],"content":"KeyUsages","needQuote":true,"nodes":[{"content":"KeyUsages","pos":[0,9]}]},{"content":"\\n&lt;p&gt;The extension cannot be decoded.","pos":[9758,9795],"source":"\\n<p>The extension cannot be decoded."},{"content":"&lt;/p&gt;\\n","pos":[9796,9802],"source":" </p>\\n"},{"pos":[10370,10394],"content":"CopyFrom(AsnEncodedData)","needQuote":true,"nodes":[{"content":"CopyFrom(AsnEncodedData)","pos":[0,24]}]},{"content":"\\n&lt;p&gt;The encoded data to use to create the extension.&lt;/p&gt;\\n","pos":[11618,11677],"source":"\\n<p>The encoded data to use to create the extension.</p>\\n"},{"pos":[12048,12093],"content":"System.Security.Cryptography.X509Certificates","needQuote":true,"nodes":[{"content":"System.Security.Cryptography.X509Certificates","pos":[0,45]}]},{"pos":[12341,12347],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12577,12590],"content":"X509Extension","needQuote":true,"nodes":[{"content":"X509Extension","pos":[0,13]}]},{"pos":[12942,12950],"content":"Critical","needQuote":true,"nodes":[{"content":"Critical","pos":[0,8]}]},{"pos":[13197,13203],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[13386,13400],"content":"AsnEncodedData","needQuote":true,"nodes":[{"content":"AsnEncodedData","pos":[0,14]}]},{"pos":[13614,13621],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[13767,13795],"content":"System.Security.Cryptography","needQuote":true,"nodes":[{"content":"System.Security.Cryptography","pos":[0,28]}]},{"pos":[14081,14098],"content":"X509KeyUsageFlags","needQuote":true,"nodes":[{"content":"X509KeyUsageFlags","pos":[0,17]}]},{"pos":[14506,14530],"content":"CopyFrom(AsnEncodedData)","needQuote":true,"nodes":[{"content":"CopyFrom(AsnEncodedData)","pos":[0,24]}]},{"pos":[14805,14813],"content":"CopyFrom","needQuote":true,"nodes":[{"content":"CopyFrom","pos":[0,8]}]},{"pos":[14907,14908],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14988,15002],"content":"AsnEncodedData","needQuote":true,"nodes":[{"content":"AsnEncodedData","pos":[0,14]}]},{"pos":[15092,15093],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15254,15262],"content":"CopyFrom","needQuote":true,"nodes":[{"content":"CopyFrom","pos":[0,8]}]},{"pos":[15356,15357],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15437,15451],"content":"AsnEncodedData","needQuote":true,"nodes":[{"content":"AsnEncodedData","pos":[0,14]}]},{"pos":[15541,15542],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15830,15852],"content":"CryptographicException","needQuote":true,"nodes":[{"content":"CryptographicException","pos":[0,22]}]}],"content":"items:\n- uid: System.Security.Cryptography.X509Certificates.X509KeyUsageExtension\n  commentId: T:System.Security.Cryptography.X509Certificates.X509KeyUsageExtension\n  id: X509KeyUsageExtension\n  parent: System.Security.Cryptography.X509Certificates\n  children:\n  - System.Security.Cryptography.X509Certificates.X509KeyUsageExtension.#ctor\n  - System.Security.Cryptography.X509Certificates.X509KeyUsageExtension.#ctor(System.Security.Cryptography.AsnEncodedData,System.Boolean)\n  - System.Security.Cryptography.X509Certificates.X509KeyUsageExtension.#ctor(System.Security.Cryptography.X509Certificates.X509KeyUsageFlags,System.Boolean)\n  - System.Security.Cryptography.X509Certificates.X509KeyUsageExtension.CopyFrom(System.Security.Cryptography.AsnEncodedData)\n  - System.Security.Cryptography.X509Certificates.X509KeyUsageExtension.KeyUsages\n  langs:\n  - csharp\n  - vb\n  name: X509KeyUsageExtension\n  fullName: System.Security.Cryptography.X509Certificates.X509KeyUsageExtension\n  type: Class\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: X509KeyUsageExtension\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 382\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Defines the usage of a key contained within an X.509 certificate.  This class cannot be inherited.</p>\\n\"\n  syntax:\n    content: 'public sealed class X509KeyUsageExtension : X509Extension'\n    content.vb: >-\n      Public NotInheritable Class X509KeyUsageExtension\n          Inherits X509Extension\n  inheritance:\n  - System.Object\n  - System.Security.Cryptography.X509Certificates.X509Extension\n  inheritedMembers:\n  - System.Security.Cryptography.X509Certificates.X509Extension.Critical\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: X509KeyUsageExtension\n- uid: System.Security.Cryptography.X509Certificates.X509KeyUsageExtension.#ctor\n  commentId: M:System.Security.Cryptography.X509Certificates.X509KeyUsageExtension.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.X509Certificates.X509KeyUsageExtension\n  langs:\n  - csharp\n  - vb\n  name: X509KeyUsageExtension()\n  fullName: System.Security.Cryptography.X509Certificates.X509KeyUsageExtension.X509KeyUsageExtension()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 384\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.Cryptography.X509Certificates.X509KeyUsageExtension\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public X509KeyUsageExtension()\n    content.vb: Public Sub New\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: X509KeyUsageExtension.X509KeyUsageExtension()\n- uid: System.Security.Cryptography.X509Certificates.X509KeyUsageExtension.#ctor(System.Security.Cryptography.AsnEncodedData,System.Boolean)\n  commentId: M:System.Security.Cryptography.X509Certificates.X509KeyUsageExtension.#ctor(System.Security.Cryptography.AsnEncodedData,System.Boolean)\n  id: '#ctor(System.Security.Cryptography.AsnEncodedData,System.Boolean)'\n  parent: System.Security.Cryptography.X509Certificates.X509KeyUsageExtension\n  langs:\n  - csharp\n  - vb\n  name: X509KeyUsageExtension(AsnEncodedData, Boolean)\n  fullName: System.Security.Cryptography.X509Certificates.X509KeyUsageExtension.X509KeyUsageExtension(System.Security.Cryptography.AsnEncodedData, System.Boolean)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 385\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.Cryptography.X509Certificates.X509KeyUsageExtension\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class using an <xref href=\\\"System.Security.Cryptography.AsnEncodedData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object and a value that identifies whether the extension is critical. </p>\\n\"\n  syntax:\n    content: public X509KeyUsageExtension(AsnEncodedData encodedKeyUsage, bool critical)\n    content.vb: Public Sub New(encodedKeyUsage As AsnEncodedData, critical As Boolean)\n    parameters:\n    - id: encodedKeyUsage\n      type: System.Security.Cryptography.AsnEncodedData\n      description: \"\\n<p>The encoded data to use to create the extension.</p>\\n\"\n    - id: critical\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the extension is critical; otherwise, <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: X509KeyUsageExtension.X509KeyUsageExtension(AsnEncodedData, Boolean)\n- uid: System.Security.Cryptography.X509Certificates.X509KeyUsageExtension.#ctor(System.Security.Cryptography.X509Certificates.X509KeyUsageFlags,System.Boolean)\n  commentId: M:System.Security.Cryptography.X509Certificates.X509KeyUsageExtension.#ctor(System.Security.Cryptography.X509Certificates.X509KeyUsageFlags,System.Boolean)\n  id: '#ctor(System.Security.Cryptography.X509Certificates.X509KeyUsageFlags,System.Boolean)'\n  parent: System.Security.Cryptography.X509Certificates.X509KeyUsageExtension\n  langs:\n  - csharp\n  - vb\n  name: X509KeyUsageExtension(X509KeyUsageFlags, Boolean)\n  fullName: System.Security.Cryptography.X509Certificates.X509KeyUsageExtension.X509KeyUsageExtension(System.Security.Cryptography.X509Certificates.X509KeyUsageFlags, System.Boolean)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 386\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.Cryptography.X509Certificates.X509KeyUsageExtension\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class using the specified <xref href=\\\"System.Security.Cryptography.X509Certificates.X509KeyUsageFlags\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value and a value that identifies whether the extension is critical. </p>\\n\"\n  syntax:\n    content: public X509KeyUsageExtension(X509KeyUsageFlags keyUsages, bool critical)\n    content.vb: Public Sub New(keyUsages As X509KeyUsageFlags, critical As Boolean)\n    parameters:\n    - id: keyUsages\n      type: System.Security.Cryptography.X509Certificates.X509KeyUsageFlags\n      description: \"\\n<p>One of the <xref href=\\\"System.Security.Cryptography.X509Certificates.X509KeyUsageFlags\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values that describes how to use the key.</p>\\n\"\n    - id: critical\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the extension is critical; otherwise, <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: X509KeyUsageExtension.X509KeyUsageExtension(X509KeyUsageFlags, Boolean)\n- uid: System.Security.Cryptography.X509Certificates.X509KeyUsageExtension.KeyUsages\n  commentId: P:System.Security.Cryptography.X509Certificates.X509KeyUsageExtension.KeyUsages\n  id: KeyUsages\n  parent: System.Security.Cryptography.X509Certificates.X509KeyUsageExtension\n  langs:\n  - csharp\n  - vb\n  name: KeyUsages\n  fullName: System.Security.Cryptography.X509Certificates.X509KeyUsageExtension.KeyUsages\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: KeyUsages\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 387\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Gets the key usage flag associated with the certificate.</p>\\n\"\n  syntax:\n    content: public X509KeyUsageFlags KeyUsages { get; }\n    content.vb: Public ReadOnly Property KeyUsages As X509KeyUsageFlags\n    parameters: []\n    return:\n      type: System.Security.Cryptography.X509Certificates.X509KeyUsageFlags\n      description: \"\\n<p>One of the <xref href=\\\"System.Security.Cryptography.X509Certificates.X509KeyUsageExtension.KeyUsages\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values.</p>\\n\"\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: \"\\n<p>The extension cannot be decoded. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: X509KeyUsageExtension.KeyUsages\n- uid: System.Security.Cryptography.X509Certificates.X509KeyUsageExtension.CopyFrom(System.Security.Cryptography.AsnEncodedData)\n  commentId: M:System.Security.Cryptography.X509Certificates.X509KeyUsageExtension.CopyFrom(System.Security.Cryptography.AsnEncodedData)\n  id: CopyFrom(System.Security.Cryptography.AsnEncodedData)\n  parent: System.Security.Cryptography.X509Certificates.X509KeyUsageExtension\n  langs:\n  - csharp\n  - vb\n  name: CopyFrom(AsnEncodedData)\n  fullName: System.Security.Cryptography.X509Certificates.X509KeyUsageExtension.CopyFrom(System.Security.Cryptography.AsnEncodedData)\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CopyFrom\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 388\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.Cryptography.X509Certificates.X509KeyUsageExtension\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class using an <xref href=\\\"System.Security.Cryptography.AsnEncodedData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object. </p>\\n\"\n  syntax:\n    content: public override void CopyFrom(AsnEncodedData asnEncodedData)\n    content.vb: Public Overrides Sub CopyFrom(asnEncodedData As AsnEncodedData)\n    parameters:\n    - id: asnEncodedData\n      type: System.Security.Cryptography.AsnEncodedData\n      description: \"\\n<p>The encoded data to use to create the extension.</p>\\n\"\n  overridden: System.Security.Cryptography.X509Certificates.X509Extension.CopyFrom(System.Security.Cryptography.AsnEncodedData)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: X509KeyUsageExtension.CopyFrom(AsnEncodedData)\nreferences:\n- uid: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: System.Security.Cryptography.X509Certificates\n  fullName: System.Security.Cryptography.X509Certificates\n  commentId: N:System.Security.Cryptography.X509Certificates\n  nameWithType: System.Security.Cryptography.X509Certificates\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Security.Cryptography.X509Certificates.X509Extension\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509Extension\n  fullName: System.Security.Cryptography.X509Certificates.X509Extension\n  commentId: T:System.Security.Cryptography.X509Certificates.X509Extension\n  nameWithType: X509Extension\n- uid: System.Security.Cryptography.X509Certificates.X509Extension.Critical\n  parent: System.Security.Cryptography.X509Certificates.X509Extension\n  isExternal: false\n  name: Critical\n  fullName: System.Security.Cryptography.X509Certificates.X509Extension.Critical\n  commentId: P:System.Security.Cryptography.X509Certificates.X509Extension.Critical\n  nameWithType: X509Extension.Critical\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Security.Cryptography.AsnEncodedData\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: AsnEncodedData\n  fullName: System.Security.Cryptography.AsnEncodedData\n  commentId: T:System.Security.Cryptography.AsnEncodedData\n  nameWithType: AsnEncodedData\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.Security.Cryptography\n  isExternal: false\n  name: System.Security.Cryptography\n  fullName: System.Security.Cryptography\n  commentId: N:System.Security.Cryptography\n  nameWithType: System.Security.Cryptography\n- uid: System.Security.Cryptography.X509Certificates.X509KeyUsageFlags\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509KeyUsageFlags\n  fullName: System.Security.Cryptography.X509Certificates.X509KeyUsageFlags\n  commentId: T:System.Security.Cryptography.X509Certificates.X509KeyUsageFlags\n  nameWithType: X509KeyUsageFlags\n- uid: System.Security.Cryptography.X509Certificates.X509Extension.CopyFrom(System.Security.Cryptography.AsnEncodedData)\n  parent: System.Security.Cryptography.X509Certificates.X509Extension\n  isExternal: true\n  name: CopyFrom(AsnEncodedData)\n  fullName: System.Security.Cryptography.X509Certificates.X509Extension.CopyFrom(System.Security.Cryptography.AsnEncodedData)\n  spec.csharp:\n  - uid: System.Security.Cryptography.X509Certificates.X509Extension.CopyFrom(System.Security.Cryptography.AsnEncodedData)\n    name: CopyFrom\n    fullName: System.Security.Cryptography.X509Certificates.X509Extension.CopyFrom\n  - name: (\n    fullName: (\n  - uid: System.Security.Cryptography.AsnEncodedData\n    name: AsnEncodedData\n    fullName: System.Security.Cryptography.AsnEncodedData\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.Cryptography.X509Certificates.X509Extension.CopyFrom(System.Security.Cryptography.AsnEncodedData)\n    name: CopyFrom\n    fullName: System.Security.Cryptography.X509Certificates.X509Extension.CopyFrom\n  - name: (\n    fullName: (\n  - uid: System.Security.Cryptography.AsnEncodedData\n    name: AsnEncodedData\n    fullName: System.Security.Cryptography.AsnEncodedData\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Extension.CopyFrom(System.Security.Cryptography.AsnEncodedData)\n  nameWithType: X509Extension.CopyFrom(AsnEncodedData)\n- uid: System.Security.Cryptography.CryptographicException\n  isExternal: false\n  name: CryptographicException\n  fullName: System.Security.Cryptography.CryptographicException\n  commentId: T:System.Security.Cryptography.CryptographicException\n  nameWithType: CryptographicException\n"}