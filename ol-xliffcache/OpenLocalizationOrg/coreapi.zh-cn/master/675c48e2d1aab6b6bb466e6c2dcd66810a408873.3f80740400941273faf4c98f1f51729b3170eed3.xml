{"nodes":[{"pos":[639,666],"content":"ArgumentOutOfRangeException","needQuote":true,"nodes":[{"content":"ArgumentOutOfRangeException","pos":[0,27]}]},{"pos":[2614,2643],"content":"ArgumentOutOfRangeException()","needQuote":true,"nodes":[{"content":"ArgumentOutOfRangeException()","pos":[0,29]}]},{"pos":[3677,3712],"content":"ArgumentOutOfRangeException(String)","needQuote":true,"nodes":[{"content":"ArgumentOutOfRangeException(String)","pos":[0,35]}]},{"content":"\\n&lt;p&gt;The name of the parameter that causes this exception.","pos":[4561,4619],"source":"\\n<p>The name of the parameter that causes this exception."},{"content":"&lt;/p&gt;\\n","pos":[4620,4626],"source":" </p>\\n"},{"pos":[5060,5106],"content":"ArgumentOutOfRangeException(String, Exception)","needQuote":true,"nodes":[{"content":"ArgumentOutOfRangeException(String, Exception)","pos":[0,46]}]},{"content":"\\n&lt;p&gt;The error message that explains the reason for this exception.","pos":[6049,6116],"source":"\\n<p>The error message that explains the reason for this exception."},{"content":"&lt;/p&gt;\\n","pos":[6117,6123],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The exception that is the cause of the current exception, or a null reference (&lt;strong&gt;Nothing&lt;/strong&gt; in Visual Basic) if no inner exception is specified.","pos":[6199,6360],"source":"\\n<p>The exception that is the cause of the current exception, or a null reference (<strong>Nothing</strong> in Visual Basic) if no inner exception is specified."},{"content":"&lt;/p&gt;\\n","pos":[6361,6367],"source":" </p>\\n"},{"pos":[6845,6896],"content":"ArgumentOutOfRangeException(String, Object, String)","needQuote":true,"nodes":[{"content":"ArgumentOutOfRangeException(String, Object, String)","pos":[0,51]}]},{"content":"\\n&lt;p&gt;The name of the parameter that caused the exception.","pos":[7877,7934],"source":"\\n<p>The name of the parameter that caused the exception."},{"content":"&lt;/p&gt;\\n","pos":[7935,7941],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The value of the argument that causes this exception.","pos":[8011,8069],"source":"\\n<p>The value of the argument that causes this exception."},{"content":"&lt;/p&gt;\\n","pos":[8070,8076],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The message that describes the error.","pos":[8142,8184],"source":"\\n<p>The message that describes the error."},{"content":"&lt;/p&gt;\\n","pos":[8185,8191],"source":" </p>\\n"},{"pos":[8632,8675],"content":"ArgumentOutOfRangeException(String, String)","needQuote":true,"nodes":[{"content":"ArgumentOutOfRangeException(String, String)","pos":[0,43]}]},{"content":"\\n&lt;p&gt;The name of the parameter that caused the exception.","pos":[9604,9661],"source":"\\n<p>The name of the parameter that caused the exception."},{"content":"&lt;/p&gt;\\n","pos":[9662,9668],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The message that describes the error.","pos":[9734,9776],"source":"\\n<p>The message that describes the error."},{"content":"&lt;/p&gt;\\n","pos":[9777,9783],"source":" </p>\\n"},{"pos":[10145,10156],"content":"ActualValue","needQuote":true,"nodes":[{"content":"ActualValue","pos":[0,11]}]},{"pos":[11390,11397],"content":"Message","needQuote":true,"nodes":[{"content":"Message","pos":[0,7]}]},{"content":"\\n&lt;p&gt;The text message for this exception.","pos":[12156,12197],"source":"\\n<p>The text message for this exception."},{"content":"The value of this property takes one of two forms, as follows.&lt;/p&gt;\\n&lt;p&gt;Condition &lt;/p&gt;\\n&lt;p&gt;Value &lt;/p&gt;\\n&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;\\n&lt;p&gt;The &lt;em&gt;actualValue&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[12198,12377],"source":" The value of this property takes one of two forms, as follows.</p>\\n<p>Condition </p>\\n<p>Value </p>\\n<table><tbody><tr><td>\\n<p>The <em>actualValue</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n&lt;/td&gt;&lt;td&gt;\\n&lt;p&gt;The &lt;em&gt;message&lt;/em&gt; string passed to the constructor.","pos":[12378,12452],"source":" </p>\\n</td><td>\\n<p>The <em>message</em> string passed to the constructor."},{"content":"&lt;/p&gt;\\n&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;\\n&lt;p&gt;The &lt;em&gt;actualValue&lt;/em&gt; is not &lt;strong&gt;null&lt;/strong&gt;.","pos":[12453,12536],"source":" </p>\\n</td></tr><tr><td>\\n<p>The <em>actualValue</em> is not <strong>null</strong>."},{"content":"&lt;/p&gt;\\n&lt;/td&gt;&lt;td&gt;\\n&lt;p&gt;The &lt;em&gt;message&lt;/em&gt; string appended with the string representation of the invalid argument value.","pos":[12537,12655],"source":" </p>\\n</td><td>\\n<p>The <em>message</em> string appended with the string representation of the invalid argument value."},{"content":"&lt;/p&gt;\\n&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\\n","pos":[12656,12690],"source":" </p>\\n</td></tr></tbody></table>\\n"},{"pos":[12951,12957],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[13088,13094],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13242,13251],"content":"Exception","needQuote":true,"nodes":[{"content":"Exception","pos":[0,9]}]},{"pos":[13416,13433],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]},{"pos":[13650,13659],"content":"ParamName","needQuote":true,"nodes":[{"content":"ParamName","pos":[0,9]}]},{"pos":[13885,13889],"content":"Data","needQuote":true,"nodes":[{"content":"Data","pos":[0,4]}]},{"pos":[14080,14088],"content":"HelpLink","needQuote":true,"nodes":[{"content":"HelpLink","pos":[0,8]}]},{"pos":[14290,14297],"content":"HResult","needQuote":true,"nodes":[{"content":"HResult","pos":[0,7]}]},{"pos":[14503,14517],"content":"InnerException","needQuote":true,"nodes":[{"content":"InnerException","pos":[0,14]}]},{"pos":[14736,14742],"content":"Source","needQuote":true,"nodes":[{"content":"Source","pos":[0,6]}]},{"pos":[14941,14951],"content":"StackTrace","needQuote":true,"nodes":[{"content":"StackTrace","pos":[0,10]}]},{"pos":[15168,15186],"content":"GetBaseException()","needQuote":true,"nodes":[{"content":"GetBaseException()","pos":[0,18]}]},{"pos":[15303,15319],"content":"GetBaseException","needQuote":true,"nodes":[{"content":"GetBaseException","pos":[0,16]}]},{"pos":[15378,15379],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15406,15407],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15488,15504],"content":"GetBaseException","needQuote":true,"nodes":[{"content":"GetBaseException","pos":[0,16]}]},{"pos":[15563,15564],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15591,15592],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15791,15801],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[15902,15910],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[15961,15962],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15989,15990],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16063,16071],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[16122,16123],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16150,16151],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16340,16354],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[16473,16479],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[16546,16547],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16597,16603],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16663,16664],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16747,16753],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[16820,16821],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16871,16877],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16937,16938],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17152,17174],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[17322,17328],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[17395,17396],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17446,17452],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[17513,17514]},{"pos":[17569,17575],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17635,17636],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17733,17739],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[17806,17807],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17857,17863],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[17924,17925]},{"pos":[17980,17986],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18046,18047],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18292,18323],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[18489,18504],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[18580,18581],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18631,18637],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[18698,18699]},{"pos":[18754,18760],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18820,18821],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18927,18942],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[19018,19019],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19069,19075],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[19136,19137]},{"pos":[19192,19198],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[19258,19259],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19489,19502],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[19603,19614],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[19686,19687],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19714,19715],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19788,19799],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[19871,19872],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19899,19900],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20075,20084],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[20177,20184],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[20252,20253],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20280,20281],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20350,20357],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[20425,20426],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20453,20454],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20629,20646],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[20755,20770],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[20846,20847],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20874,20875],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20952,20967],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[21043,21044],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21071,21072],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21241,21247],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[21429,21436],"content":"Message","needQuote":true,"nodes":[{"content":"Message","pos":[0,7]}]}],"content":"items:\n- uid: System.ArgumentOutOfRangeException\n  commentId: T:System.ArgumentOutOfRangeException\n  id: ArgumentOutOfRangeException\n  parent: System\n  children:\n  - System.ArgumentOutOfRangeException.#ctor\n  - System.ArgumentOutOfRangeException.#ctor(System.String)\n  - System.ArgumentOutOfRangeException.#ctor(System.String,System.Exception)\n  - System.ArgumentOutOfRangeException.#ctor(System.String,System.Object,System.String)\n  - System.ArgumentOutOfRangeException.#ctor(System.String,System.String)\n  - System.ArgumentOutOfRangeException.ActualValue\n  - System.ArgumentOutOfRangeException.Message\n  langs:\n  - csharp\n  - vb\n  name: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/ArgumentOutOfRangeException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ArgumentOutOfRangeException\n    path: src/mscorlib/src/System/ArgumentOutOfRangeException.cs\n    startLine: 24\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>The exception that is thrown when the value of an argument is outside the allowable range of values as defined by the invoked method.</p>\\n\"\n  syntax:\n    content: >-\n      [ComVisible(true)]\n\n      [Serializable]\n\n      public class ArgumentOutOfRangeException : ArgumentException, _Exception, ISerializable\n    content.vb: >-\n      <ComVisible(True)>\n\n      <Serializable>\n\n      Public Class ArgumentOutOfRangeException\n          Inherits ArgumentException\n          Implements _Exception, ISerializable\n  seealso:\n  - type: System.Exception\n    commentId: T:System.Exception\n  inheritance:\n  - System.Object\n  - System.Exception\n  - System.ArgumentException\n  inheritedMembers:\n  - System.ArgumentException.ParamName\n  - System.Exception.Data\n  - System.Exception.HelpLink\n  - System.Exception.HResult\n  - System.Exception.InnerException\n  - System.Exception.Source\n  - System.Exception.StackTrace\n  - System.Exception.GetBaseException\n  - System.Exception.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: ArgumentOutOfRangeException\n- uid: System.ArgumentOutOfRangeException.#ctor\n  commentId: M:System.ArgumentOutOfRangeException.#ctor\n  id: '#ctor'\n  parent: System.ArgumentOutOfRangeException\n  langs:\n  - csharp\n  - vb\n  name: ArgumentOutOfRangeException()\n  fullName: System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/ArgumentOutOfRangeException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/ArgumentOutOfRangeException.cs\n    startLine: 41\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.ArgumentOutOfRangeException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public ArgumentOutOfRangeException()\n    content.vb: Public Sub New\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: ArgumentOutOfRangeException.ArgumentOutOfRangeException()\n- uid: System.ArgumentOutOfRangeException.#ctor(System.String)\n  commentId: M:System.ArgumentOutOfRangeException.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.ArgumentOutOfRangeException\n  langs:\n  - csharp\n  - vb\n  name: ArgumentOutOfRangeException(String)\n  fullName: System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/ArgumentOutOfRangeException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/ArgumentOutOfRangeException.cs\n    startLine: 46\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.ArgumentOutOfRangeException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the name of the parameter that causes this exception.</p>\\n\"\n  syntax:\n    content: public ArgumentOutOfRangeException(string paramName)\n    content.vb: Public Sub New(paramName As String)\n    parameters:\n    - id: paramName\n      type: System.String\n      description: \"\\n<p>The name of the parameter that causes this exception. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: ArgumentOutOfRangeException.ArgumentOutOfRangeException(String)\n- uid: System.ArgumentOutOfRangeException.#ctor(System.String,System.Exception)\n  commentId: M:System.ArgumentOutOfRangeException.#ctor(System.String,System.Exception)\n  id: '#ctor(System.String,System.Exception)'\n  parent: System.ArgumentOutOfRangeException\n  langs:\n  - csharp\n  - vb\n  name: ArgumentOutOfRangeException(String, Exception)\n  fullName: System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(System.String, System.Exception)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/ArgumentOutOfRangeException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/ArgumentOutOfRangeException.cs\n    startLine: 56\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.ArgumentOutOfRangeException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with a specified error message and the exception that is the cause of this exception.</p>\\n\"\n  syntax:\n    content: public ArgumentOutOfRangeException(string message, Exception innerException)\n    content.vb: Public Sub New(message As String, innerException As Exception)\n    parameters:\n    - id: message\n      type: System.String\n      description: \"\\n<p>The error message that explains the reason for this exception. </p>\\n\"\n    - id: innerException\n      type: System.Exception\n      description: \"\\n<p>The exception that is the cause of the current exception, or a null reference (<strong>Nothing</strong> in Visual Basic) if no inner exception is specified. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: ArgumentOutOfRangeException.ArgumentOutOfRangeException(String, Exception)\n- uid: System.ArgumentOutOfRangeException.#ctor(System.String,System.Object,System.String)\n  commentId: M:System.ArgumentOutOfRangeException.#ctor(System.String,System.Object,System.String)\n  id: '#ctor(System.String,System.Object,System.String)'\n  parent: System.ArgumentOutOfRangeException\n  langs:\n  - csharp\n  - vb\n  name: ArgumentOutOfRangeException(String, Object, String)\n  fullName: System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(System.String, System.Object, System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/ArgumentOutOfRangeException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/ArgumentOutOfRangeException.cs\n    startLine: 64\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.ArgumentOutOfRangeException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the parameter name, the value of the argument, and a specified error message.</p>\\n\"\n  syntax:\n    content: public ArgumentOutOfRangeException(string paramName, object actualValue, string message)\n    content.vb: Public Sub New(paramName As String, actualValue As Object, message As String)\n    parameters:\n    - id: paramName\n      type: System.String\n      description: \"\\n<p>The name of the parameter that caused the exception. </p>\\n\"\n    - id: actualValue\n      type: System.Object\n      description: \"\\n<p>The value of the argument that causes this exception. </p>\\n\"\n    - id: message\n      type: System.String\n      description: \"\\n<p>The message that describes the error. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: ArgumentOutOfRangeException.ArgumentOutOfRangeException(String, Object, String)\n- uid: System.ArgumentOutOfRangeException.#ctor(System.String,System.String)\n  commentId: M:System.ArgumentOutOfRangeException.#ctor(System.String,System.String)\n  id: '#ctor(System.String,System.String)'\n  parent: System.ArgumentOutOfRangeException\n  langs:\n  - csharp\n  - vb\n  name: ArgumentOutOfRangeException(String, String)\n  fullName: System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(System.String, System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/ArgumentOutOfRangeException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/ArgumentOutOfRangeException.cs\n    startLine: 51\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.ArgumentOutOfRangeException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the name of the parameter that causes this exception and a specified error message.</p>\\n\"\n  syntax:\n    content: public ArgumentOutOfRangeException(string paramName, string message)\n    content.vb: Public Sub New(paramName As String, message As String)\n    parameters:\n    - id: paramName\n      type: System.String\n      description: \"\\n<p>The name of the parameter that caused the exception. </p>\\n\"\n    - id: message\n      type: System.String\n      description: \"\\n<p>The message that describes the error. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: ArgumentOutOfRangeException.ArgumentOutOfRangeException(String, String)\n- uid: System.ArgumentOutOfRangeException.ActualValue\n  commentId: P:System.ArgumentOutOfRangeException.ActualValue\n  id: ActualValue\n  parent: System.ArgumentOutOfRangeException\n  langs:\n  - csharp\n  - vb\n  name: ActualValue\n  fullName: System.ArgumentOutOfRangeException.ActualValue\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/ArgumentOutOfRangeException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ActualValue\n    path: src/mscorlib/src/System/ArgumentOutOfRangeException.cs\n    startLine: 87\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Gets the argument value that causes this exception.</p>\\n\"\n  syntax:\n    content: public virtual object ActualValue { get; }\n    content.vb: Public Overridable ReadOnly Property ActualValue As Object\n    parameters: []\n    return:\n      type: System.Object\n      description: \"\\n<p>An <strong>Object</strong> that contains the value of the parameter that caused the current <xref href=\\\"System.Exception\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  nameWithType: ArgumentOutOfRangeException.ActualValue\n- uid: System.ArgumentOutOfRangeException.Message\n  commentId: P:System.ArgumentOutOfRangeException.Message\n  id: Message\n  parent: System.ArgumentOutOfRangeException\n  langs:\n  - csharp\n  - vb\n  name: Message\n  fullName: System.ArgumentOutOfRangeException.Message\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/ArgumentOutOfRangeException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Message\n    path: src/mscorlib/src/System/ArgumentOutOfRangeException.cs\n    startLine: 70\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Gets the error message and the string representation of the invalid argument value, or only the error message if the argument value is null.</p>\\n\"\n  syntax:\n    content: public override string Message { get; }\n    content.vb: Public Overrides ReadOnly Property Message As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The text message for this exception. The value of this property takes one of two forms, as follows.</p>\\n<p>Condition </p>\\n<p>Value </p>\\n<table><tbody><tr><td>\\n<p>The <em>actualValue</em> is <strong>null</strong>. </p>\\n</td><td>\\n<p>The <em>message</em> string passed to the constructor. </p>\\n</td></tr><tr><td>\\n<p>The <em>actualValue</em> is not <strong>null</strong>. </p>\\n</td><td>\\n<p>The <em>message</em> string appended with the string representation of the invalid argument value. </p>\\n</td></tr></tbody></table>\\n\"\n  overridden: System.ArgumentException.Message\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: ArgumentOutOfRangeException.Message\nreferences:\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  fullName: System.Exception\n  nameWithType: Exception\n  commentId: T:System.Exception\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n- uid: System.ArgumentException.ParamName\n  parent: System.ArgumentException\n  isExternal: false\n  name: ParamName\n  fullName: System.ArgumentException.ParamName\n  nameWithType: ArgumentException.ParamName\n  commentId: P:System.ArgumentException.ParamName\n- uid: System.Exception.Data\n  parent: System.Exception\n  isExternal: false\n  name: Data\n  fullName: System.Exception.Data\n  nameWithType: Exception.Data\n  commentId: P:System.Exception.Data\n- uid: System.Exception.HelpLink\n  parent: System.Exception\n  isExternal: false\n  name: HelpLink\n  fullName: System.Exception.HelpLink\n  nameWithType: Exception.HelpLink\n  commentId: P:System.Exception.HelpLink\n- uid: System.Exception.HResult\n  parent: System.Exception\n  isExternal: false\n  name: HResult\n  fullName: System.Exception.HResult\n  nameWithType: Exception.HResult\n  commentId: P:System.Exception.HResult\n- uid: System.Exception.InnerException\n  parent: System.Exception\n  isExternal: false\n  name: InnerException\n  fullName: System.Exception.InnerException\n  nameWithType: Exception.InnerException\n  commentId: P:System.Exception.InnerException\n- uid: System.Exception.Source\n  parent: System.Exception\n  isExternal: false\n  name: Source\n  fullName: System.Exception.Source\n  nameWithType: Exception.Source\n  commentId: P:System.Exception.Source\n- uid: System.Exception.StackTrace\n  parent: System.Exception\n  isExternal: false\n  name: StackTrace\n  fullName: System.Exception.StackTrace\n  nameWithType: Exception.StackTrace\n  commentId: P:System.Exception.StackTrace\n- uid: System.Exception.GetBaseException\n  parent: System.Exception\n  isExternal: false\n  name: GetBaseException()\n  fullName: System.Exception.GetBaseException()\n  spec.csharp:\n  - uid: System.Exception.GetBaseException\n    name: GetBaseException\n    fullName: System.Exception.GetBaseException\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Exception.GetBaseException\n    name: GetBaseException\n    fullName: System.Exception.GetBaseException\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Exception.GetBaseException()\n  commentId: M:System.Exception.GetBaseException\n- uid: System.Exception.ToString\n  parent: System.Exception\n  isExternal: false\n  name: ToString()\n  fullName: System.Exception.ToString()\n  spec.csharp:\n  - uid: System.Exception.ToString\n    name: ToString\n    fullName: System.Exception.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Exception.ToString\n    name: ToString\n    fullName: System.Exception.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Exception.ToString()\n  commentId: M:System.Exception.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.ArgumentException.Message\n  parent: System.ArgumentException\n  isExternal: false\n  name: Message\n  fullName: System.ArgumentException.Message\n  nameWithType: ArgumentException.Message\n  commentId: P:System.ArgumentException.Message\n"}