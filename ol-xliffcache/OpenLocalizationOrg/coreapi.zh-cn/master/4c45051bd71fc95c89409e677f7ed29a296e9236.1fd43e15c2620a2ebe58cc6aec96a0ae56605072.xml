{"nodes":[{"pos":[637,652],"content":"XmlCDataSection","needQuote":true,"nodes":[{"content":"XmlCDataSection","pos":[0,15]}]},{"pos":[4442,4478],"content":"XmlCDataSection(String, XmlDocument)","needQuote":true,"nodes":[{"content":"XmlCDataSection(String, XmlDocument)","pos":[0,36]}]},{"pos":[5905,5914],"content":"LocalName","needQuote":true,"nodes":[{"content":"LocalName","pos":[0,9]}]},{"content":"\\n&lt;p&gt;For CDATA nodes, the local name is &lt;strong&gt;#cdata-section&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[6580,6658],"source":"\\n<p>For CDATA nodes, the local name is <strong>#cdata-section</strong>.</p>\\n"},{"pos":[7020,7024],"content":"Name","needQuote":true,"nodes":[{"content":"Name","pos":[0,4]}]},{"content":"\\n&lt;p&gt;For CDATA nodes, the name is &lt;strong&gt;#cdata-section&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[7674,7746],"source":"\\n<p>For CDATA nodes, the name is <strong>#cdata-section</strong>.</p>\\n"},{"pos":[8110,8118],"content":"NodeType","needQuote":true,"nodes":[{"content":"NodeType","pos":[0,8]}]},{"content":"\\n&lt;p&gt;The node type.","pos":[8801,8820],"source":"\\n<p>The node type."},{"content":"For CDATA nodes, the value is XmlNodeType.CDATA.&lt;/p&gt;\\n","pos":[8821,8875],"source":" For CDATA nodes, the value is XmlNodeType.CDATA.</p>\\n"},{"pos":[9337,9347],"content":"ParentNode","needQuote":true,"nodes":[{"content":"ParentNode","pos":[0,10]}]},{"pos":[10922,10934],"content":"PreviousText","needQuote":true,"nodes":[{"content":"PreviousText","pos":[0,12]}]},{"pos":[12171,12189],"content":"CloneNode(Boolean)","needQuote":true,"nodes":[{"content":"CloneNode(Boolean)","pos":[0,18]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to recursively clone the subtree under the specified node; &lt;strong&gt;false&lt;/strong&gt; to clone only the node itself.","pos":[12883,13024],"source":"\\n<p>\\n<strong>true</strong> to recursively clone the subtree under the specified node; <strong>false</strong> to clone only the node itself."},{"content":"Because CDATA nodes do not have children, regardless of the parameter setting, the cloned node will always include the data content.","pos":[13025,13157]},{"content":"&lt;/p&gt;\\n","pos":[13158,13164],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The cloned node.&lt;/p&gt;\\n","pos":[13229,13256],"source":"\\n<p>The cloned node.</p>\\n"},{"pos":[13718,13743],"content":"WriteContentTo(XmlWriter)","needQuote":true,"nodes":[{"content":"WriteContentTo(XmlWriter)","pos":[0,25]}]},{"content":"\\n&lt;p&gt;The &lt;strong&gt;XmlWriter&lt;/strong&gt; to which you want to save.","pos":[14544,14606],"source":"\\n<p>The <strong>XmlWriter</strong> to which you want to save."},{"content":"&lt;/p&gt;\\n","pos":[14607,14613],"source":" </p>\\n"},{"pos":[15072,15090],"content":"WriteTo(XmlWriter)","needQuote":true,"nodes":[{"content":"WriteTo(XmlWriter)","pos":[0,18]}]},{"content":"\\n&lt;p&gt;The &lt;strong&gt;XmlWriter&lt;/strong&gt; to which you want to save.","pos":[15847,15909],"source":"\\n<p>The <strong>XmlWriter</strong> to which you want to save."},{"content":"&lt;/p&gt;\\n","pos":[15910,15916],"source":" </p>\\n"},{"pos":[16175,16185],"content":"System.Xml","needQuote":true,"nodes":[{"content":"System.Xml","pos":[0,10]}]},{"pos":[16328,16334],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16488,16495],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"pos":[16666,16679],"content":"XmlLinkedNode","needQuote":true,"nodes":[{"content":"XmlLinkedNode","pos":[0,13]}]},{"pos":[16871,16887],"content":"XmlCharacterData","needQuote":true,"nodes":[{"content":"XmlCharacterData","pos":[0,16]}]},{"pos":[17099,17110],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[17334,17338],"content":"Data","needQuote":true,"nodes":[{"content":"Data","pos":[0,4]}]},{"pos":[17578,17584],"content":"Length","needQuote":true,"nodes":[{"content":"Length","pos":[0,6]}]},{"pos":[17829,17834],"content":"Value","needQuote":true,"nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[18095,18113],"content":"AppendData(String)","needQuote":true,"nodes":[{"content":"AppendData(String)","pos":[0,18]}]},{"pos":[18268,18278],"content":"AppendData","needQuote":true,"nodes":[{"content":"AppendData","pos":[0,10]}]},{"pos":[18342,18343],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18393,18399],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[18459,18460],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18561,18571],"content":"AppendData","needQuote":true,"nodes":[{"content":"AppendData","pos":[0,10]}]},{"pos":[18635,18636],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18686,18692],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[18752,18753],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19029,19053],"content":"DeleteData(Int32, Int32)","needQuote":true,"nodes":[{"content":"DeleteData(Int32, Int32)","pos":[0,24]}]},{"pos":[19233,19243],"content":"DeleteData","needQuote":true,"nodes":[{"content":"DeleteData","pos":[0,10]}]},{"pos":[19307,19308],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19357,19362],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[19422,19423]},{"pos":[19477,19482],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[19541,19542],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19655,19665],"content":"DeleteData","needQuote":true,"nodes":[{"content":"DeleteData","pos":[0,10]}]},{"pos":[19729,19730],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19779,19784],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[19844,19845]},{"pos":[19899,19904],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[19963,19964],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20259,20284],"content":"InsertData(Int32, String)","needQuote":true,"nodes":[{"content":"InsertData(Int32, String)","pos":[0,25]}]},{"pos":[20466,20476],"content":"InsertData","needQuote":true,"nodes":[{"content":"InsertData","pos":[0,10]}]},{"pos":[20540,20541],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20590,20595],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[20655,20656]},{"pos":[20711,20717],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[20777,20778],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20892,20902],"content":"InsertData","needQuote":true,"nodes":[{"content":"InsertData","pos":[0,10]}]},{"pos":[20966,20967],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21016,21021],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[21081,21082]},{"pos":[21137,21143],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[21203,21204],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21515,21548],"content":"ReplaceData(Int32, Int32, String)","needQuote":true,"nodes":[{"content":"ReplaceData(Int32, Int32, String)","pos":[0,33]}]},{"pos":[21759,21770],"content":"ReplaceData","needQuote":true,"nodes":[{"content":"ReplaceData","pos":[0,11]}]},{"pos":[21835,21836],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21885,21890],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[21950,21951]},{"pos":[22005,22010],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[22070,22071]},{"pos":[22126,22132],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[22192,22193],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22321,22332],"content":"ReplaceData","needQuote":true,"nodes":[{"content":"ReplaceData","pos":[0,11]}]},{"pos":[22397,22398],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22447,22452],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[22512,22513]},{"pos":[22567,22572],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[22632,22633]},{"pos":[22688,22694],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[22754,22755],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23072,23095],"content":"Substring(Int32, Int32)","needQuote":true,"nodes":[{"content":"Substring(Int32, Int32)","pos":[0,23]}]},{"pos":[23273,23282],"content":"Substring","needQuote":true,"nodes":[{"content":"Substring","pos":[0,9]}]},{"pos":[23345,23346],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23395,23400],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[23460,23461]},{"pos":[23515,23520],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[23579,23580],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23692,23701],"content":"Substring","needQuote":true,"nodes":[{"content":"Substring","pos":[0,9]}]},{"pos":[23764,23765],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23814,23819],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[23879,23880]},{"pos":[23934,23939],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[23998,23999],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24260,24271],"content":"NextSibling","needQuote":true,"nodes":[{"content":"NextSibling","pos":[0,11]}]},{"pos":[24526,24541],"content":"PreviousSibling","needQuote":true,"nodes":[{"content":"PreviousSibling","pos":[0,15]}]},{"pos":[24791,24801],"content":"Attributes","needQuote":true,"nodes":[{"content":"Attributes","pos":[0,10]}]},{"pos":[25015,25022],"content":"BaseURI","needQuote":true,"nodes":[{"content":"BaseURI","pos":[0,7]}]},{"pos":[25230,25240],"content":"ChildNodes","needQuote":true,"nodes":[{"content":"ChildNodes","pos":[0,10]}]},{"pos":[25457,25467],"content":"FirstChild","needQuote":true,"nodes":[{"content":"FirstChild","pos":[0,10]}]},{"pos":[25687,25700],"content":"HasChildNodes","needQuote":true,"nodes":[{"content":"HasChildNodes","pos":[0,13]}]},{"pos":[25925,25934],"content":"InnerText","needQuote":true,"nodes":[{"content":"InnerText","pos":[0,9]}]},{"pos":[26146,26154],"content":"InnerXml","needQuote":true,"nodes":[{"content":"InnerXml","pos":[0,8]}]},{"pos":[26365,26375],"content":"IsReadOnly","needQuote":true,"nodes":[{"content":"IsReadOnly","pos":[0,10]}]},{"pos":[26600,26612],"content":"Item[String]","needQuote":true,"nodes":[{"content":"Item[String]","pos":[0,12]}]},{"pos":[26815,26819],"content":"Item","needQuote":true,"nodes":[{"content":"Item","pos":[0,4]}]},{"content":"[","pos":[26869,26870]},{"pos":[26923,26929],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":"]","pos":[26990,26991]},{"pos":[27080,27084],"content":"Item","needQuote":true,"nodes":[{"content":"Item","pos":[0,4]}]},{"pos":[27133,27134],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27184,27190],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[27250,27251],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27515,27535],"content":"Item[String, String]","needQuote":true,"nodes":[{"content":"Item[String, String]","pos":[0,20]}]},{"pos":[27790,27794],"content":"Item","needQuote":true,"nodes":[{"content":"Item","pos":[0,4]}]},{"content":"[","pos":[27844,27845]},{"pos":[27898,27904],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[27965,27966]},{"pos":[28021,28027],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":"]","pos":[28088,28089]},{"pos":[28192,28196],"content":"Item","needQuote":true,"nodes":[{"content":"Item","pos":[0,4]}]},{"pos":[28245,28246],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28296,28302],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[28363,28364]},{"pos":[28419,28425],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[28485,28486],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28757,28766],"content":"LastChild","needQuote":true,"nodes":[{"content":"LastChild","pos":[0,9]}]},{"pos":[28982,28994],"content":"NamespaceURI","needQuote":true,"nodes":[{"content":"NamespaceURI","pos":[0,12]}]},{"pos":[29215,29223],"content":"OuterXml","needQuote":true,"nodes":[{"content":"OuterXml","pos":[0,8]}]},{"pos":[29437,29450],"content":"OwnerDocument","needQuote":true,"nodes":[{"content":"OwnerDocument","pos":[0,13]}]},{"pos":[29672,29678],"content":"Prefix","needQuote":true,"nodes":[{"content":"Prefix","pos":[0,6]}]},{"pos":[29904,29924],"content":"AppendChild(XmlNode)","needQuote":true,"nodes":[{"content":"AppendChild(XmlNode)","pos":[0,20]}]},{"pos":[30073,30084],"content":"AppendChild","needQuote":true,"nodes":[{"content":"AppendChild","pos":[0,11]}]},{"pos":[30140,30141],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30196,30203],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"pos":[30247,30248],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30346,30357],"content":"AppendChild","needQuote":true,"nodes":[{"content":"AppendChild","pos":[0,11]}]},{"pos":[30413,30414],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30469,30476],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"pos":[30520,30521],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30746,30761],"content":"GetEnumerator()","needQuote":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[30876,30889],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[30947,30948],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30975,30976],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31056,31069],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[31127,31128],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31155,31156],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31379,31407],"content":"GetNamespaceOfPrefix(String)","needQuote":true,"nodes":[{"content":"GetNamespaceOfPrefix(String)","pos":[0,28]}]},{"pos":[31564,31584],"content":"GetNamespaceOfPrefix","needQuote":true,"nodes":[{"content":"GetNamespaceOfPrefix","pos":[0,20]}]},{"pos":[31649,31650],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31700,31706],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[31766,31767],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31869,31889],"content":"GetNamespaceOfPrefix","needQuote":true,"nodes":[{"content":"GetNamespaceOfPrefix","pos":[0,20]}]},{"pos":[31954,31955],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[32005,32011],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[32071,32072],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[32330,32358],"content":"GetPrefixOfNamespace(String)","needQuote":true,"nodes":[{"content":"GetPrefixOfNamespace(String)","pos":[0,28]}]},{"pos":[32515,32535],"content":"GetPrefixOfNamespace","needQuote":true,"nodes":[{"content":"GetPrefixOfNamespace","pos":[0,20]}]},{"pos":[32600,32601],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[32651,32657],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[32717,32718],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[32820,32840],"content":"GetPrefixOfNamespace","needQuote":true,"nodes":[{"content":"GetPrefixOfNamespace","pos":[0,20]}]},{"pos":[32905,32906],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[32956,32962],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[33022,33023],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[33297,33326],"content":"InsertAfter(XmlNode, XmlNode)","needQuote":true,"nodes":[{"content":"InsertAfter(XmlNode, XmlNode)","pos":[0,29]}]},{"pos":[33514,33525],"content":"InsertAfter","needQuote":true,"nodes":[{"content":"InsertAfter","pos":[0,11]}]},{"pos":[33581,33582],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[33637,33644],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"content":",","pos":[33689,33690]},{"pos":[33750,33757],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"pos":[33801,33802],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[33919,33930],"content":"InsertAfter","needQuote":true,"nodes":[{"content":"InsertAfter","pos":[0,11]}]},{"pos":[33986,33987],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[34042,34049],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"content":",","pos":[34094,34095]},{"pos":[34155,34162],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"pos":[34206,34207],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34498,34528],"content":"InsertBefore(XmlNode, XmlNode)","needQuote":true,"nodes":[{"content":"InsertBefore(XmlNode, XmlNode)","pos":[0,30]}]},{"pos":[34718,34730],"content":"InsertBefore","needQuote":true,"nodes":[{"content":"InsertBefore","pos":[0,12]}]},{"pos":[34787,34788],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[34843,34850],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"content":",","pos":[34895,34896]},{"pos":[34956,34963],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"pos":[35007,35008],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[35126,35138],"content":"InsertBefore","needQuote":true,"nodes":[{"content":"InsertBefore","pos":[0,12]}]},{"pos":[35195,35196],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[35251,35258],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"content":",","pos":[35303,35304]},{"pos":[35364,35371],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"pos":[35415,35416],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[35667,35678],"content":"Normalize()","needQuote":true,"nodes":[{"content":"Normalize()","pos":[0,11]}]},{"pos":[35785,35794],"content":"Normalize","needQuote":true,"nodes":[{"content":"Normalize","pos":[0,9]}]},{"pos":[35848,35849],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[35876,35877],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[35953,35962],"content":"Normalize","needQuote":true,"nodes":[{"content":"Normalize","pos":[0,9]}]},{"pos":[36016,36017],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[36044,36045],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[36258,36279],"content":"PrependChild(XmlNode)","needQuote":true,"nodes":[{"content":"PrependChild(XmlNode)","pos":[0,21]}]},{"pos":[36430,36442],"content":"PrependChild","needQuote":true,"nodes":[{"content":"PrependChild","pos":[0,12]}]},{"pos":[36499,36500],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[36555,36562],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"pos":[36606,36607],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[36706,36718],"content":"PrependChild","needQuote":true,"nodes":[{"content":"PrependChild","pos":[0,12]}]},{"pos":[36775,36776],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[36831,36838],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"pos":[36882,36883],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[37106,37117],"content":"RemoveAll()","needQuote":true,"nodes":[{"content":"RemoveAll()","pos":[0,11]}]},{"pos":[37224,37233],"content":"RemoveAll","needQuote":true,"nodes":[{"content":"RemoveAll","pos":[0,9]}]},{"pos":[37287,37288],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[37315,37316],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[37392,37401],"content":"RemoveAll","needQuote":true,"nodes":[{"content":"RemoveAll","pos":[0,9]}]},{"pos":[37455,37456],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[37483,37484],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[37696,37716],"content":"RemoveChild(XmlNode)","needQuote":true,"nodes":[{"content":"RemoveChild(XmlNode)","pos":[0,20]}]},{"pos":[37865,37876],"content":"RemoveChild","needQuote":true,"nodes":[{"content":"RemoveChild","pos":[0,11]}]},{"pos":[37932,37933],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[37988,37995],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"pos":[38039,38040],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[38138,38149],"content":"RemoveChild","needQuote":true,"nodes":[{"content":"RemoveChild","pos":[0,11]}]},{"pos":[38205,38206],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[38261,38268],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"pos":[38312,38313],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[38576,38606],"content":"ReplaceChild(XmlNode, XmlNode)","needQuote":true,"nodes":[{"content":"ReplaceChild(XmlNode, XmlNode)","pos":[0,30]}]},{"pos":[38796,38808],"content":"ReplaceChild","needQuote":true,"nodes":[{"content":"ReplaceChild","pos":[0,12]}]},{"pos":[38865,38866],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[38921,38928],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"content":",","pos":[38973,38974]},{"pos":[39034,39041],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"pos":[39085,39086],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[39204,39216],"content":"ReplaceChild","needQuote":true,"nodes":[{"content":"ReplaceChild","pos":[0,12]}]},{"pos":[39273,39274],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[39329,39336],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"content":",","pos":[39381,39382]},{"pos":[39442,39449],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"pos":[39493,39494],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[39772,39796],"content":"Supports(String, String)","needQuote":true,"nodes":[{"content":"Supports(String, String)","pos":[0,24]}]},{"pos":[39958,39966],"content":"Supports","needQuote":true,"nodes":[{"content":"Supports","pos":[0,8]}]},{"pos":[40019,40020],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[40070,40076],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[40137,40138]},{"pos":[40193,40199],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[40259,40260],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[40364,40372],"content":"Supports","needQuote":true,"nodes":[{"content":"Supports","pos":[0,8]}]},{"pos":[40425,40426],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[40476,40482],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[40543,40544]},{"pos":[40599,40605],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[40665,40666],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[40932,40959],"content":"IEnumerable.GetEnumerator()","needQuote":true,"nodes":[{"content":"IEnumerable.GetEnumerator()","pos":[0,27]}]},{"pos":[41194,41219],"content":"IEnumerable.GetEnumerator","needQuote":true,"nodes":[{"content":"IEnumerable.GetEnumerator","pos":[0,25]}]},{"pos":[41308,41309],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[41336,41337],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[41448,41492],"content":"System.Collections.IEnumerable.GetEnumerator","needQuote":true,"nodes":[{"content":"System.Collections.IEnumerable.GetEnumerator","pos":[0,44]}]},{"pos":[41581,41582],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[41609,41610],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[41913,41923],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[42018,42026],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[42095,42096],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[42123,42124],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[42194,42202],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[42271,42272],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[42299,42300],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[42483,42497],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[42616,42622],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[42689,42690],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[42740,42746],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[42806,42807],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[42890,42896],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[42963,42964],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[43014,43020],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[43080,43081],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[43295,43317],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[43465,43471],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[43538,43539],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[43589,43595],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[43656,43657]},{"pos":[43712,43718],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[43778,43779],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[43876,43882],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[43949,43950],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[44000,44006],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[44067,44068]},{"pos":[44123,44129],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[44189,44190],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[44435,44466],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[44632,44647],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[44723,44724],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[44774,44780],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[44841,44842]},{"pos":[44897,44903],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[44963,44964],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[45070,45085],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[45161,45162],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[45212,45218],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[45279,45280]},{"pos":[45335,45341],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[45401,45402],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[45632,45645],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[45746,45757],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[45829,45830],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[45857,45858],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[45931,45942],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[46014,46015],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[46042,46043],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[46218,46227],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[46320,46327],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[46395,46396],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[46423,46424],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[46493,46500],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[46568,46569],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[46596,46597],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[46772,46789],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[46898,46913],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[46989,46990],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[47017,47018],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[47095,47110],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[47186,47187],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[47214,47215],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[47510,47523],"content":"AsQueryable()","needQuote":true,"nodes":[{"content":"AsQueryable()","pos":[0,13]}]},{"pos":[47640,47651],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[47710,47711],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[47738,47739],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[47820,47831],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[47890,47891],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[47918,47919],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[48274,48286],"content":"AsParallel()","needQuote":true,"nodes":[{"content":"AsParallel()","pos":[0,12]}]},{"pos":[48419,48429],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[48496,48497],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[48524,48525],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[48614,48624],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[48691,48692],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[48719,48720],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[49061,49076],"content":"Cast<TResult>()","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;()","pos":[0,15],"source":"Cast<TResult>()"}]},{"pos":[49280,49293],"content":"Cast<TResult>","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;","pos":[0,13],"source":"Cast<TResult>"}]},{"pos":[49355,49356],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[49383,49384],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[49462,49478],"content":"Cast(Of TResult)","needQuote":true,"nodes":[{"content":"Cast(Of TResult)","pos":[0,16]}]},{"pos":[49543,49544],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[49571,49572],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[49950,49967],"content":"OfType<TResult>()","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;()","pos":[0,17],"source":"OfType<TResult>()"}]},{"pos":[50179,50194],"content":"OfType<TResult>","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;","pos":[0,15],"source":"OfType<TResult>"}]},{"pos":[50258,50259],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[50286,50287],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[50367,50385],"content":"OfType(Of TResult)","needQuote":true,"nodes":[{"content":"OfType(Of TResult)","pos":[0,18]}]},{"pos":[50452,50453],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[50480,50481],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[50716,50722],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[50841,50859],"content":"System.Collections","needQuote":true,"nodes":[{"content":"System.Collections","pos":[0,18]}]},{"pos":[51060,51084],"content":"AsQueryable(IEnumerable)","needQuote":true,"nodes":[{"content":"AsQueryable(IEnumerable)","pos":[0,24]}]},{"pos":[51263,51274],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[51333,51334],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[51401,51412],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[51489,51490],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[51603,51614],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[51673,51674],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[51741,51752],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[51829,51830],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[52058,52067],"content":"Queryable","needQuote":true,"nodes":[{"content":"Queryable","pos":[0,9]}]},{"pos":[52273,52296],"content":"AsParallel(IEnumerable)","needQuote":true,"nodes":[{"content":"AsParallel(IEnumerable)","pos":[0,23]}]},{"pos":[52491,52501],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[52568,52569],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[52636,52647],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[52724,52725],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[52846,52856],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[52923,52924],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[52991,53002],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[53079,53080],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[53333,53351],"content":"ParallelEnumerable","needQuote":true,"nodes":[{"content":"ParallelEnumerable","pos":[0,18]}]},{"pos":[53573,53599],"content":"Cast<TResult>(IEnumerable)","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;(IEnumerable)","pos":[0,26],"source":"Cast<TResult>(IEnumerable)"}]},{"pos":[53906,53919],"content":"Cast<TResult>","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;","pos":[0,13],"source":"Cast<TResult>"}]},{"pos":[53981,53982],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[54049,54060],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[54137,54138],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[54248,54264],"content":"Cast(Of TResult)","needQuote":true,"nodes":[{"content":"Cast(Of TResult)","pos":[0,16]}]},{"pos":[54329,54330],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[54397,54408],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[54485,54486],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[54775,54785],"content":"Enumerable","needQuote":true,"nodes":[{"content":"Enumerable","pos":[0,10]}]},{"pos":[54985,55013],"content":"OfType<TResult>(IEnumerable)","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;(IEnumerable)","pos":[0,28],"source":"OfType<TResult>(IEnumerable)"}]},{"pos":[55328,55343],"content":"OfType<TResult>","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;","pos":[0,15],"source":"OfType<TResult>"}]},{"pos":[55407,55408],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[55475,55486],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[55563,55564],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[55676,55694],"content":"OfType(Of TResult)","needQuote":true,"nodes":[{"content":"OfType(Of TResult)","pos":[0,18]}]},{"pos":[55761,55762],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[55829,55840],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[55917,55918],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[56180,56191],"content":"System.Linq","needQuote":true,"nodes":[{"content":"System.Linq","pos":[0,11]}]},{"pos":[56337,56343],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[56501,56512],"content":"XmlDocument","needQuote":true,"nodes":[{"content":"XmlDocument","pos":[0,11]}]},{"pos":[56707,56716],"content":"LocalName","needQuote":true,"nodes":[{"content":"LocalName","pos":[0,9]}]},{"pos":[56924,56928],"content":"Name","needQuote":true,"nodes":[{"content":"Name","pos":[0,4]}]},{"pos":[57125,57133],"content":"NodeType","needQuote":true,"nodes":[{"content":"NodeType","pos":[0,8]}]},{"pos":[57329,57340],"content":"XmlNodeType","needQuote":true,"nodes":[{"content":"XmlNodeType","pos":[0,11]}]},{"pos":[57536,57546],"content":"ParentNode","needQuote":true,"nodes":[{"content":"ParentNode","pos":[0,10]}]},{"pos":[57765,57777],"content":"PreviousText","needQuote":true,"nodes":[{"content":"PreviousText","pos":[0,12]}]},{"pos":[58014,58032],"content":"CloneNode(Boolean)","needQuote":true,"nodes":[{"content":"CloneNode(Boolean)","pos":[0,18]}]},{"pos":[58169,58178],"content":"CloneNode","needQuote":true,"nodes":[{"content":"CloneNode","pos":[0,9]}]},{"pos":[58232,58233],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[58284,58291],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[58352,58353],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[58445,58454],"content":"CloneNode","needQuote":true,"nodes":[{"content":"CloneNode","pos":[0,9]}]},{"pos":[58508,58509],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[58560,58567],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[58628,58629],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[58816,58823],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[59024,59049],"content":"WriteContentTo(XmlWriter)","needQuote":true,"nodes":[{"content":"WriteContentTo(XmlWriter)","pos":[0,25]}]},{"pos":[59208,59222],"content":"WriteContentTo","needQuote":true,"nodes":[{"content":"WriteContentTo","pos":[0,14]}]},{"pos":[59281,59282],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[59339,59348],"content":"XmlWriter","needQuote":true,"nodes":[{"content":"XmlWriter","pos":[0,9]}]},{"pos":[59415,59416],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[59519,59533],"content":"WriteContentTo","needQuote":true,"nodes":[{"content":"WriteContentTo","pos":[0,14]}]},{"pos":[59592,59593],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[59650,59659],"content":"XmlWriter","needQuote":true,"nodes":[{"content":"XmlWriter","pos":[0,9]}]},{"pos":[59726,59727],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[59942,59951],"content":"XmlWriter","needQuote":true,"nodes":[{"content":"XmlWriter","pos":[0,9]}]},{"pos":[60159,60177],"content":"WriteTo(XmlWriter)","needQuote":true,"nodes":[{"content":"WriteTo(XmlWriter)","pos":[0,18]}]},{"pos":[60322,60329],"content":"WriteTo","needQuote":true,"nodes":[{"content":"WriteTo","pos":[0,7]}]},{"pos":[60381,60382],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[60439,60448],"content":"XmlWriter","needQuote":true,"nodes":[{"content":"XmlWriter","pos":[0,9]}]},{"pos":[60515,60516],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[60612,60619],"content":"WriteTo","needQuote":true,"nodes":[{"content":"WriteTo","pos":[0,7]}]},{"pos":[60671,60672],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[60729,60738],"content":"XmlWriter","needQuote":true,"nodes":[{"content":"XmlWriter","pos":[0,9]}]},{"pos":[60805,60806],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]}],"content":"items:\n- uid: System.Xml.XmlCDataSection\n  commentId: T:System.Xml.XmlCDataSection\n  id: XmlCDataSection\n  parent: System.Xml\n  children:\n  - System.Xml.XmlCDataSection.#ctor(System.String,System.Xml.XmlDocument)\n  - System.Xml.XmlCDataSection.CloneNode(System.Boolean)\n  - System.Xml.XmlCDataSection.LocalName\n  - System.Xml.XmlCDataSection.Name\n  - System.Xml.XmlCDataSection.NodeType\n  - System.Xml.XmlCDataSection.ParentNode\n  - System.Xml.XmlCDataSection.PreviousText\n  - System.Xml.XmlCDataSection.WriteContentTo(System.Xml.XmlWriter)\n  - System.Xml.XmlCDataSection.WriteTo(System.Xml.XmlWriter)\n  langs:\n  - csharp\n  - vb\n  name: XmlCDataSection\n  fullName: System.Xml.XmlCDataSection\n  type: Class\n  source:\n    remote:\n      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: XmlCDataSection\n    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n    startLine: 59\n  assemblies:\n  - System.Xml.XmlDocument\n  namespace: System.Xml\n  summary: \"\\n<p>Represents a CDATA section.</p>\\n\"\n  syntax:\n    content: 'public class XmlCDataSection : XmlCharacterData, IEnumerable'\n    content.vb: >-\n      Public Class XmlCDataSection\n          Inherits XmlCharacterData\n          Implements IEnumerable\n  seealso:\n  - type: System.Xml.XmlDocument.CreateCDataSection(System.String)\n    commentId: M:System.Xml.XmlDocument.CreateCDataSection(System.String)\n  inheritance:\n  - System.Object\n  - System.Xml.XmlNode\n  - System.Xml.XmlLinkedNode\n  - System.Xml.XmlCharacterData\n  implements:\n  - System.Collections.IEnumerable\n  inheritedMembers:\n  - System.Xml.XmlCharacterData.Data\n  - System.Xml.XmlCharacterData.Length\n  - System.Xml.XmlCharacterData.Value\n  - System.Xml.XmlCharacterData.AppendData(System.String)\n  - System.Xml.XmlCharacterData.DeleteData(System.Int32,System.Int32)\n  - System.Xml.XmlCharacterData.InsertData(System.Int32,System.String)\n  - System.Xml.XmlCharacterData.ReplaceData(System.Int32,System.Int32,System.String)\n  - System.Xml.XmlCharacterData.Substring(System.Int32,System.Int32)\n  - System.Xml.XmlLinkedNode.NextSibling\n  - System.Xml.XmlLinkedNode.PreviousSibling\n  - System.Xml.XmlNode.Attributes\n  - System.Xml.XmlNode.BaseURI\n  - System.Xml.XmlNode.ChildNodes\n  - System.Xml.XmlNode.FirstChild\n  - System.Xml.XmlNode.HasChildNodes\n  - System.Xml.XmlNode.InnerText\n  - System.Xml.XmlNode.InnerXml\n  - System.Xml.XmlNode.IsReadOnly\n  - System.Xml.XmlNode.Item(System.String)\n  - System.Xml.XmlNode.Item(System.String,System.String)\n  - System.Xml.XmlNode.LastChild\n  - System.Xml.XmlNode.NamespaceURI\n  - System.Xml.XmlNode.OuterXml\n  - System.Xml.XmlNode.OwnerDocument\n  - System.Xml.XmlNode.Prefix\n  - System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)\n  - System.Xml.XmlNode.GetEnumerator\n  - System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)\n  - System.Xml.XmlNode.GetPrefixOfNamespace(System.String)\n  - System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)\n  - System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)\n  - System.Xml.XmlNode.Normalize\n  - System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)\n  - System.Xml.XmlNode.RemoveAll\n  - System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)\n  - System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)\n  - System.Xml.XmlNode.Supports(System.String,System.String)\n  - System.Xml.XmlNode.System#Collections#IEnumerable#GetEnumerator\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: XmlCDataSection\n  extensionMethods:\n  - System.Collections.IEnumerable.System.Linq.Queryable.AsQueryable\n  - System.Collections.IEnumerable.System.Linq.ParallelEnumerable.AsParallel\n  - System.Collections.IEnumerable.System.Linq.Enumerable.Cast``1\n  - System.Collections.IEnumerable.System.Linq.Enumerable.OfType``1\n- uid: System.Xml.XmlCDataSection.#ctor(System.String,System.Xml.XmlDocument)\n  commentId: M:System.Xml.XmlCDataSection.#ctor(System.String,System.Xml.XmlDocument)\n  id: '#ctor(System.String,System.Xml.XmlDocument)'\n  parent: System.Xml.XmlCDataSection\n  langs:\n  - csharp\n  - vb\n  name: XmlCDataSection(String, XmlDocument)\n  fullName: System.Xml.XmlCDataSection.XmlCDataSection(System.String, System.Xml.XmlDocument)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n    startLine: 61\n  assemblies:\n  - System.Xml.XmlDocument\n  namespace: System.Xml\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Xml.XmlCDataSection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: protected XmlCDataSection(string data, XmlDocument doc)\n    content.vb: Protected Sub New(data As String, doc As XmlDocument)\n    parameters:\n    - id: data\n      type: System.String\n      description: \"\\n<p>\\n<xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains character data.</p>\\n\"\n    - id: doc\n      type: System.Xml.XmlDocument\n      description: \"\\n<p>\\n<xref href=\\\"System.Xml.XmlDocument\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: XmlCDataSection.XmlCDataSection(String, XmlDocument)\n- uid: System.Xml.XmlCDataSection.LocalName\n  commentId: P:System.Xml.XmlCDataSection.LocalName\n  id: LocalName\n  parent: System.Xml.XmlCDataSection\n  langs:\n  - csharp\n  - vb\n  name: LocalName\n  fullName: System.Xml.XmlCDataSection.LocalName\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: LocalName\n    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n    startLine: 62\n  assemblies:\n  - System.Xml.XmlDocument\n  namespace: System.Xml\n  summary: \"\\n<p>Gets the local name of the node.</p>\\n\"\n  syntax:\n    content: public override string LocalName { get; }\n    content.vb: Public Overrides ReadOnly Property LocalName As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>For CDATA nodes, the local name is <strong>#cdata-section</strong>.</p>\\n\"\n  overridden: System.Xml.XmlNode.LocalName\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: XmlCDataSection.LocalName\n- uid: System.Xml.XmlCDataSection.Name\n  commentId: P:System.Xml.XmlCDataSection.Name\n  id: Name\n  parent: System.Xml.XmlCDataSection\n  langs:\n  - csharp\n  - vb\n  name: Name\n  fullName: System.Xml.XmlCDataSection.Name\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Name\n    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n    startLine: 63\n  assemblies:\n  - System.Xml.XmlDocument\n  namespace: System.Xml\n  summary: \"\\n<p>Gets the qualified name of the node.</p>\\n\"\n  syntax:\n    content: public override string Name { get; }\n    content.vb: Public Overrides ReadOnly Property Name As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>For CDATA nodes, the name is <strong>#cdata-section</strong>.</p>\\n\"\n  overridden: System.Xml.XmlNode.Name\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: XmlCDataSection.Name\n- uid: System.Xml.XmlCDataSection.NodeType\n  commentId: P:System.Xml.XmlCDataSection.NodeType\n  id: NodeType\n  parent: System.Xml.XmlCDataSection\n  langs:\n  - csharp\n  - vb\n  name: NodeType\n  fullName: System.Xml.XmlCDataSection.NodeType\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: NodeType\n    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n    startLine: 64\n  assemblies:\n  - System.Xml.XmlDocument\n  namespace: System.Xml\n  summary: \"\\n<p>Gets the type of the current node.</p>\\n\"\n  syntax:\n    content: public override XmlNodeType NodeType { get; }\n    content.vb: Public Overrides ReadOnly Property NodeType As XmlNodeType\n    parameters: []\n    return:\n      type: System.Xml.XmlNodeType\n      description: \"\\n<p>The node type. For CDATA nodes, the value is XmlNodeType.CDATA.</p>\\n\"\n  overridden: System.Xml.XmlNode.NodeType\n  seealso:\n  - type: System.Xml.XmlNodeType\n    commentId: T:System.Xml.XmlNodeType\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: XmlCDataSection.NodeType\n- uid: System.Xml.XmlCDataSection.ParentNode\n  commentId: P:System.Xml.XmlCDataSection.ParentNode\n  id: ParentNode\n  parent: System.Xml.XmlCDataSection\n  langs:\n  - csharp\n  - vb\n  name: ParentNode\n  fullName: System.Xml.XmlCDataSection.ParentNode\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ParentNode\n    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n    startLine: 65\n  assemblies:\n  - System.Xml.XmlDocument\n  namespace: System.Xml\n  summary: \"\\n<p>Gets the parent of this node (for nodes that can have parents).</p>\\n\"\n  syntax:\n    content: public override XmlNode ParentNode { get; }\n    content.vb: Public Overrides ReadOnly Property ParentNode As XmlNode\n    parameters: []\n    return:\n      type: System.Xml.XmlNode\n      description: \"\\n<p>The <strong>XmlNode</strong> that is the parent of the current node. If a node has just been created and not yet added to the tree, or if it has been removed from the tree, the parent is <strong>null</strong>. For all other nodes, the value returned depends on the <xref href=\\\"System.Xml.XmlNode.NodeType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the node. The following table describes the possible return values for the <strong>ParentNode</strong> property.</p>\\n\"\n  overridden: System.Xml.XmlNode.ParentNode\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: XmlCDataSection.ParentNode\n- uid: System.Xml.XmlCDataSection.PreviousText\n  commentId: P:System.Xml.XmlCDataSection.PreviousText\n  id: PreviousText\n  parent: System.Xml.XmlCDataSection\n  langs:\n  - csharp\n  - vb\n  name: PreviousText\n  fullName: System.Xml.XmlCDataSection.PreviousText\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: PreviousText\n    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n    startLine: 66\n  assemblies:\n  - System.Xml.XmlDocument\n  namespace: System.Xml\n  summary: \"\\n<p>Gets the text node that immediately precedes this node.</p>\\n\"\n  syntax:\n    content: public override XmlNode PreviousText { get; }\n    content.vb: Public Overrides ReadOnly Property PreviousText As XmlNode\n    parameters: []\n    return:\n      type: System.Xml.XmlNode\n      description: \"\\n<p>Returns <xref href=\\\"System.Xml.XmlNode\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  overridden: System.Xml.XmlNode.PreviousText\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: XmlCDataSection.PreviousText\n- uid: System.Xml.XmlCDataSection.CloneNode(System.Boolean)\n  commentId: M:System.Xml.XmlCDataSection.CloneNode(System.Boolean)\n  id: CloneNode(System.Boolean)\n  parent: System.Xml.XmlCDataSection\n  langs:\n  - csharp\n  - vb\n  name: CloneNode(Boolean)\n  fullName: System.Xml.XmlCDataSection.CloneNode(System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CloneNode\n    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n    startLine: 67\n  assemblies:\n  - System.Xml.XmlDocument\n  namespace: System.Xml\n  summary: \"\\n<p>Creates a duplicate of this node.</p>\\n\"\n  syntax:\n    content: public override XmlNode CloneNode(bool deep)\n    content.vb: Public Overrides Function CloneNode(deep As Boolean) As XmlNode\n    parameters:\n    - id: deep\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to recursively clone the subtree under the specified node; <strong>false</strong> to clone only the node itself. Because CDATA nodes do not have children, regardless of the parameter setting, the cloned node will always include the data content. </p>\\n\"\n    return:\n      type: System.Xml.XmlNode\n      description: \"\\n<p>The cloned node.</p>\\n\"\n  overridden: System.Xml.XmlNode.CloneNode(System.Boolean)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: XmlCDataSection.CloneNode(Boolean)\n- uid: System.Xml.XmlCDataSection.WriteContentTo(System.Xml.XmlWriter)\n  commentId: M:System.Xml.XmlCDataSection.WriteContentTo(System.Xml.XmlWriter)\n  id: WriteContentTo(System.Xml.XmlWriter)\n  parent: System.Xml.XmlCDataSection\n  langs:\n  - csharp\n  - vb\n  name: WriteContentTo(XmlWriter)\n  fullName: System.Xml.XmlCDataSection.WriteContentTo(System.Xml.XmlWriter)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WriteContentTo\n    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n    startLine: 68\n  assemblies:\n  - System.Xml.XmlDocument\n  namespace: System.Xml\n  summary: \"\\n<p>Saves the children of the node to the specified <xref href=\\\"System.Xml.XmlWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public override void WriteContentTo(XmlWriter w)\n    content.vb: Public Overrides Sub WriteContentTo(w As XmlWriter)\n    parameters:\n    - id: w\n      type: System.Xml.XmlWriter\n      description: \"\\n<p>The <strong>XmlWriter</strong> to which you want to save. </p>\\n\"\n  overridden: System.Xml.XmlNode.WriteContentTo(System.Xml.XmlWriter)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: XmlCDataSection.WriteContentTo(XmlWriter)\n- uid: System.Xml.XmlCDataSection.WriteTo(System.Xml.XmlWriter)\n  commentId: M:System.Xml.XmlCDataSection.WriteTo(System.Xml.XmlWriter)\n  id: WriteTo(System.Xml.XmlWriter)\n  parent: System.Xml.XmlCDataSection\n  langs:\n  - csharp\n  - vb\n  name: WriteTo(XmlWriter)\n  fullName: System.Xml.XmlCDataSection.WriteTo(System.Xml.XmlWriter)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WriteTo\n    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n    startLine: 69\n  assemblies:\n  - System.Xml.XmlDocument\n  namespace: System.Xml\n  summary: \"\\n<p>Saves the node to the specified <xref href=\\\"System.Xml.XmlWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public override void WriteTo(XmlWriter w)\n    content.vb: Public Overrides Sub WriteTo(w As XmlWriter)\n    parameters:\n    - id: w\n      type: System.Xml.XmlWriter\n      description: \"\\n<p>The <strong>XmlWriter</strong> to which you want to save. </p>\\n\"\n  overridden: System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: XmlCDataSection.WriteTo(XmlWriter)\nreferences:\n- uid: System.Xml\n  isExternal: false\n  name: System.Xml\n  fullName: System.Xml\n  commentId: N:System.Xml\n  nameWithType: System.Xml\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Xml.XmlNode\n  parent: System.Xml\n  isExternal: false\n  name: XmlNode\n  fullName: System.Xml.XmlNode\n  commentId: T:System.Xml.XmlNode\n  nameWithType: XmlNode\n- uid: System.Xml.XmlLinkedNode\n  parent: System.Xml\n  isExternal: false\n  name: XmlLinkedNode\n  fullName: System.Xml.XmlLinkedNode\n  commentId: T:System.Xml.XmlLinkedNode\n  nameWithType: XmlLinkedNode\n- uid: System.Xml.XmlCharacterData\n  parent: System.Xml\n  isExternal: false\n  name: XmlCharacterData\n  fullName: System.Xml.XmlCharacterData\n  commentId: T:System.Xml.XmlCharacterData\n  nameWithType: XmlCharacterData\n- uid: System.Collections.IEnumerable\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerable\n  fullName: System.Collections.IEnumerable\n  commentId: T:System.Collections.IEnumerable\n  nameWithType: IEnumerable\n- uid: System.Xml.XmlCharacterData.Data\n  parent: System.Xml.XmlCharacterData\n  isExternal: false\n  name: Data\n  fullName: System.Xml.XmlCharacterData.Data\n  commentId: P:System.Xml.XmlCharacterData.Data\n  nameWithType: XmlCharacterData.Data\n- uid: System.Xml.XmlCharacterData.Length\n  parent: System.Xml.XmlCharacterData\n  isExternal: false\n  name: Length\n  fullName: System.Xml.XmlCharacterData.Length\n  commentId: P:System.Xml.XmlCharacterData.Length\n  nameWithType: XmlCharacterData.Length\n- uid: System.Xml.XmlCharacterData.Value\n  parent: System.Xml.XmlCharacterData\n  isExternal: false\n  name: Value\n  fullName: System.Xml.XmlCharacterData.Value\n  commentId: P:System.Xml.XmlCharacterData.Value\n  nameWithType: XmlCharacterData.Value\n- uid: System.Xml.XmlCharacterData.AppendData(System.String)\n  parent: System.Xml.XmlCharacterData\n  isExternal: true\n  name: AppendData(String)\n  fullName: System.Xml.XmlCharacterData.AppendData(System.String)\n  spec.csharp:\n  - uid: System.Xml.XmlCharacterData.AppendData(System.String)\n    name: AppendData\n    fullName: System.Xml.XmlCharacterData.AppendData\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlCharacterData.AppendData(System.String)\n    name: AppendData\n    fullName: System.Xml.XmlCharacterData.AppendData\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlCharacterData.AppendData(System.String)\n  nameWithType: XmlCharacterData.AppendData(String)\n- uid: System.Xml.XmlCharacterData.DeleteData(System.Int32,System.Int32)\n  parent: System.Xml.XmlCharacterData\n  isExternal: true\n  name: DeleteData(Int32, Int32)\n  fullName: System.Xml.XmlCharacterData.DeleteData(System.Int32, System.Int32)\n  spec.csharp:\n  - uid: System.Xml.XmlCharacterData.DeleteData(System.Int32,System.Int32)\n    name: DeleteData\n    fullName: System.Xml.XmlCharacterData.DeleteData\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlCharacterData.DeleteData(System.Int32,System.Int32)\n    name: DeleteData\n    fullName: System.Xml.XmlCharacterData.DeleteData\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlCharacterData.DeleteData(System.Int32,System.Int32)\n  nameWithType: XmlCharacterData.DeleteData(Int32, Int32)\n- uid: System.Xml.XmlCharacterData.InsertData(System.Int32,System.String)\n  parent: System.Xml.XmlCharacterData\n  isExternal: true\n  name: InsertData(Int32, String)\n  fullName: System.Xml.XmlCharacterData.InsertData(System.Int32, System.String)\n  spec.csharp:\n  - uid: System.Xml.XmlCharacterData.InsertData(System.Int32,System.String)\n    name: InsertData\n    fullName: System.Xml.XmlCharacterData.InsertData\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlCharacterData.InsertData(System.Int32,System.String)\n    name: InsertData\n    fullName: System.Xml.XmlCharacterData.InsertData\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlCharacterData.InsertData(System.Int32,System.String)\n  nameWithType: XmlCharacterData.InsertData(Int32, String)\n- uid: System.Xml.XmlCharacterData.ReplaceData(System.Int32,System.Int32,System.String)\n  parent: System.Xml.XmlCharacterData\n  isExternal: true\n  name: ReplaceData(Int32, Int32, String)\n  fullName: System.Xml.XmlCharacterData.ReplaceData(System.Int32, System.Int32, System.String)\n  spec.csharp:\n  - uid: System.Xml.XmlCharacterData.ReplaceData(System.Int32,System.Int32,System.String)\n    name: ReplaceData\n    fullName: System.Xml.XmlCharacterData.ReplaceData\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlCharacterData.ReplaceData(System.Int32,System.Int32,System.String)\n    name: ReplaceData\n    fullName: System.Xml.XmlCharacterData.ReplaceData\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlCharacterData.ReplaceData(System.Int32,System.Int32,System.String)\n  nameWithType: XmlCharacterData.ReplaceData(Int32, Int32, String)\n- uid: System.Xml.XmlCharacterData.Substring(System.Int32,System.Int32)\n  parent: System.Xml.XmlCharacterData\n  isExternal: true\n  name: Substring(Int32, Int32)\n  fullName: System.Xml.XmlCharacterData.Substring(System.Int32, System.Int32)\n  spec.csharp:\n  - uid: System.Xml.XmlCharacterData.Substring(System.Int32,System.Int32)\n    name: Substring\n    fullName: System.Xml.XmlCharacterData.Substring\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlCharacterData.Substring(System.Int32,System.Int32)\n    name: Substring\n    fullName: System.Xml.XmlCharacterData.Substring\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlCharacterData.Substring(System.Int32,System.Int32)\n  nameWithType: XmlCharacterData.Substring(Int32, Int32)\n- uid: System.Xml.XmlLinkedNode.NextSibling\n  parent: System.Xml.XmlLinkedNode\n  isExternal: false\n  name: NextSibling\n  fullName: System.Xml.XmlLinkedNode.NextSibling\n  commentId: P:System.Xml.XmlLinkedNode.NextSibling\n  nameWithType: XmlLinkedNode.NextSibling\n- uid: System.Xml.XmlLinkedNode.PreviousSibling\n  parent: System.Xml.XmlLinkedNode\n  isExternal: false\n  name: PreviousSibling\n  fullName: System.Xml.XmlLinkedNode.PreviousSibling\n  commentId: P:System.Xml.XmlLinkedNode.PreviousSibling\n  nameWithType: XmlLinkedNode.PreviousSibling\n- uid: System.Xml.XmlNode.Attributes\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: Attributes\n  fullName: System.Xml.XmlNode.Attributes\n  commentId: P:System.Xml.XmlNode.Attributes\n  nameWithType: XmlNode.Attributes\n- uid: System.Xml.XmlNode.BaseURI\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: BaseURI\n  fullName: System.Xml.XmlNode.BaseURI\n  commentId: P:System.Xml.XmlNode.BaseURI\n  nameWithType: XmlNode.BaseURI\n- uid: System.Xml.XmlNode.ChildNodes\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: ChildNodes\n  fullName: System.Xml.XmlNode.ChildNodes\n  commentId: P:System.Xml.XmlNode.ChildNodes\n  nameWithType: XmlNode.ChildNodes\n- uid: System.Xml.XmlNode.FirstChild\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: FirstChild\n  fullName: System.Xml.XmlNode.FirstChild\n  commentId: P:System.Xml.XmlNode.FirstChild\n  nameWithType: XmlNode.FirstChild\n- uid: System.Xml.XmlNode.HasChildNodes\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: HasChildNodes\n  fullName: System.Xml.XmlNode.HasChildNodes\n  commentId: P:System.Xml.XmlNode.HasChildNodes\n  nameWithType: XmlNode.HasChildNodes\n- uid: System.Xml.XmlNode.InnerText\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: InnerText\n  fullName: System.Xml.XmlNode.InnerText\n  commentId: P:System.Xml.XmlNode.InnerText\n  nameWithType: XmlNode.InnerText\n- uid: System.Xml.XmlNode.InnerXml\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: InnerXml\n  fullName: System.Xml.XmlNode.InnerXml\n  commentId: P:System.Xml.XmlNode.InnerXml\n  nameWithType: XmlNode.InnerXml\n- uid: System.Xml.XmlNode.IsReadOnly\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: IsReadOnly\n  fullName: System.Xml.XmlNode.IsReadOnly\n  commentId: P:System.Xml.XmlNode.IsReadOnly\n  nameWithType: XmlNode.IsReadOnly\n- uid: System.Xml.XmlNode.Item(System.String)\n  parent: System.Xml.XmlNode\n  isExternal: true\n  name: Item[String]\n  fullName: System.Xml.XmlNode.Item[System.String]\n  fullname.vb: System.Xml.XmlNode.Item(System.String)\n  name.vb: Item(String)\n  spec.csharp:\n  - uid: System.Xml.XmlNode.Item(System.String)\n    name: Item\n    fullName: System.Xml.XmlNode.Item\n  - name: '['\n    fullName: '['\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ']'\n    fullName: ']'\n  spec.vb:\n  - uid: System.Xml.XmlNode.Item(System.String)\n    name: Item\n    fullName: System.Xml.XmlNode.Item\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: P:System.Xml.XmlNode.Item(System.String)\n  nameWithType: XmlNode.Item[String]\n  nameWithType.vb: XmlNode.Item(String)\n- uid: System.Xml.XmlNode.Item(System.String,System.String)\n  parent: System.Xml.XmlNode\n  isExternal: true\n  name: Item[String, String]\n  fullName: System.Xml.XmlNode.Item[System.String, System.String]\n  fullname.vb: System.Xml.XmlNode.Item(System.String, System.String)\n  name.vb: Item(String, String)\n  spec.csharp:\n  - uid: System.Xml.XmlNode.Item(System.String,System.String)\n    name: Item\n    fullName: System.Xml.XmlNode.Item\n  - name: '['\n    fullName: '['\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ']'\n    fullName: ']'\n  spec.vb:\n  - uid: System.Xml.XmlNode.Item(System.String,System.String)\n    name: Item\n    fullName: System.Xml.XmlNode.Item\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: P:System.Xml.XmlNode.Item(System.String,System.String)\n  nameWithType: XmlNode.Item[String, String]\n  nameWithType.vb: XmlNode.Item(String, String)\n- uid: System.Xml.XmlNode.LastChild\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: LastChild\n  fullName: System.Xml.XmlNode.LastChild\n  commentId: P:System.Xml.XmlNode.LastChild\n  nameWithType: XmlNode.LastChild\n- uid: System.Xml.XmlNode.NamespaceURI\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: NamespaceURI\n  fullName: System.Xml.XmlNode.NamespaceURI\n  commentId: P:System.Xml.XmlNode.NamespaceURI\n  nameWithType: XmlNode.NamespaceURI\n- uid: System.Xml.XmlNode.OuterXml\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: OuterXml\n  fullName: System.Xml.XmlNode.OuterXml\n  commentId: P:System.Xml.XmlNode.OuterXml\n  nameWithType: XmlNode.OuterXml\n- uid: System.Xml.XmlNode.OwnerDocument\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: OwnerDocument\n  fullName: System.Xml.XmlNode.OwnerDocument\n  commentId: P:System.Xml.XmlNode.OwnerDocument\n  nameWithType: XmlNode.OwnerDocument\n- uid: System.Xml.XmlNode.Prefix\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: Prefix\n  fullName: System.Xml.XmlNode.Prefix\n  commentId: P:System.Xml.XmlNode.Prefix\n  nameWithType: XmlNode.Prefix\n- uid: System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: AppendChild(XmlNode)\n  fullName: System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)\n  spec.csharp:\n  - uid: System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)\n    name: AppendChild\n    fullName: System.Xml.XmlNode.AppendChild\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)\n    name: AppendChild\n    fullName: System.Xml.XmlNode.AppendChild\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)\n  nameWithType: XmlNode.AppendChild(XmlNode)\n- uid: System.Xml.XmlNode.GetEnumerator\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: GetEnumerator()\n  fullName: System.Xml.XmlNode.GetEnumerator()\n  spec.csharp:\n  - uid: System.Xml.XmlNode.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Xml.XmlNode.GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlNode.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Xml.XmlNode.GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlNode.GetEnumerator\n  nameWithType: XmlNode.GetEnumerator()\n- uid: System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)\n  parent: System.Xml.XmlNode\n  isExternal: true\n  name: GetNamespaceOfPrefix(String)\n  fullName: System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)\n  spec.csharp:\n  - uid: System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)\n    name: GetNamespaceOfPrefix\n    fullName: System.Xml.XmlNode.GetNamespaceOfPrefix\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)\n    name: GetNamespaceOfPrefix\n    fullName: System.Xml.XmlNode.GetNamespaceOfPrefix\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)\n  nameWithType: XmlNode.GetNamespaceOfPrefix(String)\n- uid: System.Xml.XmlNode.GetPrefixOfNamespace(System.String)\n  parent: System.Xml.XmlNode\n  isExternal: true\n  name: GetPrefixOfNamespace(String)\n  fullName: System.Xml.XmlNode.GetPrefixOfNamespace(System.String)\n  spec.csharp:\n  - uid: System.Xml.XmlNode.GetPrefixOfNamespace(System.String)\n    name: GetPrefixOfNamespace\n    fullName: System.Xml.XmlNode.GetPrefixOfNamespace\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlNode.GetPrefixOfNamespace(System.String)\n    name: GetPrefixOfNamespace\n    fullName: System.Xml.XmlNode.GetPrefixOfNamespace\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlNode.GetPrefixOfNamespace(System.String)\n  nameWithType: XmlNode.GetPrefixOfNamespace(String)\n- uid: System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: InsertAfter(XmlNode, XmlNode)\n  fullName: System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode, System.Xml.XmlNode)\n  spec.csharp:\n  - uid: System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)\n    name: InsertAfter\n    fullName: System.Xml.XmlNode.InsertAfter\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: ', '\n    fullName: ', '\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)\n    name: InsertAfter\n    fullName: System.Xml.XmlNode.InsertAfter\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: ', '\n    fullName: ', '\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)\n  nameWithType: XmlNode.InsertAfter(XmlNode, XmlNode)\n- uid: System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: InsertBefore(XmlNode, XmlNode)\n  fullName: System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode, System.Xml.XmlNode)\n  spec.csharp:\n  - uid: System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)\n    name: InsertBefore\n    fullName: System.Xml.XmlNode.InsertBefore\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: ', '\n    fullName: ', '\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)\n    name: InsertBefore\n    fullName: System.Xml.XmlNode.InsertBefore\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: ', '\n    fullName: ', '\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)\n  nameWithType: XmlNode.InsertBefore(XmlNode, XmlNode)\n- uid: System.Xml.XmlNode.Normalize\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: Normalize()\n  fullName: System.Xml.XmlNode.Normalize()\n  spec.csharp:\n  - uid: System.Xml.XmlNode.Normalize\n    name: Normalize\n    fullName: System.Xml.XmlNode.Normalize\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlNode.Normalize\n    name: Normalize\n    fullName: System.Xml.XmlNode.Normalize\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlNode.Normalize\n  nameWithType: XmlNode.Normalize()\n- uid: System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: PrependChild(XmlNode)\n  fullName: System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)\n  spec.csharp:\n  - uid: System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)\n    name: PrependChild\n    fullName: System.Xml.XmlNode.PrependChild\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)\n    name: PrependChild\n    fullName: System.Xml.XmlNode.PrependChild\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)\n  nameWithType: XmlNode.PrependChild(XmlNode)\n- uid: System.Xml.XmlNode.RemoveAll\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: RemoveAll()\n  fullName: System.Xml.XmlNode.RemoveAll()\n  spec.csharp:\n  - uid: System.Xml.XmlNode.RemoveAll\n    name: RemoveAll\n    fullName: System.Xml.XmlNode.RemoveAll\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlNode.RemoveAll\n    name: RemoveAll\n    fullName: System.Xml.XmlNode.RemoveAll\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlNode.RemoveAll\n  nameWithType: XmlNode.RemoveAll()\n- uid: System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: RemoveChild(XmlNode)\n  fullName: System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)\n  spec.csharp:\n  - uid: System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)\n    name: RemoveChild\n    fullName: System.Xml.XmlNode.RemoveChild\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)\n    name: RemoveChild\n    fullName: System.Xml.XmlNode.RemoveChild\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)\n  nameWithType: XmlNode.RemoveChild(XmlNode)\n- uid: System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: ReplaceChild(XmlNode, XmlNode)\n  fullName: System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode, System.Xml.XmlNode)\n  spec.csharp:\n  - uid: System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)\n    name: ReplaceChild\n    fullName: System.Xml.XmlNode.ReplaceChild\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: ', '\n    fullName: ', '\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)\n    name: ReplaceChild\n    fullName: System.Xml.XmlNode.ReplaceChild\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: ', '\n    fullName: ', '\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)\n  nameWithType: XmlNode.ReplaceChild(XmlNode, XmlNode)\n- uid: System.Xml.XmlNode.Supports(System.String,System.String)\n  parent: System.Xml.XmlNode\n  isExternal: true\n  name: Supports(String, String)\n  fullName: System.Xml.XmlNode.Supports(System.String, System.String)\n  spec.csharp:\n  - uid: System.Xml.XmlNode.Supports(System.String,System.String)\n    name: Supports\n    fullName: System.Xml.XmlNode.Supports\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlNode.Supports(System.String,System.String)\n    name: Supports\n    fullName: System.Xml.XmlNode.Supports\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlNode.Supports(System.String,System.String)\n  nameWithType: XmlNode.Supports(String, String)\n- uid: System.Xml.XmlNode.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: IEnumerable.GetEnumerator()\n  fullName: System.Xml.XmlNode.System.Collections.IEnumerable.GetEnumerator()\n  name.vb: System.Collections.IEnumerable.GetEnumerator()\n  spec.csharp:\n  - uid: System.Xml.XmlNode.System#Collections#IEnumerable#GetEnumerator\n    name: IEnumerable.GetEnumerator\n    fullName: System.Xml.XmlNode.System.Collections.IEnumerable.GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlNode.System#Collections#IEnumerable#GetEnumerator\n    name: System.Collections.IEnumerable.GetEnumerator\n    fullName: System.Xml.XmlNode.System.Collections.IEnumerable.GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlNode.System#Collections#IEnumerable#GetEnumerator\n  nameWithType: XmlNode.IEnumerable.GetEnumerator()\n  nameWithType.vb: XmlNode.System.Collections.IEnumerable.GetEnumerator()\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System.Collections.IEnumerable.System.Linq.Queryable.AsQueryable\n  parent: System.Linq.Queryable\n  definition: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  name: AsQueryable()\n  fullName: System.Linq.Queryable.AsQueryable()\n  spec.csharp:\n  - uid: System.Linq.Queryable.AsQueryable\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Queryable.AsQueryable\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  nameWithType: Queryable.AsQueryable()\n- uid: System.Collections.IEnumerable.System.Linq.ParallelEnumerable.AsParallel\n  parent: System.Linq.ParallelEnumerable\n  definition: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  name: AsParallel()\n  fullName: System.Linq.ParallelEnumerable.AsParallel()\n  spec.csharp:\n  - uid: System.Linq.ParallelEnumerable.AsParallel\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.ParallelEnumerable.AsParallel\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel()\n- uid: System.Collections.IEnumerable.System.Linq.Enumerable.Cast``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  name: Cast<TResult>()\n  fullName: System.Linq.Enumerable.Cast<TResult>()\n  fullname.vb: System.Linq.Enumerable.Cast(Of TResult)()\n  name.vb: Cast(Of TResult)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Cast``1\n    name: Cast<TResult>\n    fullName: System.Linq.Enumerable.Cast<TResult>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Cast``1\n    name: Cast(Of TResult)\n    fullName: System.Linq.Enumerable.Cast(Of TResult)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>()\n  nameWithType.vb: Enumerable.Cast(Of TResult)()\n- uid: System.Collections.IEnumerable.System.Linq.Enumerable.OfType``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  name: OfType<TResult>()\n  fullName: System.Linq.Enumerable.OfType<TResult>()\n  fullname.vb: System.Linq.Enumerable.OfType(Of TResult)()\n  name.vb: OfType(Of TResult)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OfType``1\n    name: OfType<TResult>\n    fullName: System.Linq.Enumerable.OfType<TResult>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OfType``1\n    name: OfType(Of TResult)\n    fullName: System.Linq.Enumerable.OfType(Of TResult)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>()\n  nameWithType.vb: Enumerable.OfType(Of TResult)()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Collections\n  isExternal: false\n  name: System.Collections\n  fullName: System.Collections\n  commentId: N:System.Collections\n  nameWithType: System.Collections\n- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  isExternal: true\n  name: AsQueryable(IEnumerable)\n  fullName: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  nameWithType: Queryable.AsQueryable(IEnumerable)\n- uid: System.Linq.Queryable\n  parent: System.Linq\n  isExternal: false\n  name: Queryable\n  fullName: System.Linq.Queryable\n  commentId: T:System.Linq.Queryable\n  nameWithType: Queryable\n- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  isExternal: true\n  name: AsParallel(IEnumerable)\n  fullName: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)\n- uid: System.Linq.ParallelEnumerable\n  parent: System.Linq\n  isExternal: false\n  name: ParallelEnumerable\n  fullName: System.Linq.ParallelEnumerable\n  commentId: T:System.Linq.ParallelEnumerable\n  nameWithType: ParallelEnumerable\n- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  isExternal: true\n  name: Cast<TResult>(IEnumerable)\n  fullName: System.Linq.Enumerable.Cast<TResult>(System.Collections.IEnumerable)\n  fullname.vb: System.Linq.Enumerable.Cast(Of TResult)(System.Collections.IEnumerable)\n  name.vb: Cast(Of TResult)(IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n    name: Cast<TResult>\n    fullName: System.Linq.Enumerable.Cast<TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n    name: Cast(Of TResult)\n    fullName: System.Linq.Enumerable.Cast(Of TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>(IEnumerable)\n  nameWithType.vb: Enumerable.Cast(Of TResult)(IEnumerable)\n- uid: System.Linq.Enumerable\n  parent: System.Linq\n  isExternal: false\n  name: Enumerable\n  fullName: System.Linq.Enumerable\n  commentId: T:System.Linq.Enumerable\n  nameWithType: Enumerable\n- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  isExternal: true\n  name: OfType<TResult>(IEnumerable)\n  fullName: System.Linq.Enumerable.OfType<TResult>(System.Collections.IEnumerable)\n  fullname.vb: System.Linq.Enumerable.OfType(Of TResult)(System.Collections.IEnumerable)\n  name.vb: OfType(Of TResult)(IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n    name: OfType<TResult>\n    fullName: System.Linq.Enumerable.OfType<TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n    name: OfType(Of TResult)\n    fullName: System.Linq.Enumerable.OfType(Of TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>(IEnumerable)\n  nameWithType.vb: Enumerable.OfType(Of TResult)(IEnumerable)\n- uid: System.Linq\n  isExternal: false\n  name: System.Linq\n  fullName: System.Linq\n  commentId: N:System.Linq\n  nameWithType: System.Linq\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.Xml.XmlDocument\n  parent: System.Xml\n  isExternal: false\n  name: XmlDocument\n  fullName: System.Xml.XmlDocument\n  commentId: T:System.Xml.XmlDocument\n  nameWithType: XmlDocument\n- uid: System.Xml.XmlNode.LocalName\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: LocalName\n  fullName: System.Xml.XmlNode.LocalName\n  commentId: P:System.Xml.XmlNode.LocalName\n  nameWithType: XmlNode.LocalName\n- uid: System.Xml.XmlNode.Name\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: Name\n  fullName: System.Xml.XmlNode.Name\n  commentId: P:System.Xml.XmlNode.Name\n  nameWithType: XmlNode.Name\n- uid: System.Xml.XmlNode.NodeType\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: NodeType\n  fullName: System.Xml.XmlNode.NodeType\n  commentId: P:System.Xml.XmlNode.NodeType\n  nameWithType: XmlNode.NodeType\n- uid: System.Xml.XmlNodeType\n  parent: System.Xml\n  isExternal: false\n  name: XmlNodeType\n  fullName: System.Xml.XmlNodeType\n  commentId: T:System.Xml.XmlNodeType\n  nameWithType: XmlNodeType\n- uid: System.Xml.XmlNode.ParentNode\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: ParentNode\n  fullName: System.Xml.XmlNode.ParentNode\n  commentId: P:System.Xml.XmlNode.ParentNode\n  nameWithType: XmlNode.ParentNode\n- uid: System.Xml.XmlNode.PreviousText\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: PreviousText\n  fullName: System.Xml.XmlNode.PreviousText\n  commentId: P:System.Xml.XmlNode.PreviousText\n  nameWithType: XmlNode.PreviousText\n- uid: System.Xml.XmlNode.CloneNode(System.Boolean)\n  parent: System.Xml.XmlNode\n  isExternal: true\n  name: CloneNode(Boolean)\n  fullName: System.Xml.XmlNode.CloneNode(System.Boolean)\n  spec.csharp:\n  - uid: System.Xml.XmlNode.CloneNode(System.Boolean)\n    name: CloneNode\n    fullName: System.Xml.XmlNode.CloneNode\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlNode.CloneNode(System.Boolean)\n    name: CloneNode\n    fullName: System.Xml.XmlNode.CloneNode\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlNode.CloneNode(System.Boolean)\n  nameWithType: XmlNode.CloneNode(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.Xml.XmlNode.WriteContentTo(System.Xml.XmlWriter)\n  parent: System.Xml.XmlNode\n  isExternal: true\n  name: WriteContentTo(XmlWriter)\n  fullName: System.Xml.XmlNode.WriteContentTo(System.Xml.XmlWriter)\n  spec.csharp:\n  - uid: System.Xml.XmlNode.WriteContentTo(System.Xml.XmlWriter)\n    name: WriteContentTo\n    fullName: System.Xml.XmlNode.WriteContentTo\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlWriter\n    name: XmlWriter\n    fullName: System.Xml.XmlWriter\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlNode.WriteContentTo(System.Xml.XmlWriter)\n    name: WriteContentTo\n    fullName: System.Xml.XmlNode.WriteContentTo\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlWriter\n    name: XmlWriter\n    fullName: System.Xml.XmlWriter\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlNode.WriteContentTo(System.Xml.XmlWriter)\n  nameWithType: XmlNode.WriteContentTo(XmlWriter)\n- uid: System.Xml.XmlWriter\n  parent: System.Xml\n  isExternal: false\n  name: XmlWriter\n  fullName: System.Xml.XmlWriter\n  commentId: T:System.Xml.XmlWriter\n  nameWithType: XmlWriter\n- uid: System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)\n  parent: System.Xml.XmlNode\n  isExternal: true\n  name: WriteTo(XmlWriter)\n  fullName: System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)\n  spec.csharp:\n  - uid: System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)\n    name: WriteTo\n    fullName: System.Xml.XmlNode.WriteTo\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlWriter\n    name: XmlWriter\n    fullName: System.Xml.XmlWriter\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)\n    name: WriteTo\n    fullName: System.Xml.XmlNode.WriteTo\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlWriter\n    name: XmlWriter\n    fullName: System.Xml.XmlWriter\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)\n  nameWithType: XmlNode.WriteTo(XmlWriter)\n"}