{"nodes":[{"pos":[709,731],"content":"ClientWebSocketOptions","needQuote":true,"nodes":[{"content":"ClientWebSocketOptions","pos":[0,22]}]},{"pos":[2211,2229],"content":"ClientCertificates","needQuote":true,"nodes":[{"content":"ClientCertificates","pos":[0,18]}]},{"pos":[3652,3659],"content":"Cookies","needQuote":true,"nodes":[{"content":"Cookies","pos":[0,7]}]},{"pos":[4927,4938],"content":"Credentials","needQuote":true,"nodes":[{"content":"Credentials","pos":[0,11]}]},{"pos":[6236,6253],"content":"KeepAliveInterval","needQuote":true,"nodes":[{"content":"KeepAliveInterval","pos":[0,17]}]},{"pos":[7555,7560],"content":"Proxy","needQuote":true,"nodes":[{"content":"Proxy","pos":[0,5]}]},{"pos":[8834,8856],"content":"AddSubProtocol(String)","needQuote":true,"nodes":[{"content":"AddSubProtocol(String)","pos":[0,22]}]},{"content":"\\n&lt;p&gt;The WebSocket sub-protocol to add.&lt;/p&gt;\\n","pos":[9657,9702],"source":"\\n<p>The WebSocket sub-protocol to add.</p>\\n"},{"pos":[10170,10202],"content":"SetRequestHeader(String, String)","needQuote":true,"nodes":[{"content":"SetRequestHeader(String, String)","pos":[0,32]}]},{"content":"\\n&lt;p&gt;The name of the HTTP header.&lt;/p&gt;\\n","pos":[11031,11070],"source":"\\n<p>The name of the HTTP header.</p>\\n"},{"content":"\\n&lt;p&gt;The value of the HTTP header.&lt;/p&gt;\\n","pos":[11140,11180],"source":"\\n<p>The value of the HTTP header.</p>\\n"},{"pos":[11381,11402],"content":"System.Net.WebSockets","needQuote":true,"nodes":[{"content":"System.Net.WebSockets","pos":[0,21]}]},{"pos":[11578,11584],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11744,11754],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[11849,11857],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[11926,11927],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11954,11955],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12025,12033],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[12102,12103],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12130,12131],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12314,12328],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[12447,12453],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[12520,12521],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12571,12577],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12637,12638],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12721,12727],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[12794,12795],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12845,12851],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12911,12912],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13126,13148],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[13296,13302],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[13369,13370],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13420,13426],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[13487,13488]},{"pos":[13543,13549],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13609,13610],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13707,13713],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[13780,13781],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13831,13837],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[13898,13899]},{"pos":[13954,13960],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14020,14021],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14266,14297],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[14463,14478],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[14554,14555],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14605,14611],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[14672,14673]},{"pos":[14728,14734],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14794,14795],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14901,14916],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[14992,14993],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15043,15049],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[15110,15111]},{"pos":[15166,15172],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15232,15233],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15463,15476],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[15577,15588],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[15660,15661],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15688,15689],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15762,15773],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[15845,15846],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15873,15874],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16049,16058],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[16151,16158],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[16226,16227],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16254,16255],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16324,16331],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[16399,16400],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16427,16428],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16603,16620],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[16729,16744],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[16820,16821],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16848,16849],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16926,16941],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[17017,17018],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17045,17046],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17191,17197],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[17425,17450],"content":"X509CertificateCollection","needQuote":true,"nodes":[{"content":"X509CertificateCollection","pos":[0,25]}]},{"pos":[17745,17790],"content":"System.Security.Cryptography.X509Certificates","needQuote":true,"nodes":[{"content":"System.Security.Cryptography.X509Certificates","pos":[0,45]}]},{"pos":[18034,18049],"content":"CookieContainer","needQuote":true,"nodes":[{"content":"CookieContainer","pos":[0,15]}]},{"pos":[18243,18255],"content":"ICredentials","needQuote":true,"nodes":[{"content":"ICredentials","pos":[0,12]}]},{"pos":[18406,18416],"content":"System.Net","needQuote":true,"nodes":[{"content":"System.Net","pos":[0,10]}]},{"pos":[18561,18569],"content":"TimeSpan","needQuote":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[18710,18719],"content":"IWebProxy","needQuote":true,"nodes":[{"content":"IWebProxy","pos":[0,9]}]},{"pos":[18881,18887],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"items:\n- uid: System.Net.WebSockets.ClientWebSocketOptions\n  commentId: T:System.Net.WebSockets.ClientWebSocketOptions\n  id: ClientWebSocketOptions\n  parent: System.Net.WebSockets\n  children:\n  - System.Net.WebSockets.ClientWebSocketOptions.AddSubProtocol(System.String)\n  - System.Net.WebSockets.ClientWebSocketOptions.ClientCertificates\n  - System.Net.WebSockets.ClientWebSocketOptions.Cookies\n  - System.Net.WebSockets.ClientWebSocketOptions.Credentials\n  - System.Net.WebSockets.ClientWebSocketOptions.KeepAliveInterval\n  - System.Net.WebSockets.ClientWebSocketOptions.Proxy\n  - System.Net.WebSockets.ClientWebSocketOptions.SetRequestHeader(System.String,System.String)\n  langs:\n  - csharp\n  - vb\n  name: ClientWebSocketOptions\n  fullName: System.Net.WebSockets.ClientWebSocketOptions\n  type: Class\n  source:\n    remote:\n      path: src/System.Net.WebSockets.Client/ref/System.Net.WebSockets.Client.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ClientWebSocketOptions\n    path: src/System.Net.WebSockets.Client/ref/System.Net.WebSockets.Client.cs\n    startLine: 26\n  assemblies:\n  - System.Net.WebSockets.Client\n  namespace: System.Net.WebSockets\n  summary: \"\\n<p>Options to use with a  <xref href=\\\"System.Net.WebSockets.ClientWebSocket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public sealed class ClientWebSocketOptions\n    content.vb: Public NotInheritable Class ClientWebSocketOptions\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: ClientWebSocketOptions\n- uid: System.Net.WebSockets.ClientWebSocketOptions.ClientCertificates\n  commentId: P:System.Net.WebSockets.ClientWebSocketOptions.ClientCertificates\n  id: ClientCertificates\n  parent: System.Net.WebSockets.ClientWebSocketOptions\n  langs:\n  - csharp\n  - vb\n  name: ClientCertificates\n  fullName: System.Net.WebSockets.ClientWebSocketOptions.ClientCertificates\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.WebSockets.Client/ref/System.Net.WebSockets.Client.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ClientCertificates\n    path: src/System.Net.WebSockets.Client/ref/System.Net.WebSockets.Client.cs\n    startLine: 29\n  assemblies:\n  - System.Net.WebSockets.Client\n  namespace: System.Net.WebSockets\n  summary: \"\\n<p>Gets or sets a collection of client side certificates.</p>\\n\"\n  syntax:\n    content: public X509CertificateCollection ClientCertificates { get; set; }\n    content.vb: Public Property ClientCertificates As X509CertificateCollection\n    parameters: []\n    return:\n      type: System.Security.Cryptography.X509Certificates.X509CertificateCollection\n      description: \"\\n<p>Returns <xref href=\\\"System.Security.Cryptography.X509Certificates.X509CertificateCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>A collection of client side certificates.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: ClientWebSocketOptions.ClientCertificates\n- uid: System.Net.WebSockets.ClientWebSocketOptions.Cookies\n  commentId: P:System.Net.WebSockets.ClientWebSocketOptions.Cookies\n  id: Cookies\n  parent: System.Net.WebSockets.ClientWebSocketOptions\n  langs:\n  - csharp\n  - vb\n  name: Cookies\n  fullName: System.Net.WebSockets.ClientWebSocketOptions.Cookies\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.WebSockets.Client/ref/System.Net.WebSockets.Client.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Cookies\n    path: src/System.Net.WebSockets.Client/ref/System.Net.WebSockets.Client.cs\n    startLine: 30\n  assemblies:\n  - System.Net.WebSockets.Client\n  namespace: System.Net.WebSockets\n  summary: \"\\n<p>Gets or sets the cookies associated with the request.</p>\\n\"\n  syntax:\n    content: public CookieContainer Cookies { get; set; }\n    content.vb: Public Property Cookies As CookieContainer\n    parameters: []\n    return:\n      type: System.Net.CookieContainer\n      description: \"\\n<p>Returns <xref href=\\\"System.Net.CookieContainer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>The cookies associated with the request.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: ClientWebSocketOptions.Cookies\n- uid: System.Net.WebSockets.ClientWebSocketOptions.Credentials\n  commentId: P:System.Net.WebSockets.ClientWebSocketOptions.Credentials\n  id: Credentials\n  parent: System.Net.WebSockets.ClientWebSocketOptions\n  langs:\n  - csharp\n  - vb\n  name: Credentials\n  fullName: System.Net.WebSockets.ClientWebSocketOptions.Credentials\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.WebSockets.Client/ref/System.Net.WebSockets.Client.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Credentials\n    path: src/System.Net.WebSockets.Client/ref/System.Net.WebSockets.Client.cs\n    startLine: 31\n  assemblies:\n  - System.Net.WebSockets.Client\n  namespace: System.Net.WebSockets\n  summary: \"\\n<p>Gets or sets the credential information for the client.</p>\\n\"\n  syntax:\n    content: public ICredentials Credentials { get; set; }\n    content.vb: Public Property Credentials As ICredentials\n    parameters: []\n    return:\n      type: System.Net.ICredentials\n      description: \"\\n<p>Returns <xref href=\\\"System.Net.ICredentials\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>The credential information for the client.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: ClientWebSocketOptions.Credentials\n- uid: System.Net.WebSockets.ClientWebSocketOptions.KeepAliveInterval\n  commentId: P:System.Net.WebSockets.ClientWebSocketOptions.KeepAliveInterval\n  id: KeepAliveInterval\n  parent: System.Net.WebSockets.ClientWebSocketOptions\n  langs:\n  - csharp\n  - vb\n  name: KeepAliveInterval\n  fullName: System.Net.WebSockets.ClientWebSocketOptions.KeepAliveInterval\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.WebSockets.Client/ref/System.Net.WebSockets.Client.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: KeepAliveInterval\n    path: src/System.Net.WebSockets.Client/ref/System.Net.WebSockets.Client.cs\n    startLine: 32\n  assemblies:\n  - System.Net.WebSockets.Client\n  namespace: System.Net.WebSockets\n  summary: \"\\n<p>Gets or sets the WebSocket protocol keep-alive interval in milliseconds.</p>\\n\"\n  syntax:\n    content: public TimeSpan KeepAliveInterval { get; set; }\n    content.vb: Public Property KeepAliveInterval As TimeSpan\n    parameters: []\n    return:\n      type: System.TimeSpan\n      description: \"\\n<p>Returns <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>The WebSocket protocol keep-alive interval in milliseconds.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: ClientWebSocketOptions.KeepAliveInterval\n- uid: System.Net.WebSockets.ClientWebSocketOptions.Proxy\n  commentId: P:System.Net.WebSockets.ClientWebSocketOptions.Proxy\n  id: Proxy\n  parent: System.Net.WebSockets.ClientWebSocketOptions\n  langs:\n  - csharp\n  - vb\n  name: Proxy\n  fullName: System.Net.WebSockets.ClientWebSocketOptions.Proxy\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.WebSockets.Client/ref/System.Net.WebSockets.Client.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Proxy\n    path: src/System.Net.WebSockets.Client/ref/System.Net.WebSockets.Client.cs\n    startLine: 33\n  assemblies:\n  - System.Net.WebSockets.Client\n  namespace: System.Net.WebSockets\n  summary: \"\\n<p>Gets or sets the proxy for WebSocket requests.</p>\\n\"\n  syntax:\n    content: public IWebProxy Proxy { get; set; }\n    content.vb: Public Property Proxy As IWebProxy\n    parameters: []\n    return:\n      type: System.Net.IWebProxy\n      description: \"\\n<p>Returns <xref href=\\\"System.Net.IWebProxy\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>The proxy for WebSocket requests.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: ClientWebSocketOptions.Proxy\n- uid: System.Net.WebSockets.ClientWebSocketOptions.AddSubProtocol(System.String)\n  commentId: M:System.Net.WebSockets.ClientWebSocketOptions.AddSubProtocol(System.String)\n  id: AddSubProtocol(System.String)\n  parent: System.Net.WebSockets.ClientWebSocketOptions\n  langs:\n  - csharp\n  - vb\n  name: AddSubProtocol(String)\n  fullName: System.Net.WebSockets.ClientWebSocketOptions.AddSubProtocol(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.WebSockets.Client/ref/System.Net.WebSockets.Client.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AddSubProtocol\n    path: src/System.Net.WebSockets.Client/ref/System.Net.WebSockets.Client.cs\n    startLine: 34\n  assemblies:\n  - System.Net.WebSockets.Client\n  namespace: System.Net.WebSockets\n  summary: \"\\n<p>Adds a sub-protocol to be negotiated during the WebSocket connection handshake.</p>\\n\"\n  syntax:\n    content: public void AddSubProtocol(string subProtocol)\n    content.vb: Public Sub AddSubProtocol(subProtocol As String)\n    parameters:\n    - id: subProtocol\n      type: System.String\n      description: \"\\n<p>The WebSocket sub-protocol to add.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: ClientWebSocketOptions.AddSubProtocol(String)\n- uid: System.Net.WebSockets.ClientWebSocketOptions.SetRequestHeader(System.String,System.String)\n  commentId: M:System.Net.WebSockets.ClientWebSocketOptions.SetRequestHeader(System.String,System.String)\n  id: SetRequestHeader(System.String,System.String)\n  parent: System.Net.WebSockets.ClientWebSocketOptions\n  langs:\n  - csharp\n  - vb\n  name: SetRequestHeader(String, String)\n  fullName: System.Net.WebSockets.ClientWebSocketOptions.SetRequestHeader(System.String, System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.WebSockets.Client/ref/System.Net.WebSockets.Client.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetRequestHeader\n    path: src/System.Net.WebSockets.Client/ref/System.Net.WebSockets.Client.cs\n    startLine: 35\n  assemblies:\n  - System.Net.WebSockets.Client\n  namespace: System.Net.WebSockets\n  summary: \"\\n<p>Creates a HTTP request header and its value.</p>\\n\"\n  syntax:\n    content: public void SetRequestHeader(string headerName, string headerValue)\n    content.vb: Public Sub SetRequestHeader(headerName As String, headerValue As String)\n    parameters:\n    - id: headerName\n      type: System.String\n      description: \"\\n<p>The name of the HTTP header.</p>\\n\"\n    - id: headerValue\n      type: System.String\n      description: \"\\n<p>The value of the HTTP header.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: ClientWebSocketOptions.SetRequestHeader(String, String)\nreferences:\n- uid: System.Net.WebSockets\n  isExternal: false\n  name: System.Net.WebSockets\n  fullName: System.Net.WebSockets\n  commentId: N:System.Net.WebSockets\n  nameWithType: System.Net.WebSockets\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509CertificateCollection\n  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection\n  commentId: T:System.Security.Cryptography.X509Certificates.X509CertificateCollection\n  nameWithType: X509CertificateCollection\n- uid: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: System.Security.Cryptography.X509Certificates\n  fullName: System.Security.Cryptography.X509Certificates\n  commentId: N:System.Security.Cryptography.X509Certificates\n  nameWithType: System.Security.Cryptography.X509Certificates\n- uid: System.Net.CookieContainer\n  isExternal: false\n  name: CookieContainer\n  fullName: System.Net.CookieContainer\n  commentId: T:System.Net.CookieContainer\n  nameWithType: CookieContainer\n- uid: System.Net.ICredentials\n  parent: System.Net\n  isExternal: false\n  name: ICredentials\n  fullName: System.Net.ICredentials\n  commentId: T:System.Net.ICredentials\n  nameWithType: ICredentials\n- uid: System.Net\n  isExternal: false\n  name: System.Net\n  fullName: System.Net\n  commentId: N:System.Net\n  nameWithType: System.Net\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  fullName: System.TimeSpan\n  commentId: T:System.TimeSpan\n  nameWithType: TimeSpan\n- uid: System.Net.IWebProxy\n  isExternal: false\n  name: IWebProxy\n  fullName: System.Net.IWebProxy\n  commentId: T:System.Net.IWebProxy\n  nameWithType: IWebProxy\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n"}