{"nodes":[{"pos":[5347,5355],"content":"XElement","needQuote":true,"nodes":[{"content":"XElement","pos":[0,8]}]},{"pos":[9443,9461],"content":"XElement(XElement)","needQuote":true,"nodes":[{"content":"XElement(XElement)","pos":[0,18]}]},{"pos":[10784,10799],"content":"XElement(XName)","needQuote":true,"nodes":[{"content":"XElement(XName)","pos":[0,15]}]},{"pos":[12081,12104],"content":"XElement(XName, Object)","needQuote":true,"nodes":[{"content":"XElement(XName, Object)","pos":[0,23]}]},{"content":"\\n&lt;p&gt;The contents of the element.&lt;/p&gt;\\n","pos":[13126,13165],"source":"\\n<p>The contents of the element.</p>\\n"},{"pos":[13559,13584],"content":"XElement(XName, Object[])","needQuote":true,"nodes":[{"content":"XElement(XName, Object[])","pos":[0,25]}]},{"content":"\\n&lt;p&gt;The initial content of the element.&lt;/p&gt;\\n","pos":[14632,14678],"source":"\\n<p>The initial content of the element.</p>\\n"},{"pos":[15242,15269],"content":"XElement(XStreamingElement)","needQuote":true,"nodes":[{"content":"XElement(XStreamingElement)","pos":[0,27]}]},{"pos":[16749,16762],"content":"EmptySequence","needQuote":true,"nodes":[{"content":"EmptySequence","pos":[0,13]}]},{"pos":[18094,18108],"content":"FirstAttribute","needQuote":true,"nodes":[{"content":"FirstAttribute","pos":[0,14]}]},{"pos":[19261,19274],"content":"HasAttributes","needQuote":true,"nodes":[{"content":"HasAttributes","pos":[0,13]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if this element has at least one attribute; otherwise &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[19971,20083],"source":"\\n<p>\\n<strong>true</strong> if this element has at least one attribute; otherwise <strong>false</strong>.</p>\\n"},{"pos":[20387,20398],"content":"HasElements","needQuote":true,"nodes":[{"content":"HasElements","pos":[0,11]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if this element has at least one child element; otherwise &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[21091,21207],"source":"\\n<p>\\n<strong>true</strong> if this element has at least one child element; otherwise <strong>false</strong>.</p>\\n"},{"pos":[21497,21504],"content":"IsEmpty","needQuote":true,"nodes":[{"content":"IsEmpty","pos":[0,7]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if this element contains no content; otherwise &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[22170,22275],"source":"\\n<p>\\n<strong>true</strong> if this element contains no content; otherwise <strong>false</strong>.</p>\\n"},{"pos":[22579,22592],"content":"LastAttribute","needQuote":true,"nodes":[{"content":"LastAttribute","pos":[0,13]}]},{"pos":[23711,23715],"content":"Name","needQuote":true,"nodes":[{"content":"Name","pos":[0,4]}]},{"pos":[24760,24768],"content":"NodeType","needQuote":true,"nodes":[{"content":"NodeType","pos":[0,8]}]},{"pos":[26028,26033],"content":"Value","needQuote":true,"nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[27190,27208],"content":"AncestorsAndSelf()","needQuote":true,"nodes":[{"content":"AncestorsAndSelf()","pos":[0,18]}]},{"pos":[28740,28763],"content":"AncestorsAndSelf(XName)","needQuote":true,"nodes":[{"content":"AncestorsAndSelf(XName)","pos":[0,23]}]},{"pos":[30811,30827],"content":"Attribute(XName)","needQuote":true,"nodes":[{"content":"Attribute(XName)","pos":[0,16]}]},{"pos":[32611,32623],"content":"Attributes()","needQuote":true,"nodes":[{"content":"Attributes()","pos":[0,12]}]},{"pos":[34035,34052],"content":"Attributes(XName)","needQuote":true,"nodes":[{"content":"Attributes(XName)","pos":[0,17]}]},{"pos":[35887,35911],"content":"DescendantNodesAndSelf()","needQuote":true,"nodes":[{"content":"DescendantNodesAndSelf()","pos":[0,24]}]},{"pos":[37331,37351],"content":"DescendantsAndSelf()","needQuote":true,"nodes":[{"content":"DescendantsAndSelf()","pos":[0,20]}]},{"pos":[38853,38878],"content":"DescendantsAndSelf(XName)","needQuote":true,"nodes":[{"content":"DescendantsAndSelf(XName)","pos":[0,25]}]},{"pos":[40853,40874],"content":"GetDefaultNamespace()","needQuote":true,"nodes":[{"content":"GetDefaultNamespace()","pos":[0,21]}]},{"pos":[42299,42327],"content":"GetNamespaceOfPrefix(String)","needQuote":true,"nodes":[{"content":"GetNamespaceOfPrefix(String)","pos":[0,28]}]},{"content":"\\n&lt;p&gt;A string that contains the namespace prefix to look up.&lt;/p&gt;\\n","pos":[43167,43233],"source":"\\n<p>A string that contains the namespace prefix to look up.</p>\\n"},{"pos":[43955,43987],"content":"GetPrefixOfNamespace(XNamespace)","needQuote":true,"nodes":[{"content":"GetPrefixOfNamespace(XNamespace)","pos":[0,32]}]},{"pos":[45459,45471],"content":"Load(Stream)","needQuote":true,"nodes":[{"content":"Load(Stream)","pos":[0,12]}]},{"content":"\\n&lt;p&gt;The stream that contains the XML data.&lt;/p&gt;\\n","pos":[46252,46301],"source":"\\n<p>The stream that contains the XML data.</p>\\n"},{"pos":[46953,46978],"content":"Load(Stream, LoadOptions)","needQuote":true,"nodes":[{"content":"Load(Stream, LoadOptions)","pos":[0,25]}]},{"content":"\\n&lt;p&gt;The stream containing the XML data.&lt;/p&gt;\\n","pos":[47922,47968],"source":"\\n<p>The stream containing the XML data.</p>\\n"},{"pos":[48803,48819],"content":"Load(TextReader)","needQuote":true,"nodes":[{"content":"Load(TextReader)","pos":[0,16]}]},{"pos":[50629,50658],"content":"Load(TextReader, LoadOptions)","needQuote":true,"nodes":[{"content":"Load(TextReader, LoadOptions)","pos":[0,29]}]},{"pos":[52784,52796],"content":"Load(String)","needQuote":true,"nodes":[{"content":"Load(String)","pos":[0,12]}]},{"pos":[54565,54590],"content":"Load(String, LoadOptions)","needQuote":true,"nodes":[{"content":"Load(String, LoadOptions)","pos":[0,25]}]},{"pos":[56482,56497],"content":"Load(XmlReader)","needQuote":true,"nodes":[{"content":"Load(XmlReader)","pos":[0,15]}]},{"pos":[58300,58328],"content":"Load(XmlReader, LoadOptions)","needQuote":true,"nodes":[{"content":"Load(XmlReader, LoadOptions)","pos":[0,28]}]},{"pos":[60568,60597],"content":"Explicit(XElement to Boolean)","needQuote":true,"nodes":[{"content":"Explicit(XElement to Boolean)","pos":[0,29]}]},{"content":"\\n&lt;p&gt;The &lt;em&gt;element&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[62373,62440],"source":"\\n<p>The <em>element</em> parameter is <strong>null</strong>.</p>\\n"},{"pos":[63257,63287],"content":"Explicit(XElement to DateTime)","needQuote":true,"nodes":[{"content":"Explicit(XElement to DateTime)","pos":[0,30]}]},{"content":"\\n&lt;p&gt;The &lt;em&gt;element&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[65069,65136],"source":"\\n<p>The <em>element</em> parameter is <strong>null</strong>.</p>\\n"},{"pos":[65975,66011],"content":"Explicit(XElement to DateTimeOffset)","needQuote":true,"nodes":[{"content":"Explicit(XElement to DateTimeOffset)","pos":[0,36]}]},{"content":"\\n&lt;p&gt;The &lt;em&gt;element&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[67847,67914],"source":"\\n<p>The <em>element</em> parameter is <strong>null</strong>.</p>\\n"},{"pos":[68756,68785],"content":"Explicit(XElement to Decimal)","needQuote":true,"nodes":[{"content":"Explicit(XElement to Decimal)","pos":[0,29]}]},{"content":"\\n&lt;p&gt;The &lt;em&gt;element&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[70564,70631],"source":"\\n<p>The <em>element</em> parameter is <strong>null</strong>.</p>\\n"},{"pos":[71442,71470],"content":"Explicit(XElement to Double)","needQuote":true,"nodes":[{"content":"Explicit(XElement to Double)","pos":[0,28]}]},{"content":"\\n&lt;p&gt;The &lt;em&gt;element&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[73241,73308],"source":"\\n<p>The <em>element</em> parameter is <strong>null</strong>.</p>\\n"},{"pos":[74109,74135],"content":"Explicit(XElement to Guid)","needQuote":true,"nodes":[{"content":"Explicit(XElement to Guid)","pos":[0,26]}]},{"content":"\\n&lt;p&gt;The &lt;em&gt;element&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[75889,75956],"source":"\\n<p>The <em>element</em> parameter is <strong>null</strong>.</p>\\n"},{"pos":[76752,76779],"content":"Explicit(XElement to Int32)","needQuote":true,"nodes":[{"content":"Explicit(XElement to Int32)","pos":[0,27]}]},{"content":"\\n&lt;p&gt;The &lt;em&gt;element&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[78543,78610],"source":"\\n<p>The <em>element</em> parameter is <strong>null</strong>.</p>\\n"},{"pos":[79410,79437],"content":"Explicit(XElement to Int64)","needQuote":true,"nodes":[{"content":"Explicit(XElement to Int64)","pos":[0,27]}]},{"content":"\\n&lt;p&gt;The &lt;em&gt;element&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[81199,81266],"source":"\\n<p>The <em>element</em> parameter is <strong>null</strong>.</p>\\n"},{"pos":[82123,82162],"content":"Explicit(XElement to Nullable<Boolean>)","needQuote":true,"nodes":[{"content":"Explicit(XElement to Nullable&lt;Boolean&gt;)","pos":[0,39],"source":"Explicit(XElement to Nullable<Boolean>)"}]},{"pos":[85037,85077],"content":"Explicit(XElement to Nullable<DateTime>)","needQuote":true,"nodes":[{"content":"Explicit(XElement to Nullable&lt;DateTime&gt;)","pos":[0,40],"source":"Explicit(XElement to Nullable<DateTime>)"}]},{"pos":[87980,88026],"content":"Explicit(XElement to Nullable<DateTimeOffset>)","needQuote":true,"nodes":[{"content":"Explicit(XElement to Nullable&lt;DateTimeOffset&gt;)","pos":[0,46],"source":"Explicit(XElement to Nullable<DateTimeOffset>)"}]},{"pos":[90987,91026],"content":"Explicit(XElement to Nullable<Decimal>)","needQuote":true,"nodes":[{"content":"Explicit(XElement to Nullable&lt;Decimal&gt;)","pos":[0,39],"source":"Explicit(XElement to Nullable<Decimal>)"}]},{"pos":[93898,93936],"content":"Explicit(XElement to Nullable<Double>)","needQuote":true,"nodes":[{"content":"Explicit(XElement to Nullable&lt;Double&gt;)","pos":[0,38],"source":"Explicit(XElement to Nullable<Double>)"}]},{"pos":[96790,96826],"content":"Explicit(XElement to Nullable<Guid>)","needQuote":true,"nodes":[{"content":"Explicit(XElement to Nullable&lt;Guid&gt;)","pos":[0,36],"source":"Explicit(XElement to Nullable<Guid>)"}]},{"pos":[99658,99695],"content":"Explicit(XElement to Nullable<Int32>)","needQuote":true,"nodes":[{"content":"Explicit(XElement to Nullable&lt;Int32&gt;)","pos":[0,37],"source":"Explicit(XElement to Nullable<Int32>)"}]},{"pos":[102540,102577],"content":"Explicit(XElement to Nullable<Int64>)","needQuote":true,"nodes":[{"content":"Explicit(XElement to Nullable&lt;Int64&gt;)","pos":[0,37],"source":"Explicit(XElement to Nullable<Int64>)"}]},{"pos":[105423,105461],"content":"Explicit(XElement to Nullable<Single>)","needQuote":true,"nodes":[{"content":"Explicit(XElement to Nullable&lt;Single&gt;)","pos":[0,38],"source":"Explicit(XElement to Nullable<Single>)"}]},{"pos":[108326,108366],"content":"Explicit(XElement to Nullable<TimeSpan>)","needQuote":true,"nodes":[{"content":"Explicit(XElement to Nullable&lt;TimeSpan&gt;)","pos":[0,40],"source":"Explicit(XElement to Nullable<TimeSpan>)"}]},{"pos":[111249,111287],"content":"Explicit(XElement to Nullable<UInt32>)","needQuote":true,"nodes":[{"content":"Explicit(XElement to Nullable&lt;UInt32&gt;)","pos":[0,38],"source":"Explicit(XElement to Nullable<UInt32>)"}]},{"pos":[114147,114185],"content":"Explicit(XElement to Nullable<UInt64>)","needQuote":true,"nodes":[{"content":"Explicit(XElement to Nullable&lt;UInt64&gt;)","pos":[0,38],"source":"Explicit(XElement to Nullable<UInt64>)"}]},{"pos":[116992,117020],"content":"Explicit(XElement to Single)","needQuote":true,"nodes":[{"content":"Explicit(XElement to Single)","pos":[0,28]}]},{"content":"\\n&lt;p&gt;The &lt;em&gt;element&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[118790,118857],"source":"\\n<p>The <em>element</em> parameter is <strong>null</strong>.</p>\\n"},{"pos":[119664,119692],"content":"Explicit(XElement to String)","needQuote":true,"nodes":[{"content":"Explicit(XElement to String)","pos":[0,28]}]},{"pos":[121936,121966],"content":"Explicit(XElement to TimeSpan)","needQuote":true,"nodes":[{"content":"Explicit(XElement to TimeSpan)","pos":[0,30]}]},{"content":"\\n&lt;p&gt;The &lt;em&gt;element&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[123752,123819],"source":"\\n<p>The <em>element</em> parameter is <strong>null</strong>.</p>\\n"},{"pos":[124634,124662],"content":"Explicit(XElement to UInt32)","needQuote":true,"nodes":[{"content":"Explicit(XElement to UInt32)","pos":[0,28]}]},{"content":"\\n&lt;p&gt;The &lt;em&gt;element&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[126433,126500],"source":"\\n<p>The <em>element</em> parameter is <strong>null</strong>.</p>\\n"},{"pos":[127307,127335],"content":"Explicit(XElement to UInt64)","needQuote":true,"nodes":[{"content":"Explicit(XElement to UInt64)","pos":[0,28]}]},{"content":"\\n&lt;p&gt;The &lt;em&gt;element&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[129104,129171],"source":"\\n<p>The <em>element</em> parameter is <strong>null</strong>.</p>\\n"},{"pos":[129885,129898],"content":"Parse(String)","needQuote":true,"nodes":[{"content":"Parse(String)","pos":[0,13]}]},{"pos":[131393,131419],"content":"Parse(String, LoadOptions)","needQuote":true,"nodes":[{"content":"Parse(String, LoadOptions)","pos":[0,26]}]},{"pos":[133218,133229],"content":"RemoveAll()","needQuote":true,"nodes":[{"content":"RemoveAll()","pos":[0,11]}]},{"pos":[134373,134391],"content":"RemoveAttributes()","needQuote":true,"nodes":[{"content":"RemoveAttributes()","pos":[0,18]}]},{"pos":[135581,135599],"content":"ReplaceAll(Object)","needQuote":true,"nodes":[{"content":"ReplaceAll(Object)","pos":[0,18]}]},{"content":"\\n&lt;p&gt;The content that will replace the child nodes and attributes of this element.&lt;/p&gt;\\n","pos":[136315,136403],"source":"\\n<p>The content that will replace the child nodes and attributes of this element.</p>\\n"},{"pos":[136739,136759],"content":"ReplaceAll(Object[])","needQuote":true,"nodes":[{"content":"ReplaceAll(Object[])","pos":[0,20]}]},{"content":"\\n&lt;p&gt;A parameter list of content objects.&lt;/p&gt;\\n","pos":[137501,137548],"source":"\\n<p>A parameter list of content objects.</p>\\n"},{"pos":[138050,138075],"content":"ReplaceAttributes(Object)","needQuote":true,"nodes":[{"content":"ReplaceAttributes(Object)","pos":[0,25]}]},{"content":"\\n&lt;p&gt;The content that will replace the attributes of this element.&lt;/p&gt;\\n","pos":[138799,138871],"source":"\\n<p>The content that will replace the attributes of this element.</p>\\n"},{"pos":[139235,139262],"content":"ReplaceAttributes(Object[])","needQuote":true,"nodes":[{"content":"ReplaceAttributes(Object[])","pos":[0,27]}]},{"content":"\\n&lt;p&gt;A parameter list of content objects.&lt;/p&gt;\\n","pos":[140012,140059],"source":"\\n<p>A parameter list of content objects.</p>\\n"},{"pos":[140559,140571],"content":"Save(Stream)","needQuote":true,"nodes":[{"content":"Save(Stream)","pos":[0,12]}]},{"pos":[141895,141920],"content":"Save(Stream, SaveOptions)","needQuote":true,"nodes":[{"content":"Save(Stream, SaveOptions)","pos":[0,25]}]},{"pos":[143525,143541],"content":"Save(TextWriter)","needQuote":true,"nodes":[{"content":"Save(TextWriter)","pos":[0,16]}]},{"pos":[144908,144937],"content":"Save(TextWriter, SaveOptions)","needQuote":true,"nodes":[{"content":"Save(TextWriter, SaveOptions)","pos":[0,29]}]},{"pos":[146466,146481],"content":"Save(XmlWriter)","needQuote":true,"nodes":[{"content":"Save(XmlWriter)","pos":[0,15]}]},{"pos":[147834,147866],"content":"SetAttributeValue(XName, Object)","needQuote":true,"nodes":[{"content":"SetAttributeValue(XName, Object)","pos":[0,32]}]},{"pos":[150291,150321],"content":"SetElementValue(XName, Object)","needQuote":true,"nodes":[{"content":"SetElementValue(XName, Object)","pos":[0,30]}]},{"pos":[152671,152687],"content":"SetValue(Object)","needQuote":true,"nodes":[{"content":"SetValue(Object)","pos":[0,16]}]},{"content":"\\n&lt;p&gt;The &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[153672,153727],"source":"\\n<p>The <em>value</em> is <strong>null</strong>.</p>\\n"},{"pos":[154736,154754],"content":"WriteTo(XmlWriter)","needQuote":true,"nodes":[{"content":"WriteTo(XmlWriter)","pos":[0,18]}]},{"pos":[155902,155917],"content":"System.Xml.Linq","needQuote":true,"nodes":[{"content":"System.Xml.Linq","pos":[0,15]}]},{"pos":[156075,156081],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[156245,156252],"content":"XObject","needQuote":true,"nodes":[{"content":"XObject","pos":[0,7]}]},{"pos":[156435,156440],"content":"XNode","needQuote":true,"nodes":[{"content":"XNode","pos":[0,5]}]},{"pos":[156622,156632],"content":"XContainer","needQuote":true,"nodes":[{"content":"XContainer","pos":[0,10]}]},{"pos":[156818,156834],"content":"IXmlSerializable","needQuote":true,"nodes":[{"content":"IXmlSerializable","pos":[0,16]}]},{"pos":[157088,157097],"content":"FirstNode","needQuote":true,"nodes":[{"content":"FirstNode","pos":[0,9]}]},{"pos":[157344,157352],"content":"LastNode","needQuote":true,"nodes":[{"content":"LastNode","pos":[0,8]}]},{"pos":[157605,157616],"content":"Add(Object)","needQuote":true,"nodes":[{"content":"Add(Object)","pos":[0,11]}]},{"pos":[157755,157758],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[157814,157815],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[157865,157871],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[157931,157932],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[158025,158028],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[158084,158085],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[158135,158141],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[158201,158202],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[158438,158451],"content":"Add(Object[])","needQuote":true,"nodes":[{"content":"Add(Object[])","pos":[0,13]}]},{"pos":[158682,158685],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[158741,158742],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[158792,158798],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":"[]","pos":[158859,158861]},{"pos":[158892,158893],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[158988,158991],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[159047,159048],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[159098,159104],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[159164,159166],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[159194,159195],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[159482,159498],"content":"AddFirst(Object)","needQuote":true,"nodes":[{"content":"AddFirst(Object)","pos":[0,16]}]},{"pos":[159647,159655],"content":"AddFirst","needQuote":true,"nodes":[{"content":"AddFirst","pos":[0,8]}]},{"pos":[159716,159717],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[159767,159773],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[159833,159834],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[159932,159940],"content":"AddFirst","needQuote":true,"nodes":[{"content":"AddFirst","pos":[0,8]}]},{"pos":[160001,160002],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[160052,160058],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[160118,160119],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[160370,160388],"content":"AddFirst(Object[])","needQuote":true,"nodes":[{"content":"AddFirst(Object[])","pos":[0,18]}]},{"pos":[160639,160647],"content":"AddFirst","needQuote":true,"nodes":[{"content":"AddFirst","pos":[0,8]}]},{"pos":[160708,160709],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[160759,160765],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":"[]","pos":[160826,160828]},{"pos":[160859,160860],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[160960,160968],"content":"AddFirst","needQuote":true,"nodes":[{"content":"AddFirst","pos":[0,8]}]},{"pos":[161029,161030],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[161080,161086],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[161146,161148],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[161176,161177],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[161469,161483],"content":"CreateWriter()","needQuote":true,"nodes":[{"content":"CreateWriter()","pos":[0,14]}]},{"pos":[161612,161624],"content":"CreateWriter","needQuote":true,"nodes":[{"content":"CreateWriter","pos":[0,12]}]},{"pos":[161689,161690],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[161717,161718],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[161805,161817],"content":"CreateWriter","needQuote":true,"nodes":[{"content":"CreateWriter","pos":[0,12]}]},{"pos":[161882,161883],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[161910,161911],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[162140,162157],"content":"DescendantNodes()","needQuote":true,"nodes":[{"content":"DescendantNodes()","pos":[0,17]}]},{"pos":[162292,162307],"content":"DescendantNodes","needQuote":true,"nodes":[{"content":"DescendantNodes","pos":[0,15]}]},{"pos":[162375,162376],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[162403,162404],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[162494,162509],"content":"DescendantNodes","needQuote":true,"nodes":[{"content":"DescendantNodes","pos":[0,15]}]},{"pos":[162577,162578],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[162605,162606],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[162837,162850],"content":"Descendants()","needQuote":true,"nodes":[{"content":"Descendants()","pos":[0,13]}]},{"pos":[162977,162988],"content":"Descendants","needQuote":true,"nodes":[{"content":"Descendants","pos":[0,11]}]},{"pos":[163052,163053],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[163080,163081],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[163167,163178],"content":"Descendants","needQuote":true,"nodes":[{"content":"Descendants","pos":[0,11]}]},{"pos":[163242,163243],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[163270,163271],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[163517,163535],"content":"Descendants(XName)","needQuote":true,"nodes":[{"content":"Descendants(XName)","pos":[0,18]}]},{"pos":[163706,163717],"content":"Descendants","needQuote":true,"nodes":[{"content":"Descendants","pos":[0,11]}]},{"pos":[163781,163782],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[163840,163845],"content":"XName","needQuote":true,"nodes":[{"content":"XName","pos":[0,5]}]},{"pos":[163892,163893],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[164002,164013],"content":"Descendants","needQuote":true,"nodes":[{"content":"Descendants","pos":[0,11]}]},{"pos":[164077,164078],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[164136,164141],"content":"XName","needQuote":true,"nodes":[{"content":"XName","pos":[0,5]}]},{"pos":[164188,164189],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[164459,164473],"content":"Element(XName)","needQuote":true,"nodes":[{"content":"Element(XName)","pos":[0,14]}]},{"pos":[164636,164643],"content":"Element","needQuote":true,"nodes":[{"content":"Element","pos":[0,7]}]},{"pos":[164703,164704],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[164762,164767],"content":"XName","needQuote":true,"nodes":[{"content":"XName","pos":[0,5]}]},{"pos":[164814,164815],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[164920,164927],"content":"Element","needQuote":true,"nodes":[{"content":"Element","pos":[0,7]}]},{"pos":[164987,164988],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[165046,165051],"content":"XName","needQuote":true,"nodes":[{"content":"XName","pos":[0,5]}]},{"pos":[165098,165099],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[165339,165349],"content":"Elements()","needQuote":true,"nodes":[{"content":"Elements()","pos":[0,10]}]},{"pos":[165470,165478],"content":"Elements","needQuote":true,"nodes":[{"content":"Elements","pos":[0,8]}]},{"pos":[165539,165540],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[165567,165568],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[165651,165659],"content":"Elements","needQuote":true,"nodes":[{"content":"Elements","pos":[0,8]}]},{"pos":[165720,165721],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[165748,165749],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[165986,166001],"content":"Elements(XName)","needQuote":true,"nodes":[{"content":"Elements(XName)","pos":[0,15]}]},{"pos":[166166,166174],"content":"Elements","needQuote":true,"nodes":[{"content":"Elements","pos":[0,8]}]},{"pos":[166235,166236],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[166294,166299],"content":"XName","needQuote":true,"nodes":[{"content":"XName","pos":[0,5]}]},{"pos":[166346,166347],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[166453,166461],"content":"Elements","needQuote":true,"nodes":[{"content":"Elements","pos":[0,8]}]},{"pos":[166522,166523],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[166581,166586],"content":"XName","needQuote":true,"nodes":[{"content":"XName","pos":[0,5]}]},{"pos":[166633,166634],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[166873,166880],"content":"Nodes()","needQuote":true,"nodes":[{"content":"Nodes()","pos":[0,7]}]},{"pos":[166995,167000],"content":"Nodes","needQuote":true,"nodes":[{"content":"Nodes","pos":[0,5]}]},{"pos":[167058,167059],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[167086,167087],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[167167,167172],"content":"Nodes","needQuote":true,"nodes":[{"content":"Nodes","pos":[0,5]}]},{"pos":[167230,167231],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[167258,167259],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[167470,167483],"content":"RemoveNodes()","needQuote":true,"nodes":[{"content":"RemoveNodes()","pos":[0,13]}]},{"pos":[167610,167621],"content":"RemoveNodes","needQuote":true,"nodes":[{"content":"RemoveNodes","pos":[0,11]}]},{"pos":[167685,167686],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[167713,167714],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[167800,167811],"content":"RemoveNodes","needQuote":true,"nodes":[{"content":"RemoveNodes","pos":[0,11]}]},{"pos":[167875,167876],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[167903,167904],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[168142,168162],"content":"ReplaceNodes(Object)","needQuote":true,"nodes":[{"content":"ReplaceNodes(Object)","pos":[0,20]}]},{"pos":[168319,168331],"content":"ReplaceNodes","needQuote":true,"nodes":[{"content":"ReplaceNodes","pos":[0,12]}]},{"pos":[168396,168397],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[168447,168453],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[168513,168514],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[168616,168628],"content":"ReplaceNodes","needQuote":true,"nodes":[{"content":"ReplaceNodes","pos":[0,12]}]},{"pos":[168693,168694],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[168744,168750],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[168810,168811],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[169074,169096],"content":"ReplaceNodes(Object[])","needQuote":true,"nodes":[{"content":"ReplaceNodes(Object[])","pos":[0,22]}]},{"pos":[169363,169375],"content":"ReplaceNodes","needQuote":true,"nodes":[{"content":"ReplaceNodes","pos":[0,12]}]},{"pos":[169440,169441],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[169491,169497],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":"[]","pos":[169558,169560]},{"pos":[169591,169592],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[169696,169708],"content":"ReplaceNodes","needQuote":true,"nodes":[{"content":"ReplaceNodes","pos":[0,12]}]},{"pos":[169773,169774],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[169824,169830],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[169890,169892],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[169920,169921],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[170224,170245],"content":"DocumentOrderComparer","needQuote":true,"nodes":[{"content":"DocumentOrderComparer","pos":[0,21]}]},{"pos":[170511,170527],"content":"EqualityComparer","needQuote":true,"nodes":[{"content":"EqualityComparer","pos":[0,16]}]},{"pos":[170770,170778],"content":"NextNode","needQuote":true,"nodes":[{"content":"NextNode","pos":[0,8]}]},{"pos":[171001,171013],"content":"PreviousNode","needQuote":true,"nodes":[{"content":"PreviousNode","pos":[0,12]}]},{"pos":[171262,171282],"content":"AddAfterSelf(Object)","needQuote":true,"nodes":[{"content":"AddAfterSelf(Object)","pos":[0,20]}]},{"pos":[171429,171441],"content":"AddAfterSelf","needQuote":true,"nodes":[{"content":"AddAfterSelf","pos":[0,12]}]},{"pos":[171501,171502],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[171552,171558],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[171618,171619],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[171716,171728],"content":"AddAfterSelf","needQuote":true,"nodes":[{"content":"AddAfterSelf","pos":[0,12]}]},{"pos":[171788,171789],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[171839,171845],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[171905,171906],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[172149,172171],"content":"AddAfterSelf(Object[])","needQuote":true,"nodes":[{"content":"AddAfterSelf(Object[])","pos":[0,22]}]},{"pos":[172423,172435],"content":"AddAfterSelf","needQuote":true,"nodes":[{"content":"AddAfterSelf","pos":[0,12]}]},{"pos":[172495,172496],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[172546,172552],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":"[]","pos":[172613,172615]},{"pos":[172646,172647],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[172746,172758],"content":"AddAfterSelf","needQuote":true,"nodes":[{"content":"AddAfterSelf","pos":[0,12]}]},{"pos":[172818,172819],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[172869,172875],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[172935,172937],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[172965,172966],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[173260,173281],"content":"AddBeforeSelf(Object)","needQuote":true,"nodes":[{"content":"AddBeforeSelf(Object)","pos":[0,21]}]},{"pos":[173430,173443],"content":"AddBeforeSelf","needQuote":true,"nodes":[{"content":"AddBeforeSelf","pos":[0,13]}]},{"pos":[173504,173505],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[173555,173561],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[173621,173622],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[173720,173733],"content":"AddBeforeSelf","needQuote":true,"nodes":[{"content":"AddBeforeSelf","pos":[0,13]}]},{"pos":[173794,173795],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[173845,173851],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[173911,173912],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[174158,174181],"content":"AddBeforeSelf(Object[])","needQuote":true,"nodes":[{"content":"AddBeforeSelf(Object[])","pos":[0,23]}]},{"pos":[174437,174450],"content":"AddBeforeSelf","needQuote":true,"nodes":[{"content":"AddBeforeSelf","pos":[0,13]}]},{"pos":[174511,174512],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[174562,174568],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":"[]","pos":[174629,174631]},{"pos":[174662,174663],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[174763,174776],"content":"AddBeforeSelf","needQuote":true,"nodes":[{"content":"AddBeforeSelf","pos":[0,13]}]},{"pos":[174837,174838],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[174888,174894],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[174954,174956],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[174984,174985],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[175264,175275],"content":"Ancestors()","needQuote":true,"nodes":[{"content":"Ancestors()","pos":[0,11]}]},{"pos":[175388,175397],"content":"Ancestors","needQuote":true,"nodes":[{"content":"Ancestors","pos":[0,9]}]},{"pos":[175454,175455],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[175482,175483],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[175562,175571],"content":"Ancestors","needQuote":true,"nodes":[{"content":"Ancestors","pos":[0,9]}]},{"pos":[175628,175629],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[175656,175657],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[175877,175893],"content":"Ancestors(XName)","needQuote":true,"nodes":[{"content":"Ancestors(XName)","pos":[0,16]}]},{"pos":[176050,176059],"content":"Ancestors","needQuote":true,"nodes":[{"content":"Ancestors","pos":[0,9]}]},{"pos":[176116,176117],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[176175,176180],"content":"XName","needQuote":true,"nodes":[{"content":"XName","pos":[0,5]}]},{"pos":[176227,176228],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[176330,176339],"content":"Ancestors","needQuote":true,"nodes":[{"content":"Ancestors","pos":[0,9]}]},{"pos":[176396,176397],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[176455,176460],"content":"XName","needQuote":true,"nodes":[{"content":"XName","pos":[0,5]}]},{"pos":[176507,176508],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[176789,176823],"content":"CompareDocumentOrder(XNode, XNode)","needQuote":true,"nodes":[{"content":"CompareDocumentOrder(XNode, XNode)","pos":[0,34]}]},{"pos":[177047,177067],"content":"CompareDocumentOrder","needQuote":true,"nodes":[{"content":"CompareDocumentOrder","pos":[0,20]}]},{"pos":[177135,177136],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[177194,177199],"content":"XNode","needQuote":true,"nodes":[{"content":"XNode","pos":[0,5]}]},{"content":",","pos":[177247,177248]},{"pos":[177311,177316],"content":"XNode","needQuote":true,"nodes":[{"content":"XNode","pos":[0,5]}]},{"pos":[177363,177364],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[177499,177519],"content":"CompareDocumentOrder","needQuote":true,"nodes":[{"content":"CompareDocumentOrder","pos":[0,20]}]},{"pos":[177587,177588],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[177646,177651],"content":"XNode","needQuote":true,"nodes":[{"content":"XNode","pos":[0,5]}]},{"content":",","pos":[177699,177700]},{"pos":[177763,177768],"content":"XNode","needQuote":true,"nodes":[{"content":"XNode","pos":[0,5]}]},{"pos":[177815,177816],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[178095,178109],"content":"CreateReader()","needQuote":true,"nodes":[{"content":"CreateReader()","pos":[0,14]}]},{"pos":[178228,178240],"content":"CreateReader","needQuote":true,"nodes":[{"content":"CreateReader","pos":[0,12]}]},{"pos":[178300,178301],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[178328,178329],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[178411,178423],"content":"CreateReader","needQuote":true,"nodes":[{"content":"CreateReader","pos":[0,12]}]},{"pos":[178483,178484],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[178511,178512],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[178749,178776],"content":"CreateReader(ReaderOptions)","needQuote":true,"nodes":[{"content":"CreateReader(ReaderOptions)","pos":[0,27]}]},{"pos":[178955,178967],"content":"CreateReader","needQuote":true,"nodes":[{"content":"CreateReader","pos":[0,12]}]},{"pos":[179027,179028],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[179094,179107],"content":"ReaderOptions","needQuote":true,"nodes":[{"content":"ReaderOptions","pos":[0,13]}]},{"pos":[179162,179163],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[179276,179288],"content":"CreateReader","needQuote":true,"nodes":[{"content":"CreateReader","pos":[0,12]}]},{"pos":[179348,179349],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[179415,179428],"content":"ReaderOptions","needQuote":true,"nodes":[{"content":"ReaderOptions","pos":[0,13]}]},{"pos":[179483,179484],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[179777,179801],"content":"DeepEquals(XNode, XNode)","needQuote":true,"nodes":[{"content":"DeepEquals(XNode, XNode)","pos":[0,24]}]},{"pos":[180005,180015],"content":"DeepEquals","needQuote":true,"nodes":[{"content":"DeepEquals","pos":[0,10]}]},{"pos":[180073,180074],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[180132,180137],"content":"XNode","needQuote":true,"nodes":[{"content":"XNode","pos":[0,5]}]},{"content":",","pos":[180185,180186]},{"pos":[180249,180254],"content":"XNode","needQuote":true,"nodes":[{"content":"XNode","pos":[0,5]}]},{"pos":[180301,180302],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[180427,180437],"content":"DeepEquals","needQuote":true,"nodes":[{"content":"DeepEquals","pos":[0,10]}]},{"pos":[180495,180496],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[180554,180559],"content":"XNode","needQuote":true,"nodes":[{"content":"XNode","pos":[0,5]}]},{"content":",","pos":[180607,180608]},{"pos":[180671,180676],"content":"XNode","needQuote":true,"nodes":[{"content":"XNode","pos":[0,5]}]},{"pos":[180723,180724],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[180988,181007],"content":"ElementsAfterSelf()","needQuote":true,"nodes":[{"content":"ElementsAfterSelf()","pos":[0,19]}]},{"pos":[181136,181153],"content":"ElementsAfterSelf","needQuote":true,"nodes":[{"content":"ElementsAfterSelf","pos":[0,17]}]},{"pos":[181218,181219],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[181246,181247],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[181334,181351],"content":"ElementsAfterSelf","needQuote":true,"nodes":[{"content":"ElementsAfterSelf","pos":[0,17]}]},{"pos":[181416,181417],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[181444,181445],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[181689,181713],"content":"ElementsAfterSelf(XName)","needQuote":true,"nodes":[{"content":"ElementsAfterSelf(XName)","pos":[0,24]}]},{"pos":[181886,181903],"content":"ElementsAfterSelf","needQuote":true,"nodes":[{"content":"ElementsAfterSelf","pos":[0,17]}]},{"pos":[181968,181969],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[182027,182032],"content":"XName","needQuote":true,"nodes":[{"content":"XName","pos":[0,5]}]},{"pos":[182079,182080],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[182190,182207],"content":"ElementsAfterSelf","needQuote":true,"nodes":[{"content":"ElementsAfterSelf","pos":[0,17]}]},{"pos":[182272,182273],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[182331,182336],"content":"XName","needQuote":true,"nodes":[{"content":"XName","pos":[0,5]}]},{"pos":[182383,182384],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[182634,182654],"content":"ElementsBeforeSelf()","needQuote":true,"nodes":[{"content":"ElementsBeforeSelf()","pos":[0,20]}]},{"pos":[182785,182803],"content":"ElementsBeforeSelf","needQuote":true,"nodes":[{"content":"ElementsBeforeSelf","pos":[0,18]}]},{"pos":[182869,182870],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[182897,182898],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[182986,183004],"content":"ElementsBeforeSelf","needQuote":true,"nodes":[{"content":"ElementsBeforeSelf","pos":[0,18]}]},{"pos":[183070,183071],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[183098,183099],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[183346,183371],"content":"ElementsBeforeSelf(XName)","needQuote":true,"nodes":[{"content":"ElementsBeforeSelf(XName)","pos":[0,25]}]},{"pos":[183546,183564],"content":"ElementsBeforeSelf","needQuote":true,"nodes":[{"content":"ElementsBeforeSelf","pos":[0,18]}]},{"pos":[183630,183631],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[183689,183694],"content":"XName","needQuote":true,"nodes":[{"content":"XName","pos":[0,5]}]},{"pos":[183741,183742],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[183853,183871],"content":"ElementsBeforeSelf","needQuote":true,"nodes":[{"content":"ElementsBeforeSelf","pos":[0,18]}]},{"pos":[183937,183938],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[183996,184001],"content":"XName","needQuote":true,"nodes":[{"content":"XName","pos":[0,5]}]},{"pos":[184048,184049],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[184313,184327],"content":"IsAfter(XNode)","needQuote":true,"nodes":[{"content":"IsAfter(XNode)","pos":[0,14]}]},{"pos":[184480,184487],"content":"IsAfter","needQuote":true,"nodes":[{"content":"IsAfter","pos":[0,7]}]},{"pos":[184542,184543],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[184601,184606],"content":"XNode","needQuote":true,"nodes":[{"content":"XNode","pos":[0,5]}]},{"pos":[184653,184654],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[184754,184761],"content":"IsAfter","needQuote":true,"nodes":[{"content":"IsAfter","pos":[0,7]}]},{"pos":[184816,184817],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[184875,184880],"content":"XNode","needQuote":true,"nodes":[{"content":"XNode","pos":[0,5]}]},{"pos":[184927,184928],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[185171,185186],"content":"IsBefore(XNode)","needQuote":true,"nodes":[{"content":"IsBefore(XNode)","pos":[0,15]}]},{"pos":[185341,185349],"content":"IsBefore","needQuote":true,"nodes":[{"content":"IsBefore","pos":[0,8]}]},{"pos":[185405,185406],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[185464,185469],"content":"XNode","needQuote":true,"nodes":[{"content":"XNode","pos":[0,5]}]},{"pos":[185516,185517],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[185618,185626],"content":"IsBefore","needQuote":true,"nodes":[{"content":"IsBefore","pos":[0,8]}]},{"pos":[185682,185683],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[185741,185746],"content":"XNode","needQuote":true,"nodes":[{"content":"XNode","pos":[0,5]}]},{"pos":[185793,185794],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[186022,186038],"content":"NodesAfterSelf()","needQuote":true,"nodes":[{"content":"NodesAfterSelf()","pos":[0,16]}]},{"pos":[186161,186175],"content":"NodesAfterSelf","needQuote":true,"nodes":[{"content":"NodesAfterSelf","pos":[0,14]}]},{"pos":[186237,186238],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[186265,186266],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[186350,186364],"content":"NodesAfterSelf","needQuote":true,"nodes":[{"content":"NodesAfterSelf","pos":[0,14]}]},{"pos":[186426,186427],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[186454,186455],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[186668,186685],"content":"NodesBeforeSelf()","needQuote":true,"nodes":[{"content":"NodesBeforeSelf()","pos":[0,17]}]},{"pos":[186810,186825],"content":"NodesBeforeSelf","needQuote":true,"nodes":[{"content":"NodesBeforeSelf","pos":[0,15]}]},{"pos":[186888,186889],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[186916,186917],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[187002,187017],"content":"NodesBeforeSelf","needQuote":true,"nodes":[{"content":"NodesBeforeSelf","pos":[0,15]}]},{"pos":[187080,187081],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[187108,187109],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[187338,187357],"content":"ReadFrom(XmlReader)","needQuote":true,"nodes":[{"content":"ReadFrom(XmlReader)","pos":[0,19]}]},{"pos":[187510,187518],"content":"ReadFrom","needQuote":true,"nodes":[{"content":"ReadFrom","pos":[0,8]}]},{"pos":[187574,187575],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[187632,187641],"content":"XmlReader","needQuote":true,"nodes":[{"content":"XmlReader","pos":[0,9]}]},{"pos":[187708,187709],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[187809,187817],"content":"ReadFrom","needQuote":true,"nodes":[{"content":"ReadFrom","pos":[0,8]}]},{"pos":[187873,187874],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[187931,187940],"content":"XmlReader","needQuote":true,"nodes":[{"content":"XmlReader","pos":[0,9]}]},{"pos":[188007,188008],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[188231,188239],"content":"Remove()","needQuote":true,"nodes":[{"content":"Remove()","pos":[0,8]}]},{"pos":[188346,188352],"content":"Remove","needQuote":true,"nodes":[{"content":"Remove","pos":[0,6]}]},{"pos":[188406,188407],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[188434,188435],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[188511,188517],"content":"Remove","needQuote":true,"nodes":[{"content":"Remove","pos":[0,6]}]},{"pos":[188571,188572],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[188599,188600],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[188807,188826],"content":"ReplaceWith(Object)","needQuote":true,"nodes":[{"content":"ReplaceWith(Object)","pos":[0,19]}]},{"pos":[188971,188982],"content":"ReplaceWith","needQuote":true,"nodes":[{"content":"ReplaceWith","pos":[0,11]}]},{"pos":[189041,189042],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[189092,189098],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[189158,189159],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[189255,189266],"content":"ReplaceWith","needQuote":true,"nodes":[{"content":"ReplaceWith","pos":[0,11]}]},{"pos":[189325,189326],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[189376,189382],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[189442,189443],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[189683,189704],"content":"ReplaceWith(Object[])","needQuote":true,"nodes":[{"content":"ReplaceWith(Object[])","pos":[0,21]}]},{"pos":[189952,189963],"content":"ReplaceWith","needQuote":true,"nodes":[{"content":"ReplaceWith","pos":[0,11]}]},{"pos":[190022,190023],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[190073,190079],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":"[]","pos":[190140,190142]},{"pos":[190173,190174],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[190272,190283],"content":"ReplaceWith","needQuote":true,"nodes":[{"content":"ReplaceWith","pos":[0,11]}]},{"pos":[190342,190343],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[190393,190399],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[190459,190461],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[190489,190490],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[190762,190772],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[190883,190891],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[190947,190948],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[190975,190976],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[191054,191062],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[191118,191119],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[191146,191147],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[191370,191391],"content":"ToString(SaveOptions)","needQuote":true,"nodes":[{"content":"ToString(SaveOptions)","pos":[0,21]}]},{"pos":[191558,191566],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[191622,191623],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[191687,191698],"content":"SaveOptions","needQuote":true,"nodes":[{"content":"SaveOptions","pos":[0,11]}]},{"pos":[191751,191752],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[191859,191867],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[191923,191924],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[191988,191999],"content":"SaveOptions","needQuote":true,"nodes":[{"content":"SaveOptions","pos":[0,11]}]},{"pos":[192052,192053],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[192290,192297],"content":"BaseUri","needQuote":true,"nodes":[{"content":"BaseUri","pos":[0,7]}]},{"pos":[192523,192531],"content":"Document","needQuote":true,"nodes":[{"content":"Document","pos":[0,8]}]},{"pos":[192758,192764],"content":"Parent","needQuote":true,"nodes":[{"content":"Parent","pos":[0,6]}]},{"pos":[192986,192993],"content":"Changed","needQuote":true,"nodes":[{"content":"Changed","pos":[0,7]}]},{"pos":[193219,193227],"content":"Changing","needQuote":true,"nodes":[{"content":"Changing","pos":[0,8]}]},{"pos":[193475,193496],"content":"AddAnnotation(Object)","needQuote":true,"nodes":[{"content":"AddAnnotation(Object)","pos":[0,21]}]},{"pos":[193649,193662],"content":"AddAnnotation","needQuote":true,"nodes":[{"content":"AddAnnotation","pos":[0,13]}]},{"pos":[193725,193726],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[193776,193782],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[193842,193843],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[193943,193956],"content":"AddAnnotation","needQuote":true,"nodes":[{"content":"AddAnnotation","pos":[0,13]}]},{"pos":[194019,194020],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[194070,194076],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[194136,194137],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[194384,194400],"content":"Annotation(Type)","needQuote":true,"nodes":[{"content":"Annotation(Type)","pos":[0,16]}]},{"pos":[194543,194553],"content":"Annotation","needQuote":true,"nodes":[{"content":"Annotation","pos":[0,10]}]},{"pos":[194613,194614],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[194662,194666],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[194724,194725],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[194820,194830],"content":"Annotation","needQuote":true,"nodes":[{"content":"Annotation","pos":[0,10]}]},{"pos":[194890,194891],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[194939,194943],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[195001,195002],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[195230,195245],"content":"Annotation<T>()","needQuote":true,"nodes":[{"content":"Annotation&lt;T&gt;()","pos":[0,15],"source":"Annotation<T>()"}]},{"pos":[195458,195471],"content":"Annotation<T>","needQuote":true,"nodes":[{"content":"Annotation&lt;T&gt;","pos":[0,13],"source":"Annotation<T>"}]},{"pos":[195534,195535],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[195562,195563],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[195648,195664],"content":"Annotation(Of T)","needQuote":true,"nodes":[{"content":"Annotation(Of T)","pos":[0,16]}]},{"pos":[195730,195731],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[195758,195759],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[196032,196049],"content":"Annotations(Type)","needQuote":true,"nodes":[{"content":"Annotations(Type)","pos":[0,17]}]},{"pos":[196194,196205],"content":"Annotations","needQuote":true,"nodes":[{"content":"Annotations","pos":[0,11]}]},{"pos":[196266,196267],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[196315,196319],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[196377,196378],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[196474,196485],"content":"Annotations","needQuote":true,"nodes":[{"content":"Annotations","pos":[0,11]}]},{"pos":[196546,196547],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[196595,196599],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[196657,196658],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[196889,196905],"content":"Annotations<T>()","needQuote":true,"nodes":[{"content":"Annotations&lt;T&gt;()","pos":[0,16],"source":"Annotations<T>()"}]},{"pos":[197122,197136],"content":"Annotations<T>","needQuote":true,"nodes":[{"content":"Annotations&lt;T&gt;","pos":[0,14],"source":"Annotations<T>"}]},{"pos":[197200,197201],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[197228,197229],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[197315,197332],"content":"Annotations(Of T)","needQuote":true,"nodes":[{"content":"Annotations(Of T)","pos":[0,17]}]},{"pos":[197399,197400],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[197427,197428],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[197710,197733],"content":"RemoveAnnotations(Type)","needQuote":true,"nodes":[{"content":"RemoveAnnotations(Type)","pos":[0,23]}]},{"pos":[197890,197907],"content":"RemoveAnnotations","needQuote":true,"nodes":[{"content":"RemoveAnnotations","pos":[0,17]}]},{"pos":[197974,197975],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[198023,198027],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[198085,198086],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[198188,198205],"content":"RemoveAnnotations","needQuote":true,"nodes":[{"content":"RemoveAnnotations","pos":[0,17]}]},{"pos":[198272,198273],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[198321,198325],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[198383,198384],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[198633,198655],"content":"RemoveAnnotations<T>()","needQuote":true,"nodes":[{"content":"RemoveAnnotations&lt;T&gt;()","pos":[0,22],"source":"RemoveAnnotations<T>()"}]},{"pos":[198896,198916],"content":"RemoveAnnotations<T>","needQuote":true,"nodes":[{"content":"RemoveAnnotations&lt;T&gt;","pos":[0,20],"source":"RemoveAnnotations<T>"}]},{"pos":[198986,198987],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[199014,199015],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[199107,199130],"content":"RemoveAnnotations(Of T)","needQuote":true,"nodes":[{"content":"RemoveAnnotations(Of T)","pos":[0,23]}]},{"pos":[199203,199204],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[199231,199232],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[199451,199457],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[199608,199616],"content":"XElement","needQuote":true,"nodes":[{"content":"XElement","pos":[0,8]}]},{"pos":[199802,199807],"content":"XName","needQuote":true,"nodes":[{"content":"XName","pos":[0,5]}]},{"pos":[199932,199940],"content":"Object[]","needQuote":true,"nodes":[{"content":"Object[]","pos":[0,8]}]},{"pos":[200068,200074],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":"[]","pos":[200135,200137]},{"pos":[200202,200208],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[200268,200270],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[200436,200453],"content":"XStreamingElement","needQuote":true,"nodes":[{"content":"XStreamingElement","pos":[0,17]}]},{"pos":[200755,200776],"content":"IEnumerable<XElement>","needQuote":true,"nodes":[{"content":"IEnumerable&lt;XElement&gt;","pos":[0,21],"source":"IEnumerable<XElement>"}]},{"pos":[201048,201059],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[201144,201145],"content":"<","needQuote":true,"nodes":[]},{"pos":[201206,201214],"content":"XElement","needQuote":true,"nodes":[{"content":"XElement","pos":[0,8]}]},{"pos":[201357,201368],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[201454,201457]},{"pos":[201525,201533],"content":"XElement","needQuote":true,"nodes":[{"content":"XElement","pos":[0,8]}]},{"pos":[201583,201584],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[201839,201853],"content":"IEnumerable<T>","needQuote":true,"nodes":[{"content":"IEnumerable&lt;T&gt;","pos":[0,14],"source":"IEnumerable<T>"}]},{"pos":[202072,202083],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[202147,202148],"content":"<","needQuote":true,"nodes":[]},{"pos":[202175,202176],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[202296,202307],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[202372,202375]},{"pos":[202409,202410],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[202437,202438],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[202641,202667],"content":"System.Collections.Generic","needQuote":true,"nodes":[{"content":"System.Collections.Generic","pos":[0,26]}]},{"pos":[202880,202890],"content":"XAttribute","needQuote":true,"nodes":[{"content":"XAttribute","pos":[0,10]}]},{"pos":[203066,203073],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[203257,203265],"content":"NodeType","needQuote":true,"nodes":[{"content":"NodeType","pos":[0,8]}]},{"pos":[203471,203482],"content":"XmlNodeType","needQuote":true,"nodes":[{"content":"XmlNodeType","pos":[0,11]}]},{"pos":[203630,203640],"content":"System.Xml","needQuote":true,"nodes":[{"content":"System.Xml","pos":[0,10]}]},{"pos":[203783,203789],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[204042,204065],"content":"IEnumerable<XAttribute>","needQuote":true,"nodes":[{"content":"IEnumerable&lt;XAttribute&gt;","pos":[0,23],"source":"IEnumerable<XAttribute>"}]},{"pos":[204343,204354],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[204439,204440],"content":"<","needQuote":true,"nodes":[]},{"pos":[204503,204513],"content":"XAttribute","needQuote":true,"nodes":[{"content":"XAttribute","pos":[0,10]}]},{"pos":[204658,204669],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[204755,204758]},{"pos":[204828,204838],"content":"XAttribute","needQuote":true,"nodes":[{"content":"XAttribute","pos":[0,10]}]},{"pos":[204890,204891],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[205245,205263],"content":"IEnumerable<XNode>","needQuote":true,"nodes":[{"content":"IEnumerable&lt;XNode&gt;","pos":[0,18],"source":"IEnumerable<XNode>"}]},{"pos":[205526,205537],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[205622,205623],"content":"<","needQuote":true,"nodes":[]},{"pos":[205681,205686],"content":"XNode","needQuote":true,"nodes":[{"content":"XNode","pos":[0,5]}]},{"pos":[205826,205837],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[205923,205926]},{"pos":[205991,205996],"content":"XNode","needQuote":true,"nodes":[{"content":"XNode","pos":[0,5]}]},{"pos":[206043,206044],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[206302,206312],"content":"XNamespace","needQuote":true,"nodes":[{"content":"XNamespace","pos":[0,10]}]},{"pos":[206493,206499],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[206629,206638],"content":"System.IO","needQuote":true,"nodes":[{"content":"System.IO","pos":[0,9]}]},{"pos":[206801,206812],"content":"LoadOptions","needQuote":true,"nodes":[{"content":"LoadOptions","pos":[0,11]}]},{"pos":[207000,207010],"content":"TextReader","needQuote":true,"nodes":[{"content":"TextReader","pos":[0,10]}]},{"pos":[207184,207193],"content":"XmlReader","needQuote":true,"nodes":[{"content":"XmlReader","pos":[0,9]}]},{"pos":[207357,207365],"content":"DateTime","needQuote":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[207524,207538],"content":"DateTimeOffset","needQuote":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[207708,207715],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[207863,207869],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[208012,208016],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[208154,208159],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[208300,208305],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[208477,208494],"content":"Nullable<Boolean>","needQuote":true,"nodes":[{"content":"Nullable&lt;Boolean&gt;","pos":[0,17],"source":"Nullable<Boolean>"}]},{"pos":[208673,208681],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[208743,208744],"content":"<","needQuote":true,"nodes":[]},{"pos":[208795,208802],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[208933,208941],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[209004,209007]},{"pos":[209065,209072],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[209133,209134],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[209342,209353],"content":"Nullable<T>","needQuote":true,"nodes":[{"content":"Nullable&lt;T&gt;","pos":[0,11],"source":"Nullable<T>"}]},{"pos":[209500,209508],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[209549,209550],"content":"<","needQuote":true,"nodes":[]},{"pos":[209577,209578],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[209675,209683],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[209725,209728]},{"pos":[209762,209763],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[209790,209791],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[210000,210018],"content":"Nullable<DateTime>","needQuote":true,"nodes":[{"content":"Nullable&lt;DateTime&gt;","pos":[0,18],"source":"Nullable<DateTime>"}]},{"pos":[210200,210208],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[210270,210271],"content":"<","needQuote":true,"nodes":[]},{"pos":[210323,210331],"content":"DateTime","needQuote":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[210463,210471],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[210534,210537]},{"pos":[210596,210604],"content":"DateTime","needQuote":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[210666,210667],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[210911,210935],"content":"Nullable<DateTimeOffset>","needQuote":true,"nodes":[{"content":"Nullable&lt;DateTimeOffset&gt;","pos":[0,24],"source":"Nullable<DateTimeOffset>"}]},{"pos":[211135,211143],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[211205,211206],"content":"<","needQuote":true,"nodes":[]},{"pos":[211264,211278],"content":"DateTimeOffset","needQuote":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[211416,211424],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[211487,211490]},{"pos":[211555,211569],"content":"DateTimeOffset","needQuote":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[211637,211638],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[211893,211910],"content":"Nullable<Decimal>","needQuote":true,"nodes":[{"content":"Nullable&lt;Decimal&gt;","pos":[0,17],"source":"Nullable<Decimal>"}]},{"pos":[212089,212097],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[212159,212160],"content":"<","needQuote":true,"nodes":[]},{"pos":[212211,212218],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[212349,212357],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[212420,212423]},{"pos":[212481,212488],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[212549,212550],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[212783,212799],"content":"Nullable<Double>","needQuote":true,"nodes":[{"content":"Nullable&lt;Double&gt;","pos":[0,16],"source":"Nullable<Double>"}]},{"pos":[212975,212983],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[213045,213046],"content":"<","needQuote":true,"nodes":[]},{"pos":[213096,213102],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[213232,213240],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[213303,213306]},{"pos":[213363,213369],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[213429,213430],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[213658,213672],"content":"Nullable<Guid>","needQuote":true,"nodes":[{"content":"Nullable&lt;Guid&gt;","pos":[0,14],"source":"Nullable<Guid>"}]},{"pos":[213842,213850],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[213912,213913],"content":"<","needQuote":true,"nodes":[]},{"pos":[213961,213965],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[214093,214101],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[214164,214167]},{"pos":[214222,214226],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[214284,214285],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[214508,214523],"content":"Nullable<Int32>","needQuote":true,"nodes":[{"content":"Nullable&lt;Int32&gt;","pos":[0,15],"source":"Nullable<Int32>"}]},{"pos":[214696,214704],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[214766,214767],"content":"<","needQuote":true,"nodes":[]},{"pos":[214816,214821],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[214950,214958],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[215021,215024]},{"pos":[215080,215085],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[215144,215145],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[215371,215386],"content":"Nullable<Int64>","needQuote":true,"nodes":[{"content":"Nullable&lt;Int64&gt;","pos":[0,15],"source":"Nullable<Int64>"}]},{"pos":[215559,215567],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[215629,215630],"content":"<","needQuote":true,"nodes":[]},{"pos":[215679,215684],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[215813,215821],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[215884,215887]},{"pos":[215943,215948],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[216007,216008],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[216235,216251],"content":"Nullable<Single>","needQuote":true,"nodes":[{"content":"Nullable&lt;Single&gt;","pos":[0,16],"source":"Nullable<Single>"}]},{"pos":[216427,216435],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[216497,216498],"content":"<","needQuote":true,"nodes":[]},{"pos":[216548,216554],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[216684,216692],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[216755,216758]},{"pos":[216815,216821],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[216881,216882],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[217114,217132],"content":"Nullable<TimeSpan>","needQuote":true,"nodes":[{"content":"Nullable&lt;TimeSpan&gt;","pos":[0,18],"source":"Nullable<TimeSpan>"}]},{"pos":[217314,217322],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[217384,217385],"content":"<","needQuote":true,"nodes":[]},{"pos":[217437,217445],"content":"TimeSpan","needQuote":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[217577,217585],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[217648,217651]},{"pos":[217710,217718],"content":"TimeSpan","needQuote":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[217780,217781],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[218017,218033],"content":"Nullable<UInt32>","needQuote":true,"nodes":[{"content":"Nullable&lt;UInt32&gt;","pos":[0,16],"source":"Nullable<UInt32>"}]},{"pos":[218209,218217],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[218279,218280],"content":"<","needQuote":true,"nodes":[]},{"pos":[218330,218336],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[218466,218474],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[218537,218540]},{"pos":[218597,218603],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[218663,218664],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[218894,218910],"content":"Nullable<UInt64>","needQuote":true,"nodes":[{"content":"Nullable&lt;UInt64&gt;","pos":[0,16],"source":"Nullable<UInt64>"}]},{"pos":[219086,219094],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[219156,219157],"content":"<","needQuote":true,"nodes":[]},{"pos":[219207,219213],"content":"UInt64","needQuote":true,"nodes":[{"content":"UInt64","pos":[0,6]}]},{"pos":[219343,219351],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[219414,219417]},{"pos":[219474,219480],"content":"UInt64","needQuote":true,"nodes":[{"content":"UInt64","pos":[0,6]}]},{"pos":[219540,219541],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[219742,219748],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[219895,219903],"content":"TimeSpan","needQuote":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[220054,220060],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[220205,220211],"content":"UInt64","needQuote":true,"nodes":[{"content":"UInt64","pos":[0,6]}]},{"pos":[220379,220390],"content":"SaveOptions","needQuote":true,"nodes":[{"content":"SaveOptions","pos":[0,11]}]},{"pos":[220578,220588],"content":"TextWriter","needQuote":true,"nodes":[{"content":"TextWriter","pos":[0,10]}]},{"pos":[220762,220771],"content":"XmlWriter","needQuote":true,"nodes":[{"content":"XmlWriter","pos":[0,9]}]},{"pos":[220985,221003],"content":"WriteTo(XmlWriter)","needQuote":true,"nodes":[{"content":"WriteTo(XmlWriter)","pos":[0,18]}]},{"pos":[221154,221161],"content":"WriteTo","needQuote":true,"nodes":[{"content":"WriteTo","pos":[0,7]}]},{"pos":[221216,221217],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[221274,221283],"content":"XmlWriter","needQuote":true,"nodes":[{"content":"XmlWriter","pos":[0,9]}]},{"pos":[221350,221351],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[221450,221457],"content":"WriteTo","needQuote":true,"nodes":[{"content":"WriteTo","pos":[0,7]}]},{"pos":[221512,221513],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[221570,221579],"content":"XmlWriter","needQuote":true,"nodes":[{"content":"XmlWriter","pos":[0,9]}]},{"pos":[221646,221647],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[221847,221862],"content":"FormatException","needQuote":true,"nodes":[{"content":"FormatException","pos":[0,15]}]},{"pos":[222032,222053],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[222254,222271],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]}],"content":"items:\n- uid: System.Xml.Linq.XElement\n  commentId: T:System.Xml.Linq.XElement\n  id: XElement\n  parent: System.Xml.Linq\n  children:\n  - System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XElement)\n  - System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName)\n  - System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object)\n  - System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object[])\n  - System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XStreamingElement)\n  - System.Xml.Linq.XElement.AncestorsAndSelf\n  - System.Xml.Linq.XElement.AncestorsAndSelf(System.Xml.Linq.XName)\n  - System.Xml.Linq.XElement.Attribute(System.Xml.Linq.XName)\n  - System.Xml.Linq.XElement.Attributes\n  - System.Xml.Linq.XElement.Attributes(System.Xml.Linq.XName)\n  - System.Xml.Linq.XElement.DescendantNodesAndSelf\n  - System.Xml.Linq.XElement.DescendantsAndSelf\n  - System.Xml.Linq.XElement.DescendantsAndSelf(System.Xml.Linq.XName)\n  - System.Xml.Linq.XElement.EmptySequence\n  - System.Xml.Linq.XElement.FirstAttribute\n  - System.Xml.Linq.XElement.GetDefaultNamespace\n  - System.Xml.Linq.XElement.GetNamespaceOfPrefix(System.String)\n  - System.Xml.Linq.XElement.GetPrefixOfNamespace(System.Xml.Linq.XNamespace)\n  - System.Xml.Linq.XElement.HasAttributes\n  - System.Xml.Linq.XElement.HasElements\n  - System.Xml.Linq.XElement.IsEmpty\n  - System.Xml.Linq.XElement.LastAttribute\n  - System.Xml.Linq.XElement.Load(System.IO.Stream)\n  - System.Xml.Linq.XElement.Load(System.IO.Stream,System.Xml.Linq.LoadOptions)\n  - System.Xml.Linq.XElement.Load(System.IO.TextReader)\n  - System.Xml.Linq.XElement.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)\n  - System.Xml.Linq.XElement.Load(System.String)\n  - System.Xml.Linq.XElement.Load(System.String,System.Xml.Linq.LoadOptions)\n  - System.Xml.Linq.XElement.Load(System.Xml.XmlReader)\n  - System.Xml.Linq.XElement.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)\n  - System.Xml.Linq.XElement.Name\n  - System.Xml.Linq.XElement.NodeType\n  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Boolean\n  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTime\n  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTimeOffset\n  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Decimal\n  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Double\n  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Guid\n  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int32\n  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int64\n  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Boolean}\n  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTime}\n  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTimeOffset}\n  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Decimal}\n  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Double}\n  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Guid}\n  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int32}\n  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int64}\n  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Single}\n  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.TimeSpan}\n  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt32}\n  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt64}\n  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Single\n  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.String\n  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.TimeSpan\n  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt32\n  - System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt64\n  - System.Xml.Linq.XElement.Parse(System.String)\n  - System.Xml.Linq.XElement.Parse(System.String,System.Xml.Linq.LoadOptions)\n  - System.Xml.Linq.XElement.RemoveAll\n  - System.Xml.Linq.XElement.RemoveAttributes\n  - System.Xml.Linq.XElement.ReplaceAll(System.Object)\n  - System.Xml.Linq.XElement.ReplaceAll(System.Object[])\n  - System.Xml.Linq.XElement.ReplaceAttributes(System.Object)\n  - System.Xml.Linq.XElement.ReplaceAttributes(System.Object[])\n  - System.Xml.Linq.XElement.Save(System.IO.Stream)\n  - System.Xml.Linq.XElement.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)\n  - System.Xml.Linq.XElement.Save(System.IO.TextWriter)\n  - System.Xml.Linq.XElement.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)\n  - System.Xml.Linq.XElement.Save(System.Xml.XmlWriter)\n  - System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName,System.Object)\n  - System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)\n  - System.Xml.Linq.XElement.SetValue(System.Object)\n  - System.Xml.Linq.XElement.Value\n  - System.Xml.Linq.XElement.WriteTo(System.Xml.XmlWriter)\n  langs:\n  - csharp\n  - vb\n  name: XElement\n  fullName: System.Xml.Linq.XElement\n  type: Class\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.Manual.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: XElement\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.Manual.cs\n    startLine: 10\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Represents an XML element.</p>\\n\"\n  syntax:\n    content: 'public class XElement : XContainer, Serialization.IXmlSerializable'\n    content.vb: >-\n      Public Class XElement\n          Inherits XContainer\n          Implements Serialization.IXmlSerializable\n  inheritance:\n  - System.Object\n  - System.Xml.Linq.XObject\n  - System.Xml.Linq.XNode\n  - System.Xml.Linq.XContainer\n  implements:\n  - System.Xml.Serialization.IXmlSerializable\n  inheritedMembers:\n  - System.Xml.Linq.XContainer.FirstNode\n  - System.Xml.Linq.XContainer.LastNode\n  - System.Xml.Linq.XContainer.Add(System.Object)\n  - System.Xml.Linq.XContainer.Add(System.Object[])\n  - System.Xml.Linq.XContainer.AddFirst(System.Object)\n  - System.Xml.Linq.XContainer.AddFirst(System.Object[])\n  - System.Xml.Linq.XContainer.CreateWriter\n  - System.Xml.Linq.XContainer.DescendantNodes\n  - System.Xml.Linq.XContainer.Descendants\n  - System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)\n  - System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)\n  - System.Xml.Linq.XContainer.Elements\n  - System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)\n  - System.Xml.Linq.XContainer.Nodes\n  - System.Xml.Linq.XContainer.RemoveNodes\n  - System.Xml.Linq.XContainer.ReplaceNodes(System.Object)\n  - System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])\n  - System.Xml.Linq.XNode.DocumentOrderComparer\n  - System.Xml.Linq.XNode.EqualityComparer\n  - System.Xml.Linq.XNode.NextNode\n  - System.Xml.Linq.XNode.PreviousNode\n  - System.Xml.Linq.XNode.AddAfterSelf(System.Object)\n  - System.Xml.Linq.XNode.AddAfterSelf(System.Object[])\n  - System.Xml.Linq.XNode.AddBeforeSelf(System.Object)\n  - System.Xml.Linq.XNode.AddBeforeSelf(System.Object[])\n  - System.Xml.Linq.XNode.Ancestors\n  - System.Xml.Linq.XNode.Ancestors(System.Xml.Linq.XName)\n  - System.Xml.Linq.XNode.CompareDocumentOrder(System.Xml.Linq.XNode,System.Xml.Linq.XNode)\n  - System.Xml.Linq.XNode.CreateReader\n  - System.Xml.Linq.XNode.CreateReader(System.Xml.Linq.ReaderOptions)\n  - System.Xml.Linq.XNode.DeepEquals(System.Xml.Linq.XNode,System.Xml.Linq.XNode)\n  - System.Xml.Linq.XNode.ElementsAfterSelf\n  - System.Xml.Linq.XNode.ElementsAfterSelf(System.Xml.Linq.XName)\n  - System.Xml.Linq.XNode.ElementsBeforeSelf\n  - System.Xml.Linq.XNode.ElementsBeforeSelf(System.Xml.Linq.XName)\n  - System.Xml.Linq.XNode.IsAfter(System.Xml.Linq.XNode)\n  - System.Xml.Linq.XNode.IsBefore(System.Xml.Linq.XNode)\n  - System.Xml.Linq.XNode.NodesAfterSelf\n  - System.Xml.Linq.XNode.NodesBeforeSelf\n  - System.Xml.Linq.XNode.ReadFrom(System.Xml.XmlReader)\n  - System.Xml.Linq.XNode.Remove\n  - System.Xml.Linq.XNode.ReplaceWith(System.Object)\n  - System.Xml.Linq.XNode.ReplaceWith(System.Object[])\n  - System.Xml.Linq.XNode.ToString\n  - System.Xml.Linq.XNode.ToString(System.Xml.Linq.SaveOptions)\n  - System.Xml.Linq.XObject.BaseUri\n  - System.Xml.Linq.XObject.Document\n  - System.Xml.Linq.XObject.Parent\n  - System.Xml.Linq.XObject.Changed\n  - System.Xml.Linq.XObject.Changing\n  - System.Xml.Linq.XObject.AddAnnotation(System.Object)\n  - System.Xml.Linq.XObject.Annotation(System.Type)\n  - System.Xml.Linq.XObject.Annotation``1\n  - System.Xml.Linq.XObject.Annotations(System.Type)\n  - System.Xml.Linq.XObject.Annotations``1\n  - System.Xml.Linq.XObject.RemoveAnnotations(System.Type)\n  - System.Xml.Linq.XObject.RemoveAnnotations``1\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: XElement\n- uid: System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XElement)\n  commentId: M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XElement)\n  id: '#ctor(System.Xml.Linq.XElement)'\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: XElement(XElement)\n  fullName: System.Xml.Linq.XElement.XElement(System.Xml.Linq.XElement)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 202\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class from another <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public XElement(XElement other)\n    content.vb: Public Sub New(other As XElement)\n    parameters:\n    - id: other\n      type: System.Xml.Linq.XElement\n      description: \"\\n<p>An <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object to copy from.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XElement.XElement(XElement)\n- uid: System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName)\n  commentId: M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName)\n  id: '#ctor(System.Xml.Linq.XName)'\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: XElement(XName)\n  fullName: System.Xml.Linq.XElement.XElement(System.Xml.Linq.XName)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 203\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified name. </p>\\n\"\n  syntax:\n    content: public XElement(XName name)\n    content.vb: Public Sub New(name As XName)\n    parameters:\n    - id: name\n      type: System.Xml.Linq.XName\n      description: \"\\n<p>An <xref href=\\\"System.Xml.Linq.XName\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the name of the element.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XElement.XElement(XName)\n- uid: System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object)\n  commentId: M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object)\n  id: '#ctor(System.Xml.Linq.XName,System.Object)'\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: XElement(XName, Object)\n  fullName: System.Xml.Linq.XElement.XElement(System.Xml.Linq.XName, System.Object)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 204\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified name and content.</p>\\n\"\n  syntax:\n    content: public XElement(XName name, object content)\n    content.vb: Public Sub New(name As XName, content As Object)\n    parameters:\n    - id: name\n      type: System.Xml.Linq.XName\n      description: \"\\n<p>An <xref href=\\\"System.Xml.Linq.XName\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the element name.</p>\\n\"\n    - id: content\n      type: System.Object\n      description: \"\\n<p>The contents of the element.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XElement.XElement(XName, Object)\n- uid: System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object[])\n  commentId: M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object[])\n  id: '#ctor(System.Xml.Linq.XName,System.Object[])'\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: XElement(XName, Object[])\n  fullName: System.Xml.Linq.XElement.XElement(System.Xml.Linq.XName, System.Object[])\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 205\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified name and content.</p>\\n\"\n  syntax:\n    content: public XElement(XName name, params object[] content)\n    content.vb: Public Sub New(name As XName, ParamArray content As Object())\n    parameters:\n    - id: name\n      type: System.Xml.Linq.XName\n      description: \"\\n<p>An <xref href=\\\"System.Xml.Linq.XName\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the element name.</p>\\n\"\n    - id: content\n      type: System.Object[]\n      description: \"\\n<p>The initial content of the element.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Xml.Linq.XElement.XElement(System.Xml.Linq.XName, System.Object())\n  name.vb: XElement(XName, Object())\n  nameWithType: XElement.XElement(XName, Object[])\n  nameWithType.vb: XElement.XElement(XName, Object())\n- uid: System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XStreamingElement)\n  commentId: M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XStreamingElement)\n  id: '#ctor(System.Xml.Linq.XStreamingElement)'\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: XElement(XStreamingElement)\n  fullName: System.Xml.Linq.XElement.XElement(System.Xml.Linq.XStreamingElement)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 206\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class from an <xref href=\\\"System.Xml.Linq.XStreamingElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public XElement(XStreamingElement other)\n    content.vb: Public Sub New(other As XStreamingElement)\n    parameters:\n    - id: other\n      type: System.Xml.Linq.XStreamingElement\n      description: \"\\n<p>An <xref href=\\\"System.Xml.Linq.XStreamingElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains unevaluated queries that will be iterated for the contents of this <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XElement.XElement(XStreamingElement)\n- uid: System.Xml.Linq.XElement.EmptySequence\n  commentId: P:System.Xml.Linq.XElement.EmptySequence\n  id: EmptySequence\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: EmptySequence\n  fullName: System.Xml.Linq.XElement.EmptySequence\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: EmptySequence\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 207\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Gets an empty collection of elements.</p>\\n\"\n  syntax:\n    content: public static IEnumerable<XElement> EmptySequence { get; }\n    content.vb: Public Shared ReadOnly Property EmptySequence As IEnumerable(Of XElement)\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}\n      description: \"\\n<p>An <xref href=\\\"System.Collections.Generic.IEnumerable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains an empty collection.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: XElement.EmptySequence\n- uid: System.Xml.Linq.XElement.FirstAttribute\n  commentId: P:System.Xml.Linq.XElement.FirstAttribute\n  id: FirstAttribute\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: FirstAttribute\n  fullName: System.Xml.Linq.XElement.FirstAttribute\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: FirstAttribute\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 208\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Gets the first attribute of this element.</p>\\n\"\n  syntax:\n    content: public XAttribute FirstAttribute { get; }\n    content.vb: Public ReadOnly Property FirstAttribute As XAttribute\n    parameters: []\n    return:\n      type: System.Xml.Linq.XAttribute\n      description: \"\\n<p>An <xref href=\\\"System.Xml.Linq.XAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the first attribute of this element.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: XElement.FirstAttribute\n- uid: System.Xml.Linq.XElement.HasAttributes\n  commentId: P:System.Xml.Linq.XElement.HasAttributes\n  id: HasAttributes\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: HasAttributes\n  fullName: System.Xml.Linq.XElement.HasAttributes\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: HasAttributes\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 209\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Gets a value indicating whether this element has at least one attribute.</p>\\n\"\n  syntax:\n    content: public bool HasAttributes { get; }\n    content.vb: Public ReadOnly Property HasAttributes As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if this element has at least one attribute; otherwise <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: XElement.HasAttributes\n- uid: System.Xml.Linq.XElement.HasElements\n  commentId: P:System.Xml.Linq.XElement.HasElements\n  id: HasElements\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: HasElements\n  fullName: System.Xml.Linq.XElement.HasElements\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: HasElements\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 210\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Gets a value indicating whether this element has at least one child element.</p>\\n\"\n  syntax:\n    content: public bool HasElements { get; }\n    content.vb: Public ReadOnly Property HasElements As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if this element has at least one child element; otherwise <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: XElement.HasElements\n- uid: System.Xml.Linq.XElement.IsEmpty\n  commentId: P:System.Xml.Linq.XElement.IsEmpty\n  id: IsEmpty\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: IsEmpty\n  fullName: System.Xml.Linq.XElement.IsEmpty\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsEmpty\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 211\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Gets a value indicating whether this element contains no content.</p>\\n\"\n  syntax:\n    content: public bool IsEmpty { get; }\n    content.vb: Public ReadOnly Property IsEmpty As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if this element contains no content; otherwise <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: XElement.IsEmpty\n- uid: System.Xml.Linq.XElement.LastAttribute\n  commentId: P:System.Xml.Linq.XElement.LastAttribute\n  id: LastAttribute\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: LastAttribute\n  fullName: System.Xml.Linq.XElement.LastAttribute\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: LastAttribute\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 212\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Gets the last attribute of this element.</p>\\n\"\n  syntax:\n    content: public XAttribute LastAttribute { get; }\n    content.vb: Public ReadOnly Property LastAttribute As XAttribute\n    parameters: []\n    return:\n      type: System.Xml.Linq.XAttribute\n      description: \"\\n<p>An <xref href=\\\"System.Xml.Linq.XAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the last attribute of this element.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: XElement.LastAttribute\n- uid: System.Xml.Linq.XElement.Name\n  commentId: P:System.Xml.Linq.XElement.Name\n  id: Name\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: Name\n  fullName: System.Xml.Linq.XElement.Name\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Name\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 213\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Gets or sets the name of this element.</p>\\n\"\n  syntax:\n    content: public XName Name { get; set; }\n    content.vb: Public Property Name As XName\n    parameters: []\n    return:\n      type: System.Xml.Linq.XName\n      description: \"\\n<p>An <xref href=\\\"System.Xml.Linq.XName\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the name of this element.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: XElement.Name\n- uid: System.Xml.Linq.XElement.NodeType\n  commentId: P:System.Xml.Linq.XElement.NodeType\n  id: NodeType\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: NodeType\n  fullName: System.Xml.Linq.XElement.NodeType\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: NodeType\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 214\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Gets the node type for this node.</p>\\n\"\n  syntax:\n    content: public override XmlNodeType NodeType { get; }\n    content.vb: Public Overrides ReadOnly Property NodeType As XmlNodeType\n    parameters: []\n    return:\n      type: System.Xml.XmlNodeType\n      description: \"\\n<p>The node type. For <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects, this value is <xref href=\\\"System.Xml.XmlNodeType.Element\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  overridden: System.Xml.Linq.XObject.NodeType\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: XElement.NodeType\n- uid: System.Xml.Linq.XElement.Value\n  commentId: P:System.Xml.Linq.XElement.Value\n  id: Value\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: Value\n  fullName: System.Xml.Linq.XElement.Value\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Value\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 215\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Gets or sets the concatenated text contents of this element.</p>\\n\"\n  syntax:\n    content: public string Value { get; set; }\n    content.vb: Public Property Value As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>A <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains all of the text content of this element. If there are multiple text nodes, they will be concatenated.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: XElement.Value\n- uid: System.Xml.Linq.XElement.AncestorsAndSelf\n  commentId: M:System.Xml.Linq.XElement.AncestorsAndSelf\n  id: AncestorsAndSelf\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: AncestorsAndSelf()\n  fullName: System.Xml.Linq.XElement.AncestorsAndSelf()\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AncestorsAndSelf\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 216\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Returns a collection of elements that contain this element, and the ancestors of this element. </p>\\n\"\n  syntax:\n    content: public IEnumerable<XElement> AncestorsAndSelf()\n    content.vb: Public Function AncestorsAndSelf As IEnumerable(Of XElement)\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}\n      description: \"\\n<p>An <xref href=\\\"System.Collections.Generic.IEnumerable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of elements that contain this element, and the ancestors of this element. </p>\\n\"\n  seealso:\n  - type: System.Xml.Linq.XNode.Ancestors\n    commentId: M:System.Xml.Linq.XNode.Ancestors\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XElement.AncestorsAndSelf()\n- uid: System.Xml.Linq.XElement.AncestorsAndSelf(System.Xml.Linq.XName)\n  commentId: M:System.Xml.Linq.XElement.AncestorsAndSelf(System.Xml.Linq.XName)\n  id: AncestorsAndSelf(System.Xml.Linq.XName)\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: AncestorsAndSelf(XName)\n  fullName: System.Xml.Linq.XElement.AncestorsAndSelf(System.Xml.Linq.XName)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AncestorsAndSelf\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 217\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Returns a filtered collection of elements that contain this element, and the ancestors of this element. Only elements that have a matching <xref href=\\\"System.Xml.Linq.XName\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> are included in the collection.</p>\\n\"\n  syntax:\n    content: public IEnumerable<XElement> AncestorsAndSelf(XName name)\n    content.vb: Public Function AncestorsAndSelf(name As XName) As IEnumerable(Of XElement)\n    parameters:\n    - id: name\n      type: System.Xml.Linq.XName\n      description: \"\\n<p>The <xref href=\\\"System.Xml.Linq.XName\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to match.</p>\\n\"\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}\n      description: \"\\n<p>An <xref href=\\\"System.Collections.Generic.IEnumerable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contain this element, and the ancestors of this element. Only elements that have a matching <xref href=\\\"System.Xml.Linq.XName\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> are included in the collection.</p>\\n\"\n  seealso:\n  - type: System.Xml.Linq.XNode.Ancestors\n    commentId: M:System.Xml.Linq.XNode.Ancestors\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XElement.AncestorsAndSelf(XName)\n- uid: System.Xml.Linq.XElement.Attribute(System.Xml.Linq.XName)\n  commentId: M:System.Xml.Linq.XElement.Attribute(System.Xml.Linq.XName)\n  id: Attribute(System.Xml.Linq.XName)\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: Attribute(XName)\n  fullName: System.Xml.Linq.XElement.Attribute(System.Xml.Linq.XName)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Attribute\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 218\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Returns the <xref href=\\\"System.Xml.Linq.XAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of this <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that has the specified <xref href=\\\"System.Xml.Linq.XName\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public XAttribute Attribute(XName name)\n    content.vb: Public Function Attribute(name As XName) As XAttribute\n    parameters:\n    - id: name\n      type: System.Xml.Linq.XName\n      description: \"\\n<p>The <xref href=\\\"System.Xml.Linq.XName\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the <xref href=\\\"System.Xml.Linq.XAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to get.</p>\\n\"\n    return:\n      type: System.Xml.Linq.XAttribute\n      description: \"\\n<p>An <xref href=\\\"System.Xml.Linq.XAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that has the specified <xref href=\\\"System.Xml.Linq.XName\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>; <strong>null</strong> if there is no attribute with the specified name.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XElement.Attribute(XName)\n- uid: System.Xml.Linq.XElement.Attributes\n  commentId: M:System.Xml.Linq.XElement.Attributes\n  id: Attributes\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: Attributes()\n  fullName: System.Xml.Linq.XElement.Attributes()\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Attributes\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 219\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Returns a collection of attributes of this element.</p>\\n\"\n  syntax:\n    content: public IEnumerable<XAttribute> Attributes()\n    content.vb: Public Function Attributes As IEnumerable(Of XAttribute)\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute}\n      description: \"\\n<p>An <xref href=\\\"System.Collections.Generic.IEnumerable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of <xref href=\\\"System.Xml.Linq.XAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of attributes of this element.</p>\\n\"\n  seealso:\n  - type: System.Xml.Linq.XContainer.Elements\n    commentId: M:System.Xml.Linq.XContainer.Elements\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XElement.Attributes()\n- uid: System.Xml.Linq.XElement.Attributes(System.Xml.Linq.XName)\n  commentId: M:System.Xml.Linq.XElement.Attributes(System.Xml.Linq.XName)\n  id: Attributes(System.Xml.Linq.XName)\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: Attributes(XName)\n  fullName: System.Xml.Linq.XElement.Attributes(System.Xml.Linq.XName)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Attributes\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 220\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Returns a filtered collection of attributes of this element. Only elements that have a matching <xref href=\\\"System.Xml.Linq.XName\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> are included in the collection.</p>\\n\"\n  syntax:\n    content: public IEnumerable<XAttribute> Attributes(XName name)\n    content.vb: Public Function Attributes(name As XName) As IEnumerable(Of XAttribute)\n    parameters:\n    - id: name\n      type: System.Xml.Linq.XName\n      description: \"\\n<p>The <xref href=\\\"System.Xml.Linq.XName\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to match.</p>\\n\"\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute}\n      description: \"\\n<p>An <xref href=\\\"System.Collections.Generic.IEnumerable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of <xref href=\\\"System.Xml.Linq.XAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the attributes of this element. Only elements that have a matching <xref href=\\\"System.Xml.Linq.XName\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> are included in the collection.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XElement.Attributes(XName)\n- uid: System.Xml.Linq.XElement.DescendantNodesAndSelf\n  commentId: M:System.Xml.Linq.XElement.DescendantNodesAndSelf\n  id: DescendantNodesAndSelf\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: DescendantNodesAndSelf()\n  fullName: System.Xml.Linq.XElement.DescendantNodesAndSelf()\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: DescendantNodesAndSelf\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 221\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Returns a collection of nodes that contain this element, and all descendant nodes of this element, in document order.</p>\\n\"\n  syntax:\n    content: public IEnumerable<XNode> DescendantNodesAndSelf()\n    content.vb: Public Function DescendantNodesAndSelf As IEnumerable(Of XNode)\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XNode}\n      description: \"\\n<p>An <xref href=\\\"System.Collections.Generic.IEnumerable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of <xref href=\\\"System.Xml.Linq.XNode\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contain this element, and all descendant nodes of this element, in document order.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XElement.DescendantNodesAndSelf()\n- uid: System.Xml.Linq.XElement.DescendantsAndSelf\n  commentId: M:System.Xml.Linq.XElement.DescendantsAndSelf\n  id: DescendantsAndSelf\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: DescendantsAndSelf()\n  fullName: System.Xml.Linq.XElement.DescendantsAndSelf()\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: DescendantsAndSelf\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 222\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Returns a collection of elements that contain this element, and all descendant elements of this element, in document order.</p>\\n\"\n  syntax:\n    content: public IEnumerable<XElement> DescendantsAndSelf()\n    content.vb: Public Function DescendantsAndSelf As IEnumerable(Of XElement)\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}\n      description: \"\\n<p>An <xref href=\\\"System.Collections.Generic.IEnumerable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of elements that contain this element, and all descendant elements of this element, in document order.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XElement.DescendantsAndSelf()\n- uid: System.Xml.Linq.XElement.DescendantsAndSelf(System.Xml.Linq.XName)\n  commentId: M:System.Xml.Linq.XElement.DescendantsAndSelf(System.Xml.Linq.XName)\n  id: DescendantsAndSelf(System.Xml.Linq.XName)\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: DescendantsAndSelf(XName)\n  fullName: System.Xml.Linq.XElement.DescendantsAndSelf(System.Xml.Linq.XName)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: DescendantsAndSelf\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 223\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Returns a filtered collection of elements that contain this element, and all descendant elements of this element, in document order. Only elements that have a matching <xref href=\\\"System.Xml.Linq.XName\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> are included in the collection.</p>\\n\"\n  syntax:\n    content: public IEnumerable<XElement> DescendantsAndSelf(XName name)\n    content.vb: Public Function DescendantsAndSelf(name As XName) As IEnumerable(Of XElement)\n    parameters:\n    - id: name\n      type: System.Xml.Linq.XName\n      description: \"\\n<p>The <xref href=\\\"System.Xml.Linq.XName\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to match.</p>\\n\"\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}\n      description: \"\\n<p>An <xref href=\\\"System.Collections.Generic.IEnumerable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contain this element, and all descendant elements of this element, in document order. Only elements that have a matching <xref href=\\\"System.Xml.Linq.XName\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> are included in the collection.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XElement.DescendantsAndSelf(XName)\n- uid: System.Xml.Linq.XElement.GetDefaultNamespace\n  commentId: M:System.Xml.Linq.XElement.GetDefaultNamespace\n  id: GetDefaultNamespace\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: GetDefaultNamespace()\n  fullName: System.Xml.Linq.XElement.GetDefaultNamespace()\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetDefaultNamespace\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 224\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Gets the default <xref href=\\\"System.Xml.Linq.XNamespace\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of this <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public XNamespace GetDefaultNamespace()\n    content.vb: Public Function GetDefaultNamespace As XNamespace\n    return:\n      type: System.Xml.Linq.XNamespace\n      description: \"\\n<p>An <xref href=\\\"System.Xml.Linq.XNamespace\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the default namespace of this <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XElement.GetDefaultNamespace()\n- uid: System.Xml.Linq.XElement.GetNamespaceOfPrefix(System.String)\n  commentId: M:System.Xml.Linq.XElement.GetNamespaceOfPrefix(System.String)\n  id: GetNamespaceOfPrefix(System.String)\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: GetNamespaceOfPrefix(String)\n  fullName: System.Xml.Linq.XElement.GetNamespaceOfPrefix(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetNamespaceOfPrefix\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 225\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Gets the namespace associated with a particular prefix for this <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public XNamespace GetNamespaceOfPrefix(string prefix)\n    content.vb: Public Function GetNamespaceOfPrefix(prefix As String) As XNamespace\n    parameters:\n    - id: prefix\n      type: System.String\n      description: \"\\n<p>A string that contains the namespace prefix to look up.</p>\\n\"\n    return:\n      type: System.Xml.Linq.XNamespace\n      description: \"\\n<p>An <xref href=\\\"System.Xml.Linq.XNamespace\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for the namespace associated with the prefix for this <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XElement.GetNamespaceOfPrefix(String)\n- uid: System.Xml.Linq.XElement.GetPrefixOfNamespace(System.Xml.Linq.XNamespace)\n  commentId: M:System.Xml.Linq.XElement.GetPrefixOfNamespace(System.Xml.Linq.XNamespace)\n  id: GetPrefixOfNamespace(System.Xml.Linq.XNamespace)\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: GetPrefixOfNamespace(XNamespace)\n  fullName: System.Xml.Linq.XElement.GetPrefixOfNamespace(System.Xml.Linq.XNamespace)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetPrefixOfNamespace\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 226\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Gets the prefix associated with a namespace for this <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public string GetPrefixOfNamespace(XNamespace ns)\n    content.vb: Public Function GetPrefixOfNamespace(ns As XNamespace) As String\n    parameters:\n    - id: ns\n      type: System.Xml.Linq.XNamespace\n      description: \"\\n<p>An <xref href=\\\"System.Xml.Linq.XNamespace\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to look up.</p>\\n\"\n    return:\n      type: System.String\n      description: \"\\n<p>A <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the namespace prefix.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XElement.GetPrefixOfNamespace(XNamespace)\n- uid: System.Xml.Linq.XElement.Load(System.IO.Stream)\n  commentId: M:System.Xml.Linq.XElement.Load(System.IO.Stream)\n  id: Load(System.IO.Stream)\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: Load(Stream)\n  fullName: System.Xml.Linq.XElement.Load(System.IO.Stream)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Load\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 227\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Creates a new <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance by using the specified stream.</p>\\n\"\n  syntax:\n    content: public static XElement Load(Stream stream)\n    content.vb: Public Shared Function Load(stream As Stream) As XElement\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: \"\\n<p>The stream that contains the XML data.</p>\\n\"\n    return:\n      type: System.Xml.Linq.XElement\n      description: \"\\n<p>An <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object used to read the data that is contained in the stream.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: XElement.Load(Stream)\n- uid: System.Xml.Linq.XElement.Load(System.IO.Stream,System.Xml.Linq.LoadOptions)\n  commentId: M:System.Xml.Linq.XElement.Load(System.IO.Stream,System.Xml.Linq.LoadOptions)\n  id: Load(System.IO.Stream,System.Xml.Linq.LoadOptions)\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: Load(Stream, LoadOptions)\n  fullName: System.Xml.Linq.XElement.Load(System.IO.Stream, System.Xml.Linq.LoadOptions)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Load\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 228\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Creates a new <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance by using the specified stream, optionally preserving white space, setting the base URI, and retaining line information.</p>\\n\"\n  syntax:\n    content: public static XElement Load(Stream stream, LoadOptions options)\n    content.vb: Public Shared Function Load(stream As Stream, options As LoadOptions) As XElement\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: \"\\n<p>The stream containing the XML data.</p>\\n\"\n    - id: options\n      type: System.Xml.Linq.LoadOptions\n      description: \"\\n<p>A <xref href=\\\"System.Xml.Linq.LoadOptions\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that specifies whether to load base URI and line information.</p>\\n\"\n    return:\n      type: System.Xml.Linq.XElement\n      description: \"\\n<p>An <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object used to read the data that the stream contains.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: XElement.Load(Stream, LoadOptions)\n- uid: System.Xml.Linq.XElement.Load(System.IO.TextReader)\n  commentId: M:System.Xml.Linq.XElement.Load(System.IO.TextReader)\n  id: Load(System.IO.TextReader)\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: Load(TextReader)\n  fullName: System.Xml.Linq.XElement.Load(System.IO.TextReader)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Load\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 229\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Loads an <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> from a <xref href=\\\"System.IO.TextReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  syntax:\n    content: public static XElement Load(TextReader textReader)\n    content.vb: Public Shared Function Load(textReader As TextReader) As XElement\n    parameters:\n    - id: textReader\n      type: System.IO.TextReader\n      description: \"\\n<p>A <xref href=\\\"System.IO.TextReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that will be read for the <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> content.</p>\\n\"\n    return:\n      type: System.Xml.Linq.XElement\n      description: \"\\n<p>An <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the XML that was read from the specified <xref href=\\\"System.IO.TextReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: XElement.Load(TextReader)\n- uid: System.Xml.Linq.XElement.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)\n  commentId: M:System.Xml.Linq.XElement.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)\n  id: Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: Load(TextReader, LoadOptions)\n  fullName: System.Xml.Linq.XElement.Load(System.IO.TextReader, System.Xml.Linq.LoadOptions)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Load\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 230\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Loads an <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> from a <xref href=\\\"System.IO.TextReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, optionally preserving white space and retaining line information. </p>\\n\"\n  syntax:\n    content: public static XElement Load(TextReader textReader, LoadOptions options)\n    content.vb: Public Shared Function Load(textReader As TextReader, options As LoadOptions) As XElement\n    parameters:\n    - id: textReader\n      type: System.IO.TextReader\n      description: \"\\n<p>A <xref href=\\\"System.IO.TextReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that will be read for the <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> content.</p>\\n\"\n    - id: options\n      type: System.Xml.Linq.LoadOptions\n      description: \"\\n<p>A <xref href=\\\"System.Xml.Linq.LoadOptions\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that specifies white space behavior, and whether to load base URI and line information.</p>\\n\"\n    return:\n      type: System.Xml.Linq.XElement\n      description: \"\\n<p>An <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the XML that was read from the specified <xref href=\\\"System.IO.TextReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: XElement.Load(TextReader, LoadOptions)\n- uid: System.Xml.Linq.XElement.Load(System.String)\n  commentId: M:System.Xml.Linq.XElement.Load(System.String)\n  id: Load(System.String)\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: Load(String)\n  fullName: System.Xml.Linq.XElement.Load(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Load\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 231\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Loads an <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> from a file.</p>\\n\"\n  syntax:\n    content: public static XElement Load(string uri)\n    content.vb: Public Shared Function Load(uri As String) As XElement\n    parameters:\n    - id: uri\n      type: System.String\n      description: \"\\n<p>A URI string referencing the file to load into a new <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    return:\n      type: System.Xml.Linq.XElement\n      description: \"\\n<p>An <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the contents of the specified file.</p>\\n\"\n  seealso:\n  - type: System.Xml.Linq.XDocument.Load(System.IO.Stream)\n    commentId: M:System.Xml.Linq.XDocument.Load(System.IO.Stream)\n  - type: System.Xml.Linq.XElement.Parse(System.String)\n    commentId: M:System.Xml.Linq.XElement.Parse(System.String)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: XElement.Load(String)\n- uid: System.Xml.Linq.XElement.Load(System.String,System.Xml.Linq.LoadOptions)\n  commentId: M:System.Xml.Linq.XElement.Load(System.String,System.Xml.Linq.LoadOptions)\n  id: Load(System.String,System.Xml.Linq.LoadOptions)\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: Load(String, LoadOptions)\n  fullName: System.Xml.Linq.XElement.Load(System.String, System.Xml.Linq.LoadOptions)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Load\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 232\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Loads an <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> from a file, optionally preserving white space, setting the base URI, and retaining line information.</p>\\n\"\n  syntax:\n    content: public static XElement Load(string uri, LoadOptions options)\n    content.vb: Public Shared Function Load(uri As String, options As LoadOptions) As XElement\n    parameters:\n    - id: uri\n      type: System.String\n      description: \"\\n<p>A URI string referencing the file to load into an <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    - id: options\n      type: System.Xml.Linq.LoadOptions\n      description: \"\\n<p>A <xref href=\\\"System.Xml.Linq.LoadOptions\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that specifies white space behavior, and whether to load base URI and line information.</p>\\n\"\n    return:\n      type: System.Xml.Linq.XElement\n      description: \"\\n<p>An <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the contents of the specified file.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: XElement.Load(String, LoadOptions)\n- uid: System.Xml.Linq.XElement.Load(System.Xml.XmlReader)\n  commentId: M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader)\n  id: Load(System.Xml.XmlReader)\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: Load(XmlReader)\n  fullName: System.Xml.Linq.XElement.Load(System.Xml.XmlReader)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Load\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 233\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Loads an <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> from an <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  syntax:\n    content: public static XElement Load(XmlReader reader)\n    content.vb: Public Shared Function Load(reader As XmlReader) As XElement\n    parameters:\n    - id: reader\n      type: System.Xml.XmlReader\n      description: \"\\n<p>A <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that will be read for the content of the <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    return:\n      type: System.Xml.Linq.XElement\n      description: \"\\n<p>An <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the XML that was read from the specified <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: XElement.Load(XmlReader)\n- uid: System.Xml.Linq.XElement.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)\n  commentId: M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)\n  id: Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: Load(XmlReader, LoadOptions)\n  fullName: System.Xml.Linq.XElement.Load(System.Xml.XmlReader, System.Xml.Linq.LoadOptions)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Load\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 234\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Loads an <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> from an <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, optionally preserving white space, setting the base URI, and retaining line information.</p>\\n\"\n  syntax:\n    content: public static XElement Load(XmlReader reader, LoadOptions options)\n    content.vb: Public Shared Function Load(reader As XmlReader, options As LoadOptions) As XElement\n    parameters:\n    - id: reader\n      type: System.Xml.XmlReader\n      description: \"\\n<p>A <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that will be read for the content of the <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    - id: options\n      type: System.Xml.Linq.LoadOptions\n      description: \"\\n<p>A <xref href=\\\"System.Xml.Linq.LoadOptions\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that specifies white space behavior, and whether to load base URI and line information.</p>\\n\"\n    return:\n      type: System.Xml.Linq.XElement\n      description: \"\\n<p>An <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the XML that was read from the specified <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: XElement.Load(XmlReader, LoadOptions)\n- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Boolean\n  commentId: M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Boolean\n  id: op_Explicit(System.Xml.Linq.XElement)~System.Boolean\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: Explicit(XElement to Boolean)\n  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.Boolean)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Explicit\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 235\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Cast the value of this <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to a <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: >-\n      [CLSCompliant(false)]\n\n      public static explicit operator bool (XElement element)\n    content.vb: >-\n      <CLSCompliant(False)>\n\n      Public Shared Narrowing Operator CType(element As XElement) As Boolean\n    parameters:\n    - id: element\n      type: System.Xml.Linq.XElement\n      description: \"\\n<p>The <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to cast to <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>A <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the content of this <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>The element does not contain a valid <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>element</em> parameter is <strong>null</strong>.</p>\\n\"\n  attributes:\n  - type: System.CLSCompliantAttribute\n    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)\n    arguments:\n    - type: System.Boolean\n      value: false\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.Boolean)\n  name.vb: Narrowing(XElement to Boolean)\n  nameWithType: XElement.Explicit(XElement to Boolean)\n  nameWithType.vb: XElement.Narrowing(XElement to Boolean)\n- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTime\n  commentId: M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTime\n  id: op_Explicit(System.Xml.Linq.XElement)~System.DateTime\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: Explicit(XElement to DateTime)\n  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.DateTime)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Explicit\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 237\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Cast the value of this <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to a <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: >-\n      [CLSCompliant(false)]\n\n      public static explicit operator DateTime(XElement element)\n    content.vb: >-\n      <CLSCompliant(False)>\n\n      Public Shared Narrowing Operator CType(element As XElement) As Date\n    parameters:\n    - id: element\n      type: System.Xml.Linq.XElement\n      description: \"\\n<p>The <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to cast to <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    return:\n      type: System.DateTime\n      description: \"\\n<p>A <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the content of this <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>The element does not contain a valid <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>element</em> parameter is <strong>null</strong>.</p>\\n\"\n  attributes:\n  - type: System.CLSCompliantAttribute\n    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)\n    arguments:\n    - type: System.Boolean\n      value: false\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.DateTime)\n  name.vb: Narrowing(XElement to DateTime)\n  nameWithType: XElement.Explicit(XElement to DateTime)\n  nameWithType.vb: XElement.Narrowing(XElement to DateTime)\n- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTimeOffset\n  commentId: M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTimeOffset\n  id: op_Explicit(System.Xml.Linq.XElement)~System.DateTimeOffset\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: Explicit(XElement to DateTimeOffset)\n  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.DateTimeOffset)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Explicit\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 239\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Cast the value of this <xref href=\\\"System.Xml.Linq.XAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to a <xref href=\\\"System.DateTimeOffset\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: >-\n      [CLSCompliant(false)]\n\n      public static explicit operator DateTimeOffset(XElement element)\n    content.vb: >-\n      <CLSCompliant(False)>\n\n      Public Shared Narrowing Operator CType(element As XElement) As DateTimeOffset\n    parameters:\n    - id: element\n      type: System.Xml.Linq.XElement\n      description: \"\\n<p>The <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to cast to <xref href=\\\"System.DateTimeOffset\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    return:\n      type: System.DateTimeOffset\n      description: \"\\n<p>A <xref href=\\\"System.DateTimeOffset\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the content of this <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>The element does not contain a valid <xref href=\\\"System.DateTimeOffset\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>element</em> parameter is <strong>null</strong>.</p>\\n\"\n  attributes:\n  - type: System.CLSCompliantAttribute\n    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)\n    arguments:\n    - type: System.Boolean\n      value: false\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.DateTimeOffset)\n  name.vb: Narrowing(XElement to DateTimeOffset)\n  nameWithType: XElement.Explicit(XElement to DateTimeOffset)\n  nameWithType.vb: XElement.Narrowing(XElement to DateTimeOffset)\n- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Decimal\n  commentId: M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Decimal\n  id: op_Explicit(System.Xml.Linq.XElement)~System.Decimal\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: Explicit(XElement to Decimal)\n  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.Decimal)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Explicit\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 241\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Cast the value of this <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to a <xref href=\\\"System.Decimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: >-\n      [CLSCompliant(false)]\n\n      public static explicit operator decimal (XElement element)\n    content.vb: >-\n      <CLSCompliant(False)>\n\n      Public Shared Narrowing Operator CType(element As XElement) As Decimal\n    parameters:\n    - id: element\n      type: System.Xml.Linq.XElement\n      description: \"\\n<p>The <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to cast to <xref href=\\\"System.Decimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    return:\n      type: System.Decimal\n      description: \"\\n<p>A <xref href=\\\"System.Decimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the content of this <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>The element does not contain a valid <xref href=\\\"System.Decimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>element</em> parameter is <strong>null</strong>.</p>\\n\"\n  attributes:\n  - type: System.CLSCompliantAttribute\n    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)\n    arguments:\n    - type: System.Boolean\n      value: false\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.Decimal)\n  name.vb: Narrowing(XElement to Decimal)\n  nameWithType: XElement.Explicit(XElement to Decimal)\n  nameWithType.vb: XElement.Narrowing(XElement to Decimal)\n- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Double\n  commentId: M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Double\n  id: op_Explicit(System.Xml.Linq.XElement)~System.Double\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: Explicit(XElement to Double)\n  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.Double)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Explicit\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 243\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Cast the value of this <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to a <xref href=\\\"System.Double\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: >-\n      [CLSCompliant(false)]\n\n      public static explicit operator double (XElement element)\n    content.vb: >-\n      <CLSCompliant(False)>\n\n      Public Shared Narrowing Operator CType(element As XElement) As Double\n    parameters:\n    - id: element\n      type: System.Xml.Linq.XElement\n      description: \"\\n<p>The <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to cast to <xref href=\\\"System.Double\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    return:\n      type: System.Double\n      description: \"\\n<p>A <xref href=\\\"System.Double\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the content of this <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>The element does not contain a valid <xref href=\\\"System.Double\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>element</em> parameter is <strong>null</strong>.</p>\\n\"\n  attributes:\n  - type: System.CLSCompliantAttribute\n    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)\n    arguments:\n    - type: System.Boolean\n      value: false\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.Double)\n  name.vb: Narrowing(XElement to Double)\n  nameWithType: XElement.Explicit(XElement to Double)\n  nameWithType.vb: XElement.Narrowing(XElement to Double)\n- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Guid\n  commentId: M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Guid\n  id: op_Explicit(System.Xml.Linq.XElement)~System.Guid\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: Explicit(XElement to Guid)\n  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.Guid)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Explicit\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 245\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Cast the value of this <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to a <xref href=\\\"System.Guid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: >-\n      [CLSCompliant(false)]\n\n      public static explicit operator Guid(XElement element)\n    content.vb: >-\n      <CLSCompliant(False)>\n\n      Public Shared Narrowing Operator CType(element As XElement) As Guid\n    parameters:\n    - id: element\n      type: System.Xml.Linq.XElement\n      description: \"\\n<p>The <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to cast to <xref href=\\\"System.Guid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    return:\n      type: System.Guid\n      description: \"\\n<p>A <xref href=\\\"System.Guid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the content of this <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>The element does not contain a valid <xref href=\\\"System.Guid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>element</em> parameter is <strong>null</strong>.</p>\\n\"\n  attributes:\n  - type: System.CLSCompliantAttribute\n    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)\n    arguments:\n    - type: System.Boolean\n      value: false\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.Guid)\n  name.vb: Narrowing(XElement to Guid)\n  nameWithType: XElement.Explicit(XElement to Guid)\n  nameWithType.vb: XElement.Narrowing(XElement to Guid)\n- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int32\n  commentId: M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int32\n  id: op_Explicit(System.Xml.Linq.XElement)~System.Int32\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: Explicit(XElement to Int32)\n  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.Int32)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Explicit\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 247\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Cast the value of this <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to an <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: >-\n      [CLSCompliant(false)]\n\n      public static explicit operator int (XElement element)\n    content.vb: >-\n      <CLSCompliant(False)>\n\n      Public Shared Narrowing Operator CType(element As XElement) As Integer\n    parameters:\n    - id: element\n      type: System.Xml.Linq.XElement\n      description: \"\\n<p>The <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to cast to <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>A <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the content of this <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>The element does not contain a valid <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>element</em> parameter is <strong>null</strong>.</p>\\n\"\n  attributes:\n  - type: System.CLSCompliantAttribute\n    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)\n    arguments:\n    - type: System.Boolean\n      value: false\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.Int32)\n  name.vb: Narrowing(XElement to Int32)\n  nameWithType: XElement.Explicit(XElement to Int32)\n  nameWithType.vb: XElement.Narrowing(XElement to Int32)\n- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int64\n  commentId: M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int64\n  id: op_Explicit(System.Xml.Linq.XElement)~System.Int64\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: Explicit(XElement to Int64)\n  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.Int64)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Explicit\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 249\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Cast the value of this <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to an <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: >-\n      [CLSCompliant(false)]\n\n      public static explicit operator long (XElement element)\n    content.vb: >-\n      <CLSCompliant(False)>\n\n      Public Shared Narrowing Operator CType(element As XElement) As Long\n    parameters:\n    - id: element\n      type: System.Xml.Linq.XElement\n      description: \"\\n<p>The <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to cast to <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    return:\n      type: System.Int64\n      description: \"\\n<p>A <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the content of this <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>The element does not contain a valid <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>element</em> parameter is <strong>null</strong>.</p>\\n\"\n  attributes:\n  - type: System.CLSCompliantAttribute\n    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)\n    arguments:\n    - type: System.Boolean\n      value: false\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.Int64)\n  name.vb: Narrowing(XElement to Int64)\n  nameWithType: XElement.Explicit(XElement to Int64)\n  nameWithType.vb: XElement.Narrowing(XElement to Int64)\n- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Boolean}\n  commentId: M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Boolean}\n  id: op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Boolean}\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: Explicit(XElement to Nullable<Boolean>)\n  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.Nullable<System.Boolean>)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Explicit\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 251\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Cast the value of this <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to a <xref href=\\\"System.Nullable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: >-\n      [CLSCompliant(false)]\n\n      public static explicit operator bool ? (XElement element)\n    content.vb: >-\n      <CLSCompliant(False)>\n\n      Public Shared Narrowing Operator CType(element As XElement) As Boolean?\n    parameters:\n    - id: element\n      type: System.Xml.Linq.XElement\n      description: \"\\n<p>The <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to cast to <xref href=\\\"System.Nullable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    return:\n      type: System.Nullable{System.Boolean}\n      description: \"\\n<p>A <xref href=\\\"System.Nullable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the content of this <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>The element does not contain a valid <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  attributes:\n  - type: System.CLSCompliantAttribute\n    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)\n    arguments:\n    - type: System.Boolean\n      value: false\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.Nullable(Of System.Boolean))\n  name.vb: Narrowing(XElement to Nullable(Of Boolean))\n  nameWithType: XElement.Explicit(XElement to Nullable<Boolean>)\n  nameWithType.vb: XElement.Narrowing(XElement to Nullable(Of Boolean))\n- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTime}\n  commentId: M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTime}\n  id: op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTime}\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: Explicit(XElement to Nullable<DateTime>)\n  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.Nullable<System.DateTime>)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Explicit\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 253\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Cast the value of this <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to a <xref href=\\\"System.Nullable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: >-\n      [CLSCompliant(false)]\n\n      public static explicit operator DateTime? (XElement element)\n    content.vb: >-\n      <CLSCompliant(False)>\n\n      Public Shared Narrowing Operator CType(element As XElement) As Date?\n    parameters:\n    - id: element\n      type: System.Xml.Linq.XElement\n      description: \"\\n<p>The <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to cast to <xref href=\\\"System.Nullable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    return:\n      type: System.Nullable{System.DateTime}\n      description: \"\\n<p>A <xref href=\\\"System.Nullable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the content of this <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>The element does not contain a valid <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  attributes:\n  - type: System.CLSCompliantAttribute\n    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)\n    arguments:\n    - type: System.Boolean\n      value: false\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.Nullable(Of System.DateTime))\n  name.vb: Narrowing(XElement to Nullable(Of DateTime))\n  nameWithType: XElement.Explicit(XElement to Nullable<DateTime>)\n  nameWithType.vb: XElement.Narrowing(XElement to Nullable(Of DateTime))\n- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTimeOffset}\n  commentId: M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTimeOffset}\n  id: op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTimeOffset}\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: Explicit(XElement to Nullable<DateTimeOffset>)\n  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.Nullable<System.DateTimeOffset>)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Explicit\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 255\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Cast the value of this <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to a <xref href=\\\"System.Nullable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of <xref href=\\\"System.DateTimeOffset\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: >-\n      [CLSCompliant(false)]\n\n      public static explicit operator DateTimeOffset? (XElement element)\n    content.vb: >-\n      <CLSCompliant(False)>\n\n      Public Shared Narrowing Operator CType(element As XElement) As DateTimeOffset?\n    parameters:\n    - id: element\n      type: System.Xml.Linq.XElement\n      description: \"\\n<p>The <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to cast to an <xref href=\\\"System.Nullable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of <xref href=\\\"System.DateTimeOffset\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    return:\n      type: System.Nullable{System.DateTimeOffset}\n      description: \"\\n<p>A <xref href=\\\"System.Nullable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of <xref href=\\\"System.DateTimeOffset\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the content of this <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>The element does not contain a valid <xref href=\\\"System.DateTimeOffset\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  attributes:\n  - type: System.CLSCompliantAttribute\n    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)\n    arguments:\n    - type: System.Boolean\n      value: false\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.Nullable(Of System.DateTimeOffset))\n  name.vb: Narrowing(XElement to Nullable(Of DateTimeOffset))\n  nameWithType: XElement.Explicit(XElement to Nullable<DateTimeOffset>)\n  nameWithType.vb: XElement.Narrowing(XElement to Nullable(Of DateTimeOffset))\n- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Decimal}\n  commentId: M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Decimal}\n  id: op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Decimal}\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: Explicit(XElement to Nullable<Decimal>)\n  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.Nullable<System.Decimal>)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Explicit\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 257\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Cast the value of this <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to a <xref href=\\\"System.Nullable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of <xref href=\\\"System.Decimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: >-\n      [CLSCompliant(false)]\n\n      public static explicit operator decimal ? (XElement element)\n    content.vb: >-\n      <CLSCompliant(False)>\n\n      Public Shared Narrowing Operator CType(element As XElement) As Decimal?\n    parameters:\n    - id: element\n      type: System.Xml.Linq.XElement\n      description: \"\\n<p>The <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to cast to <xref href=\\\"System.Nullable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of <xref href=\\\"System.Decimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    return:\n      type: System.Nullable{System.Decimal}\n      description: \"\\n<p>A <xref href=\\\"System.Nullable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of <xref href=\\\"System.Decimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the content of this <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>The element does not contain a valid <xref href=\\\"System.Decimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  attributes:\n  - type: System.CLSCompliantAttribute\n    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)\n    arguments:\n    - type: System.Boolean\n      value: false\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.Nullable(Of System.Decimal))\n  name.vb: Narrowing(XElement to Nullable(Of Decimal))\n  nameWithType: XElement.Explicit(XElement to Nullable<Decimal>)\n  nameWithType.vb: XElement.Narrowing(XElement to Nullable(Of Decimal))\n- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Double}\n  commentId: M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Double}\n  id: op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Double}\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: Explicit(XElement to Nullable<Double>)\n  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.Nullable<System.Double>)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Explicit\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 259\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Cast the value of this <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to a <xref href=\\\"System.Nullable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of <xref href=\\\"System.Double\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: >-\n      [CLSCompliant(false)]\n\n      public static explicit operator double ? (XElement element)\n    content.vb: >-\n      <CLSCompliant(False)>\n\n      Public Shared Narrowing Operator CType(element As XElement) As Double?\n    parameters:\n    - id: element\n      type: System.Xml.Linq.XElement\n      description: \"\\n<p>The <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to cast to <xref href=\\\"System.Nullable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of <xref href=\\\"System.Double\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    return:\n      type: System.Nullable{System.Double}\n      description: \"\\n<p>A <xref href=\\\"System.Nullable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of <xref href=\\\"System.Double\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the content of this <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>The element does not contain a valid <xref href=\\\"System.Double\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  attributes:\n  - type: System.CLSCompliantAttribute\n    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)\n    arguments:\n    - type: System.Boolean\n      value: false\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.Nullable(Of System.Double))\n  name.vb: Narrowing(XElement to Nullable(Of Double))\n  nameWithType: XElement.Explicit(XElement to Nullable<Double>)\n  nameWithType.vb: XElement.Narrowing(XElement to Nullable(Of Double))\n- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Guid}\n  commentId: M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Guid}\n  id: op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Guid}\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: Explicit(XElement to Nullable<Guid>)\n  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.Nullable<System.Guid>)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Explicit\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 261\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Cast the value of this <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to a <xref href=\\\"System.Nullable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of <xref href=\\\"System.Guid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: >-\n      [CLSCompliant(false)]\n\n      public static explicit operator Guid? (XElement element)\n    content.vb: >-\n      <CLSCompliant(False)>\n\n      Public Shared Narrowing Operator CType(element As XElement) As Guid?\n    parameters:\n    - id: element\n      type: System.Xml.Linq.XElement\n      description: \"\\n<p>The <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to cast to <xref href=\\\"System.Nullable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of <xref href=\\\"System.Guid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    return:\n      type: System.Nullable{System.Guid}\n      description: \"\\n<p>A <xref href=\\\"System.Nullable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of <xref href=\\\"System.Guid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the content of this <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>The element does not contain a valid <xref href=\\\"System.Guid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  attributes:\n  - type: System.CLSCompliantAttribute\n    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)\n    arguments:\n    - type: System.Boolean\n      value: false\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.Nullable(Of System.Guid))\n  name.vb: Narrowing(XElement to Nullable(Of Guid))\n  nameWithType: XElement.Explicit(XElement to Nullable<Guid>)\n  nameWithType.vb: XElement.Narrowing(XElement to Nullable(Of Guid))\n- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int32}\n  commentId: M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int32}\n  id: op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int32}\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: Explicit(XElement to Nullable<Int32>)\n  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.Nullable<System.Int32>)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Explicit\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 263\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Cast the value of this <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to a <xref href=\\\"System.Nullable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: >-\n      [CLSCompliant(false)]\n\n      public static explicit operator int ? (XElement element)\n    content.vb: >-\n      <CLSCompliant(False)>\n\n      Public Shared Narrowing Operator CType(element As XElement) As Integer?\n    parameters:\n    - id: element\n      type: System.Xml.Linq.XElement\n      description: \"\\n<p>The <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to cast to <xref href=\\\"System.Nullable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    return:\n      type: System.Nullable{System.Int32}\n      description: \"\\n<p>A <xref href=\\\"System.Nullable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the content of this <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>The element does not contain a valid <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  attributes:\n  - type: System.CLSCompliantAttribute\n    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)\n    arguments:\n    - type: System.Boolean\n      value: false\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.Nullable(Of System.Int32))\n  name.vb: Narrowing(XElement to Nullable(Of Int32))\n  nameWithType: XElement.Explicit(XElement to Nullable<Int32>)\n  nameWithType.vb: XElement.Narrowing(XElement to Nullable(Of Int32))\n- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int64}\n  commentId: M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int64}\n  id: op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int64}\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: Explicit(XElement to Nullable<Int64>)\n  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.Nullable<System.Int64>)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Explicit\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 265\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Cast the value of this <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to a <xref href=\\\"System.Nullable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: >-\n      [CLSCompliant(false)]\n\n      public static explicit operator long ? (XElement element)\n    content.vb: >-\n      <CLSCompliant(False)>\n\n      Public Shared Narrowing Operator CType(element As XElement) As Long?\n    parameters:\n    - id: element\n      type: System.Xml.Linq.XElement\n      description: \"\\n<p>The <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to cast to <xref href=\\\"System.Nullable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    return:\n      type: System.Nullable{System.Int64}\n      description: \"\\n<p>A <xref href=\\\"System.Nullable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the content of this <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>The element does not contain a valid <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  attributes:\n  - type: System.CLSCompliantAttribute\n    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)\n    arguments:\n    - type: System.Boolean\n      value: false\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.Nullable(Of System.Int64))\n  name.vb: Narrowing(XElement to Nullable(Of Int64))\n  nameWithType: XElement.Explicit(XElement to Nullable<Int64>)\n  nameWithType.vb: XElement.Narrowing(XElement to Nullable(Of Int64))\n- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Single}\n  commentId: M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Single}\n  id: op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Single}\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: Explicit(XElement to Nullable<Single>)\n  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.Nullable<System.Single>)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Explicit\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 267\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Cast the value of this <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to a <xref href=\\\"System.Nullable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of <xref href=\\\"System.Single\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: >-\n      [CLSCompliant(false)]\n\n      public static explicit operator float ? (XElement element)\n    content.vb: >-\n      <CLSCompliant(False)>\n\n      Public Shared Narrowing Operator CType(element As XElement) As Single?\n    parameters:\n    - id: element\n      type: System.Xml.Linq.XElement\n      description: \"\\n<p>The <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to cast to <xref href=\\\"System.Nullable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of <xref href=\\\"System.Single\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    return:\n      type: System.Nullable{System.Single}\n      description: \"\\n<p>A <xref href=\\\"System.Nullable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of <xref href=\\\"System.Single\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the content of this <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>The element does not contain a valid <xref href=\\\"System.Single\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  attributes:\n  - type: System.CLSCompliantAttribute\n    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)\n    arguments:\n    - type: System.Boolean\n      value: false\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.Nullable(Of System.Single))\n  name.vb: Narrowing(XElement to Nullable(Of Single))\n  nameWithType: XElement.Explicit(XElement to Nullable<Single>)\n  nameWithType.vb: XElement.Narrowing(XElement to Nullable(Of Single))\n- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.TimeSpan}\n  commentId: M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.TimeSpan}\n  id: op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.TimeSpan}\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: Explicit(XElement to Nullable<TimeSpan>)\n  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.Nullable<System.TimeSpan>)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Explicit\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 269\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Cast the value of this <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to a <xref href=\\\"System.Nullable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: >-\n      [CLSCompliant(false)]\n\n      public static explicit operator TimeSpan? (XElement element)\n    content.vb: >-\n      <CLSCompliant(False)>\n\n      Public Shared Narrowing Operator CType(element As XElement) As TimeSpan?\n    parameters:\n    - id: element\n      type: System.Xml.Linq.XElement\n      description: \"\\n<p>The <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to cast to <xref href=\\\"System.Nullable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    return:\n      type: System.Nullable{System.TimeSpan}\n      description: \"\\n<p>A <xref href=\\\"System.Nullable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the content of this <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>The element does not contain a valid <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  attributes:\n  - type: System.CLSCompliantAttribute\n    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)\n    arguments:\n    - type: System.Boolean\n      value: false\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.Nullable(Of System.TimeSpan))\n  name.vb: Narrowing(XElement to Nullable(Of TimeSpan))\n  nameWithType: XElement.Explicit(XElement to Nullable<TimeSpan>)\n  nameWithType.vb: XElement.Narrowing(XElement to Nullable(Of TimeSpan))\n- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt32}\n  commentId: M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt32}\n  id: op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt32}\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: Explicit(XElement to Nullable<UInt32>)\n  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.Nullable<System.UInt32>)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Explicit\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 271\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Cast the value of this <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to a <xref href=\\\"System.Nullable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of <xref href=\\\"System.UInt32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: >-\n      [CLSCompliant(false)]\n\n      public static explicit operator uint ? (XElement element)\n    content.vb: >-\n      <CLSCompliant(False)>\n\n      Public Shared Narrowing Operator CType(element As XElement) As UInteger?\n    parameters:\n    - id: element\n      type: System.Xml.Linq.XElement\n      description: \"\\n<p>The <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to cast to <xref href=\\\"System.Nullable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of <xref href=\\\"System.UInt32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    return:\n      type: System.Nullable{System.UInt32}\n      description: \"\\n<p>A <xref href=\\\"System.Nullable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of <xref href=\\\"System.UInt32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the content of this <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>The element does not contain a valid <xref href=\\\"System.UInt32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  attributes:\n  - type: System.CLSCompliantAttribute\n    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)\n    arguments:\n    - type: System.Boolean\n      value: false\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.Nullable(Of System.UInt32))\n  name.vb: Narrowing(XElement to Nullable(Of UInt32))\n  nameWithType: XElement.Explicit(XElement to Nullable<UInt32>)\n  nameWithType.vb: XElement.Narrowing(XElement to Nullable(Of UInt32))\n- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt64}\n  commentId: M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt64}\n  id: op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt64}\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: Explicit(XElement to Nullable<UInt64>)\n  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.Nullable<System.UInt64>)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Explicit\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 273\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Cast the value of this <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to a <xref href=\\\"System.Nullable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of <xref href=\\\"System.UInt64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: >-\n      [CLSCompliant(false)]\n\n      public static explicit operator ulong ? (XElement element)\n    content.vb: >-\n      <CLSCompliant(False)>\n\n      Public Shared Narrowing Operator CType(element As XElement) As ULong?\n    parameters:\n    - id: element\n      type: System.Xml.Linq.XElement\n      description: \"\\n<p>The <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to cast to <xref href=\\\"System.Nullable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of <xref href=\\\"System.UInt64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    return:\n      type: System.Nullable{System.UInt64}\n      description: \"\\n<p>A <xref href=\\\"System.Nullable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of <xref href=\\\"System.UInt64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the content of this <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>The element does not contain a valid <xref href=\\\"System.UInt64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  attributes:\n  - type: System.CLSCompliantAttribute\n    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)\n    arguments:\n    - type: System.Boolean\n      value: false\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.Nullable(Of System.UInt64))\n  name.vb: Narrowing(XElement to Nullable(Of UInt64))\n  nameWithType: XElement.Explicit(XElement to Nullable<UInt64>)\n  nameWithType.vb: XElement.Narrowing(XElement to Nullable(Of UInt64))\n- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Single\n  commentId: M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Single\n  id: op_Explicit(System.Xml.Linq.XElement)~System.Single\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: Explicit(XElement to Single)\n  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.Single)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Explicit\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 275\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Cast the value of this <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to a <xref href=\\\"System.Single\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: >-\n      [CLSCompliant(false)]\n\n      public static explicit operator float (XElement element)\n    content.vb: >-\n      <CLSCompliant(False)>\n\n      Public Shared Narrowing Operator CType(element As XElement) As Single\n    parameters:\n    - id: element\n      type: System.Xml.Linq.XElement\n      description: \"\\n<p>The <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to cast to <xref href=\\\"System.Single\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    return:\n      type: System.Single\n      description: \"\\n<p>A <xref href=\\\"System.Single\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the content of this <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>The element does not contain a valid <xref href=\\\"System.Single\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>element</em> parameter is <strong>null</strong>.</p>\\n\"\n  attributes:\n  - type: System.CLSCompliantAttribute\n    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)\n    arguments:\n    - type: System.Boolean\n      value: false\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.Single)\n  name.vb: Narrowing(XElement to Single)\n  nameWithType: XElement.Explicit(XElement to Single)\n  nameWithType.vb: XElement.Narrowing(XElement to Single)\n- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.String\n  commentId: M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.String\n  id: op_Explicit(System.Xml.Linq.XElement)~System.String\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: Explicit(XElement to String)\n  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.String)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Explicit\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 277\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Cast the value of this <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to a <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: >-\n      [CLSCompliant(false)]\n\n      public static explicit operator string (XElement element)\n    content.vb: >-\n      <CLSCompliant(False)>\n\n      Public Shared Narrowing Operator CType(element As XElement) As String\n    parameters:\n    - id: element\n      type: System.Xml.Linq.XElement\n      description: \"\\n<p>The <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to cast to <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    return:\n      type: System.String\n      description: \"\\n<p>A <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the content of this <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  attributes:\n  - type: System.CLSCompliantAttribute\n    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)\n    arguments:\n    - type: System.Boolean\n      value: false\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.String)\n  name.vb: Narrowing(XElement to String)\n  nameWithType: XElement.Explicit(XElement to String)\n  nameWithType.vb: XElement.Narrowing(XElement to String)\n- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.TimeSpan\n  commentId: M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.TimeSpan\n  id: op_Explicit(System.Xml.Linq.XElement)~System.TimeSpan\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: Explicit(XElement to TimeSpan)\n  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.TimeSpan)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Explicit\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 279\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Cast the value of this <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to a <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: >-\n      [CLSCompliant(false)]\n\n      public static explicit operator TimeSpan(XElement element)\n    content.vb: >-\n      <CLSCompliant(False)>\n\n      Public Shared Narrowing Operator CType(element As XElement) As TimeSpan\n    parameters:\n    - id: element\n      type: System.Xml.Linq.XElement\n      description: \"\\n<p>The <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to cast to <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    return:\n      type: System.TimeSpan\n      description: \"\\n<p>A <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the content of this <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>The element does not contain a valid <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>element</em> parameter is <strong>null</strong>.</p>\\n\"\n  attributes:\n  - type: System.CLSCompliantAttribute\n    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)\n    arguments:\n    - type: System.Boolean\n      value: false\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.TimeSpan)\n  name.vb: Narrowing(XElement to TimeSpan)\n  nameWithType: XElement.Explicit(XElement to TimeSpan)\n  nameWithType.vb: XElement.Narrowing(XElement to TimeSpan)\n- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt32\n  commentId: M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt32\n  id: op_Explicit(System.Xml.Linq.XElement)~System.UInt32\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: Explicit(XElement to UInt32)\n  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.UInt32)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Explicit\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 281\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Cast the value of this <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to a <xref href=\\\"System.UInt32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: >-\n      [CLSCompliant(false)]\n\n      public static explicit operator uint (XElement element)\n    content.vb: >-\n      <CLSCompliant(False)>\n\n      Public Shared Narrowing Operator CType(element As XElement) As UInteger\n    parameters:\n    - id: element\n      type: System.Xml.Linq.XElement\n      description: \"\\n<p>The <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to cast to <xref href=\\\"System.UInt32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    return:\n      type: System.UInt32\n      description: \"\\n<p>A <xref href=\\\"System.UInt32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the content of this <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>The element does not contain a valid <xref href=\\\"System.UInt32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>element</em> parameter is <strong>null</strong>.</p>\\n\"\n  attributes:\n  - type: System.CLSCompliantAttribute\n    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)\n    arguments:\n    - type: System.Boolean\n      value: false\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.UInt32)\n  name.vb: Narrowing(XElement to UInt32)\n  nameWithType: XElement.Explicit(XElement to UInt32)\n  nameWithType.vb: XElement.Narrowing(XElement to UInt32)\n- uid: System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt64\n  commentId: M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt64\n  id: op_Explicit(System.Xml.Linq.XElement)~System.UInt64\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: Explicit(XElement to UInt64)\n  fullName: System.Xml.Linq.XElement.Explicit(System.Xml.Linq.XElement to System.UInt64)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Explicit\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 283\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Cast the value of this <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to a <xref href=\\\"System.UInt64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: >-\n      [CLSCompliant(false)]\n\n      public static explicit operator ulong (XElement element)\n    content.vb: >-\n      <CLSCompliant(False)>\n\n      Public Shared Narrowing Operator CType(element As XElement) As ULong\n    parameters:\n    - id: element\n      type: System.Xml.Linq.XElement\n      description: \"\\n<p>The <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to cast to <xref href=\\\"System.UInt64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    return:\n      type: System.UInt64\n      description: \"\\n<p>A <xref href=\\\"System.UInt64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the content of this <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>The element does not contain a valid <xref href=\\\"System.UInt64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>element</em> parameter is <strong>null</strong>.</p>\\n\"\n  attributes:\n  - type: System.CLSCompliantAttribute\n    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)\n    arguments:\n    - type: System.Boolean\n      value: false\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Xml.Linq.XElement.Narrowing(System.Xml.Linq.XElement to System.UInt64)\n  name.vb: Narrowing(XElement to UInt64)\n  nameWithType: XElement.Explicit(XElement to UInt64)\n  nameWithType.vb: XElement.Narrowing(XElement to UInt64)\n- uid: System.Xml.Linq.XElement.Parse(System.String)\n  commentId: M:System.Xml.Linq.XElement.Parse(System.String)\n  id: Parse(System.String)\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: Parse(String)\n  fullName: System.Xml.Linq.XElement.Parse(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Parse\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 285\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Load an <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> from a string that contains XML.</p>\\n\"\n  syntax:\n    content: public static XElement Parse(string text)\n    content.vb: Public Shared Function Parse(text As String) As XElement\n    parameters:\n    - id: text\n      type: System.String\n      description: \"\\n<p>A <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains XML.</p>\\n\"\n    return:\n      type: System.Xml.Linq.XElement\n      description: \"\\n<p>An <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> populated from the string that contains XML.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: XElement.Parse(String)\n- uid: System.Xml.Linq.XElement.Parse(System.String,System.Xml.Linq.LoadOptions)\n  commentId: M:System.Xml.Linq.XElement.Parse(System.String,System.Xml.Linq.LoadOptions)\n  id: Parse(System.String,System.Xml.Linq.LoadOptions)\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: Parse(String, LoadOptions)\n  fullName: System.Xml.Linq.XElement.Parse(System.String, System.Xml.Linq.LoadOptions)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Parse\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 286\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Load an <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> from a string that contains XML, optionally preserving white space and retaining line information.</p>\\n\"\n  syntax:\n    content: public static XElement Parse(string text, LoadOptions options)\n    content.vb: Public Shared Function Parse(text As String, options As LoadOptions) As XElement\n    parameters:\n    - id: text\n      type: System.String\n      description: \"\\n<p>A <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains XML.</p>\\n\"\n    - id: options\n      type: System.Xml.Linq.LoadOptions\n      description: \"\\n<p>A <xref href=\\\"System.Xml.Linq.LoadOptions\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that specifies white space behavior, and whether to load base URI and line information.</p>\\n\"\n    return:\n      type: System.Xml.Linq.XElement\n      description: \"\\n<p>An <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> populated from the string that contains XML.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: XElement.Parse(String, LoadOptions)\n- uid: System.Xml.Linq.XElement.RemoveAll\n  commentId: M:System.Xml.Linq.XElement.RemoveAll\n  id: RemoveAll\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: RemoveAll()\n  fullName: System.Xml.Linq.XElement.RemoveAll()\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RemoveAll\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 287\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Removes nodes and attributes from this <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public void RemoveAll()\n    content.vb: Public Sub RemoveAll\n  seealso:\n  - type: System.Xml.Linq.XElement.RemoveAttributes\n    commentId: M:System.Xml.Linq.XElement.RemoveAttributes\n  - type: System.Xml.Linq.XContainer.RemoveNodes\n    commentId: M:System.Xml.Linq.XContainer.RemoveNodes\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XElement.RemoveAll()\n- uid: System.Xml.Linq.XElement.RemoveAttributes\n  commentId: M:System.Xml.Linq.XElement.RemoveAttributes\n  id: RemoveAttributes\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: RemoveAttributes()\n  fullName: System.Xml.Linq.XElement.RemoveAttributes()\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RemoveAttributes\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 288\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Removes the attributes of this <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public void RemoveAttributes()\n    content.vb: Public Sub RemoveAttributes\n  seealso:\n  - type: System.Xml.Linq.XElement.RemoveAttributes\n    commentId: M:System.Xml.Linq.XElement.RemoveAttributes\n  - type: System.Xml.Linq.XElement.RemoveAll\n    commentId: M:System.Xml.Linq.XElement.RemoveAll\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XElement.RemoveAttributes()\n- uid: System.Xml.Linq.XElement.ReplaceAll(System.Object)\n  commentId: M:System.Xml.Linq.XElement.ReplaceAll(System.Object)\n  id: ReplaceAll(System.Object)\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: ReplaceAll(Object)\n  fullName: System.Xml.Linq.XElement.ReplaceAll(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReplaceAll\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 289\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Replaces the child nodes and the attributes of this element with the specified content.</p>\\n\"\n  syntax:\n    content: public void ReplaceAll(object content)\n    content.vb: Public Sub ReplaceAll(content As Object)\n    parameters:\n    - id: content\n      type: System.Object\n      description: \"\\n<p>The content that will replace the child nodes and attributes of this element.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XElement.ReplaceAll(Object)\n- uid: System.Xml.Linq.XElement.ReplaceAll(System.Object[])\n  commentId: M:System.Xml.Linq.XElement.ReplaceAll(System.Object[])\n  id: ReplaceAll(System.Object[])\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: ReplaceAll(Object[])\n  fullName: System.Xml.Linq.XElement.ReplaceAll(System.Object[])\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReplaceAll\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 290\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Replaces the child nodes and the attributes of this element with the specified content.</p>\\n\"\n  syntax:\n    content: public void ReplaceAll(params object[] content)\n    content.vb: Public Sub ReplaceAll(ParamArray content As Object())\n    parameters:\n    - id: content\n      type: System.Object[]\n      description: \"\\n<p>A parameter list of content objects.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Xml.Linq.XElement.ReplaceAll(System.Object())\n  name.vb: ReplaceAll(Object())\n  nameWithType: XElement.ReplaceAll(Object[])\n  nameWithType.vb: XElement.ReplaceAll(Object())\n- uid: System.Xml.Linq.XElement.ReplaceAttributes(System.Object)\n  commentId: M:System.Xml.Linq.XElement.ReplaceAttributes(System.Object)\n  id: ReplaceAttributes(System.Object)\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: ReplaceAttributes(Object)\n  fullName: System.Xml.Linq.XElement.ReplaceAttributes(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReplaceAttributes\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 291\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Replaces the attributes of this element with the specified content.</p>\\n\"\n  syntax:\n    content: public void ReplaceAttributes(object content)\n    content.vb: Public Sub ReplaceAttributes(content As Object)\n    parameters:\n    - id: content\n      type: System.Object\n      description: \"\\n<p>The content that will replace the attributes of this element.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XElement.ReplaceAttributes(Object)\n- uid: System.Xml.Linq.XElement.ReplaceAttributes(System.Object[])\n  commentId: M:System.Xml.Linq.XElement.ReplaceAttributes(System.Object[])\n  id: ReplaceAttributes(System.Object[])\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: ReplaceAttributes(Object[])\n  fullName: System.Xml.Linq.XElement.ReplaceAttributes(System.Object[])\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReplaceAttributes\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 292\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Replaces the attributes of this element with the specified content.</p>\\n\"\n  syntax:\n    content: public void ReplaceAttributes(params object[] content)\n    content.vb: Public Sub ReplaceAttributes(ParamArray content As Object())\n    parameters:\n    - id: content\n      type: System.Object[]\n      description: \"\\n<p>A parameter list of content objects.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Xml.Linq.XElement.ReplaceAttributes(System.Object())\n  name.vb: ReplaceAttributes(Object())\n  nameWithType: XElement.ReplaceAttributes(Object[])\n  nameWithType.vb: XElement.ReplaceAttributes(Object())\n- uid: System.Xml.Linq.XElement.Save(System.IO.Stream)\n  commentId: M:System.Xml.Linq.XElement.Save(System.IO.Stream)\n  id: Save(System.IO.Stream)\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: Save(Stream)\n  fullName: System.Xml.Linq.XElement.Save(System.IO.Stream)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Save\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 293\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Outputs this <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to the specified <xref href=\\\"System.IO.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public void Save(Stream stream)\n    content.vb: Public Sub Save(stream As Stream)\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: \"\\n<p>The stream to output this <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XElement.Save(Stream)\n- uid: System.Xml.Linq.XElement.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)\n  commentId: M:System.Xml.Linq.XElement.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)\n  id: Save(System.IO.Stream,System.Xml.Linq.SaveOptions)\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: Save(Stream, SaveOptions)\n  fullName: System.Xml.Linq.XElement.Save(System.IO.Stream, System.Xml.Linq.SaveOptions)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Save\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 294\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Outputs this <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to the specified <xref href=\\\"System.IO.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, optionally specifying formatting behavior.</p>\\n\"\n  syntax:\n    content: public void Save(Stream stream, SaveOptions options)\n    content.vb: Public Sub Save(stream As Stream, options As SaveOptions)\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: \"\\n<p>The stream to output this <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to.</p>\\n\"\n    - id: options\n      type: System.Xml.Linq.SaveOptions\n      description: \"\\n<p>A <xref href=\\\"System.Xml.Linq.SaveOptions\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that specifies formatting behavior.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XElement.Save(Stream, SaveOptions)\n- uid: System.Xml.Linq.XElement.Save(System.IO.TextWriter)\n  commentId: M:System.Xml.Linq.XElement.Save(System.IO.TextWriter)\n  id: Save(System.IO.TextWriter)\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: Save(TextWriter)\n  fullName: System.Xml.Linq.XElement.Save(System.IO.TextWriter)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Save\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 295\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Serialize this element to a <xref href=\\\"System.IO.TextWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public void Save(TextWriter textWriter)\n    content.vb: Public Sub Save(textWriter As TextWriter)\n    parameters:\n    - id: textWriter\n      type: System.IO.TextWriter\n      description: \"\\n<p>A <xref href=\\\"System.IO.TextWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that the <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> will be written to.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XElement.Save(TextWriter)\n- uid: System.Xml.Linq.XElement.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)\n  commentId: M:System.Xml.Linq.XElement.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)\n  id: Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: Save(TextWriter, SaveOptions)\n  fullName: System.Xml.Linq.XElement.Save(System.IO.TextWriter, System.Xml.Linq.SaveOptions)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Save\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 296\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Serialize this element to a <xref href=\\\"System.IO.TextWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, optionally disabling formatting.</p>\\n\"\n  syntax:\n    content: public void Save(TextWriter textWriter, SaveOptions options)\n    content.vb: Public Sub Save(textWriter As TextWriter, options As SaveOptions)\n    parameters:\n    - id: textWriter\n      type: System.IO.TextWriter\n      description: \"\\n<p>The <xref href=\\\"System.IO.TextWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to output the XML to.</p>\\n\"\n    - id: options\n      type: System.Xml.Linq.SaveOptions\n      description: \"\\n<p>A <xref href=\\\"System.Xml.Linq.SaveOptions\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that specifies formatting behavior.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XElement.Save(TextWriter, SaveOptions)\n- uid: System.Xml.Linq.XElement.Save(System.Xml.XmlWriter)\n  commentId: M:System.Xml.Linq.XElement.Save(System.Xml.XmlWriter)\n  id: Save(System.Xml.XmlWriter)\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: Save(XmlWriter)\n  fullName: System.Xml.Linq.XElement.Save(System.Xml.XmlWriter)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Save\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 297\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Serialize this element to an <xref href=\\\"System.Xml.XmlWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public void Save(XmlWriter writer)\n    content.vb: Public Sub Save(writer As XmlWriter)\n    parameters:\n    - id: writer\n      type: System.Xml.XmlWriter\n      description: \"\\n<p>A <xref href=\\\"System.Xml.XmlWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that the <xref href=\\\"System.Xml.Linq.XElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> will be written to.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XElement.Save(XmlWriter)\n- uid: System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName,System.Object)\n  commentId: M:System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName,System.Object)\n  id: SetAttributeValue(System.Xml.Linq.XName,System.Object)\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: SetAttributeValue(XName, Object)\n  fullName: System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName, System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetAttributeValue\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 298\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Sets the value of an attribute, adds an attribute, or removes an attribute. </p>\\n\"\n  syntax:\n    content: public void SetAttributeValue(XName name, object value)\n    content.vb: Public Sub SetAttributeValue(name As XName, value As Object)\n    parameters:\n    - id: name\n      type: System.Xml.Linq.XName\n      description: \"\\n<p>An <xref href=\\\"System.Xml.Linq.XName\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the name of the attribute to change.</p>\\n\"\n    - id: value\n      type: System.Object\n      description: \"\\n<p>The value to assign to the attribute. The attribute is removed if the value is <strong>null</strong>. Otherwise, the value is converted to its string representation and assigned to the <xref href=\\\"System.Xml.Linq.XAttribute.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property of the attribute.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The <em>value</em> is an instance of <xref href=\\\"System.Xml.Linq.XObject\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  seealso:\n  - type: System.Xml.Linq.XAttribute.SetValue(System.Object)\n    commentId: M:System.Xml.Linq.XAttribute.SetValue(System.Object)\n  - type: System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)\n    commentId: M:System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)\n  - type: System.Xml.Linq.XElement.SetValue(System.Object)\n    commentId: M:System.Xml.Linq.XElement.SetValue(System.Object)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XElement.SetAttributeValue(XName, Object)\n- uid: System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)\n  commentId: M:System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)\n  id: SetElementValue(System.Xml.Linq.XName,System.Object)\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: SetElementValue(XName, Object)\n  fullName: System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName, System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetElementValue\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 299\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Sets the value of a child element, adds a child element, or removes a child element.</p>\\n\"\n  syntax:\n    content: public void SetElementValue(XName name, object value)\n    content.vb: Public Sub SetElementValue(name As XName, value As Object)\n    parameters:\n    - id: name\n      type: System.Xml.Linq.XName\n      description: \"\\n<p>An <xref href=\\\"System.Xml.Linq.XName\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the name of the child element to change.</p>\\n\"\n    - id: value\n      type: System.Object\n      description: \"\\n<p>The value to assign to the child element. The child element is removed if the value is <strong>null</strong>. Otherwise, the value is converted to its string representation and assigned to the <xref href=\\\"System.Xml.Linq.XElement.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property of the child element.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The <em>value</em> is an instance of <xref href=\\\"System.Xml.Linq.XObject\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  seealso:\n  - type: System.Xml.Linq.XAttribute.SetValue(System.Object)\n    commentId: M:System.Xml.Linq.XAttribute.SetValue(System.Object)\n  - type: System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)\n    commentId: M:System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)\n  - type: System.Xml.Linq.XElement.SetValue(System.Object)\n    commentId: M:System.Xml.Linq.XElement.SetValue(System.Object)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XElement.SetElementValue(XName, Object)\n- uid: System.Xml.Linq.XElement.SetValue(System.Object)\n  commentId: M:System.Xml.Linq.XElement.SetValue(System.Object)\n  id: SetValue(System.Object)\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: SetValue(Object)\n  fullName: System.Xml.Linq.XElement.SetValue(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetValue\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 300\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Sets the value of this element.</p>\\n\"\n  syntax:\n    content: public void SetValue(object value)\n    content.vb: Public Sub SetValue(value As Object)\n    parameters:\n    - id: value\n      type: System.Object\n      description: \"\\n<p>The value to assign to this element. The value is converted to its string representation and assigned to the <xref href=\\\"System.Xml.Linq.XElement.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>value</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The <em>value</em> is an <xref href=\\\"System.Xml.Linq.XObject\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  seealso:\n  - type: System.Xml.Linq.XAttribute.SetValue(System.Object)\n    commentId: M:System.Xml.Linq.XAttribute.SetValue(System.Object)\n  - type: System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName,System.Object)\n    commentId: M:System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName,System.Object)\n  - type: System.Xml.Linq.XElement.SetValue(System.Object)\n    commentId: M:System.Xml.Linq.XElement.SetValue(System.Object)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XElement.SetValue(Object)\n- uid: System.Xml.Linq.XElement.WriteTo(System.Xml.XmlWriter)\n  commentId: M:System.Xml.Linq.XElement.WriteTo(System.Xml.XmlWriter)\n  id: WriteTo(System.Xml.XmlWriter)\n  parent: System.Xml.Linq.XElement\n  langs:\n  - csharp\n  - vb\n  name: WriteTo(XmlWriter)\n  fullName: System.Xml.Linq.XElement.WriteTo(System.Xml.XmlWriter)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WriteTo\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 304\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Write this element to an <xref href=\\\"System.Xml.XmlWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public override void WriteTo(XmlWriter writer)\n    content.vb: Public Overrides Sub WriteTo(writer As XmlWriter)\n    parameters:\n    - id: writer\n      type: System.Xml.XmlWriter\n      description: \"\\n<p>An <xref href=\\\"System.Xml.XmlWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> into which this method will write.</p>\\n\"\n  overridden: System.Xml.Linq.XNode.WriteTo(System.Xml.XmlWriter)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: XElement.WriteTo(XmlWriter)\nreferences:\n- uid: System.Xml.Linq\n  isExternal: false\n  name: System.Xml.Linq\n  fullName: System.Xml.Linq\n  commentId: N:System.Xml.Linq\n  nameWithType: System.Xml.Linq\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Xml.Linq.XObject\n  parent: System.Xml.Linq\n  isExternal: false\n  name: XObject\n  fullName: System.Xml.Linq.XObject\n  commentId: T:System.Xml.Linq.XObject\n  nameWithType: XObject\n- uid: System.Xml.Linq.XNode\n  parent: System.Xml.Linq\n  isExternal: false\n  name: XNode\n  fullName: System.Xml.Linq.XNode\n  commentId: T:System.Xml.Linq.XNode\n  nameWithType: XNode\n- uid: System.Xml.Linq.XContainer\n  parent: System.Xml.Linq\n  isExternal: false\n  name: XContainer\n  fullName: System.Xml.Linq.XContainer\n  commentId: T:System.Xml.Linq.XContainer\n  nameWithType: XContainer\n- uid: System.Xml.Serialization.IXmlSerializable\n  isExternal: false\n  name: IXmlSerializable\n  fullName: System.Xml.Serialization.IXmlSerializable\n  commentId: T:System.Xml.Serialization.IXmlSerializable\n  nameWithType: IXmlSerializable\n- uid: System.Xml.Linq.XContainer.FirstNode\n  parent: System.Xml.Linq.XContainer\n  isExternal: false\n  name: FirstNode\n  fullName: System.Xml.Linq.XContainer.FirstNode\n  commentId: P:System.Xml.Linq.XContainer.FirstNode\n  nameWithType: XContainer.FirstNode\n- uid: System.Xml.Linq.XContainer.LastNode\n  parent: System.Xml.Linq.XContainer\n  isExternal: false\n  name: LastNode\n  fullName: System.Xml.Linq.XContainer.LastNode\n  commentId: P:System.Xml.Linq.XContainer.LastNode\n  nameWithType: XContainer.LastNode\n- uid: System.Xml.Linq.XContainer.Add(System.Object)\n  parent: System.Xml.Linq.XContainer\n  isExternal: true\n  name: Add(Object)\n  fullName: System.Xml.Linq.XContainer.Add(System.Object)\n  spec.csharp:\n  - uid: System.Xml.Linq.XContainer.Add(System.Object)\n    name: Add\n    fullName: System.Xml.Linq.XContainer.Add\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XContainer.Add(System.Object)\n    name: Add\n    fullName: System.Xml.Linq.XContainer.Add\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XContainer.Add(System.Object)\n  nameWithType: XContainer.Add(Object)\n- uid: System.Xml.Linq.XContainer.Add(System.Object[])\n  parent: System.Xml.Linq.XContainer\n  isExternal: true\n  name: Add(Object[])\n  fullName: System.Xml.Linq.XContainer.Add(System.Object[])\n  fullname.vb: System.Xml.Linq.XContainer.Add(System.Object())\n  name.vb: Add(Object())\n  spec.csharp:\n  - uid: System.Xml.Linq.XContainer.Add(System.Object[])\n    name: Add\n    fullName: System.Xml.Linq.XContainer.Add\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XContainer.Add(System.Object[])\n    name: Add\n    fullName: System.Xml.Linq.XContainer.Add\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XContainer.Add(System.Object[])\n  nameWithType: XContainer.Add(Object[])\n  nameWithType.vb: XContainer.Add(Object())\n- uid: System.Xml.Linq.XContainer.AddFirst(System.Object)\n  parent: System.Xml.Linq.XContainer\n  isExternal: true\n  name: AddFirst(Object)\n  fullName: System.Xml.Linq.XContainer.AddFirst(System.Object)\n  spec.csharp:\n  - uid: System.Xml.Linq.XContainer.AddFirst(System.Object)\n    name: AddFirst\n    fullName: System.Xml.Linq.XContainer.AddFirst\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XContainer.AddFirst(System.Object)\n    name: AddFirst\n    fullName: System.Xml.Linq.XContainer.AddFirst\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XContainer.AddFirst(System.Object)\n  nameWithType: XContainer.AddFirst(Object)\n- uid: System.Xml.Linq.XContainer.AddFirst(System.Object[])\n  parent: System.Xml.Linq.XContainer\n  isExternal: true\n  name: AddFirst(Object[])\n  fullName: System.Xml.Linq.XContainer.AddFirst(System.Object[])\n  fullname.vb: System.Xml.Linq.XContainer.AddFirst(System.Object())\n  name.vb: AddFirst(Object())\n  spec.csharp:\n  - uid: System.Xml.Linq.XContainer.AddFirst(System.Object[])\n    name: AddFirst\n    fullName: System.Xml.Linq.XContainer.AddFirst\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XContainer.AddFirst(System.Object[])\n    name: AddFirst\n    fullName: System.Xml.Linq.XContainer.AddFirst\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XContainer.AddFirst(System.Object[])\n  nameWithType: XContainer.AddFirst(Object[])\n  nameWithType.vb: XContainer.AddFirst(Object())\n- uid: System.Xml.Linq.XContainer.CreateWriter\n  parent: System.Xml.Linq.XContainer\n  isExternal: false\n  name: CreateWriter()\n  fullName: System.Xml.Linq.XContainer.CreateWriter()\n  spec.csharp:\n  - uid: System.Xml.Linq.XContainer.CreateWriter\n    name: CreateWriter\n    fullName: System.Xml.Linq.XContainer.CreateWriter\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XContainer.CreateWriter\n    name: CreateWriter\n    fullName: System.Xml.Linq.XContainer.CreateWriter\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XContainer.CreateWriter\n  nameWithType: XContainer.CreateWriter()\n- uid: System.Xml.Linq.XContainer.DescendantNodes\n  parent: System.Xml.Linq.XContainer\n  isExternal: false\n  name: DescendantNodes()\n  fullName: System.Xml.Linq.XContainer.DescendantNodes()\n  spec.csharp:\n  - uid: System.Xml.Linq.XContainer.DescendantNodes\n    name: DescendantNodes\n    fullName: System.Xml.Linq.XContainer.DescendantNodes\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XContainer.DescendantNodes\n    name: DescendantNodes\n    fullName: System.Xml.Linq.XContainer.DescendantNodes\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XContainer.DescendantNodes\n  nameWithType: XContainer.DescendantNodes()\n- uid: System.Xml.Linq.XContainer.Descendants\n  parent: System.Xml.Linq.XContainer\n  isExternal: false\n  name: Descendants()\n  fullName: System.Xml.Linq.XContainer.Descendants()\n  spec.csharp:\n  - uid: System.Xml.Linq.XContainer.Descendants\n    name: Descendants\n    fullName: System.Xml.Linq.XContainer.Descendants\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XContainer.Descendants\n    name: Descendants\n    fullName: System.Xml.Linq.XContainer.Descendants\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XContainer.Descendants\n  nameWithType: XContainer.Descendants()\n- uid: System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)\n  parent: System.Xml.Linq.XContainer\n  isExternal: false\n  name: Descendants(XName)\n  fullName: System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)\n  spec.csharp:\n  - uid: System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)\n    name: Descendants\n    fullName: System.Xml.Linq.XContainer.Descendants\n  - name: (\n    fullName: (\n  - uid: System.Xml.Linq.XName\n    name: XName\n    fullName: System.Xml.Linq.XName\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)\n    name: Descendants\n    fullName: System.Xml.Linq.XContainer.Descendants\n  - name: (\n    fullName: (\n  - uid: System.Xml.Linq.XName\n    name: XName\n    fullName: System.Xml.Linq.XName\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)\n  nameWithType: XContainer.Descendants(XName)\n- uid: System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)\n  parent: System.Xml.Linq.XContainer\n  isExternal: false\n  name: Element(XName)\n  fullName: System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)\n  spec.csharp:\n  - uid: System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)\n    name: Element\n    fullName: System.Xml.Linq.XContainer.Element\n  - name: (\n    fullName: (\n  - uid: System.Xml.Linq.XName\n    name: XName\n    fullName: System.Xml.Linq.XName\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)\n    name: Element\n    fullName: System.Xml.Linq.XContainer.Element\n  - name: (\n    fullName: (\n  - uid: System.Xml.Linq.XName\n    name: XName\n    fullName: System.Xml.Linq.XName\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)\n  nameWithType: XContainer.Element(XName)\n- uid: System.Xml.Linq.XContainer.Elements\n  parent: System.Xml.Linq.XContainer\n  isExternal: false\n  name: Elements()\n  fullName: System.Xml.Linq.XContainer.Elements()\n  spec.csharp:\n  - uid: System.Xml.Linq.XContainer.Elements\n    name: Elements\n    fullName: System.Xml.Linq.XContainer.Elements\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XContainer.Elements\n    name: Elements\n    fullName: System.Xml.Linq.XContainer.Elements\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XContainer.Elements\n  nameWithType: XContainer.Elements()\n- uid: System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)\n  parent: System.Xml.Linq.XContainer\n  isExternal: false\n  name: Elements(XName)\n  fullName: System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)\n  spec.csharp:\n  - uid: System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)\n    name: Elements\n    fullName: System.Xml.Linq.XContainer.Elements\n  - name: (\n    fullName: (\n  - uid: System.Xml.Linq.XName\n    name: XName\n    fullName: System.Xml.Linq.XName\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)\n    name: Elements\n    fullName: System.Xml.Linq.XContainer.Elements\n  - name: (\n    fullName: (\n  - uid: System.Xml.Linq.XName\n    name: XName\n    fullName: System.Xml.Linq.XName\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)\n  nameWithType: XContainer.Elements(XName)\n- uid: System.Xml.Linq.XContainer.Nodes\n  parent: System.Xml.Linq.XContainer\n  isExternal: false\n  name: Nodes()\n  fullName: System.Xml.Linq.XContainer.Nodes()\n  spec.csharp:\n  - uid: System.Xml.Linq.XContainer.Nodes\n    name: Nodes\n    fullName: System.Xml.Linq.XContainer.Nodes\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XContainer.Nodes\n    name: Nodes\n    fullName: System.Xml.Linq.XContainer.Nodes\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XContainer.Nodes\n  nameWithType: XContainer.Nodes()\n- uid: System.Xml.Linq.XContainer.RemoveNodes\n  parent: System.Xml.Linq.XContainer\n  isExternal: false\n  name: RemoveNodes()\n  fullName: System.Xml.Linq.XContainer.RemoveNodes()\n  spec.csharp:\n  - uid: System.Xml.Linq.XContainer.RemoveNodes\n    name: RemoveNodes\n    fullName: System.Xml.Linq.XContainer.RemoveNodes\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XContainer.RemoveNodes\n    name: RemoveNodes\n    fullName: System.Xml.Linq.XContainer.RemoveNodes\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XContainer.RemoveNodes\n  nameWithType: XContainer.RemoveNodes()\n- uid: System.Xml.Linq.XContainer.ReplaceNodes(System.Object)\n  parent: System.Xml.Linq.XContainer\n  isExternal: true\n  name: ReplaceNodes(Object)\n  fullName: System.Xml.Linq.XContainer.ReplaceNodes(System.Object)\n  spec.csharp:\n  - uid: System.Xml.Linq.XContainer.ReplaceNodes(System.Object)\n    name: ReplaceNodes\n    fullName: System.Xml.Linq.XContainer.ReplaceNodes\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XContainer.ReplaceNodes(System.Object)\n    name: ReplaceNodes\n    fullName: System.Xml.Linq.XContainer.ReplaceNodes\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object)\n  nameWithType: XContainer.ReplaceNodes(Object)\n- uid: System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])\n  parent: System.Xml.Linq.XContainer\n  isExternal: true\n  name: ReplaceNodes(Object[])\n  fullName: System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])\n  fullname.vb: System.Xml.Linq.XContainer.ReplaceNodes(System.Object())\n  name.vb: ReplaceNodes(Object())\n  spec.csharp:\n  - uid: System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])\n    name: ReplaceNodes\n    fullName: System.Xml.Linq.XContainer.ReplaceNodes\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])\n    name: ReplaceNodes\n    fullName: System.Xml.Linq.XContainer.ReplaceNodes\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])\n  nameWithType: XContainer.ReplaceNodes(Object[])\n  nameWithType.vb: XContainer.ReplaceNodes(Object())\n- uid: System.Xml.Linq.XNode.DocumentOrderComparer\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: DocumentOrderComparer\n  fullName: System.Xml.Linq.XNode.DocumentOrderComparer\n  commentId: P:System.Xml.Linq.XNode.DocumentOrderComparer\n  nameWithType: XNode.DocumentOrderComparer\n- uid: System.Xml.Linq.XNode.EqualityComparer\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: EqualityComparer\n  fullName: System.Xml.Linq.XNode.EqualityComparer\n  commentId: P:System.Xml.Linq.XNode.EqualityComparer\n  nameWithType: XNode.EqualityComparer\n- uid: System.Xml.Linq.XNode.NextNode\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: NextNode\n  fullName: System.Xml.Linq.XNode.NextNode\n  commentId: P:System.Xml.Linq.XNode.NextNode\n  nameWithType: XNode.NextNode\n- uid: System.Xml.Linq.XNode.PreviousNode\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: PreviousNode\n  fullName: System.Xml.Linq.XNode.PreviousNode\n  commentId: P:System.Xml.Linq.XNode.PreviousNode\n  nameWithType: XNode.PreviousNode\n- uid: System.Xml.Linq.XNode.AddAfterSelf(System.Object)\n  parent: System.Xml.Linq.XNode\n  isExternal: true\n  name: AddAfterSelf(Object)\n  fullName: System.Xml.Linq.XNode.AddAfterSelf(System.Object)\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.AddAfterSelf(System.Object)\n    name: AddAfterSelf\n    fullName: System.Xml.Linq.XNode.AddAfterSelf\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.AddAfterSelf(System.Object)\n    name: AddAfterSelf\n    fullName: System.Xml.Linq.XNode.AddAfterSelf\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.AddAfterSelf(System.Object)\n  nameWithType: XNode.AddAfterSelf(Object)\n- uid: System.Xml.Linq.XNode.AddAfterSelf(System.Object[])\n  parent: System.Xml.Linq.XNode\n  isExternal: true\n  name: AddAfterSelf(Object[])\n  fullName: System.Xml.Linq.XNode.AddAfterSelf(System.Object[])\n  fullname.vb: System.Xml.Linq.XNode.AddAfterSelf(System.Object())\n  name.vb: AddAfterSelf(Object())\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.AddAfterSelf(System.Object[])\n    name: AddAfterSelf\n    fullName: System.Xml.Linq.XNode.AddAfterSelf\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.AddAfterSelf(System.Object[])\n    name: AddAfterSelf\n    fullName: System.Xml.Linq.XNode.AddAfterSelf\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.AddAfterSelf(System.Object[])\n  nameWithType: XNode.AddAfterSelf(Object[])\n  nameWithType.vb: XNode.AddAfterSelf(Object())\n- uid: System.Xml.Linq.XNode.AddBeforeSelf(System.Object)\n  parent: System.Xml.Linq.XNode\n  isExternal: true\n  name: AddBeforeSelf(Object)\n  fullName: System.Xml.Linq.XNode.AddBeforeSelf(System.Object)\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.AddBeforeSelf(System.Object)\n    name: AddBeforeSelf\n    fullName: System.Xml.Linq.XNode.AddBeforeSelf\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.AddBeforeSelf(System.Object)\n    name: AddBeforeSelf\n    fullName: System.Xml.Linq.XNode.AddBeforeSelf\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.AddBeforeSelf(System.Object)\n  nameWithType: XNode.AddBeforeSelf(Object)\n- uid: System.Xml.Linq.XNode.AddBeforeSelf(System.Object[])\n  parent: System.Xml.Linq.XNode\n  isExternal: true\n  name: AddBeforeSelf(Object[])\n  fullName: System.Xml.Linq.XNode.AddBeforeSelf(System.Object[])\n  fullname.vb: System.Xml.Linq.XNode.AddBeforeSelf(System.Object())\n  name.vb: AddBeforeSelf(Object())\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.AddBeforeSelf(System.Object[])\n    name: AddBeforeSelf\n    fullName: System.Xml.Linq.XNode.AddBeforeSelf\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.AddBeforeSelf(System.Object[])\n    name: AddBeforeSelf\n    fullName: System.Xml.Linq.XNode.AddBeforeSelf\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.AddBeforeSelf(System.Object[])\n  nameWithType: XNode.AddBeforeSelf(Object[])\n  nameWithType.vb: XNode.AddBeforeSelf(Object())\n- uid: System.Xml.Linq.XNode.Ancestors\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: Ancestors()\n  fullName: System.Xml.Linq.XNode.Ancestors()\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.Ancestors\n    name: Ancestors\n    fullName: System.Xml.Linq.XNode.Ancestors\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.Ancestors\n    name: Ancestors\n    fullName: System.Xml.Linq.XNode.Ancestors\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.Ancestors\n  nameWithType: XNode.Ancestors()\n- uid: System.Xml.Linq.XNode.Ancestors(System.Xml.Linq.XName)\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: Ancestors(XName)\n  fullName: System.Xml.Linq.XNode.Ancestors(System.Xml.Linq.XName)\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.Ancestors(System.Xml.Linq.XName)\n    name: Ancestors\n    fullName: System.Xml.Linq.XNode.Ancestors\n  - name: (\n    fullName: (\n  - uid: System.Xml.Linq.XName\n    name: XName\n    fullName: System.Xml.Linq.XName\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.Ancestors(System.Xml.Linq.XName)\n    name: Ancestors\n    fullName: System.Xml.Linq.XNode.Ancestors\n  - name: (\n    fullName: (\n  - uid: System.Xml.Linq.XName\n    name: XName\n    fullName: System.Xml.Linq.XName\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.Ancestors(System.Xml.Linq.XName)\n  nameWithType: XNode.Ancestors(XName)\n- uid: System.Xml.Linq.XNode.CompareDocumentOrder(System.Xml.Linq.XNode,System.Xml.Linq.XNode)\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: CompareDocumentOrder(XNode, XNode)\n  fullName: System.Xml.Linq.XNode.CompareDocumentOrder(System.Xml.Linq.XNode, System.Xml.Linq.XNode)\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.CompareDocumentOrder(System.Xml.Linq.XNode,System.Xml.Linq.XNode)\n    name: CompareDocumentOrder\n    fullName: System.Xml.Linq.XNode.CompareDocumentOrder\n  - name: (\n    fullName: (\n  - uid: System.Xml.Linq.XNode\n    name: XNode\n    fullName: System.Xml.Linq.XNode\n  - name: ', '\n    fullName: ', '\n  - uid: System.Xml.Linq.XNode\n    name: XNode\n    fullName: System.Xml.Linq.XNode\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.CompareDocumentOrder(System.Xml.Linq.XNode,System.Xml.Linq.XNode)\n    name: CompareDocumentOrder\n    fullName: System.Xml.Linq.XNode.CompareDocumentOrder\n  - name: (\n    fullName: (\n  - uid: System.Xml.Linq.XNode\n    name: XNode\n    fullName: System.Xml.Linq.XNode\n  - name: ', '\n    fullName: ', '\n  - uid: System.Xml.Linq.XNode\n    name: XNode\n    fullName: System.Xml.Linq.XNode\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.CompareDocumentOrder(System.Xml.Linq.XNode,System.Xml.Linq.XNode)\n  nameWithType: XNode.CompareDocumentOrder(XNode, XNode)\n- uid: System.Xml.Linq.XNode.CreateReader\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: CreateReader()\n  fullName: System.Xml.Linq.XNode.CreateReader()\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.CreateReader\n    name: CreateReader\n    fullName: System.Xml.Linq.XNode.CreateReader\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.CreateReader\n    name: CreateReader\n    fullName: System.Xml.Linq.XNode.CreateReader\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.CreateReader\n  nameWithType: XNode.CreateReader()\n- uid: System.Xml.Linq.XNode.CreateReader(System.Xml.Linq.ReaderOptions)\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: CreateReader(ReaderOptions)\n  fullName: System.Xml.Linq.XNode.CreateReader(System.Xml.Linq.ReaderOptions)\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.CreateReader(System.Xml.Linq.ReaderOptions)\n    name: CreateReader\n    fullName: System.Xml.Linq.XNode.CreateReader\n  - name: (\n    fullName: (\n  - uid: System.Xml.Linq.ReaderOptions\n    name: ReaderOptions\n    fullName: System.Xml.Linq.ReaderOptions\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.CreateReader(System.Xml.Linq.ReaderOptions)\n    name: CreateReader\n    fullName: System.Xml.Linq.XNode.CreateReader\n  - name: (\n    fullName: (\n  - uid: System.Xml.Linq.ReaderOptions\n    name: ReaderOptions\n    fullName: System.Xml.Linq.ReaderOptions\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.CreateReader(System.Xml.Linq.ReaderOptions)\n  nameWithType: XNode.CreateReader(ReaderOptions)\n- uid: System.Xml.Linq.XNode.DeepEquals(System.Xml.Linq.XNode,System.Xml.Linq.XNode)\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: DeepEquals(XNode, XNode)\n  fullName: System.Xml.Linq.XNode.DeepEquals(System.Xml.Linq.XNode, System.Xml.Linq.XNode)\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.DeepEquals(System.Xml.Linq.XNode,System.Xml.Linq.XNode)\n    name: DeepEquals\n    fullName: System.Xml.Linq.XNode.DeepEquals\n  - name: (\n    fullName: (\n  - uid: System.Xml.Linq.XNode\n    name: XNode\n    fullName: System.Xml.Linq.XNode\n  - name: ', '\n    fullName: ', '\n  - uid: System.Xml.Linq.XNode\n    name: XNode\n    fullName: System.Xml.Linq.XNode\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.DeepEquals(System.Xml.Linq.XNode,System.Xml.Linq.XNode)\n    name: DeepEquals\n    fullName: System.Xml.Linq.XNode.DeepEquals\n  - name: (\n    fullName: (\n  - uid: System.Xml.Linq.XNode\n    name: XNode\n    fullName: System.Xml.Linq.XNode\n  - name: ', '\n    fullName: ', '\n  - uid: System.Xml.Linq.XNode\n    name: XNode\n    fullName: System.Xml.Linq.XNode\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.DeepEquals(System.Xml.Linq.XNode,System.Xml.Linq.XNode)\n  nameWithType: XNode.DeepEquals(XNode, XNode)\n- uid: System.Xml.Linq.XNode.ElementsAfterSelf\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: ElementsAfterSelf()\n  fullName: System.Xml.Linq.XNode.ElementsAfterSelf()\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.ElementsAfterSelf\n    name: ElementsAfterSelf\n    fullName: System.Xml.Linq.XNode.ElementsAfterSelf\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.ElementsAfterSelf\n    name: ElementsAfterSelf\n    fullName: System.Xml.Linq.XNode.ElementsAfterSelf\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.ElementsAfterSelf\n  nameWithType: XNode.ElementsAfterSelf()\n- uid: System.Xml.Linq.XNode.ElementsAfterSelf(System.Xml.Linq.XName)\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: ElementsAfterSelf(XName)\n  fullName: System.Xml.Linq.XNode.ElementsAfterSelf(System.Xml.Linq.XName)\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.ElementsAfterSelf(System.Xml.Linq.XName)\n    name: ElementsAfterSelf\n    fullName: System.Xml.Linq.XNode.ElementsAfterSelf\n  - name: (\n    fullName: (\n  - uid: System.Xml.Linq.XName\n    name: XName\n    fullName: System.Xml.Linq.XName\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.ElementsAfterSelf(System.Xml.Linq.XName)\n    name: ElementsAfterSelf\n    fullName: System.Xml.Linq.XNode.ElementsAfterSelf\n  - name: (\n    fullName: (\n  - uid: System.Xml.Linq.XName\n    name: XName\n    fullName: System.Xml.Linq.XName\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.ElementsAfterSelf(System.Xml.Linq.XName)\n  nameWithType: XNode.ElementsAfterSelf(XName)\n- uid: System.Xml.Linq.XNode.ElementsBeforeSelf\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: ElementsBeforeSelf()\n  fullName: System.Xml.Linq.XNode.ElementsBeforeSelf()\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.ElementsBeforeSelf\n    name: ElementsBeforeSelf\n    fullName: System.Xml.Linq.XNode.ElementsBeforeSelf\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.ElementsBeforeSelf\n    name: ElementsBeforeSelf\n    fullName: System.Xml.Linq.XNode.ElementsBeforeSelf\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.ElementsBeforeSelf\n  nameWithType: XNode.ElementsBeforeSelf()\n- uid: System.Xml.Linq.XNode.ElementsBeforeSelf(System.Xml.Linq.XName)\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: ElementsBeforeSelf(XName)\n  fullName: System.Xml.Linq.XNode.ElementsBeforeSelf(System.Xml.Linq.XName)\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.ElementsBeforeSelf(System.Xml.Linq.XName)\n    name: ElementsBeforeSelf\n    fullName: System.Xml.Linq.XNode.ElementsBeforeSelf\n  - name: (\n    fullName: (\n  - uid: System.Xml.Linq.XName\n    name: XName\n    fullName: System.Xml.Linq.XName\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.ElementsBeforeSelf(System.Xml.Linq.XName)\n    name: ElementsBeforeSelf\n    fullName: System.Xml.Linq.XNode.ElementsBeforeSelf\n  - name: (\n    fullName: (\n  - uid: System.Xml.Linq.XName\n    name: XName\n    fullName: System.Xml.Linq.XName\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.ElementsBeforeSelf(System.Xml.Linq.XName)\n  nameWithType: XNode.ElementsBeforeSelf(XName)\n- uid: System.Xml.Linq.XNode.IsAfter(System.Xml.Linq.XNode)\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: IsAfter(XNode)\n  fullName: System.Xml.Linq.XNode.IsAfter(System.Xml.Linq.XNode)\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.IsAfter(System.Xml.Linq.XNode)\n    name: IsAfter\n    fullName: System.Xml.Linq.XNode.IsAfter\n  - name: (\n    fullName: (\n  - uid: System.Xml.Linq.XNode\n    name: XNode\n    fullName: System.Xml.Linq.XNode\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.IsAfter(System.Xml.Linq.XNode)\n    name: IsAfter\n    fullName: System.Xml.Linq.XNode.IsAfter\n  - name: (\n    fullName: (\n  - uid: System.Xml.Linq.XNode\n    name: XNode\n    fullName: System.Xml.Linq.XNode\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.IsAfter(System.Xml.Linq.XNode)\n  nameWithType: XNode.IsAfter(XNode)\n- uid: System.Xml.Linq.XNode.IsBefore(System.Xml.Linq.XNode)\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: IsBefore(XNode)\n  fullName: System.Xml.Linq.XNode.IsBefore(System.Xml.Linq.XNode)\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.IsBefore(System.Xml.Linq.XNode)\n    name: IsBefore\n    fullName: System.Xml.Linq.XNode.IsBefore\n  - name: (\n    fullName: (\n  - uid: System.Xml.Linq.XNode\n    name: XNode\n    fullName: System.Xml.Linq.XNode\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.IsBefore(System.Xml.Linq.XNode)\n    name: IsBefore\n    fullName: System.Xml.Linq.XNode.IsBefore\n  - name: (\n    fullName: (\n  - uid: System.Xml.Linq.XNode\n    name: XNode\n    fullName: System.Xml.Linq.XNode\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.IsBefore(System.Xml.Linq.XNode)\n  nameWithType: XNode.IsBefore(XNode)\n- uid: System.Xml.Linq.XNode.NodesAfterSelf\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: NodesAfterSelf()\n  fullName: System.Xml.Linq.XNode.NodesAfterSelf()\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.NodesAfterSelf\n    name: NodesAfterSelf\n    fullName: System.Xml.Linq.XNode.NodesAfterSelf\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.NodesAfterSelf\n    name: NodesAfterSelf\n    fullName: System.Xml.Linq.XNode.NodesAfterSelf\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.NodesAfterSelf\n  nameWithType: XNode.NodesAfterSelf()\n- uid: System.Xml.Linq.XNode.NodesBeforeSelf\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: NodesBeforeSelf()\n  fullName: System.Xml.Linq.XNode.NodesBeforeSelf()\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.NodesBeforeSelf\n    name: NodesBeforeSelf\n    fullName: System.Xml.Linq.XNode.NodesBeforeSelf\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.NodesBeforeSelf\n    name: NodesBeforeSelf\n    fullName: System.Xml.Linq.XNode.NodesBeforeSelf\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.NodesBeforeSelf\n  nameWithType: XNode.NodesBeforeSelf()\n- uid: System.Xml.Linq.XNode.ReadFrom(System.Xml.XmlReader)\n  parent: System.Xml.Linq.XNode\n  isExternal: true\n  name: ReadFrom(XmlReader)\n  fullName: System.Xml.Linq.XNode.ReadFrom(System.Xml.XmlReader)\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.ReadFrom(System.Xml.XmlReader)\n    name: ReadFrom\n    fullName: System.Xml.Linq.XNode.ReadFrom\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlReader\n    name: XmlReader\n    fullName: System.Xml.XmlReader\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.ReadFrom(System.Xml.XmlReader)\n    name: ReadFrom\n    fullName: System.Xml.Linq.XNode.ReadFrom\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlReader\n    name: XmlReader\n    fullName: System.Xml.XmlReader\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.ReadFrom(System.Xml.XmlReader)\n  nameWithType: XNode.ReadFrom(XmlReader)\n- uid: System.Xml.Linq.XNode.Remove\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: Remove()\n  fullName: System.Xml.Linq.XNode.Remove()\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.Remove\n    name: Remove\n    fullName: System.Xml.Linq.XNode.Remove\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.Remove\n    name: Remove\n    fullName: System.Xml.Linq.XNode.Remove\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.Remove\n  nameWithType: XNode.Remove()\n- uid: System.Xml.Linq.XNode.ReplaceWith(System.Object)\n  parent: System.Xml.Linq.XNode\n  isExternal: true\n  name: ReplaceWith(Object)\n  fullName: System.Xml.Linq.XNode.ReplaceWith(System.Object)\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.ReplaceWith(System.Object)\n    name: ReplaceWith\n    fullName: System.Xml.Linq.XNode.ReplaceWith\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.ReplaceWith(System.Object)\n    name: ReplaceWith\n    fullName: System.Xml.Linq.XNode.ReplaceWith\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.ReplaceWith(System.Object)\n  nameWithType: XNode.ReplaceWith(Object)\n- uid: System.Xml.Linq.XNode.ReplaceWith(System.Object[])\n  parent: System.Xml.Linq.XNode\n  isExternal: true\n  name: ReplaceWith(Object[])\n  fullName: System.Xml.Linq.XNode.ReplaceWith(System.Object[])\n  fullname.vb: System.Xml.Linq.XNode.ReplaceWith(System.Object())\n  name.vb: ReplaceWith(Object())\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.ReplaceWith(System.Object[])\n    name: ReplaceWith\n    fullName: System.Xml.Linq.XNode.ReplaceWith\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.ReplaceWith(System.Object[])\n    name: ReplaceWith\n    fullName: System.Xml.Linq.XNode.ReplaceWith\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.ReplaceWith(System.Object[])\n  nameWithType: XNode.ReplaceWith(Object[])\n  nameWithType.vb: XNode.ReplaceWith(Object())\n- uid: System.Xml.Linq.XNode.ToString\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: ToString()\n  fullName: System.Xml.Linq.XNode.ToString()\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.ToString\n    name: ToString\n    fullName: System.Xml.Linq.XNode.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.ToString\n    name: ToString\n    fullName: System.Xml.Linq.XNode.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.ToString\n  nameWithType: XNode.ToString()\n- uid: System.Xml.Linq.XNode.ToString(System.Xml.Linq.SaveOptions)\n  parent: System.Xml.Linq.XNode\n  isExternal: false\n  name: ToString(SaveOptions)\n  fullName: System.Xml.Linq.XNode.ToString(System.Xml.Linq.SaveOptions)\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.ToString(System.Xml.Linq.SaveOptions)\n    name: ToString\n    fullName: System.Xml.Linq.XNode.ToString\n  - name: (\n    fullName: (\n  - uid: System.Xml.Linq.SaveOptions\n    name: SaveOptions\n    fullName: System.Xml.Linq.SaveOptions\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.ToString(System.Xml.Linq.SaveOptions)\n    name: ToString\n    fullName: System.Xml.Linq.XNode.ToString\n  - name: (\n    fullName: (\n  - uid: System.Xml.Linq.SaveOptions\n    name: SaveOptions\n    fullName: System.Xml.Linq.SaveOptions\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.ToString(System.Xml.Linq.SaveOptions)\n  nameWithType: XNode.ToString(SaveOptions)\n- uid: System.Xml.Linq.XObject.BaseUri\n  parent: System.Xml.Linq.XObject\n  isExternal: false\n  name: BaseUri\n  fullName: System.Xml.Linq.XObject.BaseUri\n  commentId: P:System.Xml.Linq.XObject.BaseUri\n  nameWithType: XObject.BaseUri\n- uid: System.Xml.Linq.XObject.Document\n  parent: System.Xml.Linq.XObject\n  isExternal: false\n  name: Document\n  fullName: System.Xml.Linq.XObject.Document\n  commentId: P:System.Xml.Linq.XObject.Document\n  nameWithType: XObject.Document\n- uid: System.Xml.Linq.XObject.Parent\n  parent: System.Xml.Linq.XObject\n  isExternal: false\n  name: Parent\n  fullName: System.Xml.Linq.XObject.Parent\n  commentId: P:System.Xml.Linq.XObject.Parent\n  nameWithType: XObject.Parent\n- uid: System.Xml.Linq.XObject.Changed\n  parent: System.Xml.Linq.XObject\n  isExternal: false\n  name: Changed\n  fullName: System.Xml.Linq.XObject.Changed\n  commentId: E:System.Xml.Linq.XObject.Changed\n  nameWithType: XObject.Changed\n- uid: System.Xml.Linq.XObject.Changing\n  parent: System.Xml.Linq.XObject\n  isExternal: false\n  name: Changing\n  fullName: System.Xml.Linq.XObject.Changing\n  commentId: E:System.Xml.Linq.XObject.Changing\n  nameWithType: XObject.Changing\n- uid: System.Xml.Linq.XObject.AddAnnotation(System.Object)\n  parent: System.Xml.Linq.XObject\n  isExternal: true\n  name: AddAnnotation(Object)\n  fullName: System.Xml.Linq.XObject.AddAnnotation(System.Object)\n  spec.csharp:\n  - uid: System.Xml.Linq.XObject.AddAnnotation(System.Object)\n    name: AddAnnotation\n    fullName: System.Xml.Linq.XObject.AddAnnotation\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XObject.AddAnnotation(System.Object)\n    name: AddAnnotation\n    fullName: System.Xml.Linq.XObject.AddAnnotation\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XObject.AddAnnotation(System.Object)\n  nameWithType: XObject.AddAnnotation(Object)\n- uid: System.Xml.Linq.XObject.Annotation(System.Type)\n  parent: System.Xml.Linq.XObject\n  isExternal: true\n  name: Annotation(Type)\n  fullName: System.Xml.Linq.XObject.Annotation(System.Type)\n  spec.csharp:\n  - uid: System.Xml.Linq.XObject.Annotation(System.Type)\n    name: Annotation\n    fullName: System.Xml.Linq.XObject.Annotation\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XObject.Annotation(System.Type)\n    name: Annotation\n    fullName: System.Xml.Linq.XObject.Annotation\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XObject.Annotation(System.Type)\n  nameWithType: XObject.Annotation(Type)\n- uid: System.Xml.Linq.XObject.Annotation``1\n  parent: System.Xml.Linq.XObject\n  isExternal: false\n  name: Annotation<T>()\n  fullName: System.Xml.Linq.XObject.Annotation<T>()\n  fullname.vb: System.Xml.Linq.XObject.Annotation(Of T)()\n  name.vb: Annotation(Of T)()\n  spec.csharp:\n  - uid: System.Xml.Linq.XObject.Annotation``1\n    name: Annotation<T>\n    fullName: System.Xml.Linq.XObject.Annotation<T>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XObject.Annotation``1\n    name: Annotation(Of T)\n    fullName: System.Xml.Linq.XObject.Annotation(Of T)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XObject.Annotation``1\n  nameWithType: XObject.Annotation<T>()\n  nameWithType.vb: XObject.Annotation(Of T)()\n- uid: System.Xml.Linq.XObject.Annotations(System.Type)\n  parent: System.Xml.Linq.XObject\n  isExternal: true\n  name: Annotations(Type)\n  fullName: System.Xml.Linq.XObject.Annotations(System.Type)\n  spec.csharp:\n  - uid: System.Xml.Linq.XObject.Annotations(System.Type)\n    name: Annotations\n    fullName: System.Xml.Linq.XObject.Annotations\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XObject.Annotations(System.Type)\n    name: Annotations\n    fullName: System.Xml.Linq.XObject.Annotations\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XObject.Annotations(System.Type)\n  nameWithType: XObject.Annotations(Type)\n- uid: System.Xml.Linq.XObject.Annotations``1\n  parent: System.Xml.Linq.XObject\n  isExternal: false\n  name: Annotations<T>()\n  fullName: System.Xml.Linq.XObject.Annotations<T>()\n  fullname.vb: System.Xml.Linq.XObject.Annotations(Of T)()\n  name.vb: Annotations(Of T)()\n  spec.csharp:\n  - uid: System.Xml.Linq.XObject.Annotations``1\n    name: Annotations<T>\n    fullName: System.Xml.Linq.XObject.Annotations<T>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XObject.Annotations``1\n    name: Annotations(Of T)\n    fullName: System.Xml.Linq.XObject.Annotations(Of T)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XObject.Annotations``1\n  nameWithType: XObject.Annotations<T>()\n  nameWithType.vb: XObject.Annotations(Of T)()\n- uid: System.Xml.Linq.XObject.RemoveAnnotations(System.Type)\n  parent: System.Xml.Linq.XObject\n  isExternal: true\n  name: RemoveAnnotations(Type)\n  fullName: System.Xml.Linq.XObject.RemoveAnnotations(System.Type)\n  spec.csharp:\n  - uid: System.Xml.Linq.XObject.RemoveAnnotations(System.Type)\n    name: RemoveAnnotations\n    fullName: System.Xml.Linq.XObject.RemoveAnnotations\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XObject.RemoveAnnotations(System.Type)\n    name: RemoveAnnotations\n    fullName: System.Xml.Linq.XObject.RemoveAnnotations\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XObject.RemoveAnnotations(System.Type)\n  nameWithType: XObject.RemoveAnnotations(Type)\n- uid: System.Xml.Linq.XObject.RemoveAnnotations``1\n  parent: System.Xml.Linq.XObject\n  isExternal: false\n  name: RemoveAnnotations<T>()\n  fullName: System.Xml.Linq.XObject.RemoveAnnotations<T>()\n  fullname.vb: System.Xml.Linq.XObject.RemoveAnnotations(Of T)()\n  name.vb: RemoveAnnotations(Of T)()\n  spec.csharp:\n  - uid: System.Xml.Linq.XObject.RemoveAnnotations``1\n    name: RemoveAnnotations<T>\n    fullName: System.Xml.Linq.XObject.RemoveAnnotations<T>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XObject.RemoveAnnotations``1\n    name: RemoveAnnotations(Of T)\n    fullName: System.Xml.Linq.XObject.RemoveAnnotations(Of T)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XObject.RemoveAnnotations``1\n  nameWithType: XObject.RemoveAnnotations<T>()\n  nameWithType.vb: XObject.RemoveAnnotations(Of T)()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Xml.Linq.XElement\n  parent: System.Xml.Linq\n  isExternal: false\n  name: XElement\n  fullName: System.Xml.Linq.XElement\n  commentId: T:System.Xml.Linq.XElement\n  nameWithType: XElement\n- uid: System.Xml.Linq.XName\n  parent: System.Xml.Linq\n  isExternal: false\n  name: XName\n  fullName: System.Xml.Linq.XName\n  commentId: T:System.Xml.Linq.XName\n  nameWithType: XName\n- uid: System.Object[]\n  name: Object[]\n  fullName: System.Object[]\n  fullname.vb: System.Object()\n  name.vb: Object()\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: Object[]\n  nameWithType.vb: Object()\n- uid: System.Xml.Linq.XStreamingElement\n  parent: System.Xml.Linq\n  isExternal: false\n  name: XStreamingElement\n  fullName: System.Xml.Linq.XStreamingElement\n  commentId: T:System.Xml.Linq.XStreamingElement\n  nameWithType: XStreamingElement\n- uid: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<XElement>\n  fullName: System.Collections.Generic.IEnumerable<System.Xml.Linq.XElement>\n  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Xml.Linq.XElement)\n  name.vb: IEnumerable(Of XElement)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Xml.Linq.XElement\n    name: XElement\n    fullName: System.Xml.Linq.XElement\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Xml.Linq.XElement\n    name: XElement\n    fullName: System.Xml.Linq.XElement\n  - name: )\n    fullName: )\n  commentId: T:System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}\n  nameWithType: IEnumerable<XElement>\n  nameWithType.vb: IEnumerable(Of XElement)\n- uid: System.Collections.Generic.IEnumerable`1\n  isExternal: false\n  name: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n  fullname.vb: System.Collections.Generic.IEnumerable(Of T)\n  name.vb: IEnumerable(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  commentId: T:System.Collections.Generic.IEnumerable`1\n  nameWithType: IEnumerable<T>\n  nameWithType.vb: IEnumerable(Of T)\n- uid: System.Collections.Generic\n  isExternal: false\n  name: System.Collections.Generic\n  fullName: System.Collections.Generic\n  commentId: N:System.Collections.Generic\n  nameWithType: System.Collections.Generic\n- uid: System.Xml.Linq.XAttribute\n  parent: System.Xml.Linq\n  isExternal: false\n  name: XAttribute\n  fullName: System.Xml.Linq.XAttribute\n  commentId: T:System.Xml.Linq.XAttribute\n  nameWithType: XAttribute\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.Xml.Linq.XObject.NodeType\n  parent: System.Xml.Linq.XObject\n  isExternal: false\n  name: NodeType\n  fullName: System.Xml.Linq.XObject.NodeType\n  commentId: P:System.Xml.Linq.XObject.NodeType\n  nameWithType: XObject.NodeType\n- uid: System.Xml.XmlNodeType\n  parent: System.Xml\n  isExternal: false\n  name: XmlNodeType\n  fullName: System.Xml.XmlNodeType\n  commentId: T:System.Xml.XmlNodeType\n  nameWithType: XmlNodeType\n- uid: System.Xml\n  isExternal: false\n  name: System.Xml\n  fullName: System.Xml\n  commentId: N:System.Xml\n  nameWithType: System.Xml\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<XAttribute>\n  fullName: System.Collections.Generic.IEnumerable<System.Xml.Linq.XAttribute>\n  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Xml.Linq.XAttribute)\n  name.vb: IEnumerable(Of XAttribute)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Xml.Linq.XAttribute\n    name: XAttribute\n    fullName: System.Xml.Linq.XAttribute\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Xml.Linq.XAttribute\n    name: XAttribute\n    fullName: System.Xml.Linq.XAttribute\n  - name: )\n    fullName: )\n  commentId: T:System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute}\n  nameWithType: IEnumerable<XAttribute>\n  nameWithType.vb: IEnumerable(Of XAttribute)\n- uid: System.Collections.Generic.IEnumerable{System.Xml.Linq.XNode}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<XNode>\n  fullName: System.Collections.Generic.IEnumerable<System.Xml.Linq.XNode>\n  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Xml.Linq.XNode)\n  name.vb: IEnumerable(Of XNode)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Xml.Linq.XNode\n    name: XNode\n    fullName: System.Xml.Linq.XNode\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Xml.Linq.XNode\n    name: XNode\n    fullName: System.Xml.Linq.XNode\n  - name: )\n    fullName: )\n  commentId: T:System.Collections.Generic.IEnumerable{System.Xml.Linq.XNode}\n  nameWithType: IEnumerable<XNode>\n  nameWithType.vb: IEnumerable(Of XNode)\n- uid: System.Xml.Linq.XNamespace\n  parent: System.Xml.Linq\n  isExternal: false\n  name: XNamespace\n  fullName: System.Xml.Linq.XNamespace\n  commentId: T:System.Xml.Linq.XNamespace\n  nameWithType: XNamespace\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  fullName: System.IO.Stream\n  commentId: T:System.IO.Stream\n  nameWithType: Stream\n- uid: System.IO\n  isExternal: false\n  name: System.IO\n  fullName: System.IO\n  commentId: N:System.IO\n  nameWithType: System.IO\n- uid: System.Xml.Linq.LoadOptions\n  parent: System.Xml.Linq\n  isExternal: false\n  name: LoadOptions\n  fullName: System.Xml.Linq.LoadOptions\n  commentId: T:System.Xml.Linq.LoadOptions\n  nameWithType: LoadOptions\n- uid: System.IO.TextReader\n  parent: System.IO\n  isExternal: false\n  name: TextReader\n  fullName: System.IO.TextReader\n  commentId: T:System.IO.TextReader\n  nameWithType: TextReader\n- uid: System.Xml.XmlReader\n  parent: System.Xml\n  isExternal: false\n  name: XmlReader\n  fullName: System.Xml.XmlReader\n  commentId: T:System.Xml.XmlReader\n  nameWithType: XmlReader\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  fullName: System.DateTime\n  commentId: T:System.DateTime\n  nameWithType: DateTime\n- uid: System.DateTimeOffset\n  parent: System\n  isExternal: false\n  name: DateTimeOffset\n  fullName: System.DateTimeOffset\n  commentId: T:System.DateTimeOffset\n  nameWithType: DateTimeOffset\n- uid: System.Decimal\n  parent: System\n  isExternal: false\n  name: Decimal\n  fullName: System.Decimal\n  commentId: T:System.Decimal\n  nameWithType: Decimal\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  fullName: System.Double\n  commentId: T:System.Double\n  nameWithType: Double\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  fullName: System.Guid\n  commentId: T:System.Guid\n  nameWithType: Guid\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  commentId: T:System.Int32\n  nameWithType: Int32\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  fullName: System.Int64\n  commentId: T:System.Int64\n  nameWithType: Int64\n- uid: System.Nullable{System.Boolean}\n  parent: System\n  definition: System.Nullable`1\n  name: Nullable<Boolean>\n  fullName: System.Nullable<System.Boolean>\n  fullname.vb: System.Nullable(Of System.Boolean)\n  name.vb: Nullable(Of Boolean)\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: T:System.Nullable{System.Boolean}\n  nameWithType: Nullable<Boolean>\n  nameWithType.vb: Nullable(Of Boolean)\n- uid: System.Nullable`1\n  parent: System\n  isExternal: false\n  name: Nullable<T>\n  fullName: System.Nullable<T>\n  fullname.vb: System.Nullable(Of T)\n  name.vb: Nullable(Of T)\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  commentId: T:System.Nullable`1\n  nameWithType: Nullable<T>\n  nameWithType.vb: Nullable(Of T)\n- uid: System.Nullable{System.DateTime}\n  parent: System\n  definition: System.Nullable`1\n  name: Nullable<DateTime>\n  fullName: System.Nullable<System.DateTime>\n  fullname.vb: System.Nullable(Of System.DateTime)\n  name.vb: Nullable(Of DateTime)\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.DateTime\n    name: DateTime\n    fullName: System.DateTime\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.DateTime\n    name: DateTime\n    fullName: System.DateTime\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: T:System.Nullable{System.DateTime}\n  nameWithType: Nullable<DateTime>\n  nameWithType.vb: Nullable(Of DateTime)\n- uid: System.Nullable{System.DateTimeOffset}\n  parent: System\n  definition: System.Nullable`1\n  name: Nullable<DateTimeOffset>\n  fullName: System.Nullable<System.DateTimeOffset>\n  fullname.vb: System.Nullable(Of System.DateTimeOffset)\n  name.vb: Nullable(Of DateTimeOffset)\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.DateTimeOffset\n    name: DateTimeOffset\n    fullName: System.DateTimeOffset\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.DateTimeOffset\n    name: DateTimeOffset\n    fullName: System.DateTimeOffset\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: T:System.Nullable{System.DateTimeOffset}\n  nameWithType: Nullable<DateTimeOffset>\n  nameWithType.vb: Nullable(Of DateTimeOffset)\n- uid: System.Nullable{System.Decimal}\n  parent: System\n  definition: System.Nullable`1\n  name: Nullable<Decimal>\n  fullName: System.Nullable<System.Decimal>\n  fullname.vb: System.Nullable(Of System.Decimal)\n  name.vb: Nullable(Of Decimal)\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: T:System.Nullable{System.Decimal}\n  nameWithType: Nullable<Decimal>\n  nameWithType.vb: Nullable(Of Decimal)\n- uid: System.Nullable{System.Double}\n  parent: System\n  definition: System.Nullable`1\n  name: Nullable<Double>\n  fullName: System.Nullable<System.Double>\n  fullname.vb: System.Nullable(Of System.Double)\n  name.vb: Nullable(Of Double)\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: T:System.Nullable{System.Double}\n  nameWithType: Nullable<Double>\n  nameWithType.vb: Nullable(Of Double)\n- uid: System.Nullable{System.Guid}\n  parent: System\n  definition: System.Nullable`1\n  name: Nullable<Guid>\n  fullName: System.Nullable<System.Guid>\n  fullname.vb: System.Nullable(Of System.Guid)\n  name.vb: Nullable(Of Guid)\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: T:System.Nullable{System.Guid}\n  nameWithType: Nullable<Guid>\n  nameWithType.vb: Nullable(Of Guid)\n- uid: System.Nullable{System.Int32}\n  parent: System\n  definition: System.Nullable`1\n  name: Nullable<Int32>\n  fullName: System.Nullable<System.Int32>\n  fullname.vb: System.Nullable(Of System.Int32)\n  name.vb: Nullable(Of Int32)\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: T:System.Nullable{System.Int32}\n  nameWithType: Nullable<Int32>\n  nameWithType.vb: Nullable(Of Int32)\n- uid: System.Nullable{System.Int64}\n  parent: System\n  definition: System.Nullable`1\n  name: Nullable<Int64>\n  fullName: System.Nullable<System.Int64>\n  fullname.vb: System.Nullable(Of System.Int64)\n  name.vb: Nullable(Of Int64)\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: T:System.Nullable{System.Int64}\n  nameWithType: Nullable<Int64>\n  nameWithType.vb: Nullable(Of Int64)\n- uid: System.Nullable{System.Single}\n  parent: System\n  definition: System.Nullable`1\n  name: Nullable<Single>\n  fullName: System.Nullable<System.Single>\n  fullname.vb: System.Nullable(Of System.Single)\n  name.vb: Nullable(Of Single)\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: T:System.Nullable{System.Single}\n  nameWithType: Nullable<Single>\n  nameWithType.vb: Nullable(Of Single)\n- uid: System.Nullable{System.TimeSpan}\n  parent: System\n  definition: System.Nullable`1\n  name: Nullable<TimeSpan>\n  fullName: System.Nullable<System.TimeSpan>\n  fullname.vb: System.Nullable(Of System.TimeSpan)\n  name.vb: Nullable(Of TimeSpan)\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.TimeSpan\n    name: TimeSpan\n    fullName: System.TimeSpan\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.TimeSpan\n    name: TimeSpan\n    fullName: System.TimeSpan\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: T:System.Nullable{System.TimeSpan}\n  nameWithType: Nullable<TimeSpan>\n  nameWithType.vb: Nullable(Of TimeSpan)\n- uid: System.Nullable{System.UInt32}\n  parent: System\n  definition: System.Nullable`1\n  name: Nullable<UInt32>\n  fullName: System.Nullable<System.UInt32>\n  fullname.vb: System.Nullable(Of System.UInt32)\n  name.vb: Nullable(Of UInt32)\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: T:System.Nullable{System.UInt32}\n  nameWithType: Nullable<UInt32>\n  nameWithType.vb: Nullable(Of UInt32)\n- uid: System.Nullable{System.UInt64}\n  parent: System\n  definition: System.Nullable`1\n  name: Nullable<UInt64>\n  fullName: System.Nullable<System.UInt64>\n  fullname.vb: System.Nullable(Of System.UInt64)\n  name.vb: Nullable(Of UInt64)\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.UInt64\n    name: UInt64\n    fullName: System.UInt64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.UInt64\n    name: UInt64\n    fullName: System.UInt64\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: T:System.Nullable{System.UInt64}\n  nameWithType: Nullable<UInt64>\n  nameWithType.vb: Nullable(Of UInt64)\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  fullName: System.Single\n  commentId: T:System.Single\n  nameWithType: Single\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  fullName: System.TimeSpan\n  commentId: T:System.TimeSpan\n  nameWithType: TimeSpan\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  fullName: System.UInt32\n  commentId: T:System.UInt32\n  nameWithType: UInt32\n- uid: System.UInt64\n  parent: System\n  isExternal: false\n  name: UInt64\n  fullName: System.UInt64\n  commentId: T:System.UInt64\n  nameWithType: UInt64\n- uid: System.Xml.Linq.SaveOptions\n  parent: System.Xml.Linq\n  isExternal: false\n  name: SaveOptions\n  fullName: System.Xml.Linq.SaveOptions\n  commentId: T:System.Xml.Linq.SaveOptions\n  nameWithType: SaveOptions\n- uid: System.IO.TextWriter\n  parent: System.IO\n  isExternal: false\n  name: TextWriter\n  fullName: System.IO.TextWriter\n  commentId: T:System.IO.TextWriter\n  nameWithType: TextWriter\n- uid: System.Xml.XmlWriter\n  parent: System.Xml\n  isExternal: false\n  name: XmlWriter\n  fullName: System.Xml.XmlWriter\n  commentId: T:System.Xml.XmlWriter\n  nameWithType: XmlWriter\n- uid: System.Xml.Linq.XNode.WriteTo(System.Xml.XmlWriter)\n  parent: System.Xml.Linq.XNode\n  isExternal: true\n  name: WriteTo(XmlWriter)\n  fullName: System.Xml.Linq.XNode.WriteTo(System.Xml.XmlWriter)\n  spec.csharp:\n  - uid: System.Xml.Linq.XNode.WriteTo(System.Xml.XmlWriter)\n    name: WriteTo\n    fullName: System.Xml.Linq.XNode.WriteTo\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlWriter\n    name: XmlWriter\n    fullName: System.Xml.XmlWriter\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.Linq.XNode.WriteTo(System.Xml.XmlWriter)\n    name: WriteTo\n    fullName: System.Xml.Linq.XNode.WriteTo\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlWriter\n    name: XmlWriter\n    fullName: System.Xml.XmlWriter\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.Linq.XNode.WriteTo(System.Xml.XmlWriter)\n  nameWithType: XNode.WriteTo(XmlWriter)\n- uid: System.FormatException\n  parent: System\n  isExternal: false\n  name: FormatException\n  fullName: System.FormatException\n  nameWithType: FormatException\n  commentId: T:System.FormatException\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n"}