{"nodes":[{"pos":[691,700],"content":"XPathItem","needQuote":true,"nodes":[{"content":"XPathItem","pos":[0,9]}]},{"pos":[1887,1893],"content":"IsNode","needQuote":true,"nodes":[{"content":"IsNode","pos":[0,6]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the item represents an XPath node; &lt;strong&gt;false&lt;/strong&gt; if the item represents an atomic value.&lt;/p&gt;\\n","pos":[2615,2750],"source":"\\n<p>\\n<strong>true</strong> if the item represents an XPath node; <strong>false</strong> if the item represents an atomic value.</p>\\n"},{"pos":[3081,3091],"content":"TypedValue","needQuote":true,"nodes":[{"content":"TypedValue","pos":[0,10]}]},{"content":"\\n&lt;p&gt;The current item as a boxed object of the most appropriate .NET Framework type.&lt;/p&gt;\\n","pos":[3861,3951],"source":"\\n<p>The current item as a boxed object of the most appropriate .NET Framework type.</p>\\n"},{"pos":[4375,4380],"content":"Value","needQuote":true,"nodes":[{"content":"Value","pos":[0,5]}]},{"content":"\\n&lt;p&gt;The &lt;strong&gt;string&lt;/strong&gt; value of the item.&lt;/p&gt;\\n","pos":[5064,5121],"source":"\\n<p>The <strong>string</strong> value of the item.</p>\\n"},{"pos":[5463,5477],"content":"ValueAsBoolean","needQuote":true,"nodes":[{"content":"ValueAsBoolean","pos":[0,14]}]},{"pos":[7186,7201],"content":"ValueAsDateTime","needQuote":true,"nodes":[{"content":"ValueAsDateTime","pos":[0,15]}]},{"pos":[8915,8928],"content":"ValueAsDouble","needQuote":true,"nodes":[{"content":"ValueAsDouble","pos":[0,13]}]},{"content":"\\n&lt;p&gt;The attempted cast resulted in an overflow.&lt;/p&gt;\\n","pos":[10372,10426],"source":"\\n<p>The attempted cast resulted in an overflow.</p>\\n"},{"pos":[10764,10774],"content":"ValueAsInt","needQuote":true,"nodes":[{"content":"ValueAsInt","pos":[0,10]}]},{"content":"\\n&lt;p&gt;The attempted cast resulted in an overflow.&lt;/p&gt;\\n","pos":[12201,12255],"source":"\\n<p>The attempted cast resulted in an overflow.</p>\\n"},{"pos":[12593,12604],"content":"ValueAsLong","needQuote":true,"nodes":[{"content":"ValueAsLong","pos":[0,11]}]},{"content":"\\n&lt;p&gt;The attempted cast resulted in an overflow.&lt;/p&gt;\\n","pos":[14033,14087],"source":"\\n<p>The attempted cast resulted in an overflow.</p>\\n"},{"pos":[14420,14429],"content":"ValueType","needQuote":true,"nodes":[{"content":"ValueType","pos":[0,9]}]},{"pos":[15738,15751],"content":"ValueAs(Type)","needQuote":true,"nodes":[{"content":"ValueAs(Type)","pos":[0,13]}]},{"content":"\\n&lt;p&gt;The type to return the item value as.&lt;/p&gt;\\n","pos":[16435,16483],"source":"\\n<p>The type to return the item value as.</p>\\n"},{"content":"\\n&lt;p&gt;The value of the item as the type requested.&lt;/p&gt;\\n","pos":[16543,16598],"source":"\\n<p>The value of the item as the type requested.</p>\\n"},{"content":"\\n&lt;p&gt;The item's value is not in the correct format for the target type.&lt;/p&gt;\\n","pos":[16705,16782],"source":"\\n<p>The item's value is not in the correct format for the target type.</p>\\n"},{"content":"\\n&lt;p&gt;The attempted cast is not valid.&lt;/p&gt;\\n","pos":[16885,16928],"source":"\\n<p>The attempted cast is not valid.</p>\\n"},{"content":"\\n&lt;p&gt;The attempted cast resulted in an overflow.&lt;/p&gt;\\n","pos":[17025,17079],"source":"\\n<p>The attempted cast resulted in an overflow.</p>\\n"},{"pos":[17523,17559],"content":"ValueAs(Type, IXmlNamespaceResolver)","needQuote":true,"nodes":[{"content":"ValueAs(Type, IXmlNamespaceResolver)","pos":[0,36]}]},{"content":"\\n&lt;p&gt;The type to return the item's value as.&lt;/p&gt;\\n","pos":[18536,18586],"source":"\\n<p>The type to return the item's value as.</p>\\n"},{"content":"\\n&lt;p&gt;The value of the item as the type requested.&lt;/p&gt;\\n","pos":[18884,18939],"source":"\\n<p>The value of the item as the type requested.</p>\\n"},{"content":"\\n&lt;p&gt;The item's value is not in the correct format for the target type.&lt;/p&gt;\\n","pos":[19046,19123],"source":"\\n<p>The item's value is not in the correct format for the target type.</p>\\n"},{"content":"\\n&lt;p&gt;The attempted cast is not valid.&lt;/p&gt;\\n","pos":[19226,19269],"source":"\\n<p>The attempted cast is not valid.</p>\\n"},{"content":"\\n&lt;p&gt;The attempted cast resulted in an overflow.&lt;/p&gt;\\n","pos":[19366,19420],"source":"\\n<p>The attempted cast resulted in an overflow.</p>\\n"},{"pos":[19741,19757],"content":"System.Xml.XPath","needQuote":true,"nodes":[{"content":"System.Xml.XPath","pos":[0,16]}]},{"pos":[19918,19924],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[20084,20094],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[20189,20197],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[20266,20267],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20294,20295],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20365,20373],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[20442,20443],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20470,20471],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20654,20668],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[20787,20793],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[20860,20861],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20911,20917],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[20977,20978],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21061,21067],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[21134,21135],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21185,21191],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[21251,21252],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21466,21488],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[21636,21642],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[21709,21710],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21760,21766],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[21827,21828]},{"pos":[21883,21889],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[21949,21950],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22047,22053],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[22120,22121],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22171,22177],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[22238,22239]},{"pos":[22294,22300],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[22360,22361],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22606,22637],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[22803,22818],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[22894,22895],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22945,22951],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[23012,23013]},{"pos":[23068,23074],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[23134,23135],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23241,23256],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[23332,23333],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23383,23389],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[23450,23451]},{"pos":[23506,23512],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[23572,23573],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23803,23816],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[23917,23928],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[24000,24001],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24028,24029],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24102,24113],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[24185,24186],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24213,24214],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24389,24398],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[24491,24498],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[24566,24567],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24594,24595],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24664,24671],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[24739,24740],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24767,24768],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24943,24960],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[25069,25084],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[25160,25161],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25188,25189],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25266,25281],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[25357,25358],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25385,25386],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25531,25537],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[25669,25676],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[25824,25830],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[25977,25985],"content":"DateTime","needQuote":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[26136,26142],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[26286,26291],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[26432,26437],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[26577,26581],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[26743,26764],"content":"IXmlNamespaceResolver","needQuote":true,"nodes":[{"content":"IXmlNamespaceResolver","pos":[0,21]}]},{"pos":[26942,26952],"content":"System.Xml","needQuote":true,"nodes":[{"content":"System.Xml","pos":[0,10]}]},{"pos":[27104,27119],"content":"FormatException","needQuote":true,"nodes":[{"content":"FormatException","pos":[0,15]}]},{"pos":[27288,27308],"content":"InvalidCastException","needQuote":true,"nodes":[{"content":"InvalidCastException","pos":[0,20]}]},{"pos":[27489,27506],"content":"OverflowException","needQuote":true,"nodes":[{"content":"OverflowException","pos":[0,17]}]}],"content":"items:\n- uid: System.Xml.XPath.XPathItem\n  commentId: T:System.Xml.XPath.XPathItem\n  id: XPathItem\n  parent: System.Xml.XPath\n  children:\n  - System.Xml.XPath.XPathItem.IsNode\n  - System.Xml.XPath.XPathItem.TypedValue\n  - System.Xml.XPath.XPathItem.Value\n  - System.Xml.XPath.XPathItem.ValueAs(System.Type)\n  - System.Xml.XPath.XPathItem.ValueAs(System.Type,System.Xml.IXmlNamespaceResolver)\n  - System.Xml.XPath.XPathItem.ValueAsBoolean\n  - System.Xml.XPath.XPathItem.ValueAsDateTime\n  - System.Xml.XPath.XPathItem.ValueAsDouble\n  - System.Xml.XPath.XPathItem.ValueAsInt\n  - System.Xml.XPath.XPathItem.ValueAsLong\n  - System.Xml.XPath.XPathItem.ValueType\n  langs:\n  - csharp\n  - vb\n  name: XPathItem\n  fullName: System.Xml.XPath.XPathItem\n  type: Class\n  source:\n    remote:\n      path: src/System.Xml.XPath/ref/System.Xml.XPath.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: XPathItem\n    path: src/System.Xml.XPath/ref/System.Xml.XPath.cs\n    startLine: 69\n  assemblies:\n  - System.Xml.XPath\n  namespace: System.Xml.XPath\n  summary: \"\\n<p>Represents an item in the XQuery 1.0 and XPath 2.0 Data Model.</p>\\n\"\n  syntax:\n    content: public abstract class XPathItem\n    content.vb: Public MustInherit Class XPathItem\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - abstract\n  - class\n  modifiers.vb:\n  - Public\n  - MustInherit\n  - Class\n  nameWithType: XPathItem\n- uid: System.Xml.XPath.XPathItem.IsNode\n  commentId: P:System.Xml.XPath.XPathItem.IsNode\n  id: IsNode\n  parent: System.Xml.XPath.XPathItem\n  langs:\n  - csharp\n  - vb\n  name: IsNode\n  fullName: System.Xml.XPath.XPathItem.IsNode\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XPath/ref/System.Xml.XPath.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsNode\n    path: src/System.Xml.XPath/ref/System.Xml.XPath.cs\n    startLine: 72\n  assemblies:\n  - System.Xml.XPath\n  namespace: System.Xml.XPath\n  summary: \"\\n<p>When overridden in a derived class, gets a value indicating whether the item represents an XPath node or an atomic value.</p>\\n\"\n  syntax:\n    content: public abstract bool IsNode { get; }\n    content.vb: Public MustOverride ReadOnly Property IsNode As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the item represents an XPath node; <strong>false</strong> if the item represents an atomic value.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: XPathItem.IsNode\n- uid: System.Xml.XPath.XPathItem.TypedValue\n  commentId: P:System.Xml.XPath.XPathItem.TypedValue\n  id: TypedValue\n  parent: System.Xml.XPath.XPathItem\n  langs:\n  - csharp\n  - vb\n  name: TypedValue\n  fullName: System.Xml.XPath.XPathItem.TypedValue\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XPath/ref/System.Xml.XPath.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: TypedValue\n    path: src/System.Xml.XPath/ref/System.Xml.XPath.cs\n    startLine: 73\n  assemblies:\n  - System.Xml.XPath\n  namespace: System.Xml.XPath\n  summary: \"\\n<p>When overridden in a derived class, gets the current item as a boxed object of the most appropriate .NET Framework 2.0 type according to its schema type.</p>\\n\"\n  syntax:\n    content: public abstract object TypedValue { get; }\n    content.vb: Public MustOverride ReadOnly Property TypedValue As Object\n    parameters: []\n    return:\n      type: System.Object\n      description: \"\\n<p>The current item as a boxed object of the most appropriate .NET Framework type.</p>\\n\"\n  seealso:\n  - type: System.Xml.XPath.XPathItem.Value\n    commentId: P:System.Xml.XPath.XPathItem.Value\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: XPathItem.TypedValue\n- uid: System.Xml.XPath.XPathItem.Value\n  commentId: P:System.Xml.XPath.XPathItem.Value\n  id: Value\n  parent: System.Xml.XPath.XPathItem\n  langs:\n  - csharp\n  - vb\n  name: Value\n  fullName: System.Xml.XPath.XPathItem.Value\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XPath/ref/System.Xml.XPath.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Value\n    path: src/System.Xml.XPath/ref/System.Xml.XPath.cs\n    startLine: 74\n  assemblies:\n  - System.Xml.XPath\n  namespace: System.Xml.XPath\n  summary: \"\\n<p>When overridden in a derived class, gets the <strong>string</strong> value of the item.</p>\\n\"\n  syntax:\n    content: public abstract string Value { get; }\n    content.vb: Public MustOverride ReadOnly Property Value As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The <strong>string</strong> value of the item.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: XPathItem.Value\n- uid: System.Xml.XPath.XPathItem.ValueAsBoolean\n  commentId: P:System.Xml.XPath.XPathItem.ValueAsBoolean\n  id: ValueAsBoolean\n  parent: System.Xml.XPath.XPathItem\n  langs:\n  - csharp\n  - vb\n  name: ValueAsBoolean\n  fullName: System.Xml.XPath.XPathItem.ValueAsBoolean\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XPath/ref/System.Xml.XPath.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ValueAsBoolean\n    path: src/System.Xml.XPath/ref/System.Xml.XPath.cs\n    startLine: 75\n  assemblies:\n  - System.Xml.XPath\n  namespace: System.Xml.XPath\n  summary: \"\\n<p>When overridden in a derived class, gets the item's value as a <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public abstract bool ValueAsBoolean { get; }\n    content.vb: Public MustOverride ReadOnly Property ValueAsBoolean As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>The item's value as a <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>The item's value is not in the correct format for the <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> type.</p>\\n\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>The attempted cast to <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is not valid.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: XPathItem.ValueAsBoolean\n- uid: System.Xml.XPath.XPathItem.ValueAsDateTime\n  commentId: P:System.Xml.XPath.XPathItem.ValueAsDateTime\n  id: ValueAsDateTime\n  parent: System.Xml.XPath.XPathItem\n  langs:\n  - csharp\n  - vb\n  name: ValueAsDateTime\n  fullName: System.Xml.XPath.XPathItem.ValueAsDateTime\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XPath/ref/System.Xml.XPath.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ValueAsDateTime\n    path: src/System.Xml.XPath/ref/System.Xml.XPath.cs\n    startLine: 76\n  assemblies:\n  - System.Xml.XPath\n  namespace: System.Xml.XPath\n  summary: \"\\n<p>When overridden in a derived class, gets the item's value as a <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public abstract DateTime ValueAsDateTime { get; }\n    content.vb: Public MustOverride ReadOnly Property ValueAsDateTime As Date\n    parameters: []\n    return:\n      type: System.DateTime\n      description: \"\\n<p>The item's value as a <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>The item's value is not in the correct format for the <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> type.</p>\\n\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>The attempted cast to <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is not valid.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: XPathItem.ValueAsDateTime\n- uid: System.Xml.XPath.XPathItem.ValueAsDouble\n  commentId: P:System.Xml.XPath.XPathItem.ValueAsDouble\n  id: ValueAsDouble\n  parent: System.Xml.XPath.XPathItem\n  langs:\n  - csharp\n  - vb\n  name: ValueAsDouble\n  fullName: System.Xml.XPath.XPathItem.ValueAsDouble\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XPath/ref/System.Xml.XPath.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ValueAsDouble\n    path: src/System.Xml.XPath/ref/System.Xml.XPath.cs\n    startLine: 77\n  assemblies:\n  - System.Xml.XPath\n  namespace: System.Xml.XPath\n  summary: \"\\n<p>When overridden in a derived class, gets the item's value as a <xref href=\\\"System.Double\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public abstract double ValueAsDouble { get; }\n    content.vb: Public MustOverride ReadOnly Property ValueAsDouble As Double\n    parameters: []\n    return:\n      type: System.Double\n      description: \"\\n<p>The item's value as a <xref href=\\\"System.Double\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>The item's value is not in the correct format for the <xref href=\\\"System.Double\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> type.</p>\\n\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>The attempted cast to <xref href=\\\"System.Double\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is not valid.</p>\\n\"\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: \"\\n<p>The attempted cast resulted in an overflow.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: XPathItem.ValueAsDouble\n- uid: System.Xml.XPath.XPathItem.ValueAsInt\n  commentId: P:System.Xml.XPath.XPathItem.ValueAsInt\n  id: ValueAsInt\n  parent: System.Xml.XPath.XPathItem\n  langs:\n  - csharp\n  - vb\n  name: ValueAsInt\n  fullName: System.Xml.XPath.XPathItem.ValueAsInt\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XPath/ref/System.Xml.XPath.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ValueAsInt\n    path: src/System.Xml.XPath/ref/System.Xml.XPath.cs\n    startLine: 78\n  assemblies:\n  - System.Xml.XPath\n  namespace: System.Xml.XPath\n  summary: \"\\n<p>When overridden in a derived class, gets the item's value as an <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public abstract int ValueAsInt { get; }\n    content.vb: Public MustOverride ReadOnly Property ValueAsInt As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The item's value as an <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>The item's value is not in the correct format for the <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> type.</p>\\n\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>The attempted cast to <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is not valid.</p>\\n\"\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: \"\\n<p>The attempted cast resulted in an overflow.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: XPathItem.ValueAsInt\n- uid: System.Xml.XPath.XPathItem.ValueAsLong\n  commentId: P:System.Xml.XPath.XPathItem.ValueAsLong\n  id: ValueAsLong\n  parent: System.Xml.XPath.XPathItem\n  langs:\n  - csharp\n  - vb\n  name: ValueAsLong\n  fullName: System.Xml.XPath.XPathItem.ValueAsLong\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XPath/ref/System.Xml.XPath.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ValueAsLong\n    path: src/System.Xml.XPath/ref/System.Xml.XPath.cs\n    startLine: 79\n  assemblies:\n  - System.Xml.XPath\n  namespace: System.Xml.XPath\n  summary: \"\\n<p>When overridden in a derived class, gets the item's value as an <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public abstract long ValueAsLong { get; }\n    content.vb: Public MustOverride ReadOnly Property ValueAsLong As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>The item's value as an <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>The item's value is not in the correct format for the <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> type.</p>\\n\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>The attempted cast to <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is not valid.</p>\\n\"\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: \"\\n<p>The attempted cast resulted in an overflow.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: XPathItem.ValueAsLong\n- uid: System.Xml.XPath.XPathItem.ValueType\n  commentId: P:System.Xml.XPath.XPathItem.ValueType\n  id: ValueType\n  parent: System.Xml.XPath.XPathItem\n  langs:\n  - csharp\n  - vb\n  name: ValueType\n  fullName: System.Xml.XPath.XPathItem.ValueType\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XPath/ref/System.Xml.XPath.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ValueType\n    path: src/System.Xml.XPath/ref/System.Xml.XPath.cs\n    startLine: 80\n  assemblies:\n  - System.Xml.XPath\n  namespace: System.Xml.XPath\n  summary: \"\\n<p>When overridden in a derived class, gets the .NET Framework 2.0 type of the item.</p>\\n\"\n  syntax:\n    content: public abstract Type ValueType { get; }\n    content.vb: Public MustOverride ReadOnly Property ValueType As Type\n    parameters: []\n    return:\n      type: System.Type\n      description: \"\\n<p>The .NET Framework type of the item. The default value is <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  seealso:\n  - type: System.Xml.XPath.XPathItem.TypedValue\n    commentId: P:System.Xml.XPath.XPathItem.TypedValue\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: XPathItem.ValueType\n- uid: System.Xml.XPath.XPathItem.ValueAs(System.Type)\n  commentId: M:System.Xml.XPath.XPathItem.ValueAs(System.Type)\n  id: ValueAs(System.Type)\n  parent: System.Xml.XPath.XPathItem\n  langs:\n  - csharp\n  - vb\n  name: ValueAs(Type)\n  fullName: System.Xml.XPath.XPathItem.ValueAs(System.Type)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XPath/ref/System.Xml.XPath.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ValueAs\n    path: src/System.Xml.XPath/ref/System.Xml.XPath.cs\n    startLine: 81\n  assemblies:\n  - System.Xml.XPath\n  namespace: System.Xml.XPath\n  summary: \"\\n<p>Returns the item's value as the specified type.</p>\\n\"\n  syntax:\n    content: public virtual object ValueAs(Type returnType)\n    content.vb: Public Overridable Function ValueAs(returnType As Type) As Object\n    parameters:\n    - id: returnType\n      type: System.Type\n      description: \"\\n<p>The type to return the item value as.</p>\\n\"\n    return:\n      type: System.Object\n      description: \"\\n<p>The value of the item as the type requested.</p>\\n\"\n  exceptions:\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>The item's value is not in the correct format for the target type.</p>\\n\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>The attempted cast is not valid.</p>\\n\"\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: \"\\n<p>The attempted cast resulted in an overflow.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XPathItem.ValueAs(Type)\n- uid: System.Xml.XPath.XPathItem.ValueAs(System.Type,System.Xml.IXmlNamespaceResolver)\n  commentId: M:System.Xml.XPath.XPathItem.ValueAs(System.Type,System.Xml.IXmlNamespaceResolver)\n  id: ValueAs(System.Type,System.Xml.IXmlNamespaceResolver)\n  parent: System.Xml.XPath.XPathItem\n  langs:\n  - csharp\n  - vb\n  name: ValueAs(Type, IXmlNamespaceResolver)\n  fullName: System.Xml.XPath.XPathItem.ValueAs(System.Type, System.Xml.IXmlNamespaceResolver)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XPath/ref/System.Xml.XPath.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ValueAs\n    path: src/System.Xml.XPath/ref/System.Xml.XPath.cs\n    startLine: 82\n  assemblies:\n  - System.Xml.XPath\n  namespace: System.Xml.XPath\n  summary: \"\\n<p>When overridden in a derived class, returns the item's value as the type specified using the <xref href=\\\"System.Xml.IXmlNamespaceResolver\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object specified to resolve namespace prefixes.</p>\\n\"\n  syntax:\n    content: public abstract object ValueAs(Type returnType, IXmlNamespaceResolver nsResolver)\n    content.vb: Public MustOverride Function ValueAs(returnType As Type, nsResolver As IXmlNamespaceResolver) As Object\n    parameters:\n    - id: returnType\n      type: System.Type\n      description: \"\\n<p>The type to return the item's value as.</p>\\n\"\n    - id: nsResolver\n      type: System.Xml.IXmlNamespaceResolver\n      description: \"\\n<p>The <xref href=\\\"System.Xml.IXmlNamespaceResolver\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object used to resolve namespace prefixes.</p>\\n\"\n    return:\n      type: System.Object\n      description: \"\\n<p>The value of the item as the type requested.</p>\\n\"\n  exceptions:\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>The item's value is not in the correct format for the target type.</p>\\n\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>The attempted cast is not valid.</p>\\n\"\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: \"\\n<p>The attempted cast resulted in an overflow.</p>\\n\"\n  seealso:\n  - type: System.Xml.IXmlNamespaceResolver\n    commentId: T:System.Xml.IXmlNamespaceResolver\n  modifiers.csharp:\n  - public\n  - abstract\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: XPathItem.ValueAs(Type, IXmlNamespaceResolver)\nreferences:\n- uid: System.Xml.XPath\n  isExternal: false\n  name: System.Xml.XPath\n  fullName: System.Xml.XPath\n  commentId: N:System.Xml.XPath\n  nameWithType: System.Xml.XPath\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  fullName: System.DateTime\n  commentId: T:System.DateTime\n  nameWithType: DateTime\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  fullName: System.Double\n  commentId: T:System.Double\n  nameWithType: Double\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  commentId: T:System.Int32\n  nameWithType: Int32\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  fullName: System.Int64\n  commentId: T:System.Int64\n  nameWithType: Int64\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  fullName: System.Type\n  commentId: T:System.Type\n  nameWithType: Type\n- uid: System.Xml.IXmlNamespaceResolver\n  parent: System.Xml\n  isExternal: false\n  name: IXmlNamespaceResolver\n  fullName: System.Xml.IXmlNamespaceResolver\n  commentId: T:System.Xml.IXmlNamespaceResolver\n  nameWithType: IXmlNamespaceResolver\n- uid: System.Xml\n  isExternal: false\n  name: System.Xml\n  fullName: System.Xml\n  commentId: N:System.Xml\n  nameWithType: System.Xml\n- uid: System.FormatException\n  parent: System\n  isExternal: false\n  name: FormatException\n  fullName: System.FormatException\n  nameWithType: FormatException\n  commentId: T:System.FormatException\n- uid: System.InvalidCastException\n  isExternal: false\n  name: InvalidCastException\n  fullName: System.InvalidCastException\n  nameWithType: InvalidCastException\n  commentId: T:System.InvalidCastException\n- uid: System.OverflowException\n  isExternal: false\n  name: OverflowException\n  fullName: System.OverflowException\n  nameWithType: OverflowException\n  commentId: T:System.OverflowException\n"}