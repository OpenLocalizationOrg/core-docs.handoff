{"nodes":[{"pos":[267,279],"content":"IComparer<T>","needQuote":true,"nodes":[{"content":"IComparer&lt;T&gt;","pos":[0,12],"source":"IComparer<T>"}]},{"content":"\\n&lt;p&gt;The type of objects to compare.&lt;/p&gt;\\n","pos":[936,978],"source":"\\n<p>The type of objects to compare.</p>\\n"},{"pos":[2041,2054],"content":"Compare(T, T)","needQuote":true,"nodes":[{"content":"Compare(T, T)","pos":[0,13]}]},{"content":"\\n&lt;p&gt;The first object to compare.&lt;/p&gt;\\n","pos":[2782,2821],"source":"\\n<p>The first object to compare.</p>\\n"},{"content":"\\n&lt;p&gt;The second object to compare.&lt;/p&gt;\\n","pos":[2873,2913],"source":"\\n<p>The second object to compare.</p>\\n"},{"content":"\\n&lt;p&gt;A signed integer that indicates the relative values of &lt;em&gt;x&lt;/em&gt; and &lt;em&gt;y&lt;/em&gt;, as shown in the following table.&lt;/p&gt;\\n&lt;p&gt;Value &lt;/p&gt;\\n&lt;p&gt;Meaning &lt;/p&gt;\\n&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;\\n&lt;p&gt;Less than zero&lt;/p&gt;\\n&lt;/td&gt;&lt;td&gt;\\n&lt;p&gt;\\n&lt;em&gt;x&lt;/em&gt; is less than &lt;em&gt;y&lt;/em&gt;.&lt;/p&gt;\\n&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;\\n&lt;p&gt;Zero&lt;/p&gt;\\n&lt;/td&gt;&lt;td&gt;\\n&lt;p&gt;\\n&lt;em&gt;x&lt;/em&gt; equals &lt;em&gt;y&lt;/em&gt;.&lt;/p&gt;\\n&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;\\n&lt;p&gt;Greater than zero&lt;/p&gt;\\n&lt;/td&gt;&lt;td&gt;\\n&lt;p&gt;\\n&lt;em&gt;x&lt;/em&gt; is greater than &lt;em&gt;y&lt;/em&gt;.&lt;/p&gt;\\n&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\\n","pos":[2972,3451],"source":"\\n<p>A signed integer that indicates the relative values of <em>x</em> and <em>y</em>, as shown in the following table.</p>\\n<p>Value </p>\\n<p>Meaning </p>\\n<table><tbody><tr><td>\\n<p>Less than zero</p>\\n</td><td>\\n<p>\\n<em>x</em> is less than <em>y</em>.</p>\\n</td></tr><tr><td>\\n<p>Zero</p>\\n</td><td>\\n<p>\\n<em>x</em> equals <em>y</em>.</p>\\n</td></tr><tr><td>\\n<p>Greater than zero</p>\\n</td><td>\\n<p>\\n<em>x</em> is greater than <em>y</em>.</p>\\n</td></tr></tbody></table>\\n"},{"pos":[4062,4088],"content":"System.Collections.Generic","needQuote":true,"nodes":[{"content":"System.Collections.Generic","pos":[0,26]}]},{"pos":[4250,4251],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[4368,4373],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[4486,4487],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[4562,4568],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]}],"content":"items:\n- uid: System.Collections.Generic.IComparer`1\n  commentId: T:System.Collections.Generic.IComparer`1\n  id: IComparer`1\n  parent: System.Collections.Generic\n  children:\n  - System.Collections.Generic.IComparer`1.Compare(`0,`0)\n  langs:\n  - csharp\n  - vb\n  name: IComparer<T>\n  fullName: System.Collections.Generic.IComparer<T>\n  type: Interface\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/Generic/IComparer.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: IComparer\n    path: src/mscorlib/src/System/Collections/Generic/IComparer.cs\n    startLine: 21\n  assemblies:\n  - System.Runtime\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Defines a method that a type implements to compare two objects.</p>\\n\"\n  syntax:\n    content: public interface IComparer<in T>\n    content.vb: Public Interface IComparer(Of In T)\n    typeParameters:\n    - id: T\n      description: \"\\n<p>The type of objects to compare.</p>\\n\"\n  seealso:\n  - type: System.Collections.Generic.Comparer`1\n    commentId: T:System.Collections.Generic.Comparer`1\n  - type: System.Collections\n    commentId: N:System.Collections\n  - type: System.Threading.Thread.CurrentCulture\n    commentId: P:System.Threading.Thread.CurrentCulture\n  - type: System.Globalization.CompareInfo\n    commentId: T:System.Globalization.CompareInfo\n  - type: System.Globalization.CultureInfo\n    commentId: T:System.Globalization.CultureInfo\n  - type: System.Collections.Generic.IEqualityComparer`1\n    commentId: T:System.Collections.Generic.IEqualityComparer`1\n  modifiers.csharp:\n  - public\n  - interface\n  modifiers.vb:\n  - Public\n  - Interface\n  fullName.vb: System.Collections.Generic.IComparer(Of T)\n  name.vb: IComparer(Of T)\n  nameWithType: IComparer<T>\n  nameWithType.vb: IComparer(Of T)\n- uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)\n  commentId: M:System.Collections.Generic.IComparer`1.Compare(`0,`0)\n  id: Compare(`0,`0)\n  parent: System.Collections.Generic.IComparer`1\n  langs:\n  - csharp\n  - vb\n  name: Compare(T, T)\n  fullName: System.Collections.Generic.IComparer<T>.Compare(T, T)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/Generic/IComparer.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Compare\n    path: src/mscorlib/src/System/Collections/Generic/IComparer.cs\n    startLine: 27\n  assemblies:\n  - System.Runtime\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.</p>\\n\"\n  syntax:\n    content: int Compare(T x, T y)\n    content.vb: Function Compare(x As T, y As T) As Integer\n    parameters:\n    - id: x\n      type: '{T}'\n      description: \"\\n<p>The first object to compare.</p>\\n\"\n    - id: y\n      type: '{T}'\n      description: \"\\n<p>The second object to compare.</p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>A signed integer that indicates the relative values of <em>x</em> and <em>y</em>, as shown in the following table.</p>\\n<p>Value </p>\\n<p>Meaning </p>\\n<table><tbody><tr><td>\\n<p>Less than zero</p>\\n</td><td>\\n<p>\\n<em>x</em> is less than <em>y</em>.</p>\\n</td></tr><tr><td>\\n<p>Zero</p>\\n</td><td>\\n<p>\\n<em>x</em> equals <em>y</em>.</p>\\n</td></tr><tr><td>\\n<p>Greater than zero</p>\\n</td><td>\\n<p>\\n<em>x</em> is greater than <em>y</em>.</p>\\n</td></tr></tbody></table>\\n\"\n  seealso:\n  - type: System.IComparable`1\n    commentId: T:System.IComparable`1\n  - type: System.Threading.Thread.CurrentCulture\n    commentId: P:System.Threading.Thread.CurrentCulture\n  - type: System.Globalization.CompareInfo\n    commentId: T:System.Globalization.CompareInfo\n  - type: System.Globalization.CultureInfo\n    commentId: T:System.Globalization.CultureInfo\n  fullName.vb: System.Collections.Generic.IComparer(Of T).Compare(T, T)\n  nameWithType: IComparer<T>.Compare(T, T)\n  nameWithType.vb: IComparer(Of T).Compare(T, T)\nreferences:\n- uid: System.Collections.Generic\n  isExternal: false\n  name: System.Collections.Generic\n  fullName: System.Collections.Generic\n  nameWithType: System.Collections.Generic\n  commentId: N:System.Collections.Generic\n- uid: '{T}'\n  definition: T\n  name: T\n  fullName: T\n  nameWithType: T\n  commentId: '!:T'\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: T\n  isExternal: false\n  name: T\n  fullName: T\n  nameWithType: T\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n"}