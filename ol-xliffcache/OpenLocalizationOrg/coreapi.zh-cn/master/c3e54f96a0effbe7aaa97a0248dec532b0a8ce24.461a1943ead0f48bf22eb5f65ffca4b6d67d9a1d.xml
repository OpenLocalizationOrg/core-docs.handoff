{"nodes":[{"pos":[1186,1196],"content":"WebRequest","needQuote":true,"nodes":[{"content":"WebRequest","pos":[0,10]}]},{"pos":[2586,2598],"content":"WebRequest()","needQuote":true,"nodes":[{"content":"WebRequest()","pos":[0,12]}]},{"pos":[3482,3493],"content":"ContentType","needQuote":true,"nodes":[{"content":"ContentType","pos":[0,11]}]},{"content":"\\n&lt;p&gt;The content type of the request data.&lt;/p&gt;\\n","pos":[4214,4262],"source":"\\n<p>The content type of the request data.</p>\\n"},{"content":"\\n&lt;p&gt;Any attempt is made to get or set the property, when the property is not overridden in a descendant class.","pos":[4385,4496],"source":"\\n<p>Any attempt is made to get or set the property, when the property is not overridden in a descendant class."},{"content":"&lt;/p&gt;\\n","pos":[4497,4503],"source":" </p>\\n"},{"pos":[4937,4948],"content":"Credentials","needQuote":true,"nodes":[{"content":"Credentials","pos":[0,11]}]},{"content":"\\n&lt;p&gt;Any attempt is made to get or set the property, when the property is not overridden in a descendant class.","pos":[6057,6168],"source":"\\n<p>Any attempt is made to get or set the property, when the property is not overridden in a descendant class."},{"content":"&lt;/p&gt;\\n","pos":[6169,6175],"source":" </p>\\n"},{"pos":[6785,6800],"content":"DefaultWebProxy","needQuote":true,"nodes":[{"content":"DefaultWebProxy","pos":[0,15]}]},{"pos":[8077,8084],"content":"Headers","needQuote":true,"nodes":[{"content":"Headers","pos":[0,7]}]},{"content":"\\n&lt;p&gt;Any attempt is made to get or set the property, when the property is not overridden in a descendant class.","pos":[9149,9260],"source":"\\n<p>Any attempt is made to get or set the property, when the property is not overridden in a descendant class."},{"content":"&lt;/p&gt;\\n","pos":[9261,9267],"source":" </p>\\n"},{"pos":[9763,9769],"content":"Method","needQuote":true,"nodes":[{"content":"Method","pos":[0,6]}]},{"content":"\\n&lt;p&gt;The protocol method to use in this request.&lt;/p&gt;\\n","pos":[10465,10519],"source":"\\n<p>The protocol method to use in this request.</p>\\n"},{"content":"\\n&lt;p&gt;If the property is not overridden in a descendant class, any attempt is made to get or set the property.","pos":[10642,10751],"source":"\\n<p>If the property is not overridden in a descendant class, any attempt is made to get or set the property."},{"content":"&lt;/p&gt;\\n","pos":[10752,10758],"source":" </p>\\n"},{"pos":[11159,11164],"content":"Proxy","needQuote":true,"nodes":[{"content":"Proxy","pos":[0,5]}]},{"content":"\\n&lt;p&gt;Any attempt is made to get or set the property, when the property is not overridden in a descendant class.","pos":[12140,12251],"source":"\\n<p>Any attempt is made to get or set the property, when the property is not overridden in a descendant class."},{"content":"&lt;/p&gt;\\n","pos":[12252,12258],"source":" </p>\\n"},{"pos":[12805,12815],"content":"RequestUri","needQuote":true,"nodes":[{"content":"RequestUri","pos":[0,10]}]},{"content":"\\n&lt;p&gt;Any attempt is made to get or set the property, when the property is not overridden in a descendant class.","pos":[13793,13904],"source":"\\n<p>Any attempt is made to get or set the property, when the property is not overridden in a descendant class."},{"content":"&lt;/p&gt;\\n","pos":[13905,13911],"source":" </p>\\n"},{"pos":[14472,14493],"content":"UseDefaultCredentials","needQuote":true,"nodes":[{"content":"UseDefaultCredentials","pos":[0,21]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the default credentials are used; otherwise &lt;strong&gt;false&lt;/strong&gt;.","pos":[15438,15537],"source":"\\n<p>\\n<strong>true</strong> if the default credentials are used; otherwise <strong>false</strong>."},{"content":"The default value is &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[15538,15588],"source":" The default value is <strong>false</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;You attempted to set this property after the request was sent.&lt;/p&gt;\\n","pos":[15715,15788],"source":"\\n<p>You attempted to set this property after the request was sent.</p>\\n"},{"content":"\\n&lt;p&gt;Any attempt is made to access the property, when the property is not overridden in a descendant class.","pos":[15897,16004],"source":"\\n<p>Any attempt is made to access the property, when the property is not overridden in a descendant class."},{"content":"&lt;/p&gt;\\n","pos":[16005,16011],"source":" </p>\\n"},{"pos":[16321,16328],"content":"Abort()","needQuote":true,"nodes":[{"content":"Abort()","pos":[0,7]}]},{"content":"\\n&lt;p&gt;Any attempt is made to access the method, when the method is not overridden in a descendant class.","pos":[16960,17063],"source":"\\n<p>Any attempt is made to access the method, when the method is not overridden in a descendant class."},{"content":"&lt;/p&gt;\\n","pos":[17064,17070],"source":" </p>\\n"},{"pos":[17508,17552],"content":"BeginGetRequestStream(AsyncCallback, Object)","needQuote":true,"nodes":[{"content":"BeginGetRequestStream(AsyncCallback, Object)","pos":[0,44]}]},{"content":"\\n&lt;p&gt;An object containing state information for this asynchronous request.","pos":[18695,18769],"source":"\\n<p>An object containing state information for this asynchronous request."},{"content":"&lt;/p&gt;\\n","pos":[18770,18776],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;Any attempt is made to access the method, when the method is not overridden in a descendant class.","pos":[19100,19203],"source":"\\n<p>Any attempt is made to access the method, when the method is not overridden in a descendant class."},{"content":"&lt;/p&gt;\\n","pos":[19204,19210],"source":" </p>\\n"},{"pos":[19834,19873],"content":"BeginGetResponse(AsyncCallback, Object)","needQuote":true,"nodes":[{"content":"BeginGetResponse(AsyncCallback, Object)","pos":[0,39]}]},{"content":"\\n&lt;p&gt;An object containing state information for this asynchronous request.","pos":[20906,20980],"source":"\\n<p>An object containing state information for this asynchronous request."},{"content":"&lt;/p&gt;\\n","pos":[20981,20987],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;Any attempt is made to access the method, when the method is not overridden in a descendant class.","pos":[21311,21414],"source":"\\n<p>Any attempt is made to access the method, when the method is not overridden in a descendant class."},{"content":"&lt;/p&gt;\\n","pos":[21415,21421],"source":" </p>\\n"},{"pos":[22032,22046],"content":"Create(String)","needQuote":true,"nodes":[{"content":"Create(String)","pos":[0,14]}]},{"content":"\\n&lt;p&gt;The URI that identifies the Internet resource.","pos":[22850,22901],"source":"\\n<p>The URI that identifies the Internet resource."},{"content":"&lt;/p&gt;\\n","pos":[22902,22908],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The request scheme specified in &lt;em&gt;requestUriString&lt;/em&gt; has not been registered.","pos":[23229,23316],"source":"\\n<p>The request scheme specified in <em>requestUriString</em> has not been registered."},{"content":"&lt;/p&gt;\\n","pos":[23317,23323],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;requestUriString&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[23428,23486],"source":"\\n<p>\\n<em>requestUriString</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[23487,23493],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have permission to connect to the requested URI or a URI that the request is redirected to.","pos":[23608,23724],"source":"\\n<p>The caller does not have permission to connect to the requested URI or a URI that the request is redirected to."},{"content":"&lt;/p&gt;\\n","pos":[23725,23731],"source":" </p>\\n"},{"pos":[24493,24504],"content":"Create(Uri)","needQuote":true,"nodes":[{"content":"Create(Uri)","pos":[0,11]}]},{"content":"\\n&lt;p&gt;The request scheme specified in &lt;em&gt;requestUri&lt;/em&gt; is not registered.","pos":[25730,25805],"source":"\\n<p>The request scheme specified in <em>requestUri</em> is not registered."},{"content":"&lt;/p&gt;\\n","pos":[25806,25812],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;requestUri&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[25917,25969],"source":"\\n<p>\\n<em>requestUri</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[25970,25976],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have permission to connect to the requested URI or a URI that the request is redirected to.","pos":[26091,26207],"source":"\\n<p>The caller does not have permission to connect to the requested URI or a URI that the request is redirected to."},{"content":"&lt;/p&gt;\\n","pos":[26208,26214],"source":" </p>\\n"},{"pos":[26552,26570],"content":"CreateHttp(String)","needQuote":true,"nodes":[{"content":"CreateHttp(String)","pos":[0,18]}]},{"content":"\\n&lt;p&gt;A URI string that identifies the Internet resource.","pos":[27402,27458],"source":"\\n<p>A URI string that identifies the Internet resource."},{"content":"&lt;/p&gt;\\n","pos":[27459,27465],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The request scheme specified in &lt;em&gt;requestUriString&lt;/em&gt; is the http or https scheme.","pos":[27897,27988],"source":"\\n<p>The request scheme specified in <em>requestUriString</em> is the http or https scheme."},{"content":"&lt;/p&gt;\\n","pos":[27989,27995],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;requestUriString&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[28100,28158],"source":"\\n<p>\\n<em>requestUriString</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[28159,28165],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have permission to connect to the requested URI or a URI that the request is redirected to.","pos":[28280,28396],"source":"\\n<p>The caller does not have permission to connect to the requested URI or a URI that the request is redirected to."},{"content":"&lt;/p&gt;\\n","pos":[28397,28403],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The URI specified in &lt;em&gt;requestUriString&lt;/em&gt; is not a valid URI.","pos":[28502,28573],"source":"\\n<p>The URI specified in <em>requestUriString</em> is not a valid URI."},{"content":"&lt;/p&gt;\\n","pos":[28574,28580],"source":" </p>\\n"},{"pos":[28916,28931],"content":"CreateHttp(Uri)","needQuote":true,"nodes":[{"content":"CreateHttp(Uri)","pos":[0,15]}]},{"content":"\\n&lt;p&gt;A URI that identifies the Internet resource.&lt;/p&gt;\\n","pos":[29726,29781],"source":"\\n<p>A URI that identifies the Internet resource.</p>\\n"},{"content":"\\n&lt;p&gt;The request scheme specified in &lt;em&gt;requestUri&lt;/em&gt; is the http or https scheme.","pos":[30212,30297],"source":"\\n<p>The request scheme specified in <em>requestUri</em> is the http or https scheme."},{"content":"&lt;/p&gt;\\n","pos":[30298,30304],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;requestUri&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[30409,30461],"source":"\\n<p>\\n<em>requestUri</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[30462,30468],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have permission to connect to the requested URI or a URI that the request is redirected to.","pos":[30583,30699],"source":"\\n<p>The caller does not have permission to connect to the requested URI or a URI that the request is redirected to."},{"content":"&lt;/p&gt;\\n","pos":[30700,30706],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The URI specified in &lt;em&gt;requestUri&lt;/em&gt; is not a valid URI.","pos":[30805,30870],"source":"\\n<p>The URI specified in <em>requestUri</em> is not a valid URI."},{"content":"&lt;/p&gt;\\n","pos":[30871,30877],"source":" </p>\\n"},{"pos":[31264,31297],"content":"EndGetRequestStream(IAsyncResult)","needQuote":true,"nodes":[{"content":"EndGetRequestStream(IAsyncResult)","pos":[0,33]}]},{"content":"\\n&lt;p&gt;Any attempt is made to access the method, when the method is not overridden in a descendant class.","pos":[32627,32730],"source":"\\n<p>Any attempt is made to access the method, when the method is not overridden in a descendant class."},{"content":"&lt;/p&gt;\\n","pos":[32731,32737],"source":" </p>\\n"},{"pos":[33333,33361],"content":"EndGetResponse(IAsyncResult)","needQuote":true,"nodes":[{"content":"EndGetResponse(IAsyncResult)","pos":[0,28]}]},{"content":"\\n&lt;p&gt;Any attempt is made to access the method, when the method is not overridden in a descendant class.","pos":[34691,34794],"source":"\\n<p>Any attempt is made to access the method, when the method is not overridden in a descendant class."},{"content":"&lt;/p&gt;\\n","pos":[34795,34801],"source":" </p>\\n"},{"pos":[35340,35363],"content":"GetRequestStreamAsync()","needQuote":true,"nodes":[{"content":"GetRequestStreamAsync()","pos":[0,23]}]},{"pos":[36739,36757],"content":"GetResponseAsync()","needQuote":true,"nodes":[{"content":"GetResponseAsync()","pos":[0,18]}]},{"pos":[38163,38204],"content":"RegisterPrefix(String, IWebRequestCreate)","needQuote":true,"nodes":[{"content":"RegisterPrefix(String, IWebRequestCreate)","pos":[0,41]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if registration is successful; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[39607,39707],"source":"\\n<p>\\n<strong>true</strong> if registration is successful; otherwise, <strong>false</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;prefix&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;creator&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[39826,39940],"source":"\\n<p>\\n<em>prefix</em> is <strong>null</strong></p>\\n<p>-or- </p>\\n<p>\\n<em>creator</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[39941,39947],"source":" </p>\\n"},{"pos":[40156,40166],"content":"System.Net","needQuote":true,"nodes":[{"content":"System.Net","pos":[0,10]}]},{"pos":[40309,40315],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[40475,40485],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[40580,40588],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[40657,40658],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[40685,40686],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[40756,40764],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[40833,40834],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[40861,40862],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[41045,41059],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[41178,41184],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[41251,41252],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[41302,41308],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[41368,41369],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[41452,41458],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[41525,41526],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[41576,41582],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[41642,41643],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[41857,41879],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[42027,42033],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[42100,42101],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[42151,42157],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[42218,42219]},{"pos":[42274,42280],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[42340,42341],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[42438,42444],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[42511,42512],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[42562,42568],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[42629,42630]},{"pos":[42685,42691],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[42751,42752],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[42997,43028],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[43194,43209],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[43285,43286],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[43336,43342],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[43403,43404]},{"pos":[43459,43465],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[43525,43526],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[43632,43647],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[43723,43724],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[43774,43780],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[43841,43842]},{"pos":[43897,43903],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[43963,43964],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[44194,44207],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[44308,44319],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[44391,44392],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[44419,44420],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[44493,44504],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[44576,44577],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[44604,44605],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[44780,44789],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[44882,44889],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[44957,44958],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[44985,44986],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[45055,45062],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[45130,45131],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[45158,45159],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[45334,45351],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[45460,45475],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[45551,45552],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[45579,45580],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[45657,45672],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[45748,45749],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[45776,45777],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[45922,45928],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[46059,46065],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[46224,46236],"content":"ICredentials","needQuote":true,"nodes":[{"content":"ICredentials","pos":[0,12]}]},{"pos":[46397,46406],"content":"IWebProxy","needQuote":true,"nodes":[{"content":"IWebProxy","pos":[0,9]}]},{"pos":[46568,46587],"content":"WebHeaderCollection","needQuote":true,"nodes":[{"content":"WebHeaderCollection","pos":[0,19]}]},{"pos":[46776,46779],"content":"Uri","needQuote":true,"nodes":[{"content":"Uri","pos":[0,3]}]},{"pos":[46916,46923],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[47078,47091],"content":"AsyncCallback","needQuote":true,"nodes":[{"content":"AsyncCallback","pos":[0,13]}]},{"pos":[47263,47275],"content":"IAsyncResult","needQuote":true,"nodes":[{"content":"IAsyncResult","pos":[0,12]}]},{"pos":[47450,47460],"content":"WebRequest","needQuote":true,"nodes":[{"content":"WebRequest","pos":[0,10]}]},{"pos":[47641,47655],"content":"HttpWebRequest","needQuote":true,"nodes":[{"content":"HttpWebRequest","pos":[0,14]}]},{"pos":[47838,47844],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[47974,47983],"content":"System.IO","needQuote":true,"nodes":[{"content":"System.IO","pos":[0,9]}]},{"pos":[48136,48147],"content":"WebResponse","needQuote":true,"nodes":[{"content":"WebResponse","pos":[0,11]}]},{"pos":[48387,48399],"content":"Task<Stream>","needQuote":true,"nodes":[{"content":"Task&lt;Stream&gt;","pos":[0,12],"source":"Task<Stream>"}]},{"pos":[48613,48617],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[48691,48692],"content":"<","needQuote":true,"nodes":[]},{"pos":[48745,48751],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[48896,48900],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"content":"(Of","pos":[48975,48978]},{"pos":[49038,49044],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[49107,49108],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[49315,49328],"content":"Task<TResult>","needQuote":true,"nodes":[{"content":"Task&lt;TResult&gt;","pos":[0,13],"source":"Task<TResult>"}]},{"pos":[49525,49529],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[49582,49583],"content":"<","needQuote":true,"nodes":[]},{"pos":[49610,49617],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[49732,49736],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"content":"(Of","pos":[49790,49793]},{"pos":[49827,49834],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[49867,49868],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[50054,50076],"content":"System.Threading.Tasks","needQuote":true,"nodes":[{"content":"System.Threading.Tasks","pos":[0,22]}]},{"pos":[50333,50350],"content":"Task<WebResponse>","needQuote":true,"nodes":[{"content":"Task&lt;WebResponse&gt;","pos":[0,17],"source":"Task<WebResponse>"}]},{"pos":[50581,50585],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[50659,50660],"content":"<","needQuote":true,"nodes":[]},{"pos":[50719,50730],"content":"WebResponse","needQuote":true,"nodes":[{"content":"WebResponse","pos":[0,11]}]},{"pos":[50860,50864],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"content":"(Of","pos":[50939,50942]},{"pos":[51008,51019],"content":"WebResponse","needQuote":true,"nodes":[{"content":"WebResponse","pos":[0,11]}]},{"pos":[51067,51068],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[51311,51328],"content":"IWebRequestCreate","needQuote":true,"nodes":[{"content":"IWebRequestCreate","pos":[0,17]}]},{"pos":[51514,51537],"content":"NotImplementedException","needQuote":true,"nodes":[{"content":"NotImplementedException","pos":[0,23]}]},{"pos":[51752,51777],"content":"InvalidOperationException","needQuote":true,"nodes":[{"content":"InvalidOperationException","pos":[0,25]}]},{"pos":[51994,52015],"content":"NotSupportedException","needQuote":true,"nodes":[{"content":"NotSupportedException","pos":[0,21]}]},{"pos":[52203,52224],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[52417,52434],"content":"SecurityException","needQuote":true,"nodes":[{"content":"SecurityException","pos":[0,17]}]},{"pos":[52625,52643],"content":"UriFormatException","needQuote":true,"nodes":[{"content":"UriFormatException","pos":[0,18]}]}],"content":"items:\n- uid: System.Net.WebRequest\n  commentId: T:System.Net.WebRequest\n  id: WebRequest\n  parent: System.Net\n  children:\n  - System.Net.WebRequest.#ctor\n  - System.Net.WebRequest.Abort\n  - System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)\n  - System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)\n  - System.Net.WebRequest.ContentType\n  - System.Net.WebRequest.Create(System.String)\n  - System.Net.WebRequest.Create(System.Uri)\n  - System.Net.WebRequest.CreateHttp(System.String)\n  - System.Net.WebRequest.CreateHttp(System.Uri)\n  - System.Net.WebRequest.Credentials\n  - System.Net.WebRequest.DefaultWebProxy\n  - System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)\n  - System.Net.WebRequest.EndGetResponse(System.IAsyncResult)\n  - System.Net.WebRequest.GetRequestStreamAsync\n  - System.Net.WebRequest.GetResponseAsync\n  - System.Net.WebRequest.Headers\n  - System.Net.WebRequest.Method\n  - System.Net.WebRequest.Proxy\n  - System.Net.WebRequest.RegisterPrefix(System.String,System.Net.IWebRequestCreate)\n  - System.Net.WebRequest.RequestUri\n  - System.Net.WebRequest.UseDefaultCredentials\n  langs:\n  - csharp\n  - vb\n  name: WebRequest\n  fullName: System.Net.WebRequest\n  type: Class\n  source:\n    remote:\n      path: src/System.Net.Requests/ref/System.Net.Requests.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WebRequest\n    path: src/System.Net.Requests/ref/System.Net.Requests.cs\n    startLine: 89\n  assemblies:\n  - System.Net.Requests\n  namespace: System.Net\n  summary: \"\\n<p>Makes a request to a Uniform Resource Identifier (URI). This is an <strong>abstract</strong> class.</p>\\n\"\n  syntax:\n    content: public abstract class WebRequest\n    content.vb: Public MustInherit Class WebRequest\n  seealso:\n  - type: System.Net.HttpWebRequest\n    commentId: T:System.Net.HttpWebRequest\n  see:\n  - type: System.Net.WebPermission\n    commentId: T:System.Net.WebPermission\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - abstract\n  - class\n  modifiers.vb:\n  - Public\n  - MustInherit\n  - Class\n  nameWithType: WebRequest\n- uid: System.Net.WebRequest.#ctor\n  commentId: M:System.Net.WebRequest.#ctor\n  id: '#ctor'\n  parent: System.Net.WebRequest\n  langs:\n  - csharp\n  - vb\n  name: WebRequest()\n  fullName: System.Net.WebRequest.WebRequest()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Net.Requests/ref/System.Net.Requests.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Net.Requests/ref/System.Net.Requests.cs\n    startLine: 91\n  assemblies:\n  - System.Net.Requests\n  namespace: System.Net\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Net.WebRequest\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: protected WebRequest()\n    content.vb: Protected Sub New\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: WebRequest.WebRequest()\n- uid: System.Net.WebRequest.ContentType\n  commentId: P:System.Net.WebRequest.ContentType\n  id: ContentType\n  parent: System.Net.WebRequest\n  langs:\n  - csharp\n  - vb\n  name: ContentType\n  fullName: System.Net.WebRequest.ContentType\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Requests/ref/System.Net.Requests.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ContentType\n    path: src/System.Net.Requests/ref/System.Net.Requests.cs\n    startLine: 92\n  assemblies:\n  - System.Net.Requests\n  namespace: System.Net\n  summary: \"\\n<p>When overridden in a descendant class, gets or sets the content type of the request data being sent.</p>\\n\"\n  syntax:\n    content: public abstract string ContentType { get; set; }\n    content.vb: Public MustOverride Property ContentType As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The content type of the request data.</p>\\n\"\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: \"\\n<p>Any attempt is made to get or set the property, when the property is not overridden in a descendant class. </p>\\n\"\n  seealso:\n  - type: System.Net.HttpWebRequest.ContentType\n    commentId: P:System.Net.HttpWebRequest.ContentType\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: WebRequest.ContentType\n- uid: System.Net.WebRequest.Credentials\n  commentId: P:System.Net.WebRequest.Credentials\n  id: Credentials\n  parent: System.Net.WebRequest\n  langs:\n  - csharp\n  - vb\n  name: Credentials\n  fullName: System.Net.WebRequest.Credentials\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Requests/ref/System.Net.Requests.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Credentials\n    path: src/System.Net.Requests/ref/System.Net.Requests.cs\n    startLine: 93\n  assemblies:\n  - System.Net.Requests\n  namespace: System.Net\n  summary: \"\\n<p>When overridden in a descendant class, gets or sets the network credentials used for authenticating the request with the Internet resource.</p>\\n\"\n  syntax:\n    content: public virtual ICredentials Credentials { get; set; }\n    content.vb: Public Overridable Property Credentials As ICredentials\n    parameters: []\n    return:\n      type: System.Net.ICredentials\n      description: \"\\n<p>An <xref href=\\\"System.Net.ICredentials\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> containing the authentication credentials associated with the request. The default is <strong>null</strong>.</p>\\n\"\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: \"\\n<p>Any attempt is made to get or set the property, when the property is not overridden in a descendant class. </p>\\n\"\n  seealso:\n  - type: System.Net.NetworkCredential\n    commentId: T:System.Net.NetworkCredential\n  - type: System.Net.CredentialCache\n    commentId: T:System.Net.CredentialCache\n  - type: System.Net.HttpWebRequest.Credentials\n    commentId: P:System.Net.HttpWebRequest.Credentials\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: WebRequest.Credentials\n- uid: System.Net.WebRequest.DefaultWebProxy\n  commentId: P:System.Net.WebRequest.DefaultWebProxy\n  id: DefaultWebProxy\n  parent: System.Net.WebRequest\n  langs:\n  - csharp\n  - vb\n  name: DefaultWebProxy\n  fullName: System.Net.WebRequest.DefaultWebProxy\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Requests/ref/System.Net.Requests.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: DefaultWebProxy\n    path: src/System.Net.Requests/ref/System.Net.Requests.cs\n    startLine: 94\n  assemblies:\n  - System.Net.Requests\n  namespace: System.Net\n  summary: \"\\n<p>Gets or sets the global HTTP proxy.</p>\\n\"\n  syntax:\n    content: public static IWebProxy DefaultWebProxy { get; set; }\n    content.vb: Public Shared Property DefaultWebProxy As IWebProxy\n    parameters: []\n    return:\n      type: System.Net.IWebProxy\n      description: \"\\n<p>An <xref href=\\\"System.Net.IWebProxy\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> used by every call to instances of <xref href=\\\"System.Net.WebRequest\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  see:\n  - type: System.Net.WebPermission\n    commentId: T:System.Net.WebPermission\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: WebRequest.DefaultWebProxy\n- uid: System.Net.WebRequest.Headers\n  commentId: P:System.Net.WebRequest.Headers\n  id: Headers\n  parent: System.Net.WebRequest\n  langs:\n  - csharp\n  - vb\n  name: Headers\n  fullName: System.Net.WebRequest.Headers\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Requests/ref/System.Net.Requests.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Headers\n    path: src/System.Net.Requests/ref/System.Net.Requests.cs\n    startLine: 95\n  assemblies:\n  - System.Net.Requests\n  namespace: System.Net\n  summary: \"\\n<p>When overridden in a descendant class, gets or sets the collection of header name/value pairs associated with the request.</p>\\n\"\n  syntax:\n    content: public abstract WebHeaderCollection Headers { get; set; }\n    content.vb: Public MustOverride Property Headers As WebHeaderCollection\n    parameters: []\n    return:\n      type: System.Net.WebHeaderCollection\n      description: \"\\n<p>A <xref href=\\\"System.Net.WebHeaderCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> containing the header name/value pairs associated with this request.</p>\\n\"\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: \"\\n<p>Any attempt is made to get or set the property, when the property is not overridden in a descendant class. </p>\\n\"\n  seealso:\n  - type: System.Net.WebHeaderCollection\n    commentId: T:System.Net.WebHeaderCollection\n  - type: System.Net.HttpWebRequest.Headers\n    commentId: P:System.Net.HttpWebRequest.Headers\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: WebRequest.Headers\n- uid: System.Net.WebRequest.Method\n  commentId: P:System.Net.WebRequest.Method\n  id: Method\n  parent: System.Net.WebRequest\n  langs:\n  - csharp\n  - vb\n  name: Method\n  fullName: System.Net.WebRequest.Method\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Requests/ref/System.Net.Requests.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Method\n    path: src/System.Net.Requests/ref/System.Net.Requests.cs\n    startLine: 96\n  assemblies:\n  - System.Net.Requests\n  namespace: System.Net\n  summary: \"\\n<p>When overridden in a descendant class, gets or sets the protocol method to use in this request.</p>\\n\"\n  syntax:\n    content: public abstract string Method { get; set; }\n    content.vb: Public MustOverride Property Method As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The protocol method to use in this request.</p>\\n\"\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: \"\\n<p>If the property is not overridden in a descendant class, any attempt is made to get or set the property. </p>\\n\"\n  seealso:\n  - type: System.Net.HttpWebRequest.Method\n    commentId: P:System.Net.HttpWebRequest.Method\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: WebRequest.Method\n- uid: System.Net.WebRequest.Proxy\n  commentId: P:System.Net.WebRequest.Proxy\n  id: Proxy\n  parent: System.Net.WebRequest\n  langs:\n  - csharp\n  - vb\n  name: Proxy\n  fullName: System.Net.WebRequest.Proxy\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Requests/ref/System.Net.Requests.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Proxy\n    path: src/System.Net.Requests/ref/System.Net.Requests.cs\n    startLine: 97\n  assemblies:\n  - System.Net.Requests\n  namespace: System.Net\n  summary: \"\\n<p>When overridden in a descendant class, gets or sets the network proxy to use to access this Internet resource.</p>\\n\"\n  syntax:\n    content: public virtual IWebProxy Proxy { get; set; }\n    content.vb: Public Overridable Property Proxy As IWebProxy\n    parameters: []\n    return:\n      type: System.Net.IWebProxy\n      description: \"\\n<p>The <xref href=\\\"System.Net.IWebProxy\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to use to access the Internet resource.</p>\\n\"\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: \"\\n<p>Any attempt is made to get or set the property, when the property is not overridden in a descendant class. </p>\\n\"\n  seealso:\n  - type: System.Net.IWebProxy\n    commentId: T:System.Net.IWebProxy\n  - type: System.Net.WebProxy\n    commentId: T:System.Net.WebProxy\n  - type: System.Net.HttpWebRequest.Proxy\n    commentId: P:System.Net.HttpWebRequest.Proxy\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: WebRequest.Proxy\n- uid: System.Net.WebRequest.RequestUri\n  commentId: P:System.Net.WebRequest.RequestUri\n  id: RequestUri\n  parent: System.Net.WebRequest\n  langs:\n  - csharp\n  - vb\n  name: RequestUri\n  fullName: System.Net.WebRequest.RequestUri\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Requests/ref/System.Net.Requests.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RequestUri\n    path: src/System.Net.Requests/ref/System.Net.Requests.cs\n    startLine: 98\n  assemblies:\n  - System.Net.Requests\n  namespace: System.Net\n  summary: \"\\n<p>When overridden in a descendant class, gets the URI of the Internet resource associated with the request.</p>\\n\"\n  syntax:\n    content: public abstract Uri RequestUri { get; }\n    content.vb: Public MustOverride ReadOnly Property RequestUri As Uri\n    parameters: []\n    return:\n      type: System.Uri\n      description: \"\\n<p>A <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> representing the resource associated with the request </p>\\n\"\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: \"\\n<p>Any attempt is made to get or set the property, when the property is not overridden in a descendant class. </p>\\n\"\n  seealso:\n  - type: System.Net.HttpWebRequest.RequestUri\n    commentId: P:System.Net.HttpWebRequest.RequestUri\n  - type: System.Net.HttpWebRequest.Address\n    commentId: P:System.Net.HttpWebRequest.Address\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: WebRequest.RequestUri\n- uid: System.Net.WebRequest.UseDefaultCredentials\n  commentId: P:System.Net.WebRequest.UseDefaultCredentials\n  id: UseDefaultCredentials\n  parent: System.Net.WebRequest\n  langs:\n  - csharp\n  - vb\n  name: UseDefaultCredentials\n  fullName: System.Net.WebRequest.UseDefaultCredentials\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Requests/ref/System.Net.Requests.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: UseDefaultCredentials\n    path: src/System.Net.Requests/ref/System.Net.Requests.cs\n    startLine: 99\n  assemblies:\n  - System.Net.Requests\n  namespace: System.Net\n  summary: \"\\n<p>When overridden in a descendant class, gets or sets a <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that controls whether <xref href=\\\"System.Net.CredentialCache.DefaultCredentials\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> are sent with requests.</p>\\n\"\n  syntax:\n    content: public virtual bool UseDefaultCredentials { get; set; }\n    content.vb: Public Overridable Property UseDefaultCredentials As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the default credentials are used; otherwise <strong>false</strong>. The default value is <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>You attempted to set this property after the request was sent.</p>\\n\"\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: \"\\n<p>Any attempt is made to access the property, when the property is not overridden in a descendant class. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: WebRequest.UseDefaultCredentials\n- uid: System.Net.WebRequest.Abort\n  commentId: M:System.Net.WebRequest.Abort\n  id: Abort\n  parent: System.Net.WebRequest\n  langs:\n  - csharp\n  - vb\n  name: Abort()\n  fullName: System.Net.WebRequest.Abort()\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Requests/ref/System.Net.Requests.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Abort\n    path: src/System.Net.Requests/ref/System.Net.Requests.cs\n    startLine: 100\n  assemblies:\n  - System.Net.Requests\n  namespace: System.Net\n  summary: \"\\n<p>Aborts the Request </p>\\n\"\n  syntax:\n    content: public abstract void Abort()\n    content.vb: Public MustOverride Sub Abort\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: \"\\n<p>Any attempt is made to access the method, when the method is not overridden in a descendant class. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: WebRequest.Abort()\n- uid: System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)\n  commentId: M:System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)\n  id: BeginGetRequestStream(System.AsyncCallback,System.Object)\n  parent: System.Net.WebRequest\n  langs:\n  - csharp\n  - vb\n  name: BeginGetRequestStream(AsyncCallback, Object)\n  fullName: System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback, System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Requests/ref/System.Net.Requests.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: BeginGetRequestStream\n    path: src/System.Net.Requests/ref/System.Net.Requests.cs\n    startLine: 101\n  assemblies:\n  - System.Net.Requests\n  namespace: System.Net\n  summary: \"\\n<p>When overridden in a descendant class, provides an asynchronous version of the <xref href=\\\"System.Net.WebRequest.GetRequestStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method.</p>\\n\"\n  syntax:\n    content: public abstract IAsyncResult BeginGetRequestStream(AsyncCallback callback, object state)\n    content.vb: Public MustOverride Function BeginGetRequestStream(callback As AsyncCallback, state As Object) As IAsyncResult\n    parameters:\n    - id: callback\n      type: System.AsyncCallback\n      description: \"\\n<p>The <xref href=\\\"System.AsyncCallback\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> delegate. </p>\\n\"\n    - id: state\n      type: System.Object\n      description: \"\\n<p>An object containing state information for this asynchronous request. </p>\\n\"\n    return:\n      type: System.IAsyncResult\n      description: \"\\n<p>An <xref href=\\\"System.IAsyncResult\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that references the asynchronous request.</p>\\n\"\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: \"\\n<p>Any attempt is made to access the method, when the method is not overridden in a descendant class. </p>\\n\"\n  seealso:\n  - type: System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)\n    commentId: M:System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)\n  modifiers.csharp:\n  - public\n  - abstract\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: WebRequest.BeginGetRequestStream(AsyncCallback, Object)\n- uid: System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)\n  commentId: M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)\n  id: BeginGetResponse(System.AsyncCallback,System.Object)\n  parent: System.Net.WebRequest\n  langs:\n  - csharp\n  - vb\n  name: BeginGetResponse(AsyncCallback, Object)\n  fullName: System.Net.WebRequest.BeginGetResponse(System.AsyncCallback, System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Requests/ref/System.Net.Requests.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: BeginGetResponse\n    path: src/System.Net.Requests/ref/System.Net.Requests.cs\n    startLine: 102\n  assemblies:\n  - System.Net.Requests\n  namespace: System.Net\n  summary: \"\\n<p>When overridden in a descendant class, begins an asynchronous request for an Internet resource.</p>\\n\"\n  syntax:\n    content: public abstract IAsyncResult BeginGetResponse(AsyncCallback callback, object state)\n    content.vb: Public MustOverride Function BeginGetResponse(callback As AsyncCallback, state As Object) As IAsyncResult\n    parameters:\n    - id: callback\n      type: System.AsyncCallback\n      description: \"\\n<p>The <xref href=\\\"System.AsyncCallback\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> delegate. </p>\\n\"\n    - id: state\n      type: System.Object\n      description: \"\\n<p>An object containing state information for this asynchronous request. </p>\\n\"\n    return:\n      type: System.IAsyncResult\n      description: \"\\n<p>An <xref href=\\\"System.IAsyncResult\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that references the asynchronous request.</p>\\n\"\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: \"\\n<p>Any attempt is made to access the method, when the method is not overridden in a descendant class. </p>\\n\"\n  seealso:\n  - type: System.Net.WebRequest.EndGetResponse(System.IAsyncResult)\n    commentId: M:System.Net.WebRequest.EndGetResponse(System.IAsyncResult)\n  - type: System.Net.WebRequest.GetResponse\n    commentId: M:System.Net.WebRequest.GetResponse\n  modifiers.csharp:\n  - public\n  - abstract\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: WebRequest.BeginGetResponse(AsyncCallback, Object)\n- uid: System.Net.WebRequest.Create(System.String)\n  commentId: M:System.Net.WebRequest.Create(System.String)\n  id: Create(System.String)\n  parent: System.Net.WebRequest\n  langs:\n  - csharp\n  - vb\n  name: Create(String)\n  fullName: System.Net.WebRequest.Create(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Requests/ref/System.Net.Requests.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Create\n    path: src/System.Net.Requests/ref/System.Net.Requests.cs\n    startLine: 103\n  assemblies:\n  - System.Net.Requests\n  namespace: System.Net\n  summary: \"\\n<p>Initializes a new <xref href=\\\"System.Net.WebRequest\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance for the specified URI scheme.</p>\\n\"\n  syntax:\n    content: public static WebRequest Create(string requestUriString)\n    content.vb: Public Shared Function Create(requestUriString As String) As WebRequest\n    parameters:\n    - id: requestUriString\n      type: System.String\n      description: \"\\n<p>The URI that identifies the Internet resource. </p>\\n\"\n    return:\n      type: System.Net.WebRequest\n      description: \"\\n<p>A <xref href=\\\"System.Net.WebRequest\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> descendant for the specific URI scheme.</p>\\n\"\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The request scheme specified in <em>requestUriString</em> has not been registered. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>requestUriString</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The caller does not have permission to connect to the requested URI or a URI that the request is redirected to. </p>\\n\"\n  - type: System.UriFormatException\n    commentId: T:System.UriFormatException\n    description: \"\\n<p>In the <see href=\\\"http://go.microsoft.com/fwlink/?LinkID=247912\\\">.NET for Windows Store apps</see> or the Portable Class Library, catch the base class exception, <xref href=\\\"System.FormatException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, instead.</p>\\n<p>The URI specified in <em>requestUriString</em> is not a valid URI. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: WebRequest.Create(String)\n- uid: System.Net.WebRequest.Create(System.Uri)\n  commentId: M:System.Net.WebRequest.Create(System.Uri)\n  id: Create(System.Uri)\n  parent: System.Net.WebRequest\n  langs:\n  - csharp\n  - vb\n  name: Create(Uri)\n  fullName: System.Net.WebRequest.Create(System.Uri)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Requests/ref/System.Net.Requests.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Create\n    path: src/System.Net.Requests/ref/System.Net.Requests.cs\n    startLine: 104\n  assemblies:\n  - System.Net.Requests\n  namespace: System.Net\n  summary: \"\\n<p>Initializes a new <xref href=\\\"System.Net.WebRequest\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance for the specified URI scheme.</p>\\n\"\n  syntax:\n    content: public static WebRequest Create(Uri requestUri)\n    content.vb: Public Shared Function Create(requestUri As Uri) As WebRequest\n    parameters:\n    - id: requestUri\n      type: System.Uri\n      description: \"\\n<p>A <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> containing the URI of the requested resource. </p>\\n\"\n    return:\n      type: System.Net.WebRequest\n      description: \"\\n<p>A <xref href=\\\"System.Net.WebRequest\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> descendant for the specified URI scheme.</p>\\n\"\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The request scheme specified in <em>requestUri</em> is not registered. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>requestUri</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The caller does not have permission to connect to the requested URI or a URI that the request is redirected to. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: WebRequest.Create(Uri)\n- uid: System.Net.WebRequest.CreateHttp(System.String)\n  commentId: M:System.Net.WebRequest.CreateHttp(System.String)\n  id: CreateHttp(System.String)\n  parent: System.Net.WebRequest\n  langs:\n  - csharp\n  - vb\n  name: CreateHttp(String)\n  fullName: System.Net.WebRequest.CreateHttp(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Requests/ref/System.Net.Requests.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CreateHttp\n    path: src/System.Net.Requests/ref/System.Net.Requests.cs\n    startLine: 105\n  assemblies:\n  - System.Net.Requests\n  namespace: System.Net\n  summary: \"\\n<p>Initializes a new <xref href=\\\"System.Net.HttpWebRequest\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance for the specified URI string.</p>\\n\"\n  syntax:\n    content: public static HttpWebRequest CreateHttp(string requestUriString)\n    content.vb: Public Shared Function CreateHttp(requestUriString As String) As HttpWebRequest\n    parameters:\n    - id: requestUriString\n      type: System.String\n      description: \"\\n<p>A URI string that identifies the Internet resource. </p>\\n\"\n    return:\n      type: System.Net.HttpWebRequest\n      description: \"\\n<p>Returns <xref href=\\\"System.Net.HttpWebRequest\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>An <xref href=\\\"System.Net.HttpWebRequest\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>  instance for the specific URI string.</p>\\n\"\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The request scheme specified in <em>requestUriString</em> is the http or https scheme. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>requestUriString</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The caller does not have permission to connect to the requested URI or a URI that the request is redirected to. </p>\\n\"\n  - type: System.UriFormatException\n    commentId: T:System.UriFormatException\n    description: \"\\n<p>The URI specified in <em>requestUriString</em> is not a valid URI. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: WebRequest.CreateHttp(String)\n- uid: System.Net.WebRequest.CreateHttp(System.Uri)\n  commentId: M:System.Net.WebRequest.CreateHttp(System.Uri)\n  id: CreateHttp(System.Uri)\n  parent: System.Net.WebRequest\n  langs:\n  - csharp\n  - vb\n  name: CreateHttp(Uri)\n  fullName: System.Net.WebRequest.CreateHttp(System.Uri)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Requests/ref/System.Net.Requests.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CreateHttp\n    path: src/System.Net.Requests/ref/System.Net.Requests.cs\n    startLine: 106\n  assemblies:\n  - System.Net.Requests\n  namespace: System.Net\n  summary: \"\\n<p>Initializes a new <xref href=\\\"System.Net.HttpWebRequest\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance for the specified URI.</p>\\n\"\n  syntax:\n    content: public static HttpWebRequest CreateHttp(Uri requestUri)\n    content.vb: Public Shared Function CreateHttp(requestUri As Uri) As HttpWebRequest\n    parameters:\n    - id: requestUri\n      type: System.Uri\n      description: \"\\n<p>A URI that identifies the Internet resource.</p>\\n\"\n    return:\n      type: System.Net.HttpWebRequest\n      description: \"\\n<p>Returns <xref href=\\\"System.Net.HttpWebRequest\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>An <xref href=\\\"System.Net.HttpWebRequest\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance for the specific URI string.</p>\\n\"\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The request scheme specified in <em>requestUri</em> is the http or https scheme. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>requestUri</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The caller does not have permission to connect to the requested URI or a URI that the request is redirected to. </p>\\n\"\n  - type: System.UriFormatException\n    commentId: T:System.UriFormatException\n    description: \"\\n<p>The URI specified in <em>requestUri</em> is not a valid URI. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: WebRequest.CreateHttp(Uri)\n- uid: System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)\n  commentId: M:System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)\n  id: EndGetRequestStream(System.IAsyncResult)\n  parent: System.Net.WebRequest\n  langs:\n  - csharp\n  - vb\n  name: EndGetRequestStream(IAsyncResult)\n  fullName: System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Requests/ref/System.Net.Requests.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: EndGetRequestStream\n    path: src/System.Net.Requests/ref/System.Net.Requests.cs\n    startLine: 107\n  assemblies:\n  - System.Net.Requests\n  namespace: System.Net\n  summary: \"\\n<p>When overridden in a descendant class, returns a <xref href=\\\"System.IO.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for writing data to the Internet resource.</p>\\n\"\n  syntax:\n    content: public abstract Stream EndGetRequestStream(IAsyncResult asyncResult)\n    content.vb: Public MustOverride Function EndGetRequestStream(asyncResult As IAsyncResult) As Stream\n    parameters:\n    - id: asyncResult\n      type: System.IAsyncResult\n      description: \"\\n<p>An <xref href=\\\"System.IAsyncResult\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that references a pending request for a stream. </p>\\n\"\n    return:\n      type: System.IO.Stream\n      description: \"\\n<p>A <xref href=\\\"System.IO.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to write data to.</p>\\n\"\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: \"\\n<p>Any attempt is made to access the method, when the method is not overridden in a descendant class. </p>\\n\"\n  seealso:\n  - type: System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)\n    commentId: M:System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)\n  modifiers.csharp:\n  - public\n  - abstract\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: WebRequest.EndGetRequestStream(IAsyncResult)\n- uid: System.Net.WebRequest.EndGetResponse(System.IAsyncResult)\n  commentId: M:System.Net.WebRequest.EndGetResponse(System.IAsyncResult)\n  id: EndGetResponse(System.IAsyncResult)\n  parent: System.Net.WebRequest\n  langs:\n  - csharp\n  - vb\n  name: EndGetResponse(IAsyncResult)\n  fullName: System.Net.WebRequest.EndGetResponse(System.IAsyncResult)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Requests/ref/System.Net.Requests.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: EndGetResponse\n    path: src/System.Net.Requests/ref/System.Net.Requests.cs\n    startLine: 108\n  assemblies:\n  - System.Net.Requests\n  namespace: System.Net\n  summary: \"\\n<p>When overridden in a descendant class, returns a <xref href=\\\"System.Net.WebResponse\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public abstract WebResponse EndGetResponse(IAsyncResult asyncResult)\n    content.vb: Public MustOverride Function EndGetResponse(asyncResult As IAsyncResult) As WebResponse\n    parameters:\n    - id: asyncResult\n      type: System.IAsyncResult\n      description: \"\\n<p>An <xref href=\\\"System.IAsyncResult\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that references a pending request for a response. </p>\\n\"\n    return:\n      type: System.Net.WebResponse\n      description: \"\\n<p>A <xref href=\\\"System.Net.WebResponse\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains a response to the Internet request.</p>\\n\"\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: \"\\n<p>Any attempt is made to access the method, when the method is not overridden in a descendant class. </p>\\n\"\n  seealso:\n  - type: System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)\n    commentId: M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)\n  modifiers.csharp:\n  - public\n  - abstract\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: WebRequest.EndGetResponse(IAsyncResult)\n- uid: System.Net.WebRequest.GetRequestStreamAsync\n  commentId: M:System.Net.WebRequest.GetRequestStreamAsync\n  id: GetRequestStreamAsync\n  parent: System.Net.WebRequest\n  langs:\n  - csharp\n  - vb\n  name: GetRequestStreamAsync()\n  fullName: System.Net.WebRequest.GetRequestStreamAsync()\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Requests/ref/System.Net.Requests.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetRequestStreamAsync\n    path: src/System.Net.Requests/ref/System.Net.Requests.cs\n    startLine: 109\n  assemblies:\n  - System.Net.Requests\n  namespace: System.Net\n  summary: \"\\n<p>When overridden in a descendant class, returns a <xref href=\\\"System.IO.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for writing data to the Internet resource as an asynchronous operation.</p>\\n\"\n  syntax:\n    content: public virtual Task<Stream> GetRequestStreamAsync()\n    content.vb: Public Overridable Function GetRequestStreamAsync As Task(Of Stream)\n    return:\n      type: System.Threading.Tasks.Task{System.IO.Stream}\n      description: \"\\n<p>Returns <xref href=\\\"System.Threading.Tasks.Task`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>The task object representing the asynchronous operation.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: WebRequest.GetRequestStreamAsync()\n- uid: System.Net.WebRequest.GetResponseAsync\n  commentId: M:System.Net.WebRequest.GetResponseAsync\n  id: GetResponseAsync\n  parent: System.Net.WebRequest\n  langs:\n  - csharp\n  - vb\n  name: GetResponseAsync()\n  fullName: System.Net.WebRequest.GetResponseAsync()\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Requests/ref/System.Net.Requests.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetResponseAsync\n    path: src/System.Net.Requests/ref/System.Net.Requests.cs\n    startLine: 110\n  assemblies:\n  - System.Net.Requests\n  namespace: System.Net\n  summary: \"\\n<p>When overridden in a descendant class, returns a response to an Internet request as an asynchronous operation.</p>\\n\"\n  syntax:\n    content: public virtual Task<WebResponse> GetResponseAsync()\n    content.vb: Public Overridable Function GetResponseAsync As Task(Of WebResponse)\n    return:\n      type: System.Threading.Tasks.Task{System.Net.WebResponse}\n      description: \"\\n<p>Returns <xref href=\\\"System.Threading.Tasks.Task`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>The task object representing the asynchronous operation.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: WebRequest.GetResponseAsync()\n- uid: System.Net.WebRequest.RegisterPrefix(System.String,System.Net.IWebRequestCreate)\n  commentId: M:System.Net.WebRequest.RegisterPrefix(System.String,System.Net.IWebRequestCreate)\n  id: RegisterPrefix(System.String,System.Net.IWebRequestCreate)\n  parent: System.Net.WebRequest\n  langs:\n  - csharp\n  - vb\n  name: RegisterPrefix(String, IWebRequestCreate)\n  fullName: System.Net.WebRequest.RegisterPrefix(System.String, System.Net.IWebRequestCreate)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Requests/ref/System.Net.Requests.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RegisterPrefix\n    path: src/System.Net.Requests/ref/System.Net.Requests.cs\n    startLine: 111\n  assemblies:\n  - System.Net.Requests\n  namespace: System.Net\n  summary: \"\\n<p>Registers a <xref href=\\\"System.Net.WebRequest\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> descendant for the specified URI.</p>\\n\"\n  syntax:\n    content: public static bool RegisterPrefix(string prefix, IWebRequestCreate creator)\n    content.vb: Public Shared Function RegisterPrefix(prefix As String, creator As IWebRequestCreate) As Boolean\n    parameters:\n    - id: prefix\n      type: System.String\n      description: \"\\n<p>The complete URI or URI prefix that the <xref href=\\\"System.Net.WebRequest\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> descendant services. </p>\\n\"\n    - id: creator\n      type: System.Net.IWebRequestCreate\n      description: \"\\n<p>The create method that the <xref href=\\\"System.Net.WebRequest\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> calls to create the <xref href=\\\"System.Net.WebRequest\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> descendant. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if registration is successful; otherwise, <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>prefix</em> is <strong>null</strong></p>\\n<p>-or- </p>\\n<p>\\n<em>creator</em> is <strong>null</strong>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: WebRequest.RegisterPrefix(String, IWebRequestCreate)\nreferences:\n- uid: System.Net\n  isExternal: false\n  name: System.Net\n  fullName: System.Net\n  commentId: N:System.Net\n  nameWithType: System.Net\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.Net.ICredentials\n  parent: System.Net\n  isExternal: false\n  name: ICredentials\n  fullName: System.Net.ICredentials\n  commentId: T:System.Net.ICredentials\n  nameWithType: ICredentials\n- uid: System.Net.IWebProxy\n  isExternal: false\n  name: IWebProxy\n  fullName: System.Net.IWebProxy\n  commentId: T:System.Net.IWebProxy\n  nameWithType: IWebProxy\n- uid: System.Net.WebHeaderCollection\n  isExternal: false\n  name: WebHeaderCollection\n  fullName: System.Net.WebHeaderCollection\n  commentId: T:System.Net.WebHeaderCollection\n  nameWithType: WebHeaderCollection\n- uid: System.Uri\n  parent: System\n  isExternal: false\n  name: Uri\n  fullName: System.Uri\n  commentId: T:System.Uri\n  nameWithType: Uri\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.AsyncCallback\n  parent: System\n  isExternal: false\n  name: AsyncCallback\n  fullName: System.AsyncCallback\n  commentId: T:System.AsyncCallback\n  nameWithType: AsyncCallback\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: false\n  name: IAsyncResult\n  fullName: System.IAsyncResult\n  commentId: T:System.IAsyncResult\n  nameWithType: IAsyncResult\n- uid: System.Net.WebRequest\n  parent: System.Net\n  isExternal: false\n  name: WebRequest\n  fullName: System.Net.WebRequest\n  commentId: T:System.Net.WebRequest\n  nameWithType: WebRequest\n- uid: System.Net.HttpWebRequest\n  parent: System.Net\n  isExternal: false\n  name: HttpWebRequest\n  fullName: System.Net.HttpWebRequest\n  commentId: T:System.Net.HttpWebRequest\n  nameWithType: HttpWebRequest\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  fullName: System.IO.Stream\n  commentId: T:System.IO.Stream\n  nameWithType: Stream\n- uid: System.IO\n  isExternal: false\n  name: System.IO\n  fullName: System.IO\n  commentId: N:System.IO\n  nameWithType: System.IO\n- uid: System.Net.WebResponse\n  parent: System.Net\n  isExternal: false\n  name: WebResponse\n  fullName: System.Net.WebResponse\n  commentId: T:System.Net.WebResponse\n  nameWithType: WebResponse\n- uid: System.Threading.Tasks.Task{System.IO.Stream}\n  parent: System.Threading.Tasks\n  definition: System.Threading.Tasks.Task`1\n  name: Task<Stream>\n  fullName: System.Threading.Tasks.Task<System.IO.Stream>\n  fullname.vb: System.Threading.Tasks.Task(Of System.IO.Stream)\n  name.vb: Task(Of Stream)\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: T:System.Threading.Tasks.Task{System.IO.Stream}\n  nameWithType: Task<Stream>\n  nameWithType.vb: Task(Of Stream)\n- uid: System.Threading.Tasks.Task`1\n  isExternal: false\n  name: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n  fullname.vb: System.Threading.Tasks.Task(Of TResult)\n  name.vb: Task(Of TResult)\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n  - name: <\n    fullName: <\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  commentId: T:System.Threading.Tasks.Task`1\n  nameWithType: Task<TResult>\n  nameWithType.vb: Task(Of TResult)\n- uid: System.Threading.Tasks\n  isExternal: false\n  name: System.Threading.Tasks\n  fullName: System.Threading.Tasks\n  commentId: N:System.Threading.Tasks\n  nameWithType: System.Threading.Tasks\n- uid: System.Threading.Tasks.Task{System.Net.WebResponse}\n  parent: System.Threading.Tasks\n  definition: System.Threading.Tasks.Task`1\n  name: Task<WebResponse>\n  fullName: System.Threading.Tasks.Task<System.Net.WebResponse>\n  fullname.vb: System.Threading.Tasks.Task(Of System.Net.WebResponse)\n  name.vb: Task(Of WebResponse)\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.WebResponse\n    name: WebResponse\n    fullName: System.Net.WebResponse\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.WebResponse\n    name: WebResponse\n    fullName: System.Net.WebResponse\n  - name: )\n    fullName: )\n  commentId: T:System.Threading.Tasks.Task{System.Net.WebResponse}\n  nameWithType: Task<WebResponse>\n  nameWithType.vb: Task(Of WebResponse)\n- uid: System.Net.IWebRequestCreate\n  parent: System.Net\n  isExternal: false\n  name: IWebRequestCreate\n  fullName: System.Net.IWebRequestCreate\n  commentId: T:System.Net.IWebRequestCreate\n  nameWithType: IWebRequestCreate\n- uid: System.NotImplementedException\n  isExternal: false\n  name: NotImplementedException\n  fullName: System.NotImplementedException\n  nameWithType: NotImplementedException\n  commentId: T:System.NotImplementedException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  fullName: System.InvalidOperationException\n  nameWithType: InvalidOperationException\n  commentId: T:System.InvalidOperationException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  fullName: System.NotSupportedException\n  nameWithType: NotSupportedException\n  commentId: T:System.NotSupportedException\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.Security.SecurityException\n  isExternal: false\n  name: SecurityException\n  fullName: System.Security.SecurityException\n  nameWithType: SecurityException\n  commentId: T:System.Security.SecurityException\n- uid: System.UriFormatException\n  isExternal: false\n  name: UriFormatException\n  fullName: System.UriFormatException\n  nameWithType: UriFormatException\n  commentId: T:System.UriFormatException\n"}