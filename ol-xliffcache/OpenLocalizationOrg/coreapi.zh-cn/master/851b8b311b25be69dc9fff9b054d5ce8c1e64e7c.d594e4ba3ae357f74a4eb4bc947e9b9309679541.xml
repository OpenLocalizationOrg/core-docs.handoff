{"nodes":[{"pos":[342,356],"content":"ResourceReader","needQuote":true,"nodes":[{"content":"ResourceReader","pos":[0,14]}]},{"pos":[2272,2294],"content":"ResourceReader(Stream)","needQuote":true,"nodes":[{"content":"ResourceReader(Stream)","pos":[0,22]}]},{"content":"\\n&lt;p&gt;The input stream for reading resources.","pos":[3159,3203],"source":"\\n<p>The input stream for reading resources."},{"content":"&lt;/p&gt;\\n","pos":[3204,3210],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;stream&lt;/em&gt; parameter is not readable.","pos":[3321,3372],"source":"\\n<p>The <em>stream</em> parameter is not readable."},{"content":"&lt;/p&gt;\\n","pos":[3373,3379],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;stream&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.","pos":[3484,3544],"source":"\\n<p>The <em>stream</em> parameter is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[3545,3551],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error has occurred while accessing &lt;em&gt;stream&lt;/em&gt;.","pos":[3642,3705],"source":"\\n<p>An I/O error has occurred while accessing <em>stream</em>."},{"content":"&lt;/p&gt;\\n","pos":[3706,3712],"source":" </p>\\n"},{"pos":[4574,4583],"content":"Dispose()","needQuote":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[5596,5611],"content":"GetEnumerator()","needQuote":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"content":"\\n&lt;p&gt;The reader has been closed or disposed, and cannot be accessed.","pos":[6658,6726],"source":"\\n<p>The reader has been closed or disposed, and cannot be accessed."},{"content":"&lt;/p&gt;\\n","pos":[6727,6733],"source":" </p>\\n"},{"pos":[7113,7129],"content":"System.Resources","needQuote":true,"nodes":[{"content":"System.Resources","pos":[0,16]}]},{"pos":[7290,7296],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7446,7457],"content":"IDisposable","needQuote":true,"nodes":[{"content":"IDisposable","pos":[0,11]}]},{"pos":[7632,7642],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[7737,7745],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[7814,7815],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7842,7843],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7913,7921],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[7990,7991],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8018,8019],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8202,8216],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[8335,8341],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[8408,8409],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8459,8465],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8525,8526],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8609,8615],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[8682,8683],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8733,8739],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8799,8800],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9014,9036],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[9184,9190],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[9257,9258],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9308,9314],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[9375,9376]},{"pos":[9431,9437],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9497,9498],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9595,9601],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[9668,9669],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9719,9725],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[9786,9787]},{"pos":[9842,9848],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9908,9909],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10154,10185],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[10351,10366],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[10442,10443],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10493,10499],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[10560,10561]},{"pos":[10616,10622],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10682,10683],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10789,10804],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[10880,10881],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10931,10937],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[10998,10999]},{"pos":[11054,11060],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11120,11121],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11351,11364],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[11465,11476],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[11548,11549],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11576,11577],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11650,11661],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[11733,11734],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11761,11762],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11937,11946],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[12039,12046],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[12114,12115],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12142,12143],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12212,12219],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[12287,12288],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12315,12316],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12491,12508],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[12617,12632],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[12708,12709],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12736,12737],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12814,12829],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[12905,12906],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12933,12934],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13079,13085],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[13222,13228],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[13358,13367],"content":"System.IO","needQuote":true,"nodes":[{"content":"System.IO","pos":[0,9]}]},{"pos":[13532,13541],"content":"Dispose()","needQuote":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[13644,13651],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[13703,13704],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13731,13732],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13806,13813],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[13865,13866],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13893,13894],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14096,14117],"content":"IDictionaryEnumerator","needQuote":true,"nodes":[{"content":"IDictionaryEnumerator","pos":[0,21]}]},{"pos":[14319,14337],"content":"System.Collections","needQuote":true,"nodes":[{"content":"System.Collections","pos":[0,18]}]},{"pos":[14515,14532],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]},{"pos":[14708,14729],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[14930,14941],"content":"IOException","needQuote":true,"nodes":[{"content":"IOException","pos":[0,11]}]},{"pos":[15126,15151],"content":"InvalidOperationException","needQuote":true,"nodes":[{"content":"InvalidOperationException","pos":[0,25]}]}],"content":"items:\n- uid: System.Resources.ResourceReader\n  commentId: T:System.Resources.ResourceReader\n  id: ResourceReader\n  parent: System.Resources\n  children:\n  - System.Resources.ResourceReader.#ctor(System.IO.Stream)\n  - System.Resources.ResourceReader.Dispose\n  - System.Resources.ResourceReader.GetEnumerator\n  langs:\n  - csharp\n  - vb\n  name: ResourceReader\n  fullName: System.Resources.ResourceReader\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/Resources/ResourceReader.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ResourceReader\n    path: src/mscorlib/src/System/Resources/ResourceReader.cs\n    startLine: 74\n  assemblies:\n  - System.Resources.Reader\n  namespace: System.Resources\n  summary: \"\\n<p>Enumerates the resources in a binary resources (.resources) file by reading sequential resource name/value pairs.</p>\\n<p>\\n<strong>Security Note</strong>: Calling methods in this class with untrusted data is a security risk. Call the methods in the class only with trusted data. For more information, see <see href=\\\"http://curah.microsoft.com/57301/security-some-apis-are-not-necessarily-appropriate-for-untrusted-input\\\">Untrusted Data Security Risks</see>.</p>\\n\"\n  syntax:\n    content: >-\n      [ComVisible(true)]\n\n      public sealed class ResourceReader : IResourceReader, IEnumerable, IDisposable\n    content.vb: >-\n      <ComVisible(True)>\n\n      Public NotInheritable Class ResourceReader\n          Implements IResourceReader, IEnumerable, IDisposable\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: ResourceReader\n- uid: System.Resources.ResourceReader.#ctor(System.IO.Stream)\n  commentId: M:System.Resources.ResourceReader.#ctor(System.IO.Stream)\n  id: '#ctor(System.IO.Stream)'\n  parent: System.Resources.ResourceReader\n  langs:\n  - csharp\n  - vb\n  name: ResourceReader(Stream)\n  fullName: System.Resources.ResourceReader.ResourceReader(System.IO.Stream)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Resources/ResourceReader.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Resources/ResourceReader.cs\n    startLine: 174\n  assemblies:\n  - System.Resources.Reader\n  namespace: System.Resources\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Resources.ResourceReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class for the specified stream.</p>\\n\"\n  syntax:\n    content: >-\n      [SecurityCritical]\n\n      public ResourceReader(Stream stream)\n    content.vb: >-\n      <SecurityCritical>\n\n      Public Sub New(stream As Stream)\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: \"\\n<p>The input stream for reading resources. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The <em>stream</em> parameter is not readable. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>stream</em> parameter is <strong>null</strong>. </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error has occurred while accessing <em>stream</em>. </p>\\n\"\n  seealso:\n  - type: System.Reflection.Assembly.GetManifestResourceStream(System.String)\n    commentId: M:System.Reflection.Assembly.GetManifestResourceStream(System.String)\n  see:\n  - type: System.Security.Permissions.SecurityPermission\n    commentId: T:System.Security.Permissions.SecurityPermission\n  - type: System.Security.SecurityCriticalAttribute\n    commentId: T:System.Security.SecurityCriticalAttribute\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n    ctor: System.Security.SecurityCriticalAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: ResourceReader.ResourceReader(Stream)\n- uid: System.Resources.ResourceReader.Dispose\n  commentId: M:System.Resources.ResourceReader.Dispose\n  id: Dispose\n  parent: System.Resources.ResourceReader\n  langs:\n  - csharp\n  - vb\n  name: Dispose()\n  fullName: System.Resources.ResourceReader.Dispose()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Resources/ResourceReader.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Dispose\n    path: src/mscorlib/src/System/Resources/ResourceReader.cs\n    startLine: 218\n  assemblies:\n  - System.Resources.Reader\n  namespace: System.Resources\n  summary: \"\\n<p>Releases all resources used by the current instance of the <xref href=\\\"System.Resources.ResourceReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public void Dispose()\n    content.vb: Public Sub Dispose\n  implements:\n  - System.IDisposable.Dispose\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: ResourceReader.Dispose()\n- uid: System.Resources.ResourceReader.GetEnumerator\n  commentId: M:System.Resources.ResourceReader.GetEnumerator\n  id: GetEnumerator\n  parent: System.Resources.ResourceReader\n  langs:\n  - csharp\n  - vb\n  name: GetEnumerator()\n  fullName: System.Resources.ResourceReader.GetEnumerator()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Resources/ResourceReader.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetEnumerator\n    path: src/mscorlib/src/System/Resources/ResourceReader.cs\n    startLine: 300\n  assemblies:\n  - System.Resources.Reader\n  namespace: System.Resources\n  summary: \"\\n<p>Returns an enumerator for this <xref href=\\\"System.Resources.ResourceReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public IDictionaryEnumerator GetEnumerator()\n    content.vb: Public Function GetEnumerator As IDictionaryEnumerator\n    return:\n      type: System.Collections.IDictionaryEnumerator\n      description: \"\\n<p>An enumerator for this <xref href=\\\"System.Resources.ResourceReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The reader has been closed or disposed, and cannot be accessed. </p>\\n\"\n  seealso:\n  - type: System.Collections.IDictionary\n    commentId: T:System.Collections.IDictionary\n  - type: System.Collections.IDictionaryEnumerator\n    commentId: T:System.Collections.IDictionaryEnumerator\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: ResourceReader.GetEnumerator()\nreferences:\n- uid: System.Resources\n  isExternal: false\n  name: System.Resources\n  fullName: System.Resources\n  nameWithType: System.Resources\n  commentId: N:System.Resources\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  fullName: System.IDisposable\n  nameWithType: IDisposable\n  commentId: T:System.IDisposable\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  fullName: System.IO.Stream\n  nameWithType: Stream\n  commentId: T:System.IO.Stream\n- uid: System.IO\n  isExternal: false\n  name: System.IO\n  fullName: System.IO\n  nameWithType: System.IO\n  commentId: N:System.IO\n- uid: System.IDisposable.Dispose\n  parent: System.IDisposable\n  isExternal: false\n  name: Dispose()\n  fullName: System.IDisposable.Dispose()\n  spec.csharp:\n  - uid: System.IDisposable.Dispose\n    name: Dispose\n    fullName: System.IDisposable.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IDisposable.Dispose\n    name: Dispose\n    fullName: System.IDisposable.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: IDisposable.Dispose()\n  commentId: M:System.IDisposable.Dispose\n- uid: System.Collections.IDictionaryEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IDictionaryEnumerator\n  fullName: System.Collections.IDictionaryEnumerator\n  nameWithType: IDictionaryEnumerator\n  commentId: T:System.Collections.IDictionaryEnumerator\n- uid: System.Collections\n  isExternal: false\n  name: System.Collections\n  fullName: System.Collections\n  nameWithType: System.Collections\n  commentId: N:System.Collections\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.IO.IOException\n  parent: System.IO\n  isExternal: false\n  name: IOException\n  fullName: System.IO.IOException\n  nameWithType: IOException\n  commentId: T:System.IO.IOException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  fullName: System.InvalidOperationException\n  nameWithType: InvalidOperationException\n  commentId: T:System.InvalidOperationException\n"}