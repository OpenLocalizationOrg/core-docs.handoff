{"nodes":[{"pos":[407,426],"content":"StaticLocalInitFlag","needQuote":true,"nodes":[{"content":"StaticLocalInitFlag","pos":[0,19]}]},{"pos":[1912,1917],"content":"State","needQuote":true,"nodes":[{"content":"State","pos":[0,5]}]},{"pos":[2958,2979],"content":"StaticLocalInitFlag()","needQuote":true,"nodes":[{"content":"StaticLocalInitFlag()","pos":[0,21]}]},{"pos":[3911,3949],"content":"Microsoft.VisualBasic.CompilerServices","needQuote":true,"nodes":[{"content":"Microsoft.VisualBasic.CompilerServices","pos":[0,38]}]},{"pos":[4176,4182],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[4342,4352],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[4447,4455],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[4524,4525],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[4552,4553],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[4623,4631],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[4700,4701],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[4728,4729],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[4912,4926],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[5045,5051],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[5118,5119],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[5169,5175],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[5235,5236],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[5319,5325],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[5392,5393],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[5443,5449],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[5509,5510],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[5724,5746],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[5894,5900],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[5967,5968],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6018,6024],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[6085,6086]},{"pos":[6141,6147],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6207,6208],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6305,6311],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[6378,6379],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6429,6435],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[6496,6497]},{"pos":[6552,6558],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6618,6619],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6864,6895],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[7061,7076],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[7152,7153],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7203,7209],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[7270,7271]},{"pos":[7326,7332],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7392,7393],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7499,7514],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[7590,7591],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7641,7647],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[7708,7709]},{"pos":[7764,7770],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7830,7831],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8061,8074],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[8175,8186],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[8258,8259],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8286,8287],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8360,8371],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[8443,8444],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8471,8472],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8647,8656],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[8749,8756],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[8824,8825],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8852,8853],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8922,8929],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[8997,8998],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9025,9026],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9201,9218],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[9327,9342],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[9418,9419],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9446,9447],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9524,9539],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[9615,9616],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9643,9644],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9789,9795],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[9925,9930],"content":"Int16","needQuote":true,"nodes":[{"content":"Int16","pos":[0,5]}]}],"content":"items:\n- uid: Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag\n  commentId: T:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag\n  id: StaticLocalInitFlag\n  parent: Microsoft.VisualBasic.CompilerServices\n  children:\n  - Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag.#ctor\n  - Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag.State\n  langs:\n  - csharp\n  - vb\n  name: StaticLocalInitFlag\n  fullName: Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag\n  type: Class\n  source:\n    remote:\n      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: StaticLocalInitFlag\n    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs\n    startLine: 213\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: \"\\n<p>The Visual Basic compiler uses this class internally when initializing static local members; it is not meant to be called directly from your code.</p>\\n\"\n  syntax:\n    content: public sealed class StaticLocalInitFlag\n    content.vb: Public NotInheritable Class StaticLocalInitFlag\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: StaticLocalInitFlag\n- uid: Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag.State\n  commentId: F:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag.State\n  id: State\n  parent: Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag\n  langs:\n  - csharp\n  - vb\n  name: State\n  fullName: Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag.State\n  type: Field\n  source:\n    remote:\n      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: State\n    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs\n    startLine: 216\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: \"\\n<p>Returns the state of the static local member's initialization flag (initialized or not).</p>\\n\"\n  syntax:\n    content: public short State\n    content.vb: Public State As Short\n    return:\n      type: System.Int16\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: StaticLocalInitFlag.State\n- uid: Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag.#ctor\n  commentId: M:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag.#ctor\n  id: '#ctor'\n  parent: Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag\n  langs:\n  - csharp\n  - vb\n  name: StaticLocalInitFlag()\n  fullName: Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag.StaticLocalInitFlag()\n  type: Constructor\n  source:\n    remote:\n      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs\n    startLine: 217\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public StaticLocalInitFlag()\n    content.vb: Public Sub New\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: StaticLocalInitFlag.StaticLocalInitFlag()\nreferences:\n- uid: Microsoft.VisualBasic.CompilerServices\n  isExternal: false\n  name: Microsoft.VisualBasic.CompilerServices\n  fullName: Microsoft.VisualBasic.CompilerServices\n  commentId: N:Microsoft.VisualBasic.CompilerServices\n  nameWithType: Microsoft.VisualBasic.CompilerServices\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Int16\n  parent: System\n  isExternal: false\n  name: Int16\n  fullName: System.Int16\n  commentId: T:System.Int16\n  nameWithType: Int16\n"}