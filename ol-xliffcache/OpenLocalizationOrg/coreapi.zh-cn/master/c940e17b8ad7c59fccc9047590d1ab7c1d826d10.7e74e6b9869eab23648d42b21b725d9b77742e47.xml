{"nodes":[{"pos":[341,348],"content":"Strings","needQuote":true,"nodes":[{"content":"Strings","pos":[0,7]}]},{"pos":[1883,1893],"content":"AscW(Char)","needQuote":true,"nodes":[{"content":"AscW(Char)","pos":[0,10]}]},{"content":"\\n&lt;p&gt;Returns an &lt;strong&gt;Integer&lt;/strong&gt; value representing the character code corresponding to a character.&lt;/p&gt;\\n","pos":[3078,3192],"source":"\\n<p>Returns an <strong>Integer</strong> value representing the character code corresponding to a character.</p>\\n"},{"pos":[4143,4155],"content":"AscW(String)","needQuote":true,"nodes":[{"content":"AscW(String)","pos":[0,12]}]},{"content":"\\n&lt;p&gt;Returns an &lt;strong&gt;Integer&lt;/strong&gt; value representing the character code corresponding to a character.&lt;/p&gt;\\n","pos":[5348,5462],"source":"\\n<p>Returns an <strong>Integer</strong> value representing the character code corresponding to a character.</p>\\n"},{"pos":[6412,6423],"content":"ChrW(Int32)","needQuote":true,"nodes":[{"content":"ChrW(Int32)","pos":[0,11]}]},{"content":"\\n&lt;p&gt;Required.","pos":[7136,7150],"source":"\\n<p>Required."},{"content":"An &lt;strong&gt;Integer&lt;/strong&gt; expression representing the &lt;em&gt;code point&lt;/em&gt;, or character code, for the character.","pos":[7151,7265],"source":" An <strong>Integer</strong> expression representing the <em>code point</em>, or character code, for the character."},{"content":"&lt;/p&gt;\\n","pos":[7266,7272],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;Returns the character associated with the specified character code.&lt;/p&gt;\\n","pos":[7330,7408],"source":"\\n<p>Returns the character associated with the specified character code.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;CharCode&lt;/em&gt; &lt; -32768 or &gt; 65535 for &lt;strong&gt;ChrW&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[7519,7596],"source":"\\n<p>\\n<em>CharCode</em> < -32768 or > 65535 for <strong>ChrW</strong>.</p>\\n"},{"pos":[8443,8464],"content":"Microsoft.VisualBasic","needQuote":true,"nodes":[{"content":"Microsoft.VisualBasic","pos":[0,21]}]},{"pos":[8640,8646],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8806,8816],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[8911,8919],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[8988,8989],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9016,9017],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9087,9095],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[9164,9165],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9192,9193],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9376,9390],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[9509,9515],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[9582,9583],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9633,9639],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9699,9700],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9783,9789],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[9856,9857],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9907,9913],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9973,9974],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10188,10210],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[10358,10364],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[10431,10432],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10482,10488],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[10549,10550]},{"pos":[10605,10611],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10671,10672],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10769,10775],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[10842,10843],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10893,10899],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[10960,10961]},{"pos":[11016,11022],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11082,11083],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11328,11359],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[11525,11540],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[11616,11617],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11667,11673],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[11734,11735]},{"pos":[11790,11796],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11856,11857],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11963,11978],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[12054,12055],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12105,12111],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[12172,12173]},{"pos":[12228,12234],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12294,12295],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12525,12538],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[12639,12650],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[12722,12723],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12750,12751],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12824,12835],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[12907,12908],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12935,12936],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13111,13120],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[13213,13220],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[13288,13289],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13316,13317],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13386,13393],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[13461,13462],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13489,13490],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13665,13682],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[13791,13806],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[13882,13883],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13910,13911],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13988,14003],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[14079,14080],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14107,14108],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14253,14259],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[14388,14392],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[14530,14535],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[14677,14683],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[14839,14856],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]}],"content":"items:\n- uid: Microsoft.VisualBasic.Strings\n  commentId: T:Microsoft.VisualBasic.Strings\n  id: Strings\n  parent: Microsoft.VisualBasic\n  children:\n  - Microsoft.VisualBasic.Strings.AscW(System.Char)\n  - Microsoft.VisualBasic.Strings.AscW(System.String)\n  - Microsoft.VisualBasic.Strings.ChrW(System.Int32)\n  langs:\n  - csharp\n  - vb\n  name: Strings\n  fullName: Microsoft.VisualBasic.Strings\n  type: Class\n  source:\n    remote:\n      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Strings\n    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs\n    startLine: 38\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic\n  summary: \"\\n<p>The <strong>Strings</strong> module contains procedures used to perform string operations. </p>\\n\"\n  syntax:\n    content: >-\n      [StandardModule]\n\n      public sealed class Strings\n    content.vb: >-\n      <StandardModule>\n\n      Public NotInheritable Class Strings\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  attributes:\n  - type: Microsoft.VisualBasic.CompilerServices.StandardModuleAttribute\n    ctor: Microsoft.VisualBasic.CompilerServices.StandardModuleAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: Strings\n- uid: Microsoft.VisualBasic.Strings.AscW(System.Char)\n  commentId: M:Microsoft.VisualBasic.Strings.AscW(System.Char)\n  id: AscW(System.Char)\n  parent: Microsoft.VisualBasic.Strings\n  langs:\n  - csharp\n  - vb\n  name: AscW(Char)\n  fullName: Microsoft.VisualBasic.Strings.AscW(System.Char)\n  type: Method\n  source:\n    remote:\n      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AscW\n    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs\n    startLine: 42\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic\n  summary: \"\\n<p>Returns an <strong>Integer</strong> value representing the character code corresponding to a character.</p>\\n\"\n  syntax:\n    content: public static int AscW(char String)\n    content.vb: Public Shared Function AscW(String As Char) As Integer\n    parameters:\n    - id: String\n      type: System.Char\n      description: \"\\n<p>Required. Any valid <strong>Char</strong> or <strong>String</strong> expression. If <em>String</em> is a <strong>String</strong> expression, only the first character of the string is used for input. If <em>String</em> is <strong>Nothing</strong> or contains no characters, an <xref href=\\\"System.ArgumentException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> error occurs.</p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>Returns an <strong>Integer</strong> value representing the character code corresponding to a character.</p>\\n\"\n  seealso:\n  - type: Microsoft.VisualBasic.Strings.Chr(System.Int32)\n    commentId: M:Microsoft.VisualBasic.Strings.Chr(System.Int32)\n  - type: Microsoft.VisualBasic.Strings.ChrW(System.Int32)\n    commentId: M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)\n  - type: System.Globalization\n    commentId: N:System.Globalization\n  - type: System.Globalization.CultureInfo\n    commentId: T:System.Globalization.CultureInfo\n  - type: System.Globalization.TextInfo.ANSICodePage\n    commentId: P:System.Globalization.TextInfo.ANSICodePage\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Strings.AscW(Char)\n- uid: Microsoft.VisualBasic.Strings.AscW(System.String)\n  commentId: M:Microsoft.VisualBasic.Strings.AscW(System.String)\n  id: AscW(System.String)\n  parent: Microsoft.VisualBasic.Strings\n  langs:\n  - csharp\n  - vb\n  name: AscW(String)\n  fullName: Microsoft.VisualBasic.Strings.AscW(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AscW\n    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs\n    startLine: 43\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic\n  summary: \"\\n<p>Returns an <strong>Integer</strong> value representing the character code corresponding to a character.</p>\\n\"\n  syntax:\n    content: public static int AscW(string String)\n    content.vb: Public Shared Function AscW(String As String) As Integer\n    parameters:\n    - id: String\n      type: System.String\n      description: \"\\n<p>Required. Any valid <strong>Char</strong> or <strong>String</strong> expression. If <em>String</em> is a <strong>String</strong> expression, only the first character of the string is used for input. If <em>String</em> is <strong>Nothing</strong> or contains no characters, an <xref href=\\\"System.ArgumentException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> error occurs.</p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>Returns an <strong>Integer</strong> value representing the character code corresponding to a character.</p>\\n\"\n  seealso:\n  - type: Microsoft.VisualBasic.Strings.Chr(System.Int32)\n    commentId: M:Microsoft.VisualBasic.Strings.Chr(System.Int32)\n  - type: Microsoft.VisualBasic.Strings.ChrW(System.Int32)\n    commentId: M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)\n  - type: System.Globalization\n    commentId: N:System.Globalization\n  - type: System.Globalization.CultureInfo\n    commentId: T:System.Globalization.CultureInfo\n  - type: System.Globalization.TextInfo.ANSICodePage\n    commentId: P:System.Globalization.TextInfo.ANSICodePage\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Strings.AscW(String)\n- uid: Microsoft.VisualBasic.Strings.ChrW(System.Int32)\n  commentId: M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)\n  id: ChrW(System.Int32)\n  parent: Microsoft.VisualBasic.Strings\n  langs:\n  - csharp\n  - vb\n  name: ChrW(Int32)\n  fullName: Microsoft.VisualBasic.Strings.ChrW(System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ChrW\n    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs\n    startLine: 44\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic\n  summary: \"\\n<p>Returns the character associated with the specified character code.</p>\\n\"\n  syntax:\n    content: public static char ChrW(int CharCode)\n    content.vb: Public Shared Function ChrW(CharCode As Integer) As Char\n    parameters:\n    - id: CharCode\n      type: System.Int32\n      description: \"\\n<p>Required. An <strong>Integer</strong> expression representing the <em>code point</em>, or character code, for the character. </p>\\n\"\n    return:\n      type: System.Char\n      description: \"\\n<p>Returns the character associated with the specified character code.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>CharCode</em> < -32768 or > 65535 for <strong>ChrW</strong>.</p>\\n\"\n  seealso:\n  - type: Microsoft.VisualBasic.Strings.Chr(System.Int32)\n    commentId: M:Microsoft.VisualBasic.Strings.Chr(System.Int32)\n  - type: Microsoft.VisualBasic.Strings.Asc\n    commentId: Overload:Microsoft.VisualBasic.Strings.Asc\n  - type: Microsoft.VisualBasic.Strings.AscW(System.Char)\n    commentId: M:Microsoft.VisualBasic.Strings.AscW(System.Char)\n  - type: Microsoft.VisualBasic.Conversion.Str(System.Object)\n    commentId: M:Microsoft.VisualBasic.Conversion.Str(System.Object)\n  - type: System.Globalization.CultureInfo\n    commentId: T:System.Globalization.CultureInfo\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Strings.ChrW(Int32)\nreferences:\n- uid: Microsoft.VisualBasic\n  isExternal: false\n  name: Microsoft.VisualBasic\n  fullName: Microsoft.VisualBasic\n  commentId: N:Microsoft.VisualBasic\n  nameWithType: Microsoft.VisualBasic\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Char\n  parent: System\n  isExternal: false\n  name: Char\n  fullName: System.Char\n  commentId: T:System.Char\n  nameWithType: Char\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  commentId: T:System.Int32\n  nameWithType: Int32\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n"}