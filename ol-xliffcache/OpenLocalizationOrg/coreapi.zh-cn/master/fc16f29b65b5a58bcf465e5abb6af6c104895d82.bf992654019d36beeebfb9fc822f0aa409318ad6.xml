{"nodes":[{"pos":[1791,1803],"content":"EnvelopedCms","needQuote":true,"nodes":[{"content":"EnvelopedCms","pos":[0,12]}]},{"pos":[3294,3308],"content":"EnvelopedCms()","needQuote":true,"nodes":[{"content":"EnvelopedCms()","pos":[0,14]}]},{"content":"\\n&lt;p&gt;A null reference was passed to a method that does not accept it as a valid argument.&lt;/p&gt;\\n","pos":[4293,4388],"source":"\\n<p>A null reference was passed to a method that does not accept it as a valid argument.</p>\\n"},{"pos":[4867,4892],"content":"EnvelopedCms(ContentInfo)","needQuote":true,"nodes":[{"content":"EnvelopedCms(ContentInfo)","pos":[0,25]}]},{"content":"\\n&lt;p&gt;A null reference was passed to a method that does not accept it as a valid argument.&lt;/p&gt;\\n","pos":[6403,6498],"source":"\\n<p>A null reference was passed to a method that does not accept it as a valid argument.</p>\\n"},{"pos":[7280,7326],"content":"EnvelopedCms(ContentInfo, AlgorithmIdentifier)","needQuote":true,"nodes":[{"content":"EnvelopedCms(ContentInfo, AlgorithmIdentifier)","pos":[0,46]}]},{"content":"\\n&lt;p&gt;A null reference was passed to a method that does not accept it as a valid argument.&lt;/p&gt;\\n","pos":[9370,9465],"source":"\\n<p>A null reference was passed to a method that does not accept it as a valid argument.</p>\\n"},{"pos":[10119,10131],"content":"Certificates","needQuote":true,"nodes":[{"content":"Certificates","pos":[0,12]}]},{"pos":[11962,11988],"content":"ContentEncryptionAlgorithm","needQuote":true,"nodes":[{"content":"ContentEncryptionAlgorithm","pos":[0,26]}]},{"pos":[13677,13688],"content":"ContentInfo","needQuote":true,"nodes":[{"content":"ContentInfo","pos":[0,11]}]},{"pos":[15315,15329],"content":"RecipientInfos","needQuote":true,"nodes":[{"content":"RecipientInfos","pos":[0,14]}]},{"pos":[17017,17038],"content":"UnprotectedAttributes","needQuote":true,"nodes":[{"content":"UnprotectedAttributes","pos":[0,21]}]},{"pos":[19073,19080],"content":"Version","needQuote":true,"nodes":[{"content":"Version","pos":[0,7]}]},{"content":"\\n&lt;p&gt;An int value that represents the version of the enveloped CMS/PKCS #7 message.&lt;/p&gt;\\n","pos":[20034,20123],"source":"\\n<p>An int value that represents the version of the enveloped CMS/PKCS #7 message.</p>\\n"},{"pos":[20521,20535],"content":"Decode(Byte[])","needQuote":true,"nodes":[{"content":"Decode(Byte[])","pos":[0,14]}]},{"content":"\\n&lt;p&gt;An array of byte values that represent the information to be decoded.&lt;/p&gt;\\n","pos":[21619,21699],"source":"\\n<p>An array of byte values that represent the information to be decoded.</p>\\n"},{"content":"\\n&lt;p&gt;A null reference was passed to a method that does not accept it as a valid argument.","pos":[21818,21907],"source":"\\n<p>A null reference was passed to a method that does not accept it as a valid argument."},{"content":"&lt;/p&gt;\\n","pos":[21908,21914],"source":" </p>\\n"},{"pos":[22559,22568],"content":"Decrypt()","needQuote":true,"nodes":[{"content":"Decrypt()","pos":[0,9]}]},{"content":"\\n&lt;p&gt;A cryptographic operation could not be completed.&lt;/p&gt;\\n","pos":[23744,23804],"source":"\\n<p>A cryptographic operation could not be completed.</p>\\n"},{"content":"\\n&lt;p&gt;A method call was invalid for the object's current state.&lt;/p&gt;\\n","pos":[23917,23985],"source":"\\n<p>A method call was invalid for the object's current state.</p>\\n"},{"pos":[24469,24491],"content":"Decrypt(RecipientInfo)","needQuote":true,"nodes":[{"content":"Decrypt(RecipientInfo)","pos":[0,22]}]},{"content":"\\n&lt;p&gt;A null reference was passed to a method that does not accept it as a valid argument.","pos":[26041,26130],"source":"\\n<p>A null reference was passed to a method that does not accept it as a valid argument."},{"content":"&lt;/p&gt;\\n","pos":[26131,26137],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A cryptographic operation could not be completed.&lt;/p&gt;\\n","pos":[26288,26348],"source":"\\n<p>A cryptographic operation could not be completed.</p>\\n"},{"content":"\\n&lt;p&gt;A method call was invalid for the object's current state.&lt;/p&gt;\\n","pos":[26461,26529],"source":"\\n<p>A method call was invalid for the object's current state.</p>\\n"},{"pos":[27245,27295],"content":"Decrypt(RecipientInfo, X509Certificate2Collection)","needQuote":true,"nodes":[{"content":"Decrypt(RecipientInfo, X509Certificate2Collection)","pos":[0,50]}]},{"content":"\\n&lt;p&gt;A null reference was passed to a method that does not accept it as a valid argument.&lt;/p&gt;\\n","pos":[30157,30252],"source":"\\n<p>A null reference was passed to a method that does not accept it as a valid argument.</p>\\n"},{"content":"\\n&lt;p&gt;A cryptographic operation could not be completed.&lt;/p&gt;\\n","pos":[30403,30463],"source":"\\n<p>A cryptographic operation could not be completed.</p>\\n"},{"content":"\\n&lt;p&gt;A method call was invalid for the object's current state.&lt;/p&gt;\\n","pos":[30576,30644],"source":"\\n<p>A method call was invalid for the object's current state.</p>\\n"},{"pos":[31244,31279],"content":"Decrypt(X509Certificate2Collection)","needQuote":true,"nodes":[{"content":"Decrypt(X509Certificate2Collection)","pos":[0,35]}]},{"content":"\\n&lt;p&gt;A null reference was passed to a method that does not accept it as a valid argument.&lt;/p&gt;\\n","pos":[33473,33568],"source":"\\n<p>A null reference was passed to a method that does not accept it as a valid argument.</p>\\n"},{"content":"\\n&lt;p&gt;A cryptographic operation could not be completed.&lt;/p&gt;\\n","pos":[33719,33779],"source":"\\n<p>A cryptographic operation could not be completed.</p>\\n"},{"content":"\\n&lt;p&gt;A method call was invalid for the object's current state.&lt;/p&gt;\\n","pos":[33892,33960],"source":"\\n<p>A method call was invalid for the object's current state.</p>\\n"},{"pos":[34320,34328],"content":"Encode()","needQuote":true,"nodes":[{"content":"Encode()","pos":[0,8]}]},{"content":"\\n&lt;p&gt;If the method succeeds, the method returns an array of byte values that represent the encoded information.&lt;/p&gt;\\n&lt;p&gt;If the method fails, it throws an exception.&lt;/p&gt;\\n","pos":[35261,35431],"source":"\\n<p>If the method succeeds, the method returns an array of byte values that represent the encoded information.</p>\\n<p>If the method fails, it throws an exception.</p>\\n"},{"content":"\\n&lt;p&gt;A method call was invalid for the object's current state.&lt;/p&gt;\\n","pos":[35558,35626],"source":"\\n<p>A method call was invalid for the object's current state.</p>\\n"},{"pos":[36282,36303],"content":"Encrypt(CmsRecipient)","needQuote":true,"nodes":[{"content":"Encrypt(CmsRecipient)","pos":[0,21]}]},{"content":"\\n&lt;p&gt;A null reference was passed to a method that does not accept it as a valid argument.","pos":[37665,37754],"source":"\\n<p>A null reference was passed to a method that does not accept it as a valid argument."},{"content":"&lt;/p&gt;\\n","pos":[37755,37761],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A cryptographic operation could not be completed.&lt;/p&gt;\\n","pos":[37912,37972],"source":"\\n<p>A cryptographic operation could not be completed.</p>\\n"},{"pos":[38495,38526],"content":"Encrypt(CmsRecipientCollection)","needQuote":true,"nodes":[{"content":"Encrypt(CmsRecipientCollection)","pos":[0,31]}]},{"content":"\\n&lt;p&gt;A null reference was passed to a method that does not accept it as a valid argument.","pos":[40190,40279],"source":"\\n<p>A null reference was passed to a method that does not accept it as a valid argument."},{"content":"&lt;/p&gt;\\n","pos":[40280,40286],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A cryptographic operation could not be completed.&lt;/p&gt;\\n","pos":[40437,40497],"source":"\\n<p>A cryptographic operation could not be completed.</p>\\n"},{"pos":[40699,40732],"content":"System.Security.Cryptography.Pkcs","needQuote":true,"nodes":[{"content":"System.Security.Cryptography.Pkcs","pos":[0,33]}]},{"pos":[40944,40950],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[41110,41120],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[41215,41223],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[41292,41293],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[41320,41321],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[41391,41399],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[41468,41469],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[41496,41497],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[41680,41694],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[41813,41819],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[41886,41887],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[41937,41943],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[42003,42004],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[42087,42093],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[42160,42161],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[42211,42217],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[42277,42278],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[42492,42514],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[42662,42668],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[42735,42736],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[42786,42792],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[42853,42854]},{"pos":[42909,42915],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[42975,42976],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[43073,43079],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[43146,43147],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[43197,43203],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[43264,43265]},{"pos":[43320,43326],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[43386,43387],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[43632,43663],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[43829,43844],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[43920,43921],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[43971,43977],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[44038,44039]},{"pos":[44094,44100],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[44160,44161],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[44267,44282],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[44358,44359],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[44409,44415],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[44476,44477]},{"pos":[44532,44538],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[44598,44599],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[44829,44842],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[44943,44954],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[45026,45027],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[45054,45055],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[45128,45139],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[45211,45212],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[45239,45240],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[45415,45424],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[45517,45524],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[45592,45593],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[45620,45621],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[45690,45697],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[45765,45766],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[45793,45794],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[45969,45986],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[46095,46110],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[46186,46187],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[46214,46215],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[46292,46307],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[46383,46384],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[46411,46412],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[46557,46563],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[46753,46764],"content":"ContentInfo","needQuote":true,"nodes":[{"content":"ContentInfo","pos":[0,11]}]},{"pos":[47045,47064],"content":"AlgorithmIdentifier","needQuote":true,"nodes":[{"content":"AlgorithmIdentifier","pos":[0,19]}]},{"pos":[47400,47426],"content":"X509Certificate2Collection","needQuote":true,"nodes":[{"content":"X509Certificate2Collection","pos":[0,26]}]},{"pos":[47724,47769],"content":"System.Security.Cryptography.X509Certificates","needQuote":true,"nodes":[{"content":"System.Security.Cryptography.X509Certificates","pos":[0,45]}]},{"pos":[48088,48111],"content":"RecipientInfoCollection","needQuote":true,"nodes":[{"content":"RecipientInfoCollection","pos":[0,23]}]},{"pos":[48437,48475],"content":"CryptographicAttributeObjectCollection","needQuote":true,"nodes":[{"content":"CryptographicAttributeObjectCollection","pos":[0,38]}]},{"pos":[48758,48786],"content":"System.Security.Cryptography","needQuote":true,"nodes":[{"content":"System.Security.Cryptography","pos":[0,28]}]},{"pos":[48982,48987],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[49092,49098],"content":"Byte[]","needQuote":true,"nodes":[{"content":"Byte[]","pos":[0,6]}]},{"pos":[49218,49222],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[49281,49283]},{"pos":[49346,49350],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[49408,49410],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[49604,49617],"content":"RecipientInfo","needQuote":true,"nodes":[{"content":"RecipientInfo","pos":[0,13]}]},{"pos":[49897,49909],"content":"CmsRecipient","needQuote":true,"nodes":[{"content":"CmsRecipient","pos":[0,12]}]},{"pos":[50196,50218],"content":"CmsRecipientCollection","needQuote":true,"nodes":[{"content":"CmsRecipientCollection","pos":[0,22]}]},{"pos":[50463,50484],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[50695,50717],"content":"CryptographicException","needQuote":true,"nodes":[{"content":"CryptographicException","pos":[0,22]}]},{"pos":[50973,50998],"content":"InvalidOperationException","needQuote":true,"nodes":[{"content":"InvalidOperationException","pos":[0,25]}]}],"content":"items:\n- uid: System.Security.Cryptography.Pkcs.EnvelopedCms\n  commentId: T:System.Security.Cryptography.Pkcs.EnvelopedCms\n  id: EnvelopedCms\n  parent: System.Security.Cryptography.Pkcs\n  children:\n  - System.Security.Cryptography.Pkcs.EnvelopedCms.#ctor\n  - System.Security.Cryptography.Pkcs.EnvelopedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo)\n  - System.Security.Cryptography.Pkcs.EnvelopedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo,System.Security.Cryptography.Pkcs.AlgorithmIdentifier)\n  - System.Security.Cryptography.Pkcs.EnvelopedCms.Certificates\n  - System.Security.Cryptography.Pkcs.EnvelopedCms.ContentEncryptionAlgorithm\n  - System.Security.Cryptography.Pkcs.EnvelopedCms.ContentInfo\n  - System.Security.Cryptography.Pkcs.EnvelopedCms.Decode(System.Byte[])\n  - System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt\n  - System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.Pkcs.RecipientInfo)\n  - System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.Pkcs.RecipientInfo,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)\n  - System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)\n  - System.Security.Cryptography.Pkcs.EnvelopedCms.Encode\n  - System.Security.Cryptography.Pkcs.EnvelopedCms.Encrypt(System.Security.Cryptography.Pkcs.CmsRecipient)\n  - System.Security.Cryptography.Pkcs.EnvelopedCms.Encrypt(System.Security.Cryptography.Pkcs.CmsRecipientCollection)\n  - System.Security.Cryptography.Pkcs.EnvelopedCms.RecipientInfos\n  - System.Security.Cryptography.Pkcs.EnvelopedCms.UnprotectedAttributes\n  - System.Security.Cryptography.Pkcs.EnvelopedCms.Version\n  langs:\n  - csharp\n  - vb\n  name: EnvelopedCms\n  fullName: System.Security.Cryptography.Pkcs.EnvelopedCms\n  type: Class\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: EnvelopedCms\n    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n    startLine: 90\n  assemblies:\n  - System.Security.Cryptography.Pkcs\n  namespace: System.Security.Cryptography.Pkcs\n  summary: \"\\n<p>The <xref href=\\\"System.Security.Cryptography.Pkcs.EnvelopedCms\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class represents a CMS/PKCS #7 structure for enveloped data.</p>\\n\"\n  syntax:\n    content: public sealed class EnvelopedCms\n    content.vb: Public NotInheritable Class EnvelopedCms\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: EnvelopedCms\n- uid: System.Security.Cryptography.Pkcs.EnvelopedCms.#ctor\n  commentId: M:System.Security.Cryptography.Pkcs.EnvelopedCms.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.Pkcs.EnvelopedCms\n  langs:\n  - csharp\n  - vb\n  name: EnvelopedCms()\n  fullName: System.Security.Cryptography.Pkcs.EnvelopedCms.EnvelopedCms()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n    startLine: 92\n  assemblies:\n  - System.Security.Cryptography.Pkcs\n  namespace: System.Security.Cryptography.Pkcs\n  summary: \"\\n<p>The <xref href=\\\"System.Security.Cryptography.Pkcs.EnvelopedCms.#ctor\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> constructor creates an instance of the <xref href=\\\"System.Security.Cryptography.Pkcs.EnvelopedCms\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public EnvelopedCms()\n    content.vb: Public Sub New\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>A null reference was passed to a method that does not accept it as a valid argument.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: EnvelopedCms.EnvelopedCms()\n- uid: System.Security.Cryptography.Pkcs.EnvelopedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo)\n  commentId: M:System.Security.Cryptography.Pkcs.EnvelopedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo)\n  id: '#ctor(System.Security.Cryptography.Pkcs.ContentInfo)'\n  parent: System.Security.Cryptography.Pkcs.EnvelopedCms\n  langs:\n  - csharp\n  - vb\n  name: EnvelopedCms(ContentInfo)\n  fullName: System.Security.Cryptography.Pkcs.EnvelopedCms.EnvelopedCms(System.Security.Cryptography.Pkcs.ContentInfo)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n    startLine: 93\n  assemblies:\n  - System.Security.Cryptography.Pkcs\n  namespace: System.Security.Cryptography.Pkcs\n  summary: \"\\n<p>The <xref href=\\\"System.Security.Cryptography.Pkcs.EnvelopedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> constructor creates an instance of the <xref href=\\\"System.Security.Cryptography.Pkcs.EnvelopedCms\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class by using the specified content information as the inner content type.</p>\\n\"\n  syntax:\n    content: public EnvelopedCms(ContentInfo contentInfo)\n    content.vb: Public Sub New(contentInfo As ContentInfo)\n    parameters:\n    - id: contentInfo\n      type: System.Security.Cryptography.Pkcs.ContentInfo\n      description: \"\\n<p>An instance of the <xref href=\\\"System.Security.Cryptography.Pkcs.EnvelopedCms.ContentInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class that represents the content and its type.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>A null reference was passed to a method that does not accept it as a valid argument.</p>\\n\"\n  seealso:\n  - type: System.Security.Cryptography.Pkcs.ContentInfo\n    commentId: T:System.Security.Cryptography.Pkcs.ContentInfo\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: EnvelopedCms.EnvelopedCms(ContentInfo)\n- uid: System.Security.Cryptography.Pkcs.EnvelopedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo,System.Security.Cryptography.Pkcs.AlgorithmIdentifier)\n  commentId: M:System.Security.Cryptography.Pkcs.EnvelopedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo,System.Security.Cryptography.Pkcs.AlgorithmIdentifier)\n  id: '#ctor(System.Security.Cryptography.Pkcs.ContentInfo,System.Security.Cryptography.Pkcs.AlgorithmIdentifier)'\n  parent: System.Security.Cryptography.Pkcs.EnvelopedCms\n  langs:\n  - csharp\n  - vb\n  name: EnvelopedCms(ContentInfo, AlgorithmIdentifier)\n  fullName: System.Security.Cryptography.Pkcs.EnvelopedCms.EnvelopedCms(System.Security.Cryptography.Pkcs.ContentInfo, System.Security.Cryptography.Pkcs.AlgorithmIdentifier)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n    startLine: 94\n  assemblies:\n  - System.Security.Cryptography.Pkcs\n  namespace: System.Security.Cryptography.Pkcs\n  summary: \"\\n<p>The <xref href=\\\"System.Security.Cryptography.Pkcs.EnvelopedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo,System.Security.Cryptography.Pkcs.AlgorithmIdentifier)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> constructor creates an instance of the <xref href=\\\"System.Security.Cryptography.Pkcs.EnvelopedCms\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class by using the specified content information and encryption algorithm. The specified content information is to be used as the inner content type.</p>\\n\"\n  syntax:\n    content: public EnvelopedCms(ContentInfo contentInfo, AlgorithmIdentifier encryptionAlgorithm)\n    content.vb: Public Sub New(contentInfo As ContentInfo, encryptionAlgorithm As AlgorithmIdentifier)\n    parameters:\n    - id: contentInfo\n      type: System.Security.Cryptography.Pkcs.ContentInfo\n      description: \"\\n<p>A  <xref href=\\\"System.Security.Cryptography.Pkcs.ContentInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that represents the content and its type.</p>\\n\"\n    - id: encryptionAlgorithm\n      type: System.Security.Cryptography.Pkcs.AlgorithmIdentifier\n      description: \"\\n<p>An <xref href=\\\"System.Security.Cryptography.Pkcs.AlgorithmIdentifier\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that specifies the encryption algorithm.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>A null reference was passed to a method that does not accept it as a valid argument.</p>\\n\"\n  seealso:\n  - type: System.Security.Cryptography.Pkcs.AlgorithmIdentifier\n    commentId: T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier\n  - type: System.Security.Cryptography.Pkcs.ContentInfo\n    commentId: T:System.Security.Cryptography.Pkcs.ContentInfo\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: EnvelopedCms.EnvelopedCms(ContentInfo, AlgorithmIdentifier)\n- uid: System.Security.Cryptography.Pkcs.EnvelopedCms.Certificates\n  commentId: P:System.Security.Cryptography.Pkcs.EnvelopedCms.Certificates\n  id: Certificates\n  parent: System.Security.Cryptography.Pkcs.EnvelopedCms\n  langs:\n  - csharp\n  - vb\n  name: Certificates\n  fullName: System.Security.Cryptography.Pkcs.EnvelopedCms.Certificates\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Certificates\n    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n    startLine: 95\n  assemblies:\n  - System.Security.Cryptography.Pkcs\n  namespace: System.Security.Cryptography.Pkcs\n  summary: \"\\n<p>The <xref href=\\\"System.Security.Cryptography.Pkcs.EnvelopedCms.Certificates\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property retrieves the set of certificates associated with the enveloped CMS/PKCS #7 message.</p>\\n\"\n  syntax:\n    content: >-\n      public X509Certificate2Collection Certificates\n\n      {\n          [CompilerGenerated]\n          get;\n      }\n    content.vb: Public ReadOnly Property Certificates As X509Certificate2Collection\n    parameters: []\n    return:\n      type: System.Security.Cryptography.X509Certificates.X509Certificate2Collection\n      description: \"\\n<p>An <xref href=\\\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> collection that represents the X.509 certificates used with the enveloped CMS/PKCS #7 message. If no certificates exist, the property value is an empty collection.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: EnvelopedCms.Certificates\n- uid: System.Security.Cryptography.Pkcs.EnvelopedCms.ContentEncryptionAlgorithm\n  commentId: P:System.Security.Cryptography.Pkcs.EnvelopedCms.ContentEncryptionAlgorithm\n  id: ContentEncryptionAlgorithm\n  parent: System.Security.Cryptography.Pkcs.EnvelopedCms\n  langs:\n  - csharp\n  - vb\n  name: ContentEncryptionAlgorithm\n  fullName: System.Security.Cryptography.Pkcs.EnvelopedCms.ContentEncryptionAlgorithm\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ContentEncryptionAlgorithm\n    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n    startLine: 96\n  assemblies:\n  - System.Security.Cryptography.Pkcs\n  namespace: System.Security.Cryptography.Pkcs\n  summary: \"\\n<p>The <xref href=\\\"System.Security.Cryptography.Pkcs.EnvelopedCms.ContentEncryptionAlgorithm\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property retrieves the identifier of the algorithm used to encrypt the content.</p>\\n\"\n  syntax:\n    content: >-\n      public AlgorithmIdentifier ContentEncryptionAlgorithm\n\n      {\n          [CompilerGenerated]\n          get;\n      }\n    content.vb: Public ReadOnly Property ContentEncryptionAlgorithm As AlgorithmIdentifier\n    parameters: []\n    return:\n      type: System.Security.Cryptography.Pkcs.AlgorithmIdentifier\n      description: \"\\n<p>An <xref href=\\\"System.Security.Cryptography.Pkcs.AlgorithmIdentifier\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that represents the algorithm identifier.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: EnvelopedCms.ContentEncryptionAlgorithm\n- uid: System.Security.Cryptography.Pkcs.EnvelopedCms.ContentInfo\n  commentId: P:System.Security.Cryptography.Pkcs.EnvelopedCms.ContentInfo\n  id: ContentInfo\n  parent: System.Security.Cryptography.Pkcs.EnvelopedCms\n  langs:\n  - csharp\n  - vb\n  name: ContentInfo\n  fullName: System.Security.Cryptography.Pkcs.EnvelopedCms.ContentInfo\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ContentInfo\n    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n    startLine: 97\n  assemblies:\n  - System.Security.Cryptography.Pkcs\n  namespace: System.Security.Cryptography.Pkcs\n  summary: \"\\n<p>The <xref href=\\\"System.Security.Cryptography.Pkcs.EnvelopedCms.ContentInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property retrieves the inner content information for the enveloped CMS/PKCS #7 message.</p>\\n\"\n  syntax:\n    content: >-\n      public ContentInfo ContentInfo\n\n      {\n          [CompilerGenerated]\n          get;\n      }\n    content.vb: Public ReadOnly Property ContentInfo As ContentInfo\n    parameters: []\n    return:\n      type: System.Security.Cryptography.Pkcs.ContentInfo\n      description: \"\\n<p>A <xref href=\\\"System.Security.Cryptography.Pkcs.ContentInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that represents the inner content information from the enveloped CMS/PKCS #7 message.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: EnvelopedCms.ContentInfo\n- uid: System.Security.Cryptography.Pkcs.EnvelopedCms.RecipientInfos\n  commentId: P:System.Security.Cryptography.Pkcs.EnvelopedCms.RecipientInfos\n  id: RecipientInfos\n  parent: System.Security.Cryptography.Pkcs.EnvelopedCms\n  langs:\n  - csharp\n  - vb\n  name: RecipientInfos\n  fullName: System.Security.Cryptography.Pkcs.EnvelopedCms.RecipientInfos\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RecipientInfos\n    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n    startLine: 98\n  assemblies:\n  - System.Security.Cryptography.Pkcs\n  namespace: System.Security.Cryptography.Pkcs\n  summary: \"\\n<p>The <xref href=\\\"System.Security.Cryptography.Pkcs.EnvelopedCms.RecipientInfos\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property retrieves the recipient information associated with the enveloped CMS/PKCS #7 message.</p>\\n\"\n  syntax:\n    content: public RecipientInfoCollection RecipientInfos { get; }\n    content.vb: Public ReadOnly Property RecipientInfos As RecipientInfoCollection\n    parameters: []\n    return:\n      type: System.Security.Cryptography.Pkcs.RecipientInfoCollection\n      description: \"\\n<p>A <xref href=\\\"System.Security.Cryptography.Pkcs.RecipientInfoCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> collection that represents the recipient information. If no recipients exist, the property value is an empty collection.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: EnvelopedCms.RecipientInfos\n- uid: System.Security.Cryptography.Pkcs.EnvelopedCms.UnprotectedAttributes\n  commentId: P:System.Security.Cryptography.Pkcs.EnvelopedCms.UnprotectedAttributes\n  id: UnprotectedAttributes\n  parent: System.Security.Cryptography.Pkcs.EnvelopedCms\n  langs:\n  - csharp\n  - vb\n  name: UnprotectedAttributes\n  fullName: System.Security.Cryptography.Pkcs.EnvelopedCms.UnprotectedAttributes\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: UnprotectedAttributes\n    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n    startLine: 99\n  assemblies:\n  - System.Security.Cryptography.Pkcs\n  namespace: System.Security.Cryptography.Pkcs\n  summary: \"\\n<p>The <xref href=\\\"System.Security.Cryptography.Pkcs.EnvelopedCms.UnprotectedAttributes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property retrieves the unprotected (unencrypted) attributes associated with the enveloped CMS/PKCS #7 message. Unprotected attributes are not encrypted, and so do not have data confidentiality within an <xref href=\\\"System.Security.Cryptography.Pkcs.EnvelopedCms\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: >-\n      public CryptographicAttributeObjectCollection UnprotectedAttributes\n\n      {\n          [CompilerGenerated]\n          get;\n      }\n    content.vb: Public ReadOnly Property UnprotectedAttributes As CryptographicAttributeObjectCollection\n    parameters: []\n    return:\n      type: System.Security.Cryptography.CryptographicAttributeObjectCollection\n      description: \"\\n<p>A <xref href=\\\"System.Security.Cryptography.CryptographicAttributeObjectCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> collection that represents the unprotected attributes. If no unprotected attributes exist, the property value is an empty collection.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: EnvelopedCms.UnprotectedAttributes\n- uid: System.Security.Cryptography.Pkcs.EnvelopedCms.Version\n  commentId: P:System.Security.Cryptography.Pkcs.EnvelopedCms.Version\n  id: Version\n  parent: System.Security.Cryptography.Pkcs.EnvelopedCms\n  langs:\n  - csharp\n  - vb\n  name: Version\n  fullName: System.Security.Cryptography.Pkcs.EnvelopedCms.Version\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Version\n    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n    startLine: 100\n  assemblies:\n  - System.Security.Cryptography.Pkcs\n  namespace: System.Security.Cryptography.Pkcs\n  summary: \"\\n<p>The <xref href=\\\"System.Security.Cryptography.Pkcs.EnvelopedCms.Version\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property retrieves the version of the enveloped CMS/PKCS #7 message.  </p>\\n\"\n  syntax:\n    content: >-\n      public int Version\n\n      {\n          [CompilerGenerated]\n          get;\n      }\n    content.vb: Public ReadOnly Property Version As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>An int value that represents the version of the enveloped CMS/PKCS #7 message.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: EnvelopedCms.Version\n- uid: System.Security.Cryptography.Pkcs.EnvelopedCms.Decode(System.Byte[])\n  commentId: M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decode(System.Byte[])\n  id: Decode(System.Byte[])\n  parent: System.Security.Cryptography.Pkcs.EnvelopedCms\n  langs:\n  - csharp\n  - vb\n  name: Decode(Byte[])\n  fullName: System.Security.Cryptography.Pkcs.EnvelopedCms.Decode(System.Byte[])\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Decode\n    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n    startLine: 101\n  assemblies:\n  - System.Security.Cryptography.Pkcs\n  namespace: System.Security.Cryptography.Pkcs\n  summary: \"\\n<p>The <xref href=\\\"System.Security.Cryptography.Pkcs.EnvelopedCms.Decode(System.Byte[])\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method decodes the specified enveloped CMS/PKCS #7 message and resets all member variables in the <xref href=\\\"System.Security.Cryptography.Pkcs.EnvelopedCms\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public void Decode(byte[] encodedMessage)\n    content.vb: Public Sub Decode(encodedMessage As Byte())\n    parameters:\n    - id: encodedMessage\n      type: System.Byte[]\n      description: \"\\n<p>An array of byte values that represent the information to be decoded.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>A null reference was passed to a method that does not accept it as a valid argument. </p>\\n\"\n  seealso:\n  - type: System.Security.Cryptography.Pkcs.EnvelopedCms.Encode\n    commentId: M:System.Security.Cryptography.Pkcs.EnvelopedCms.Encode\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Security.Cryptography.Pkcs.EnvelopedCms.Decode(System.Byte())\n  name.vb: Decode(Byte())\n  nameWithType: EnvelopedCms.Decode(Byte[])\n  nameWithType.vb: EnvelopedCms.Decode(Byte())\n- uid: System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt\n  commentId: M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt\n  id: Decrypt\n  parent: System.Security.Cryptography.Pkcs.EnvelopedCms\n  langs:\n  - csharp\n  - vb\n  name: Decrypt()\n  fullName: System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt()\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Decrypt\n    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n    startLine: 102\n  assemblies:\n  - System.Security.Cryptography.Pkcs\n  namespace: System.Security.Cryptography.Pkcs\n  summary: \"\\n<p>The <xref href=\\\"System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method decrypts the contents of the decoded enveloped CMS/PKCS #7 message. The <xref href=\\\"System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method searches the current user and computer My stores for the appropriate certificate and private key.</p>\\n\"\n  syntax:\n    content: public void Decrypt()\n    content.vb: Public Sub Decrypt\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: \"\\n<p>A cryptographic operation could not be completed.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>A method call was invalid for the object's current state.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: EnvelopedCms.Decrypt()\n- uid: System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.Pkcs.RecipientInfo)\n  commentId: M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.Pkcs.RecipientInfo)\n  id: Decrypt(System.Security.Cryptography.Pkcs.RecipientInfo)\n  parent: System.Security.Cryptography.Pkcs.EnvelopedCms\n  langs:\n  - csharp\n  - vb\n  name: Decrypt(RecipientInfo)\n  fullName: System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.Pkcs.RecipientInfo)\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Decrypt\n    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n    startLine: 103\n  assemblies:\n  - System.Security.Cryptography.Pkcs\n  namespace: System.Security.Cryptography.Pkcs\n  summary: \"\\n<p>The <xref href=\\\"System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.Pkcs.RecipientInfo)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method decrypts the contents of the decoded enveloped CMS/PKCS #7 message by using the private key associated with the certificate identified by the specified recipient information.</p>\\n\"\n  syntax:\n    content: public void Decrypt(RecipientInfo recipientInfo)\n    content.vb: Public Sub Decrypt(recipientInfo As RecipientInfo)\n    parameters:\n    - id: recipientInfo\n      type: System.Security.Cryptography.Pkcs.RecipientInfo\n      description: \"\\n<p>A <xref href=\\\"System.Security.Cryptography.Pkcs.RecipientInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that represents the recipient information that identifies the certificate associated with the private key to use for the decryption.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>A null reference was passed to a method that does not accept it as a valid argument. </p>\\n\"\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: \"\\n<p>A cryptographic operation could not be completed.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>A method call was invalid for the object's current state.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: EnvelopedCms.Decrypt(RecipientInfo)\n- uid: System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.Pkcs.RecipientInfo,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)\n  commentId: M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.Pkcs.RecipientInfo,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)\n  id: Decrypt(System.Security.Cryptography.Pkcs.RecipientInfo,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)\n  parent: System.Security.Cryptography.Pkcs.EnvelopedCms\n  langs:\n  - csharp\n  - vb\n  name: Decrypt(RecipientInfo, X509Certificate2Collection)\n  fullName: System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.Pkcs.RecipientInfo, System.Security.Cryptography.X509Certificates.X509Certificate2Collection)\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Decrypt\n    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n    startLine: 104\n  assemblies:\n  - System.Security.Cryptography.Pkcs\n  namespace: System.Security.Cryptography.Pkcs\n  summary: \"\\n<p>The <xref href=\\\"System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.Pkcs.RecipientInfo,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method decrypts the contents of the decoded enveloped CMS/PKCS #7 message by using the private key associated with the certificate identified by the specified recipient information and by using the specified certificate collection.  The <xref href=\\\"System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.Pkcs.RecipientInfo,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method searches the specified certificate collection and the My certificate store for the proper certificate to use for the decryption.</p>\\n\"\n  syntax:\n    content: public void Decrypt(RecipientInfo recipientInfo, X509Certificate2Collection extraStore)\n    content.vb: Public Sub Decrypt(recipientInfo As RecipientInfo, extraStore As X509Certificate2Collection)\n    parameters:\n    - id: recipientInfo\n      type: System.Security.Cryptography.Pkcs.RecipientInfo\n      description: \"\\n<p>A <xref href=\\\"System.Security.Cryptography.Pkcs.RecipientInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that represents the recipient information to use for the decryption.</p>\\n\"\n    - id: extraStore\n      type: System.Security.Cryptography.X509Certificates.X509Certificate2Collection\n      description: \"\\n<p>An <xref href=\\\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> collection that represents additional certificates to use for the decryption. The <xref href=\\\"System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.Pkcs.RecipientInfo,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method searches this certificate collection and the My certificate store for the proper certificate to use for the decryption.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>A null reference was passed to a method that does not accept it as a valid argument.</p>\\n\"\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: \"\\n<p>A cryptographic operation could not be completed.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>A method call was invalid for the object's current state.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: EnvelopedCms.Decrypt(RecipientInfo, X509Certificate2Collection)\n- uid: System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)\n  commentId: M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)\n  id: Decrypt(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)\n  parent: System.Security.Cryptography.Pkcs.EnvelopedCms\n  langs:\n  - csharp\n  - vb\n  name: Decrypt(X509Certificate2Collection)\n  fullName: System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Decrypt\n    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n    startLine: 105\n  assemblies:\n  - System.Security.Cryptography.Pkcs\n  namespace: System.Security.Cryptography.Pkcs\n  summary: \"\\n<p>The <xref href=\\\"System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method decrypts the contents of the decoded enveloped CMS/PKCS #7 message by using the specified certificate collection. The <xref href=\\\"System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method searches the specified certificate collection and the My certificate store for the proper certificate to use for the decryption.</p>\\n\"\n  syntax:\n    content: public void Decrypt(X509Certificate2Collection extraStore)\n    content.vb: Public Sub Decrypt(extraStore As X509Certificate2Collection)\n    parameters:\n    - id: extraStore\n      type: System.Security.Cryptography.X509Certificates.X509Certificate2Collection\n      description: \"\\n<p>An <xref href=\\\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> collection that represents additional certificates to use for the decryption. The <xref href=\\\"System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method searches this certificate collection and the My certificate store for the proper certificate to use for the decryption.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>A null reference was passed to a method that does not accept it as a valid argument.</p>\\n\"\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: \"\\n<p>A cryptographic operation could not be completed.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>A method call was invalid for the object's current state.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: EnvelopedCms.Decrypt(X509Certificate2Collection)\n- uid: System.Security.Cryptography.Pkcs.EnvelopedCms.Encode\n  commentId: M:System.Security.Cryptography.Pkcs.EnvelopedCms.Encode\n  id: Encode\n  parent: System.Security.Cryptography.Pkcs.EnvelopedCms\n  langs:\n  - csharp\n  - vb\n  name: Encode()\n  fullName: System.Security.Cryptography.Pkcs.EnvelopedCms.Encode()\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Encode\n    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n    startLine: 106\n  assemblies:\n  - System.Security.Cryptography.Pkcs\n  namespace: System.Security.Cryptography.Pkcs\n  summary: \"\\n<p>The <xref href=\\\"System.Security.Cryptography.Pkcs.EnvelopedCms.Encode\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method encodes the contents of the enveloped CMS/PKCS #7 message and returns it as an array of byte values. Encryption must be done before encoding.</p>\\n\"\n  syntax:\n    content: public byte[] Encode()\n    content.vb: Public Function Encode As Byte()\n    return:\n      type: System.Byte[]\n      description: \"\\n<p>If the method succeeds, the method returns an array of byte values that represent the encoded information.</p>\\n<p>If the method fails, it throws an exception.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>A method call was invalid for the object's current state.</p>\\n\"\n  seealso:\n  - type: System.Security.Cryptography.Pkcs.EnvelopedCms.Decode(System.Byte[])\n    commentId: M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decode(System.Byte[])\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: EnvelopedCms.Encode()\n- uid: System.Security.Cryptography.Pkcs.EnvelopedCms.Encrypt(System.Security.Cryptography.Pkcs.CmsRecipient)\n  commentId: M:System.Security.Cryptography.Pkcs.EnvelopedCms.Encrypt(System.Security.Cryptography.Pkcs.CmsRecipient)\n  id: Encrypt(System.Security.Cryptography.Pkcs.CmsRecipient)\n  parent: System.Security.Cryptography.Pkcs.EnvelopedCms\n  langs:\n  - csharp\n  - vb\n  name: Encrypt(CmsRecipient)\n  fullName: System.Security.Cryptography.Pkcs.EnvelopedCms.Encrypt(System.Security.Cryptography.Pkcs.CmsRecipient)\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Encrypt\n    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n    startLine: 107\n  assemblies:\n  - System.Security.Cryptography.Pkcs\n  namespace: System.Security.Cryptography.Pkcs\n  summary: \"\\n<p>The <xref href=\\\"System.Security.Cryptography.Pkcs.EnvelopedCms.Encrypt(System.Security.Cryptography.Pkcs.CmsRecipient)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method encrypts the contents of the CMS/PKCS #7 message by using the specified recipient information.</p>\\n\"\n  syntax:\n    content: public void Encrypt(CmsRecipient recipient)\n    content.vb: Public Sub Encrypt(recipient As CmsRecipient)\n    parameters:\n    - id: recipient\n      type: System.Security.Cryptography.Pkcs.CmsRecipient\n      description: \"\\n<p>A <xref href=\\\"System.Security.Cryptography.Pkcs.CmsRecipient\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that represents the recipient information.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>A null reference was passed to a method that does not accept it as a valid argument. </p>\\n\"\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: \"\\n<p>A cryptographic operation could not be completed.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: EnvelopedCms.Encrypt(CmsRecipient)\n- uid: System.Security.Cryptography.Pkcs.EnvelopedCms.Encrypt(System.Security.Cryptography.Pkcs.CmsRecipientCollection)\n  commentId: M:System.Security.Cryptography.Pkcs.EnvelopedCms.Encrypt(System.Security.Cryptography.Pkcs.CmsRecipientCollection)\n  id: Encrypt(System.Security.Cryptography.Pkcs.CmsRecipientCollection)\n  parent: System.Security.Cryptography.Pkcs.EnvelopedCms\n  langs:\n  - csharp\n  - vb\n  name: Encrypt(CmsRecipientCollection)\n  fullName: System.Security.Cryptography.Pkcs.EnvelopedCms.Encrypt(System.Security.Cryptography.Pkcs.CmsRecipientCollection)\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Encrypt\n    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n    startLine: 108\n  assemblies:\n  - System.Security.Cryptography.Pkcs\n  namespace: System.Security.Cryptography.Pkcs\n  summary: \"\\n<p>The <xref href=\\\"System.Security.Cryptography.Pkcs.EnvelopedCms.Encrypt(System.Security.Cryptography.Pkcs.CmsRecipientCollection)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method encrypts the contents of the CMS/PKCS #7 message by using the information for the specified list of recipients. The message is encrypted by using a message encryption key with a symmetric encryption algorithm such as triple DES. The message encryption key is then encrypted with the public key of each recipient.</p>\\n\"\n  syntax:\n    content: public void Encrypt(CmsRecipientCollection recipients)\n    content.vb: Public Sub Encrypt(recipients As CmsRecipientCollection)\n    parameters:\n    - id: recipients\n      type: System.Security.Cryptography.Pkcs.CmsRecipientCollection\n      description: \"\\n<p>A <xref href=\\\"System.Security.Cryptography.Pkcs.CmsRecipientCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> collection that represents the information for the list of recipients.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>A null reference was passed to a method that does not accept it as a valid argument. </p>\\n\"\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: \"\\n<p>A cryptographic operation could not be completed.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: EnvelopedCms.Encrypt(CmsRecipientCollection)\nreferences:\n- uid: System.Security.Cryptography.Pkcs\n  isExternal: false\n  name: System.Security.Cryptography.Pkcs\n  fullName: System.Security.Cryptography.Pkcs\n  commentId: N:System.Security.Cryptography.Pkcs\n  nameWithType: System.Security.Cryptography.Pkcs\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Security.Cryptography.Pkcs.ContentInfo\n  parent: System.Security.Cryptography.Pkcs\n  isExternal: false\n  name: ContentInfo\n  fullName: System.Security.Cryptography.Pkcs.ContentInfo\n  commentId: T:System.Security.Cryptography.Pkcs.ContentInfo\n  nameWithType: ContentInfo\n- uid: System.Security.Cryptography.Pkcs.AlgorithmIdentifier\n  parent: System.Security.Cryptography.Pkcs\n  isExternal: false\n  name: AlgorithmIdentifier\n  fullName: System.Security.Cryptography.Pkcs.AlgorithmIdentifier\n  commentId: T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier\n  nameWithType: AlgorithmIdentifier\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate2Collection\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509Certificate2Collection\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2Collection\n  commentId: T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection\n  nameWithType: X509Certificate2Collection\n- uid: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: System.Security.Cryptography.X509Certificates\n  fullName: System.Security.Cryptography.X509Certificates\n  commentId: N:System.Security.Cryptography.X509Certificates\n  nameWithType: System.Security.Cryptography.X509Certificates\n- uid: System.Security.Cryptography.Pkcs.RecipientInfoCollection\n  parent: System.Security.Cryptography.Pkcs\n  isExternal: false\n  name: RecipientInfoCollection\n  fullName: System.Security.Cryptography.Pkcs.RecipientInfoCollection\n  commentId: T:System.Security.Cryptography.Pkcs.RecipientInfoCollection\n  nameWithType: RecipientInfoCollection\n- uid: System.Security.Cryptography.CryptographicAttributeObjectCollection\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CryptographicAttributeObjectCollection\n  fullName: System.Security.Cryptography.CryptographicAttributeObjectCollection\n  commentId: T:System.Security.Cryptography.CryptographicAttributeObjectCollection\n  nameWithType: CryptographicAttributeObjectCollection\n- uid: System.Security.Cryptography\n  isExternal: false\n  name: System.Security.Cryptography\n  fullName: System.Security.Cryptography\n  commentId: N:System.Security.Cryptography\n  nameWithType: System.Security.Cryptography\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  commentId: T:System.Int32\n  nameWithType: Int32\n- uid: System.Byte[]\n  name: Byte[]\n  fullName: System.Byte[]\n  fullname.vb: System.Byte()\n  name.vb: Byte()\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: Byte[]\n  nameWithType.vb: Byte()\n- uid: System.Security.Cryptography.Pkcs.RecipientInfo\n  parent: System.Security.Cryptography.Pkcs\n  isExternal: false\n  name: RecipientInfo\n  fullName: System.Security.Cryptography.Pkcs.RecipientInfo\n  commentId: T:System.Security.Cryptography.Pkcs.RecipientInfo\n  nameWithType: RecipientInfo\n- uid: System.Security.Cryptography.Pkcs.CmsRecipient\n  parent: System.Security.Cryptography.Pkcs\n  isExternal: false\n  name: CmsRecipient\n  fullName: System.Security.Cryptography.Pkcs.CmsRecipient\n  commentId: T:System.Security.Cryptography.Pkcs.CmsRecipient\n  nameWithType: CmsRecipient\n- uid: System.Security.Cryptography.Pkcs.CmsRecipientCollection\n  parent: System.Security.Cryptography.Pkcs\n  isExternal: false\n  name: CmsRecipientCollection\n  fullName: System.Security.Cryptography.Pkcs.CmsRecipientCollection\n  commentId: T:System.Security.Cryptography.Pkcs.CmsRecipientCollection\n  nameWithType: CmsRecipientCollection\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.Security.Cryptography.CryptographicException\n  isExternal: false\n  name: CryptographicException\n  fullName: System.Security.Cryptography.CryptographicException\n  commentId: T:System.Security.Cryptography.CryptographicException\n  nameWithType: CryptographicException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  fullName: System.InvalidOperationException\n  nameWithType: InvalidOperationException\n  commentId: T:System.InvalidOperationException\n"}