{"nodes":[{"pos":[348,365],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[1888,1910],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"content":"\\n&lt;p&gt;The first object to compare.&lt;/p&gt;\\n","pos":[2613,2652],"source":"\\n<p>The first object to compare.</p>\\n"},{"content":"\\n&lt;p&gt;The second object to compare.&lt;/p&gt;\\n","pos":[2712,2752],"source":"\\n<p>The second object to compare.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the specified objects are equal; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[2813,2918],"source":"\\n<p>\\n<strong>true</strong> if the specified objects are equal; otherwise, <strong>false</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;x&lt;/em&gt; and &lt;em&gt;y&lt;/em&gt; are of different types and neither one can handle comparisons with the other.&lt;/p&gt;\\n","pos":[3029,3145],"source":"\\n<p>\\n<em>x</em> and <em>y</em> are of different types and neither one can handle comparisons with the other.</p>\\n"},{"pos":[3469,3488],"content":"GetHashCode(Object)","needQuote":true,"nodes":[{"content":"GetHashCode(Object)","pos":[0,19]}]},{"content":"\\n&lt;p&gt;A hash code for the specified object.&lt;/p&gt;\\n","pos":[4360,4408],"source":"\\n<p>A hash code for the specified object.</p>\\n"},{"content":"\\n&lt;p&gt;The type of &lt;em&gt;obj&lt;/em&gt; is a reference type and &lt;em&gt;obj&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[4527,4625],"source":"\\n<p>The type of <em>obj</em> is a reference type and <em>obj</em> is <strong>null</strong>.</p>\\n"},{"pos":[4938,4956],"content":"System.Collections","needQuote":true,"nodes":[{"content":"System.Collections","pos":[0,18]}]},{"pos":[5123,5129],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[5275,5282],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[5406,5412],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[5542,5547],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[5700,5717],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]},{"pos":[5893,5914],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]}],"content":"items:\n- uid: System.Collections.IEqualityComparer\n  commentId: T:System.Collections.IEqualityComparer\n  id: IEqualityComparer\n  parent: System.Collections\n  children:\n  - System.Collections.IEqualityComparer.Equals(System.Object,System.Object)\n  - System.Collections.IEqualityComparer.GetHashCode(System.Object)\n  langs:\n  - csharp\n  - vb\n  name: IEqualityComparer\n  fullName: System.Collections.IEqualityComparer\n  type: Interface\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/IEqualityComparer.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: IEqualityComparer\n    path: src/mscorlib/src/System/Collections/IEqualityComparer.cs\n    startLine: 21\n  assemblies:\n  - System.Runtime\n  namespace: System.Collections\n  summary: \"\\n<p>Defines methods to support the comparison of objects for equality.</p>\\n\"\n  syntax:\n    content: >-\n      [ComVisible(true)]\n\n      public interface IEqualityComparer\n    content.vb: >-\n      <ComVisible(True)>\n\n      Public Interface IEqualityComparer\n  seealso:\n  - type: System.Collections.Hashtable\n    commentId: T:System.Collections.Hashtable\n  - type: System.Collections.Specialized.NameValueCollection\n    commentId: T:System.Collections.Specialized.NameValueCollection\n  - type: System.Collections.Specialized.OrderedDictionary\n    commentId: T:System.Collections.Specialized.OrderedDictionary\n  - type: System.Collections.IComparer\n    commentId: T:System.Collections.IComparer\n  modifiers.csharp:\n  - public\n  - interface\n  modifiers.vb:\n  - Public\n  - Interface\n  nameWithType: IEqualityComparer\n- uid: System.Collections.IEqualityComparer.Equals(System.Object,System.Object)\n  commentId: M:System.Collections.IEqualityComparer.Equals(System.Object,System.Object)\n  id: Equals(System.Object,System.Object)\n  parent: System.Collections.IEqualityComparer\n  langs:\n  - csharp\n  - vb\n  name: Equals(Object, Object)\n  fullName: System.Collections.IEqualityComparer.Equals(System.Object, System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/IEqualityComparer.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Equals\n    path: src/mscorlib/src/System/Collections/IEqualityComparer.cs\n    startLine: 23\n  assemblies:\n  - System.Runtime\n  namespace: System.Collections\n  summary: \"\\n<p>Determines whether the specified objects are equal.</p>\\n\"\n  syntax:\n    content: bool Equals(object x, object y)\n    content.vb: Function Equals(x As Object, y As Object) As Boolean\n    parameters:\n    - id: x\n      type: System.Object\n      description: \"\\n<p>The first object to compare.</p>\\n\"\n    - id: y\n      type: System.Object\n      description: \"\\n<p>The second object to compare.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the specified objects are equal; otherwise, <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>x</em> and <em>y</em> are of different types and neither one can handle comparisons with the other.</p>\\n\"\n  nameWithType: IEqualityComparer.Equals(Object, Object)\n- uid: System.Collections.IEqualityComparer.GetHashCode(System.Object)\n  commentId: M:System.Collections.IEqualityComparer.GetHashCode(System.Object)\n  id: GetHashCode(System.Object)\n  parent: System.Collections.IEqualityComparer\n  langs:\n  - csharp\n  - vb\n  name: GetHashCode(Object)\n  fullName: System.Collections.IEqualityComparer.GetHashCode(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/IEqualityComparer.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetHashCode\n    path: src/mscorlib/src/System/Collections/IEqualityComparer.cs\n    startLine: 24\n  assemblies:\n  - System.Runtime\n  namespace: System.Collections\n  summary: \"\\n<p>Returns a hash code for the specified object.</p>\\n\"\n  syntax:\n    content: int GetHashCode(object obj)\n    content.vb: Function GetHashCode(obj As Object) As Integer\n    parameters:\n    - id: obj\n      type: System.Object\n      description: \"\\n<p>The <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for which a hash code is to be returned.</p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>A hash code for the specified object.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The type of <em>obj</em> is a reference type and <em>obj</em> is <strong>null</strong>.</p>\\n\"\n  seealso:\n  - type: System.Object.GetHashCode\n    commentId: M:System.Object.GetHashCode\n  - type: System.Collections.IHashCodeProvider\n    commentId: T:System.Collections.IHashCodeProvider\n  nameWithType: IEqualityComparer.GetHashCode(Object)\nreferences:\n- uid: System.Collections\n  isExternal: false\n  name: System.Collections\n  fullName: System.Collections\n  nameWithType: System.Collections\n  commentId: N:System.Collections\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n"}