{"nodes":[{"pos":[535,554],"content":"PackageRelationship","needQuote":true,"nodes":[{"content":"PackageRelationship","pos":[0,19]}]},{"pos":[2103,2105],"content":"Id","needQuote":true,"nodes":[{"content":"Id","pos":[0,2]}]},{"content":"\\n&lt;p&gt;A string that identifies the relationship.&lt;/p&gt;\\n","pos":[2747,2800],"source":"\\n<p>A string that identifies the relationship.</p>\\n"},{"pos":[3543,3550],"content":"Package","needQuote":true,"nodes":[{"content":"Package","pos":[0,7]}]},{"content":"\\n&lt;p&gt;The package that contains this relationship.&lt;/p&gt;\\n","pos":[4310,4365],"source":"\\n<p>The package that contains this relationship.</p>\\n"},{"pos":[4734,4750],"content":"RelationshipType","needQuote":true,"nodes":[{"content":"RelationshipType","pos":[0,16]}]},{"content":"\\n&lt;p&gt;The qualified type name of the relationship.&lt;/p&gt;\\n","pos":[5451,5506],"source":"\\n<p>The qualified type name of the relationship.</p>\\n"},{"pos":[5987,5996],"content":"SourceUri","needQuote":true,"nodes":[{"content":"SourceUri","pos":[0,9]}]},{"pos":[7400,7410],"content":"TargetMode","needQuote":true,"nodes":[{"content":"TargetMode","pos":[0,10]}]},{"pos":[9531,9540],"content":"TargetUri","needQuote":true,"nodes":[{"content":"TargetUri","pos":[0,9]}]},{"content":"\\n&lt;p&gt;The URI of the target resource.&lt;/p&gt;\\n","pos":[10210,10252],"source":"\\n<p>The URI of the target resource.</p>\\n"},{"pos":[10713,10732],"content":"System.IO.Packaging","needQuote":true,"nodes":[{"content":"System.IO.Packaging","pos":[0,19]}]},{"pos":[10902,10908],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11068,11078],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[11173,11181],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[11250,11251],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11278,11279],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11349,11357],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[11426,11427],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11454,11455],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11638,11652],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[11771,11777],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[11844,11845],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11895,11901],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11961,11962],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12045,12051],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[12118,12119],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12169,12175],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12235,12236],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12450,12472],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[12620,12626],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[12693,12694],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12744,12750],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[12811,12812]},{"pos":[12867,12873],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12933,12934],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13031,13037],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[13104,13105],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13155,13161],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[13222,13223]},{"pos":[13278,13284],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13344,13345],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13590,13621],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[13787,13802],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[13878,13879],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13929,13935],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[13996,13997]},{"pos":[14052,14058],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14118,14119],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14225,14240],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[14316,14317],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14367,14373],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[14434,14435]},{"pos":[14490,14496],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14556,14557],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14787,14800],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[14901,14912],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[14984,14985],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15012,15013],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15086,15097],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[15169,15170],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15197,15198],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15373,15382],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[15475,15482],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[15550,15551],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15578,15579],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15648,15655],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[15723,15724],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15751,15752],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15927,15944],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[16053,16068],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[16144,16145],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16172,16173],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16250,16265],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[16341,16342],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16369,16370],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16515,16521],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[16652,16658],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[16830,16837],"content":"Package","needQuote":true,"nodes":[{"content":"Package","pos":[0,7]}]},{"pos":[17008,17011],"content":"Uri","needQuote":true,"nodes":[{"content":"Uri","pos":[0,3]}]},{"pos":[17177,17187],"content":"TargetMode","needQuote":true,"nodes":[{"content":"TargetMode","pos":[0,10]}]}],"content":"items:\n- uid: System.IO.Packaging.PackageRelationship\n  commentId: T:System.IO.Packaging.PackageRelationship\n  id: PackageRelationship\n  parent: System.IO.Packaging\n  children:\n  - System.IO.Packaging.PackageRelationship.Id\n  - System.IO.Packaging.PackageRelationship.Package\n  - System.IO.Packaging.PackageRelationship.RelationshipType\n  - System.IO.Packaging.PackageRelationship.SourceUri\n  - System.IO.Packaging.PackageRelationship.TargetMode\n  - System.IO.Packaging.PackageRelationship.TargetUri\n  langs:\n  - csharp\n  - vb\n  name: PackageRelationship\n  fullName: System.IO.Packaging.PackageRelationship\n  type: Class\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: PackageRelationship\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 123\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>Represents an association between a source <xref href=\\\"System.IO.Packaging.Package\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.IO.Packaging.PackagePart\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, and a target object which can be a <xref href=\\\"System.IO.Packaging.PackagePart\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or external resource.</p>\\n\"\n  syntax:\n    content: public class PackageRelationship\n    content.vb: Public Class PackageRelationship\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: PackageRelationship\n- uid: System.IO.Packaging.PackageRelationship.Id\n  commentId: P:System.IO.Packaging.PackageRelationship.Id\n  id: Id\n  parent: System.IO.Packaging.PackageRelationship\n  langs:\n  - csharp\n  - vb\n  name: Id\n  fullName: System.IO.Packaging.PackageRelationship.Id\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Id\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 126\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>Gets a string that identifies the relationship.</p>\\n\"\n  syntax:\n    content: public string Id { get; }\n    content.vb: Public ReadOnly Property Id As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>A string that identifies the relationship.</p>\\n\"\n  seealso:\n  - type: System.IO.Packaging.PackageRelationship.RelationshipType\n    commentId: P:System.IO.Packaging.PackageRelationship.RelationshipType\n  - type: System.IO.Packaging.PackageRelationship.SourceUri\n    commentId: P:System.IO.Packaging.PackageRelationship.SourceUri\n  - type: System.IO.Packaging.PackageRelationship.TargetUri\n    commentId: P:System.IO.Packaging.PackageRelationship.TargetUri\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: PackageRelationship.Id\n- uid: System.IO.Packaging.PackageRelationship.Package\n  commentId: P:System.IO.Packaging.PackageRelationship.Package\n  id: Package\n  parent: System.IO.Packaging.PackageRelationship\n  langs:\n  - csharp\n  - vb\n  name: Package\n  fullName: System.IO.Packaging.PackageRelationship.Package\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Package\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 127\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>Gets the <xref href=\\\"System.IO.Packaging.Package\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains this relationship.</p>\\n\"\n  syntax:\n    content: public Package Package { get; }\n    content.vb: Public ReadOnly Property Package As Package\n    parameters: []\n    return:\n      type: System.IO.Packaging.Package\n      description: \"\\n<p>The package that contains this relationship.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: PackageRelationship.Package\n- uid: System.IO.Packaging.PackageRelationship.RelationshipType\n  commentId: P:System.IO.Packaging.PackageRelationship.RelationshipType\n  id: RelationshipType\n  parent: System.IO.Packaging.PackageRelationship\n  langs:\n  - csharp\n  - vb\n  name: RelationshipType\n  fullName: System.IO.Packaging.PackageRelationship.RelationshipType\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RelationshipType\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 128\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>Gets the qualified type name of the relationship. </p>\\n\"\n  syntax:\n    content: public string RelationshipType { get; }\n    content.vb: Public ReadOnly Property RelationshipType As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The qualified type name of the relationship.</p>\\n\"\n  seealso:\n  - type: System.IO.Packaging.PackageRelationship.Id\n    commentId: P:System.IO.Packaging.PackageRelationship.Id\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: PackageRelationship.RelationshipType\n- uid: System.IO.Packaging.PackageRelationship.SourceUri\n  commentId: P:System.IO.Packaging.PackageRelationship.SourceUri\n  id: SourceUri\n  parent: System.IO.Packaging.PackageRelationship\n  langs:\n  - csharp\n  - vb\n  name: SourceUri\n  fullName: System.IO.Packaging.PackageRelationship.SourceUri\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SourceUri\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 129\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>Gets the URI of the package or part that owns the relationship.</p>\\n\"\n  syntax:\n    content: public Uri SourceUri { get; }\n    content.vb: Public ReadOnly Property SourceUri As Uri\n    parameters: []\n    return:\n      type: System.Uri\n      description: \"\\n<p>The URI of the <xref href=\\\"System.IO.Packaging.Package\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.IO.Packaging.PackagePart\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that owns the relationship.</p>\\n\"\n  seealso:\n  - type: System.IO.Packaging.PackageRelationship.TargetUri\n    commentId: P:System.IO.Packaging.PackageRelationship.TargetUri\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: PackageRelationship.SourceUri\n- uid: System.IO.Packaging.PackageRelationship.TargetMode\n  commentId: P:System.IO.Packaging.PackageRelationship.TargetMode\n  id: TargetMode\n  parent: System.IO.Packaging.PackageRelationship\n  langs:\n  - csharp\n  - vb\n  name: TargetMode\n  fullName: System.IO.Packaging.PackageRelationship.TargetMode\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: TargetMode\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 130\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>Gets a value that indicates whether the target of the relationship is <xref href=\\\"System.IO.Packaging.TargetMode.Internal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.IO.Packaging.TargetMode.External\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to the <xref href=\\\"System.IO.Packaging.Package\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public TargetMode TargetMode { get; }\n    content.vb: Public ReadOnly Property TargetMode As TargetMode\n    parameters: []\n    return:\n      type: System.IO.Packaging.TargetMode\n      description: \"\\n<p>An enumeration value that indicates whether <xref href=\\\"System.IO.Packaging.PackageRelationship.TargetUri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> references a resource <xref href=\\\"System.IO.Packaging.TargetMode.Internal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.IO.Packaging.TargetMode.External\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to the <xref href=\\\"System.IO.Packaging.Package\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  seealso:\n  - type: System.IO.Packaging.PackageRelationship.TargetUri\n    commentId: P:System.IO.Packaging.PackageRelationship.TargetUri\n  - type: System.IO.Packaging.PackageRelationship.SourceUri\n    commentId: P:System.IO.Packaging.PackageRelationship.SourceUri\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: PackageRelationship.TargetMode\n- uid: System.IO.Packaging.PackageRelationship.TargetUri\n  commentId: P:System.IO.Packaging.PackageRelationship.TargetUri\n  id: TargetUri\n  parent: System.IO.Packaging.PackageRelationship\n  langs:\n  - csharp\n  - vb\n  name: TargetUri\n  fullName: System.IO.Packaging.PackageRelationship.TargetUri\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: TargetUri\n    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs\n    startLine: 131\n  assemblies:\n  - System.IO.Packaging\n  namespace: System.IO.Packaging\n  summary: \"\\n<p>Gets the URI of the target resource of the relationship.</p>\\n\"\n  syntax:\n    content: public Uri TargetUri { get; }\n    content.vb: Public ReadOnly Property TargetUri As Uri\n    parameters: []\n    return:\n      type: System.Uri\n      description: \"\\n<p>The URI of the target resource.</p>\\n\"\n  seealso:\n  - type: System.IO.Packaging.PackageRelationship.SourceUri\n    commentId: P:System.IO.Packaging.PackageRelationship.SourceUri\n  - type: System.IO.Packaging.PackageRelationship.TargetMode\n    commentId: P:System.IO.Packaging.PackageRelationship.TargetMode\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: PackageRelationship.TargetUri\nreferences:\n- uid: System.IO.Packaging\n  isExternal: false\n  name: System.IO.Packaging\n  fullName: System.IO.Packaging\n  commentId: N:System.IO.Packaging\n  nameWithType: System.IO.Packaging\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.IO.Packaging.Package\n  parent: System.IO.Packaging\n  isExternal: false\n  name: Package\n  fullName: System.IO.Packaging.Package\n  commentId: T:System.IO.Packaging.Package\n  nameWithType: Package\n- uid: System.Uri\n  parent: System\n  isExternal: false\n  name: Uri\n  fullName: System.Uri\n  commentId: T:System.Uri\n  nameWithType: Uri\n- uid: System.IO.Packaging.TargetMode\n  parent: System.IO.Packaging\n  isExternal: false\n  name: TargetMode\n  fullName: System.IO.Packaging.TargetMode\n  commentId: T:System.IO.Packaging.TargetMode\n  nameWithType: TargetMode\n"}