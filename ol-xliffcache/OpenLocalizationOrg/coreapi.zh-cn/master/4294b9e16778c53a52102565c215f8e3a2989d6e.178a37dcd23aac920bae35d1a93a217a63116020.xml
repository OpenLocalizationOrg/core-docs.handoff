{"nodes":[{"pos":[646,684],"content":"CryptographicAttributeObjectEnumerator","needQuote":true,"nodes":[{"content":"CryptographicAttributeObjectEnumerator","pos":[0,38]}]},{"pos":[2687,2694],"content":"Current","needQuote":true,"nodes":[{"content":"Current","pos":[0,7]}]},{"pos":[4998,5017],"content":"IEnumerator.Current","needQuote":true,"nodes":[{"content":"IEnumerator.Current","pos":[0,19]}]},{"pos":[7138,7148],"content":"MoveNext()","needQuote":true,"nodes":[{"content":"MoveNext()","pos":[0,10]}]},{"pos":[9227,9234],"content":"Reset()","needQuote":true,"nodes":[{"content":"Reset()","pos":[0,7]}]},{"pos":[10713,10741],"content":"System.Security.Cryptography","needQuote":true,"nodes":[{"content":"System.Security.Cryptography","pos":[0,28]}]},{"pos":[10938,10944],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11118,11129],"content":"IEnumerator","needQuote":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[11328,11338],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[11433,11441],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[11510,11511],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11538,11539],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11609,11617],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[11686,11687],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11714,11715],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11898,11912],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[12031,12037],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[12104,12105],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12155,12161],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12221,12222],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12305,12311],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[12378,12379],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12429,12435],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12495,12496],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12710,12732],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[12880,12886],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[12953,12954],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13004,13010],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[13071,13072]},{"pos":[13127,13133],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13193,13194],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13291,13297],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[13364,13365],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13415,13421],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[13482,13483]},{"pos":[13538,13544],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13604,13605],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13850,13881],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[14047,14062],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[14138,14139],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14189,14195],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[14256,14257]},{"pos":[14312,14318],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14378,14379],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14485,14500],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[14576,14577],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14627,14633],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[14694,14695]},{"pos":[14750,14756],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14816,14817],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15047,15060],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[15161,15172],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[15244,15245],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15272,15273],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15346,15357],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[15429,15430],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15457,15458],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15633,15642],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[15735,15742],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[15810,15811],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15838,15839],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15908,15915],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[15983,15984],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16011,16012],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16187,16204],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[16313,16328],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[16404,16405],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16432,16433],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16510,16525],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[16601,16602],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16629,16630],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16775,16781],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[16900,16918],"content":"System.Collections","needQuote":true,"nodes":[{"content":"System.Collections","pos":[0,18]}]},{"pos":[17151,17179],"content":"CryptographicAttributeObject","needQuote":true,"nodes":[{"content":"CryptographicAttributeObject","pos":[0,28]}]},{"pos":[17483,17490],"content":"Current","needQuote":true,"nodes":[{"content":"Current","pos":[0,7]}]},{"pos":[17748,17758],"content":"MoveNext()","needQuote":true,"nodes":[{"content":"MoveNext()","pos":[0,10]}]},{"pos":[17887,17895],"content":"MoveNext","needQuote":true,"nodes":[{"content":"MoveNext","pos":[0,8]}]},{"pos":[17960,17961],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17988,17989],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18076,18084],"content":"MoveNext","needQuote":true,"nodes":[{"content":"MoveNext","pos":[0,8]}]},{"pos":[18149,18150],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18177,18178],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18356,18363],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[18558,18565],"content":"Reset()","needQuote":true,"nodes":[{"content":"Reset()","pos":[0,7]}]},{"pos":[18688,18693],"content":"Reset","needQuote":true,"nodes":[{"content":"Reset","pos":[0,5]}]},{"pos":[18755,18756],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18783,18784],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18868,18873],"content":"Reset","needQuote":true,"nodes":[{"content":"Reset","pos":[0,5]}]},{"pos":[18935,18936],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18963,18964],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]}],"content":"items:\n- uid: System.Security.Cryptography.CryptographicAttributeObjectEnumerator\n  commentId: T:System.Security.Cryptography.CryptographicAttributeObjectEnumerator\n  id: CryptographicAttributeObjectEnumerator\n  parent: System.Security.Cryptography\n  children:\n  - System.Security.Cryptography.CryptographicAttributeObjectEnumerator.Current\n  - System.Security.Cryptography.CryptographicAttributeObjectEnumerator.MoveNext\n  - System.Security.Cryptography.CryptographicAttributeObjectEnumerator.Reset\n  - System.Security.Cryptography.CryptographicAttributeObjectEnumerator.System#Collections#IEnumerator#Current\n  langs:\n  - csharp\n  - vb\n  name: CryptographicAttributeObjectEnumerator\n  fullName: System.Security.Cryptography.CryptographicAttributeObjectEnumerator\n  type: Class\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CryptographicAttributeObjectEnumerator\n    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n    startLine: 32\n  assemblies:\n  - System.Security.Cryptography.Pkcs\n  namespace: System.Security.Cryptography\n  summary: \"\\n<p>Provides enumeration functionality for the <xref href=\\\"System.Security.Cryptography.CryptographicAttributeObjectCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> collection. This class cannot be inherited. </p>\\n\"\n  syntax:\n    content: 'public sealed class CryptographicAttributeObjectEnumerator : IEnumerator'\n    content.vb: >-\n      Public NotInheritable Class CryptographicAttributeObjectEnumerator\n          Implements IEnumerator\n  seealso:\n  - type: System.Security.Cryptography.CryptographicAttributeObjectCollection\n    commentId: T:System.Security.Cryptography.CryptographicAttributeObjectCollection\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.IEnumerator\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: CryptographicAttributeObjectEnumerator\n- uid: System.Security.Cryptography.CryptographicAttributeObjectEnumerator.Current\n  commentId: P:System.Security.Cryptography.CryptographicAttributeObjectEnumerator.Current\n  id: Current\n  parent: System.Security.Cryptography.CryptographicAttributeObjectEnumerator\n  langs:\n  - csharp\n  - vb\n  name: Current\n  fullName: System.Security.Cryptography.CryptographicAttributeObjectEnumerator.Current\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Current\n    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n    startLine: 35\n  assemblies:\n  - System.Security.Cryptography.Pkcs\n  namespace: System.Security.Cryptography\n  summary: \"\\n<p>Gets the current <xref href=\\\"System.Security.Cryptography.CryptographicAttributeObject\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object from the <xref href=\\\"System.Security.Cryptography.CryptographicAttributeObjectCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> collection.</p>\\n\"\n  syntax:\n    content: public CryptographicAttributeObject Current { get; }\n    content.vb: Public ReadOnly Property Current As CryptographicAttributeObject\n    parameters: []\n    return:\n      type: System.Security.Cryptography.CryptographicAttributeObject\n      description: \"\\n<p>A <xref href=\\\"System.Security.Cryptography.CryptographicAttributeObject\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that represents the current cryptographic attribute in the <xref href=\\\"System.Security.Cryptography.CryptographicAttributeObjectCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> collection.</p>\\n\"\n  seealso:\n  - type: System.Security.Cryptography.CryptographicAttributeObject\n    commentId: T:System.Security.Cryptography.CryptographicAttributeObject\n  - type: System.Security.Cryptography.CryptographicAttributeObjectCollection\n    commentId: T:System.Security.Cryptography.CryptographicAttributeObjectCollection\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: CryptographicAttributeObjectEnumerator.Current\n- uid: System.Security.Cryptography.CryptographicAttributeObjectEnumerator.System#Collections#IEnumerator#Current\n  commentId: P:System.Security.Cryptography.CryptographicAttributeObjectEnumerator.System#Collections#IEnumerator#Current\n  id: System#Collections#IEnumerator#Current\n  isEii: true\n  parent: System.Security.Cryptography.CryptographicAttributeObjectEnumerator\n  langs:\n  - csharp\n  - vb\n  name: IEnumerator.Current\n  fullName: System.Security.Cryptography.CryptographicAttributeObjectEnumerator.System.Collections.IEnumerator.Current\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.IEnumerator.Current\n    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n    startLine: 36\n  assemblies:\n  - System.Security.Cryptography.Pkcs\n  namespace: System.Security.Cryptography\n  summary: \"\\n<p>Gets the current <xref href=\\\"System.Security.Cryptography.CryptographicAttributeObject\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object from the <xref href=\\\"System.Security.Cryptography.CryptographicAttributeObjectCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> collection.</p>\\n\"\n  syntax:\n    content: object IEnumerator.Current { get; }\n    content.vb: ReadOnly WriteOnly Property System.Collections.IEnumerator.Current As Object Implements IEnumerator.Current\n    parameters: []\n    return:\n      type: System.Object\n      description: \"\\n<p>A <xref href=\\\"System.Security.Cryptography.CryptographicAttributeObject\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that represents the current cryptographic attribute in the <xref href=\\\"System.Security.Cryptography.CryptographicAttributeObjectCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> collection.</p>\\n\"\n  implements:\n  - System.Collections.IEnumerator.Current\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  name.vb: System.Collections.IEnumerator.Current\n  nameWithType: CryptographicAttributeObjectEnumerator.IEnumerator.Current\n  nameWithType.vb: CryptographicAttributeObjectEnumerator.System.Collections.IEnumerator.Current\n- uid: System.Security.Cryptography.CryptographicAttributeObjectEnumerator.MoveNext\n  commentId: M:System.Security.Cryptography.CryptographicAttributeObjectEnumerator.MoveNext\n  id: MoveNext\n  parent: System.Security.Cryptography.CryptographicAttributeObjectEnumerator\n  langs:\n  - csharp\n  - vb\n  name: MoveNext()\n  fullName: System.Security.Cryptography.CryptographicAttributeObjectEnumerator.MoveNext()\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: MoveNext\n    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n    startLine: 37\n  assemblies:\n  - System.Security.Cryptography.Pkcs\n  namespace: System.Security.Cryptography\n  summary: \"\\n<p>Advances the enumeration to the next <xref href=\\\"System.Security.Cryptography.CryptographicAttributeObject\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object in the <xref href=\\\"System.Security.Cryptography.CryptographicAttributeObjectCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> collection.</p>\\n\"\n  syntax:\n    content: public bool MoveNext()\n    content.vb: Public Function MoveNext As Boolean\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the enumeration successfully moved to the next <xref href=\\\"System.Security.Cryptography.CryptographicAttributeObject\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object; <strong>false</strong> if the enumerator is at the end of the enumeration.</p>\\n\"\n  seealso:\n  - type: System.Security.Cryptography.CryptographicAttributeObject\n    commentId: T:System.Security.Cryptography.CryptographicAttributeObject\n  - type: System.Security.Cryptography.CryptographicAttributeObjectCollection\n    commentId: T:System.Security.Cryptography.CryptographicAttributeObjectCollection\n  implements:\n  - System.Collections.IEnumerator.MoveNext\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: CryptographicAttributeObjectEnumerator.MoveNext()\n- uid: System.Security.Cryptography.CryptographicAttributeObjectEnumerator.Reset\n  commentId: M:System.Security.Cryptography.CryptographicAttributeObjectEnumerator.Reset\n  id: Reset\n  parent: System.Security.Cryptography.CryptographicAttributeObjectEnumerator\n  langs:\n  - csharp\n  - vb\n  name: Reset()\n  fullName: System.Security.Cryptography.CryptographicAttributeObjectEnumerator.Reset()\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Reset\n    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n    startLine: 38\n  assemblies:\n  - System.Security.Cryptography.Pkcs\n  namespace: System.Security.Cryptography\n  summary: \"\\n<p>Resets the enumeration to the first <xref href=\\\"System.Security.Cryptography.CryptographicAttributeObject\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object in the <xref href=\\\"System.Security.Cryptography.CryptographicAttributeObjectCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> collection.</p>\\n\"\n  syntax:\n    content: public void Reset()\n    content.vb: Public Sub Reset\n  seealso:\n  - type: System.Security.Cryptography.CryptographicAttributeObject\n    commentId: T:System.Security.Cryptography.CryptographicAttributeObject\n  - type: System.Security.Cryptography.CryptographicAttributeObjectCollection\n    commentId: T:System.Security.Cryptography.CryptographicAttributeObjectCollection\n  implements:\n  - System.Collections.IEnumerator.Reset\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: CryptographicAttributeObjectEnumerator.Reset()\nreferences:\n- uid: System.Security.Cryptography\n  isExternal: false\n  name: System.Security.Cryptography\n  fullName: System.Security.Cryptography\n  commentId: N:System.Security.Cryptography\n  nameWithType: System.Security.Cryptography\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  fullName: System.Collections.IEnumerator\n  commentId: T:System.Collections.IEnumerator\n  nameWithType: IEnumerator\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Collections\n  isExternal: false\n  name: System.Collections\n  fullName: System.Collections\n  commentId: N:System.Collections\n  nameWithType: System.Collections\n- uid: System.Security.Cryptography.CryptographicAttributeObject\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CryptographicAttributeObject\n  fullName: System.Security.Cryptography.CryptographicAttributeObject\n  commentId: T:System.Security.Cryptography.CryptographicAttributeObject\n  nameWithType: CryptographicAttributeObject\n- uid: System.Collections.IEnumerator.Current\n  parent: System.Collections.IEnumerator\n  isExternal: false\n  name: Current\n  fullName: System.Collections.IEnumerator.Current\n  commentId: P:System.Collections.IEnumerator.Current\n  nameWithType: IEnumerator.Current\n- uid: System.Collections.IEnumerator.MoveNext\n  parent: System.Collections.IEnumerator\n  isExternal: false\n  name: MoveNext()\n  fullName: System.Collections.IEnumerator.MoveNext()\n  spec.csharp:\n  - uid: System.Collections.IEnumerator.MoveNext\n    name: MoveNext\n    fullName: System.Collections.IEnumerator.MoveNext\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.IEnumerator.MoveNext\n    name: MoveNext\n    fullName: System.Collections.IEnumerator.MoveNext\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.IEnumerator.MoveNext\n  nameWithType: IEnumerator.MoveNext()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.Collections.IEnumerator.Reset\n  parent: System.Collections.IEnumerator\n  isExternal: false\n  name: Reset()\n  fullName: System.Collections.IEnumerator.Reset()\n  spec.csharp:\n  - uid: System.Collections.IEnumerator.Reset\n    name: Reset\n    fullName: System.Collections.IEnumerator.Reset\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.IEnumerator.Reset\n    name: Reset\n    fullName: System.Collections.IEnumerator.Reset\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.IEnumerator.Reset\n  nameWithType: IEnumerator.Reset()\n"}