{"nodes":[{"pos":[403,420],"content":"XmlImplementation","needQuote":true,"nodes":[{"content":"XmlImplementation","pos":[0,17]}]},{"pos":[1683,1702],"content":"XmlImplementation()","needQuote":true,"nodes":[{"content":"XmlImplementation()","pos":[0,19]}]},{"pos":[2712,2743],"content":"XmlImplementation(XmlNameTable)","needQuote":true,"nodes":[{"content":"XmlImplementation(XmlNameTable)","pos":[0,31]}]},{"pos":[4068,4084],"content":"CreateDocument()","needQuote":true,"nodes":[{"content":"CreateDocument()","pos":[0,16]}]},{"content":"\\n&lt;p&gt;The new &lt;strong&gt;XmlDocument&lt;/strong&gt; object.&lt;/p&gt;\\n","pos":[4823,4878],"source":"\\n<p>The new <strong>XmlDocument</strong> object.</p>\\n"},{"pos":[5377,5403],"content":"HasFeature(String, String)","needQuote":true,"nodes":[{"content":"HasFeature(String, String)","pos":[0,26]}]},{"content":"\\n&lt;p&gt;The package name of the feature to test.","pos":[6208,6253],"source":"\\n<p>The package name of the feature to test."},{"content":"This name is not case-sensitive.","pos":[6254,6286]},{"content":"&lt;/p&gt;\\n","pos":[6287,6293],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;This is the version number of the package name to test.","pos":[6362,6422],"source":"\\n<p>This is the version number of the package name to test."},{"content":"If the version is not specified (&lt;strong&gt;null&lt;/strong&gt;), supporting any version of the feature causes the method to return &lt;strong&gt;true&lt;/strong&gt;.","pos":[6423,6568],"source":" If the version is not specified (<strong>null</strong>), supporting any version of the feature causes the method to return <strong>true</strong>."},{"content":"&lt;/p&gt;\\n","pos":[6569,6575],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the feature is implemented in the specified version; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n&lt;p&gt;The following table shows the combinations that cause &lt;strong&gt;HasFeature&lt;/strong&gt; to return &lt;strong&gt;true&lt;/strong&gt;.&lt;/p&gt;\\n&lt;p&gt;strFeature &lt;/p&gt;\\n&lt;p&gt;strVersion &lt;/p&gt;\\n&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;\\n&lt;p&gt;XML &lt;/p&gt;\\n&lt;/td&gt;&lt;td&gt;\\n&lt;p&gt;1.0 &lt;/p&gt;\\n&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;\\n&lt;p&gt;XML &lt;/p&gt;\\n&lt;/td&gt;&lt;td&gt;\\n&lt;p&gt;2.0 &lt;/p&gt;\\n&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\\n","pos":[6636,7070],"source":"\\n<p>\\n<strong>true</strong> if the feature is implemented in the specified version; otherwise, <strong>false</strong>.</p>\\n<p>The following table shows the combinations that cause <strong>HasFeature</strong> to return <strong>true</strong>.</p>\\n<p>strFeature </p>\\n<p>strVersion </p>\\n<table><tbody><tr><td>\\n<p>XML </p>\\n</td><td>\\n<p>1.0 </p>\\n</td></tr><tr><td>\\n<p>XML </p>\\n</td><td>\\n<p>2.0 </p>\\n</td></tr></tbody></table>\\n"},{"pos":[7249,7259],"content":"System.Xml","needQuote":true,"nodes":[{"content":"System.Xml","pos":[0,10]}]},{"pos":[7402,7408],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7568,7578],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[7673,7681],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[7750,7751],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7778,7779],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7849,7857],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[7926,7927],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7954,7955],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8138,8152],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[8271,8277],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[8344,8345],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8395,8401],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8461,8462],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8545,8551],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[8618,8619],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8669,8675],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8735,8736],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8950,8972],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[9120,9126],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[9193,9194],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9244,9250],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[9311,9312]},{"pos":[9367,9373],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9433,9434],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9531,9537],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[9604,9605],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9655,9661],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[9722,9723]},{"pos":[9778,9784],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9844,9845],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10090,10121],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[10287,10302],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[10378,10379],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10429,10435],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[10496,10497]},{"pos":[10552,10558],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10618,10619],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10725,10740],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[10816,10817],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10867,10873],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[10934,10935]},{"pos":[10990,10996],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11056,11057],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11287,11300],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[11401,11412],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[11484,11485],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11512,11513],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11586,11597],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[11669,11670],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11697,11698],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11873,11882],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[11975,11982],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[12050,12051],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12078,12079],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12148,12155],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[12223,12224],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12251,12252],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12427,12444],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[12553,12568],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[12644,12645],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12672,12673],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12750,12765],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[12841,12842],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12869,12870],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13015,13021],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[13166,13178],"content":"XmlNameTable","needQuote":true,"nodes":[{"content":"XmlNameTable","pos":[0,12]}]},{"pos":[13362,13373],"content":"XmlDocument","needQuote":true,"nodes":[{"content":"XmlDocument","pos":[0,11]}]},{"pos":[13541,13547],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[13693,13700],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]}],"content":"items:\n- uid: System.Xml.XmlImplementation\n  commentId: T:System.Xml.XmlImplementation\n  id: XmlImplementation\n  parent: System.Xml\n  children:\n  - System.Xml.XmlImplementation.#ctor\n  - System.Xml.XmlImplementation.#ctor(System.Xml.XmlNameTable)\n  - System.Xml.XmlImplementation.CreateDocument\n  - System.Xml.XmlImplementation.HasFeature(System.String,System.String)\n  langs:\n  - csharp\n  - vb\n  name: XmlImplementation\n  fullName: System.Xml.XmlImplementation\n  type: Class\n  source:\n    remote:\n      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: XmlImplementation\n    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n    startLine: 216\n  assemblies:\n  - System.Xml.XmlDocument\n  namespace: System.Xml\n  summary: \"\\n<p>Defines the context for a set of <xref href=\\\"System.Xml.XmlDocument\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects.</p>\\n\"\n  syntax:\n    content: public class XmlImplementation\n    content.vb: Public Class XmlImplementation\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: XmlImplementation\n- uid: System.Xml.XmlImplementation.#ctor\n  commentId: M:System.Xml.XmlImplementation.#ctor\n  id: '#ctor'\n  parent: System.Xml.XmlImplementation\n  langs:\n  - csharp\n  - vb\n  name: XmlImplementation()\n  fullName: System.Xml.XmlImplementation.XmlImplementation()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n    startLine: 218\n  assemblies:\n  - System.Xml.XmlDocument\n  namespace: System.Xml\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Xml.XmlImplementation\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public XmlImplementation()\n    content.vb: Public Sub New\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XmlImplementation.XmlImplementation()\n- uid: System.Xml.XmlImplementation.#ctor(System.Xml.XmlNameTable)\n  commentId: M:System.Xml.XmlImplementation.#ctor(System.Xml.XmlNameTable)\n  id: '#ctor(System.Xml.XmlNameTable)'\n  parent: System.Xml.XmlImplementation\n  langs:\n  - csharp\n  - vb\n  name: XmlImplementation(XmlNameTable)\n  fullName: System.Xml.XmlImplementation.XmlImplementation(System.Xml.XmlNameTable)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n    startLine: 219\n  assemblies:\n  - System.Xml.XmlDocument\n  namespace: System.Xml\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Xml.XmlImplementation\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the <xref href=\\\"System.Xml.XmlNameTable\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> specified.</p>\\n\"\n  syntax:\n    content: public XmlImplementation(XmlNameTable nt)\n    content.vb: Public Sub New(nt As XmlNameTable)\n    parameters:\n    - id: nt\n      type: System.Xml.XmlNameTable\n      description: \"\\n<p>An <xref href=\\\"System.Xml.XmlNameTable\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XmlImplementation.XmlImplementation(XmlNameTable)\n- uid: System.Xml.XmlImplementation.CreateDocument\n  commentId: M:System.Xml.XmlImplementation.CreateDocument\n  id: CreateDocument\n  parent: System.Xml.XmlImplementation\n  langs:\n  - csharp\n  - vb\n  name: CreateDocument()\n  fullName: System.Xml.XmlImplementation.CreateDocument()\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CreateDocument\n    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n    startLine: 220\n  assemblies:\n  - System.Xml.XmlDocument\n  namespace: System.Xml\n  summary: \"\\n<p>Creates a new <xref href=\\\"System.Xml.XmlDocument\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public virtual XmlDocument CreateDocument()\n    content.vb: Public Overridable Function CreateDocument As XmlDocument\n    return:\n      type: System.Xml.XmlDocument\n      description: \"\\n<p>The new <strong>XmlDocument</strong> object.</p>\\n\"\n  seealso:\n  - type: System.Xml.NameTable\n    commentId: T:System.Xml.NameTable\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XmlImplementation.CreateDocument()\n- uid: System.Xml.XmlImplementation.HasFeature(System.String,System.String)\n  commentId: M:System.Xml.XmlImplementation.HasFeature(System.String,System.String)\n  id: HasFeature(System.String,System.String)\n  parent: System.Xml.XmlImplementation\n  langs:\n  - csharp\n  - vb\n  name: HasFeature(String, String)\n  fullName: System.Xml.XmlImplementation.HasFeature(System.String, System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: HasFeature\n    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n    startLine: 221\n  assemblies:\n  - System.Xml.XmlDocument\n  namespace: System.Xml\n  summary: \"\\n<p>Tests if the Document Object Model (DOM) implementation implements a specific feature.</p>\\n\"\n  syntax:\n    content: public bool HasFeature(string strFeature, string strVersion)\n    content.vb: Public Function HasFeature(strFeature As String, strVersion As String) As Boolean\n    parameters:\n    - id: strFeature\n      type: System.String\n      description: \"\\n<p>The package name of the feature to test. This name is not case-sensitive. </p>\\n\"\n    - id: strVersion\n      type: System.String\n      description: \"\\n<p>This is the version number of the package name to test. If the version is not specified (<strong>null</strong>), supporting any version of the feature causes the method to return <strong>true</strong>. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the feature is implemented in the specified version; otherwise, <strong>false</strong>.</p>\\n<p>The following table shows the combinations that cause <strong>HasFeature</strong> to return <strong>true</strong>.</p>\\n<p>strFeature </p>\\n<p>strVersion </p>\\n<table><tbody><tr><td>\\n<p>XML </p>\\n</td><td>\\n<p>1.0 </p>\\n</td></tr><tr><td>\\n<p>XML </p>\\n</td><td>\\n<p>2.0 </p>\\n</td></tr></tbody></table>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XmlImplementation.HasFeature(String, String)\nreferences:\n- uid: System.Xml\n  isExternal: false\n  name: System.Xml\n  fullName: System.Xml\n  commentId: N:System.Xml\n  nameWithType: System.Xml\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Xml.XmlNameTable\n  parent: System.Xml\n  isExternal: false\n  name: XmlNameTable\n  fullName: System.Xml.XmlNameTable\n  commentId: T:System.Xml.XmlNameTable\n  nameWithType: XmlNameTable\n- uid: System.Xml.XmlDocument\n  parent: System.Xml\n  isExternal: false\n  name: XmlDocument\n  fullName: System.Xml.XmlDocument\n  commentId: T:System.Xml.XmlDocument\n  nameWithType: XmlDocument\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n"}