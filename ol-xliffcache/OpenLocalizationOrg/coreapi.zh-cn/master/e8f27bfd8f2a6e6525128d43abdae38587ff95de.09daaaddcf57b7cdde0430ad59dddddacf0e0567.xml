{"nodes":[{"pos":[829,834],"content":"Point","needQuote":true,"nodes":[{"content":"Point","pos":[0,5]}]},{"pos":[2522,2543],"content":"Point(Double, Double)","needQuote":true,"nodes":[{"content":"Point(Double, Double)","pos":[0,21]}]},{"pos":[3467,3468],"content":"X","needQuote":true,"nodes":[{"content":"X","pos":[0,1]}]},{"pos":[4296,4297],"content":"Y","needQuote":true,"nodes":[{"content":"Y","pos":[0,1]}]},{"pos":[5185,5199],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[6521,6534],"content":"Equals(Point)","needQuote":true,"nodes":[{"content":"Equals(Point)","pos":[0,13]}]},{"pos":[7497,7510],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[8840,8862],"content":"Equality(Point, Point)","needQuote":true,"nodes":[{"content":"Equality(Point, Point)","pos":[0,22]}]},{"pos":[10152,10176],"content":"Inequality(Point, Point)","needQuote":true,"nodes":[{"content":"Inequality(Point, Point)","pos":[0,24]}]},{"pos":[11305,11315],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[12540,12565],"content":"ToString(IFormatProvider)","needQuote":true,"nodes":[{"content":"ToString(IFormatProvider)","pos":[0,25]}]},{"pos":[13752,13798],"content":"IFormattable.ToString(String, IFormatProvider)","needQuote":true,"nodes":[{"content":"IFormattable.ToString(String, IFormatProvider)","pos":[0,46]}]},{"pos":[15338,15356],"content":"Windows.Foundation","needQuote":true,"nodes":[{"content":"Windows.Foundation","pos":[0,18]}]},{"pos":[15530,15542],"content":"IFormattable","needQuote":true,"nodes":[{"content":"IFormattable","pos":[0,12]}]},{"pos":[15777,15799],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[15993,15999],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[16098,16099],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16169,16175],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[16261,16262]},{"pos":[16340,16346],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16431,16432],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16549,16555],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[16654,16655],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16725,16731],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[16817,16818]},{"pos":[16896,16902],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16987,16988],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17216,17247],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[17468,17483],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[17600,17601],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17671,17677],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[17763,17764]},{"pos":[17842,17848],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17933,17934],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18060,18075],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[18192,18193],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18263,18269],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[18355,18356]},{"pos":[18434,18440],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18525,18526],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18680,18689],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[18815,18822],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[18923,18924],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18971,18972],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19061,19068],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[19169,19170],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19217,19218],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19319,19325],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[19463,19469],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[19614,19620],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[19824,19838],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[20004,20010],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[20094,20095],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20165,20171],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[20256,20257],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20363,20369],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[20453,20454],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20524,20530],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[20615,20616],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20750,20757],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[20910,20919],"content":"ValueType","needQuote":true,"nodes":[{"content":"ValueType","pos":[0,9]}]},{"pos":[21104,21109],"content":"Point","needQuote":true,"nodes":[{"content":"Point","pos":[0,5]}]},{"pos":[21304,21317],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[21464,21475],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[21569,21570],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21617,21618],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21714,21725],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[21819,21820],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21867,21868],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21998,22003],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[22180,22190],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[22328,22336],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[22424,22425],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22472,22473],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22566,22574],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[22662,22663],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22710,22711],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22843,22849],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[23012,23027],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[23308,23341],"content":"ToString(String, IFormatProvider)","needQuote":true,"nodes":[{"content":"ToString(String, IFormatProvider)","pos":[0,33]}]},{"pos":[23586,23594],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[23688,23689],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23759,23765],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[23851,23852]},{"pos":[23939,23954],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[24036,24037],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24171,24179],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[24273,24274],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24344,24350],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[24436,24437]},{"pos":[24524,24539],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[24621,24622],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]}],"content":"items:\n- uid: Windows.Foundation.Point\n  commentId: T:Windows.Foundation.Point\n  id: Point\n  parent: Windows.Foundation\n  children:\n  - Windows.Foundation.Point.#ctor(System.Double,System.Double)\n  - Windows.Foundation.Point.Equals(System.Object)\n  - Windows.Foundation.Point.Equals(Windows.Foundation.Point)\n  - Windows.Foundation.Point.GetHashCode\n  - Windows.Foundation.Point.op_Equality(Windows.Foundation.Point,Windows.Foundation.Point)\n  - Windows.Foundation.Point.op_Inequality(Windows.Foundation.Point,Windows.Foundation.Point)\n  - Windows.Foundation.Point.System#IFormattable#ToString(System.String,System.IFormatProvider)\n  - Windows.Foundation.Point.ToString\n  - Windows.Foundation.Point.ToString(System.IFormatProvider)\n  - Windows.Foundation.Point.X\n  - Windows.Foundation.Point.Y\n  langs:\n  - csharp\n  - vb\n  name: Point\n  nameWithType: Point\n  fullName: Windows.Foundation.Point\n  type: Struct\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.Manual.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Point\n    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.Manual.cs\n    startLine: 18\n  assemblies:\n  - System.Runtime.WindowsRuntime\n  namespace: Windows.Foundation\n  syntax:\n    content: >-\n      [SecurityCritical]\n\n      [StructLayout(LayoutKind.Sequential)]\n\n      public struct Point : IFormattable\n    content.vb: >-\n      <SecurityCritical>\n\n      <StructLayout(LayoutKind.Sequential)>\n\n      Public Structure Point\n          Implements IFormattable\n  implements:\n  - System.IFormattable\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n    ctor: System.Security.SecurityCriticalAttribute.#ctor\n    arguments: []\n  - type: System.Runtime.InteropServices.StructLayoutAttribute\n    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)\n    arguments:\n    - type: System.Runtime.InteropServices.LayoutKind\n      value: 0\n  modifiers.csharp:\n  - public\n  - struct\n  modifiers.vb:\n  - Public\n  - Structure\n- uid: Windows.Foundation.Point.#ctor(System.Double,System.Double)\n  commentId: M:Windows.Foundation.Point.#ctor(System.Double,System.Double)\n  id: '#ctor(System.Double,System.Double)'\n  parent: Windows.Foundation.Point\n  langs:\n  - csharp\n  - vb\n  name: Point(Double, Double)\n  nameWithType: Point.Point(Double, Double)\n  fullName: Windows.Foundation.Point.Point(System.Double, System.Double)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n    startLine: 138\n  assemblies:\n  - System.Runtime.WindowsRuntime\n  namespace: Windows.Foundation\n  syntax:\n    content: public Point(double x, double y)\n    content.vb: Public Sub New(x As Double, y As Double)\n    parameters:\n    - id: x\n      type: System.Double\n    - id: y\n      type: System.Double\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n- uid: Windows.Foundation.Point.X\n  commentId: P:Windows.Foundation.Point.X\n  id: X\n  parent: Windows.Foundation.Point\n  langs:\n  - csharp\n  - vb\n  name: X\n  nameWithType: Point.X\n  fullName: Windows.Foundation.Point.X\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: X\n    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n    startLine: 139\n  assemblies:\n  - System.Runtime.WindowsRuntime\n  namespace: Windows.Foundation\n  syntax:\n    content: public double X { get; set; }\n    content.vb: Public Property X As Double\n    parameters: []\n    return:\n      type: System.Double\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n- uid: Windows.Foundation.Point.Y\n  commentId: P:Windows.Foundation.Point.Y\n  id: Y\n  parent: Windows.Foundation.Point\n  langs:\n  - csharp\n  - vb\n  name: Y\n  nameWithType: Point.Y\n  fullName: Windows.Foundation.Point.Y\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Y\n    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n    startLine: 140\n  assemblies:\n  - System.Runtime.WindowsRuntime\n  namespace: Windows.Foundation\n  syntax:\n    content: public double Y { get; set; }\n    content.vb: Public Property Y As Double\n    parameters: []\n    return:\n      type: System.Double\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n- uid: Windows.Foundation.Point.Equals(System.Object)\n  commentId: M:Windows.Foundation.Point.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: Windows.Foundation.Point\n  langs:\n  - csharp\n  - vb\n  name: Equals(Object)\n  nameWithType: Point.Equals(Object)\n  fullName: Windows.Foundation.Point.Equals(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Equals\n    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n    startLine: 141\n  assemblies:\n  - System.Runtime.WindowsRuntime\n  namespace: Windows.Foundation\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public override bool Equals(object o)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Overrides Function Equals(o As Object) As Boolean\n    parameters:\n    - id: o\n      type: System.Object\n    return:\n      type: System.Boolean\n  overridden: System.ValueType.Equals(System.Object)\n  attributes:\n  - type: System.Security.SecuritySafeCriticalAttribute\n    ctor: System.Security.SecuritySafeCriticalAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n- uid: Windows.Foundation.Point.Equals(Windows.Foundation.Point)\n  commentId: M:Windows.Foundation.Point.Equals(Windows.Foundation.Point)\n  id: Equals(Windows.Foundation.Point)\n  parent: Windows.Foundation.Point\n  langs:\n  - csharp\n  - vb\n  name: Equals(Point)\n  nameWithType: Point.Equals(Point)\n  fullName: Windows.Foundation.Point.Equals(Windows.Foundation.Point)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Equals\n    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n    startLine: 143\n  assemblies:\n  - System.Runtime.WindowsRuntime\n  namespace: Windows.Foundation\n  syntax:\n    content: public bool Equals(Point value)\n    content.vb: Public Function Equals(value As Point) As Boolean\n    parameters:\n    - id: value\n      type: Windows.Foundation.Point\n    return:\n      type: System.Boolean\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n- uid: Windows.Foundation.Point.GetHashCode\n  commentId: M:Windows.Foundation.Point.GetHashCode\n  id: GetHashCode\n  parent: Windows.Foundation.Point\n  langs:\n  - csharp\n  - vb\n  name: GetHashCode()\n  nameWithType: Point.GetHashCode()\n  fullName: Windows.Foundation.Point.GetHashCode()\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetHashCode\n    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n    startLine: 144\n  assemblies:\n  - System.Runtime.WindowsRuntime\n  namespace: Windows.Foundation\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public override int GetHashCode()\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Overrides Function GetHashCode As Integer\n    return:\n      type: System.Int32\n  overridden: System.ValueType.GetHashCode\n  attributes:\n  - type: System.Security.SecuritySafeCriticalAttribute\n    ctor: System.Security.SecuritySafeCriticalAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n- uid: Windows.Foundation.Point.op_Equality(Windows.Foundation.Point,Windows.Foundation.Point)\n  commentId: M:Windows.Foundation.Point.op_Equality(Windows.Foundation.Point,Windows.Foundation.Point)\n  id: op_Equality(Windows.Foundation.Point,Windows.Foundation.Point)\n  parent: Windows.Foundation.Point\n  langs:\n  - csharp\n  - vb\n  name: Equality(Point, Point)\n  nameWithType: Point.Equality(Point, Point)\n  fullName: Windows.Foundation.Point.Equality(Windows.Foundation.Point, Windows.Foundation.Point)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Equality\n    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n    startLine: 146\n  assemblies:\n  - System.Runtime.WindowsRuntime\n  namespace: Windows.Foundation\n  syntax:\n    content: public static bool operator ==(Point point1, Point point2)\n    content.vb: Public Shared Operator =(point1 As Point, point2 As Point) As Boolean\n    parameters:\n    - id: point1\n      type: Windows.Foundation.Point\n    - id: point2\n      type: Windows.Foundation.Point\n    return:\n      type: System.Boolean\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n- uid: Windows.Foundation.Point.op_Inequality(Windows.Foundation.Point,Windows.Foundation.Point)\n  commentId: M:Windows.Foundation.Point.op_Inequality(Windows.Foundation.Point,Windows.Foundation.Point)\n  id: op_Inequality(Windows.Foundation.Point,Windows.Foundation.Point)\n  parent: Windows.Foundation.Point\n  langs:\n  - csharp\n  - vb\n  name: Inequality(Point, Point)\n  nameWithType: Point.Inequality(Point, Point)\n  fullName: Windows.Foundation.Point.Inequality(Windows.Foundation.Point, Windows.Foundation.Point)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Inequality\n    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n    startLine: 147\n  assemblies:\n  - System.Runtime.WindowsRuntime\n  namespace: Windows.Foundation\n  syntax:\n    content: public static bool operator !=(Point point1, Point point2)\n    content.vb: Public Shared Operator <>(point1 As Point, point2 As Point) As Boolean\n    parameters:\n    - id: point1\n      type: Windows.Foundation.Point\n    - id: point2\n      type: Windows.Foundation.Point\n    return:\n      type: System.Boolean\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n- uid: Windows.Foundation.Point.ToString\n  commentId: M:Windows.Foundation.Point.ToString\n  id: ToString\n  parent: Windows.Foundation.Point\n  langs:\n  - csharp\n  - vb\n  name: ToString()\n  nameWithType: Point.ToString()\n  fullName: Windows.Foundation.Point.ToString()\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ToString\n    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n    startLine: 148\n  assemblies:\n  - System.Runtime.WindowsRuntime\n  namespace: Windows.Foundation\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public override string ToString()\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Overrides Function ToString As String\n    return:\n      type: System.String\n  overridden: System.ValueType.ToString\n  attributes:\n  - type: System.Security.SecuritySafeCriticalAttribute\n    ctor: System.Security.SecuritySafeCriticalAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n- uid: Windows.Foundation.Point.ToString(System.IFormatProvider)\n  commentId: M:Windows.Foundation.Point.ToString(System.IFormatProvider)\n  id: ToString(System.IFormatProvider)\n  parent: Windows.Foundation.Point\n  langs:\n  - csharp\n  - vb\n  name: ToString(IFormatProvider)\n  nameWithType: Point.ToString(IFormatProvider)\n  fullName: Windows.Foundation.Point.ToString(System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ToString\n    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n    startLine: 150\n  assemblies:\n  - System.Runtime.WindowsRuntime\n  namespace: Windows.Foundation\n  syntax:\n    content: public string ToString(IFormatProvider provider)\n    content.vb: Public Function ToString(provider As IFormatProvider) As String\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n    return:\n      type: System.String\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n- uid: Windows.Foundation.Point.System#IFormattable#ToString(System.String,System.IFormatProvider)\n  commentId: M:Windows.Foundation.Point.System#IFormattable#ToString(System.String,System.IFormatProvider)\n  id: System#IFormattable#ToString(System.String,System.IFormatProvider)\n  isEii: true\n  parent: Windows.Foundation.Point\n  langs:\n  - csharp\n  - vb\n  name: IFormattable.ToString(String, IFormatProvider)\n  nameWithType: Point.IFormattable.ToString(String, IFormatProvider)\n  fullName: Windows.Foundation.Point.System.IFormattable.ToString(System.String, System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.Manual.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.IFormattable.ToString\n    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.Manual.cs\n    startLine: 20\n  assemblies:\n  - System.Runtime.WindowsRuntime\n  namespace: Windows.Foundation\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      string IFormattable.ToString(string format, IFormatProvider provider)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Function System.IFormattable.ToString(format As String, provider As IFormatProvider) As String Implements IFormattable.ToString\n    parameters:\n    - id: format\n      type: System.String\n    - id: provider\n      type: System.IFormatProvider\n    return:\n      type: System.String\n  implements:\n  - System.IFormattable.ToString(System.String,System.IFormatProvider)\n  attributes:\n  - type: System.Security.SecuritySafeCriticalAttribute\n    ctor: System.Security.SecuritySafeCriticalAttribute.#ctor\n    arguments: []\n  nameWithType.vb: Point.System.IFormattable.ToString(String, IFormatProvider)\n  name.vb: System.IFormattable.ToString(String, IFormatProvider)\nreferences:\n- uid: Windows.Foundation\n  commentId: N:Windows.Foundation\n  isExternal: false\n  name: Windows.Foundation\n  nameWithType: Windows.Foundation\n  fullName: Windows.Foundation\n- uid: System.IFormattable\n  commentId: T:System.IFormattable\n  parent: System\n  isExternal: false\n  name: IFormattable\n  nameWithType: IFormattable\n  fullName: System.IFormattable\n- uid: System.Object.Equals(System.Object,System.Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    nameWithType: Object.Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    nameWithType: Object.Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    nameWithType: Object.ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    nameWithType: Object.ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.GetType\n  commentId: M:System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    nameWithType: Object.GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    nameWithType: Object.GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System\n  commentId: N:System\n  isExternal: false\n  name: System\n  nameWithType: System\n  fullName: System\n- uid: System.Object\n  commentId: T:System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Double\n  commentId: T:System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.ValueType.Equals(System.Object)\n  commentId: M:System.ValueType.Equals(System.Object)\n  parent: System.ValueType\n  isExternal: true\n  name: Equals(Object)\n  nameWithType: ValueType.Equals(Object)\n  fullName: System.ValueType.Equals(System.Object)\n  spec.csharp:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    nameWithType: ValueType.Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    nameWithType: ValueType.Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Boolean\n  commentId: T:System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ValueType\n  commentId: T:System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  nameWithType: ValueType\n  fullName: System.ValueType\n- uid: Windows.Foundation.Point\n  commentId: T:Windows.Foundation.Point\n  parent: Windows.Foundation\n  isExternal: false\n  name: Point\n  nameWithType: Point\n  fullName: Windows.Foundation.Point\n- uid: System.ValueType.GetHashCode\n  commentId: M:System.ValueType.GetHashCode\n  parent: System.ValueType\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: ValueType.GetHashCode()\n  fullName: System.ValueType.GetHashCode()\n  spec.csharp:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    nameWithType: ValueType.GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    nameWithType: ValueType.GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Int32\n  commentId: T:System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ValueType.ToString\n  commentId: M:System.ValueType.ToString\n  parent: System.ValueType\n  isExternal: false\n  name: ToString()\n  nameWithType: ValueType.ToString()\n  fullName: System.ValueType.ToString()\n  spec.csharp:\n  - uid: System.ValueType.ToString\n    name: ToString\n    nameWithType: ValueType.ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.ToString\n    name: ToString\n    nameWithType: ValueType.ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.String\n  commentId: T:System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IFormatProvider\n  commentId: T:System.IFormatProvider\n  parent: System\n  isExternal: false\n  name: IFormatProvider\n  nameWithType: IFormatProvider\n  fullName: System.IFormatProvider\n- uid: System.IFormattable.ToString(System.String,System.IFormatProvider)\n  commentId: M:System.IFormattable.ToString(System.String,System.IFormatProvider)\n  parent: System.IFormattable\n  isExternal: true\n  name: ToString(String, IFormatProvider)\n  nameWithType: IFormattable.ToString(String, IFormatProvider)\n  fullName: System.IFormattable.ToString(System.String, System.IFormatProvider)\n  spec.csharp:\n  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)\n    name: ToString\n    nameWithType: IFormattable.ToString\n    fullName: System.IFormattable.ToString\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    nameWithType: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)\n    name: ToString\n    nameWithType: IFormattable.ToString\n    fullName: System.IFormattable.ToString\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    nameWithType: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    nameWithType: )\n    fullName: )\n"}