{"nodes":[{"pos":[337,357],"content":"DllNotFoundException","needQuote":true,"nodes":[{"content":"DllNotFoundException","pos":[0,20]}]},{"pos":[2584,2606],"content":"DllNotFoundException()","needQuote":true,"nodes":[{"content":"DllNotFoundException()","pos":[0,22]}]},{"pos":[3603,3631],"content":"DllNotFoundException(String)","needQuote":true,"nodes":[{"content":"DllNotFoundException(String)","pos":[0,28]}]},{"content":"\\n&lt;p&gt;The error message that explains the reason for the exception.","pos":[4421,4487],"source":"\\n<p>The error message that explains the reason for the exception."},{"content":"&lt;/p&gt;\\n","pos":[4488,4494],"source":" </p>\\n"},{"pos":[4893,4932],"content":"DllNotFoundException(String, Exception)","needQuote":true,"nodes":[{"content":"DllNotFoundException(String, Exception)","pos":[0,39]}]},{"content":"\\n&lt;p&gt;The error message that explains the reason for the exception.","pos":[5852,5918],"source":"\\n<p>The error message that explains the reason for the exception."},{"content":"&lt;/p&gt;\\n","pos":[5919,5925],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The exception that is the cause of the current exception.","pos":[5992,6054],"source":"\\n<p>The exception that is the cause of the current exception."},{"content":"If the &lt;em&gt;inner&lt;/em&gt; parameter is not &lt;strong&gt;null&lt;/strong&gt;, the current exception is raised in a &lt;strong&gt;catch&lt;/strong&gt; block that handles the inner exception.","pos":[6055,6216],"source":" If the <em>inner</em> parameter is not <strong>null</strong>, the current exception is raised in a <strong>catch</strong> block that handles the inner exception."},{"content":"&lt;/p&gt;\\n","pos":[6217,6223],"source":" </p>\\n"},{"pos":[6486,6492],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[6623,6629],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6777,6786],"content":"Exception","needQuote":true,"nodes":[{"content":"Exception","pos":[0,9]}]},{"pos":[6948,6963],"content":"SystemException","needQuote":true,"nodes":[{"content":"SystemException","pos":[0,15]}]},{"pos":[7146,7163],"content":"TypeLoadException","needQuote":true,"nodes":[{"content":"TypeLoadException","pos":[0,17]}]},{"pos":[7392,7402],"content":"_Exception","needQuote":true,"nodes":[{"content":"_Exception","pos":[0,10]}]},{"pos":[7658,7671],"content":"ISerializable","needQuote":true,"nodes":[{"content":"ISerializable","pos":[0,13]}]},{"pos":[8017,8067],"content":"GetObjectData(SerializationInfo, StreamingContext)","needQuote":true,"nodes":[{"content":"GetObjectData(SerializationInfo, StreamingContext)","pos":[0,50]}]},{"pos":[8381,8394],"content":"GetObjectData","needQuote":true,"nodes":[{"content":"GetObjectData","pos":[0,13]}]},{"pos":[8479,8480],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8563,8580],"content":"SerializationInfo","needQuote":true,"nodes":[{"content":"SerializationInfo","pos":[0,17]}]},{"content":",","pos":[8674,8675]},{"pos":[8762,8778],"content":"StreamingContext","needQuote":true,"nodes":[{"content":"StreamingContext","pos":[0,16]}]},{"pos":[8870,8871],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9051,9064],"content":"GetObjectData","needQuote":true,"nodes":[{"content":"GetObjectData","pos":[0,13]}]},{"pos":[9149,9150],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9233,9250],"content":"SerializationInfo","needQuote":true,"nodes":[{"content":"SerializationInfo","pos":[0,17]}]},{"content":",","pos":[9344,9345]},{"pos":[9432,9448],"content":"StreamingContext","needQuote":true,"nodes":[{"content":"StreamingContext","pos":[0,16]}]},{"pos":[9540,9541],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9894,9901],"content":"Message","needQuote":true,"nodes":[{"content":"Message","pos":[0,7]}]},{"pos":[10141,10149],"content":"TypeName","needQuote":true,"nodes":[{"content":"TypeName","pos":[0,8]}]},{"pos":[10384,10402],"content":"GetBaseException()","needQuote":true,"nodes":[{"content":"GetBaseException()","pos":[0,18]}]},{"pos":[10519,10535],"content":"GetBaseException","needQuote":true,"nodes":[{"content":"GetBaseException","pos":[0,16]}]},{"pos":[10594,10595],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10622,10623],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10704,10720],"content":"GetBaseException","needQuote":true,"nodes":[{"content":"GetBaseException","pos":[0,16]}]},{"pos":[10779,10780],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10807,10808],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11007,11017],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[11118,11126],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[11177,11178],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11205,11206],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11279,11287],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[11338,11339],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11366,11367],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11548,11557],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[11656,11663],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[11734,11735],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11762,11763],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11835,11842],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[11913,11914],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11941,11942],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12119,12123],"content":"Data","needQuote":true,"nodes":[{"content":"Data","pos":[0,4]}]},{"pos":[12320,12334],"content":"InnerException","needQuote":true,"nodes":[{"content":"InnerException","pos":[0,14]}]},{"pos":[12556,12566],"content":"TargetSite","needQuote":true,"nodes":[{"content":"TargetSite","pos":[0,10]}]},{"pos":[12777,12787],"content":"StackTrace","needQuote":true,"nodes":[{"content":"StackTrace","pos":[0,10]}]},{"pos":[12996,13004],"content":"HelpLink","needQuote":true,"nodes":[{"content":"HelpLink","pos":[0,8]}]},{"pos":[13205,13211],"content":"Source","needQuote":true,"nodes":[{"content":"Source","pos":[0,6]}]},{"pos":[13407,13414],"content":"HResult","needQuote":true,"nodes":[{"content":"HResult","pos":[0,7]}]},{"pos":[13625,13645],"content":"SerializeObjectState","needQuote":true,"nodes":[{"content":"SerializeObjectState","pos":[0,20]}]},{"pos":[13890,13904],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[14023,14029],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[14096,14097],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14147,14153],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14213,14214],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14297,14303],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[14370,14371],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14421,14427],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14487,14488],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14702,14724],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[14872,14878],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[14945,14946],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14996,15002],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[15063,15064]},{"pos":[15119,15125],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15185,15186],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15283,15289],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[15356,15357],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15407,15413],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[15474,15475]},{"pos":[15530,15536],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15596,15597],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15842,15873],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[16039,16054],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[16130,16131],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16181,16187],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[16248,16249]},{"pos":[16304,16310],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16370,16371],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16477,16492],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[16568,16569],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16619,16625],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[16686,16687]},{"pos":[16742,16748],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16808,16809],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17039,17052],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[17153,17164],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[17236,17237],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17264,17265],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17338,17349],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[17421,17422],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17449,17450],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17633,17650],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[17759,17774],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[17850,17851],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17878,17879],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17956,17971],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[18047,18048],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18075,18076],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18245,18275],"content":"System.Runtime.InteropServices","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices","pos":[0,30]}]},{"pos":[18476,18504],"content":"System.Runtime.Serialization","needQuote":true,"nodes":[{"content":"System.Runtime.Serialization","pos":[0,28]}]},{"pos":[18701,18707],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"items:\n- uid: System.DllNotFoundException\n  commentId: T:System.DllNotFoundException\n  id: DllNotFoundException\n  parent: System\n  children:\n  - System.DllNotFoundException.#ctor\n  - System.DllNotFoundException.#ctor(System.String)\n  - System.DllNotFoundException.#ctor(System.String,System.Exception)\n  langs:\n  - csharp\n  - vb\n  name: DllNotFoundException\n  fullName: System.DllNotFoundException\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/DllNotFoundException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DllNotFoundException\n    path: src/mscorlib/src/System/DllNotFoundException.cs\n    startLine: 18\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System\n  summary: \"\\n<p>The exception that is thrown when a DLL specified in a DLL import cannot be found.</p>\\n\"\n  syntax:\n    content: >-\n      [ComVisible(true)]\n\n      [Serializable]\n\n      public class DllNotFoundException : TypeLoadException, _Exception, ISerializable\n    content.vb: >-\n      <ComVisible(True)>\n\n      <Serializable>\n\n      Public Class DllNotFoundException\n          Inherits TypeLoadException\n          Implements _Exception, ISerializable\n  seealso:\n  - type: System.Exception\n    commentId: T:System.Exception\n  inheritance:\n  - System.Object\n  - System.Exception\n  - System.SystemException\n  - System.TypeLoadException\n  implements:\n  - System.Runtime.InteropServices._Exception\n  - System.Runtime.Serialization.ISerializable\n  inheritedMembers:\n  - System.TypeLoadException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.TypeLoadException.Message\n  - System.TypeLoadException.TypeName\n  - System.Exception.GetBaseException\n  - System.Exception.ToString\n  - System.Exception.GetType\n  - System.Exception.Data\n  - System.Exception.InnerException\n  - System.Exception.TargetSite\n  - System.Exception.StackTrace\n  - System.Exception.HelpLink\n  - System.Exception.Source\n  - System.Exception.HResult\n  - System.Exception.SerializeObjectState\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: DllNotFoundException\n- uid: System.DllNotFoundException.#ctor\n  commentId: M:System.DllNotFoundException.#ctor\n  id: '#ctor'\n  parent: System.DllNotFoundException\n  langs:\n  - csharp\n  - vb\n  name: DllNotFoundException()\n  fullName: System.DllNotFoundException.DllNotFoundException()\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/DllNotFoundException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/DllNotFoundException.cs\n    startLine: 20\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.DllNotFoundException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with default properties.</p>\\n\"\n  syntax:\n    content: public DllNotFoundException()\n    content.vb: Public Sub New\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: DllNotFoundException.DllNotFoundException()\n- uid: System.DllNotFoundException.#ctor(System.String)\n  commentId: M:System.DllNotFoundException.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.DllNotFoundException\n  langs:\n  - csharp\n  - vb\n  name: DllNotFoundException(String)\n  fullName: System.DllNotFoundException.DllNotFoundException(System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/DllNotFoundException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/DllNotFoundException.cs\n    startLine: 25\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.DllNotFoundException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with a specified error message.</p>\\n\"\n  syntax:\n    content: public DllNotFoundException(string message)\n    content.vb: Public Sub New(message As String)\n    parameters:\n    - id: message\n      type: System.String\n      description: \"\\n<p>The error message that explains the reason for the exception. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: DllNotFoundException.DllNotFoundException(String)\n- uid: System.DllNotFoundException.#ctor(System.String,System.Exception)\n  commentId: M:System.DllNotFoundException.#ctor(System.String,System.Exception)\n  id: '#ctor(System.String,System.Exception)'\n  parent: System.DllNotFoundException\n  langs:\n  - csharp\n  - vb\n  name: DllNotFoundException(String, Exception)\n  fullName: System.DllNotFoundException.DllNotFoundException(System.String, System.Exception)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/DllNotFoundException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/DllNotFoundException.cs\n    startLine: 30\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.DllNotFoundException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception.</p>\\n\"\n  syntax:\n    content: public DllNotFoundException(string message, Exception inner)\n    content.vb: Public Sub New(message As String, inner As Exception)\n    parameters:\n    - id: message\n      type: System.String\n      description: \"\\n<p>The error message that explains the reason for the exception. </p>\\n\"\n    - id: inner\n      type: System.Exception\n      description: \"\\n<p>The exception that is the cause of the current exception. If the <em>inner</em> parameter is not <strong>null</strong>, the current exception is raised in a <strong>catch</strong> block that handles the inner exception. </p>\\n\"\n  seealso:\n  - type: System.Exception\n    commentId: T:System.Exception\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: DllNotFoundException.DllNotFoundException(String, Exception)\nreferences:\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  fullName: System.Exception\n  nameWithType: Exception\n  commentId: T:System.Exception\n- uid: System.SystemException\n  parent: System\n  isExternal: true\n  name: SystemException\n  fullName: System.SystemException\n  nameWithType: SystemException\n  commentId: T:System.SystemException\n- uid: System.TypeLoadException\n  parent: System\n  isExternal: false\n  name: TypeLoadException\n  fullName: System.TypeLoadException\n  nameWithType: TypeLoadException\n  commentId: T:System.TypeLoadException\n- uid: System.Runtime.InteropServices._Exception\n  parent: System.Runtime.InteropServices\n  isExternal: true\n  name: _Exception\n  fullName: System.Runtime.InteropServices._Exception\n  nameWithType: _Exception\n  commentId: T:System.Runtime.InteropServices._Exception\n- uid: System.Runtime.Serialization.ISerializable\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: ISerializable\n  fullName: System.Runtime.Serialization.ISerializable\n  nameWithType: ISerializable\n  commentId: T:System.Runtime.Serialization.ISerializable\n- uid: System.TypeLoadException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.TypeLoadException\n  isExternal: true\n  name: GetObjectData(SerializationInfo, StreamingContext)\n  fullName: System.TypeLoadException.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)\n  spec.csharp:\n  - uid: System.TypeLoadException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n    name: GetObjectData\n    fullName: System.TypeLoadException.GetObjectData\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Runtime.Serialization.SerializationInfo\n    name: SerializationInfo\n    fullName: System.Runtime.Serialization.SerializationInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Runtime.Serialization.StreamingContext\n    name: StreamingContext\n    fullName: System.Runtime.Serialization.StreamingContext\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.TypeLoadException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n    name: GetObjectData\n    fullName: System.TypeLoadException.GetObjectData\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Runtime.Serialization.SerializationInfo\n    name: SerializationInfo\n    fullName: System.Runtime.Serialization.SerializationInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Runtime.Serialization.StreamingContext\n    name: StreamingContext\n    fullName: System.Runtime.Serialization.StreamingContext\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeLoadException.GetObjectData(SerializationInfo, StreamingContext)\n  commentId: M:System.TypeLoadException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n- uid: System.TypeLoadException.Message\n  parent: System.TypeLoadException\n  isExternal: false\n  name: Message\n  fullName: System.TypeLoadException.Message\n  nameWithType: TypeLoadException.Message\n  commentId: P:System.TypeLoadException.Message\n- uid: System.TypeLoadException.TypeName\n  parent: System.TypeLoadException\n  isExternal: false\n  name: TypeName\n  fullName: System.TypeLoadException.TypeName\n  nameWithType: TypeLoadException.TypeName\n  commentId: P:System.TypeLoadException.TypeName\n- uid: System.Exception.GetBaseException\n  parent: System.Exception\n  isExternal: false\n  name: GetBaseException()\n  fullName: System.Exception.GetBaseException()\n  spec.csharp:\n  - uid: System.Exception.GetBaseException\n    name: GetBaseException\n    fullName: System.Exception.GetBaseException\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Exception.GetBaseException\n    name: GetBaseException\n    fullName: System.Exception.GetBaseException\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Exception.GetBaseException()\n  commentId: M:System.Exception.GetBaseException\n- uid: System.Exception.ToString\n  parent: System.Exception\n  isExternal: false\n  name: ToString()\n  fullName: System.Exception.ToString()\n  spec.csharp:\n  - uid: System.Exception.ToString\n    name: ToString\n    fullName: System.Exception.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Exception.ToString\n    name: ToString\n    fullName: System.Exception.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Exception.ToString()\n  commentId: M:System.Exception.ToString\n- uid: System.Exception.GetType\n  parent: System.Exception\n  isExternal: true\n  name: GetType()\n  fullName: System.Exception.GetType()\n  spec.csharp:\n  - uid: System.Exception.GetType\n    name: GetType\n    fullName: System.Exception.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Exception.GetType\n    name: GetType\n    fullName: System.Exception.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Exception.GetType()\n  commentId: M:System.Exception.GetType\n- uid: System.Exception.Data\n  parent: System.Exception\n  isExternal: false\n  name: Data\n  fullName: System.Exception.Data\n  nameWithType: Exception.Data\n  commentId: P:System.Exception.Data\n- uid: System.Exception.InnerException\n  parent: System.Exception\n  isExternal: false\n  name: InnerException\n  fullName: System.Exception.InnerException\n  nameWithType: Exception.InnerException\n  commentId: P:System.Exception.InnerException\n- uid: System.Exception.TargetSite\n  parent: System.Exception\n  isExternal: true\n  name: TargetSite\n  fullName: System.Exception.TargetSite\n  nameWithType: Exception.TargetSite\n  commentId: P:System.Exception.TargetSite\n- uid: System.Exception.StackTrace\n  parent: System.Exception\n  isExternal: false\n  name: StackTrace\n  fullName: System.Exception.StackTrace\n  nameWithType: Exception.StackTrace\n  commentId: P:System.Exception.StackTrace\n- uid: System.Exception.HelpLink\n  parent: System.Exception\n  isExternal: false\n  name: HelpLink\n  fullName: System.Exception.HelpLink\n  nameWithType: Exception.HelpLink\n  commentId: P:System.Exception.HelpLink\n- uid: System.Exception.Source\n  parent: System.Exception\n  isExternal: false\n  name: Source\n  fullName: System.Exception.Source\n  nameWithType: Exception.Source\n  commentId: P:System.Exception.Source\n- uid: System.Exception.HResult\n  parent: System.Exception\n  isExternal: false\n  name: HResult\n  fullName: System.Exception.HResult\n  nameWithType: Exception.HResult\n  commentId: P:System.Exception.HResult\n- uid: System.Exception.SerializeObjectState\n  parent: System.Exception\n  isExternal: true\n  name: SerializeObjectState\n  fullName: System.Exception.SerializeObjectState\n  nameWithType: Exception.SerializeObjectState\n  commentId: E:System.Exception.SerializeObjectState\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System.Runtime.InteropServices\n  isExternal: false\n  name: System.Runtime.InteropServices\n  fullName: System.Runtime.InteropServices\n  nameWithType: System.Runtime.InteropServices\n  commentId: N:System.Runtime.InteropServices\n- uid: System.Runtime.Serialization\n  isExternal: false\n  name: System.Runtime.Serialization\n  fullName: System.Runtime.Serialization\n  nameWithType: System.Runtime.Serialization\n  commentId: N:System.Runtime.Serialization\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n"}