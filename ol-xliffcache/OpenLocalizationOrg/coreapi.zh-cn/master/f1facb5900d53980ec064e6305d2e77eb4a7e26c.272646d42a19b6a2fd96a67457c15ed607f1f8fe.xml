{"nodes":[{"pos":[6920,6929],"content":"XmlReader","needQuote":true,"nodes":[{"content":"XmlReader","pos":[0,9]}]},{"pos":[8237,8248],"content":"XmlReader()","needQuote":true,"nodes":[{"content":"XmlReader()","pos":[0,11]}]},{"pos":[9099,9113],"content":"AttributeCount","needQuote":true,"nodes":[{"content":"AttributeCount","pos":[0,14]}]},{"content":"\\n&lt;p&gt;The number of attributes on the current node.&lt;/p&gt;\\n","pos":[9853,9909],"source":"\\n<p>The number of attributes on the current node.</p>\\n"},{"pos":[10697,10704],"content":"BaseURI","needQuote":true,"nodes":[{"content":"BaseURI","pos":[0,7]}]},{"content":"\\n&lt;p&gt;The base URI of the current node.&lt;/p&gt;\\n","pos":[11407,11451],"source":"\\n<p>The base URI of the current node.</p>\\n"},{"pos":[12271,12291],"content":"CanReadBinaryContent","needQuote":true,"nodes":[{"content":"CanReadBinaryContent","pos":[0,20]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the binary content read methods are implemented; otherwise &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[13130,13250],"source":"\\n<p>\\n<strong>true</strong> if the binary content read methods are implemented; otherwise <strong>false</strong>.</p>\\n"},{"pos":[14072,14089],"content":"CanReadValueChunk","needQuote":true,"nodes":[{"content":"CanReadValueChunk","pos":[0,17]}]},{"pos":[16164,16180],"content":"CanResolveEntity","needQuote":true,"nodes":[{"content":"CanResolveEntity","pos":[0,16]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the reader can parse and resolve entities; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[16918,17033],"source":"\\n<p>\\n<strong>true</strong> if the reader can parse and resolve entities; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[17815,17820],"content":"Depth","needQuote":true,"nodes":[{"content":"Depth","pos":[0,5]}]},{"content":"\\n&lt;p&gt;The depth of the current node in the XML document.&lt;/p&gt;\\n","pos":[18529,18590],"source":"\\n<p>The depth of the current node in the XML document.</p>\\n"},{"pos":[19357,19360],"content":"EOF","needQuote":true,"nodes":[{"content":"EOF","pos":[0,3]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the reader is positioned at the end of the stream; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[20091,20214],"source":"\\n<p>\\n<strong>true</strong> if the reader is positioned at the end of the stream; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[21009,21022],"content":"HasAttributes","needQuote":true,"nodes":[{"content":"HasAttributes","pos":[0,13]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the current node has attributes; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[21741,21846],"source":"\\n<p>\\n<strong>true</strong> if the current node has attributes; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[22634,22642],"content":"HasValue","needQuote":true,"nodes":[{"content":"HasValue","pos":[0,8]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the node on which the reader is currently positioned can have a &lt;strong&gt;Value&lt;/strong&gt;; otherwise, &lt;strong&gt;false&lt;/strong&gt;.","pos":[23456,23610],"source":"\\n<p>\\n<strong>true</strong> if the node on which the reader is currently positioned can have a <strong>Value</strong>; otherwise, <strong>false</strong>."},{"content":"If &lt;strong&gt;false&lt;/strong&gt;, the node has a value of &lt;strong&gt;String.Empty&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[23611,23698],"source":" If <strong>false</strong>, the node has a value of <strong>String.Empty</strong>.</p>\\n"},{"pos":[24484,24493],"content":"IsDefault","needQuote":true,"nodes":[{"content":"IsDefault","pos":[0,9]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the current node is an attribute whose value was generated from the default value defined in the DTD or schema; &lt;strong&gt;false&lt;/strong&gt; if the attribute value was explicitly set.&lt;/p&gt;\\n","pos":[25300,25515],"source":"\\n<p>\\n<strong>true</strong> if the current node is an attribute whose value was generated from the default value defined in the DTD or schema; <strong>false</strong> if the attribute value was explicitly set.</p>\\n"},{"pos":[26317,26331],"content":"IsEmptyElement","needQuote":true,"nodes":[{"content":"IsEmptyElement","pos":[0,14]}]},{"pos":[28226,28237],"content":"Item[Int32]","needQuote":true,"nodes":[{"content":"Item[Int32]","pos":[0,11]}]},{"content":"\\n&lt;p&gt;The index of the attribute.&lt;/p&gt;\\n","pos":[28978,29016],"source":"\\n<p>The index of the attribute.</p>\\n"},{"content":"\\n&lt;p&gt;The value of the specified attribute.&lt;/p&gt;\\n","pos":[29076,29124],"source":"\\n<p>The value of the specified attribute.</p>\\n"},{"pos":[30196,30208],"content":"Item[String]","needQuote":true,"nodes":[{"content":"Item[String]","pos":[0,12]}]},{"content":"\\n&lt;p&gt;The qualified name of the attribute.&lt;/p&gt;\\n","pos":[31042,31089],"source":"\\n<p>The qualified name of the attribute.</p>\\n"},{"content":"\\n&lt;p&gt;The value of the specified attribute.","pos":[31149,31191],"source":"\\n<p>The value of the specified attribute."},{"content":"If the attribute is not found, &lt;strong&gt;null&lt;/strong&gt; is returned.&lt;/p&gt;\\n","pos":[31192,31263],"source":" If the attribute is not found, <strong>null</strong> is returned.</p>\\n"},{"pos":[32383,32403],"content":"Item[String, String]","needQuote":true,"nodes":[{"content":"Item[String, String]","pos":[0,20]}]},{"content":"\\n&lt;p&gt;The local name of the attribute.&lt;/p&gt;\\n","pos":[33400,33443],"source":"\\n<p>The local name of the attribute.</p>\\n"},{"content":"\\n&lt;p&gt;The namespace URI of the attribute.&lt;/p&gt;\\n","pos":[33514,33560],"source":"\\n<p>The namespace URI of the attribute.</p>\\n"},{"content":"\\n&lt;p&gt;The value of the specified attribute.","pos":[33620,33662],"source":"\\n<p>The value of the specified attribute."},{"content":"If the attribute is not found, &lt;strong&gt;null&lt;/strong&gt; is returned.&lt;/p&gt;\\n","pos":[33663,33734],"source":" If the attribute is not found, <strong>null</strong> is returned.</p>\\n"},{"pos":[34849,34858],"content":"LocalName","needQuote":true,"nodes":[{"content":"LocalName","pos":[0,9]}]},{"content":"\\n&lt;p&gt;The name of the current node with the prefix removed.","pos":[35571,35629],"source":"\\n<p>The name of the current node with the prefix removed."},{"content":"For example, &lt;strong&gt;LocalName&lt;/strong&gt; is &lt;strong&gt;book&lt;/strong&gt; for the element &lt;code&gt;&lt;bk:book&gt;&lt;/code&gt;.&lt;/p&gt;\\n&lt;p&gt;For node types that do not have a name (like &lt;strong&gt;Text&lt;/strong&gt;, &lt;strong&gt;Comment&lt;/strong&gt;, and so on), this property returns &lt;strong&gt;String.Empty&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[35630,35907],"source":" For example, <strong>LocalName</strong> is <strong>book</strong> for the element <code><bk:book></code>.</p>\\n<p>For node types that do not have a name (like <strong>Text</strong>, <strong>Comment</strong>, and so on), this property returns <strong>String.Empty</strong>.</p>\\n"},{"pos":[36771,36775],"content":"Name","needQuote":true,"nodes":[{"content":"Name","pos":[0,4]}]},{"pos":[39505,39517],"content":"NamespaceURI","needQuote":true,"nodes":[{"content":"NamespaceURI","pos":[0,12]}]},{"content":"\\n&lt;p&gt;The namespace URI of the current node; otherwise an empty string.&lt;/p&gt;\\n","pos":[40319,40395],"source":"\\n<p>The namespace URI of the current node; otherwise an empty string.</p>\\n"},{"pos":[41187,41196],"content":"NameTable","needQuote":true,"nodes":[{"content":"NameTable","pos":[0,9]}]},{"content":"\\n&lt;p&gt;The &lt;strong&gt;XmlNameTable&lt;/strong&gt; enabling you to get the atomized version of a string within the node.&lt;/p&gt;\\n","pos":[42020,42134],"source":"\\n<p>The <strong>XmlNameTable</strong> enabling you to get the atomized version of a string within the node.</p>\\n"},{"pos":[43006,43014],"content":"NodeType","needQuote":true,"nodes":[{"content":"NodeType","pos":[0,8]}]},{"content":"\\n&lt;p&gt;One of the enumeration values that specify the type of the current node.&lt;/p&gt;\\n","pos":[43736,43819],"source":"\\n<p>One of the enumeration values that specify the type of the current node.</p>\\n"},{"pos":[44598,44604],"content":"Prefix","needQuote":true,"nodes":[{"content":"Prefix","pos":[0,6]}]},{"content":"\\n&lt;p&gt;The namespace prefix associated with the current node.&lt;/p&gt;\\n","pos":[45324,45389],"source":"\\n<p>The namespace prefix associated with the current node.</p>\\n"},{"pos":[46175,46184],"content":"ReadState","needQuote":true,"nodes":[{"content":"ReadState","pos":[0,9]}]},{"content":"\\n&lt;p&gt;One of the enumeration values that specifies the state of the reader.&lt;/p&gt;\\n","pos":[46899,46979],"source":"\\n<p>One of the enumeration values that specifies the state of the reader.</p>\\n"},{"pos":[47765,47773],"content":"Settings","needQuote":true,"nodes":[{"content":"Settings","pos":[0,8]}]},{"pos":[49777,49782],"content":"Value","needQuote":true,"nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[52639,52648],"content":"ValueType","needQuote":true,"nodes":[{"content":"ValueType","pos":[0,9]}]},{"content":"\\n&lt;p&gt;The CLR type that corresponds to the typed value of the node.","pos":[53342,53408],"source":"\\n<p>The CLR type that corresponds to the typed value of the node."},{"content":"The default is &lt;strong&gt;System.String&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[53409,53461],"source":" The default is <strong>System.String</strong>.</p>\\n"},{"pos":[54242,54249],"content":"XmlLang","needQuote":true,"nodes":[{"content":"XmlLang","pos":[0,7]}]},{"content":"\\n&lt;p&gt;The current &lt;strong&gt;xml:lang&lt;/strong&gt; scope.&lt;/p&gt;\\n","pos":[54961,55016],"source":"\\n<p>The current <strong>xml:lang</strong> scope.</p>\\n"},{"pos":[55896,55904],"content":"XmlSpace","needQuote":true,"nodes":[{"content":"XmlSpace","pos":[0,8]}]},{"pos":[57772,57786],"content":"Create(Stream)","needQuote":true,"nodes":[{"content":"Create(Stream)","pos":[0,14]}]},{"content":"\\n&lt;p&gt;An object that is used to read the XML data in the stream.&lt;/p&gt;\\n","pos":[59059,59128],"source":"\\n<p>An object that is used to read the XML data in the stream.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;input&lt;/em&gt; value is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[59247,59308],"source":"\\n<p>The <em>input</em> value is <strong>null</strong>.</p>\\n"},{"pos":[60016,60049],"content":"Create(Stream, XmlReaderSettings)","needQuote":true,"nodes":[{"content":"Create(Stream, XmlReaderSettings)","pos":[0,33]}]},{"content":"\\n&lt;p&gt;An object that is used to read the XML data in the stream.&lt;/p&gt;\\n","pos":[61650,61719],"source":"\\n<p>An object that is used to read the XML data in the stream.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;input&lt;/em&gt; value is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[61838,61899],"source":"\\n<p>The <em>input</em> value is <strong>null</strong>.</p>\\n"},{"pos":[62423,62474],"content":"Create(Stream, XmlReaderSettings, XmlParserContext)","needQuote":true,"nodes":[{"content":"Create(Stream, XmlReaderSettings, XmlParserContext)","pos":[0,51]}]},{"content":"\\n&lt;p&gt;An object that is used to read the XML data in the stream.&lt;/p&gt;\\n","pos":[64677,64746],"source":"\\n<p>An object that is used to read the XML data in the stream.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;input&lt;/em&gt; value is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[64865,64926],"source":"\\n<p>The <em>input</em> value is <strong>null</strong>.</p>\\n"},{"pos":[65309,65327],"content":"Create(TextReader)","needQuote":true,"nodes":[{"content":"Create(TextReader)","pos":[0,18]}]},{"content":"\\n&lt;p&gt;The text reader from which to read the XML data.","pos":[66138,66191],"source":"\\n<p>The text reader from which to read the XML data."},{"content":"A text reader returns a stream of Unicode characters, so the encoding specified in the XML declaration is not used by the XML reader to decode the data stream.&lt;/p&gt;\\n","pos":[66192,66357],"source":" A text reader returns a stream of Unicode characters, so the encoding specified in the XML declaration is not used by the XML reader to decode the data stream.</p>\\n"},{"content":"\\n&lt;p&gt;An object that is used to read the XML data in the stream.&lt;/p&gt;\\n","pos":[66424,66493],"source":"\\n<p>An object that is used to read the XML data in the stream.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;input&lt;/em&gt; value is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[66612,66673],"source":"\\n<p>The <em>input</em> value is <strong>null</strong>.</p>\\n"},{"pos":[67110,67147],"content":"Create(TextReader, XmlReaderSettings)","needQuote":true,"nodes":[{"content":"Create(TextReader, XmlReaderSettings)","pos":[0,37]}]},{"content":"\\n&lt;p&gt;The text reader from which to read the XML data.","pos":[68060,68113],"source":"\\n<p>The text reader from which to read the XML data."},{"content":"A text reader returns a stream of Unicode characters, so the encoding specified in the XML declaration isn't used by the XML reader to decode the data stream.&lt;/p&gt;\\n","pos":[68114,68278],"source":" A text reader returns a stream of Unicode characters, so the encoding specified in the XML declaration isn't used by the XML reader to decode the data stream.</p>\\n"},{"content":"\\n&lt;p&gt;An object that is used to read the XML data in the stream.&lt;/p&gt;\\n","pos":[68585,68654],"source":"\\n<p>An object that is used to read the XML data in the stream.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;input&lt;/em&gt; value is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[68773,68834],"source":"\\n<p>The <em>input</em> value is <strong>null</strong>.</p>\\n"},{"pos":[69374,69429],"content":"Create(TextReader, XmlReaderSettings, XmlParserContext)","needQuote":true,"nodes":[{"content":"Create(TextReader, XmlReaderSettings, XmlParserContext)","pos":[0,55]}]},{"content":"\\n&lt;p&gt;The text reader from which to read the XML data.","pos":[70470,70523],"source":"\\n<p>The text reader from which to read the XML data."},{"content":"A text reader returns a stream of Unicode characters, so the encoding specified in the XML declaration isn't used by the XML reader to decode the data stream.&lt;/p&gt;\\n","pos":[70524,70688],"source":" A text reader returns a stream of Unicode characters, so the encoding specified in the XML declaration isn't used by the XML reader to decode the data stream.</p>\\n"},{"content":"\\n&lt;p&gt;An object that is used to read the XML data in the stream.&lt;/p&gt;\\n","pos":[71475,71544],"source":"\\n<p>An object that is used to read the XML data in the stream.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;input&lt;/em&gt; value is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[71663,71724],"source":"\\n<p>The <em>input</em> value is <strong>null</strong>.</p>\\n"},{"pos":[72514,72528],"content":"Create(String)","needQuote":true,"nodes":[{"content":"Create(String)","pos":[0,14]}]},{"content":"\\n&lt;p&gt;An object that is used to read the XML data in the stream.&lt;/p&gt;\\n","pos":[73596,73665],"source":"\\n<p>An object that is used to read the XML data in the stream.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;inputUri&lt;/em&gt; value is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[73784,73848],"source":"\\n<p>The <em>inputUri</em> value is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The file identified by the URI does not exist.&lt;/p&gt;\\n","pos":[74246,74303],"source":"\\n<p>The file identified by the URI does not exist.</p>\\n"},{"pos":[75120,75153],"content":"Create(String, XmlReaderSettings)","needQuote":true,"nodes":[{"content":"Create(String, XmlReaderSettings)","pos":[0,33]}]},{"content":"\\n&lt;p&gt;An object that is used to read the XML data in the stream.&lt;/p&gt;\\n","pos":[76916,76985],"source":"\\n<p>An object that is used to read the XML data in the stream.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;inputUri&lt;/em&gt; value is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[77104,77168],"source":"\\n<p>The <em>inputUri</em> value is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The file specified by the URI cannot be found.&lt;/p&gt;\\n","pos":[77279,77336],"source":"\\n<p>The file specified by the URI cannot be found.</p>\\n"},{"pos":[78193,78229],"content":"Create(XmlReader, XmlReaderSettings)","needQuote":true,"nodes":[{"content":"Create(XmlReader, XmlReaderSettings)","pos":[0,36]}]},{"content":"\\n&lt;p&gt;The object that you want to use as the underlying XML reader.&lt;/p&gt;\\n","pos":[79142,79214],"source":"\\n<p>The object that you want to use as the underlying XML reader.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;reader&lt;/em&gt; value is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[80068,80130],"source":"\\n<p>The <em>reader</em> value is <strong>null</strong>.</p>\\n"},{"pos":[81074,81083],"content":"Dispose()","needQuote":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[82549,82565],"content":"Dispose(Boolean)","needQuote":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to release both managed and unmanaged resources; &lt;strong&gt;false&lt;/strong&gt; to release only unmanaged resources.&lt;/p&gt;\\n","pos":[83393,83536],"source":"\\n<p>\\n<strong>true</strong> to release both managed and unmanaged resources; <strong>false</strong> to release only unmanaged resources.</p>\\n"},{"pos":[84366,84385],"content":"GetAttribute(Int32)","needQuote":true,"nodes":[{"content":"GetAttribute(Int32)","pos":[0,19]}]},{"content":"\\n&lt;p&gt;The index of the attribute.","pos":[85138,85170],"source":"\\n<p>The index of the attribute."},{"content":"The index is zero-based.","pos":[85171,85195]},{"content":"(The first attribute has index 0.)&lt;/p&gt;\\n","pos":[85196,85236],"source":" (The first attribute has index 0.)</p>\\n"},{"content":"\\n&lt;p&gt;The value of the specified attribute.","pos":[85296,85338],"source":"\\n<p>The value of the specified attribute."},{"content":"This method does not move the reader.&lt;/p&gt;\\n","pos":[85339,85382],"source":" This method does not move the reader.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;i&lt;/em&gt; is out of range.","pos":[85513,85547],"source":"\\n<p>\\n<em>i</em> is out of range."},{"content":"It must be non-negative and less than the size of the attribute collection.&lt;/p&gt;\\n","pos":[85548,85629],"source":" It must be non-negative and less than the size of the attribute collection.</p>\\n"},{"pos":[86447,86467],"content":"GetAttribute(String)","needQuote":true,"nodes":[{"content":"GetAttribute(String)","pos":[0,20]}]},{"content":"\\n&lt;p&gt;The qualified name of the attribute.&lt;/p&gt;\\n","pos":[87313,87360],"source":"\\n<p>The qualified name of the attribute.</p>\\n"},{"content":"\\n&lt;p&gt;The value of the specified attribute.","pos":[87420,87462],"source":"\\n<p>The value of the specified attribute."},{"content":"If the attribute is not found or the value is &lt;strong&gt;String.Empty&lt;/strong&gt;, &lt;strong&gt;null&lt;/strong&gt; is returned.&lt;/p&gt;\\n","pos":[87463,87580],"source":" If the attribute is not found or the value is <strong>String.Empty</strong>, <strong>null</strong> is returned.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[87699,87751],"source":"\\n<p>\\n<em>name</em> is <strong>null</strong>.</p>\\n"},{"pos":[88612,88640],"content":"GetAttribute(String, String)","needQuote":true,"nodes":[{"content":"GetAttribute(String, String)","pos":[0,28]}]},{"content":"\\n&lt;p&gt;The local name of the attribute.&lt;/p&gt;\\n","pos":[89649,89692],"source":"\\n<p>The local name of the attribute.</p>\\n"},{"content":"\\n&lt;p&gt;The namespace URI of the attribute.&lt;/p&gt;\\n","pos":[89763,89809],"source":"\\n<p>The namespace URI of the attribute.</p>\\n"},{"content":"\\n&lt;p&gt;The value of the specified attribute.","pos":[89869,89911],"source":"\\n<p>The value of the specified attribute."},{"content":"If the attribute is not found or the value is &lt;strong&gt;String.Empty&lt;/strong&gt;, &lt;strong&gt;null&lt;/strong&gt; is returned.","pos":[89912,90023],"source":" If the attribute is not found or the value is <strong>String.Empty</strong>, <strong>null</strong> is returned."},{"content":"This method does not move the reader.&lt;/p&gt;\\n","pos":[90024,90067],"source":" This method does not move the reader.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[90186,90238],"source":"\\n<p>\\n<em>name</em> is <strong>null</strong>.</p>\\n"},{"pos":[91023,91038],"content":"GetValueAsync()","needQuote":true,"nodes":[{"content":"GetValueAsync()","pos":[0,15]}]},{"content":"\\n&lt;p&gt;The value of the current node.&lt;/p&gt;\\n","pos":[91748,91789],"source":"\\n<p>The value of the current node.</p>\\n"},{"pos":[93187,93201],"content":"IsName(String)","needQuote":true,"nodes":[{"content":"IsName(String)","pos":[0,14]}]},{"content":"\\n&lt;p&gt;The name to validate.&lt;/p&gt;\\n","pos":[93913,93945],"source":"\\n<p>The name to validate.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the name is valid; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[94006,94097],"source":"\\n<p>\\n<strong>true</strong> if the name is valid; otherwise, <strong>false</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;str&lt;/em&gt; value is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[94216,94275],"source":"\\n<p>The <em>str</em> value is <strong>null</strong>.</p>\\n"},{"pos":[94615,94634],"content":"IsNameToken(String)","needQuote":true,"nodes":[{"content":"IsNameToken(String)","pos":[0,19]}]},{"content":"\\n&lt;p&gt;The name token to validate.&lt;/p&gt;\\n","pos":[95379,95417],"source":"\\n<p>The name token to validate.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if it is a valid name token; otherwise &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[95478,95575],"source":"\\n<p>\\n<strong>true</strong> if it is a valid name token; otherwise <strong>false</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;str&lt;/em&gt; value is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[95694,95753],"source":"\\n<p>The <em>str</em> value is <strong>null</strong>.</p>\\n"},{"pos":[96062,96078],"content":"IsStartElement()","needQuote":true,"nodes":[{"content":"IsStartElement()","pos":[0,16]}]},{"content":"\\n&lt;p&gt;Incorrect XML is encountered in the input stream.&lt;/p&gt;\\n","pos":[97251,97311],"source":"\\n<p>Incorrect XML is encountered in the input stream.</p>\\n"},{"pos":[98238,98260],"content":"IsStartElement(String)","needQuote":true,"nodes":[{"content":"IsStartElement(String)","pos":[0,22]}]},{"content":"\\n&lt;p&gt;The string matched against the &lt;strong&gt;Name&lt;/strong&gt; property of the element found.&lt;/p&gt;\\n","pos":[99267,99361],"source":"\\n<p>The string matched against the <strong>Name</strong> property of the element found.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the resulting node is an element and the &lt;strong&gt;Name&lt;/strong&gt; property matches the specified string.","pos":[99422,99555],"source":"\\n<p>\\n<strong>true</strong> if the resulting node is an element and the <strong>Name</strong> property matches the specified string."},{"content":"&lt;strong&gt;false&lt;/strong&gt; if a node type other than &lt;strong&gt;XmlNodeType.Element&lt;/strong&gt; was found or if the element &lt;strong&gt;Name&lt;/strong&gt; property does not match the specified string.&lt;/p&gt;\\n","pos":[99556,99743],"source":" <strong>false</strong> if a node type other than <strong>XmlNodeType.Element</strong> was found or if the element <strong>Name</strong> property does not match the specified string.</p>\\n"},{"content":"\\n&lt;p&gt;Incorrect XML is encountered in the input stream.&lt;/p&gt;\\n","pos":[99852,99912],"source":"\\n<p>Incorrect XML is encountered in the input stream.</p>\\n"},{"pos":[100887,100917],"content":"IsStartElement(String, String)","needQuote":true,"nodes":[{"content":"IsStartElement(String, String)","pos":[0,30]}]},{"content":"\\n&lt;p&gt;The string to match against the &lt;strong&gt;LocalName&lt;/strong&gt; property of the element found.&lt;/p&gt;\\n","pos":[102081,102181],"source":"\\n<p>The string to match against the <strong>LocalName</strong> property of the element found.</p>\\n"},{"content":"\\n&lt;p&gt;The string to match against the &lt;strong&gt;NamespaceURI&lt;/strong&gt; property of the element found.&lt;/p&gt;\\n","pos":[102242,102345],"source":"\\n<p>The string to match against the <strong>NamespaceURI</strong> property of the element found.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the resulting node is an element.","pos":[102406,102471],"source":"\\n<p>\\n<strong>true</strong> if the resulting node is an element."},{"content":"&lt;strong&gt;false&lt;/strong&gt; if a node type other than &lt;strong&gt;XmlNodeType.Element&lt;/strong&gt; was found or if the &lt;strong&gt;LocalName&lt;/strong&gt; and &lt;strong&gt;NamespaceURI&lt;/strong&gt; properties of the element do not match the specified strings.&lt;/p&gt;\\n","pos":[102472,102706],"source":" <strong>false</strong> if a node type other than <strong>XmlNodeType.Element</strong> was found or if the <strong>LocalName</strong> and <strong>NamespaceURI</strong> properties of the element do not match the specified strings.</p>\\n"},{"content":"\\n&lt;p&gt;Incorrect XML is encountered in the input stream.&lt;/p&gt;\\n","pos":[102815,102875],"source":"\\n<p>Incorrect XML is encountered in the input stream.</p>\\n"},{"pos":[103819,103842],"content":"LookupNamespace(String)","needQuote":true,"nodes":[{"content":"LookupNamespace(String)","pos":[0,23]}]},{"content":"\\n&lt;p&gt;The prefix whose namespace URI you want to resolve.","pos":[104628,104684],"source":"\\n<p>The prefix whose namespace URI you want to resolve."},{"content":"To match the default namespace, pass an empty string.","pos":[104685,104738]},{"content":"&lt;/p&gt;\\n","pos":[104739,104745],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The namespace URI to which the prefix maps or &lt;strong&gt;null&lt;/strong&gt; if no matching prefix is found.&lt;/p&gt;\\n","pos":[104805,104915],"source":"\\n<p>The namespace URI to which the prefix maps or <strong>null</strong> if no matching prefix is found.</p>\\n"},{"pos":[105757,105779],"content":"MoveToAttribute(Int32)","needQuote":true,"nodes":[{"content":"MoveToAttribute(Int32)","pos":[0,22]}]},{"content":"\\n&lt;p&gt;The index of the attribute.&lt;/p&gt;\\n","pos":[106516,106554],"source":"\\n<p>The index of the attribute.</p>\\n"},{"content":"\\n&lt;p&gt;The parameter has a negative value.&lt;/p&gt;\\n","pos":[107147,107193],"source":"\\n<p>The parameter has a negative value.</p>\\n"},{"pos":[107559,107582],"content":"MoveToAttribute(String)","needQuote":true,"nodes":[{"content":"MoveToAttribute(String)","pos":[0,23]}]},{"content":"\\n&lt;p&gt;The qualified name of the attribute.&lt;/p&gt;\\n","pos":[108430,108477],"source":"\\n<p>The qualified name of the attribute.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the attribute is found; otherwise, &lt;strong&gt;false&lt;/strong&gt;.","pos":[108538,108628],"source":"\\n<p>\\n<strong>true</strong> if the attribute is found; otherwise, <strong>false</strong>."},{"content":"If &lt;strong&gt;false&lt;/strong&gt;, the reader's position does not change.&lt;/p&gt;\\n","pos":[108629,108700],"source":" If <strong>false</strong>, the reader's position does not change.</p>\\n"},{"content":"\\n&lt;p&gt;The parameter is an empty string.&lt;/p&gt;\\n","pos":[109273,109317],"source":"\\n<p>The parameter is an empty string.</p>\\n"},{"pos":[109728,109759],"content":"MoveToAttribute(String, String)","needQuote":true,"nodes":[{"content":"MoveToAttribute(String, String)","pos":[0,31]}]},{"content":"\\n&lt;p&gt;The local name of the attribute.&lt;/p&gt;\\n","pos":[110750,110793],"source":"\\n<p>The local name of the attribute.</p>\\n"},{"content":"\\n&lt;p&gt;The namespace URI of the attribute.&lt;/p&gt;\\n","pos":[110854,110900],"source":"\\n<p>The namespace URI of the attribute.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the attribute is found; otherwise, &lt;strong&gt;false&lt;/strong&gt;.","pos":[110961,111051],"source":"\\n<p>\\n<strong>true</strong> if the attribute is found; otherwise, <strong>false</strong>."},{"content":"If &lt;strong&gt;false&lt;/strong&gt;, the reader's position does not change.&lt;/p&gt;\\n","pos":[111052,111123],"source":" If <strong>false</strong>, the reader's position does not change.</p>\\n"},{"content":"\\n&lt;p&gt;Both parameter values are &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[111704,111763],"source":"\\n<p>Both parameter values are <strong>null</strong>.</p>\\n"},{"pos":[112089,112104],"content":"MoveToContent()","needQuote":true,"nodes":[{"content":"MoveToContent()","pos":[0,15]}]},{"content":"\\n&lt;p&gt;Incorrect XML encountered in the input stream.&lt;/p&gt;\\n","pos":[113612,113669],"source":"\\n<p>Incorrect XML encountered in the input stream.</p>\\n"},{"pos":[114454,114474],"content":"MoveToContentAsync()","needQuote":true,"nodes":[{"content":"MoveToContentAsync()","pos":[0,20]}]},{"pos":[116952,116967],"content":"MoveToElement()","needQuote":true,"nodes":[{"content":"MoveToElement()","pos":[0,15]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the reader is positioned on an attribute (the reader moves to the element that owns the attribute); &lt;strong&gt;false&lt;/strong&gt; if the reader is not positioned on an attribute (the position of the reader does not change).&lt;/p&gt;\\n","pos":[117683,117937],"source":"\\n<p>\\n<strong>true</strong> if the reader is positioned on an attribute (the reader moves to the element that owns the attribute); <strong>false</strong> if the reader is not positioned on an attribute (the position of the reader does not change).</p>\\n"},{"pos":[118744,118766],"content":"MoveToFirstAttribute()","needQuote":true,"nodes":[{"content":"MoveToFirstAttribute()","pos":[0,22]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if an attribute exists (the reader moves to the first attribute); otherwise, &lt;strong&gt;false&lt;/strong&gt; (the position of the reader does not change).&lt;/p&gt;\\n","pos":[119477,119657],"source":"\\n<p>\\n<strong>true</strong> if an attribute exists (the reader moves to the first attribute); otherwise, <strong>false</strong> (the position of the reader does not change).</p>\\n"},{"pos":[120468,120489],"content":"MoveToNextAttribute()","needQuote":true,"nodes":[{"content":"MoveToNextAttribute()","pos":[0,21]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if there is a next attribute; &lt;strong&gt;false&lt;/strong&gt; if there are no more attributes.&lt;/p&gt;\\n","pos":[121195,121315],"source":"\\n<p>\\n<strong>true</strong> if there is a next attribute; <strong>false</strong> if there are no more attributes.</p>\\n"},{"pos":[122080,122086],"content":"Read()","needQuote":true,"nodes":[{"content":"Read()","pos":[0,6]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the next node was read successfully; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[122740,122849],"source":"\\n<p>\\n<strong>true</strong> if the next node was read successfully; otherwise, <strong>false</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;An error occurred while parsing the XML.&lt;/p&gt;\\n","pos":[122958,123009],"source":"\\n<p>An error occurred while parsing the XML.</p>\\n"},{"pos":[123760,123771],"content":"ReadAsync()","needQuote":true,"nodes":[{"content":"ReadAsync()","pos":[0,11]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the next node was read successfully; &lt;strong&gt;false&lt;/strong&gt; if there are no more nodes to read.&lt;/p&gt;\\n","pos":[124466,124599],"source":"\\n<p>\\n<strong>true</strong> if the next node was read successfully; <strong>false</strong> if there are no more nodes to read.</p>\\n"},{"pos":[125984,126004],"content":"ReadAttributeValue()","needQuote":true,"nodes":[{"content":"ReadAttributeValue()","pos":[0,20]}]},{"pos":[128128,128170],"content":"ReadContentAs(Type, IXmlNamespaceResolver)","needQuote":true,"nodes":[{"content":"ReadContentAs(Type, IXmlNamespaceResolver)","pos":[0,42]}]},{"content":"\\n&lt;p&gt;The concatenated text content or attribute value converted to the requested type.&lt;/p&gt;\\n","pos":[129850,129942],"source":"\\n<p>The concatenated text content or attribute value converted to the requested type.</p>\\n"},{"content":"\\n&lt;p&gt;The content is not in the correct format for the target type.&lt;/p&gt;\\n","pos":[130049,130121],"source":"\\n<p>The content is not in the correct format for the target type.</p>\\n"},{"content":"\\n&lt;p&gt;The attempted cast is not valid.&lt;/p&gt;\\n","pos":[130224,130267],"source":"\\n<p>The attempted cast is not valid.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;returnType&lt;/em&gt; value is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[130372,130438],"source":"\\n<p>The <em>returnType</em> value is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The current node is not a supported node type.","pos":[130551,130602],"source":"\\n<p>The current node is not a supported node type."},{"content":"See the table below for details.&lt;/p&gt;\\n","pos":[130603,130641],"source":" See the table below for details.</p>\\n"},{"content":"\\n&lt;p&gt;Read &lt;strong&gt;Decimal.MaxValue&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[130738,130788],"source":"\\n<p>Read <strong>Decimal.MaxValue</strong>.</p>\\n"},{"pos":[131738,131785],"content":"ReadContentAsAsync(Type, IXmlNamespaceResolver)","needQuote":true,"nodes":[{"content":"ReadContentAsAsync(Type, IXmlNamespaceResolver)","pos":[0,47]}]},{"content":"\\n&lt;p&gt;The type of the value to be returned.&lt;/p&gt;\\n","pos":[132692,132740],"source":"\\n<p>The type of the value to be returned.</p>\\n"},{"content":"\\n&lt;p&gt;The concatenated text content or attribute value converted to the requested type.&lt;/p&gt;\\n","pos":[133112,133204],"source":"\\n<p>The concatenated text content or attribute value converted to the requested type.</p>\\n"},{"pos":[134751,134792],"content":"ReadContentAsBase64(Byte[], Int32, Int32)","needQuote":true,"nodes":[{"content":"ReadContentAsBase64(Byte[], Int32, Int32)","pos":[0,41]}]},{"content":"\\n&lt;p&gt;The buffer into which to copy the resulting text.","pos":[135643,135697],"source":"\\n<p>The buffer into which to copy the resulting text."},{"content":"This value cannot be &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[135698,135747],"source":" This value cannot be <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The offset into the buffer where to start copying the result.&lt;/p&gt;\\n","pos":[135810,135882],"source":"\\n<p>The offset into the buffer where to start copying the result.</p>\\n"},{"content":"\\n&lt;p&gt;The maximum number of bytes to copy into the buffer.","pos":[135945,136002],"source":"\\n<p>The maximum number of bytes to copy into the buffer."},{"content":"The actual number of bytes copied is returned from this method.&lt;/p&gt;\\n","pos":[136003,136072],"source":" The actual number of bytes copied is returned from this method.</p>\\n"},{"content":"\\n&lt;p&gt;The number of bytes written to the buffer.&lt;/p&gt;\\n","pos":[136131,136184],"source":"\\n<p>The number of bytes written to the buffer.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;buffer&lt;/em&gt; value is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[136303,136365],"source":"\\n<p>The <em>buffer</em> value is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The index into the buffer or index + count is larger than the allocated buffer size.&lt;/p&gt;\\n","pos":[136787,136882],"source":"\\n<p>The index into the buffer or index + count is larger than the allocated buffer size.</p>\\n"},{"pos":[138591,138637],"content":"ReadContentAsBase64Async(Byte[], Int32, Int32)","needQuote":true,"nodes":[{"content":"ReadContentAsBase64Async(Byte[], Int32, Int32)","pos":[0,46]}]},{"content":"\\n&lt;p&gt;The buffer into which to copy the resulting text.","pos":[139538,139592],"source":"\\n<p>The buffer into which to copy the resulting text."},{"content":"This value cannot be &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[139593,139642],"source":" This value cannot be <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The offset into the buffer where to start copying the result.&lt;/p&gt;\\n","pos":[139705,139777],"source":"\\n<p>The offset into the buffer where to start copying the result.</p>\\n"},{"content":"\\n&lt;p&gt;The maximum number of bytes to copy into the buffer.","pos":[139840,139897],"source":"\\n<p>The maximum number of bytes to copy into the buffer."},{"content":"The actual number of bytes copied is returned from this method.&lt;/p&gt;\\n","pos":[139898,139967],"source":" The actual number of bytes copied is returned from this method.</p>\\n"},{"content":"\\n&lt;p&gt;The number of bytes written to the buffer.&lt;/p&gt;\\n","pos":[140055,140108],"source":"\\n<p>The number of bytes written to the buffer.</p>\\n"},{"pos":[141892,141933],"content":"ReadContentAsBinHex(Byte[], Int32, Int32)","needQuote":true,"nodes":[{"content":"ReadContentAsBinHex(Byte[], Int32, Int32)","pos":[0,41]}]},{"content":"\\n&lt;p&gt;The buffer into which to copy the resulting text.","pos":[142801,142855],"source":"\\n<p>The buffer into which to copy the resulting text."},{"content":"This value cannot be &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[142856,142905],"source":" This value cannot be <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The offset into the buffer where to start copying the result.&lt;/p&gt;\\n","pos":[142968,143040],"source":"\\n<p>The offset into the buffer where to start copying the result.</p>\\n"},{"content":"\\n&lt;p&gt;The maximum number of bytes to copy into the buffer.","pos":[143103,143160],"source":"\\n<p>The maximum number of bytes to copy into the buffer."},{"content":"The actual number of bytes copied is returned from this method.&lt;/p&gt;\\n","pos":[143161,143230],"source":" The actual number of bytes copied is returned from this method.</p>\\n"},{"content":"\\n&lt;p&gt;The number of bytes written to the buffer.&lt;/p&gt;\\n","pos":[143289,143342],"source":"\\n<p>The number of bytes written to the buffer.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;buffer&lt;/em&gt; value is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[143461,143523],"source":"\\n<p>The <em>buffer</em> value is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The index into the buffer or index + count is larger than the allocated buffer size.&lt;/p&gt;\\n","pos":[143945,144040],"source":"\\n<p>The index into the buffer or index + count is larger than the allocated buffer size.</p>\\n"},{"pos":[145749,145795],"content":"ReadContentAsBinHexAsync(Byte[], Int32, Int32)","needQuote":true,"nodes":[{"content":"ReadContentAsBinHexAsync(Byte[], Int32, Int32)","pos":[0,46]}]},{"content":"\\n&lt;p&gt;The buffer into which to copy the resulting text.","pos":[146713,146767],"source":"\\n<p>The buffer into which to copy the resulting text."},{"content":"This value cannot be &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[146768,146817],"source":" This value cannot be <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The offset into the buffer where to start copying the result.&lt;/p&gt;\\n","pos":[146880,146952],"source":"\\n<p>The offset into the buffer where to start copying the result.</p>\\n"},{"content":"\\n&lt;p&gt;The maximum number of bytes to copy into the buffer.","pos":[147015,147072],"source":"\\n<p>The maximum number of bytes to copy into the buffer."},{"content":"The actual number of bytes copied is returned from this method.&lt;/p&gt;\\n","pos":[147073,147142],"source":" The actual number of bytes copied is returned from this method.</p>\\n"},{"content":"\\n&lt;p&gt;The number of bytes written to the buffer.&lt;/p&gt;\\n","pos":[147230,147283],"source":"\\n<p>The number of bytes written to the buffer.</p>\\n"},{"pos":[148947,148969],"content":"ReadContentAsBoolean()","needQuote":true,"nodes":[{"content":"ReadContentAsBoolean()","pos":[0,22]}]},{"content":"\\n&lt;p&gt;The attempted cast is not valid.&lt;/p&gt;\\n","pos":[149922,149965],"source":"\\n<p>The attempted cast is not valid.</p>\\n"},{"content":"\\n&lt;p&gt;The string format is not valid.&lt;/p&gt;\\n","pos":[150058,150100],"source":"\\n<p>The string format is not valid.</p>\\n"},{"pos":[150919,150948],"content":"ReadContentAsDateTimeOffset()","needQuote":true,"nodes":[{"content":"ReadContentAsDateTimeOffset()","pos":[0,29]}]},{"pos":[152726,152748],"content":"ReadContentAsDecimal()","needQuote":true,"nodes":[{"content":"ReadContentAsDecimal()","pos":[0,22]}]},{"content":"\\n&lt;p&gt;The attempted cast is not valid.&lt;/p&gt;\\n","pos":[153785,153828],"source":"\\n<p>The attempted cast is not valid.</p>\\n"},{"content":"\\n&lt;p&gt;The string format is not valid.&lt;/p&gt;\\n","pos":[153921,153963],"source":"\\n<p>The string format is not valid.</p>\\n"},{"pos":[154758,154779],"content":"ReadContentAsDouble()","needQuote":true,"nodes":[{"content":"ReadContentAsDouble()","pos":[0,21]}]},{"content":"\\n&lt;p&gt;The text content as a double-precision floating-point number.&lt;/p&gt;\\n","pos":[155510,155582],"source":"\\n<p>The text content as a double-precision floating-point number.</p>\\n"},{"content":"\\n&lt;p&gt;The attempted cast is not valid.&lt;/p&gt;\\n","pos":[155699,155742],"source":"\\n<p>The attempted cast is not valid.</p>\\n"},{"content":"\\n&lt;p&gt;The string format is not valid.&lt;/p&gt;\\n","pos":[155835,155877],"source":"\\n<p>The string format is not valid.</p>\\n"},{"pos":[156668,156688],"content":"ReadContentAsFloat()","needQuote":true,"nodes":[{"content":"ReadContentAsFloat()","pos":[0,20]}]},{"content":"\\n&lt;p&gt;The text content at the current position as a single-precision floating point number.&lt;/p&gt;\\n","pos":[157414,157510],"source":"\\n<p>The text content at the current position as a single-precision floating point number.</p>\\n"},{"content":"\\n&lt;p&gt;The attempted cast is not valid.&lt;/p&gt;\\n","pos":[157627,157670],"source":"\\n<p>The attempted cast is not valid.</p>\\n"},{"content":"\\n&lt;p&gt;The string format is not valid.&lt;/p&gt;\\n","pos":[157763,157805],"source":"\\n<p>The string format is not valid.</p>\\n"},{"pos":[158589,158607],"content":"ReadContentAsInt()","needQuote":true,"nodes":[{"content":"ReadContentAsInt()","pos":[0,18]}]},{"content":"\\n&lt;p&gt;The text content as a 32-bit signed integer.&lt;/p&gt;\\n","pos":[159306,159361],"source":"\\n<p>The text content as a 32-bit signed integer.</p>\\n"},{"content":"\\n&lt;p&gt;The attempted cast is not valid.&lt;/p&gt;\\n","pos":[159478,159521],"source":"\\n<p>The attempted cast is not valid.</p>\\n"},{"content":"\\n&lt;p&gt;The string format is not valid.&lt;/p&gt;\\n","pos":[159614,159656],"source":"\\n<p>The string format is not valid.</p>\\n"},{"pos":[160441,160460],"content":"ReadContentAsLong()","needQuote":true,"nodes":[{"content":"ReadContentAsLong()","pos":[0,19]}]},{"content":"\\n&lt;p&gt;The text content as a 64-bit signed integer.&lt;/p&gt;\\n","pos":[161161,161216],"source":"\\n<p>The text content as a 64-bit signed integer.</p>\\n"},{"content":"\\n&lt;p&gt;The attempted cast is not valid.&lt;/p&gt;\\n","pos":[161333,161376],"source":"\\n<p>The attempted cast is not valid.</p>\\n"},{"content":"\\n&lt;p&gt;The string format is not valid.&lt;/p&gt;\\n","pos":[161469,161511],"source":"\\n<p>The string format is not valid.</p>\\n"},{"pos":[162303,162324],"content":"ReadContentAsObject()","needQuote":true,"nodes":[{"content":"ReadContentAsObject()","pos":[0,21]}]},{"content":"\\n&lt;p&gt;The text content as the most appropriate common language runtime (CLR) object.&lt;/p&gt;\\n","pos":[163091,163180],"source":"\\n<p>The text content as the most appropriate common language runtime (CLR) object.</p>\\n"},{"content":"\\n&lt;p&gt;The attempted cast is not valid.&lt;/p&gt;\\n","pos":[163297,163340],"source":"\\n<p>The attempted cast is not valid.</p>\\n"},{"content":"\\n&lt;p&gt;The string format is not valid.&lt;/p&gt;\\n","pos":[163433,163475],"source":"\\n<p>The string format is not valid.</p>\\n"},{"pos":[164284,164310],"content":"ReadContentAsObjectAsync()","needQuote":true,"nodes":[{"content":"ReadContentAsObjectAsync()","pos":[0,26]}]},{"content":"\\n&lt;p&gt;The text content as the most appropriate common language runtime (CLR) object.&lt;/p&gt;\\n","pos":[165156,165245],"source":"\\n<p>The text content as the most appropriate common language runtime (CLR) object.</p>\\n"},{"pos":[166648,166669],"content":"ReadContentAsString()","needQuote":true,"nodes":[{"content":"ReadContentAsString()","pos":[0,21]}]},{"content":"\\n&lt;p&gt;The attempted cast is not valid.&lt;/p&gt;\\n","pos":[167673,167716],"source":"\\n<p>The attempted cast is not valid.</p>\\n"},{"content":"\\n&lt;p&gt;The string format is not valid.&lt;/p&gt;\\n","pos":[167809,167851],"source":"\\n<p>The string format is not valid.</p>\\n"},{"pos":[168660,168686],"content":"ReadContentAsStringAsync()","needQuote":true,"nodes":[{"content":"ReadContentAsStringAsync()","pos":[0,26]}]},{"pos":[171196,171245],"content":"ReadElementContentAs(Type, IXmlNamespaceResolver)","needQuote":true,"nodes":[{"content":"ReadElementContentAs(Type, IXmlNamespaceResolver)","pos":[0,49]}]},{"content":"\\n&lt;p&gt;The element content converted to the requested typed object.&lt;/p&gt;\\n","pos":[172725,172796],"source":"\\n<p>The element content converted to the requested typed object.</p>\\n"},{"content":"\\n&lt;p&gt;The current element contains child elements.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;The element content cannot be converted to the requested type.&lt;/p&gt;\\n","pos":[173146,173285],"source":"\\n<p>The current element contains child elements.</p>\\n<p>-or-</p>\\n<p>The element content cannot be converted to the requested type.</p>\\n"},{"content":"\\n&lt;p&gt;The method is called with &lt;strong&gt;null&lt;/strong&gt; arguments.&lt;/p&gt;\\n","pos":[173390,173459],"source":"\\n<p>The method is called with <strong>null</strong> arguments.</p>\\n"},{"content":"\\n&lt;p&gt;Read &lt;strong&gt;Decimal.MaxValue&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[173556,173606],"source":"\\n<p>Read <strong>Decimal.MaxValue</strong>.</p>\\n"},{"pos":[174653,174718],"content":"ReadElementContentAs(Type, IXmlNamespaceResolver, String, String)","needQuote":true,"nodes":[{"content":"ReadElementContentAs(Type, IXmlNamespaceResolver, String, String)","pos":[0,65]}]},{"content":"\\n&lt;p&gt;The local name of the element.&lt;/p&gt;\\n","pos":[176417,176458],"source":"\\n<p>The local name of the element.</p>\\n"},{"content":"\\n&lt;p&gt;The namespace URI of the element.&lt;/p&gt;\\n","pos":[176529,176573],"source":"\\n<p>The namespace URI of the element.</p>\\n"},{"content":"\\n&lt;p&gt;The element content converted to the requested typed object.&lt;/p&gt;\\n","pos":[176633,176704],"source":"\\n<p>The element content converted to the requested typed object.</p>\\n"},{"content":"\\n&lt;p&gt;The current element contains child elements.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;The element content cannot be converted to the requested type.&lt;/p&gt;\\n","pos":[177054,177193],"source":"\\n<p>The current element contains child elements.</p>\\n<p>-or-</p>\\n<p>The element content cannot be converted to the requested type.</p>\\n"},{"content":"\\n&lt;p&gt;The method is called with &lt;strong&gt;null&lt;/strong&gt; arguments.&lt;/p&gt;\\n","pos":[177298,177367],"source":"\\n<p>The method is called with <strong>null</strong> arguments.</p>\\n"},{"content":"\\n&lt;p&gt;The specified local name and namespace URI do not match that of the current element being read.&lt;/p&gt;\\n","pos":[177464,177570],"source":"\\n<p>The specified local name and namespace URI do not match that of the current element being read.</p>\\n"},{"content":"\\n&lt;p&gt;Read &lt;strong&gt;Decimal.MaxValue&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[177667,177717],"source":"\\n<p>Read <strong>Decimal.MaxValue</strong>.</p>\\n"},{"pos":[178711,178765],"content":"ReadElementContentAsAsync(Type, IXmlNamespaceResolver)","needQuote":true,"nodes":[{"content":"ReadElementContentAsAsync(Type, IXmlNamespaceResolver)","pos":[0,54]}]},{"content":"\\n&lt;p&gt;The type of the value to be returned.&lt;/p&gt;\\n","pos":[179695,179743],"source":"\\n<p>The type of the value to be returned.</p>\\n"},{"content":"\\n&lt;p&gt;The element content converted to the requested typed object.&lt;/p&gt;\\n","pos":[180115,180186],"source":"\\n<p>The element content converted to the requested typed object.</p>\\n"},{"pos":[181761,181809],"content":"ReadElementContentAsBase64(Byte[], Int32, Int32)","needQuote":true,"nodes":[{"content":"ReadElementContentAsBase64(Byte[], Int32, Int32)","pos":[0,48]}]},{"content":"\\n&lt;p&gt;The buffer into which to copy the resulting text.","pos":[182692,182746],"source":"\\n<p>The buffer into which to copy the resulting text."},{"content":"This value cannot be &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[182747,182796],"source":" This value cannot be <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The offset into the buffer where to start copying the result.&lt;/p&gt;\\n","pos":[182859,182931],"source":"\\n<p>The offset into the buffer where to start copying the result.</p>\\n"},{"content":"\\n&lt;p&gt;The maximum number of bytes to copy into the buffer.","pos":[182994,183051],"source":"\\n<p>The maximum number of bytes to copy into the buffer."},{"content":"The actual number of bytes copied is returned from this method.&lt;/p&gt;\\n","pos":[183052,183121],"source":" The actual number of bytes copied is returned from this method.</p>\\n"},{"content":"\\n&lt;p&gt;The number of bytes written to the buffer.&lt;/p&gt;\\n","pos":[183180,183233],"source":"\\n<p>The number of bytes written to the buffer.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;buffer&lt;/em&gt; value is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[183352,183414],"source":"\\n<p>The <em>buffer</em> value is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The current node is not an element node.&lt;/p&gt;\\n","pos":[183527,183578],"source":"\\n<p>The current node is not an element node.</p>\\n"},{"content":"\\n&lt;p&gt;The index into the buffer or index + count is larger than the allocated buffer size.&lt;/p&gt;\\n","pos":[183695,183790],"source":"\\n<p>The index into the buffer or index + count is larger than the allocated buffer size.</p>\\n"},{"content":"\\n&lt;p&gt;The element contains mixed-content.&lt;/p&gt;\\n","pos":[184130,184176],"source":"\\n<p>The element contains mixed-content.</p>\\n"},{"content":"\\n&lt;p&gt;The content cannot be converted to the requested type.&lt;/p&gt;\\n","pos":[184269,184334],"source":"\\n<p>The content cannot be converted to the requested type.</p>\\n"},{"pos":[185760,185813],"content":"ReadElementContentAsBase64Async(Byte[], Int32, Int32)","needQuote":true,"nodes":[{"content":"ReadElementContentAsBase64Async(Byte[], Int32, Int32)","pos":[0,53]}]},{"content":"\\n&lt;p&gt;The buffer into which to copy the resulting text.","pos":[186746,186800],"source":"\\n<p>The buffer into which to copy the resulting text."},{"content":"This value cannot be &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[186801,186850],"source":" This value cannot be <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The offset into the buffer where to start copying the result.&lt;/p&gt;\\n","pos":[186913,186985],"source":"\\n<p>The offset into the buffer where to start copying the result.</p>\\n"},{"content":"\\n&lt;p&gt;The maximum number of bytes to copy into the buffer.","pos":[187048,187105],"source":"\\n<p>The maximum number of bytes to copy into the buffer."},{"content":"The actual number of bytes copied is returned from this method.&lt;/p&gt;\\n","pos":[187106,187175],"source":" The actual number of bytes copied is returned from this method.</p>\\n"},{"content":"\\n&lt;p&gt;The number of bytes written to the buffer.&lt;/p&gt;\\n","pos":[187263,187316],"source":"\\n<p>The number of bytes written to the buffer.</p>\\n"},{"pos":[189149,189197],"content":"ReadElementContentAsBinHex(Byte[], Int32, Int32)","needQuote":true,"nodes":[{"content":"ReadElementContentAsBinHex(Byte[], Int32, Int32)","pos":[0,48]}]},{"content":"\\n&lt;p&gt;The buffer into which to copy the resulting text.","pos":[190080,190134],"source":"\\n<p>The buffer into which to copy the resulting text."},{"content":"This value cannot be &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[190135,190184],"source":" This value cannot be <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The offset into the buffer where to start copying the result.&lt;/p&gt;\\n","pos":[190247,190319],"source":"\\n<p>The offset into the buffer where to start copying the result.</p>\\n"},{"content":"\\n&lt;p&gt;The maximum number of bytes to copy into the buffer.","pos":[190382,190439],"source":"\\n<p>The maximum number of bytes to copy into the buffer."},{"content":"The actual number of bytes copied is returned from this method.&lt;/p&gt;\\n","pos":[190440,190509],"source":" The actual number of bytes copied is returned from this method.</p>\\n"},{"content":"\\n&lt;p&gt;The number of bytes written to the buffer.&lt;/p&gt;\\n","pos":[190568,190621],"source":"\\n<p>The number of bytes written to the buffer.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;buffer&lt;/em&gt; value is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[190740,190802],"source":"\\n<p>The <em>buffer</em> value is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The current node is not an element node.&lt;/p&gt;\\n","pos":[190915,190966],"source":"\\n<p>The current node is not an element node.</p>\\n"},{"content":"\\n&lt;p&gt;The index into the buffer or index + count is larger than the allocated buffer size.&lt;/p&gt;\\n","pos":[191083,191178],"source":"\\n<p>The index into the buffer or index + count is larger than the allocated buffer size.</p>\\n"},{"content":"\\n&lt;p&gt;The element contains mixed-content.&lt;/p&gt;\\n","pos":[191518,191564],"source":"\\n<p>The element contains mixed-content.</p>\\n"},{"content":"\\n&lt;p&gt;The content cannot be converted to the requested type.&lt;/p&gt;\\n","pos":[191657,191722],"source":"\\n<p>The content cannot be converted to the requested type.</p>\\n"},{"pos":[193148,193201],"content":"ReadElementContentAsBinHexAsync(Byte[], Int32, Int32)","needQuote":true,"nodes":[{"content":"ReadElementContentAsBinHexAsync(Byte[], Int32, Int32)","pos":[0,53]}]},{"content":"\\n&lt;p&gt;The buffer into which to copy the resulting text.","pos":[194134,194188],"source":"\\n<p>The buffer into which to copy the resulting text."},{"content":"This value cannot be &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[194189,194238],"source":" This value cannot be <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The offset into the buffer where to start copying the result.&lt;/p&gt;\\n","pos":[194301,194373],"source":"\\n<p>The offset into the buffer where to start copying the result.</p>\\n"},{"content":"\\n&lt;p&gt;The maximum number of bytes to copy into the buffer.","pos":[194436,194493],"source":"\\n<p>The maximum number of bytes to copy into the buffer."},{"content":"The actual number of bytes copied is returned from this method.&lt;/p&gt;\\n","pos":[194494,194563],"source":" The actual number of bytes copied is returned from this method.</p>\\n"},{"content":"\\n&lt;p&gt;The number of bytes written to the buffer.&lt;/p&gt;\\n","pos":[194651,194704],"source":"\\n<p>The number of bytes written to the buffer.</p>\\n"},{"pos":[196417,196446],"content":"ReadElementContentAsBoolean()","needQuote":true,"nodes":[{"content":"ReadElementContentAsBoolean()","pos":[0,29]}]},{"content":"\\n&lt;p&gt;The method is called with &lt;strong&gt;null&lt;/strong&gt; arguments.&lt;/p&gt;\\n","pos":[198033,198102],"source":"\\n<p>The method is called with <strong>null</strong> arguments.</p>\\n"},{"pos":[199015,199058],"content":"ReadElementContentAsBoolean(String, String)","needQuote":true,"nodes":[{"content":"ReadElementContentAsBoolean(String, String)","pos":[0,43]}]},{"content":"\\n&lt;p&gt;The local name of the element.&lt;/p&gt;\\n","pos":[200098,200139],"source":"\\n<p>The local name of the element.</p>\\n"},{"content":"\\n&lt;p&gt;The namespace URI of the element.&lt;/p&gt;\\n","pos":[200210,200254],"source":"\\n<p>The namespace URI of the element.</p>\\n"},{"content":"\\n&lt;p&gt;The current element contains child elements.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;The element content cannot be converted to the requested type.&lt;/p&gt;\\n","pos":[200783,200922],"source":"\\n<p>The current element contains child elements.</p>\\n<p>-or-</p>\\n<p>The element content cannot be converted to the requested type.</p>\\n"},{"content":"\\n&lt;p&gt;The method is called with &lt;strong&gt;null&lt;/strong&gt; arguments.&lt;/p&gt;\\n","pos":[201027,201096],"source":"\\n<p>The method is called with <strong>null</strong> arguments.</p>\\n"},{"content":"\\n&lt;p&gt;The specified local name and namespace URI do not match that of the current element being read.&lt;/p&gt;\\n","pos":[201193,201299],"source":"\\n<p>The specified local name and namespace URI do not match that of the current element being read.</p>\\n"},{"pos":[202139,202168],"content":"ReadElementContentAsDecimal()","needQuote":true,"nodes":[{"content":"ReadElementContentAsDecimal()","pos":[0,29]}]},{"content":"\\n&lt;p&gt;The method is called with &lt;strong&gt;null&lt;/strong&gt; arguments.&lt;/p&gt;\\n","pos":[203751,203820],"source":"\\n<p>The method is called with <strong>null</strong> arguments.</p>\\n"},{"pos":[204733,204776],"content":"ReadElementContentAsDecimal(String, String)","needQuote":true,"nodes":[{"content":"ReadElementContentAsDecimal(String, String)","pos":[0,43]}]},{"content":"\\n&lt;p&gt;The local name of the element.&lt;/p&gt;\\n","pos":[205819,205860],"source":"\\n<p>The local name of the element.</p>\\n"},{"content":"\\n&lt;p&gt;The namespace URI of the element.&lt;/p&gt;\\n","pos":[205931,205975],"source":"\\n<p>The namespace URI of the element.</p>\\n"},{"content":"\\n&lt;p&gt;The method is called with &lt;strong&gt;null&lt;/strong&gt; arguments.&lt;/p&gt;\\n","pos":[206806,206875],"source":"\\n<p>The method is called with <strong>null</strong> arguments.</p>\\n"},{"content":"\\n&lt;p&gt;The specified local name and namespace URI do not match that of the current element being read.&lt;/p&gt;\\n","pos":[206972,207078],"source":"\\n<p>The specified local name and namespace URI do not match that of the current element being read.</p>\\n"},{"pos":[207915,207943],"content":"ReadElementContentAsDouble()","needQuote":true,"nodes":[{"content":"ReadElementContentAsDouble()","pos":[0,28]}]},{"content":"\\n&lt;p&gt;The element content as a double-precision floating-point number.&lt;/p&gt;\\n","pos":[208706,208781],"source":"\\n<p>The element content as a double-precision floating-point number.</p>\\n"},{"content":"\\n&lt;p&gt;The current element contains child elements.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;The element content cannot be converted to a double-precision floating-point number.&lt;/p&gt;\\n","pos":[209131,209292],"source":"\\n<p>The current element contains child elements.</p>\\n<p>-or-</p>\\n<p>The element content cannot be converted to a double-precision floating-point number.</p>\\n"},{"content":"\\n&lt;p&gt;The method is called with &lt;strong&gt;null&lt;/strong&gt; arguments.&lt;/p&gt;\\n","pos":[209397,209466],"source":"\\n<p>The method is called with <strong>null</strong> arguments.</p>\\n"},{"pos":[210375,210417],"content":"ReadElementContentAsDouble(String, String)","needQuote":true,"nodes":[{"content":"ReadElementContentAsDouble(String, String)","pos":[0,42]}]},{"content":"\\n&lt;p&gt;The local name of the element.&lt;/p&gt;\\n","pos":[211411,211452],"source":"\\n<p>The local name of the element.</p>\\n"},{"content":"\\n&lt;p&gt;The namespace URI of the element.&lt;/p&gt;\\n","pos":[211523,211567],"source":"\\n<p>The namespace URI of the element.</p>\\n"},{"content":"\\n&lt;p&gt;The element content as a double-precision floating-point number.&lt;/p&gt;\\n","pos":[211627,211702],"source":"\\n<p>The element content as a double-precision floating-point number.</p>\\n"},{"content":"\\n&lt;p&gt;The current element contains child elements.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;The element content cannot be converted to the requested type.&lt;/p&gt;\\n","pos":[212052,212191],"source":"\\n<p>The current element contains child elements.</p>\\n<p>-or-</p>\\n<p>The element content cannot be converted to the requested type.</p>\\n"},{"content":"\\n&lt;p&gt;The method is called with &lt;strong&gt;null&lt;/strong&gt; arguments.&lt;/p&gt;\\n","pos":[212296,212365],"source":"\\n<p>The method is called with <strong>null</strong> arguments.</p>\\n"},{"content":"\\n&lt;p&gt;The specified local name and namespace URI do not match that of the current element being read.&lt;/p&gt;\\n","pos":[212462,212568],"source":"\\n<p>The specified local name and namespace URI do not match that of the current element being read.</p>\\n"},{"pos":[213401,213428],"content":"ReadElementContentAsFloat()","needQuote":true,"nodes":[{"content":"ReadElementContentAsFloat()","pos":[0,27]}]},{"content":"\\n&lt;p&gt;The element content as a single-precision floating point number.&lt;/p&gt;\\n","pos":[214184,214259],"source":"\\n<p>The element content as a single-precision floating point number.</p>\\n"},{"content":"\\n&lt;p&gt;The current element contains child elements.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;The element content cannot be converted to a single-precision floating-point number.&lt;/p&gt;\\n","pos":[214609,214770],"source":"\\n<p>The current element contains child elements.</p>\\n<p>-or-</p>\\n<p>The element content cannot be converted to a single-precision floating-point number.</p>\\n"},{"content":"\\n&lt;p&gt;The method is called with &lt;strong&gt;null&lt;/strong&gt; arguments.&lt;/p&gt;\\n","pos":[214875,214944],"source":"\\n<p>The method is called with <strong>null</strong> arguments.</p>\\n"},{"pos":[215849,215890],"content":"ReadElementContentAsFloat(String, String)","needQuote":true,"nodes":[{"content":"ReadElementContentAsFloat(String, String)","pos":[0,41]}]},{"content":"\\n&lt;p&gt;The local name of the element.&lt;/p&gt;\\n","pos":[216879,216920],"source":"\\n<p>The local name of the element.</p>\\n"},{"content":"\\n&lt;p&gt;The namespace URI of the element.&lt;/p&gt;\\n","pos":[216991,217035],"source":"\\n<p>The namespace URI of the element.</p>\\n"},{"content":"\\n&lt;p&gt;The element content as a single-precision floating point number.&lt;/p&gt;\\n","pos":[217095,217170],"source":"\\n<p>The element content as a single-precision floating point number.</p>\\n"},{"content":"\\n&lt;p&gt;The current element contains child elements.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;The element content cannot be converted to a single-precision floating-point number.&lt;/p&gt;\\n","pos":[217520,217681],"source":"\\n<p>The current element contains child elements.</p>\\n<p>-or-</p>\\n<p>The element content cannot be converted to a single-precision floating-point number.</p>\\n"},{"content":"\\n&lt;p&gt;The method is called with &lt;strong&gt;null&lt;/strong&gt; arguments.&lt;/p&gt;\\n","pos":[217786,217855],"source":"\\n<p>The method is called with <strong>null</strong> arguments.</p>\\n"},{"content":"\\n&lt;p&gt;The specified local name and namespace URI do not match that of the current element being read.&lt;/p&gt;\\n","pos":[217952,218058],"source":"\\n<p>The specified local name and namespace URI do not match that of the current element being read.</p>\\n"},{"pos":[218884,218909],"content":"ReadElementContentAsInt()","needQuote":true,"nodes":[{"content":"ReadElementContentAsInt()","pos":[0,25]}]},{"content":"\\n&lt;p&gt;The element content as a 32-bit signed integer.&lt;/p&gt;\\n","pos":[219640,219698],"source":"\\n<p>The element content as a 32-bit signed integer.</p>\\n"},{"content":"\\n&lt;p&gt;The current element contains child elements.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;The element content cannot be converted to a 32-bit signed integer.&lt;/p&gt;\\n","pos":[220048,220192],"source":"\\n<p>The current element contains child elements.</p>\\n<p>-or-</p>\\n<p>The element content cannot be converted to a 32-bit signed integer.</p>\\n"},{"content":"\\n&lt;p&gt;The method is called with &lt;strong&gt;null&lt;/strong&gt; arguments.&lt;/p&gt;\\n","pos":[220297,220366],"source":"\\n<p>The method is called with <strong>null</strong> arguments.</p>\\n"},{"pos":[221263,221302],"content":"ReadElementContentAsInt(String, String)","needQuote":true,"nodes":[{"content":"ReadElementContentAsInt(String, String)","pos":[0,39]}]},{"content":"\\n&lt;p&gt;The local name of the element.&lt;/p&gt;\\n","pos":[222265,222306],"source":"\\n<p>The local name of the element.</p>\\n"},{"content":"\\n&lt;p&gt;The namespace URI of the element.&lt;/p&gt;\\n","pos":[222377,222421],"source":"\\n<p>The namespace URI of the element.</p>\\n"},{"content":"\\n&lt;p&gt;The element content as a 32-bit signed integer.&lt;/p&gt;\\n","pos":[222480,222538],"source":"\\n<p>The element content as a 32-bit signed integer.</p>\\n"},{"content":"\\n&lt;p&gt;The current element contains child elements.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;The element content cannot be converted to a 32-bit signed integer.&lt;/p&gt;\\n","pos":[222888,223032],"source":"\\n<p>The current element contains child elements.</p>\\n<p>-or-</p>\\n<p>The element content cannot be converted to a 32-bit signed integer.</p>\\n"},{"content":"\\n&lt;p&gt;The method is called with &lt;strong&gt;null&lt;/strong&gt; arguments.&lt;/p&gt;\\n","pos":[223137,223206],"source":"\\n<p>The method is called with <strong>null</strong> arguments.</p>\\n"},{"content":"\\n&lt;p&gt;The specified local name and namespace URI do not match that of the current element being read.&lt;/p&gt;\\n","pos":[223303,223409],"source":"\\n<p>The specified local name and namespace URI do not match that of the current element being read.</p>\\n"},{"pos":[224236,224262],"content":"ReadElementContentAsLong()","needQuote":true,"nodes":[{"content":"ReadElementContentAsLong()","pos":[0,26]}]},{"content":"\\n&lt;p&gt;The element content as a 64-bit signed integer.&lt;/p&gt;\\n","pos":[224995,225053],"source":"\\n<p>The element content as a 64-bit signed integer.</p>\\n"},{"content":"\\n&lt;p&gt;The current element contains child elements.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;The element content cannot be converted to a 64-bit signed integer.&lt;/p&gt;\\n","pos":[225403,225547],"source":"\\n<p>The current element contains child elements.</p>\\n<p>-or-</p>\\n<p>The element content cannot be converted to a 64-bit signed integer.</p>\\n"},{"content":"\\n&lt;p&gt;The method is called with &lt;strong&gt;null&lt;/strong&gt; arguments.&lt;/p&gt;\\n","pos":[225652,225721],"source":"\\n<p>The method is called with <strong>null</strong> arguments.</p>\\n"},{"pos":[226622,226662],"content":"ReadElementContentAsLong(String, String)","needQuote":true,"nodes":[{"content":"ReadElementContentAsLong(String, String)","pos":[0,40]}]},{"content":"\\n&lt;p&gt;The local name of the element.&lt;/p&gt;\\n","pos":[227627,227668],"source":"\\n<p>The local name of the element.</p>\\n"},{"content":"\\n&lt;p&gt;The namespace URI of the element.&lt;/p&gt;\\n","pos":[227739,227783],"source":"\\n<p>The namespace URI of the element.</p>\\n"},{"content":"\\n&lt;p&gt;The element content as a 64-bit signed integer.&lt;/p&gt;\\n","pos":[227842,227900],"source":"\\n<p>The element content as a 64-bit signed integer.</p>\\n"},{"content":"\\n&lt;p&gt;The current element contains child elements.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;The element content cannot be converted to a 64-bit signed integer.&lt;/p&gt;\\n","pos":[228250,228394],"source":"\\n<p>The current element contains child elements.</p>\\n<p>-or-</p>\\n<p>The element content cannot be converted to a 64-bit signed integer.</p>\\n"},{"content":"\\n&lt;p&gt;The method is called with &lt;strong&gt;null&lt;/strong&gt; arguments.&lt;/p&gt;\\n","pos":[228499,228568],"source":"\\n<p>The method is called with <strong>null</strong> arguments.</p>\\n"},{"content":"\\n&lt;p&gt;The specified local name and namespace URI do not match that of the current element being read.&lt;/p&gt;\\n","pos":[228665,228771],"source":"\\n<p>The specified local name and namespace URI do not match that of the current element being read.</p>\\n"},{"pos":[229605,229633],"content":"ReadElementContentAsObject()","needQuote":true,"nodes":[{"content":"ReadElementContentAsObject()","pos":[0,28]}]},{"content":"\\n&lt;p&gt;The current element contains child elements.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;The element content cannot be converted to the requested type&lt;/p&gt;\\n","pos":[231119,231257],"source":"\\n<p>The current element contains child elements.</p>\\n<p>-or-</p>\\n<p>The element content cannot be converted to the requested type</p>\\n"},{"content":"\\n&lt;p&gt;The method is called with &lt;strong&gt;null&lt;/strong&gt; arguments.&lt;/p&gt;\\n","pos":[231362,231431],"source":"\\n<p>The method is called with <strong>null</strong> arguments.</p>\\n"},{"pos":[232340,232382],"content":"ReadElementContentAsObject(String, String)","needQuote":true,"nodes":[{"content":"ReadElementContentAsObject(String, String)","pos":[0,42]}]},{"content":"\\n&lt;p&gt;The local name of the element.&lt;/p&gt;\\n","pos":[233412,233453],"source":"\\n<p>The local name of the element.</p>\\n"},{"content":"\\n&lt;p&gt;The namespace URI of the element.&lt;/p&gt;\\n","pos":[233524,233568],"source":"\\n<p>The namespace URI of the element.</p>\\n"},{"content":"\\n&lt;p&gt;The current element contains child elements.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;The element content cannot be converted to the requested type.&lt;/p&gt;\\n","pos":[234315,234454],"source":"\\n<p>The current element contains child elements.</p>\\n<p>-or-</p>\\n<p>The element content cannot be converted to the requested type.</p>\\n"},{"content":"\\n&lt;p&gt;The method is called with &lt;strong&gt;null&lt;/strong&gt; arguments.&lt;/p&gt;\\n","pos":[234559,234628],"source":"\\n<p>The method is called with <strong>null</strong> arguments.</p>\\n"},{"content":"\\n&lt;p&gt;The specified local name and namespace URI do not match that of the current element being read.&lt;/p&gt;\\n","pos":[234725,234831],"source":"\\n<p>The specified local name and namespace URI do not match that of the current element being read.</p>\\n"},{"pos":[235682,235715],"content":"ReadElementContentAsObjectAsync()","needQuote":true,"nodes":[{"content":"ReadElementContentAsObjectAsync()","pos":[0,33]}]},{"pos":[238361,238389],"content":"ReadElementContentAsString()","needQuote":true,"nodes":[{"content":"ReadElementContentAsString()","pos":[0,28]}]},{"content":"\\n&lt;p&gt;The method is called with &lt;strong&gt;null&lt;/strong&gt; arguments.&lt;/p&gt;\\n","pos":[239969,240038],"source":"\\n<p>The method is called with <strong>null</strong> arguments.</p>\\n"},{"pos":[240947,240989],"content":"ReadElementContentAsString(String, String)","needQuote":true,"nodes":[{"content":"ReadElementContentAsString(String, String)","pos":[0,42]}]},{"content":"\\n&lt;p&gt;The local name of the element.&lt;/p&gt;\\n","pos":[242025,242066],"source":"\\n<p>The local name of the element.</p>\\n"},{"content":"\\n&lt;p&gt;The namespace URI of the element.&lt;/p&gt;\\n","pos":[242137,242181],"source":"\\n<p>The namespace URI of the element.</p>\\n"},{"content":"\\n&lt;p&gt;The method is called with &lt;strong&gt;null&lt;/strong&gt; arguments.&lt;/p&gt;\\n","pos":[243016,243085],"source":"\\n<p>The method is called with <strong>null</strong> arguments.</p>\\n"},{"content":"\\n&lt;p&gt;The specified local name and namespace URI do not match that of the current element being read.&lt;/p&gt;\\n","pos":[243182,243288],"source":"\\n<p>The specified local name and namespace URI do not match that of the current element being read.</p>\\n"},{"pos":[244139,244172],"content":"ReadElementContentAsStringAsync()","needQuote":true,"nodes":[{"content":"ReadElementContentAsStringAsync()","pos":[0,33]}]},{"pos":[246568,246584],"content":"ReadEndElement()","needQuote":true,"nodes":[{"content":"ReadEndElement()","pos":[0,16]}]},{"content":"\\n&lt;p&gt;The current node is not an end tag or if incorrect XML is encountered in the input stream.&lt;/p&gt;\\n","pos":[247328,247429],"source":"\\n<p>The current node is not an end tag or if incorrect XML is encountered in the input stream.</p>\\n"},{"pos":[248311,248325],"content":"ReadInnerXml()","needQuote":true,"nodes":[{"content":"ReadInnerXml()","pos":[0,14]}]},{"content":"\\n&lt;p&gt;All the XML content, including markup, in the current node.","pos":[249026,249090],"source":"\\n<p>All the XML content, including markup, in the current node."},{"content":"If the current node has no children, an empty string is returned.&lt;/p&gt;\\n&lt;p&gt;If the current node is neither an element nor attribute, an empty string is returned.&lt;/p&gt;\\n","pos":[249091,249256],"source":" If the current node has no children, an empty string is returned.</p>\\n<p>If the current node is neither an element nor attribute, an empty string is returned.</p>\\n"},{"content":"\\n&lt;p&gt;The XML was not well-formed, or an error occurred while parsing the XML.&lt;/p&gt;\\n","pos":[249365,249448],"source":"\\n<p>The XML was not well-formed, or an error occurred while parsing the XML.</p>\\n"},{"pos":[250229,250248],"content":"ReadInnerXmlAsync()","needQuote":true,"nodes":[{"content":"ReadInnerXmlAsync()","pos":[0,19]}]},{"content":"\\n&lt;p&gt;All the XML content, including markup, in the current node.","pos":[250992,251056],"source":"\\n<p>All the XML content, including markup, in the current node."},{"content":"If the current node has no children, an empty string is returned.&lt;/p&gt;\\n","pos":[251057,251128],"source":" If the current node has no children, an empty string is returned.</p>\\n"},{"pos":[252503,252517],"content":"ReadOuterXml()","needQuote":true,"nodes":[{"content":"ReadOuterXml()","pos":[0,14]}]},{"content":"\\n&lt;p&gt;If the reader is positioned on an element or an attribute node, this method returns all the XML content, including markup, of the current node and all its children; otherwise, it returns an empty string.&lt;/p&gt;\\n","pos":[253246,253460],"source":"\\n<p>If the reader is positioned on an element or an attribute node, this method returns all the XML content, including markup, of the current node and all its children; otherwise, it returns an empty string.</p>\\n"},{"content":"\\n&lt;p&gt;The XML was not well-formed, or an error occurred while parsing the XML.&lt;/p&gt;\\n","pos":[253569,253652],"source":"\\n<p>The XML was not well-formed, or an error occurred while parsing the XML.</p>\\n"},{"pos":[254433,254452],"content":"ReadOuterXmlAsync()","needQuote":true,"nodes":[{"content":"ReadOuterXmlAsync()","pos":[0,19]}]},{"content":"\\n&lt;p&gt;If the reader is positioned on an element or an attribute node, this method returns all the XML content, including markup, of the current node and all its children; otherwise, it returns an empty string.&lt;/p&gt;\\n","pos":[255224,255438],"source":"\\n<p>If the reader is positioned on an element or an attribute node, this method returns all the XML content, including markup, of the current node and all its children; otherwise, it returns an empty string.</p>\\n"},{"pos":[256825,256843],"content":"ReadStartElement()","needQuote":true,"nodes":[{"content":"ReadStartElement()","pos":[0,18]}]},{"content":"\\n&lt;p&gt;Incorrect XML was encountered in the input stream.&lt;/p&gt;\\n","pos":[257587,257648],"source":"\\n<p>Incorrect XML was encountered in the input stream.</p>\\n"},{"pos":[258585,258609],"content":"ReadStartElement(String)","needQuote":true,"nodes":[{"content":"ReadStartElement(String)","pos":[0,24]}]},{"content":"\\n&lt;p&gt;The qualified name of the element.&lt;/p&gt;\\n","pos":[259472,259517],"source":"\\n<p>The qualified name of the element.</p>\\n"},{"pos":[260840,260872],"content":"ReadStartElement(String, String)","needQuote":true,"nodes":[{"content":"ReadStartElement(String, String)","pos":[0,32]}]},{"content":"\\n&lt;p&gt;The local name of the element.&lt;/p&gt;\\n","pos":[261893,261934],"source":"\\n<p>The local name of the element.</p>\\n"},{"content":"\\n&lt;p&gt;The namespace URI of the element.&lt;/p&gt;\\n","pos":[261995,262039],"source":"\\n<p>The namespace URI of the element.</p>\\n"},{"pos":[263380,263393],"content":"ReadSubtree()","needQuote":true,"nodes":[{"content":"ReadSubtree()","pos":[0,13]}]},{"content":"\\n&lt;p&gt;The XML reader isn't positioned on an element when this method is called.&lt;/p&gt;\\n","pos":[264674,264758],"source":"\\n<p>The XML reader isn't positioned on an element when this method is called.</p>\\n"},{"pos":[265580,265604],"content":"ReadToDescendant(String)","needQuote":true,"nodes":[{"content":"ReadToDescendant(String)","pos":[0,24]}]},{"content":"\\n&lt;p&gt;The qualified name of the element you wish to move to.&lt;/p&gt;\\n","pos":[266449,266514],"source":"\\n<p>The qualified name of the element you wish to move to.</p>\\n"},{"content":"\\n&lt;p&gt;The parameter is an empty string.&lt;/p&gt;\\n","pos":[267988,268032],"source":"\\n<p>The parameter is an empty string.</p>\\n"},{"pos":[268445,268477],"content":"ReadToDescendant(String, String)","needQuote":true,"nodes":[{"content":"ReadToDescendant(String, String)","pos":[0,32]}]},{"content":"\\n&lt;p&gt;The local name of the element you wish to move to.&lt;/p&gt;\\n","pos":[269411,269472],"source":"\\n<p>The local name of the element you wish to move to.</p>\\n"},{"content":"\\n&lt;p&gt;The namespace URI of the element you wish to move to.&lt;/p&gt;\\n","pos":[269543,269607],"source":"\\n<p>The namespace URI of the element you wish to move to.</p>\\n"},{"content":"\\n&lt;p&gt;Both parameter values are &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[271103,271162],"source":"\\n<p>Both parameter values are <strong>null</strong>.</p>\\n"},{"pos":[271538,271561],"content":"ReadToFollowing(String)","needQuote":true,"nodes":[{"content":"ReadToFollowing(String)","pos":[0,23]}]},{"content":"\\n&lt;p&gt;The qualified name of the element.&lt;/p&gt;\\n","pos":[272309,272354],"source":"\\n<p>The qualified name of the element.</p>\\n"},{"content":"\\n&lt;p&gt;The parameter is an empty string.&lt;/p&gt;\\n","pos":[273204,273248],"source":"\\n<p>The parameter is an empty string.</p>\\n"},{"pos":[273657,273688],"content":"ReadToFollowing(String, String)","needQuote":true,"nodes":[{"content":"ReadToFollowing(String, String)","pos":[0,31]}]},{"content":"\\n&lt;p&gt;The local name of the element.&lt;/p&gt;\\n","pos":[274525,274566],"source":"\\n<p>The local name of the element.</p>\\n"},{"content":"\\n&lt;p&gt;The namespace URI of the element.&lt;/p&gt;\\n","pos":[274637,274681],"source":"\\n<p>The namespace URI of the element.</p>\\n"},{"content":"\\n&lt;p&gt;Both parameter values are &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[275539,275598],"source":"\\n<p>Both parameter values are <strong>null</strong>.</p>\\n"},{"pos":[275979,276004],"content":"ReadToNextSibling(String)","needQuote":true,"nodes":[{"content":"ReadToNextSibling(String)","pos":[0,25]}]},{"content":"\\n&lt;p&gt;The qualified name of the sibling element you wish to move to.&lt;/p&gt;\\n","pos":[276796,276869],"source":"\\n<p>The qualified name of the sibling element you wish to move to.</p>\\n"},{"content":"\\n&lt;p&gt;The parameter is an empty string.&lt;/p&gt;\\n","pos":[277873,277917],"source":"\\n<p>The parameter is an empty string.</p>\\n"},{"pos":[278334,278367],"content":"ReadToNextSibling(String, String)","needQuote":true,"nodes":[{"content":"ReadToNextSibling(String, String)","pos":[0,33]}]},{"content":"\\n&lt;p&gt;The local name of the sibling element you wish to move to.&lt;/p&gt;\\n","pos":[279248,279317],"source":"\\n<p>The local name of the sibling element you wish to move to.</p>\\n"},{"content":"\\n&lt;p&gt;The namespace URI of the sibling element you wish to move to.&lt;/p&gt;\\n","pos":[279388,279460],"source":"\\n<p>The namespace URI of the sibling element you wish to move to.</p>\\n"},{"content":"\\n&lt;p&gt;Both parameter values are &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[280473,280532],"source":"\\n<p>Both parameter values are <strong>null</strong>.</p>\\n"},{"pos":[280984,281020],"content":"ReadValueChunk(Char[], Int32, Int32)","needQuote":true,"nodes":[{"content":"ReadValueChunk(Char[], Int32, Int32)","pos":[0,36]}]},{"content":"\\n&lt;p&gt;The array of characters that serves as the buffer to which the text contents are written.","pos":[281845,281939],"source":"\\n<p>The array of characters that serves as the buffer to which the text contents are written."},{"content":"This value cannot be &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[281940,281989],"source":" This value cannot be <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The maximum number of characters to copy into the buffer.","pos":[282276,282338],"source":"\\n<p>The maximum number of characters to copy into the buffer."},{"content":"The actual number of characters copied is returned from this method.&lt;/p&gt;\\n","pos":[282339,282413],"source":" The actual number of characters copied is returned from this method.</p>\\n"},{"content":"\\n&lt;p&gt;The number of characters read into the buffer.","pos":[282472,282523],"source":"\\n<p>The number of characters read into the buffer."},{"content":"The value zero is returned when there is no more text content.&lt;/p&gt;\\n","pos":[282524,282592],"source":" The value zero is returned when there is no more text content.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;buffer&lt;/em&gt; value is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[282992,283054],"source":"\\n<p>The <em>buffer</em> value is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The index into the buffer, or index + count is larger than the allocated buffer size.&lt;/p&gt;\\n","pos":[283171,283267],"source":"\\n<p>The index into the buffer, or index + count is larger than the allocated buffer size.</p>\\n"},{"content":"\\n&lt;p&gt;The XML data is not well-formed.&lt;/p&gt;\\n","pos":[283607,283650],"source":"\\n<p>The XML data is not well-formed.</p>\\n"},{"pos":[284790,284831],"content":"ReadValueChunkAsync(Char[], Int32, Int32)","needQuote":true,"nodes":[{"content":"ReadValueChunkAsync(Char[], Int32, Int32)","pos":[0,41]}]},{"content":"\\n&lt;p&gt;The array of characters that serves as the buffer to which the text contents are written.","pos":[285706,285800],"source":"\\n<p>The array of characters that serves as the buffer to which the text contents are written."},{"content":"This value cannot be &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[285801,285850],"source":" This value cannot be <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The maximum number of characters to copy into the buffer.","pos":[286137,286199],"source":"\\n<p>The maximum number of characters to copy into the buffer."},{"content":"The actual number of characters copied is returned from this method.&lt;/p&gt;\\n","pos":[286200,286274],"source":" The actual number of characters copied is returned from this method.</p>\\n"},{"content":"\\n&lt;p&gt;The number of characters read into the buffer.","pos":[286362,286413],"source":"\\n<p>The number of characters read into the buffer."},{"content":"The value zero is returned when there is no more text content.&lt;/p&gt;\\n","pos":[286414,286482],"source":" The value zero is returned when there is no more text content.</p>\\n"},{"pos":[288105,288120],"content":"ResolveEntity()","needQuote":true,"nodes":[{"content":"ResolveEntity()","pos":[0,15]}]},{"pos":[290109,290115],"content":"Skip()","needQuote":true,"nodes":[{"content":"Skip()","pos":[0,6]}]},{"pos":[291420,291431],"content":"SkipAsync()","needQuote":true,"nodes":[{"content":"SkipAsync()","pos":[0,11]}]},{"content":"\\n&lt;p&gt;The current node.&lt;/p&gt;\\n","pos":[292095,292123],"source":"\\n<p>The current node.</p>\\n"},{"pos":[293373,293383],"content":"System.Xml","needQuote":true,"nodes":[{"content":"System.Xml","pos":[0,10]}]},{"pos":[293526,293532],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[293682,293693],"content":"IDisposable","needQuote":true,"nodes":[{"content":"IDisposable","pos":[0,11]}]},{"pos":[293868,293878],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[293973,293981],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[294050,294051],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[294078,294079],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[294149,294157],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[294226,294227],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[294254,294255],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[294438,294452],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[294571,294577],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[294644,294645],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[294695,294701],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[294761,294762],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[294845,294851],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[294918,294919],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[294969,294975],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[295035,295036],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[295250,295272],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[295420,295426],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[295493,295494],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[295544,295550],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[295611,295612]},{"pos":[295667,295673],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[295733,295734],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[295831,295837],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[295904,295905],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[295955,295961],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[296022,296023]},{"pos":[296078,296084],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[296144,296145],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[296390,296421],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[296587,296602],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[296678,296679],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[296729,296735],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[296796,296797]},{"pos":[296852,296858],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[296918,296919],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[297025,297040],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[297116,297117],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[297167,297173],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[297234,297235]},{"pos":[297290,297296],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[297356,297357],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[297587,297600],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[297701,297712],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[297784,297785],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[297812,297813],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[297886,297897],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[297969,297970],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[297997,297998],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[298173,298182],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[298275,298282],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[298350,298351],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[298378,298379],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[298448,298455],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[298523,298524],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[298551,298552],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[298727,298744],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[298853,298868],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[298944,298945],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[298972,298973],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[299050,299065],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[299141,299142],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[299169,299170],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[299315,299321],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[299451,299456],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[299598,299604],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[299750,299757],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[299919,299931],"content":"XmlNameTable","needQuote":true,"nodes":[{"content":"XmlNameTable","pos":[0,12]}]},{"pos":[300115,300126],"content":"XmlNodeType","needQuote":true,"nodes":[{"content":"XmlNodeType","pos":[0,11]}]},{"pos":[300305,300314],"content":"ReadState","needQuote":true,"nodes":[{"content":"ReadState","pos":[0,9]}]},{"pos":[300495,300512],"content":"XmlReaderSettings","needQuote":true,"nodes":[{"content":"XmlReaderSettings","pos":[0,17]}]},{"pos":[300696,300700],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[300849,300857],"content":"XmlSpace","needQuote":true,"nodes":[{"content":"XmlSpace","pos":[0,8]}]},{"pos":[301022,301028],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[301190,301199],"content":"XmlReader","needQuote":true,"nodes":[{"content":"XmlReader","pos":[0,9]}]},{"pos":[301340,301349],"content":"System.IO","needQuote":true,"nodes":[{"content":"System.IO","pos":[0,9]}]},{"pos":[301507,301523],"content":"XmlParserContext","needQuote":true,"nodes":[{"content":"XmlParserContext","pos":[0,16]}]},{"pos":[301716,301726],"content":"TextReader","needQuote":true,"nodes":[{"content":"TextReader","pos":[0,10]}]},{"pos":[301914,301923],"content":"Dispose()","needQuote":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[302026,302033],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[302085,302086],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[302113,302114],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[302188,302195],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[302247,302248],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[302275,302276],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[302508,302520],"content":"Task<String>","needQuote":true,"nodes":[{"content":"Task&lt;String&gt;","pos":[0,12],"source":"Task<String>"}]},{"pos":[302728,302732],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[302806,302807],"content":"<","needQuote":true,"nodes":[]},{"pos":[302857,302863],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[303005,303009],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"content":"(Of","pos":[303084,303087]},{"pos":[303144,303150],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[303210,303211],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[303415,303428],"content":"Task<TResult>","needQuote":true,"nodes":[{"content":"Task&lt;TResult&gt;","pos":[0,13],"source":"Task<TResult>"}]},{"pos":[303625,303629],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[303682,303683],"content":"<","needQuote":true,"nodes":[]},{"pos":[303710,303717],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[303832,303836],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"content":"(Of","pos":[303890,303893]},{"pos":[303927,303934],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[303967,303968],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[304154,304176],"content":"System.Threading.Tasks","needQuote":true,"nodes":[{"content":"System.Threading.Tasks","pos":[0,22]}]},{"pos":[304433,304450],"content":"Task<XmlNodeType>","needQuote":true,"nodes":[{"content":"Task&lt;XmlNodeType&gt;","pos":[0,17],"source":"Task<XmlNodeType>"}]},{"pos":[304681,304685],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[304759,304760],"content":"<","needQuote":true,"nodes":[]},{"pos":[304819,304830],"content":"XmlNodeType","needQuote":true,"nodes":[{"content":"XmlNodeType","pos":[0,11]}]},{"pos":[304960,304964],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"content":"(Of","pos":[305039,305042]},{"pos":[305108,305119],"content":"XmlNodeType","needQuote":true,"nodes":[{"content":"XmlNodeType","pos":[0,11]}]},{"pos":[305167,305168],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[305462,305475],"content":"Task<Boolean>","needQuote":true,"nodes":[{"content":"Task&lt;Boolean&gt;","pos":[0,13],"source":"Task<Boolean>"}]},{"pos":[305686,305690],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[305764,305765],"content":"<","needQuote":true,"nodes":[]},{"pos":[305816,305823],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[305966,305970],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"content":"(Of","pos":[306045,306048]},{"pos":[306106,306113],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[306174,306175],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[306406,306427],"content":"IXmlNamespaceResolver","needQuote":true,"nodes":[{"content":"IXmlNamespaceResolver","pos":[0,21]}]},{"pos":[306694,306706],"content":"Task<Object>","needQuote":true,"nodes":[{"content":"Task&lt;Object&gt;","pos":[0,12],"source":"Task<Object>"}]},{"pos":[306914,306918],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[306992,306993],"content":"<","needQuote":true,"nodes":[]},{"pos":[307043,307049],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[307191,307195],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"content":"(Of","pos":[307270,307273]},{"pos":[307330,307336],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[307396,307397],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[307565,307571],"content":"Byte[]","needQuote":true,"nodes":[{"content":"Byte[]","pos":[0,6]}]},{"pos":[307691,307695],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[307754,307756]},{"pos":[307819,307823],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[307881,307883],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[308084,308095],"content":"Task<Int32>","needQuote":true,"nodes":[{"content":"Task&lt;Int32&gt;","pos":[0,11],"source":"Task<Int32>"}]},{"pos":[308300,308304],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[308378,308379],"content":"<","needQuote":true,"nodes":[]},{"pos":[308428,308433],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[308574,308578],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"content":"(Of","pos":[308653,308656]},{"pos":[308712,308717],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[308776,308777],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[308987,309001],"content":"DateTimeOffset","needQuote":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[309171,309178],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[309326,309332],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[309477,309483],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[309627,309632],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[309737,309743],"content":"Char[]","needQuote":true,"nodes":[{"content":"Char[]","pos":[0,6]}]},{"pos":[309863,309867],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"content":"[]","pos":[309926,309928]},{"pos":[309991,309995],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[310053,310055],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[310218,310222],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[310412,310437],"content":"InvalidOperationException","needQuote":true,"nodes":[{"content":"InvalidOperationException","pos":[0,25]}]},{"pos":[310637,310658],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[310851,310868],"content":"SecurityException","needQuote":true,"nodes":[{"content":"SecurityException","pos":[0,17]}]},{"pos":[311075,311092],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]},{"pos":[311271,311292],"content":"FileNotFoundException","needQuote":true,"nodes":[{"content":"FileNotFoundException","pos":[0,21]}]},{"pos":[311483,311501],"content":"UriFormatException","needQuote":true,"nodes":[{"content":"UriFormatException","pos":[0,18]}]},{"pos":[311686,311713],"content":"ArgumentOutOfRangeException","needQuote":true,"nodes":[{"content":"ArgumentOutOfRangeException","pos":[0,27]}]},{"pos":[311914,311926],"content":"XmlException","needQuote":true,"nodes":[{"content":"XmlException","pos":[0,12]}]},{"pos":[312106,312121],"content":"FormatException","needQuote":true,"nodes":[{"content":"FormatException","pos":[0,15]}]},{"pos":[312290,312310],"content":"InvalidCastException","needQuote":true,"nodes":[{"content":"InvalidCastException","pos":[0,20]}]},{"pos":[312491,312508],"content":"OverflowException","needQuote":true,"nodes":[{"content":"OverflowException","pos":[0,17]}]},{"pos":[312701,312722],"content":"NotSupportedException","needQuote":true,"nodes":[{"content":"NotSupportedException","pos":[0,21]}]}],"content":"items:\n- uid: System.Xml.XmlReader\n  commentId: T:System.Xml.XmlReader\n  id: XmlReader\n  parent: System.Xml\n  children:\n  - System.Xml.XmlReader.#ctor\n  - System.Xml.XmlReader.AttributeCount\n  - System.Xml.XmlReader.BaseURI\n  - System.Xml.XmlReader.CanReadBinaryContent\n  - System.Xml.XmlReader.CanReadValueChunk\n  - System.Xml.XmlReader.CanResolveEntity\n  - System.Xml.XmlReader.Create(System.IO.Stream)\n  - System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings)\n  - System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)\n  - System.Xml.XmlReader.Create(System.IO.TextReader)\n  - System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings)\n  - System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)\n  - System.Xml.XmlReader.Create(System.String)\n  - System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings)\n  - System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)\n  - System.Xml.XmlReader.Depth\n  - System.Xml.XmlReader.Dispose\n  - System.Xml.XmlReader.Dispose(System.Boolean)\n  - System.Xml.XmlReader.EOF\n  - System.Xml.XmlReader.GetAttribute(System.Int32)\n  - System.Xml.XmlReader.GetAttribute(System.String)\n  - System.Xml.XmlReader.GetAttribute(System.String,System.String)\n  - System.Xml.XmlReader.GetValueAsync\n  - System.Xml.XmlReader.HasAttributes\n  - System.Xml.XmlReader.HasValue\n  - System.Xml.XmlReader.IsDefault\n  - System.Xml.XmlReader.IsEmptyElement\n  - System.Xml.XmlReader.IsName(System.String)\n  - System.Xml.XmlReader.IsNameToken(System.String)\n  - System.Xml.XmlReader.IsStartElement\n  - System.Xml.XmlReader.IsStartElement(System.String)\n  - System.Xml.XmlReader.IsStartElement(System.String,System.String)\n  - System.Xml.XmlReader.Item(System.Int32)\n  - System.Xml.XmlReader.Item(System.String)\n  - System.Xml.XmlReader.Item(System.String,System.String)\n  - System.Xml.XmlReader.LocalName\n  - System.Xml.XmlReader.LookupNamespace(System.String)\n  - System.Xml.XmlReader.MoveToAttribute(System.Int32)\n  - System.Xml.XmlReader.MoveToAttribute(System.String)\n  - System.Xml.XmlReader.MoveToAttribute(System.String,System.String)\n  - System.Xml.XmlReader.MoveToContent\n  - System.Xml.XmlReader.MoveToContentAsync\n  - System.Xml.XmlReader.MoveToElement\n  - System.Xml.XmlReader.MoveToFirstAttribute\n  - System.Xml.XmlReader.MoveToNextAttribute\n  - System.Xml.XmlReader.Name\n  - System.Xml.XmlReader.NamespaceURI\n  - System.Xml.XmlReader.NameTable\n  - System.Xml.XmlReader.NodeType\n  - System.Xml.XmlReader.Prefix\n  - System.Xml.XmlReader.Read\n  - System.Xml.XmlReader.ReadAsync\n  - System.Xml.XmlReader.ReadAttributeValue\n  - System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)\n  - System.Xml.XmlReader.ReadContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)\n  - System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)\n  - System.Xml.XmlReader.ReadContentAsBase64Async(System.Byte[],System.Int32,System.Int32)\n  - System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)\n  - System.Xml.XmlReader.ReadContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)\n  - System.Xml.XmlReader.ReadContentAsBoolean\n  - System.Xml.XmlReader.ReadContentAsDateTimeOffset\n  - System.Xml.XmlReader.ReadContentAsDecimal\n  - System.Xml.XmlReader.ReadContentAsDouble\n  - System.Xml.XmlReader.ReadContentAsFloat\n  - System.Xml.XmlReader.ReadContentAsInt\n  - System.Xml.XmlReader.ReadContentAsLong\n  - System.Xml.XmlReader.ReadContentAsObject\n  - System.Xml.XmlReader.ReadContentAsObjectAsync\n  - System.Xml.XmlReader.ReadContentAsString\n  - System.Xml.XmlReader.ReadContentAsStringAsync\n  - System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)\n  - System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)\n  - System.Xml.XmlReader.ReadElementContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)\n  - System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)\n  - System.Xml.XmlReader.ReadElementContentAsBase64Async(System.Byte[],System.Int32,System.Int32)\n  - System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)\n  - System.Xml.XmlReader.ReadElementContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)\n  - System.Xml.XmlReader.ReadElementContentAsBoolean\n  - System.Xml.XmlReader.ReadElementContentAsBoolean(System.String,System.String)\n  - System.Xml.XmlReader.ReadElementContentAsDecimal\n  - System.Xml.XmlReader.ReadElementContentAsDecimal(System.String,System.String)\n  - System.Xml.XmlReader.ReadElementContentAsDouble\n  - System.Xml.XmlReader.ReadElementContentAsDouble(System.String,System.String)\n  - System.Xml.XmlReader.ReadElementContentAsFloat\n  - System.Xml.XmlReader.ReadElementContentAsFloat(System.String,System.String)\n  - System.Xml.XmlReader.ReadElementContentAsInt\n  - System.Xml.XmlReader.ReadElementContentAsInt(System.String,System.String)\n  - System.Xml.XmlReader.ReadElementContentAsLong\n  - System.Xml.XmlReader.ReadElementContentAsLong(System.String,System.String)\n  - System.Xml.XmlReader.ReadElementContentAsObject\n  - System.Xml.XmlReader.ReadElementContentAsObject(System.String,System.String)\n  - System.Xml.XmlReader.ReadElementContentAsObjectAsync\n  - System.Xml.XmlReader.ReadElementContentAsString\n  - System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)\n  - System.Xml.XmlReader.ReadElementContentAsStringAsync\n  - System.Xml.XmlReader.ReadEndElement\n  - System.Xml.XmlReader.ReadInnerXml\n  - System.Xml.XmlReader.ReadInnerXmlAsync\n  - System.Xml.XmlReader.ReadOuterXml\n  - System.Xml.XmlReader.ReadOuterXmlAsync\n  - System.Xml.XmlReader.ReadStartElement\n  - System.Xml.XmlReader.ReadStartElement(System.String)\n  - System.Xml.XmlReader.ReadStartElement(System.String,System.String)\n  - System.Xml.XmlReader.ReadState\n  - System.Xml.XmlReader.ReadSubtree\n  - System.Xml.XmlReader.ReadToDescendant(System.String)\n  - System.Xml.XmlReader.ReadToDescendant(System.String,System.String)\n  - System.Xml.XmlReader.ReadToFollowing(System.String)\n  - System.Xml.XmlReader.ReadToFollowing(System.String,System.String)\n  - System.Xml.XmlReader.ReadToNextSibling(System.String)\n  - System.Xml.XmlReader.ReadToNextSibling(System.String,System.String)\n  - System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)\n  - System.Xml.XmlReader.ReadValueChunkAsync(System.Char[],System.Int32,System.Int32)\n  - System.Xml.XmlReader.ResolveEntity\n  - System.Xml.XmlReader.Settings\n  - System.Xml.XmlReader.Skip\n  - System.Xml.XmlReader.SkipAsync\n  - System.Xml.XmlReader.Value\n  - System.Xml.XmlReader.ValueType\n  - System.Xml.XmlReader.XmlLang\n  - System.Xml.XmlReader.XmlSpace\n  langs:\n  - csharp\n  - vb\n  name: XmlReader\n  fullName: System.Xml.XmlReader\n  type: Class\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: XmlReader\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 229\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Represents a reader that provides fast, noncached, forward-only access to XML data.</p>\\n\"\n  syntax:\n    content: 'public abstract class XmlReader : IDisposable'\n    content.vb: >-\n      Public MustInherit Class XmlReader\n          Implements IDisposable\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - abstract\n  - class\n  modifiers.vb:\n  - Public\n  - MustInherit\n  - Class\n  nameWithType: XmlReader\n- uid: System.Xml.XmlReader.#ctor\n  commentId: M:System.Xml.XmlReader.#ctor\n  id: '#ctor'\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: XmlReader()\n  fullName: System.Xml.XmlReader.XmlReader()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 231\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Initializes a new instance of the <strong>XmlReader</strong> class.</p>\\n\"\n  syntax:\n    content: protected XmlReader()\n    content.vb: Protected Sub New\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: XmlReader.XmlReader()\n- uid: System.Xml.XmlReader.AttributeCount\n  commentId: P:System.Xml.XmlReader.AttributeCount\n  id: AttributeCount\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: AttributeCount\n  fullName: System.Xml.XmlReader.AttributeCount\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AttributeCount\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 232\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>When overridden in a derived class, gets the number of attributes on the current node.</p>\\n\"\n  syntax:\n    content: public abstract int AttributeCount { get; }\n    content.vb: Public MustOverride ReadOnly Property AttributeCount As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The number of attributes on the current node.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: XmlReader.AttributeCount\n- uid: System.Xml.XmlReader.BaseURI\n  commentId: P:System.Xml.XmlReader.BaseURI\n  id: BaseURI\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: BaseURI\n  fullName: System.Xml.XmlReader.BaseURI\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: BaseURI\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 233\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>When overridden in a derived class, gets the base URI of the current node.</p>\\n\"\n  syntax:\n    content: public abstract string BaseURI { get; }\n    content.vb: Public MustOverride ReadOnly Property BaseURI As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The base URI of the current node.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: XmlReader.BaseURI\n- uid: System.Xml.XmlReader.CanReadBinaryContent\n  commentId: P:System.Xml.XmlReader.CanReadBinaryContent\n  id: CanReadBinaryContent\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: CanReadBinaryContent\n  fullName: System.Xml.XmlReader.CanReadBinaryContent\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CanReadBinaryContent\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 234\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Gets a value indicating whether the <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> implements the binary content read methods.</p>\\n\"\n  syntax:\n    content: public virtual bool CanReadBinaryContent { get; }\n    content.vb: Public Overridable ReadOnly Property CanReadBinaryContent As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the binary content read methods are implemented; otherwise <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  nameWithType: XmlReader.CanReadBinaryContent\n- uid: System.Xml.XmlReader.CanReadValueChunk\n  commentId: P:System.Xml.XmlReader.CanReadValueChunk\n  id: CanReadValueChunk\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: CanReadValueChunk\n  fullName: System.Xml.XmlReader.CanReadValueChunk\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CanReadValueChunk\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 235\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Gets a value indicating whether the <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> implements the <xref href=\\\"System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method.</p>\\n\"\n  syntax:\n    content: public virtual bool CanReadValueChunk { get; }\n    content.vb: Public Overridable ReadOnly Property CanReadValueChunk As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> implements the <xref href=\\\"System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method; otherwise <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  nameWithType: XmlReader.CanReadValueChunk\n- uid: System.Xml.XmlReader.CanResolveEntity\n  commentId: P:System.Xml.XmlReader.CanResolveEntity\n  id: CanResolveEntity\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: CanResolveEntity\n  fullName: System.Xml.XmlReader.CanResolveEntity\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CanResolveEntity\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 236\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Gets a value indicating whether this reader can parse and resolve entities.</p>\\n\"\n  syntax:\n    content: public virtual bool CanResolveEntity { get; }\n    content.vb: Public Overridable ReadOnly Property CanResolveEntity As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the reader can parse and resolve entities; otherwise, <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  nameWithType: XmlReader.CanResolveEntity\n- uid: System.Xml.XmlReader.Depth\n  commentId: P:System.Xml.XmlReader.Depth\n  id: Depth\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: Depth\n  fullName: System.Xml.XmlReader.Depth\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Depth\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 237\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>When overridden in a derived class, gets the depth of the current node in the XML document.</p>\\n\"\n  syntax:\n    content: public abstract int Depth { get; }\n    content.vb: Public MustOverride ReadOnly Property Depth As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The depth of the current node in the XML document.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: XmlReader.Depth\n- uid: System.Xml.XmlReader.EOF\n  commentId: P:System.Xml.XmlReader.EOF\n  id: EOF\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: EOF\n  fullName: System.Xml.XmlReader.EOF\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: EOF\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 238\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>When overridden in a derived class, gets a value indicating whether the reader is positioned at the end of the stream.</p>\\n\"\n  syntax:\n    content: public abstract bool EOF { get; }\n    content.vb: Public MustOverride ReadOnly Property EOF As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the reader is positioned at the end of the stream; otherwise, <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: XmlReader.EOF\n- uid: System.Xml.XmlReader.HasAttributes\n  commentId: P:System.Xml.XmlReader.HasAttributes\n  id: HasAttributes\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: HasAttributes\n  fullName: System.Xml.XmlReader.HasAttributes\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: HasAttributes\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 239\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Gets a value indicating whether the current node has any attributes.</p>\\n\"\n  syntax:\n    content: public virtual bool HasAttributes { get; }\n    content.vb: Public Overridable ReadOnly Property HasAttributes As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the current node has attributes; otherwise, <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  nameWithType: XmlReader.HasAttributes\n- uid: System.Xml.XmlReader.HasValue\n  commentId: P:System.Xml.XmlReader.HasValue\n  id: HasValue\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: HasValue\n  fullName: System.Xml.XmlReader.HasValue\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: HasValue\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 240\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>When overridden in a derived class, gets a value indicating whether the current node can have a <xref href=\\\"System.Xml.XmlReader.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public virtual bool HasValue { get; }\n    content.vb: Public Overridable ReadOnly Property HasValue As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the node on which the reader is currently positioned can have a <strong>Value</strong>; otherwise, <strong>false</strong>. If <strong>false</strong>, the node has a value of <strong>String.Empty</strong>.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  nameWithType: XmlReader.HasValue\n- uid: System.Xml.XmlReader.IsDefault\n  commentId: P:System.Xml.XmlReader.IsDefault\n  id: IsDefault\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: IsDefault\n  fullName: System.Xml.XmlReader.IsDefault\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsDefault\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 241\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>When overridden in a derived class, gets a value indicating whether the current node is an attribute that was generated from the default value defined in the DTD or schema.</p>\\n\"\n  syntax:\n    content: public virtual bool IsDefault { get; }\n    content.vb: Public Overridable ReadOnly Property IsDefault As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the current node is an attribute whose value was generated from the default value defined in the DTD or schema; <strong>false</strong> if the attribute value was explicitly set.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  nameWithType: XmlReader.IsDefault\n- uid: System.Xml.XmlReader.IsEmptyElement\n  commentId: P:System.Xml.XmlReader.IsEmptyElement\n  id: IsEmptyElement\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: IsEmptyElement\n  fullName: System.Xml.XmlReader.IsEmptyElement\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsEmptyElement\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 242\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>When overridden in a derived class, gets a value indicating whether the current node is an empty element (for example, <code><MyElement/></code>).</p>\\n\"\n  syntax:\n    content: public abstract bool IsEmptyElement { get; }\n    content.vb: Public MustOverride ReadOnly Property IsEmptyElement As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the current node is an element (<xref href=\\\"System.Xml.XmlReader.NodeType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> equals <strong>XmlNodeType.Element</strong>) that ends with <code>/></code>; otherwise, <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: XmlReader.IsEmptyElement\n- uid: System.Xml.XmlReader.Item(System.Int32)\n  commentId: P:System.Xml.XmlReader.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: Item[Int32]\n  fullName: System.Xml.XmlReader.Item[System.Int32]\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: this[]\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 243\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>When overridden in a derived class, gets the value of the attribute with the specified index.</p>\\n\"\n  syntax:\n    content: public virtual string this[int i] { get; }\n    content.vb: Public Overridable ReadOnly Property Item(i As Integer) As String\n    parameters:\n    - id: i\n      type: System.Int32\n      description: \"\\n<p>The index of the attribute.</p>\\n\"\n    return:\n      type: System.String\n      description: \"\\n<p>The value of the specified attribute.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  seealso:\n  - type: System.Xml.XmlReader.GetAttribute(System.Int32)\n    commentId: M:System.Xml.XmlReader.GetAttribute(System.Int32)\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  fullName.vb: System.Xml.XmlReader.Item(System.Int32)\n  name.vb: Item(Int32)\n  nameWithType: XmlReader.Item[Int32]\n  nameWithType.vb: XmlReader.Item(Int32)\n- uid: System.Xml.XmlReader.Item(System.String)\n  commentId: P:System.Xml.XmlReader.Item(System.String)\n  id: Item(System.String)\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: Item[String]\n  fullName: System.Xml.XmlReader.Item[System.String]\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: this[]\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 244\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>When overridden in a derived class, gets the value of the attribute with the specified <xref href=\\\"System.Xml.XmlReader.Name\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public virtual string this[string name] { get; }\n    content.vb: Public Overridable ReadOnly Property Item(name As String) As String\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The qualified name of the attribute.</p>\\n\"\n    return:\n      type: System.String\n      description: \"\\n<p>The value of the specified attribute. If the attribute is not found, <strong>null</strong> is returned.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  seealso:\n  - type: System.Xml.XmlReader.GetAttribute(System.String)\n    commentId: M:System.Xml.XmlReader.GetAttribute(System.String)\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  fullName.vb: System.Xml.XmlReader.Item(System.String)\n  name.vb: Item(String)\n  nameWithType: XmlReader.Item[String]\n  nameWithType.vb: XmlReader.Item(String)\n- uid: System.Xml.XmlReader.Item(System.String,System.String)\n  commentId: P:System.Xml.XmlReader.Item(System.String,System.String)\n  id: Item(System.String,System.String)\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: Item[String, String]\n  fullName: System.Xml.XmlReader.Item[System.String, System.String]\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: this[]\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 245\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>When overridden in a derived class, gets the value of the attribute with the specified <xref href=\\\"System.Xml.XmlReader.LocalName\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and <xref href=\\\"System.Xml.XmlReader.NamespaceURI\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public virtual string this[string name, string namespaceURI] { get; }\n    content.vb: Public Overridable ReadOnly Property Item(name As String, namespaceURI As String) As String\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The local name of the attribute.</p>\\n\"\n    - id: namespaceURI\n      type: System.String\n      description: \"\\n<p>The namespace URI of the attribute.</p>\\n\"\n    return:\n      type: System.String\n      description: \"\\n<p>The value of the specified attribute. If the attribute is not found, <strong>null</strong> is returned.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  seealso:\n  - type: System.Xml.XmlReader.GetAttribute(System.String,System.String)\n    commentId: M:System.Xml.XmlReader.GetAttribute(System.String,System.String)\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  fullName.vb: System.Xml.XmlReader.Item(System.String, System.String)\n  name.vb: Item(String, String)\n  nameWithType: XmlReader.Item[String, String]\n  nameWithType.vb: XmlReader.Item(String, String)\n- uid: System.Xml.XmlReader.LocalName\n  commentId: P:System.Xml.XmlReader.LocalName\n  id: LocalName\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: LocalName\n  fullName: System.Xml.XmlReader.LocalName\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: LocalName\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 246\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>When overridden in a derived class, gets the local name of the current node.</p>\\n\"\n  syntax:\n    content: public abstract string LocalName { get; }\n    content.vb: Public MustOverride ReadOnly Property LocalName As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The name of the current node with the prefix removed. For example, <strong>LocalName</strong> is <strong>book</strong> for the element <code><bk:book></code>.</p>\\n<p>For node types that do not have a name (like <strong>Text</strong>, <strong>Comment</strong>, and so on), this property returns <strong>String.Empty</strong>.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  seealso:\n  - type: System.Xml.XmlReader.Name\n    commentId: P:System.Xml.XmlReader.Name\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: XmlReader.LocalName\n- uid: System.Xml.XmlReader.Name\n  commentId: P:System.Xml.XmlReader.Name\n  id: Name\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: Name\n  fullName: System.Xml.XmlReader.Name\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Name\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 247\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>When overridden in a derived class, gets the qualified name of the current node.</p>\\n\"\n  syntax:\n    content: public virtual string Name { get; }\n    content.vb: Public Overridable ReadOnly Property Name As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The qualified name of the current node. For example, <strong>Name</strong> is <strong>bk:book</strong> for the element <code><bk:book></code>.</p>\\n<p>The name returned is dependent on the <xref href=\\\"System.Xml.XmlReader.NodeType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the node. The following node types return the listed values. All other node types return an empty string.</p>\\n<p>Node type </p>\\n<p>Name </p>\\n<table><tbody><tr><td>\\n<p>\\n<strong>Attribute</strong>\\n</p>\\n</td><td>\\n<p>The name of the attribute. </p>\\n</td></tr><tr><td>\\n<p>\\n<strong>DocumentType</strong>\\n</p>\\n</td><td>\\n<p>The document type name. </p>\\n</td></tr><tr><td>\\n<p>\\n<strong>Element</strong>\\n</p>\\n</td><td>\\n<p>The tag name. </p>\\n</td></tr><tr><td>\\n<p>\\n<strong>EntityReference</strong>\\n</p>\\n</td><td>\\n<p>The name of the entity referenced. </p>\\n</td></tr><tr><td>\\n<p>\\n<strong>ProcessingInstruction</strong>\\n</p>\\n</td><td>\\n<p>The target of the processing instruction. </p>\\n</td></tr><tr><td>\\n<p>\\n<strong>XmlDeclaration</strong>\\n</p>\\n</td><td>\\n<p>The literal string <strong>xml</strong>. </p>\\n</td></tr></tbody></table>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  seealso:\n  - type: System.Xml.XmlReader.LocalName\n    commentId: P:System.Xml.XmlReader.LocalName\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  nameWithType: XmlReader.Name\n- uid: System.Xml.XmlReader.NamespaceURI\n  commentId: P:System.Xml.XmlReader.NamespaceURI\n  id: NamespaceURI\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: NamespaceURI\n  fullName: System.Xml.XmlReader.NamespaceURI\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: NamespaceURI\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 248\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>When overridden in a derived class, gets the namespace URI (as defined in the W3C Namespace specification) of the node on which the reader is positioned.</p>\\n\"\n  syntax:\n    content: public abstract string NamespaceURI { get; }\n    content.vb: Public MustOverride ReadOnly Property NamespaceURI As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The namespace URI of the current node; otherwise an empty string.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: XmlReader.NamespaceURI\n- uid: System.Xml.XmlReader.NameTable\n  commentId: P:System.Xml.XmlReader.NameTable\n  id: NameTable\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: NameTable\n  fullName: System.Xml.XmlReader.NameTable\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: NameTable\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 249\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>When overridden in a derived class, gets the <xref href=\\\"System.Xml.XmlNameTable\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> associated with this implementation.</p>\\n\"\n  syntax:\n    content: public abstract XmlNameTable NameTable { get; }\n    content.vb: Public MustOverride ReadOnly Property NameTable As XmlNameTable\n    parameters: []\n    return:\n      type: System.Xml.XmlNameTable\n      description: \"\\n<p>The <strong>XmlNameTable</strong> enabling you to get the atomized version of a string within the node.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  seealso:\n  - type: System.Xml.XmlNameTable\n    commentId: T:System.Xml.XmlNameTable\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: XmlReader.NameTable\n- uid: System.Xml.XmlReader.NodeType\n  commentId: P:System.Xml.XmlReader.NodeType\n  id: NodeType\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: NodeType\n  fullName: System.Xml.XmlReader.NodeType\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: NodeType\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 250\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>When overridden in a derived class, gets the type of the current node.</p>\\n\"\n  syntax:\n    content: public abstract XmlNodeType NodeType { get; }\n    content.vb: Public MustOverride ReadOnly Property NodeType As XmlNodeType\n    parameters: []\n    return:\n      type: System.Xml.XmlNodeType\n      description: \"\\n<p>One of the enumeration values that specify the type of the current node.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: XmlReader.NodeType\n- uid: System.Xml.XmlReader.Prefix\n  commentId: P:System.Xml.XmlReader.Prefix\n  id: Prefix\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: Prefix\n  fullName: System.Xml.XmlReader.Prefix\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Prefix\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 251\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>When overridden in a derived class, gets the namespace prefix associated with the current node.</p>\\n\"\n  syntax:\n    content: public abstract string Prefix { get; }\n    content.vb: Public MustOverride ReadOnly Property Prefix As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The namespace prefix associated with the current node.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: XmlReader.Prefix\n- uid: System.Xml.XmlReader.ReadState\n  commentId: P:System.Xml.XmlReader.ReadState\n  id: ReadState\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: ReadState\n  fullName: System.Xml.XmlReader.ReadState\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadState\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 252\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>When overridden in a derived class, gets the state of the reader.</p>\\n\"\n  syntax:\n    content: public abstract ReadState ReadState { get; }\n    content.vb: Public MustOverride ReadOnly Property ReadState As ReadState\n    parameters: []\n    return:\n      type: System.Xml.ReadState\n      description: \"\\n<p>One of the enumeration values that specifies the state of the reader.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: XmlReader.ReadState\n- uid: System.Xml.XmlReader.Settings\n  commentId: P:System.Xml.XmlReader.Settings\n  id: Settings\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: Settings\n  fullName: System.Xml.XmlReader.Settings\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Settings\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 253\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Gets the <xref href=\\\"System.Xml.XmlReaderSettings\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object used to create this <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n  syntax:\n    content: public virtual XmlReaderSettings Settings { get; }\n    content.vb: Public Overridable ReadOnly Property Settings As XmlReaderSettings\n    parameters: []\n    return:\n      type: System.Xml.XmlReaderSettings\n      description: \"\\n<p>The <xref href=\\\"System.Xml.XmlReaderSettings\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object used to create this reader instance. If this reader was not created using the <xref href=\\\"System.Xml.XmlReader.Create(System.IO.Stream)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method, this property returns <strong>null</strong>.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  nameWithType: XmlReader.Settings\n- uid: System.Xml.XmlReader.Value\n  commentId: P:System.Xml.XmlReader.Value\n  id: Value\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: Value\n  fullName: System.Xml.XmlReader.Value\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Value\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 254\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>When overridden in a derived class, gets the text value of the current node.</p>\\n\"\n  syntax:\n    content: public abstract string Value { get; }\n    content.vb: Public MustOverride ReadOnly Property Value As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The value returned depends on the <xref href=\\\"System.Xml.XmlReader.NodeType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the node. The following table lists node types that have a value to return. All other node types return <strong>String.Empty</strong>.</p>\\n<p>Node type </p>\\n<p>Value </p>\\n<table><tbody><tr><td>\\n<p>\\n<strong>Attribute</strong>\\n</p>\\n</td><td>\\n<p>The value of the attribute. </p>\\n</td></tr><tr><td>\\n<p>\\n<strong>CDATA</strong>\\n</p>\\n</td><td>\\n<p>The content of the CDATA section. </p>\\n</td></tr><tr><td>\\n<p>\\n<strong>Comment</strong>\\n</p>\\n</td><td>\\n<p>The content of the comment. </p>\\n</td></tr><tr><td>\\n<p>\\n<strong>DocumentType</strong>\\n</p>\\n</td><td>\\n<p>The internal subset. </p>\\n</td></tr><tr><td>\\n<p>\\n<strong>ProcessingInstruction</strong>\\n</p>\\n</td><td>\\n<p>The entire content, excluding the target. </p>\\n</td></tr><tr><td>\\n<p>\\n<strong>SignificantWhitespace</strong>\\n</p>\\n</td><td>\\n<p>The white space between markup in a mixed content model. </p>\\n</td></tr><tr><td>\\n<p>\\n<strong>Text</strong>\\n</p>\\n</td><td>\\n<p>The content of the text node. </p>\\n</td></tr><tr><td>\\n<p>\\n<strong>Whitespace</strong>\\n</p>\\n</td><td>\\n<p>The white space between markup. </p>\\n</td></tr><tr><td>\\n<p>\\n<strong>XmlDeclaration</strong>\\n</p>\\n</td><td>\\n<p>The content of the declaration. </p>\\n</td></tr></tbody></table>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: XmlReader.Value\n- uid: System.Xml.XmlReader.ValueType\n  commentId: P:System.Xml.XmlReader.ValueType\n  id: ValueType\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: ValueType\n  fullName: System.Xml.XmlReader.ValueType\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ValueType\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 255\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Gets The Common Language Runtime (CLR) type for the current node.</p>\\n\"\n  syntax:\n    content: public virtual Type ValueType { get; }\n    content.vb: Public Overridable ReadOnly Property ValueType As Type\n    parameters: []\n    return:\n      type: System.Type\n      description: \"\\n<p>The CLR type that corresponds to the typed value of the node. The default is <strong>System.String</strong>.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  nameWithType: XmlReader.ValueType\n- uid: System.Xml.XmlReader.XmlLang\n  commentId: P:System.Xml.XmlReader.XmlLang\n  id: XmlLang\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: XmlLang\n  fullName: System.Xml.XmlReader.XmlLang\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: XmlLang\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 256\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>When overridden in a derived class, gets the current <strong>xml:lang</strong> scope.</p>\\n\"\n  syntax:\n    content: public virtual string XmlLang { get; }\n    content.vb: Public Overridable ReadOnly Property XmlLang As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The current <strong>xml:lang</strong> scope.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  seealso:\n  - type: System.Xml.XmlReader.XmlSpace\n    commentId: P:System.Xml.XmlReader.XmlSpace\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  nameWithType: XmlReader.XmlLang\n- uid: System.Xml.XmlReader.XmlSpace\n  commentId: P:System.Xml.XmlReader.XmlSpace\n  id: XmlSpace\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: XmlSpace\n  fullName: System.Xml.XmlReader.XmlSpace\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: XmlSpace\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 257\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>When overridden in a derived class, gets the current <strong>xml:space</strong> scope.</p>\\n\"\n  syntax:\n    content: public virtual XmlSpace XmlSpace { get; }\n    content.vb: Public Overridable ReadOnly Property XmlSpace As XmlSpace\n    parameters: []\n    return:\n      type: System.Xml.XmlSpace\n      description: \"\\n<p>One of the <xref href=\\\"System.Xml.XmlSpace\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values. If no <strong>xml:space</strong> scope exists, this property defaults to <strong>XmlSpace.None</strong>.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  seealso:\n  - type: System.Xml.XmlReader.XmlLang\n    commentId: P:System.Xml.XmlReader.XmlLang\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  nameWithType: XmlReader.XmlSpace\n- uid: System.Xml.XmlReader.Create(System.IO.Stream)\n  commentId: M:System.Xml.XmlReader.Create(System.IO.Stream)\n  id: Create(System.IO.Stream)\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: Create(Stream)\n  fullName: System.Xml.XmlReader.Create(System.IO.Stream)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Create\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 258\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Creates a new <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance using the specified stream with default settings.</p>\\n\"\n  syntax:\n    content: public static XmlReader Create(Stream input)\n    content.vb: Public Shared Function Create(input As Stream) As XmlReader\n    parameters:\n    - id: input\n      type: System.IO.Stream\n      description: \"\\n<p>The stream that contains the XML data.</p>\\n<p>The <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> scans the first bytes of the stream looking for a byte order mark or other sign of encoding. When encoding is determined, the encoding is used to continue reading the stream, and processing continues parsing the input as a stream of (Unicode) characters.</p>\\n\"\n    return:\n      type: System.Xml.XmlReader\n      description: \"\\n<p>An object that is used to read the XML data in the stream.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>input</em> value is <strong>null</strong>.</p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> does not have sufficient permissions to access the location of the XML data.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: XmlReader.Create(Stream)\n- uid: System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings)\n  commentId: M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings)\n  id: Create(System.IO.Stream,System.Xml.XmlReaderSettings)\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: Create(Stream, XmlReaderSettings)\n  fullName: System.Xml.XmlReader.Create(System.IO.Stream, System.Xml.XmlReaderSettings)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Create\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 259\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Creates a new <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance with the specified stream and settings.</p>\\n\"\n  syntax:\n    content: public static XmlReader Create(Stream input, XmlReaderSettings settings)\n    content.vb: Public Shared Function Create(input As Stream, settings As XmlReaderSettings) As XmlReader\n    parameters:\n    - id: input\n      type: System.IO.Stream\n      description: \"\\n<p>The stream that contains the XML data.</p>\\n<p>The <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> scans the first bytes of the stream looking for a byte order mark or other sign of encoding. When encoding is determined, the encoding is used to continue reading the stream, and processing continues parsing the input as a stream of (Unicode) characters.</p>\\n\"\n    - id: settings\n      type: System.Xml.XmlReaderSettings\n      description: \"\\n<p>The settings for the new <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance. This value can be <strong>null</strong>.</p>\\n\"\n    return:\n      type: System.Xml.XmlReader\n      description: \"\\n<p>An object that is used to read the XML data in the stream.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>input</em> value is <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: XmlReader.Create(Stream, XmlReaderSettings)\n- uid: System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)\n  commentId: M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)\n  id: Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: Create(Stream, XmlReaderSettings, XmlParserContext)\n  fullName: System.Xml.XmlReader.Create(System.IO.Stream, System.Xml.XmlReaderSettings, System.Xml.XmlParserContext)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Create\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 260\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Creates a new <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance using the specified stream, settings, and context information for parsing.</p>\\n\"\n  syntax:\n    content: public static XmlReader Create(Stream input, XmlReaderSettings settings, XmlParserContext inputContext)\n    content.vb: Public Shared Function Create(input As Stream, settings As XmlReaderSettings, inputContext As XmlParserContext) As XmlReader\n    parameters:\n    - id: input\n      type: System.IO.Stream\n      description: \"\\n<p>The stream that contains the XML data. </p>\\n<p>The <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> scans the first bytes of the stream looking for a byte order mark or other sign of encoding. When encoding is determined, the encoding is used to continue reading the stream, and processing continues parsing the input as a stream of (Unicode) characters.</p>\\n\"\n    - id: settings\n      type: System.Xml.XmlReaderSettings\n      description: \"\\n<p>The settings for the new <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance. This value can be <strong>null</strong>.</p>\\n\"\n    - id: inputContext\n      type: System.Xml.XmlParserContext\n      description: \"\\n<p>The context information required to parse the XML fragment. The context information can include the <xref href=\\\"System.Xml.XmlNameTable\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to use, encoding, namespace scope, the current <code>xml:lang</code> and <code>xml:space</code> scope, base URI, and document type definition. </p>\\n<p>This value can be <strong>null</strong>.</p>\\n\"\n    return:\n      type: System.Xml.XmlReader\n      description: \"\\n<p>An object that is used to read the XML data in the stream.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>input</em> value is <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: XmlReader.Create(Stream, XmlReaderSettings, XmlParserContext)\n- uid: System.Xml.XmlReader.Create(System.IO.TextReader)\n  commentId: M:System.Xml.XmlReader.Create(System.IO.TextReader)\n  id: Create(System.IO.TextReader)\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: Create(TextReader)\n  fullName: System.Xml.XmlReader.Create(System.IO.TextReader)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Create\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 261\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Creates a new <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance by using the specified text reader.</p>\\n\"\n  syntax:\n    content: public static XmlReader Create(TextReader input)\n    content.vb: Public Shared Function Create(input As TextReader) As XmlReader\n    parameters:\n    - id: input\n      type: System.IO.TextReader\n      description: \"\\n<p>The text reader from which to read the XML data. A text reader returns a stream of Unicode characters, so the encoding specified in the XML declaration is not used by the XML reader to decode the data stream.</p>\\n\"\n    return:\n      type: System.Xml.XmlReader\n      description: \"\\n<p>An object that is used to read the XML data in the stream.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>input</em> value is <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: XmlReader.Create(TextReader)\n- uid: System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings)\n  commentId: M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings)\n  id: Create(System.IO.TextReader,System.Xml.XmlReaderSettings)\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: Create(TextReader, XmlReaderSettings)\n  fullName: System.Xml.XmlReader.Create(System.IO.TextReader, System.Xml.XmlReaderSettings)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Create\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 262\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Creates a new <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance by using the specified text reader and settings.</p>\\n\"\n  syntax:\n    content: public static XmlReader Create(TextReader input, XmlReaderSettings settings)\n    content.vb: Public Shared Function Create(input As TextReader, settings As XmlReaderSettings) As XmlReader\n    parameters:\n    - id: input\n      type: System.IO.TextReader\n      description: \"\\n<p>The text reader from which to read the XML data. A text reader returns a stream of Unicode characters, so the encoding specified in the XML declaration isn't used by the XML reader to decode the data stream.</p>\\n\"\n    - id: settings\n      type: System.Xml.XmlReaderSettings\n      description: \"\\n<p>The settings for the new <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. This value can be <strong>null</strong>.</p>\\n\"\n    return:\n      type: System.Xml.XmlReader\n      description: \"\\n<p>An object that is used to read the XML data in the stream.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>input</em> value is <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: XmlReader.Create(TextReader, XmlReaderSettings)\n- uid: System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)\n  commentId: M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)\n  id: Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: Create(TextReader, XmlReaderSettings, XmlParserContext)\n  fullName: System.Xml.XmlReader.Create(System.IO.TextReader, System.Xml.XmlReaderSettings, System.Xml.XmlParserContext)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Create\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 263\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Creates a new <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance by using the specified text reader, settings, and context information for parsing.</p>\\n\"\n  syntax:\n    content: public static XmlReader Create(TextReader input, XmlReaderSettings settings, XmlParserContext inputContext)\n    content.vb: Public Shared Function Create(input As TextReader, settings As XmlReaderSettings, inputContext As XmlParserContext) As XmlReader\n    parameters:\n    - id: input\n      type: System.IO.TextReader\n      description: \"\\n<p>The text reader from which to read the XML data. A text reader returns a stream of Unicode characters, so the encoding specified in the XML declaration isn't used by the XML reader to decode the data stream.</p>\\n\"\n    - id: settings\n      type: System.Xml.XmlReaderSettings\n      description: \"\\n<p>The settings for the new <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance. This value can be <strong>null</strong>.</p>\\n\"\n    - id: inputContext\n      type: System.Xml.XmlParserContext\n      description: \"\\n<p>The context information required to parse the XML fragment. The context information can include the <xref href=\\\"System.Xml.XmlNameTable\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to use, encoding, namespace scope, the current <code>xml:lang</code> and <code>xml:space</code> scope, base URI, and document type definition.</p>\\n<p>This value can be <strong>null</strong>.</p>\\n\"\n    return:\n      type: System.Xml.XmlReader\n      description: \"\\n<p>An object that is used to read the XML data in the stream.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>input</em> value is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The <xref href=\\\"System.Xml.XmlReaderSettings.NameTable\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>  and <xref href=\\\"System.Xml.XmlParserContext.NameTable\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> properties both contain values. (Only one of these <strong>NameTable</strong> properties can be set and used).</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: XmlReader.Create(TextReader, XmlReaderSettings, XmlParserContext)\n- uid: System.Xml.XmlReader.Create(System.String)\n  commentId: M:System.Xml.XmlReader.Create(System.String)\n  id: Create(System.String)\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: Create(String)\n  fullName: System.Xml.XmlReader.Create(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Create\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 264\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Creates a new <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance with specified URI.</p>\\n\"\n  syntax:\n    content: public static XmlReader Create(string inputUri)\n    content.vb: Public Shared Function Create(inputUri As String) As XmlReader\n    parameters:\n    - id: inputUri\n      type: System.String\n      description: \"\\n<p>The URI for the file that contains the XML data. The <xref href=\\\"System.Xml.XmlUrlResolver\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class is used to convert the path to a canonical data representation.</p>\\n\"\n    return:\n      type: System.Xml.XmlReader\n      description: \"\\n<p>An object that is used to read the XML data in the stream.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>inputUri</em> value is <strong>null</strong>.</p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> does not have sufficient permissions to access the location of the XML data.</p>\\n\"\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: \"\\n<p>The file identified by the URI does not exist.</p>\\n\"\n  - type: System.UriFormatException\n    commentId: T:System.UriFormatException\n    description: \"\\n<p>In the <see href=\\\"http://go.microsoft.com/fwlink/?LinkID=247912\\\">.NET for Windows Store apps</see> or the Portable Class Library, catch the base class exception, <xref href=\\\"System.FormatException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, instead.</p>\\n<p>The URI format is not correct.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: XmlReader.Create(String)\n- uid: System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings)\n  commentId: M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings)\n  id: Create(System.String,System.Xml.XmlReaderSettings)\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: Create(String, XmlReaderSettings)\n  fullName: System.Xml.XmlReader.Create(System.String, System.Xml.XmlReaderSettings)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Create\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 265\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Creates a new <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance by using the specified URI and settings.</p>\\n\"\n  syntax:\n    content: public static XmlReader Create(string inputUri, XmlReaderSettings settings)\n    content.vb: Public Shared Function Create(inputUri As String, settings As XmlReaderSettings) As XmlReader\n    parameters:\n    - id: inputUri\n      type: System.String\n      description: \"\\n<p>The URI for the file containing the XML data. The <xref href=\\\"System.Xml.XmlResolver\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object on the <xref href=\\\"System.Xml.XmlReaderSettings\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is used to convert the path to a canonical data representation. If <xref href=\\\"System.Xml.XmlReaderSettings.XmlResolver\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is <strong>null</strong>, a new <xref href=\\\"System.Xml.XmlUrlResolver\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is used.</p>\\n\"\n    - id: settings\n      type: System.Xml.XmlReaderSettings\n      description: \"\\n<p>The settings for the new <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance. This value can be <strong>null</strong>.</p>\\n\"\n    return:\n      type: System.Xml.XmlReader\n      description: \"\\n<p>An object that is used to read the XML data in the stream.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>inputUri</em> value is <strong>null</strong>.</p>\\n\"\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: \"\\n<p>The file specified by the URI cannot be found.</p>\\n\"\n  - type: System.UriFormatException\n    commentId: T:System.UriFormatException\n    description: \"\\n<p>In the <see href=\\\"http://go.microsoft.com/fwlink/?LinkID=247912\\\">.NET for Windows Store apps</see> or the Portable Class Library, catch the base class exception, <xref href=\\\"System.FormatException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, instead.</p>\\n<p>The URI format is not correct.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: XmlReader.Create(String, XmlReaderSettings)\n- uid: System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)\n  commentId: M:System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)\n  id: Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: Create(XmlReader, XmlReaderSettings)\n  fullName: System.Xml.XmlReader.Create(System.Xml.XmlReader, System.Xml.XmlReaderSettings)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Create\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 266\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Creates a new <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance by using the specified XML reader and settings.</p>\\n\"\n  syntax:\n    content: public static XmlReader Create(XmlReader reader, XmlReaderSettings settings)\n    content.vb: Public Shared Function Create(reader As XmlReader, settings As XmlReaderSettings) As XmlReader\n    parameters:\n    - id: reader\n      type: System.Xml.XmlReader\n      description: \"\\n<p>The object that you want to use as the underlying XML reader.</p>\\n\"\n    - id: settings\n      type: System.Xml.XmlReaderSettings\n      description: \"\\n<p>The settings for the new <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n<p>The conformance level of the <xref href=\\\"System.Xml.XmlReaderSettings\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object must either match the conformance level of the underlying reader, or it must be set to <xref href=\\\"System.Xml.ConformanceLevel.Auto\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    return:\n      type: System.Xml.XmlReader\n      description: \"\\n<p>An object that is wrapped around the specified <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>reader</em> value is <strong>null</strong>.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>If the <xref href=\\\"System.Xml.XmlReaderSettings\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object specifies a conformance level that is not consistent with conformance level of the underlying reader.</p>\\n<p>-or-</p>\\n<p>The underlying <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is in an <xref href=\\\"System.Xml.ReadState.Error\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.Xml.ReadState.Closed\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> state.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: XmlReader.Create(XmlReader, XmlReaderSettings)\n- uid: System.Xml.XmlReader.Dispose\n  commentId: M:System.Xml.XmlReader.Dispose\n  id: Dispose\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: Dispose()\n  fullName: System.Xml.XmlReader.Dispose()\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Dispose\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 267\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Releases all resources used by the current instance of the <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public void Dispose()\n    content.vb: Public Sub Dispose\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  implements:\n  - System.IDisposable.Dispose\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XmlReader.Dispose()\n- uid: System.Xml.XmlReader.Dispose(System.Boolean)\n  commentId: M:System.Xml.XmlReader.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: Dispose(Boolean)\n  fullName: System.Xml.XmlReader.Dispose(System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Dispose\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 268\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Releases the unmanaged resources used by the <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and optionally releases the managed resources.</p>\\n\"\n  syntax:\n    content: protected virtual void Dispose(bool disposing)\n    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to release both managed and unmanaged resources; <strong>false</strong> to release only unmanaged resources.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  modifiers.csharp:\n  - protected\n  - virtual\n  modifiers.vb:\n  - Protected\n  - Overridable\n  nameWithType: XmlReader.Dispose(Boolean)\n- uid: System.Xml.XmlReader.GetAttribute(System.Int32)\n  commentId: M:System.Xml.XmlReader.GetAttribute(System.Int32)\n  id: GetAttribute(System.Int32)\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: GetAttribute(Int32)\n  fullName: System.Xml.XmlReader.GetAttribute(System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetAttribute\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 269\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>When overridden in a derived class, gets the value of the attribute with the specified index.</p>\\n\"\n  syntax:\n    content: public abstract string GetAttribute(int i)\n    content.vb: Public MustOverride Function GetAttribute(i As Integer) As String\n    parameters:\n    - id: i\n      type: System.Int32\n      description: \"\\n<p>The index of the attribute. The index is zero-based. (The first attribute has index 0.)</p>\\n\"\n    return:\n      type: System.String\n      description: \"\\n<p>The value of the specified attribute. This method does not move the reader.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>i</em> is out of range. It must be non-negative and less than the size of the attribute collection.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: XmlReader.GetAttribute(Int32)\n- uid: System.Xml.XmlReader.GetAttribute(System.String)\n  commentId: M:System.Xml.XmlReader.GetAttribute(System.String)\n  id: GetAttribute(System.String)\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: GetAttribute(String)\n  fullName: System.Xml.XmlReader.GetAttribute(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetAttribute\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 270\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>When overridden in a derived class, gets the value of the attribute with the specified <xref href=\\\"System.Xml.XmlReader.Name\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public abstract string GetAttribute(string name)\n    content.vb: Public MustOverride Function GetAttribute(name As String) As String\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The qualified name of the attribute.</p>\\n\"\n    return:\n      type: System.String\n      description: \"\\n<p>The value of the specified attribute. If the attribute is not found or the value is <strong>String.Empty</strong>, <strong>null</strong> is returned.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>name</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: XmlReader.GetAttribute(String)\n- uid: System.Xml.XmlReader.GetAttribute(System.String,System.String)\n  commentId: M:System.Xml.XmlReader.GetAttribute(System.String,System.String)\n  id: GetAttribute(System.String,System.String)\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: GetAttribute(String, String)\n  fullName: System.Xml.XmlReader.GetAttribute(System.String, System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetAttribute\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 271\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>When overridden in a derived class, gets the value of the attribute with the specified <xref href=\\\"System.Xml.XmlReader.LocalName\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and <xref href=\\\"System.Xml.XmlReader.NamespaceURI\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public abstract string GetAttribute(string name, string namespaceURI)\n    content.vb: Public MustOverride Function GetAttribute(name As String, namespaceURI As String) As String\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The local name of the attribute.</p>\\n\"\n    - id: namespaceURI\n      type: System.String\n      description: \"\\n<p>The namespace URI of the attribute.</p>\\n\"\n    return:\n      type: System.String\n      description: \"\\n<p>The value of the specified attribute. If the attribute is not found or the value is <strong>String.Empty</strong>, <strong>null</strong> is returned. This method does not move the reader.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>name</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: XmlReader.GetAttribute(String, String)\n- uid: System.Xml.XmlReader.GetValueAsync\n  commentId: M:System.Xml.XmlReader.GetValueAsync\n  id: GetValueAsync\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: GetValueAsync()\n  fullName: System.Xml.XmlReader.GetValueAsync()\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetValueAsync\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 272\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Asynchronously gets the value of the current node.</p>\\n\"\n  syntax:\n    content: public virtual Task<string> GetValueAsync()\n    content.vb: Public Overridable Function GetValueAsync As Task(Of String)\n    return:\n      type: System.Threading.Tasks.Task{System.String}\n      description: \"\\n<p>The value of the current node.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> asynchronous method was called without setting the <xref href=\\\"System.Xml.XmlReaderSettings.Async\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> flag to <strong>true</strong>. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “Set XmlReaderSettings.Async to true if you want to use Async Methods.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XmlReader.GetValueAsync()\n- uid: System.Xml.XmlReader.IsName(System.String)\n  commentId: M:System.Xml.XmlReader.IsName(System.String)\n  id: IsName(System.String)\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: IsName(String)\n  fullName: System.Xml.XmlReader.IsName(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsName\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 273\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Returns a value indicating whether the string argument is a valid XML name.</p>\\n\"\n  syntax:\n    content: public static bool IsName(string str)\n    content.vb: Public Shared Function IsName(str As String) As Boolean\n    parameters:\n    - id: str\n      type: System.String\n      description: \"\\n<p>The name to validate.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the name is valid; otherwise, <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>str</em> value is <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: XmlReader.IsName(String)\n- uid: System.Xml.XmlReader.IsNameToken(System.String)\n  commentId: M:System.Xml.XmlReader.IsNameToken(System.String)\n  id: IsNameToken(System.String)\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: IsNameToken(String)\n  fullName: System.Xml.XmlReader.IsNameToken(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsNameToken\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 274\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Returns a value indicating whether or not the string argument is a valid XML name token.</p>\\n\"\n  syntax:\n    content: public static bool IsNameToken(string str)\n    content.vb: Public Shared Function IsNameToken(str As String) As Boolean\n    parameters:\n    - id: str\n      type: System.String\n      description: \"\\n<p>The name token to validate.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if it is a valid name token; otherwise <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>str</em> value is <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: XmlReader.IsNameToken(String)\n- uid: System.Xml.XmlReader.IsStartElement\n  commentId: M:System.Xml.XmlReader.IsStartElement\n  id: IsStartElement\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: IsStartElement()\n  fullName: System.Xml.XmlReader.IsStartElement()\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsStartElement\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 275\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Calls <xref href=\\\"System.Xml.XmlReader.MoveToContent\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and tests if the current content node is a start tag or empty element tag.</p>\\n\"\n  syntax:\n    content: public virtual bool IsStartElement()\n    content.vb: Public Overridable Function IsStartElement As Boolean\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if <xref href=\\\"System.Xml.XmlReader.MoveToContent\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> finds a start tag or empty element tag; <strong>false</strong> if a node type other than <strong>XmlNodeType.Element</strong> was found.</p>\\n\"\n  exceptions:\n  - type: System.Xml.XmlException\n    commentId: T:System.Xml.XmlException\n    description: \"\\n<p>Incorrect XML is encountered in the input stream.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  seealso:\n  - type: System.Xml.XmlReader.MoveToContent\n    commentId: M:System.Xml.XmlReader.MoveToContent\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XmlReader.IsStartElement()\n- uid: System.Xml.XmlReader.IsStartElement(System.String)\n  commentId: M:System.Xml.XmlReader.IsStartElement(System.String)\n  id: IsStartElement(System.String)\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: IsStartElement(String)\n  fullName: System.Xml.XmlReader.IsStartElement(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsStartElement\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 276\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Calls <xref href=\\\"System.Xml.XmlReader.MoveToContent\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and tests if the current content node is a start tag or empty element tag and if the <xref href=\\\"System.Xml.XmlReader.Name\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property of the element found matches the given argument.</p>\\n\"\n  syntax:\n    content: public virtual bool IsStartElement(string name)\n    content.vb: Public Overridable Function IsStartElement(name As String) As Boolean\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The string matched against the <strong>Name</strong> property of the element found.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the resulting node is an element and the <strong>Name</strong> property matches the specified string. <strong>false</strong> if a node type other than <strong>XmlNodeType.Element</strong> was found or if the element <strong>Name</strong> property does not match the specified string.</p>\\n\"\n  exceptions:\n  - type: System.Xml.XmlException\n    commentId: T:System.Xml.XmlException\n    description: \"\\n<p>Incorrect XML is encountered in the input stream.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  seealso:\n  - type: System.Xml.XmlReader.MoveToContent\n    commentId: M:System.Xml.XmlReader.MoveToContent\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XmlReader.IsStartElement(String)\n- uid: System.Xml.XmlReader.IsStartElement(System.String,System.String)\n  commentId: M:System.Xml.XmlReader.IsStartElement(System.String,System.String)\n  id: IsStartElement(System.String,System.String)\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: IsStartElement(String, String)\n  fullName: System.Xml.XmlReader.IsStartElement(System.String, System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsStartElement\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 277\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Calls <xref href=\\\"System.Xml.XmlReader.MoveToContent\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and tests if the current content node is a start tag or empty element tag and if the <xref href=\\\"System.Xml.XmlReader.LocalName\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and <xref href=\\\"System.Xml.XmlReader.NamespaceURI\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> properties of the element found match the given strings.</p>\\n\"\n  syntax:\n    content: public virtual bool IsStartElement(string localname, string ns)\n    content.vb: Public Overridable Function IsStartElement(localname As String, ns As String) As Boolean\n    parameters:\n    - id: localname\n      type: System.String\n      description: \"\\n<p>The string to match against the <strong>LocalName</strong> property of the element found.</p>\\n\"\n    - id: ns\n      type: System.String\n      description: \"\\n<p>The string to match against the <strong>NamespaceURI</strong> property of the element found.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the resulting node is an element. <strong>false</strong> if a node type other than <strong>XmlNodeType.Element</strong> was found or if the <strong>LocalName</strong> and <strong>NamespaceURI</strong> properties of the element do not match the specified strings.</p>\\n\"\n  exceptions:\n  - type: System.Xml.XmlException\n    commentId: T:System.Xml.XmlException\n    description: \"\\n<p>Incorrect XML is encountered in the input stream.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  seealso:\n  - type: System.Xml.XmlReader.MoveToContent\n    commentId: M:System.Xml.XmlReader.MoveToContent\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XmlReader.IsStartElement(String, String)\n- uid: System.Xml.XmlReader.LookupNamespace(System.String)\n  commentId: M:System.Xml.XmlReader.LookupNamespace(System.String)\n  id: LookupNamespace(System.String)\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: LookupNamespace(String)\n  fullName: System.Xml.XmlReader.LookupNamespace(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: LookupNamespace\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 278\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>When overridden in a derived class, resolves a namespace prefix in the current element's scope.</p>\\n\"\n  syntax:\n    content: public abstract string LookupNamespace(string prefix)\n    content.vb: Public MustOverride Function LookupNamespace(prefix As String) As String\n    parameters:\n    - id: prefix\n      type: System.String\n      description: \"\\n<p>The prefix whose namespace URI you want to resolve. To match the default namespace, pass an empty string. </p>\\n\"\n    return:\n      type: System.String\n      description: \"\\n<p>The namespace URI to which the prefix maps or <strong>null</strong> if no matching prefix is found.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: XmlReader.LookupNamespace(String)\n- uid: System.Xml.XmlReader.MoveToAttribute(System.Int32)\n  commentId: M:System.Xml.XmlReader.MoveToAttribute(System.Int32)\n  id: MoveToAttribute(System.Int32)\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: MoveToAttribute(Int32)\n  fullName: System.Xml.XmlReader.MoveToAttribute(System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: MoveToAttribute\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 279\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>When overridden in a derived class, moves to the attribute with the specified index.</p>\\n\"\n  syntax:\n    content: public virtual void MoveToAttribute(int i)\n    content.vb: Public Overridable Sub MoveToAttribute(i As Integer)\n    parameters:\n    - id: i\n      type: System.Int32\n      description: \"\\n<p>The index of the attribute.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The parameter has a negative value.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XmlReader.MoveToAttribute(Int32)\n- uid: System.Xml.XmlReader.MoveToAttribute(System.String)\n  commentId: M:System.Xml.XmlReader.MoveToAttribute(System.String)\n  id: MoveToAttribute(System.String)\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: MoveToAttribute(String)\n  fullName: System.Xml.XmlReader.MoveToAttribute(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: MoveToAttribute\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 280\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>When overridden in a derived class, moves to the attribute with the specified <xref href=\\\"System.Xml.XmlReader.Name\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public abstract bool MoveToAttribute(string name)\n    content.vb: Public MustOverride Function MoveToAttribute(name As String) As Boolean\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The qualified name of the attribute.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the attribute is found; otherwise, <strong>false</strong>. If <strong>false</strong>, the reader's position does not change.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The parameter is an empty string.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: XmlReader.MoveToAttribute(String)\n- uid: System.Xml.XmlReader.MoveToAttribute(System.String,System.String)\n  commentId: M:System.Xml.XmlReader.MoveToAttribute(System.String,System.String)\n  id: MoveToAttribute(System.String,System.String)\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: MoveToAttribute(String, String)\n  fullName: System.Xml.XmlReader.MoveToAttribute(System.String, System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: MoveToAttribute\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 281\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>When overridden in a derived class, moves to the attribute with the specified <xref href=\\\"System.Xml.XmlReader.LocalName\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and <xref href=\\\"System.Xml.XmlReader.NamespaceURI\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public abstract bool MoveToAttribute(string name, string ns)\n    content.vb: Public MustOverride Function MoveToAttribute(name As String, ns As String) As Boolean\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The local name of the attribute.</p>\\n\"\n    - id: ns\n      type: System.String\n      description: \"\\n<p>The namespace URI of the attribute.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the attribute is found; otherwise, <strong>false</strong>. If <strong>false</strong>, the reader's position does not change.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>Both parameter values are <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: XmlReader.MoveToAttribute(String, String)\n- uid: System.Xml.XmlReader.MoveToContent\n  commentId: M:System.Xml.XmlReader.MoveToContent\n  id: MoveToContent\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: MoveToContent()\n  fullName: System.Xml.XmlReader.MoveToContent()\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: MoveToContent\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 282\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Checks whether the current node is a content (non-white space text, <strong>CDATA</strong>, <strong>Element</strong>, <strong>EndElement</strong>, <strong>EntityReference</strong>, or <strong>EndEntity</strong>) node. If the node is not a content node, the reader skips ahead to the next content node or end of file. It skips over nodes of the following type: <strong>ProcessingInstruction</strong>, <strong>DocumentType</strong>, <strong>Comment</strong>, <strong>Whitespace</strong>, or <strong>SignificantWhitespace</strong>.</p>\\n\"\n  syntax:\n    content: public virtual XmlNodeType MoveToContent()\n    content.vb: Public Overridable Function MoveToContent As XmlNodeType\n    return:\n      type: System.Xml.XmlNodeType\n      description: \"\\n<p>The <xref href=\\\"System.Xml.XmlReader.NodeType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the current node found by the method or <strong>XmlNodeType.None</strong> if the reader has reached the end of the input stream.</p>\\n\"\n  exceptions:\n  - type: System.Xml.XmlException\n    commentId: T:System.Xml.XmlException\n    description: \"\\n<p>Incorrect XML encountered in the input stream.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XmlReader.MoveToContent()\n- uid: System.Xml.XmlReader.MoveToContentAsync\n  commentId: M:System.Xml.XmlReader.MoveToContentAsync\n  id: MoveToContentAsync\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: MoveToContentAsync()\n  fullName: System.Xml.XmlReader.MoveToContentAsync()\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: MoveToContentAsync\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 283\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Asynchronously checks whether the current node is a content node. If the node is not a content node, the reader skips ahead to the next content node or end of file.</p>\\n\"\n  syntax:\n    content: public virtual Task<XmlNodeType> MoveToContentAsync()\n    content.vb: Public Overridable Function MoveToContentAsync As Task(Of XmlNodeType)\n    return:\n      type: System.Threading.Tasks.Task{System.Xml.XmlNodeType}\n      description: \"\\n<p>The <xref href=\\\"System.Xml.XmlReader.NodeType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the current node found by the method or <strong>XmlNodeType.None</strong> if the reader has reached the end of the input stream.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> asynchronous method was called without setting the <xref href=\\\"System.Xml.XmlReaderSettings.Async\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> flag to <strong>true</strong>. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “Set XmlReaderSettings.Async to true if you want to use Async Methods.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XmlReader.MoveToContentAsync()\n- uid: System.Xml.XmlReader.MoveToElement\n  commentId: M:System.Xml.XmlReader.MoveToElement\n  id: MoveToElement\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: MoveToElement()\n  fullName: System.Xml.XmlReader.MoveToElement()\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: MoveToElement\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 284\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>When overridden in a derived class, moves to the element that contains the current attribute node.</p>\\n\"\n  syntax:\n    content: public abstract bool MoveToElement()\n    content.vb: Public MustOverride Function MoveToElement As Boolean\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the reader is positioned on an attribute (the reader moves to the element that owns the attribute); <strong>false</strong> if the reader is not positioned on an attribute (the position of the reader does not change).</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: XmlReader.MoveToElement()\n- uid: System.Xml.XmlReader.MoveToFirstAttribute\n  commentId: M:System.Xml.XmlReader.MoveToFirstAttribute\n  id: MoveToFirstAttribute\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: MoveToFirstAttribute()\n  fullName: System.Xml.XmlReader.MoveToFirstAttribute()\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: MoveToFirstAttribute\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 285\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>When overridden in a derived class, moves to the first attribute.</p>\\n\"\n  syntax:\n    content: public abstract bool MoveToFirstAttribute()\n    content.vb: Public MustOverride Function MoveToFirstAttribute As Boolean\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if an attribute exists (the reader moves to the first attribute); otherwise, <strong>false</strong> (the position of the reader does not change).</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: XmlReader.MoveToFirstAttribute()\n- uid: System.Xml.XmlReader.MoveToNextAttribute\n  commentId: M:System.Xml.XmlReader.MoveToNextAttribute\n  id: MoveToNextAttribute\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: MoveToNextAttribute()\n  fullName: System.Xml.XmlReader.MoveToNextAttribute()\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: MoveToNextAttribute\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 286\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>When overridden in a derived class, moves to the next attribute.</p>\\n\"\n  syntax:\n    content: public abstract bool MoveToNextAttribute()\n    content.vb: Public MustOverride Function MoveToNextAttribute As Boolean\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if there is a next attribute; <strong>false</strong> if there are no more attributes.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: XmlReader.MoveToNextAttribute()\n- uid: System.Xml.XmlReader.Read\n  commentId: M:System.Xml.XmlReader.Read\n  id: Read\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: Read()\n  fullName: System.Xml.XmlReader.Read()\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Read\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 287\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>When overridden in a derived class, reads the next node from the stream.</p>\\n\"\n  syntax:\n    content: public abstract bool Read()\n    content.vb: Public MustOverride Function Read As Boolean\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the next node was read successfully; otherwise, <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.Xml.XmlException\n    commentId: T:System.Xml.XmlException\n    description: \"\\n<p>An error occurred while parsing the XML.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: XmlReader.Read()\n- uid: System.Xml.XmlReader.ReadAsync\n  commentId: M:System.Xml.XmlReader.ReadAsync\n  id: ReadAsync\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: ReadAsync()\n  fullName: System.Xml.XmlReader.ReadAsync()\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadAsync\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 288\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Asynchronously reads the next node from the stream.</p>\\n\"\n  syntax:\n    content: public virtual Task<bool> ReadAsync()\n    content.vb: Public Overridable Function ReadAsync As Task(Of Boolean)\n    return:\n      type: System.Threading.Tasks.Task{System.Boolean}\n      description: \"\\n<p>\\n<strong>true</strong> if the next node was read successfully; <strong>false</strong> if there are no more nodes to read.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> asynchronous method was called without setting the <xref href=\\\"System.Xml.XmlReaderSettings.Async\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> flag to <strong>true</strong>. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “Set XmlReaderSettings.Async to true if you want to use Async Methods.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XmlReader.ReadAsync()\n- uid: System.Xml.XmlReader.ReadAttributeValue\n  commentId: M:System.Xml.XmlReader.ReadAttributeValue\n  id: ReadAttributeValue\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: ReadAttributeValue()\n  fullName: System.Xml.XmlReader.ReadAttributeValue()\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadAttributeValue\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 289\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>When overridden in a derived class, parses the attribute value into one or more <strong>Text</strong>, <strong>EntityReference</strong>, or <strong>EndEntity</strong> nodes.</p>\\n\"\n  syntax:\n    content: public abstract bool ReadAttributeValue()\n    content.vb: Public MustOverride Function ReadAttributeValue As Boolean\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if there are nodes to return.</p>\\n<p>\\n<strong>false</strong> if the reader is not positioned on an attribute node when the initial call is made or if all the attribute values have been read.</p>\\n<p>An empty attribute, such as, <code>misc=\\\"\\\"</code>, returns <strong>true</strong> with a single node with a value of <strong>String.Empty</strong>.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: XmlReader.ReadAttributeValue()\n- uid: System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)\n  commentId: M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)\n  id: ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: ReadContentAs(Type, IXmlNamespaceResolver)\n  fullName: System.Xml.XmlReader.ReadContentAs(System.Type, System.Xml.IXmlNamespaceResolver)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadContentAs\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 290\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Reads the content as an object of the type specified.</p>\\n\"\n  syntax:\n    content: public virtual object ReadContentAs(Type returnType, IXmlNamespaceResolver namespaceResolver)\n    content.vb: Public Overridable Function ReadContentAs(returnType As Type, namespaceResolver As IXmlNamespaceResolver) As Object\n    parameters:\n    - id: returnType\n      type: System.Type\n      description: \"\\n<p>The type of the value to be returned.</p>\\n<p>Note   With the release of the .NET Framework 3.5, the value of the <em>returnType</em> parameter can now be the <xref href=\\\"System.DateTimeOffset\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> type.</p>\\n\"\n    - id: namespaceResolver\n      type: System.Xml.IXmlNamespaceResolver\n      description: \"\\n<p>An <xref href=\\\"System.Xml.IXmlNamespaceResolver\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that is used to resolve any namespace prefixes related to type conversion. For example, this can be used when converting an <xref href=\\\"System.Xml.XmlQualifiedName\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object to an <code>xs:string</code>.</p>\\n<p>This value can be <strong>null</strong>.</p>\\n\"\n    return:\n      type: System.Object\n      description: \"\\n<p>The concatenated text content or attribute value converted to the requested type.</p>\\n\"\n  exceptions:\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>The content is not in the correct format for the target type.</p>\\n\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>The attempted cast is not valid.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>returnType</em> value is <strong>null</strong>.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The current node is not a supported node type. See the table below for details.</p>\\n\"\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: \"\\n<p>Read <strong>Decimal.MaxValue</strong>.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XmlReader.ReadContentAs(Type, IXmlNamespaceResolver)\n- uid: System.Xml.XmlReader.ReadContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)\n  commentId: M:System.Xml.XmlReader.ReadContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)\n  id: ReadContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: ReadContentAsAsync(Type, IXmlNamespaceResolver)\n  fullName: System.Xml.XmlReader.ReadContentAsAsync(System.Type, System.Xml.IXmlNamespaceResolver)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadContentAsAsync\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 291\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Asynchronously reads the content as an object of the type specified.</p>\\n\"\n  syntax:\n    content: public virtual Task<object> ReadContentAsAsync(Type returnType, IXmlNamespaceResolver namespaceResolver)\n    content.vb: Public Overridable Function ReadContentAsAsync(returnType As Type, namespaceResolver As IXmlNamespaceResolver) As Task(Of Object)\n    parameters:\n    - id: returnType\n      type: System.Type\n      description: \"\\n<p>The type of the value to be returned.</p>\\n\"\n    - id: namespaceResolver\n      type: System.Xml.IXmlNamespaceResolver\n      description: \"\\n<p>An <xref href=\\\"System.Xml.IXmlNamespaceResolver\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that is used to resolve any namespace prefixes related to type conversion.</p>\\n\"\n    return:\n      type: System.Threading.Tasks.Task{System.Object}\n      description: \"\\n<p>The concatenated text content or attribute value converted to the requested type.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> asynchronous method was called without setting the <xref href=\\\"System.Xml.XmlReaderSettings.Async\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> flag to <strong>true</strong>. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “Set XmlReaderSettings.Async to true if you want to use Async Methods.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XmlReader.ReadContentAsAsync(Type, IXmlNamespaceResolver)\n- uid: System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)\n  commentId: M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)\n  id: ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: ReadContentAsBase64(Byte[], Int32, Int32)\n  fullName: System.Xml.XmlReader.ReadContentAsBase64(System.Byte[], System.Int32, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadContentAsBase64\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 292\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Reads the content and returns the Base64 decoded binary bytes.</p>\\n\"\n  syntax:\n    content: public virtual int ReadContentAsBase64(byte[] buffer, int index, int count)\n    content.vb: Public Overridable Function ReadContentAsBase64(buffer As Byte(), index As Integer, count As Integer) As Integer\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: \"\\n<p>The buffer into which to copy the resulting text. This value cannot be <strong>null</strong>.</p>\\n\"\n    - id: index\n      type: System.Int32\n      description: \"\\n<p>The offset into the buffer where to start copying the result.</p>\\n\"\n    - id: count\n      type: System.Int32\n      description: \"\\n<p>The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.</p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>The number of bytes written to the buffer.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>buffer</em> value is <strong>null</strong>.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>\\n<xref href=\\\"System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is not supported on the current node.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The index into the buffer or index + count is larger than the allocated buffer size.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> implementation does not support this method.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  seealso:\n  - type: System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)\n    commentId: M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)\n  - type: System.Xml.XmlNodeType\n    commentId: T:System.Xml.XmlNodeType\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  fullName.vb: System.Xml.XmlReader.ReadContentAsBase64(System.Byte(), System.Int32, System.Int32)\n  name.vb: ReadContentAsBase64(Byte(), Int32, Int32)\n  nameWithType: XmlReader.ReadContentAsBase64(Byte[], Int32, Int32)\n  nameWithType.vb: XmlReader.ReadContentAsBase64(Byte(), Int32, Int32)\n- uid: System.Xml.XmlReader.ReadContentAsBase64Async(System.Byte[],System.Int32,System.Int32)\n  commentId: M:System.Xml.XmlReader.ReadContentAsBase64Async(System.Byte[],System.Int32,System.Int32)\n  id: ReadContentAsBase64Async(System.Byte[],System.Int32,System.Int32)\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: ReadContentAsBase64Async(Byte[], Int32, Int32)\n  fullName: System.Xml.XmlReader.ReadContentAsBase64Async(System.Byte[], System.Int32, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadContentAsBase64Async\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 293\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Asynchronously reads the content and returns the Base64 decoded binary bytes.</p>\\n\"\n  syntax:\n    content: public virtual Task<int> ReadContentAsBase64Async(byte[] buffer, int index, int count)\n    content.vb: Public Overridable Function ReadContentAsBase64Async(buffer As Byte(), index As Integer, count As Integer) As Task(Of Integer)\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: \"\\n<p>The buffer into which to copy the resulting text. This value cannot be <strong>null</strong>.</p>\\n\"\n    - id: index\n      type: System.Int32\n      description: \"\\n<p>The offset into the buffer where to start copying the result.</p>\\n\"\n    - id: count\n      type: System.Int32\n      description: \"\\n<p>The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.</p>\\n\"\n    return:\n      type: System.Threading.Tasks.Task{System.Int32}\n      description: \"\\n<p>The number of bytes written to the buffer.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> asynchronous method was called without setting the <xref href=\\\"System.Xml.XmlReaderSettings.Async\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> flag to <strong>true</strong>. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “Set XmlReaderSettings.Async to true if you want to use Async Methods.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  fullName.vb: System.Xml.XmlReader.ReadContentAsBase64Async(System.Byte(), System.Int32, System.Int32)\n  name.vb: ReadContentAsBase64Async(Byte(), Int32, Int32)\n  nameWithType: XmlReader.ReadContentAsBase64Async(Byte[], Int32, Int32)\n  nameWithType.vb: XmlReader.ReadContentAsBase64Async(Byte(), Int32, Int32)\n- uid: System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)\n  commentId: M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)\n  id: ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: ReadContentAsBinHex(Byte[], Int32, Int32)\n  fullName: System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[], System.Int32, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadContentAsBinHex\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 294\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Reads the content and returns the <strong>BinHex</strong> decoded binary bytes.</p>\\n\"\n  syntax:\n    content: public virtual int ReadContentAsBinHex(byte[] buffer, int index, int count)\n    content.vb: Public Overridable Function ReadContentAsBinHex(buffer As Byte(), index As Integer, count As Integer) As Integer\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: \"\\n<p>The buffer into which to copy the resulting text. This value cannot be <strong>null</strong>.</p>\\n\"\n    - id: index\n      type: System.Int32\n      description: \"\\n<p>The offset into the buffer where to start copying the result.</p>\\n\"\n    - id: count\n      type: System.Int32\n      description: \"\\n<p>The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.</p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>The number of bytes written to the buffer.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>buffer</em> value is <strong>null</strong>.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>\\n<xref href=\\\"System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is not supported on the current node.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The index into the buffer or index + count is larger than the allocated buffer size.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> implementation does not support this method.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  seealso:\n  - type: System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)\n    commentId: M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)\n  - type: System.Xml.XmlNodeType\n    commentId: T:System.Xml.XmlNodeType\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  fullName.vb: System.Xml.XmlReader.ReadContentAsBinHex(System.Byte(), System.Int32, System.Int32)\n  name.vb: ReadContentAsBinHex(Byte(), Int32, Int32)\n  nameWithType: XmlReader.ReadContentAsBinHex(Byte[], Int32, Int32)\n  nameWithType.vb: XmlReader.ReadContentAsBinHex(Byte(), Int32, Int32)\n- uid: System.Xml.XmlReader.ReadContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)\n  commentId: M:System.Xml.XmlReader.ReadContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)\n  id: ReadContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: ReadContentAsBinHexAsync(Byte[], Int32, Int32)\n  fullName: System.Xml.XmlReader.ReadContentAsBinHexAsync(System.Byte[], System.Int32, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadContentAsBinHexAsync\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 295\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Asynchronously reads the content and returns the <strong>BinHex</strong> decoded binary bytes.</p>\\n\"\n  syntax:\n    content: public virtual Task<int> ReadContentAsBinHexAsync(byte[] buffer, int index, int count)\n    content.vb: Public Overridable Function ReadContentAsBinHexAsync(buffer As Byte(), index As Integer, count As Integer) As Task(Of Integer)\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: \"\\n<p>The buffer into which to copy the resulting text. This value cannot be <strong>null</strong>.</p>\\n\"\n    - id: index\n      type: System.Int32\n      description: \"\\n<p>The offset into the buffer where to start copying the result.</p>\\n\"\n    - id: count\n      type: System.Int32\n      description: \"\\n<p>The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.</p>\\n\"\n    return:\n      type: System.Threading.Tasks.Task{System.Int32}\n      description: \"\\n<p>The number of bytes written to the buffer.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> asynchronous method was called without setting the <xref href=\\\"System.Xml.XmlReaderSettings.Async\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> flag to <strong>true</strong>. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “Set XmlReaderSettings.Async to true if you want to use Async Methods.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  fullName.vb: System.Xml.XmlReader.ReadContentAsBinHexAsync(System.Byte(), System.Int32, System.Int32)\n  name.vb: ReadContentAsBinHexAsync(Byte(), Int32, Int32)\n  nameWithType: XmlReader.ReadContentAsBinHexAsync(Byte[], Int32, Int32)\n  nameWithType.vb: XmlReader.ReadContentAsBinHexAsync(Byte(), Int32, Int32)\n- uid: System.Xml.XmlReader.ReadContentAsBoolean\n  commentId: M:System.Xml.XmlReader.ReadContentAsBoolean\n  id: ReadContentAsBoolean\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: ReadContentAsBoolean()\n  fullName: System.Xml.XmlReader.ReadContentAsBoolean()\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadContentAsBoolean\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 296\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Reads the text content at the current position as a <strong>Boolean</strong>.</p>\\n\"\n  syntax:\n    content: public virtual bool ReadContentAsBoolean()\n    content.vb: Public Overridable Function ReadContentAsBoolean As Boolean\n    return:\n      type: System.Boolean\n      description: \"\\n<p>The text content as a <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>The attempted cast is not valid.</p>\\n\"\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>The string format is not valid.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XmlReader.ReadContentAsBoolean()\n- uid: System.Xml.XmlReader.ReadContentAsDateTimeOffset\n  commentId: M:System.Xml.XmlReader.ReadContentAsDateTimeOffset\n  id: ReadContentAsDateTimeOffset\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: ReadContentAsDateTimeOffset()\n  fullName: System.Xml.XmlReader.ReadContentAsDateTimeOffset()\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadContentAsDateTimeOffset\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 297\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Reads the text content at the current position as a <xref href=\\\"System.DateTimeOffset\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public virtual DateTimeOffset ReadContentAsDateTimeOffset()\n    content.vb: Public Overridable Function ReadContentAsDateTimeOffset As DateTimeOffset\n    return:\n      type: System.DateTimeOffset\n      description: \"\\n<p>The text content as a <xref href=\\\"System.DateTimeOffset\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XmlReader.ReadContentAsDateTimeOffset()\n- uid: System.Xml.XmlReader.ReadContentAsDecimal\n  commentId: M:System.Xml.XmlReader.ReadContentAsDecimal\n  id: ReadContentAsDecimal\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: ReadContentAsDecimal()\n  fullName: System.Xml.XmlReader.ReadContentAsDecimal()\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadContentAsDecimal\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 298\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Reads the text content at the current position as a <xref href=\\\"System.Decimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public virtual decimal ReadContentAsDecimal()\n    content.vb: Public Overridable Function ReadContentAsDecimal As Decimal\n    return:\n      type: System.Decimal\n      description: \"\\n<p>The text content at the current position as a <xref href=\\\"System.Decimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>The attempted cast is not valid.</p>\\n\"\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>The string format is not valid.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XmlReader.ReadContentAsDecimal()\n- uid: System.Xml.XmlReader.ReadContentAsDouble\n  commentId: M:System.Xml.XmlReader.ReadContentAsDouble\n  id: ReadContentAsDouble\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: ReadContentAsDouble()\n  fullName: System.Xml.XmlReader.ReadContentAsDouble()\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadContentAsDouble\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 299\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Reads the text content at the current position as a double-precision floating-point number.</p>\\n\"\n  syntax:\n    content: public virtual double ReadContentAsDouble()\n    content.vb: Public Overridable Function ReadContentAsDouble As Double\n    return:\n      type: System.Double\n      description: \"\\n<p>The text content as a double-precision floating-point number.</p>\\n\"\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>The attempted cast is not valid.</p>\\n\"\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>The string format is not valid.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XmlReader.ReadContentAsDouble()\n- uid: System.Xml.XmlReader.ReadContentAsFloat\n  commentId: M:System.Xml.XmlReader.ReadContentAsFloat\n  id: ReadContentAsFloat\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: ReadContentAsFloat()\n  fullName: System.Xml.XmlReader.ReadContentAsFloat()\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadContentAsFloat\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 300\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Reads the text content at the current position as a single-precision floating point number.</p>\\n\"\n  syntax:\n    content: public virtual float ReadContentAsFloat()\n    content.vb: Public Overridable Function ReadContentAsFloat As Single\n    return:\n      type: System.Single\n      description: \"\\n<p>The text content at the current position as a single-precision floating point number.</p>\\n\"\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>The attempted cast is not valid.</p>\\n\"\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>The string format is not valid.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XmlReader.ReadContentAsFloat()\n- uid: System.Xml.XmlReader.ReadContentAsInt\n  commentId: M:System.Xml.XmlReader.ReadContentAsInt\n  id: ReadContentAsInt\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: ReadContentAsInt()\n  fullName: System.Xml.XmlReader.ReadContentAsInt()\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadContentAsInt\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 301\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Reads the text content at the current position as a 32-bit signed integer.</p>\\n\"\n  syntax:\n    content: public virtual int ReadContentAsInt()\n    content.vb: Public Overridable Function ReadContentAsInt As Integer\n    return:\n      type: System.Int32\n      description: \"\\n<p>The text content as a 32-bit signed integer.</p>\\n\"\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>The attempted cast is not valid.</p>\\n\"\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>The string format is not valid.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XmlReader.ReadContentAsInt()\n- uid: System.Xml.XmlReader.ReadContentAsLong\n  commentId: M:System.Xml.XmlReader.ReadContentAsLong\n  id: ReadContentAsLong\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: ReadContentAsLong()\n  fullName: System.Xml.XmlReader.ReadContentAsLong()\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadContentAsLong\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 302\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Reads the text content at the current position as a 64-bit signed integer.</p>\\n\"\n  syntax:\n    content: public virtual long ReadContentAsLong()\n    content.vb: Public Overridable Function ReadContentAsLong As Long\n    return:\n      type: System.Int64\n      description: \"\\n<p>The text content as a 64-bit signed integer.</p>\\n\"\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>The attempted cast is not valid.</p>\\n\"\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>The string format is not valid.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XmlReader.ReadContentAsLong()\n- uid: System.Xml.XmlReader.ReadContentAsObject\n  commentId: M:System.Xml.XmlReader.ReadContentAsObject\n  id: ReadContentAsObject\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: ReadContentAsObject()\n  fullName: System.Xml.XmlReader.ReadContentAsObject()\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadContentAsObject\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 303\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Reads the text content at the current position as an <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public virtual object ReadContentAsObject()\n    content.vb: Public Overridable Function ReadContentAsObject As Object\n    return:\n      type: System.Object\n      description: \"\\n<p>The text content as the most appropriate common language runtime (CLR) object.</p>\\n\"\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>The attempted cast is not valid.</p>\\n\"\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>The string format is not valid.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XmlReader.ReadContentAsObject()\n- uid: System.Xml.XmlReader.ReadContentAsObjectAsync\n  commentId: M:System.Xml.XmlReader.ReadContentAsObjectAsync\n  id: ReadContentAsObjectAsync\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: ReadContentAsObjectAsync()\n  fullName: System.Xml.XmlReader.ReadContentAsObjectAsync()\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadContentAsObjectAsync\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 304\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Asynchronously reads the text content at the current position as an <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public virtual Task<object> ReadContentAsObjectAsync()\n    content.vb: Public Overridable Function ReadContentAsObjectAsync As Task(Of Object)\n    return:\n      type: System.Threading.Tasks.Task{System.Object}\n      description: \"\\n<p>The text content as the most appropriate common language runtime (CLR) object.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> asynchronous method was called without setting the <xref href=\\\"System.Xml.XmlReaderSettings.Async\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> flag to <strong>true</strong>. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “Set XmlReaderSettings.Async to true if you want to use Async Methods.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XmlReader.ReadContentAsObjectAsync()\n- uid: System.Xml.XmlReader.ReadContentAsString\n  commentId: M:System.Xml.XmlReader.ReadContentAsString\n  id: ReadContentAsString\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: ReadContentAsString()\n  fullName: System.Xml.XmlReader.ReadContentAsString()\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadContentAsString\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 305\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Reads the text content at the current position as a <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public virtual string ReadContentAsString()\n    content.vb: Public Overridable Function ReadContentAsString As String\n    return:\n      type: System.String\n      description: \"\\n<p>The text content as a <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>The attempted cast is not valid.</p>\\n\"\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>The string format is not valid.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XmlReader.ReadContentAsString()\n- uid: System.Xml.XmlReader.ReadContentAsStringAsync\n  commentId: M:System.Xml.XmlReader.ReadContentAsStringAsync\n  id: ReadContentAsStringAsync\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: ReadContentAsStringAsync()\n  fullName: System.Xml.XmlReader.ReadContentAsStringAsync()\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadContentAsStringAsync\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 306\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Asynchronously reads the text content at the current position as a <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public virtual Task<string> ReadContentAsStringAsync()\n    content.vb: Public Overridable Function ReadContentAsStringAsync As Task(Of String)\n    return:\n      type: System.Threading.Tasks.Task{System.String}\n      description: \"\\n<p>The text content as a <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> asynchronous method was called without setting the <xref href=\\\"System.Xml.XmlReaderSettings.Async\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> flag to <strong>true</strong>. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “Set XmlReaderSettings.Async to true if you want to use Async Methods.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XmlReader.ReadContentAsStringAsync()\n- uid: System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)\n  commentId: M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)\n  id: ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: ReadElementContentAs(Type, IXmlNamespaceResolver)\n  fullName: System.Xml.XmlReader.ReadElementContentAs(System.Type, System.Xml.IXmlNamespaceResolver)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadElementContentAs\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 307\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Reads the element content as the requested type.</p>\\n\"\n  syntax:\n    content: public virtual object ReadElementContentAs(Type returnType, IXmlNamespaceResolver namespaceResolver)\n    content.vb: Public Overridable Function ReadElementContentAs(returnType As Type, namespaceResolver As IXmlNamespaceResolver) As Object\n    parameters:\n    - id: returnType\n      type: System.Type\n      description: \"\\n<p>The type of the value to be returned.</p>\\n<p>Note   With the release of the .NET Framework 3.5, the value of the <em>returnType</em> parameter can now be the <xref href=\\\"System.DateTimeOffset\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> type.</p>\\n\"\n    - id: namespaceResolver\n      type: System.Xml.IXmlNamespaceResolver\n      description: \"\\n<p>An <xref href=\\\"System.Xml.IXmlNamespaceResolver\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that is used to resolve any namespace prefixes related to type conversion.</p>\\n\"\n    return:\n      type: System.Object\n      description: \"\\n<p>The element content converted to the requested typed object.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is not positioned on an element.</p>\\n\"\n  - type: System.Xml.XmlException\n    commentId: T:System.Xml.XmlException\n    description: \"\\n<p>The current element contains child elements.</p>\\n<p>-or-</p>\\n<p>The element content cannot be converted to the requested type.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The method is called with <strong>null</strong> arguments.</p>\\n\"\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: \"\\n<p>Read <strong>Decimal.MaxValue</strong>.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XmlReader.ReadElementContentAs(Type, IXmlNamespaceResolver)\n- uid: System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)\n  commentId: M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)\n  id: ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: ReadElementContentAs(Type, IXmlNamespaceResolver, String, String)\n  fullName: System.Xml.XmlReader.ReadElementContentAs(System.Type, System.Xml.IXmlNamespaceResolver, System.String, System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadElementContentAs\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 308\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Checks that the specified local name and namespace URI matches that of the current element, then reads the element content as the requested type.</p>\\n\"\n  syntax:\n    content: public virtual object ReadElementContentAs(Type returnType, IXmlNamespaceResolver namespaceResolver, string localName, string namespaceURI)\n    content.vb: Public Overridable Function ReadElementContentAs(returnType As Type, namespaceResolver As IXmlNamespaceResolver, localName As String, namespaceURI As String) As Object\n    parameters:\n    - id: returnType\n      type: System.Type\n      description: \"\\n<p>The type of the value to be returned.</p>\\n<p>Note   With the release of the .NET Framework 3.5, the value of the <em>returnType</em> parameter can now be the <xref href=\\\"System.DateTimeOffset\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> type.</p>\\n\"\n    - id: namespaceResolver\n      type: System.Xml.IXmlNamespaceResolver\n      description: \"\\n<p>An <xref href=\\\"System.Xml.IXmlNamespaceResolver\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that is used to resolve any namespace prefixes related to type conversion.</p>\\n\"\n    - id: localName\n      type: System.String\n      description: \"\\n<p>The local name of the element.</p>\\n\"\n    - id: namespaceURI\n      type: System.String\n      description: \"\\n<p>The namespace URI of the element.</p>\\n\"\n    return:\n      type: System.Object\n      description: \"\\n<p>The element content converted to the requested typed object.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is not positioned on an element.</p>\\n\"\n  - type: System.Xml.XmlException\n    commentId: T:System.Xml.XmlException\n    description: \"\\n<p>The current element contains child elements.</p>\\n<p>-or-</p>\\n<p>The element content cannot be converted to the requested type.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The method is called with <strong>null</strong> arguments.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The specified local name and namespace URI do not match that of the current element being read.</p>\\n\"\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: \"\\n<p>Read <strong>Decimal.MaxValue</strong>.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XmlReader.ReadElementContentAs(Type, IXmlNamespaceResolver, String, String)\n- uid: System.Xml.XmlReader.ReadElementContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)\n  commentId: M:System.Xml.XmlReader.ReadElementContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)\n  id: ReadElementContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: ReadElementContentAsAsync(Type, IXmlNamespaceResolver)\n  fullName: System.Xml.XmlReader.ReadElementContentAsAsync(System.Type, System.Xml.IXmlNamespaceResolver)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadElementContentAsAsync\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 309\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Asynchronously reads the element content as the requested type.</p>\\n\"\n  syntax:\n    content: public virtual Task<object> ReadElementContentAsAsync(Type returnType, IXmlNamespaceResolver namespaceResolver)\n    content.vb: Public Overridable Function ReadElementContentAsAsync(returnType As Type, namespaceResolver As IXmlNamespaceResolver) As Task(Of Object)\n    parameters:\n    - id: returnType\n      type: System.Type\n      description: \"\\n<p>The type of the value to be returned.</p>\\n\"\n    - id: namespaceResolver\n      type: System.Xml.IXmlNamespaceResolver\n      description: \"\\n<p>An <xref href=\\\"System.Xml.IXmlNamespaceResolver\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that is used to resolve any namespace prefixes related to type conversion.</p>\\n\"\n    return:\n      type: System.Threading.Tasks.Task{System.Object}\n      description: \"\\n<p>The element content converted to the requested typed object.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> asynchronous method was called without setting the <xref href=\\\"System.Xml.XmlReaderSettings.Async\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> flag to <strong>true</strong>. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “Set XmlReaderSettings.Async to true if you want to use Async Methods.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XmlReader.ReadElementContentAsAsync(Type, IXmlNamespaceResolver)\n- uid: System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)\n  commentId: M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)\n  id: ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: ReadElementContentAsBase64(Byte[], Int32, Int32)\n  fullName: System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[], System.Int32, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadElementContentAsBase64\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 310\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Reads the element and decodes the <strong>Base64</strong> content.</p>\\n\"\n  syntax:\n    content: public virtual int ReadElementContentAsBase64(byte[] buffer, int index, int count)\n    content.vb: Public Overridable Function ReadElementContentAsBase64(buffer As Byte(), index As Integer, count As Integer) As Integer\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: \"\\n<p>The buffer into which to copy the resulting text. This value cannot be <strong>null</strong>.</p>\\n\"\n    - id: index\n      type: System.Int32\n      description: \"\\n<p>The offset into the buffer where to start copying the result.</p>\\n\"\n    - id: count\n      type: System.Int32\n      description: \"\\n<p>The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.</p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>The number of bytes written to the buffer.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>buffer</em> value is <strong>null</strong>.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The current node is not an element node.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The index into the buffer or index + count is larger than the allocated buffer size.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> implementation does not support this method.</p>\\n\"\n  - type: System.Xml.XmlException\n    commentId: T:System.Xml.XmlException\n    description: \"\\n<p>The element contains mixed-content.</p>\\n\"\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>The content cannot be converted to the requested type.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  seealso:\n  - type: System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)\n    commentId: M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  fullName.vb: System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte(), System.Int32, System.Int32)\n  name.vb: ReadElementContentAsBase64(Byte(), Int32, Int32)\n  nameWithType: XmlReader.ReadElementContentAsBase64(Byte[], Int32, Int32)\n  nameWithType.vb: XmlReader.ReadElementContentAsBase64(Byte(), Int32, Int32)\n- uid: System.Xml.XmlReader.ReadElementContentAsBase64Async(System.Byte[],System.Int32,System.Int32)\n  commentId: M:System.Xml.XmlReader.ReadElementContentAsBase64Async(System.Byte[],System.Int32,System.Int32)\n  id: ReadElementContentAsBase64Async(System.Byte[],System.Int32,System.Int32)\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: ReadElementContentAsBase64Async(Byte[], Int32, Int32)\n  fullName: System.Xml.XmlReader.ReadElementContentAsBase64Async(System.Byte[], System.Int32, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadElementContentAsBase64Async\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 311\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Asynchronously reads the element and decodes the <strong>Base64</strong> content.</p>\\n\"\n  syntax:\n    content: public virtual Task<int> ReadElementContentAsBase64Async(byte[] buffer, int index, int count)\n    content.vb: Public Overridable Function ReadElementContentAsBase64Async(buffer As Byte(), index As Integer, count As Integer) As Task(Of Integer)\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: \"\\n<p>The buffer into which to copy the resulting text. This value cannot be <strong>null</strong>.</p>\\n\"\n    - id: index\n      type: System.Int32\n      description: \"\\n<p>The offset into the buffer where to start copying the result.</p>\\n\"\n    - id: count\n      type: System.Int32\n      description: \"\\n<p>The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.</p>\\n\"\n    return:\n      type: System.Threading.Tasks.Task{System.Int32}\n      description: \"\\n<p>The number of bytes written to the buffer.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> asynchronous method was called without setting the <xref href=\\\"System.Xml.XmlReaderSettings.Async\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> flag to <strong>true</strong>. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “Set XmlReaderSettings.Async to true if you want to use Async Methods.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  fullName.vb: System.Xml.XmlReader.ReadElementContentAsBase64Async(System.Byte(), System.Int32, System.Int32)\n  name.vb: ReadElementContentAsBase64Async(Byte(), Int32, Int32)\n  nameWithType: XmlReader.ReadElementContentAsBase64Async(Byte[], Int32, Int32)\n  nameWithType.vb: XmlReader.ReadElementContentAsBase64Async(Byte(), Int32, Int32)\n- uid: System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)\n  commentId: M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)\n  id: ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: ReadElementContentAsBinHex(Byte[], Int32, Int32)\n  fullName: System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[], System.Int32, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadElementContentAsBinHex\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 312\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Reads the element and decodes the <strong>BinHex</strong> content.</p>\\n\"\n  syntax:\n    content: public virtual int ReadElementContentAsBinHex(byte[] buffer, int index, int count)\n    content.vb: Public Overridable Function ReadElementContentAsBinHex(buffer As Byte(), index As Integer, count As Integer) As Integer\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: \"\\n<p>The buffer into which to copy the resulting text. This value cannot be <strong>null</strong>.</p>\\n\"\n    - id: index\n      type: System.Int32\n      description: \"\\n<p>The offset into the buffer where to start copying the result.</p>\\n\"\n    - id: count\n      type: System.Int32\n      description: \"\\n<p>The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.</p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>The number of bytes written to the buffer.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>buffer</em> value is <strong>null</strong>.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The current node is not an element node.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The index into the buffer or index + count is larger than the allocated buffer size.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> implementation does not support this method.</p>\\n\"\n  - type: System.Xml.XmlException\n    commentId: T:System.Xml.XmlException\n    description: \"\\n<p>The element contains mixed-content.</p>\\n\"\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>The content cannot be converted to the requested type.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  seealso:\n  - type: System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)\n    commentId: M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  fullName.vb: System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte(), System.Int32, System.Int32)\n  name.vb: ReadElementContentAsBinHex(Byte(), Int32, Int32)\n  nameWithType: XmlReader.ReadElementContentAsBinHex(Byte[], Int32, Int32)\n  nameWithType.vb: XmlReader.ReadElementContentAsBinHex(Byte(), Int32, Int32)\n- uid: System.Xml.XmlReader.ReadElementContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)\n  commentId: M:System.Xml.XmlReader.ReadElementContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)\n  id: ReadElementContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: ReadElementContentAsBinHexAsync(Byte[], Int32, Int32)\n  fullName: System.Xml.XmlReader.ReadElementContentAsBinHexAsync(System.Byte[], System.Int32, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadElementContentAsBinHexAsync\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 313\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Asynchronously reads the element and decodes the <strong>BinHex</strong> content.</p>\\n\"\n  syntax:\n    content: public virtual Task<int> ReadElementContentAsBinHexAsync(byte[] buffer, int index, int count)\n    content.vb: Public Overridable Function ReadElementContentAsBinHexAsync(buffer As Byte(), index As Integer, count As Integer) As Task(Of Integer)\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: \"\\n<p>The buffer into which to copy the resulting text. This value cannot be <strong>null</strong>.</p>\\n\"\n    - id: index\n      type: System.Int32\n      description: \"\\n<p>The offset into the buffer where to start copying the result.</p>\\n\"\n    - id: count\n      type: System.Int32\n      description: \"\\n<p>The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.</p>\\n\"\n    return:\n      type: System.Threading.Tasks.Task{System.Int32}\n      description: \"\\n<p>The number of bytes written to the buffer.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> asynchronous method was called without setting the <xref href=\\\"System.Xml.XmlReaderSettings.Async\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> flag to <strong>true</strong>. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “Set XmlReaderSettings.Async to true if you want to use Async Methods.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  fullName.vb: System.Xml.XmlReader.ReadElementContentAsBinHexAsync(System.Byte(), System.Int32, System.Int32)\n  name.vb: ReadElementContentAsBinHexAsync(Byte(), Int32, Int32)\n  nameWithType: XmlReader.ReadElementContentAsBinHexAsync(Byte[], Int32, Int32)\n  nameWithType.vb: XmlReader.ReadElementContentAsBinHexAsync(Byte(), Int32, Int32)\n- uid: System.Xml.XmlReader.ReadElementContentAsBoolean\n  commentId: M:System.Xml.XmlReader.ReadElementContentAsBoolean\n  id: ReadElementContentAsBoolean\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: ReadElementContentAsBoolean()\n  fullName: System.Xml.XmlReader.ReadElementContentAsBoolean()\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadElementContentAsBoolean\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 314\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Reads the current element and returns the contents as a <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public virtual bool ReadElementContentAsBoolean()\n    content.vb: Public Overridable Function ReadElementContentAsBoolean As Boolean\n    return:\n      type: System.Boolean\n      description: \"\\n<p>The element content as a <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is not positioned on an element.</p>\\n\"\n  - type: System.Xml.XmlException\n    commentId: T:System.Xml.XmlException\n    description: \"\\n<p>The current element contains child elements.</p>\\n<p>-or-</p>\\n<p>The element content cannot be converted to a <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The method is called with <strong>null</strong> arguments.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XmlReader.ReadElementContentAsBoolean()\n- uid: System.Xml.XmlReader.ReadElementContentAsBoolean(System.String,System.String)\n  commentId: M:System.Xml.XmlReader.ReadElementContentAsBoolean(System.String,System.String)\n  id: ReadElementContentAsBoolean(System.String,System.String)\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: ReadElementContentAsBoolean(String, String)\n  fullName: System.Xml.XmlReader.ReadElementContentAsBoolean(System.String, System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadElementContentAsBoolean\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 315\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public virtual bool ReadElementContentAsBoolean(string localName, string namespaceURI)\n    content.vb: Public Overridable Function ReadElementContentAsBoolean(localName As String, namespaceURI As String) As Boolean\n    parameters:\n    - id: localName\n      type: System.String\n      description: \"\\n<p>The local name of the element.</p>\\n\"\n    - id: namespaceURI\n      type: System.String\n      description: \"\\n<p>The namespace URI of the element.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>The element content as a <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is not positioned on an element.</p>\\n\"\n  - type: System.Xml.XmlException\n    commentId: T:System.Xml.XmlException\n    description: \"\\n<p>The current element contains child elements.</p>\\n<p>-or-</p>\\n<p>The element content cannot be converted to the requested type.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The method is called with <strong>null</strong> arguments.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The specified local name and namespace URI do not match that of the current element being read.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XmlReader.ReadElementContentAsBoolean(String, String)\n- uid: System.Xml.XmlReader.ReadElementContentAsDecimal\n  commentId: M:System.Xml.XmlReader.ReadElementContentAsDecimal\n  id: ReadElementContentAsDecimal\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: ReadElementContentAsDecimal()\n  fullName: System.Xml.XmlReader.ReadElementContentAsDecimal()\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadElementContentAsDecimal\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 316\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Reads the current element and returns the contents as a <xref href=\\\"System.Decimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public virtual decimal ReadElementContentAsDecimal()\n    content.vb: Public Overridable Function ReadElementContentAsDecimal As Decimal\n    return:\n      type: System.Decimal\n      description: \"\\n<p>The element content as a <xref href=\\\"System.Decimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is not positioned on an element.</p>\\n\"\n  - type: System.Xml.XmlException\n    commentId: T:System.Xml.XmlException\n    description: \"\\n<p>The current element contains child elements.</p>\\n<p>-or-</p>\\n<p>The element content cannot be converted to a <xref href=\\\"System.Decimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The method is called with <strong>null</strong> arguments.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XmlReader.ReadElementContentAsDecimal()\n- uid: System.Xml.XmlReader.ReadElementContentAsDecimal(System.String,System.String)\n  commentId: M:System.Xml.XmlReader.ReadElementContentAsDecimal(System.String,System.String)\n  id: ReadElementContentAsDecimal(System.String,System.String)\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: ReadElementContentAsDecimal(String, String)\n  fullName: System.Xml.XmlReader.ReadElementContentAsDecimal(System.String, System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadElementContentAsDecimal\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 317\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a <xref href=\\\"System.Decimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public virtual decimal ReadElementContentAsDecimal(string localName, string namespaceURI)\n    content.vb: Public Overridable Function ReadElementContentAsDecimal(localName As String, namespaceURI As String) As Decimal\n    parameters:\n    - id: localName\n      type: System.String\n      description: \"\\n<p>The local name of the element.</p>\\n\"\n    - id: namespaceURI\n      type: System.String\n      description: \"\\n<p>The namespace URI of the element.</p>\\n\"\n    return:\n      type: System.Decimal\n      description: \"\\n<p>The element content as a <xref href=\\\"System.Decimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is not positioned on an element.</p>\\n\"\n  - type: System.Xml.XmlException\n    commentId: T:System.Xml.XmlException\n    description: \"\\n<p>The current element contains child elements.</p>\\n<p>-or-</p>\\n<p>The element content cannot be converted to a <xref href=\\\"System.Decimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The method is called with <strong>null</strong> arguments.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The specified local name and namespace URI do not match that of the current element being read.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XmlReader.ReadElementContentAsDecimal(String, String)\n- uid: System.Xml.XmlReader.ReadElementContentAsDouble\n  commentId: M:System.Xml.XmlReader.ReadElementContentAsDouble\n  id: ReadElementContentAsDouble\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: ReadElementContentAsDouble()\n  fullName: System.Xml.XmlReader.ReadElementContentAsDouble()\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadElementContentAsDouble\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 318\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Reads the current element and returns the contents as a double-precision floating-point number.</p>\\n\"\n  syntax:\n    content: public virtual double ReadElementContentAsDouble()\n    content.vb: Public Overridable Function ReadElementContentAsDouble As Double\n    return:\n      type: System.Double\n      description: \"\\n<p>The element content as a double-precision floating-point number.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is not positioned on an element.</p>\\n\"\n  - type: System.Xml.XmlException\n    commentId: T:System.Xml.XmlException\n    description: \"\\n<p>The current element contains child elements.</p>\\n<p>-or-</p>\\n<p>The element content cannot be converted to a double-precision floating-point number.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The method is called with <strong>null</strong> arguments.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XmlReader.ReadElementContentAsDouble()\n- uid: System.Xml.XmlReader.ReadElementContentAsDouble(System.String,System.String)\n  commentId: M:System.Xml.XmlReader.ReadElementContentAsDouble(System.String,System.String)\n  id: ReadElementContentAsDouble(System.String,System.String)\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: ReadElementContentAsDouble(String, String)\n  fullName: System.Xml.XmlReader.ReadElementContentAsDouble(System.String, System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadElementContentAsDouble\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 319\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a double-precision floating-point number.</p>\\n\"\n  syntax:\n    content: public virtual double ReadElementContentAsDouble(string localName, string namespaceURI)\n    content.vb: Public Overridable Function ReadElementContentAsDouble(localName As String, namespaceURI As String) As Double\n    parameters:\n    - id: localName\n      type: System.String\n      description: \"\\n<p>The local name of the element.</p>\\n\"\n    - id: namespaceURI\n      type: System.String\n      description: \"\\n<p>The namespace URI of the element.</p>\\n\"\n    return:\n      type: System.Double\n      description: \"\\n<p>The element content as a double-precision floating-point number.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is not positioned on an element.</p>\\n\"\n  - type: System.Xml.XmlException\n    commentId: T:System.Xml.XmlException\n    description: \"\\n<p>The current element contains child elements.</p>\\n<p>-or-</p>\\n<p>The element content cannot be converted to the requested type.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The method is called with <strong>null</strong> arguments.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The specified local name and namespace URI do not match that of the current element being read.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XmlReader.ReadElementContentAsDouble(String, String)\n- uid: System.Xml.XmlReader.ReadElementContentAsFloat\n  commentId: M:System.Xml.XmlReader.ReadElementContentAsFloat\n  id: ReadElementContentAsFloat\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: ReadElementContentAsFloat()\n  fullName: System.Xml.XmlReader.ReadElementContentAsFloat()\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadElementContentAsFloat\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 320\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Reads the current element and returns the contents as single-precision floating-point number.</p>\\n\"\n  syntax:\n    content: public virtual float ReadElementContentAsFloat()\n    content.vb: Public Overridable Function ReadElementContentAsFloat As Single\n    return:\n      type: System.Single\n      description: \"\\n<p>The element content as a single-precision floating point number.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is not positioned on an element.</p>\\n\"\n  - type: System.Xml.XmlException\n    commentId: T:System.Xml.XmlException\n    description: \"\\n<p>The current element contains child elements.</p>\\n<p>-or-</p>\\n<p>The element content cannot be converted to a single-precision floating-point number.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The method is called with <strong>null</strong> arguments.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XmlReader.ReadElementContentAsFloat()\n- uid: System.Xml.XmlReader.ReadElementContentAsFloat(System.String,System.String)\n  commentId: M:System.Xml.XmlReader.ReadElementContentAsFloat(System.String,System.String)\n  id: ReadElementContentAsFloat(System.String,System.String)\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: ReadElementContentAsFloat(String, String)\n  fullName: System.Xml.XmlReader.ReadElementContentAsFloat(System.String, System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadElementContentAsFloat\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 321\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a single-precision floating-point number.</p>\\n\"\n  syntax:\n    content: public virtual float ReadElementContentAsFloat(string localName, string namespaceURI)\n    content.vb: Public Overridable Function ReadElementContentAsFloat(localName As String, namespaceURI As String) As Single\n    parameters:\n    - id: localName\n      type: System.String\n      description: \"\\n<p>The local name of the element.</p>\\n\"\n    - id: namespaceURI\n      type: System.String\n      description: \"\\n<p>The namespace URI of the element.</p>\\n\"\n    return:\n      type: System.Single\n      description: \"\\n<p>The element content as a single-precision floating point number.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is not positioned on an element.</p>\\n\"\n  - type: System.Xml.XmlException\n    commentId: T:System.Xml.XmlException\n    description: \"\\n<p>The current element contains child elements.</p>\\n<p>-or-</p>\\n<p>The element content cannot be converted to a single-precision floating-point number.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The method is called with <strong>null</strong> arguments.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The specified local name and namespace URI do not match that of the current element being read.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XmlReader.ReadElementContentAsFloat(String, String)\n- uid: System.Xml.XmlReader.ReadElementContentAsInt\n  commentId: M:System.Xml.XmlReader.ReadElementContentAsInt\n  id: ReadElementContentAsInt\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: ReadElementContentAsInt()\n  fullName: System.Xml.XmlReader.ReadElementContentAsInt()\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadElementContentAsInt\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 322\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Reads the current element and returns the contents as a 32-bit signed integer.</p>\\n\"\n  syntax:\n    content: public virtual int ReadElementContentAsInt()\n    content.vb: Public Overridable Function ReadElementContentAsInt As Integer\n    return:\n      type: System.Int32\n      description: \"\\n<p>The element content as a 32-bit signed integer.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is not positioned on an element.</p>\\n\"\n  - type: System.Xml.XmlException\n    commentId: T:System.Xml.XmlException\n    description: \"\\n<p>The current element contains child elements.</p>\\n<p>-or-</p>\\n<p>The element content cannot be converted to a 32-bit signed integer.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The method is called with <strong>null</strong> arguments.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XmlReader.ReadElementContentAsInt()\n- uid: System.Xml.XmlReader.ReadElementContentAsInt(System.String,System.String)\n  commentId: M:System.Xml.XmlReader.ReadElementContentAsInt(System.String,System.String)\n  id: ReadElementContentAsInt(System.String,System.String)\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: ReadElementContentAsInt(String, String)\n  fullName: System.Xml.XmlReader.ReadElementContentAsInt(System.String, System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadElementContentAsInt\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 323\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a 32-bit signed integer.</p>\\n\"\n  syntax:\n    content: public virtual int ReadElementContentAsInt(string localName, string namespaceURI)\n    content.vb: Public Overridable Function ReadElementContentAsInt(localName As String, namespaceURI As String) As Integer\n    parameters:\n    - id: localName\n      type: System.String\n      description: \"\\n<p>The local name of the element.</p>\\n\"\n    - id: namespaceURI\n      type: System.String\n      description: \"\\n<p>The namespace URI of the element.</p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>The element content as a 32-bit signed integer.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is not positioned on an element.</p>\\n\"\n  - type: System.Xml.XmlException\n    commentId: T:System.Xml.XmlException\n    description: \"\\n<p>The current element contains child elements.</p>\\n<p>-or-</p>\\n<p>The element content cannot be converted to a 32-bit signed integer.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The method is called with <strong>null</strong> arguments.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The specified local name and namespace URI do not match that of the current element being read.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XmlReader.ReadElementContentAsInt(String, String)\n- uid: System.Xml.XmlReader.ReadElementContentAsLong\n  commentId: M:System.Xml.XmlReader.ReadElementContentAsLong\n  id: ReadElementContentAsLong\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: ReadElementContentAsLong()\n  fullName: System.Xml.XmlReader.ReadElementContentAsLong()\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadElementContentAsLong\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 324\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Reads the current element and returns the contents as a 64-bit signed integer.</p>\\n\"\n  syntax:\n    content: public virtual long ReadElementContentAsLong()\n    content.vb: Public Overridable Function ReadElementContentAsLong As Long\n    return:\n      type: System.Int64\n      description: \"\\n<p>The element content as a 64-bit signed integer.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is not positioned on an element.</p>\\n\"\n  - type: System.Xml.XmlException\n    commentId: T:System.Xml.XmlException\n    description: \"\\n<p>The current element contains child elements.</p>\\n<p>-or-</p>\\n<p>The element content cannot be converted to a 64-bit signed integer.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The method is called with <strong>null</strong> arguments.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XmlReader.ReadElementContentAsLong()\n- uid: System.Xml.XmlReader.ReadElementContentAsLong(System.String,System.String)\n  commentId: M:System.Xml.XmlReader.ReadElementContentAsLong(System.String,System.String)\n  id: ReadElementContentAsLong(System.String,System.String)\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: ReadElementContentAsLong(String, String)\n  fullName: System.Xml.XmlReader.ReadElementContentAsLong(System.String, System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadElementContentAsLong\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 325\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a 64-bit signed integer.</p>\\n\"\n  syntax:\n    content: public virtual long ReadElementContentAsLong(string localName, string namespaceURI)\n    content.vb: Public Overridable Function ReadElementContentAsLong(localName As String, namespaceURI As String) As Long\n    parameters:\n    - id: localName\n      type: System.String\n      description: \"\\n<p>The local name of the element.</p>\\n\"\n    - id: namespaceURI\n      type: System.String\n      description: \"\\n<p>The namespace URI of the element.</p>\\n\"\n    return:\n      type: System.Int64\n      description: \"\\n<p>The element content as a 64-bit signed integer.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is not positioned on an element.</p>\\n\"\n  - type: System.Xml.XmlException\n    commentId: T:System.Xml.XmlException\n    description: \"\\n<p>The current element contains child elements.</p>\\n<p>-or-</p>\\n<p>The element content cannot be converted to a 64-bit signed integer.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The method is called with <strong>null</strong> arguments.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The specified local name and namespace URI do not match that of the current element being read.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XmlReader.ReadElementContentAsLong(String, String)\n- uid: System.Xml.XmlReader.ReadElementContentAsObject\n  commentId: M:System.Xml.XmlReader.ReadElementContentAsObject\n  id: ReadElementContentAsObject\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: ReadElementContentAsObject()\n  fullName: System.Xml.XmlReader.ReadElementContentAsObject()\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadElementContentAsObject\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 326\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Reads the current element and returns the contents as an <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public virtual object ReadElementContentAsObject()\n    content.vb: Public Overridable Function ReadElementContentAsObject As Object\n    return:\n      type: System.Object\n      description: \"\\n<p>A boxed common language runtime (CLR) object of the most appropriate type. The <xref href=\\\"System.Xml.XmlReader.ValueType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property determines the appropriate CLR type. If the content is typed as a list type, this method returns an array of boxed objects of the appropriate type.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is not positioned on an element.</p>\\n\"\n  - type: System.Xml.XmlException\n    commentId: T:System.Xml.XmlException\n    description: \"\\n<p>The current element contains child elements.</p>\\n<p>-or-</p>\\n<p>The element content cannot be converted to the requested type</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The method is called with <strong>null</strong> arguments.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XmlReader.ReadElementContentAsObject()\n- uid: System.Xml.XmlReader.ReadElementContentAsObject(System.String,System.String)\n  commentId: M:System.Xml.XmlReader.ReadElementContentAsObject(System.String,System.String)\n  id: ReadElementContentAsObject(System.String,System.String)\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: ReadElementContentAsObject(String, String)\n  fullName: System.Xml.XmlReader.ReadElementContentAsObject(System.String, System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadElementContentAsObject\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 327\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as an <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public virtual object ReadElementContentAsObject(string localName, string namespaceURI)\n    content.vb: Public Overridable Function ReadElementContentAsObject(localName As String, namespaceURI As String) As Object\n    parameters:\n    - id: localName\n      type: System.String\n      description: \"\\n<p>The local name of the element.</p>\\n\"\n    - id: namespaceURI\n      type: System.String\n      description: \"\\n<p>The namespace URI of the element.</p>\\n\"\n    return:\n      type: System.Object\n      description: \"\\n<p>A boxed common language runtime (CLR) object of the most appropriate type. The <xref href=\\\"System.Xml.XmlReader.ValueType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property determines the appropriate CLR type. If the content is typed as a list type, this method returns an array of boxed objects of the appropriate type.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is not positioned on an element.</p>\\n\"\n  - type: System.Xml.XmlException\n    commentId: T:System.Xml.XmlException\n    description: \"\\n<p>The current element contains child elements.</p>\\n<p>-or-</p>\\n<p>The element content cannot be converted to the requested type.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The method is called with <strong>null</strong> arguments.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The specified local name and namespace URI do not match that of the current element being read.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XmlReader.ReadElementContentAsObject(String, String)\n- uid: System.Xml.XmlReader.ReadElementContentAsObjectAsync\n  commentId: M:System.Xml.XmlReader.ReadElementContentAsObjectAsync\n  id: ReadElementContentAsObjectAsync\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: ReadElementContentAsObjectAsync()\n  fullName: System.Xml.XmlReader.ReadElementContentAsObjectAsync()\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadElementContentAsObjectAsync\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 328\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Asynchronously reads the current element and returns the contents as an <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public virtual Task<object> ReadElementContentAsObjectAsync()\n    content.vb: Public Overridable Function ReadElementContentAsObjectAsync As Task(Of Object)\n    return:\n      type: System.Threading.Tasks.Task{System.Object}\n      description: \"\\n<p>A boxed common language runtime (CLR) object of the most appropriate type. The <xref href=\\\"System.Xml.XmlReader.ValueType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property determines the appropriate CLR type. If the content is typed as a list type, this method returns an array of boxed objects of the appropriate type.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> asynchronous method was called without setting the <xref href=\\\"System.Xml.XmlReaderSettings.Async\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> flag to <strong>true</strong>. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “Set XmlReaderSettings.Async to true if you want to use Async Methods.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XmlReader.ReadElementContentAsObjectAsync()\n- uid: System.Xml.XmlReader.ReadElementContentAsString\n  commentId: M:System.Xml.XmlReader.ReadElementContentAsString\n  id: ReadElementContentAsString\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: ReadElementContentAsString()\n  fullName: System.Xml.XmlReader.ReadElementContentAsString()\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadElementContentAsString\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 329\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Reads the current element and returns the contents as a <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public virtual string ReadElementContentAsString()\n    content.vb: Public Overridable Function ReadElementContentAsString As String\n    return:\n      type: System.String\n      description: \"\\n<p>The element content as a <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is not positioned on an element.</p>\\n\"\n  - type: System.Xml.XmlException\n    commentId: T:System.Xml.XmlException\n    description: \"\\n<p>The current element contains child elements.</p>\\n<p>-or-</p>\\n<p>The element content cannot be converted to a <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The method is called with <strong>null</strong> arguments.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XmlReader.ReadElementContentAsString()\n- uid: System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)\n  commentId: M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)\n  id: ReadElementContentAsString(System.String,System.String)\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: ReadElementContentAsString(String, String)\n  fullName: System.Xml.XmlReader.ReadElementContentAsString(System.String, System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadElementContentAsString\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 330\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public virtual string ReadElementContentAsString(string localName, string namespaceURI)\n    content.vb: Public Overridable Function ReadElementContentAsString(localName As String, namespaceURI As String) As String\n    parameters:\n    - id: localName\n      type: System.String\n      description: \"\\n<p>The local name of the element.</p>\\n\"\n    - id: namespaceURI\n      type: System.String\n      description: \"\\n<p>The namespace URI of the element.</p>\\n\"\n    return:\n      type: System.String\n      description: \"\\n<p>The element content as a <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is not positioned on an element.</p>\\n\"\n  - type: System.Xml.XmlException\n    commentId: T:System.Xml.XmlException\n    description: \"\\n<p>The current element contains child elements.</p>\\n<p>-or-</p>\\n<p>The element content cannot be converted to a <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The method is called with <strong>null</strong> arguments.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The specified local name and namespace URI do not match that of the current element being read.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XmlReader.ReadElementContentAsString(String, String)\n- uid: System.Xml.XmlReader.ReadElementContentAsStringAsync\n  commentId: M:System.Xml.XmlReader.ReadElementContentAsStringAsync\n  id: ReadElementContentAsStringAsync\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: ReadElementContentAsStringAsync()\n  fullName: System.Xml.XmlReader.ReadElementContentAsStringAsync()\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadElementContentAsStringAsync\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 331\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Asynchronously reads the current element and returns the contents as a <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public virtual Task<string> ReadElementContentAsStringAsync()\n    content.vb: Public Overridable Function ReadElementContentAsStringAsync As Task(Of String)\n    return:\n      type: System.Threading.Tasks.Task{System.String}\n      description: \"\\n<p>The element content as a <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> asynchronous method was called without setting the <xref href=\\\"System.Xml.XmlReaderSettings.Async\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> flag to <strong>true</strong>. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “Set XmlReaderSettings.Async to true if you want to use Async Methods.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XmlReader.ReadElementContentAsStringAsync()\n- uid: System.Xml.XmlReader.ReadEndElement\n  commentId: M:System.Xml.XmlReader.ReadEndElement\n  id: ReadEndElement\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: ReadEndElement()\n  fullName: System.Xml.XmlReader.ReadEndElement()\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadEndElement\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 332\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Checks that the current content node is an end tag and advances the reader to the next node.</p>\\n\"\n  syntax:\n    content: public virtual void ReadEndElement()\n    content.vb: Public Overridable Sub ReadEndElement\n  exceptions:\n  - type: System.Xml.XmlException\n    commentId: T:System.Xml.XmlException\n    description: \"\\n<p>The current node is not an end tag or if incorrect XML is encountered in the input stream.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  seealso:\n  - type: System.Xml.XmlReader.ReadStartElement\n    commentId: M:System.Xml.XmlReader.ReadStartElement\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XmlReader.ReadEndElement()\n- uid: System.Xml.XmlReader.ReadInnerXml\n  commentId: M:System.Xml.XmlReader.ReadInnerXml\n  id: ReadInnerXml\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: ReadInnerXml()\n  fullName: System.Xml.XmlReader.ReadInnerXml()\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadInnerXml\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 333\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>When overridden in a derived class, reads all the content, including markup, as a string.</p>\\n\"\n  syntax:\n    content: public virtual string ReadInnerXml()\n    content.vb: Public Overridable Function ReadInnerXml As String\n    return:\n      type: System.String\n      description: \"\\n<p>All the XML content, including markup, in the current node. If the current node has no children, an empty string is returned.</p>\\n<p>If the current node is neither an element nor attribute, an empty string is returned.</p>\\n\"\n  exceptions:\n  - type: System.Xml.XmlException\n    commentId: T:System.Xml.XmlException\n    description: \"\\n<p>The XML was not well-formed, or an error occurred while parsing the XML.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XmlReader.ReadInnerXml()\n- uid: System.Xml.XmlReader.ReadInnerXmlAsync\n  commentId: M:System.Xml.XmlReader.ReadInnerXmlAsync\n  id: ReadInnerXmlAsync\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: ReadInnerXmlAsync()\n  fullName: System.Xml.XmlReader.ReadInnerXmlAsync()\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadInnerXmlAsync\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 334\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Asynchronously reads all the content, including markup, as a string.</p>\\n\"\n  syntax:\n    content: public virtual Task<string> ReadInnerXmlAsync()\n    content.vb: Public Overridable Function ReadInnerXmlAsync As Task(Of String)\n    return:\n      type: System.Threading.Tasks.Task{System.String}\n      description: \"\\n<p>All the XML content, including markup, in the current node. If the current node has no children, an empty string is returned.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> asynchronous method was called without setting the <xref href=\\\"System.Xml.XmlReaderSettings.Async\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> flag to <strong>true</strong>. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “Set XmlReaderSettings.Async to true if you want to use Async Methods.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XmlReader.ReadInnerXmlAsync()\n- uid: System.Xml.XmlReader.ReadOuterXml\n  commentId: M:System.Xml.XmlReader.ReadOuterXml\n  id: ReadOuterXml\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: ReadOuterXml()\n  fullName: System.Xml.XmlReader.ReadOuterXml()\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadOuterXml\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 335\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>When overridden in a derived class, reads the content, including markup, representing this node and all its children.</p>\\n\"\n  syntax:\n    content: public virtual string ReadOuterXml()\n    content.vb: Public Overridable Function ReadOuterXml As String\n    return:\n      type: System.String\n      description: \"\\n<p>If the reader is positioned on an element or an attribute node, this method returns all the XML content, including markup, of the current node and all its children; otherwise, it returns an empty string.</p>\\n\"\n  exceptions:\n  - type: System.Xml.XmlException\n    commentId: T:System.Xml.XmlException\n    description: \"\\n<p>The XML was not well-formed, or an error occurred while parsing the XML.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XmlReader.ReadOuterXml()\n- uid: System.Xml.XmlReader.ReadOuterXmlAsync\n  commentId: M:System.Xml.XmlReader.ReadOuterXmlAsync\n  id: ReadOuterXmlAsync\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: ReadOuterXmlAsync()\n  fullName: System.Xml.XmlReader.ReadOuterXmlAsync()\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadOuterXmlAsync\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 336\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Asynchronously reads the content, including markup, representing this node and all its children.</p>\\n\"\n  syntax:\n    content: public virtual Task<string> ReadOuterXmlAsync()\n    content.vb: Public Overridable Function ReadOuterXmlAsync As Task(Of String)\n    return:\n      type: System.Threading.Tasks.Task{System.String}\n      description: \"\\n<p>If the reader is positioned on an element or an attribute node, this method returns all the XML content, including markup, of the current node and all its children; otherwise, it returns an empty string.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> asynchronous method was called without setting the <xref href=\\\"System.Xml.XmlReaderSettings.Async\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> flag to <strong>true</strong>. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “Set XmlReaderSettings.Async to true if you want to use Async Methods.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XmlReader.ReadOuterXmlAsync()\n- uid: System.Xml.XmlReader.ReadStartElement\n  commentId: M:System.Xml.XmlReader.ReadStartElement\n  id: ReadStartElement\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: ReadStartElement()\n  fullName: System.Xml.XmlReader.ReadStartElement()\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadStartElement\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 337\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Checks that the current node is an element and advances the reader to the next node.</p>\\n\"\n  syntax:\n    content: public virtual void ReadStartElement()\n    content.vb: Public Overridable Sub ReadStartElement\n  exceptions:\n  - type: System.Xml.XmlException\n    commentId: T:System.Xml.XmlException\n    description: \"\\n<p>Incorrect XML was encountered in the input stream.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  seealso:\n  - type: System.Xml.XmlReader.ReadEndElement\n    commentId: M:System.Xml.XmlReader.ReadEndElement\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XmlReader.ReadStartElement()\n- uid: System.Xml.XmlReader.ReadStartElement(System.String)\n  commentId: M:System.Xml.XmlReader.ReadStartElement(System.String)\n  id: ReadStartElement(System.String)\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: ReadStartElement(String)\n  fullName: System.Xml.XmlReader.ReadStartElement(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadStartElement\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 338\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Checks that the current content node is an element with the given <xref href=\\\"System.Xml.XmlReader.Name\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and advances the reader to the next node.</p>\\n\"\n  syntax:\n    content: public virtual void ReadStartElement(string name)\n    content.vb: Public Overridable Sub ReadStartElement(name As String)\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The qualified name of the element.</p>\\n\"\n  exceptions:\n  - type: System.Xml.XmlException\n    commentId: T:System.Xml.XmlException\n    description: \"\\n<p>Incorrect XML was encountered in the input stream. </p>\\n<p>-or- </p>\\n<p>The <xref href=\\\"System.Xml.XmlReader.Name\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the element does not match the given <em>name</em>.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  seealso:\n  - type: System.Xml.XmlReader.ReadEndElement\n    commentId: M:System.Xml.XmlReader.ReadEndElement\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XmlReader.ReadStartElement(String)\n- uid: System.Xml.XmlReader.ReadStartElement(System.String,System.String)\n  commentId: M:System.Xml.XmlReader.ReadStartElement(System.String,System.String)\n  id: ReadStartElement(System.String,System.String)\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: ReadStartElement(String, String)\n  fullName: System.Xml.XmlReader.ReadStartElement(System.String, System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadStartElement\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 339\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Checks that the current content node is an element with the given <xref href=\\\"System.Xml.XmlReader.LocalName\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and <xref href=\\\"System.Xml.XmlReader.NamespaceURI\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and advances the reader to the next node.</p>\\n\"\n  syntax:\n    content: public virtual void ReadStartElement(string localname, string ns)\n    content.vb: Public Overridable Sub ReadStartElement(localname As String, ns As String)\n    parameters:\n    - id: localname\n      type: System.String\n      description: \"\\n<p>The local name of the element.</p>\\n\"\n    - id: ns\n      type: System.String\n      description: \"\\n<p>The namespace URI of the element.</p>\\n\"\n  exceptions:\n  - type: System.Xml.XmlException\n    commentId: T:System.Xml.XmlException\n    description: \"\\n<p>Incorrect XML was encountered in the input stream.</p>\\n<p>-or-</p>\\n<p>The <xref href=\\\"System.Xml.XmlReader.LocalName\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and <xref href=\\\"System.Xml.XmlReader.NamespaceURI\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> properties of the element found do not match the given arguments.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  seealso:\n  - type: System.Xml.XmlReader.ReadEndElement\n    commentId: M:System.Xml.XmlReader.ReadEndElement\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XmlReader.ReadStartElement(String, String)\n- uid: System.Xml.XmlReader.ReadSubtree\n  commentId: M:System.Xml.XmlReader.ReadSubtree\n  id: ReadSubtree\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: ReadSubtree()\n  fullName: System.Xml.XmlReader.ReadSubtree()\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadSubtree\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 340\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Returns a new <strong>XmlReader</strong> instance that can be used to read the current node, and all its descendants.</p>\\n\"\n  syntax:\n    content: public virtual XmlReader ReadSubtree()\n    content.vb: Public Overridable Function ReadSubtree As XmlReader\n    return:\n      type: System.Xml.XmlReader\n      description: \"\\n<p>A new XML reader instance set to <xref href=\\\"System.Xml.ReadState.Initial\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. Calling the <xref href=\\\"System.Xml.XmlReader.Read\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method positions the new reader on the node that was current before the call to the <xref href=\\\"System.Xml.XmlReader.ReadSubtree\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The XML reader isn't positioned on an element when this method is called.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XmlReader.ReadSubtree()\n- uid: System.Xml.XmlReader.ReadToDescendant(System.String)\n  commentId: M:System.Xml.XmlReader.ReadToDescendant(System.String)\n  id: ReadToDescendant(System.String)\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: ReadToDescendant(String)\n  fullName: System.Xml.XmlReader.ReadToDescendant(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadToDescendant\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 341\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Advances the <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to the next descendant element with the specified qualified name.</p>\\n\"\n  syntax:\n    content: public virtual bool ReadToDescendant(string name)\n    content.vb: Public Overridable Function ReadToDescendant(name As String) As Boolean\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The qualified name of the element you wish to move to.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if a matching descendant element is found; otherwise <strong>false</strong>. If a matching child element is not found, the <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is positioned on the end tag (<xref href=\\\"System.Xml.XmlReader.NodeType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is <strong>XmlNodeType.EndElement</strong>) of the element.</p>\\n<p>If the <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is not positioned on an element when <xref href=\\\"System.Xml.XmlReader.ReadToDescendant(System.String)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> was called, this method returns <strong>false</strong> and the position of the <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is not changed.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The parameter is an empty string.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XmlReader.ReadToDescendant(String)\n- uid: System.Xml.XmlReader.ReadToDescendant(System.String,System.String)\n  commentId: M:System.Xml.XmlReader.ReadToDescendant(System.String,System.String)\n  id: ReadToDescendant(System.String,System.String)\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: ReadToDescendant(String, String)\n  fullName: System.Xml.XmlReader.ReadToDescendant(System.String, System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadToDescendant\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 342\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Advances the <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to the next descendant element with the specified local name and namespace URI.</p>\\n\"\n  syntax:\n    content: public virtual bool ReadToDescendant(string localName, string namespaceURI)\n    content.vb: Public Overridable Function ReadToDescendant(localName As String, namespaceURI As String) As Boolean\n    parameters:\n    - id: localName\n      type: System.String\n      description: \"\\n<p>The local name of the element you wish to move to.</p>\\n\"\n    - id: namespaceURI\n      type: System.String\n      description: \"\\n<p>The namespace URI of the element you wish to move to.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if a matching descendant element is found; otherwise <strong>false</strong>. If a matching child element is not found, the <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is positioned on the end tag (<xref href=\\\"System.Xml.XmlReader.NodeType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is <strong>XmlNodeType.EndElement</strong>) of the element.</p>\\n<p>If the <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is not positioned on an element when <xref href=\\\"System.Xml.XmlReader.ReadToDescendant(System.String,System.String)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> was called, this method returns <strong>false</strong> and the position of the <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is not changed.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>Both parameter values are <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XmlReader.ReadToDescendant(String, String)\n- uid: System.Xml.XmlReader.ReadToFollowing(System.String)\n  commentId: M:System.Xml.XmlReader.ReadToFollowing(System.String)\n  id: ReadToFollowing(System.String)\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: ReadToFollowing(String)\n  fullName: System.Xml.XmlReader.ReadToFollowing(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadToFollowing\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 343\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Reads until an element with the specified qualified name is found.</p>\\n\"\n  syntax:\n    content: public virtual bool ReadToFollowing(string name)\n    content.vb: Public Overridable Function ReadToFollowing(name As String) As Boolean\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The qualified name of the element.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if a matching element is found; otherwise <strong>false</strong> and the <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is in an end of file state.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The parameter is an empty string.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XmlReader.ReadToFollowing(String)\n- uid: System.Xml.XmlReader.ReadToFollowing(System.String,System.String)\n  commentId: M:System.Xml.XmlReader.ReadToFollowing(System.String,System.String)\n  id: ReadToFollowing(System.String,System.String)\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: ReadToFollowing(String, String)\n  fullName: System.Xml.XmlReader.ReadToFollowing(System.String, System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadToFollowing\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 344\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Reads until an element with the specified local name and namespace URI is found.</p>\\n\"\n  syntax:\n    content: public virtual bool ReadToFollowing(string localName, string namespaceURI)\n    content.vb: Public Overridable Function ReadToFollowing(localName As String, namespaceURI As String) As Boolean\n    parameters:\n    - id: localName\n      type: System.String\n      description: \"\\n<p>The local name of the element.</p>\\n\"\n    - id: namespaceURI\n      type: System.String\n      description: \"\\n<p>The namespace URI of the element.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if a matching element is found; otherwise <strong>false</strong> and the <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is in an end of file state.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>Both parameter values are <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XmlReader.ReadToFollowing(String, String)\n- uid: System.Xml.XmlReader.ReadToNextSibling(System.String)\n  commentId: M:System.Xml.XmlReader.ReadToNextSibling(System.String)\n  id: ReadToNextSibling(System.String)\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: ReadToNextSibling(String)\n  fullName: System.Xml.XmlReader.ReadToNextSibling(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadToNextSibling\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 345\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Advances the <strong>XmlReader</strong> to the next sibling element with the specified qualified name.</p>\\n\"\n  syntax:\n    content: public virtual bool ReadToNextSibling(string name)\n    content.vb: Public Overridable Function ReadToNextSibling(name As String) As Boolean\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The qualified name of the sibling element you wish to move to.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if a matching sibling element is found; otherwise <strong>false</strong>. If a matching sibling element is not found, the <strong>XmlReader</strong> is positioned on the end tag (<xref href=\\\"System.Xml.XmlReader.NodeType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is <strong>XmlNodeType.EndElement</strong>) of the parent element.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The parameter is an empty string.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XmlReader.ReadToNextSibling(String)\n- uid: System.Xml.XmlReader.ReadToNextSibling(System.String,System.String)\n  commentId: M:System.Xml.XmlReader.ReadToNextSibling(System.String,System.String)\n  id: ReadToNextSibling(System.String,System.String)\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: ReadToNextSibling(String, String)\n  fullName: System.Xml.XmlReader.ReadToNextSibling(System.String, System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadToNextSibling\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 346\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Advances the <strong>XmlReader</strong> to the next sibling element with the specified local name and namespace URI.</p>\\n\"\n  syntax:\n    content: public virtual bool ReadToNextSibling(string localName, string namespaceURI)\n    content.vb: Public Overridable Function ReadToNextSibling(localName As String, namespaceURI As String) As Boolean\n    parameters:\n    - id: localName\n      type: System.String\n      description: \"\\n<p>The local name of the sibling element you wish to move to.</p>\\n\"\n    - id: namespaceURI\n      type: System.String\n      description: \"\\n<p>The namespace URI of the sibling element you wish to move to.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if a matching sibling element is found; otherwise, <strong>false</strong>. If a matching sibling element is not found, the <strong>XmlReader</strong> is positioned on the end tag (<xref href=\\\"System.Xml.XmlReader.NodeType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is <strong>XmlNodeType.EndElement</strong>) of the parent element.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>Both parameter values are <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XmlReader.ReadToNextSibling(String, String)\n- uid: System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)\n  commentId: M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)\n  id: ReadValueChunk(System.Char[],System.Int32,System.Int32)\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: ReadValueChunk(Char[], Int32, Int32)\n  fullName: System.Xml.XmlReader.ReadValueChunk(System.Char[], System.Int32, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadValueChunk\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 347\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Reads large streams of text embedded in an XML document.</p>\\n\"\n  syntax:\n    content: public virtual int ReadValueChunk(char[] buffer, int index, int count)\n    content.vb: Public Overridable Function ReadValueChunk(buffer As Char(), index As Integer, count As Integer) As Integer\n    parameters:\n    - id: buffer\n      type: System.Char[]\n      description: \"\\n<p>The array of characters that serves as the buffer to which the text contents are written. This value cannot be <strong>null</strong>.</p>\\n\"\n    - id: index\n      type: System.Int32\n      description: \"\\n<p>The offset within the buffer where the <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> can start to copy the results.</p>\\n\"\n    - id: count\n      type: System.Int32\n      description: \"\\n<p>The maximum number of characters to copy into the buffer. The actual number of characters copied is returned from this method.</p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>The number of characters read into the buffer. The value zero is returned when there is no more text content.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The current node does not have a value (<xref href=\\\"System.Xml.XmlReader.HasValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is <strong>false</strong>).</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>buffer</em> value is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The index into the buffer, or index + count is larger than the allocated buffer size.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> implementation does not support this method.</p>\\n\"\n  - type: System.Xml.XmlException\n    commentId: T:System.Xml.XmlException\n    description: \"\\n<p>The XML data is not well-formed.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  fullName.vb: System.Xml.XmlReader.ReadValueChunk(System.Char(), System.Int32, System.Int32)\n  name.vb: ReadValueChunk(Char(), Int32, Int32)\n  nameWithType: XmlReader.ReadValueChunk(Char[], Int32, Int32)\n  nameWithType.vb: XmlReader.ReadValueChunk(Char(), Int32, Int32)\n- uid: System.Xml.XmlReader.ReadValueChunkAsync(System.Char[],System.Int32,System.Int32)\n  commentId: M:System.Xml.XmlReader.ReadValueChunkAsync(System.Char[],System.Int32,System.Int32)\n  id: ReadValueChunkAsync(System.Char[],System.Int32,System.Int32)\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: ReadValueChunkAsync(Char[], Int32, Int32)\n  fullName: System.Xml.XmlReader.ReadValueChunkAsync(System.Char[], System.Int32, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadValueChunkAsync\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 348\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Asynchronously reads large streams of text embedded in an XML document.</p>\\n\"\n  syntax:\n    content: public virtual Task<int> ReadValueChunkAsync(char[] buffer, int index, int count)\n    content.vb: Public Overridable Function ReadValueChunkAsync(buffer As Char(), index As Integer, count As Integer) As Task(Of Integer)\n    parameters:\n    - id: buffer\n      type: System.Char[]\n      description: \"\\n<p>The array of characters that serves as the buffer to which the text contents are written. This value cannot be <strong>null</strong>.</p>\\n\"\n    - id: index\n      type: System.Int32\n      description: \"\\n<p>The offset within the buffer where the <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> can start to copy the results.</p>\\n\"\n    - id: count\n      type: System.Int32\n      description: \"\\n<p>The maximum number of characters to copy into the buffer. The actual number of characters copied is returned from this method.</p>\\n\"\n    return:\n      type: System.Threading.Tasks.Task{System.Int32}\n      description: \"\\n<p>The number of characters read into the buffer. The value zero is returned when there is no more text content.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> asynchronous method was called without setting the <xref href=\\\"System.Xml.XmlReaderSettings.Async\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> flag to <strong>true</strong>. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “Set XmlReaderSettings.Async to true if you want to use Async Methods.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  fullName.vb: System.Xml.XmlReader.ReadValueChunkAsync(System.Char(), System.Int32, System.Int32)\n  name.vb: ReadValueChunkAsync(Char(), Int32, Int32)\n  nameWithType: XmlReader.ReadValueChunkAsync(Char[], Int32, Int32)\n  nameWithType.vb: XmlReader.ReadValueChunkAsync(Char(), Int32, Int32)\n- uid: System.Xml.XmlReader.ResolveEntity\n  commentId: M:System.Xml.XmlReader.ResolveEntity\n  id: ResolveEntity\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: ResolveEntity()\n  fullName: System.Xml.XmlReader.ResolveEntity()\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ResolveEntity\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 349\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>When overridden in a derived class, resolves the entity reference for <strong>EntityReference</strong> nodes.</p>\\n\"\n  syntax:\n    content: public abstract void ResolveEntity()\n    content.vb: Public MustOverride Sub ResolveEntity\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The reader is not positioned on an <strong>EntityReference</strong> node; this implementation of the reader cannot resolve entities (<xref href=\\\"System.Xml.XmlReader.CanResolveEntity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> returns <strong>false</strong>).</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  seealso:\n  - type: System.Xml.EntityHandling\n    commentId: T:System.Xml.EntityHandling\n  - type: System.Xml.XmlReader.CanResolveEntity\n    commentId: P:System.Xml.XmlReader.CanResolveEntity\n  modifiers.csharp:\n  - public\n  - abstract\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: XmlReader.ResolveEntity()\n- uid: System.Xml.XmlReader.Skip\n  commentId: M:System.Xml.XmlReader.Skip\n  id: Skip\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: Skip()\n  fullName: System.Xml.XmlReader.Skip()\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Skip\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 350\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Skips the children of the current node.</p>\\n\"\n  syntax:\n    content: public virtual void Skip()\n    content.vb: Public Overridable Sub Skip\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XmlReader.Skip()\n- uid: System.Xml.XmlReader.SkipAsync\n  commentId: M:System.Xml.XmlReader.SkipAsync\n  id: SkipAsync\n  parent: System.Xml.XmlReader\n  langs:\n  - csharp\n  - vb\n  name: SkipAsync()\n  fullName: System.Xml.XmlReader.SkipAsync()\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SkipAsync\n    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs\n    startLine: 351\n  assemblies:\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"\\n<p>Asynchronously skips the children of the current node.</p>\\n\"\n  syntax:\n    content: public virtual Task SkipAsync()\n    content.vb: Public Overridable Function SkipAsync As Task\n    return:\n      type: System.Threading.Tasks.Task\n      description: \"\\n<p>The current node.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was called before a previous asynchronous operation finished. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “An asynchronous operation is already in progress.”</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> asynchronous method was called without setting the <xref href=\\\"System.Xml.XmlReaderSettings.Async\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> flag to <strong>true</strong>. In this case, <xref href=\\\"System.InvalidOperationException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is thrown with the message “Set XmlReaderSettings.Async to true if you want to use Async Methods.”</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: XmlReader.SkipAsync()\nreferences:\n- uid: System.Xml\n  isExternal: false\n  name: System.Xml\n  fullName: System.Xml\n  commentId: N:System.Xml\n  nameWithType: System.Xml\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  fullName: System.IDisposable\n  commentId: T:System.IDisposable\n  nameWithType: IDisposable\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  commentId: T:System.Int32\n  nameWithType: Int32\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.Xml.XmlNameTable\n  parent: System.Xml\n  isExternal: false\n  name: XmlNameTable\n  fullName: System.Xml.XmlNameTable\n  commentId: T:System.Xml.XmlNameTable\n  nameWithType: XmlNameTable\n- uid: System.Xml.XmlNodeType\n  parent: System.Xml\n  isExternal: false\n  name: XmlNodeType\n  fullName: System.Xml.XmlNodeType\n  commentId: T:System.Xml.XmlNodeType\n  nameWithType: XmlNodeType\n- uid: System.Xml.ReadState\n  parent: System.Xml\n  isExternal: false\n  name: ReadState\n  fullName: System.Xml.ReadState\n  commentId: T:System.Xml.ReadState\n  nameWithType: ReadState\n- uid: System.Xml.XmlReaderSettings\n  parent: System.Xml\n  isExternal: false\n  name: XmlReaderSettings\n  fullName: System.Xml.XmlReaderSettings\n  commentId: T:System.Xml.XmlReaderSettings\n  nameWithType: XmlReaderSettings\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  fullName: System.Type\n  commentId: T:System.Type\n  nameWithType: Type\n- uid: System.Xml.XmlSpace\n  parent: System.Xml\n  isExternal: false\n  name: XmlSpace\n  fullName: System.Xml.XmlSpace\n  commentId: T:System.Xml.XmlSpace\n  nameWithType: XmlSpace\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  fullName: System.IO.Stream\n  commentId: T:System.IO.Stream\n  nameWithType: Stream\n- uid: System.Xml.XmlReader\n  parent: System.Xml\n  isExternal: false\n  name: XmlReader\n  fullName: System.Xml.XmlReader\n  commentId: T:System.Xml.XmlReader\n  nameWithType: XmlReader\n- uid: System.IO\n  isExternal: false\n  name: System.IO\n  fullName: System.IO\n  commentId: N:System.IO\n  nameWithType: System.IO\n- uid: System.Xml.XmlParserContext\n  parent: System.Xml\n  isExternal: false\n  name: XmlParserContext\n  fullName: System.Xml.XmlParserContext\n  commentId: T:System.Xml.XmlParserContext\n  nameWithType: XmlParserContext\n- uid: System.IO.TextReader\n  parent: System.IO\n  isExternal: false\n  name: TextReader\n  fullName: System.IO.TextReader\n  commentId: T:System.IO.TextReader\n  nameWithType: TextReader\n- uid: System.IDisposable.Dispose\n  parent: System.IDisposable\n  isExternal: false\n  name: Dispose()\n  fullName: System.IDisposable.Dispose()\n  spec.csharp:\n  - uid: System.IDisposable.Dispose\n    name: Dispose\n    fullName: System.IDisposable.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IDisposable.Dispose\n    name: Dispose\n    fullName: System.IDisposable.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.IDisposable.Dispose\n  nameWithType: IDisposable.Dispose()\n- uid: System.Threading.Tasks.Task{System.String}\n  parent: System.Threading.Tasks\n  definition: System.Threading.Tasks.Task`1\n  name: Task<String>\n  fullName: System.Threading.Tasks.Task<System.String>\n  fullname.vb: System.Threading.Tasks.Task(Of System.String)\n  name.vb: Task(Of String)\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: T:System.Threading.Tasks.Task{System.String}\n  nameWithType: Task<String>\n  nameWithType.vb: Task(Of String)\n- uid: System.Threading.Tasks.Task`1\n  isExternal: false\n  name: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n  fullname.vb: System.Threading.Tasks.Task(Of TResult)\n  name.vb: Task(Of TResult)\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n  - name: <\n    fullName: <\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  commentId: T:System.Threading.Tasks.Task`1\n  nameWithType: Task<TResult>\n  nameWithType.vb: Task(Of TResult)\n- uid: System.Threading.Tasks\n  isExternal: false\n  name: System.Threading.Tasks\n  fullName: System.Threading.Tasks\n  commentId: N:System.Threading.Tasks\n  nameWithType: System.Threading.Tasks\n- uid: System.Threading.Tasks.Task{System.Xml.XmlNodeType}\n  parent: System.Threading.Tasks\n  definition: System.Threading.Tasks.Task`1\n  name: Task<XmlNodeType>\n  fullName: System.Threading.Tasks.Task<System.Xml.XmlNodeType>\n  fullname.vb: System.Threading.Tasks.Task(Of System.Xml.XmlNodeType)\n  name.vb: Task(Of XmlNodeType)\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Xml.XmlNodeType\n    name: XmlNodeType\n    fullName: System.Xml.XmlNodeType\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Xml.XmlNodeType\n    name: XmlNodeType\n    fullName: System.Xml.XmlNodeType\n  - name: )\n    fullName: )\n  commentId: T:System.Threading.Tasks.Task{System.Xml.XmlNodeType}\n  nameWithType: Task<XmlNodeType>\n  nameWithType.vb: Task(Of XmlNodeType)\n- uid: System.Threading.Tasks.Task{System.Boolean}\n  parent: System.Threading.Tasks\n  definition: System.Threading.Tasks.Task`1\n  name: Task<Boolean>\n  fullName: System.Threading.Tasks.Task<System.Boolean>\n  fullname.vb: System.Threading.Tasks.Task(Of System.Boolean)\n  name.vb: Task(Of Boolean)\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: T:System.Threading.Tasks.Task{System.Boolean}\n  nameWithType: Task<Boolean>\n  nameWithType.vb: Task(Of Boolean)\n- uid: System.Xml.IXmlNamespaceResolver\n  parent: System.Xml\n  isExternal: false\n  name: IXmlNamespaceResolver\n  fullName: System.Xml.IXmlNamespaceResolver\n  commentId: T:System.Xml.IXmlNamespaceResolver\n  nameWithType: IXmlNamespaceResolver\n- uid: System.Threading.Tasks.Task{System.Object}\n  parent: System.Threading.Tasks\n  definition: System.Threading.Tasks.Task`1\n  name: Task<Object>\n  fullName: System.Threading.Tasks.Task<System.Object>\n  fullname.vb: System.Threading.Tasks.Task(Of System.Object)\n  name.vb: Task(Of Object)\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: T:System.Threading.Tasks.Task{System.Object}\n  nameWithType: Task<Object>\n  nameWithType.vb: Task(Of Object)\n- uid: System.Byte[]\n  name: Byte[]\n  fullName: System.Byte[]\n  fullname.vb: System.Byte()\n  name.vb: Byte()\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: Byte[]\n  nameWithType.vb: Byte()\n- uid: System.Threading.Tasks.Task{System.Int32}\n  parent: System.Threading.Tasks\n  definition: System.Threading.Tasks.Task`1\n  name: Task<Int32>\n  fullName: System.Threading.Tasks.Task<System.Int32>\n  fullname.vb: System.Threading.Tasks.Task(Of System.Int32)\n  name.vb: Task(Of Int32)\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: T:System.Threading.Tasks.Task{System.Int32}\n  nameWithType: Task<Int32>\n  nameWithType.vb: Task(Of Int32)\n- uid: System.DateTimeOffset\n  parent: System\n  isExternal: false\n  name: DateTimeOffset\n  fullName: System.DateTimeOffset\n  commentId: T:System.DateTimeOffset\n  nameWithType: DateTimeOffset\n- uid: System.Decimal\n  parent: System\n  isExternal: false\n  name: Decimal\n  fullName: System.Decimal\n  commentId: T:System.Decimal\n  nameWithType: Decimal\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  fullName: System.Double\n  commentId: T:System.Double\n  nameWithType: Double\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  fullName: System.Single\n  commentId: T:System.Single\n  nameWithType: Single\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  fullName: System.Int64\n  commentId: T:System.Int64\n  nameWithType: Int64\n- uid: System.Char[]\n  name: Char[]\n  fullName: System.Char[]\n  fullname.vb: System.Char()\n  name.vb: Char()\n  spec.csharp:\n  - uid: System.Char\n    name: Char\n    fullName: System.Char\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Char\n    name: Char\n    fullName: System.Char\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: Char[]\n  nameWithType.vb: Char()\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  fullName: System.Threading.Tasks.Task\n  commentId: T:System.Threading.Tasks.Task\n  nameWithType: Task\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  fullName: System.InvalidOperationException\n  nameWithType: InvalidOperationException\n  commentId: T:System.InvalidOperationException\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.Security.SecurityException\n  isExternal: false\n  name: SecurityException\n  fullName: System.Security.SecurityException\n  nameWithType: SecurityException\n  commentId: T:System.Security.SecurityException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n- uid: System.IO.FileNotFoundException\n  isExternal: false\n  name: FileNotFoundException\n  fullName: System.IO.FileNotFoundException\n  nameWithType: FileNotFoundException\n  commentId: T:System.IO.FileNotFoundException\n- uid: System.UriFormatException\n  isExternal: false\n  name: UriFormatException\n  fullName: System.UriFormatException\n  nameWithType: UriFormatException\n  commentId: T:System.UriFormatException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  commentId: T:System.ArgumentOutOfRangeException\n- uid: System.Xml.XmlException\n  isExternal: false\n  name: XmlException\n  fullName: System.Xml.XmlException\n  commentId: T:System.Xml.XmlException\n  nameWithType: XmlException\n- uid: System.FormatException\n  parent: System\n  isExternal: false\n  name: FormatException\n  fullName: System.FormatException\n  nameWithType: FormatException\n  commentId: T:System.FormatException\n- uid: System.InvalidCastException\n  isExternal: false\n  name: InvalidCastException\n  fullName: System.InvalidCastException\n  nameWithType: InvalidCastException\n  commentId: T:System.InvalidCastException\n- uid: System.OverflowException\n  isExternal: false\n  name: OverflowException\n  fullName: System.OverflowException\n  nameWithType: OverflowException\n  commentId: T:System.OverflowException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  fullName: System.NotSupportedException\n  nameWithType: NotSupportedException\n  commentId: T:System.NotSupportedException\n"}