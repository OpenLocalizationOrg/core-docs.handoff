{"nodes":[{"pos":[1525,1529],"content":"Rect","needQuote":true,"nodes":[{"content":"Rect","pos":[0,4]}]},{"pos":[3293,3329],"content":"Rect(Double, Double, Double, Double)","needQuote":true,"nodes":[{"content":"Rect(Double, Double, Double, Double)","pos":[0,36]}]},{"pos":[4607,4625],"content":"Rect(Point, Point)","needQuote":true,"nodes":[{"content":"Rect(Point, Point)","pos":[0,18]}]},{"pos":[5773,5790],"content":"Rect(Point, Size)","needQuote":true,"nodes":[{"content":"Rect(Point, Size)","pos":[0,17]}]},{"pos":[6784,6790],"content":"Bottom","needQuote":true,"nodes":[{"content":"Bottom","pos":[0,6]}]},{"pos":[7659,7664],"content":"Empty","needQuote":true,"nodes":[{"content":"Empty","pos":[0,5]}]},{"pos":[8573,8579],"content":"Height","needQuote":true,"nodes":[{"content":"Height","pos":[0,6]}]},{"pos":[9445,9452],"content":"IsEmpty","needQuote":true,"nodes":[{"content":"IsEmpty","pos":[0,7]}]},{"pos":[10323,10327],"content":"Left","needQuote":true,"nodes":[{"content":"Left","pos":[0,4]}]},{"pos":[11186,11191],"content":"Right","needQuote":true,"nodes":[{"content":"Right","pos":[0,5]}]},{"pos":[12049,12052],"content":"Top","needQuote":true,"nodes":[{"content":"Top","pos":[0,3]}]},{"pos":[12906,12911],"content":"Width","needQuote":true,"nodes":[{"content":"Width","pos":[0,5]}]},{"pos":[13754,13755],"content":"X","needQuote":true,"nodes":[{"content":"X","pos":[0,1]}]},{"pos":[14578,14579],"content":"Y","needQuote":true,"nodes":[{"content":"Y","pos":[0,1]}]},{"pos":[15501,15516],"content":"Contains(Point)","needQuote":true,"nodes":[{"content":"Contains(Point)","pos":[0,15]}]},{"pos":[16514,16528],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[17842,17854],"content":"Equals(Rect)","needQuote":true,"nodes":[{"content":"Equals(Rect)","pos":[0,12]}]},{"pos":[18807,18820],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[20061,20076],"content":"Intersect(Rect)","needQuote":true,"nodes":[{"content":"Intersect(Rect)","pos":[0,15]}]},{"pos":[21133,21153],"content":"Equality(Rect, Rect)","needQuote":true,"nodes":[{"content":"Equality(Rect, Rect)","pos":[0,20]}]},{"pos":[22416,22438],"content":"Inequality(Rect, Rect)","needQuote":true,"nodes":[{"content":"Inequality(Rect, Rect)","pos":[0,22]}]},{"pos":[23546,23556],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[24776,24801],"content":"ToString(IFormatProvider)","needQuote":true,"nodes":[{"content":"ToString(IFormatProvider)","pos":[0,25]}]},{"pos":[25864,25876],"content":"Union(Point)","needQuote":true,"nodes":[{"content":"Union(Point)","pos":[0,12]}]},{"pos":[26831,26842],"content":"Union(Rect)","needQuote":true,"nodes":[{"content":"Union(Rect)","pos":[0,11]}]},{"pos":[27911,27957],"content":"IFormattable.ToString(String, IFormatProvider)","needQuote":true,"nodes":[{"content":"IFormattable.ToString(String, IFormatProvider)","pos":[0,46]}]},{"pos":[29494,29512],"content":"Windows.Foundation","needQuote":true,"nodes":[{"content":"Windows.Foundation","pos":[0,18]}]},{"pos":[29686,29698],"content":"IFormattable","needQuote":true,"nodes":[{"content":"IFormattable","pos":[0,12]}]},{"pos":[29933,29955],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[30149,30155],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[30254,30255],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30325,30331],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[30417,30418]},{"pos":[30496,30502],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[30587,30588],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30705,30711],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[30810,30811],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30881,30887],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[30973,30974]},{"pos":[31052,31058],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[31143,31144],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31372,31403],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[31624,31639],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[31756,31757],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31827,31833],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[31919,31920]},{"pos":[31998,32004],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[32089,32090],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[32216,32231],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[32348,32349],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[32419,32425],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[32511,32512]},{"pos":[32590,32596],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[32681,32682],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[32836,32845],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[32971,32978],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[33079,33080],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[33127,33128],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[33217,33224],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[33325,33326],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[33373,33374],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[33475,33481],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[33619,33625],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[33770,33776],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[33955,33960],"content":"Point","needQuote":true,"nodes":[{"content":"Point","pos":[0,5]}]},{"pos":[34147,34151],"content":"Size","needQuote":true,"nodes":[{"content":"Size","pos":[0,4]}]},{"pos":[34336,34340],"content":"Rect","needQuote":true,"nodes":[{"content":"Rect","pos":[0,4]}]},{"pos":[34495,34502],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[34708,34722],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[34888,34894],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[34978,34979],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[35049,35055],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[35140,35141],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[35247,35253],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[35337,35338],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[35408,35414],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[35499,35500],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[35638,35647],"content":"ValueType","needQuote":true,"nodes":[{"content":"ValueType","pos":[0,9]}]},{"pos":[35838,35851],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[35998,36009],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[36103,36104],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[36151,36152],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[36248,36259],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[36353,36354],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[36401,36402],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[36532,36537],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[36714,36724],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[36862,36870],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[36958,36959],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[37006,37007],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[37100,37108],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[37196,37197],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[37244,37245],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[37377,37383],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[37546,37561],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[37842,37875],"content":"ToString(String, IFormatProvider)","needQuote":true,"nodes":[{"content":"ToString(String, IFormatProvider)","pos":[0,33]}]},{"pos":[38120,38128],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[38222,38223],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[38293,38299],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[38385,38386]},{"pos":[38473,38488],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[38570,38571],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[38705,38713],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[38807,38808],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[38878,38884],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[38970,38971]},{"pos":[39058,39073],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[39155,39156],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]}],"content":"items:\n- uid: Windows.Foundation.Rect\n  commentId: T:Windows.Foundation.Rect\n  id: Rect\n  parent: Windows.Foundation\n  children:\n  - Windows.Foundation.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)\n  - Windows.Foundation.Rect.#ctor(Windows.Foundation.Point,Windows.Foundation.Point)\n  - Windows.Foundation.Rect.#ctor(Windows.Foundation.Point,Windows.Foundation.Size)\n  - Windows.Foundation.Rect.Bottom\n  - Windows.Foundation.Rect.Contains(Windows.Foundation.Point)\n  - Windows.Foundation.Rect.Empty\n  - Windows.Foundation.Rect.Equals(System.Object)\n  - Windows.Foundation.Rect.Equals(Windows.Foundation.Rect)\n  - Windows.Foundation.Rect.GetHashCode\n  - Windows.Foundation.Rect.Height\n  - Windows.Foundation.Rect.Intersect(Windows.Foundation.Rect)\n  - Windows.Foundation.Rect.IsEmpty\n  - Windows.Foundation.Rect.Left\n  - Windows.Foundation.Rect.op_Equality(Windows.Foundation.Rect,Windows.Foundation.Rect)\n  - Windows.Foundation.Rect.op_Inequality(Windows.Foundation.Rect,Windows.Foundation.Rect)\n  - Windows.Foundation.Rect.Right\n  - Windows.Foundation.Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)\n  - Windows.Foundation.Rect.Top\n  - Windows.Foundation.Rect.ToString\n  - Windows.Foundation.Rect.ToString(System.IFormatProvider)\n  - Windows.Foundation.Rect.Union(Windows.Foundation.Point)\n  - Windows.Foundation.Rect.Union(Windows.Foundation.Rect)\n  - Windows.Foundation.Rect.Width\n  - Windows.Foundation.Rect.X\n  - Windows.Foundation.Rect.Y\n  langs:\n  - csharp\n  - vb\n  name: Rect\n  nameWithType: Rect\n  fullName: Windows.Foundation.Rect\n  type: Struct\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.Manual.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Rect\n    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.Manual.cs\n    startLine: 23\n  assemblies:\n  - System.Runtime.WindowsRuntime\n  namespace: Windows.Foundation\n  syntax:\n    content: >-\n      [SecurityCritical]\n\n      [StructLayout(LayoutKind.Sequential)]\n\n      public struct Rect : IFormattable\n    content.vb: >-\n      <SecurityCritical>\n\n      <StructLayout(LayoutKind.Sequential)>\n\n      Public Structure Rect\n          Implements IFormattable\n  implements:\n  - System.IFormattable\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n    ctor: System.Security.SecurityCriticalAttribute.#ctor\n    arguments: []\n  - type: System.Runtime.InteropServices.StructLayoutAttribute\n    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)\n    arguments:\n    - type: System.Runtime.InteropServices.LayoutKind\n      value: 0\n  modifiers.csharp:\n  - public\n  - struct\n  modifiers.vb:\n  - Public\n  - Structure\n- uid: Windows.Foundation.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)\n  commentId: M:Windows.Foundation.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)\n  id: '#ctor(System.Double,System.Double,System.Double,System.Double)'\n  parent: Windows.Foundation.Rect\n  langs:\n  - csharp\n  - vb\n  name: Rect(Double, Double, Double, Double)\n  nameWithType: Rect.Rect(Double, Double, Double, Double)\n  fullName: Windows.Foundation.Rect.Rect(System.Double, System.Double, System.Double, System.Double)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n    startLine: 156\n  assemblies:\n  - System.Runtime.WindowsRuntime\n  namespace: Windows.Foundation\n  syntax:\n    content: public Rect(double x, double y, double width, double height)\n    content.vb: Public Sub New(x As Double, y As Double, width As Double, height As Double)\n    parameters:\n    - id: x\n      type: System.Double\n    - id: y\n      type: System.Double\n    - id: width\n      type: System.Double\n    - id: height\n      type: System.Double\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n- uid: Windows.Foundation.Rect.#ctor(Windows.Foundation.Point,Windows.Foundation.Point)\n  commentId: M:Windows.Foundation.Rect.#ctor(Windows.Foundation.Point,Windows.Foundation.Point)\n  id: '#ctor(Windows.Foundation.Point,Windows.Foundation.Point)'\n  parent: Windows.Foundation.Rect\n  langs:\n  - csharp\n  - vb\n  name: Rect(Point, Point)\n  nameWithType: Rect.Rect(Point, Point)\n  fullName: Windows.Foundation.Rect.Rect(Windows.Foundation.Point, Windows.Foundation.Point)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n    startLine: 157\n  assemblies:\n  - System.Runtime.WindowsRuntime\n  namespace: Windows.Foundation\n  syntax:\n    content: public Rect(Point point1, Point point2)\n    content.vb: Public Sub New(point1 As Point, point2 As Point)\n    parameters:\n    - id: point1\n      type: Windows.Foundation.Point\n    - id: point2\n      type: Windows.Foundation.Point\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n- uid: Windows.Foundation.Rect.#ctor(Windows.Foundation.Point,Windows.Foundation.Size)\n  commentId: M:Windows.Foundation.Rect.#ctor(Windows.Foundation.Point,Windows.Foundation.Size)\n  id: '#ctor(Windows.Foundation.Point,Windows.Foundation.Size)'\n  parent: Windows.Foundation.Rect\n  langs:\n  - csharp\n  - vb\n  name: Rect(Point, Size)\n  nameWithType: Rect.Rect(Point, Size)\n  fullName: Windows.Foundation.Rect.Rect(Windows.Foundation.Point, Windows.Foundation.Size)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n    startLine: 158\n  assemblies:\n  - System.Runtime.WindowsRuntime\n  namespace: Windows.Foundation\n  syntax:\n    content: public Rect(Point location, Size size)\n    content.vb: Public Sub New(location As Point, size As Size)\n    parameters:\n    - id: location\n      type: Windows.Foundation.Point\n    - id: size\n      type: Windows.Foundation.Size\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n- uid: Windows.Foundation.Rect.Bottom\n  commentId: P:Windows.Foundation.Rect.Bottom\n  id: Bottom\n  parent: Windows.Foundation.Rect\n  langs:\n  - csharp\n  - vb\n  name: Bottom\n  nameWithType: Rect.Bottom\n  fullName: Windows.Foundation.Rect.Bottom\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Bottom\n    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n    startLine: 159\n  assemblies:\n  - System.Runtime.WindowsRuntime\n  namespace: Windows.Foundation\n  syntax:\n    content: public double Bottom { get; }\n    content.vb: Public ReadOnly Property Bottom As Double\n    parameters: []\n    return:\n      type: System.Double\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n- uid: Windows.Foundation.Rect.Empty\n  commentId: P:Windows.Foundation.Rect.Empty\n  id: Empty\n  parent: Windows.Foundation.Rect\n  langs:\n  - csharp\n  - vb\n  name: Empty\n  nameWithType: Rect.Empty\n  fullName: Windows.Foundation.Rect.Empty\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Empty\n    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n    startLine: 160\n  assemblies:\n  - System.Runtime.WindowsRuntime\n  namespace: Windows.Foundation\n  syntax:\n    content: public static Rect Empty { get; }\n    content.vb: Public Shared ReadOnly Property Empty As Rect\n    parameters: []\n    return:\n      type: Windows.Foundation.Rect\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n- uid: Windows.Foundation.Rect.Height\n  commentId: P:Windows.Foundation.Rect.Height\n  id: Height\n  parent: Windows.Foundation.Rect\n  langs:\n  - csharp\n  - vb\n  name: Height\n  nameWithType: Rect.Height\n  fullName: Windows.Foundation.Rect.Height\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Height\n    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n    startLine: 161\n  assemblies:\n  - System.Runtime.WindowsRuntime\n  namespace: Windows.Foundation\n  syntax:\n    content: public double Height { get; set; }\n    content.vb: Public Property Height As Double\n    parameters: []\n    return:\n      type: System.Double\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n- uid: Windows.Foundation.Rect.IsEmpty\n  commentId: P:Windows.Foundation.Rect.IsEmpty\n  id: IsEmpty\n  parent: Windows.Foundation.Rect\n  langs:\n  - csharp\n  - vb\n  name: IsEmpty\n  nameWithType: Rect.IsEmpty\n  fullName: Windows.Foundation.Rect.IsEmpty\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsEmpty\n    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n    startLine: 162\n  assemblies:\n  - System.Runtime.WindowsRuntime\n  namespace: Windows.Foundation\n  syntax:\n    content: public bool IsEmpty { get; }\n    content.vb: Public ReadOnly Property IsEmpty As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n- uid: Windows.Foundation.Rect.Left\n  commentId: P:Windows.Foundation.Rect.Left\n  id: Left\n  parent: Windows.Foundation.Rect\n  langs:\n  - csharp\n  - vb\n  name: Left\n  nameWithType: Rect.Left\n  fullName: Windows.Foundation.Rect.Left\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Left\n    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n    startLine: 163\n  assemblies:\n  - System.Runtime.WindowsRuntime\n  namespace: Windows.Foundation\n  syntax:\n    content: public double Left { get; }\n    content.vb: Public ReadOnly Property Left As Double\n    parameters: []\n    return:\n      type: System.Double\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n- uid: Windows.Foundation.Rect.Right\n  commentId: P:Windows.Foundation.Rect.Right\n  id: Right\n  parent: Windows.Foundation.Rect\n  langs:\n  - csharp\n  - vb\n  name: Right\n  nameWithType: Rect.Right\n  fullName: Windows.Foundation.Rect.Right\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Right\n    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n    startLine: 164\n  assemblies:\n  - System.Runtime.WindowsRuntime\n  namespace: Windows.Foundation\n  syntax:\n    content: public double Right { get; }\n    content.vb: Public ReadOnly Property Right As Double\n    parameters: []\n    return:\n      type: System.Double\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n- uid: Windows.Foundation.Rect.Top\n  commentId: P:Windows.Foundation.Rect.Top\n  id: Top\n  parent: Windows.Foundation.Rect\n  langs:\n  - csharp\n  - vb\n  name: Top\n  nameWithType: Rect.Top\n  fullName: Windows.Foundation.Rect.Top\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Top\n    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n    startLine: 165\n  assemblies:\n  - System.Runtime.WindowsRuntime\n  namespace: Windows.Foundation\n  syntax:\n    content: public double Top { get; }\n    content.vb: Public ReadOnly Property Top As Double\n    parameters: []\n    return:\n      type: System.Double\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n- uid: Windows.Foundation.Rect.Width\n  commentId: P:Windows.Foundation.Rect.Width\n  id: Width\n  parent: Windows.Foundation.Rect\n  langs:\n  - csharp\n  - vb\n  name: Width\n  nameWithType: Rect.Width\n  fullName: Windows.Foundation.Rect.Width\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Width\n    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n    startLine: 166\n  assemblies:\n  - System.Runtime.WindowsRuntime\n  namespace: Windows.Foundation\n  syntax:\n    content: public double Width { get; set; }\n    content.vb: Public Property Width As Double\n    parameters: []\n    return:\n      type: System.Double\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n- uid: Windows.Foundation.Rect.X\n  commentId: P:Windows.Foundation.Rect.X\n  id: X\n  parent: Windows.Foundation.Rect\n  langs:\n  - csharp\n  - vb\n  name: X\n  nameWithType: Rect.X\n  fullName: Windows.Foundation.Rect.X\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: X\n    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n    startLine: 167\n  assemblies:\n  - System.Runtime.WindowsRuntime\n  namespace: Windows.Foundation\n  syntax:\n    content: public double X { get; set; }\n    content.vb: Public Property X As Double\n    parameters: []\n    return:\n      type: System.Double\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n- uid: Windows.Foundation.Rect.Y\n  commentId: P:Windows.Foundation.Rect.Y\n  id: Y\n  parent: Windows.Foundation.Rect\n  langs:\n  - csharp\n  - vb\n  name: Y\n  nameWithType: Rect.Y\n  fullName: Windows.Foundation.Rect.Y\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Y\n    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n    startLine: 168\n  assemblies:\n  - System.Runtime.WindowsRuntime\n  namespace: Windows.Foundation\n  syntax:\n    content: public double Y { get; set; }\n    content.vb: Public Property Y As Double\n    parameters: []\n    return:\n      type: System.Double\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n- uid: Windows.Foundation.Rect.Contains(Windows.Foundation.Point)\n  commentId: M:Windows.Foundation.Rect.Contains(Windows.Foundation.Point)\n  id: Contains(Windows.Foundation.Point)\n  parent: Windows.Foundation.Rect\n  langs:\n  - csharp\n  - vb\n  name: Contains(Point)\n  nameWithType: Rect.Contains(Point)\n  fullName: Windows.Foundation.Rect.Contains(Windows.Foundation.Point)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Contains\n    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n    startLine: 169\n  assemblies:\n  - System.Runtime.WindowsRuntime\n  namespace: Windows.Foundation\n  syntax:\n    content: public bool Contains(Point point)\n    content.vb: Public Function Contains(point As Point) As Boolean\n    parameters:\n    - id: point\n      type: Windows.Foundation.Point\n    return:\n      type: System.Boolean\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n- uid: Windows.Foundation.Rect.Equals(System.Object)\n  commentId: M:Windows.Foundation.Rect.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: Windows.Foundation.Rect\n  langs:\n  - csharp\n  - vb\n  name: Equals(Object)\n  nameWithType: Rect.Equals(Object)\n  fullName: Windows.Foundation.Rect.Equals(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Equals\n    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n    startLine: 170\n  assemblies:\n  - System.Runtime.WindowsRuntime\n  namespace: Windows.Foundation\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public override bool Equals(object o)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Overrides Function Equals(o As Object) As Boolean\n    parameters:\n    - id: o\n      type: System.Object\n    return:\n      type: System.Boolean\n  overridden: System.ValueType.Equals(System.Object)\n  attributes:\n  - type: System.Security.SecuritySafeCriticalAttribute\n    ctor: System.Security.SecuritySafeCriticalAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n- uid: Windows.Foundation.Rect.Equals(Windows.Foundation.Rect)\n  commentId: M:Windows.Foundation.Rect.Equals(Windows.Foundation.Rect)\n  id: Equals(Windows.Foundation.Rect)\n  parent: Windows.Foundation.Rect\n  langs:\n  - csharp\n  - vb\n  name: Equals(Rect)\n  nameWithType: Rect.Equals(Rect)\n  fullName: Windows.Foundation.Rect.Equals(Windows.Foundation.Rect)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Equals\n    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n    startLine: 172\n  assemblies:\n  - System.Runtime.WindowsRuntime\n  namespace: Windows.Foundation\n  syntax:\n    content: public bool Equals(Rect value)\n    content.vb: Public Function Equals(value As Rect) As Boolean\n    parameters:\n    - id: value\n      type: Windows.Foundation.Rect\n    return:\n      type: System.Boolean\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n- uid: Windows.Foundation.Rect.GetHashCode\n  commentId: M:Windows.Foundation.Rect.GetHashCode\n  id: GetHashCode\n  parent: Windows.Foundation.Rect\n  langs:\n  - csharp\n  - vb\n  name: GetHashCode()\n  nameWithType: Rect.GetHashCode()\n  fullName: Windows.Foundation.Rect.GetHashCode()\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetHashCode\n    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n    startLine: 173\n  assemblies:\n  - System.Runtime.WindowsRuntime\n  namespace: Windows.Foundation\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public override int GetHashCode()\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Overrides Function GetHashCode As Integer\n    return:\n      type: System.Int32\n  overridden: System.ValueType.GetHashCode\n  attributes:\n  - type: System.Security.SecuritySafeCriticalAttribute\n    ctor: System.Security.SecuritySafeCriticalAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n- uid: Windows.Foundation.Rect.Intersect(Windows.Foundation.Rect)\n  commentId: M:Windows.Foundation.Rect.Intersect(Windows.Foundation.Rect)\n  id: Intersect(Windows.Foundation.Rect)\n  parent: Windows.Foundation.Rect\n  langs:\n  - csharp\n  - vb\n  name: Intersect(Rect)\n  nameWithType: Rect.Intersect(Rect)\n  fullName: Windows.Foundation.Rect.Intersect(Windows.Foundation.Rect)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Intersect\n    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n    startLine: 175\n  assemblies:\n  - System.Runtime.WindowsRuntime\n  namespace: Windows.Foundation\n  syntax:\n    content: public void Intersect(Rect rect)\n    content.vb: Public Sub Intersect(rect As Rect)\n    parameters:\n    - id: rect\n      type: Windows.Foundation.Rect\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n- uid: Windows.Foundation.Rect.op_Equality(Windows.Foundation.Rect,Windows.Foundation.Rect)\n  commentId: M:Windows.Foundation.Rect.op_Equality(Windows.Foundation.Rect,Windows.Foundation.Rect)\n  id: op_Equality(Windows.Foundation.Rect,Windows.Foundation.Rect)\n  parent: Windows.Foundation.Rect\n  langs:\n  - csharp\n  - vb\n  name: Equality(Rect, Rect)\n  nameWithType: Rect.Equality(Rect, Rect)\n  fullName: Windows.Foundation.Rect.Equality(Windows.Foundation.Rect, Windows.Foundation.Rect)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Equality\n    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n    startLine: 176\n  assemblies:\n  - System.Runtime.WindowsRuntime\n  namespace: Windows.Foundation\n  syntax:\n    content: public static bool operator ==(Rect rect1, Rect rect2)\n    content.vb: Public Shared Operator =(rect1 As Rect, rect2 As Rect) As Boolean\n    parameters:\n    - id: rect1\n      type: Windows.Foundation.Rect\n    - id: rect2\n      type: Windows.Foundation.Rect\n    return:\n      type: System.Boolean\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n- uid: Windows.Foundation.Rect.op_Inequality(Windows.Foundation.Rect,Windows.Foundation.Rect)\n  commentId: M:Windows.Foundation.Rect.op_Inequality(Windows.Foundation.Rect,Windows.Foundation.Rect)\n  id: op_Inequality(Windows.Foundation.Rect,Windows.Foundation.Rect)\n  parent: Windows.Foundation.Rect\n  langs:\n  - csharp\n  - vb\n  name: Inequality(Rect, Rect)\n  nameWithType: Rect.Inequality(Rect, Rect)\n  fullName: Windows.Foundation.Rect.Inequality(Windows.Foundation.Rect, Windows.Foundation.Rect)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Inequality\n    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n    startLine: 177\n  assemblies:\n  - System.Runtime.WindowsRuntime\n  namespace: Windows.Foundation\n  syntax:\n    content: public static bool operator !=(Rect rect1, Rect rect2)\n    content.vb: Public Shared Operator <>(rect1 As Rect, rect2 As Rect) As Boolean\n    parameters:\n    - id: rect1\n      type: Windows.Foundation.Rect\n    - id: rect2\n      type: Windows.Foundation.Rect\n    return:\n      type: System.Boolean\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n- uid: Windows.Foundation.Rect.ToString\n  commentId: M:Windows.Foundation.Rect.ToString\n  id: ToString\n  parent: Windows.Foundation.Rect\n  langs:\n  - csharp\n  - vb\n  name: ToString()\n  nameWithType: Rect.ToString()\n  fullName: Windows.Foundation.Rect.ToString()\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ToString\n    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n    startLine: 178\n  assemblies:\n  - System.Runtime.WindowsRuntime\n  namespace: Windows.Foundation\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public override string ToString()\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Overrides Function ToString As String\n    return:\n      type: System.String\n  overridden: System.ValueType.ToString\n  attributes:\n  - type: System.Security.SecuritySafeCriticalAttribute\n    ctor: System.Security.SecuritySafeCriticalAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n- uid: Windows.Foundation.Rect.ToString(System.IFormatProvider)\n  commentId: M:Windows.Foundation.Rect.ToString(System.IFormatProvider)\n  id: ToString(System.IFormatProvider)\n  parent: Windows.Foundation.Rect\n  langs:\n  - csharp\n  - vb\n  name: ToString(IFormatProvider)\n  nameWithType: Rect.ToString(IFormatProvider)\n  fullName: Windows.Foundation.Rect.ToString(System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ToString\n    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n    startLine: 180\n  assemblies:\n  - System.Runtime.WindowsRuntime\n  namespace: Windows.Foundation\n  syntax:\n    content: public string ToString(IFormatProvider provider)\n    content.vb: Public Function ToString(provider As IFormatProvider) As String\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n    return:\n      type: System.String\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n- uid: Windows.Foundation.Rect.Union(Windows.Foundation.Point)\n  commentId: M:Windows.Foundation.Rect.Union(Windows.Foundation.Point)\n  id: Union(Windows.Foundation.Point)\n  parent: Windows.Foundation.Rect\n  langs:\n  - csharp\n  - vb\n  name: Union(Point)\n  nameWithType: Rect.Union(Point)\n  fullName: Windows.Foundation.Rect.Union(Windows.Foundation.Point)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Union\n    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n    startLine: 181\n  assemblies:\n  - System.Runtime.WindowsRuntime\n  namespace: Windows.Foundation\n  syntax:\n    content: public void Union(Point point)\n    content.vb: Public Sub Union(point As Point)\n    parameters:\n    - id: point\n      type: Windows.Foundation.Point\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n- uid: Windows.Foundation.Rect.Union(Windows.Foundation.Rect)\n  commentId: M:Windows.Foundation.Rect.Union(Windows.Foundation.Rect)\n  id: Union(Windows.Foundation.Rect)\n  parent: Windows.Foundation.Rect\n  langs:\n  - csharp\n  - vb\n  name: Union(Rect)\n  nameWithType: Rect.Union(Rect)\n  fullName: Windows.Foundation.Rect.Union(Windows.Foundation.Rect)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Union\n    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs\n    startLine: 182\n  assemblies:\n  - System.Runtime.WindowsRuntime\n  namespace: Windows.Foundation\n  syntax:\n    content: public void Union(Rect rect)\n    content.vb: Public Sub Union(rect As Rect)\n    parameters:\n    - id: rect\n      type: Windows.Foundation.Rect\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n- uid: Windows.Foundation.Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)\n  commentId: M:Windows.Foundation.Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)\n  id: System#IFormattable#ToString(System.String,System.IFormatProvider)\n  isEii: true\n  parent: Windows.Foundation.Rect\n  langs:\n  - csharp\n  - vb\n  name: IFormattable.ToString(String, IFormatProvider)\n  nameWithType: Rect.IFormattable.ToString(String, IFormatProvider)\n  fullName: Windows.Foundation.Rect.System.IFormattable.ToString(System.String, System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.Manual.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.IFormattable.ToString\n    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.Manual.cs\n    startLine: 25\n  assemblies:\n  - System.Runtime.WindowsRuntime\n  namespace: Windows.Foundation\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      string IFormattable.ToString(string format, IFormatProvider provider)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Function System.IFormattable.ToString(format As String, provider As IFormatProvider) As String Implements IFormattable.ToString\n    parameters:\n    - id: format\n      type: System.String\n    - id: provider\n      type: System.IFormatProvider\n    return:\n      type: System.String\n  implements:\n  - System.IFormattable.ToString(System.String,System.IFormatProvider)\n  attributes:\n  - type: System.Security.SecuritySafeCriticalAttribute\n    ctor: System.Security.SecuritySafeCriticalAttribute.#ctor\n    arguments: []\n  nameWithType.vb: Rect.System.IFormattable.ToString(String, IFormatProvider)\n  name.vb: System.IFormattable.ToString(String, IFormatProvider)\nreferences:\n- uid: Windows.Foundation\n  commentId: N:Windows.Foundation\n  isExternal: false\n  name: Windows.Foundation\n  nameWithType: Windows.Foundation\n  fullName: Windows.Foundation\n- uid: System.IFormattable\n  commentId: T:System.IFormattable\n  parent: System\n  isExternal: false\n  name: IFormattable\n  nameWithType: IFormattable\n  fullName: System.IFormattable\n- uid: System.Object.Equals(System.Object,System.Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    nameWithType: Object.Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    nameWithType: Object.Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    nameWithType: Object.ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    nameWithType: Object.ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.GetType\n  commentId: M:System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    nameWithType: Object.GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    nameWithType: Object.GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System\n  commentId: N:System\n  isExternal: false\n  name: System\n  nameWithType: System\n  fullName: System\n- uid: System.Object\n  commentId: T:System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Double\n  commentId: T:System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: Windows.Foundation.Point\n  commentId: T:Windows.Foundation.Point\n  parent: Windows.Foundation\n  isExternal: false\n  name: Point\n  nameWithType: Point\n  fullName: Windows.Foundation.Point\n- uid: Windows.Foundation.Size\n  commentId: T:Windows.Foundation.Size\n  parent: Windows.Foundation\n  isExternal: false\n  name: Size\n  nameWithType: Size\n  fullName: Windows.Foundation.Size\n- uid: Windows.Foundation.Rect\n  commentId: T:Windows.Foundation.Rect\n  parent: Windows.Foundation\n  isExternal: false\n  name: Rect\n  nameWithType: Rect\n  fullName: Windows.Foundation.Rect\n- uid: System.Boolean\n  commentId: T:System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ValueType.Equals(System.Object)\n  commentId: M:System.ValueType.Equals(System.Object)\n  parent: System.ValueType\n  isExternal: true\n  name: Equals(Object)\n  nameWithType: ValueType.Equals(Object)\n  fullName: System.ValueType.Equals(System.Object)\n  spec.csharp:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    nameWithType: ValueType.Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    nameWithType: ValueType.Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.ValueType\n  commentId: T:System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  nameWithType: ValueType\n  fullName: System.ValueType\n- uid: System.ValueType.GetHashCode\n  commentId: M:System.ValueType.GetHashCode\n  parent: System.ValueType\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: ValueType.GetHashCode()\n  fullName: System.ValueType.GetHashCode()\n  spec.csharp:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    nameWithType: ValueType.GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    nameWithType: ValueType.GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Int32\n  commentId: T:System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ValueType.ToString\n  commentId: M:System.ValueType.ToString\n  parent: System.ValueType\n  isExternal: false\n  name: ToString()\n  nameWithType: ValueType.ToString()\n  fullName: System.ValueType.ToString()\n  spec.csharp:\n  - uid: System.ValueType.ToString\n    name: ToString\n    nameWithType: ValueType.ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.ToString\n    name: ToString\n    nameWithType: ValueType.ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.String\n  commentId: T:System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IFormatProvider\n  commentId: T:System.IFormatProvider\n  parent: System\n  isExternal: false\n  name: IFormatProvider\n  nameWithType: IFormatProvider\n  fullName: System.IFormatProvider\n- uid: System.IFormattable.ToString(System.String,System.IFormatProvider)\n  commentId: M:System.IFormattable.ToString(System.String,System.IFormatProvider)\n  parent: System.IFormattable\n  isExternal: true\n  name: ToString(String, IFormatProvider)\n  nameWithType: IFormattable.ToString(String, IFormatProvider)\n  fullName: System.IFormattable.ToString(System.String, System.IFormatProvider)\n  spec.csharp:\n  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)\n    name: ToString\n    nameWithType: IFormattable.ToString\n    fullName: System.IFormattable.ToString\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    nameWithType: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)\n    name: ToString\n    nameWithType: IFormattable.ToString\n    fullName: System.IFormattable.ToString\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    nameWithType: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    nameWithType: )\n    fullName: )\n"}