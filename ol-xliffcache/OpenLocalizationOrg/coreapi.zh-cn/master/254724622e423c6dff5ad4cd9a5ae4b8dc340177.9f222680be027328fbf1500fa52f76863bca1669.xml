{"nodes":[{"pos":[387,399],"content":"EventCounter","needQuote":true,"nodes":[{"content":"EventCounter","pos":[0,12]}]},{"pos":[1760,1793],"content":"EventCounter(String, EventSource)","needQuote":true,"nodes":[{"content":"EventCounter(String, EventSource)","pos":[0,33]}]},{"pos":[2616,2625],"content":"The name.","needQuote":true,"nodes":[{"content":"The name.","pos":[0,9]}]},{"pos":[2718,2735],"content":"The event source.","needQuote":true,"nodes":[{"content":"The event source.","pos":[0,17]}]},{"pos":[3068,3087],"content":"WriteMetric(Single)","needQuote":true,"nodes":[{"content":"WriteMetric(Single)","pos":[0,19]}]},{"pos":[3817,3827],"content":"The value.","needQuote":true,"nodes":[{"content":"The value.","pos":[0,10]}]},{"pos":[3960,3986],"content":"System.Diagnostics.Tracing","needQuote":true,"nodes":[{"content":"System.Diagnostics.Tracing","pos":[0,26]}]},{"pos":[4177,4183],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[4343,4353],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[4482,4490],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[4593,4594],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[4641,4642],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[4732,4740],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[4843,4844],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[4891,4892],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[5061,5075],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[5232,5238],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[5337,5338],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[5408,5414],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[5499,5500],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[5603,5609],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[5708,5709],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[5779,5785],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[5870,5871],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6067,6089],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[6283,6289],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[6388,6389],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6459,6465],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[6551,6552]},{"pos":[6630,6636],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6721,6722],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6839,6845],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[6944,6945],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7015,7021],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[7107,7108]},{"pos":[7186,7192],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7277,7278],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7497,7528],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[7749,7764],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[7881,7882],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7952,7958],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[8044,8045]},{"pos":[8123,8129],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8214,8215],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8341,8356],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[8473,8474],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8544,8550],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[8636,8637]},{"pos":[8715,8721],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8806,8807],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9002,9015],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[9153,9164],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[9273,9274],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9321,9322],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9415,9426],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[9535,9536],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9583,9584],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9742,9751],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[9877,9884],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[9985,9986],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10033,10034],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10123,10130],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[10231,10232],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10279,10280],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10442,10459],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[10609,10624],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[10741,10742],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10789,10790],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10887,10902],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[11019,11020],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11067,11068],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11192,11198],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[11329,11335],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[11525,11536],"content":"EventSource","needQuote":true,"nodes":[{"content":"EventSource","pos":[0,11]}]},{"pos":[11736,11742],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]}],"content":"items:\n- uid: System.Diagnostics.Tracing.EventCounter\n  commentId: T:System.Diagnostics.Tracing.EventCounter\n  id: EventCounter\n  parent: System.Diagnostics.Tracing\n  children:\n  - System.Diagnostics.Tracing.EventCounter.#ctor(System.String,System.Diagnostics.Tracing.EventSource)\n  - System.Diagnostics.Tracing.EventCounter.WriteMetric(System.Single)\n  langs:\n  - csharp\n  - vb\n  name: EventCounter\n  nameWithType: EventCounter\n  fullName: System.Diagnostics.Tracing.EventCounter\n  type: Class\n  source:\n    remote:\n      path: src/System.Diagnostics.Tracing/src/System/Diagnostics/Tracing/EventCounter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: EventCounter\n    path: src/System.Diagnostics.Tracing/src/System/Diagnostics/Tracing/EventCounter.cs\n    startLine: 21\n  assemblies:\n  - System.Diagnostics.Tracing\n  namespace: System.Diagnostics.Tracing\n  syntax:\n    content: public class EventCounter\n    content.vb: Public Class EventCounter\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n- uid: System.Diagnostics.Tracing.EventCounter.#ctor(System.String,System.Diagnostics.Tracing.EventSource)\n  commentId: M:System.Diagnostics.Tracing.EventCounter.#ctor(System.String,System.Diagnostics.Tracing.EventSource)\n  id: '#ctor(System.String,System.Diagnostics.Tracing.EventSource)'\n  parent: System.Diagnostics.Tracing.EventCounter\n  langs:\n  - csharp\n  - vb\n  name: EventCounter(String, EventSource)\n  nameWithType: EventCounter.EventCounter(String, EventSource)\n  fullName: System.Diagnostics.Tracing.EventCounter.EventCounter(System.String, System.Diagnostics.Tracing.EventSource)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Diagnostics.Tracing/src/System/Diagnostics/Tracing/EventCounter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Diagnostics.Tracing/src/System/Diagnostics/Tracing/EventCounter.cs\n    startLine: 28\n  assemblies:\n  - System.Diagnostics.Tracing\n  namespace: System.Diagnostics.Tracing\n  syntax:\n    content: public EventCounter(string name, EventSource eventSource)\n    content.vb: Public Sub New(name As String, eventSource As EventSource)\n    parameters:\n    - id: name\n      type: System.String\n      description: The name.\n    - id: eventSource\n      type: System.Diagnostics.Tracing.EventSource\n      description: The event source.\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n- uid: System.Diagnostics.Tracing.EventCounter.WriteMetric(System.Single)\n  commentId: M:System.Diagnostics.Tracing.EventCounter.WriteMetric(System.Single)\n  id: WriteMetric(System.Single)\n  parent: System.Diagnostics.Tracing.EventCounter\n  langs:\n  - csharp\n  - vb\n  name: WriteMetric(Single)\n  nameWithType: EventCounter.WriteMetric(Single)\n  fullName: System.Diagnostics.Tracing.EventCounter.WriteMetric(System.Single)\n  type: Method\n  source:\n    remote:\n      path: src/System.Diagnostics.Tracing/src/System/Diagnostics/Tracing/EventCounter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WriteMetric\n    path: src/System.Diagnostics.Tracing/src/System/Diagnostics/Tracing/EventCounter.cs\n    startLine: 49\n  assemblies:\n  - System.Diagnostics.Tracing\n  namespace: System.Diagnostics.Tracing\n  syntax:\n    content: public void WriteMetric(float value)\n    content.vb: Public Sub WriteMetric(value As Single)\n    parameters:\n    - id: value\n      type: System.Single\n      description: The value.\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\nreferences:\n- uid: System.Diagnostics.Tracing\n  isExternal: false\n  name: System.Diagnostics.Tracing\n  nameWithType: System.Diagnostics.Tracing\n  fullName: System.Diagnostics.Tracing\n  commentId: N:System.Diagnostics.Tracing\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n  commentId: T:System.Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    nameWithType: Object.ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    nameWithType: Object.ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    nameWithType: Object.Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    nameWithType: Object.Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    nameWithType: Object.Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    nameWithType: Object.Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    nameWithType: Object.ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    nameWithType: Object.ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    nameWithType: Object.GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    nameWithType: Object.GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    nameWithType: Object.GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    nameWithType: Object.GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    nameWithType: Object.MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    nameWithType: Object.MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  nameWithType: System\n  fullName: System\n  commentId: N:System\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n  commentId: T:System.String\n- uid: System.Diagnostics.Tracing.EventSource\n  parent: System.Diagnostics.Tracing\n  isExternal: false\n  name: EventSource\n  nameWithType: EventSource\n  fullName: System.Diagnostics.Tracing.EventSource\n  commentId: T:System.Diagnostics.Tracing.EventSource\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n  commentId: T:System.Single\n"}