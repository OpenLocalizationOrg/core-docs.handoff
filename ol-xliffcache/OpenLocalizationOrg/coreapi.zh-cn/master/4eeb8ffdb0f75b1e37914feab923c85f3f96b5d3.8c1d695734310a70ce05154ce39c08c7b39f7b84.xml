{"nodes":[{"pos":[343,364],"content":"AssemblyBuilderAccess","needQuote":true,"nodes":[{"content":"AssemblyBuilderAccess","pos":[0,21]}]},{"pos":[1565,1568],"content":"Run","needQuote":true,"nodes":[{"content":"Run","pos":[0,3]}]},{"pos":[2543,2556],"content":"RunAndCollect","needQuote":true,"nodes":[{"content":"RunAndCollect","pos":[0,13]}]},{"pos":[3494,3516],"content":"System.Reflection.Emit","needQuote":true,"nodes":[{"content":"System.Reflection.Emit","pos":[0,22]}]},{"pos":[3742,3763],"content":"AssemblyBuilderAccess","needQuote":true,"nodes":[{"content":"AssemblyBuilderAccess","pos":[0,21]}]}],"content":"items:\n- uid: System.Reflection.Emit.AssemblyBuilderAccess\n  commentId: T:System.Reflection.Emit.AssemblyBuilderAccess\n  id: AssemblyBuilderAccess\n  parent: System.Reflection.Emit\n  children:\n  - System.Reflection.Emit.AssemblyBuilderAccess.Run\n  - System.Reflection.Emit.AssemblyBuilderAccess.RunAndCollect\n  langs:\n  - csharp\n  - vb\n  name: AssemblyBuilderAccess\n  fullName: System.Reflection.Emit.AssemblyBuilderAccess\n  type: Enum\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/AssemblyBuilderAccess.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: AssemblyBuilderAccess\n    path: src/mscorlib/src/System/Reflection/Emit/AssemblyBuilderAccess.cs\n    startLine: 11\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Defines the access modes for a dynamic assembly.</p>\\n\"\n  syntax:\n    content: >-\n      [Serializable]\n\n      [ComVisible(true)]\n\n      [Flags]\n\n      public enum AssemblyBuilderAccess\n    content.vb: >-\n      <Serializable>\n\n      <ComVisible(True)>\n\n      <Flags>\n\n      Public Enum AssemblyBuilderAccess\n  attributes:\n  - type: System.FlagsAttribute\n    ctor: System.FlagsAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  - enum\n  modifiers.vb:\n  - Public\n  - Enum\n  nameWithType: AssemblyBuilderAccess\n- uid: System.Reflection.Emit.AssemblyBuilderAccess.Run\n  commentId: F:System.Reflection.Emit.AssemblyBuilderAccess.Run\n  id: Run\n  parent: System.Reflection.Emit.AssemblyBuilderAccess\n  langs:\n  - csharp\n  - vb\n  name: Run\n  fullName: System.Reflection.Emit.AssemblyBuilderAccess.Run\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/AssemblyBuilderAccess.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Run\n    path: src/mscorlib/src/System/Reflection/Emit/AssemblyBuilderAccess.cs\n    startLine: 16\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>The dynamic assembly can be executed, but not saved.</p>\\n\"\n  syntax:\n    content: Run = 1\n    return:\n      type: System.Reflection.Emit.AssemblyBuilderAccess\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: AssemblyBuilderAccess.Run\n- uid: System.Reflection.Emit.AssemblyBuilderAccess.RunAndCollect\n  commentId: F:System.Reflection.Emit.AssemblyBuilderAccess.RunAndCollect\n  id: RunAndCollect\n  parent: System.Reflection.Emit.AssemblyBuilderAccess\n  langs:\n  - csharp\n  - vb\n  name: RunAndCollect\n  fullName: System.Reflection.Emit.AssemblyBuilderAccess.RunAndCollect\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/AssemblyBuilderAccess.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: RunAndCollect\n    path: src/mscorlib/src/System/Reflection/Emit/AssemblyBuilderAccess.cs\n    startLine: 25\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>The dynamic assembly can be unloaded and its memory reclaimed, subject to the restrictions described in Collectible Assemblies for Dynamic Type Generation.</p>\\n\"\n  syntax:\n    content: RunAndCollect = 9\n    return:\n      type: System.Reflection.Emit.AssemblyBuilderAccess\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: AssemblyBuilderAccess.RunAndCollect\nreferences:\n- uid: System.Reflection.Emit\n  isExternal: false\n  name: System.Reflection.Emit\n  fullName: System.Reflection.Emit\n  nameWithType: System.Reflection.Emit\n  commentId: N:System.Reflection.Emit\n- uid: System.Reflection.Emit.AssemblyBuilderAccess\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: AssemblyBuilderAccess\n  fullName: System.Reflection.Emit.AssemblyBuilderAccess\n  nameWithType: AssemblyBuilderAccess\n  commentId: T:System.Reflection.Emit.AssemblyBuilderAccess\n"}