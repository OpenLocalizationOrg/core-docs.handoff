{"nodes":[{"pos":[568,584],"content":"EncodingProvider","needQuote":true,"nodes":[{"content":"EncodingProvider","pos":[0,16]}]},{"pos":[2078,2096],"content":"EncodingProvider()","needQuote":true,"nodes":[{"content":"EncodingProvider()","pos":[0,18]}]},{"pos":[3069,3087],"content":"GetEncoding(Int32)","needQuote":true,"nodes":[{"content":"GetEncoding(Int32)","pos":[0,18]}]},{"content":"\\n&lt;p&gt;The code page identifier of the requested encoding.","pos":[3827,3883],"source":"\\n<p>The code page identifier of the requested encoding."},{"content":"&lt;/p&gt;\\n","pos":[3884,3890],"source":" </p>\\n"},{"pos":[4902,4954],"content":"GetEncoding(Int32, EncoderFallback, DecoderFallback)","needQuote":true,"nodes":[{"content":"GetEncoding(Int32, EncoderFallback, DecoderFallback)","pos":[0,52]}]},{"content":"\\n&lt;p&gt;The code page identifier of the requested encoding.","pos":[6005,6061],"source":"\\n<p>The code page identifier of the requested encoding."},{"content":"&lt;/p&gt;\\n","pos":[6062,6068],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An object that provides an error-handling procedure when a character cannot be encoded with this encoding.","pos":[6156,6267],"source":"\\n<p>An object that provides an error-handling procedure when a character cannot be encoded with this encoding."},{"content":"&lt;/p&gt;\\n","pos":[6268,6274],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An object that provides an error-handling procedure when a byte sequence cannot be decoded with this encoding.","pos":[6362,6477],"source":"\\n<p>An object that provides an error-handling procedure when a byte sequence cannot be decoded with this encoding."},{"content":"&lt;/p&gt;\\n","pos":[6478,6484],"source":" </p>\\n"},{"pos":[7475,7494],"content":"GetEncoding(String)","needQuote":true,"nodes":[{"content":"GetEncoding(String)","pos":[0,19]}]},{"content":"\\n&lt;p&gt;The name of the requested encoding.","pos":[8199,8239],"source":"\\n<p>The name of the requested encoding."},{"content":"&lt;/p&gt;\\n","pos":[8240,8246],"source":" </p>\\n"},{"pos":[9254,9307],"content":"GetEncoding(String, EncoderFallback, DecoderFallback)","needQuote":true,"nodes":[{"content":"GetEncoding(String, EncoderFallback, DecoderFallback)","pos":[0,53]}]},{"content":"\\n&lt;p&gt;The name of the preferred encoding.","pos":[10334,10374],"source":"\\n<p>The name of the preferred encoding."},{"content":"&lt;/p&gt;\\n","pos":[10375,10381],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An object that provides an error-handling procedure when a character cannot be encoded with this encoding.","pos":[10469,10580],"source":"\\n<p>An object that provides an error-handling procedure when a character cannot be encoded with this encoding."},{"content":"&lt;/p&gt;\\n","pos":[10581,10587],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An object that provides an error-handling procedure when a byte sequence cannot be decoded with the current encoding.","pos":[10675,10797],"source":"\\n<p>An object that provides an error-handling procedure when a byte sequence cannot be decoded with the current encoding."},{"content":"&lt;/p&gt;\\n","pos":[10798,10804],"source":" </p>\\n"},{"pos":[11607,11618],"content":"System.Text","needQuote":true,"nodes":[{"content":"System.Text","pos":[0,11]}]},{"pos":[11764,11770],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11930,11940],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[12035,12043],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[12112,12113],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12140,12141],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12211,12219],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[12288,12289],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12316,12317],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12500,12514],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[12633,12639],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[12706,12707],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12757,12763],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12823,12824],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12907,12913],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[12980,12981],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13031,13037],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13097,13098],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13312,13334],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[13482,13488],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[13555,13556],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13606,13612],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[13673,13674]},{"pos":[13729,13735],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13795,13796],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13893,13899],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[13966,13967],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14017,14023],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[14084,14085]},{"pos":[14140,14146],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14206,14207],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14452,14483],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[14649,14664],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[14740,14741],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14791,14797],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[14858,14859]},{"pos":[14914,14920],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14980,14981],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15087,15102],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[15178,15179],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15229,15235],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[15296,15297]},{"pos":[15352,15358],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15418,15419],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15649,15662],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[15763,15774],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[15846,15847],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15874,15875],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15948,15959],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[16031,16032],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16059,16060],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16235,16244],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[16337,16344],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[16412,16413],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16440,16441],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16510,16517],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[16585,16586],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16613,16614],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16789,16806],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[16915,16930],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[17006,17007],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17034,17035],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17112,17127],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[17203,17204],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17231,17232],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17377,17383],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[17513,17518],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[17672,17680],"content":"Encoding","needQuote":true,"nodes":[{"content":"Encoding","pos":[0,8]}]},{"pos":[17860,17875],"content":"EncoderFallback","needQuote":true,"nodes":[{"content":"EncoderFallback","pos":[0,15]}]},{"pos":[18076,18091],"content":"DecoderFallback","needQuote":true,"nodes":[{"content":"DecoderFallback","pos":[0,15]}]},{"pos":[18273,18279],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"items:\n- uid: System.Text.EncodingProvider\n  commentId: T:System.Text.EncodingProvider\n  id: EncodingProvider\n  parent: System.Text\n  children:\n  - System.Text.EncodingProvider.#ctor\n  - System.Text.EncodingProvider.GetEncoding(System.Int32)\n  - System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)\n  - System.Text.EncodingProvider.GetEncoding(System.String)\n  - System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)\n  langs:\n  - csharp\n  - vb\n  name: EncodingProvider\n  fullName: System.Text.EncodingProvider\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/Text/EncodingProvider.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: EncodingProvider\n    path: src/mscorlib/src/System/Text/EncodingProvider.cs\n    startLine: 10\n  assemblies:\n  - System.Text.Encoding\n  namespace: System.Text\n  summary: \"\\n<p>Provides the base class for an encoding provider, which supplies encodings that are unavailable on a particular platform. </p>\\n\"\n  syntax:\n    content: >-\n      [ComVisible(true)]\n\n      public abstract class EncodingProvider\n    content.vb: >-\n      <ComVisible(True)>\n\n      Public MustInherit Class EncodingProvider\n  seealso:\n  - type: System.Text.Encoding.GetEncoding(System.String)\n    commentId: M:System.Text.Encoding.GetEncoding(System.String)\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - abstract\n  - class\n  modifiers.vb:\n  - Public\n  - MustInherit\n  - Class\n  nameWithType: EncodingProvider\n- uid: System.Text.EncodingProvider.#ctor\n  commentId: M:System.Text.EncodingProvider.#ctor\n  id: '#ctor'\n  parent: System.Text.EncodingProvider\n  langs:\n  - csharp\n  - vb\n  name: EncodingProvider()\n  fullName: System.Text.EncodingProvider.EncodingProvider()\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Text/EncodingProvider.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Text/EncodingProvider.cs\n    startLine: 13\n  assemblies:\n  - System.Text.Encoding\n  namespace: System.Text\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Text.EncodingProvider\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class. </p>\\n\"\n  syntax:\n    content: public EncodingProvider()\n    content.vb: Public Sub New\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: EncodingProvider.EncodingProvider()\n- uid: System.Text.EncodingProvider.GetEncoding(System.Int32)\n  commentId: M:System.Text.EncodingProvider.GetEncoding(System.Int32)\n  id: GetEncoding(System.Int32)\n  parent: System.Text.EncodingProvider\n  langs:\n  - csharp\n  - vb\n  name: GetEncoding(Int32)\n  fullName: System.Text.EncodingProvider.GetEncoding(System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Text/EncodingProvider.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetEncoding\n    path: src/mscorlib/src/System/Text/EncodingProvider.cs\n    startLine: 15\n  assemblies:\n  - System.Text.Encoding\n  namespace: System.Text\n  summary: \"\\n<p>Returns the encoding associated with the specified code page identifier. </p>\\n\"\n  syntax:\n    content: public abstract Encoding GetEncoding(int codepage)\n    content.vb: Public MustOverride Function GetEncoding(codepage As Integer) As Encoding\n    parameters:\n    - id: codepage\n      type: System.Int32\n      description: \"\\n<p>The code page identifier of the requested encoding. </p>\\n\"\n    return:\n      type: System.Text.Encoding\n      description: \"\\n<p>The encoding that is associated with the specified code page, or <strong>null</strong> if this <xref href=\\\"System.Text.EncodingProvider\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> cannot return a valid encoding that corresponds to <em>codepage</em>. </p>\\n\"\n  seealso:\n  - type: System.Text.Encoding.GetEncoding(System.Int32)\n    commentId: M:System.Text.Encoding.GetEncoding(System.Int32)\n  modifiers.csharp:\n  - public\n  - abstract\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: EncodingProvider.GetEncoding(Int32)\n- uid: System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)\n  commentId: M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)\n  id: GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)\n  parent: System.Text.EncodingProvider\n  langs:\n  - csharp\n  - vb\n  name: GetEncoding(Int32, EncoderFallback, DecoderFallback)\n  fullName: System.Text.EncodingProvider.GetEncoding(System.Int32, System.Text.EncoderFallback, System.Text.DecoderFallback)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Text/EncodingProvider.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetEncoding\n    path: src/mscorlib/src/System/Text/EncodingProvider.cs\n    startLine: 31\n  assemblies:\n  - System.Text.Encoding\n  namespace: System.Text\n  summary: \"\\n<p>Returns the encoding associated with the specified code page identifier. Parameters specify an error handler for characters that cannot be encoded and byte sequences that cannot be decoded. </p>\\n\"\n  syntax:\n    content: public virtual Encoding GetEncoding(int codepage, EncoderFallback encoderFallback, DecoderFallback decoderFallback)\n    content.vb: Public Overridable Function GetEncoding(codepage As Integer, encoderFallback As EncoderFallback, decoderFallback As DecoderFallback) As Encoding\n    parameters:\n    - id: codepage\n      type: System.Int32\n      description: \"\\n<p>The code page identifier of the requested encoding. </p>\\n\"\n    - id: encoderFallback\n      type: System.Text.EncoderFallback\n      description: \"\\n<p>An object that provides an error-handling procedure when a character cannot be encoded with this encoding. </p>\\n\"\n    - id: decoderFallback\n      type: System.Text.DecoderFallback\n      description: \"\\n<p>An object that provides an error-handling procedure when a byte sequence cannot be decoded with this encoding. </p>\\n\"\n    return:\n      type: System.Text.Encoding\n      description: \"\\n<p>The encoding that is associated with the specified code page, or <strong>null</strong> if this <xref href=\\\"System.Text.EncodingProvider\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> cannot return a valid encoding that corresponds to <em>codepage</em>. </p>\\n\"\n  seealso:\n  - type: System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)\n    commentId: M:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: EncodingProvider.GetEncoding(Int32, EncoderFallback, DecoderFallback)\n- uid: System.Text.EncodingProvider.GetEncoding(System.String)\n  commentId: M:System.Text.EncodingProvider.GetEncoding(System.String)\n  id: GetEncoding(System.String)\n  parent: System.Text.EncodingProvider\n  langs:\n  - csharp\n  - vb\n  name: GetEncoding(String)\n  fullName: System.Text.EncodingProvider.GetEncoding(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Text/EncodingProvider.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetEncoding\n    path: src/mscorlib/src/System/Text/EncodingProvider.cs\n    startLine: 14\n  assemblies:\n  - System.Text.Encoding\n  namespace: System.Text\n  summary: \"\\n<p>Returns the encoding with the specified name. </p>\\n\"\n  syntax:\n    content: public abstract Encoding GetEncoding(string name)\n    content.vb: Public MustOverride Function GetEncoding(name As String) As Encoding\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the requested encoding. </p>\\n\"\n    return:\n      type: System.Text.Encoding\n      description: \"\\n<p>The encoding that is associated with the specified name, or <strong>null</strong> if this <xref href=\\\"System.Text.EncodingProvider\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> cannot return a valid encoding that corresponds to <em>name</em>.</p>\\n\"\n  seealso:\n  - type: System.Text.Encoding.GetEncoding(System.String)\n    commentId: M:System.Text.Encoding.GetEncoding(System.String)\n  modifiers.csharp:\n  - public\n  - abstract\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: EncodingProvider.GetEncoding(String)\n- uid: System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)\n  commentId: M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)\n  id: GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)\n  parent: System.Text.EncodingProvider\n  langs:\n  - csharp\n  - vb\n  name: GetEncoding(String, EncoderFallback, DecoderFallback)\n  fullName: System.Text.EncodingProvider.GetEncoding(System.String, System.Text.EncoderFallback, System.Text.DecoderFallback)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Text/EncodingProvider.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetEncoding\n    path: src/mscorlib/src/System/Text/EncodingProvider.cs\n    startLine: 18\n  assemblies:\n  - System.Text.Encoding\n  namespace: System.Text\n  summary: \"\\n<p>Returns the encoding associated with the specified name. Parameters specify an error handler for characters that cannot be encoded and byte sequences that cannot be decoded. </p>\\n\"\n  syntax:\n    content: public virtual Encoding GetEncoding(string name, EncoderFallback encoderFallback, DecoderFallback decoderFallback)\n    content.vb: Public Overridable Function GetEncoding(name As String, encoderFallback As EncoderFallback, decoderFallback As DecoderFallback) As Encoding\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the preferred encoding. </p>\\n\"\n    - id: encoderFallback\n      type: System.Text.EncoderFallback\n      description: \"\\n<p>An object that provides an error-handling procedure when a character cannot be encoded with this encoding. </p>\\n\"\n    - id: decoderFallback\n      type: System.Text.DecoderFallback\n      description: \"\\n<p>An object that provides an error-handling procedure when a byte sequence cannot be decoded with the current encoding. </p>\\n\"\n    return:\n      type: System.Text.Encoding\n      description: \"\\n<p>The encoding that is associated with the specified name, or <strong>null</strong> if this <xref href=\\\"System.Text.EncodingProvider\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> cannot return a valid encoding that corresponds to <em>name</em>. </p>\\n\"\n  seealso:\n  - type: System.Text.Encoding.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)\n    commentId: M:System.Text.Encoding.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: EncodingProvider.GetEncoding(String, EncoderFallback, DecoderFallback)\nreferences:\n- uid: System.Text\n  isExternal: false\n  name: System.Text\n  fullName: System.Text\n  nameWithType: System.Text\n  commentId: N:System.Text\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.Text.Encoding\n  parent: System.Text\n  isExternal: false\n  name: Encoding\n  fullName: System.Text.Encoding\n  nameWithType: Encoding\n  commentId: T:System.Text.Encoding\n- uid: System.Text.EncoderFallback\n  parent: System.Text\n  isExternal: false\n  name: EncoderFallback\n  fullName: System.Text.EncoderFallback\n  nameWithType: EncoderFallback\n  commentId: T:System.Text.EncoderFallback\n- uid: System.Text.DecoderFallback\n  parent: System.Text\n  isExternal: false\n  name: DecoderFallback\n  fullName: System.Text.DecoderFallback\n  nameWithType: DecoderFallback\n  commentId: T:System.Text.DecoderFallback\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n"}