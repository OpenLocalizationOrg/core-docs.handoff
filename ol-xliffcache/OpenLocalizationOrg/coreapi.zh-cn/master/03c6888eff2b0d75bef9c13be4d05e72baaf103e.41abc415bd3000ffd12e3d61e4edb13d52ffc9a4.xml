{"nodes":[{"pos":[3214,3221],"content":"Process","needQuote":true,"nodes":[{"content":"Process","pos":[0,7]}]},{"pos":[4537,4546],"content":"Process()","needQuote":true,"nodes":[{"content":"Process()","pos":[0,9]}]},{"pos":[5619,5631],"content":"BasePriority","needQuote":true,"nodes":[{"content":"BasePriority","pos":[0,12]}]},{"content":"\\n&lt;p&gt;The process has exited.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;The process has not started, so there is no process ID.","pos":[7055,7161],"source":"\\n<p>The process has exited.</p>\\n<p>-or- </p>\\n<p>The process has not started, so there is no process ID."},{"content":"&lt;/p&gt;\\n","pos":[7162,7168],"source":" </p>\\n"},{"pos":[7974,7993],"content":"EnableRaisingEvents","needQuote":true,"nodes":[{"content":"EnableRaisingEvents","pos":[0,19]}]},{"pos":[10429,10437],"content":"ExitCode","needQuote":true,"nodes":[{"content":"ExitCode","pos":[0,8]}]},{"content":"\\n&lt;p&gt;The code that the associated process specified when it terminated.&lt;/p&gt;\\n","pos":[11146,11223],"source":"\\n<p>The code that the associated process specified when it terminated.</p>\\n"},{"pos":[12925,12933],"content":"ExitTime","needQuote":true,"nodes":[{"content":"ExitTime","pos":[0,8]}]},{"content":"\\n&lt;p&gt;The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.","pos":[13906,14019],"source":"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property."},{"content":"&lt;/p&gt;\\n","pos":[14020,14026],"source":" </p>\\n"},{"pos":[15058,15067],"content":"HasExited","needQuote":true,"nodes":[{"content":"HasExited","pos":[0,9]}]},{"content":"\\n&lt;p&gt;There is no process associated with the object.","pos":[16145,16197],"source":"\\n<p>There is no process associated with the object."},{"content":"&lt;/p&gt;\\n","pos":[16198,16204],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The exit code for the process could not be retrieved.","pos":[16325,16383],"source":"\\n<p>The exit code for the process could not be retrieved."},{"content":"&lt;/p&gt;\\n","pos":[16384,16390],"source":" </p>\\n"},{"pos":[17760,17762],"content":"Id","needQuote":true,"nodes":[{"content":"Id","pos":[0,2]}]},{"pos":[20168,20179],"content":"MachineName","needQuote":true,"nodes":[{"content":"MachineName","pos":[0,11]}]},{"content":"\\n&lt;p&gt;The name of the computer that the associated process is running on.&lt;/p&gt;\\n","pos":[20898,20976],"source":"\\n<p>The name of the computer that the associated process is running on.</p>\\n"},{"pos":[22130,22140],"content":"MainModule","needQuote":true,"nodes":[{"content":"MainModule","pos":[0,10]}]},{"content":"\\n&lt;p&gt;A 32-bit process is trying to access the modules of a 64-bit process.&lt;/p&gt;\\n","pos":[23535,23615],"source":"\\n<p>A 32-bit process is trying to access the modules of a 64-bit process.</p>\\n"},{"pos":[24865,24878],"content":"MaxWorkingSet","needQuote":true,"nodes":[{"content":"MaxWorkingSet","pos":[0,13]}]},{"content":"\\n&lt;p&gt;The maximum working set size that is allowed in memory for the process, in bytes.&lt;/p&gt;\\n","pos":[25624,25716],"source":"\\n<p>The maximum working set size that is allowed in memory for the process, in bytes.</p>\\n"},{"content":"\\n&lt;p&gt;The maximum working set size is invalid.","pos":[25827,25872],"source":"\\n<p>The maximum working set size is invalid."},{"content":"It must be greater than or equal to the minimum working set size.&lt;/p&gt;\\n","pos":[25873,25944],"source":" It must be greater than or equal to the minimum working set size.</p>\\n"},{"content":"\\n&lt;p&gt;Working set information cannot be retrieved from the associated process resource.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;The process identifier or process handle is zero because the process has not been started.","pos":[26065,26264],"source":"\\n<p>Working set information cannot be retrieved from the associated process resource.</p>\\n<p>-or- </p>\\n<p>The process identifier or process handle is zero because the process has not been started."},{"content":"&lt;/p&gt;\\n","pos":[26265,26271],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.","pos":[27074,27187],"source":"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property."},{"content":"&lt;/p&gt;\\n","pos":[27188,27194],"source":" </p>\\n"},{"pos":[27988,28001],"content":"MinWorkingSet","needQuote":true,"nodes":[{"content":"MinWorkingSet","pos":[0,13]}]},{"content":"\\n&lt;p&gt;The minimum working set size that is required in memory for the process, in bytes.&lt;/p&gt;\\n","pos":[28747,28840],"source":"\\n<p>The minimum working set size that is required in memory for the process, in bytes.</p>\\n"},{"content":"\\n&lt;p&gt;The minimum working set size is invalid.","pos":[28951,28996],"source":"\\n<p>The minimum working set size is invalid."},{"content":"It must be less than or equal to the maximum working set size.&lt;/p&gt;\\n","pos":[28997,29065],"source":" It must be less than or equal to the maximum working set size.</p>\\n"},{"content":"\\n&lt;p&gt;Working set information cannot be retrieved from the associated process resource.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;The process identifier or process handle is zero because the process has not been started.","pos":[29186,29385],"source":"\\n<p>Working set information cannot be retrieved from the associated process resource.</p>\\n<p>-or- </p>\\n<p>The process identifier or process handle is zero because the process has not been started."},{"content":"&lt;/p&gt;\\n","pos":[29386,29392],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.","pos":[30195,30308],"source":"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property."},{"content":"&lt;/p&gt;\\n","pos":[30309,30315],"source":" </p>\\n"},{"pos":[31091,31098],"content":"Modules","needQuote":true,"nodes":[{"content":"Modules","pos":[0,7]}]},{"pos":[34055,34081],"content":"NonpagedSystemMemorySize64","needQuote":true,"nodes":[{"content":"NonpagedSystemMemorySize64","pos":[0,26]}]},{"content":"\\n&lt;p&gt;The amount of system memory, in bytes, allocated for the associated process that cannot be written to the virtual memory paging file.&lt;/p&gt;\\n","pos":[34878,35022],"source":"\\n<p>The amount of system memory, in bytes, allocated for the associated process that cannot be written to the virtual memory paging file.</p>\\n"},{"content":"\\n&lt;p&gt;The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.&lt;/p&gt;\\n","pos":[35157,35276],"source":"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</p>\\n"},{"pos":[35898,35915],"content":"PagedMemorySize64","needQuote":true,"nodes":[{"content":"PagedMemorySize64","pos":[0,17]}]},{"content":"\\n&lt;p&gt;The amount of memory, in bytes, allocated in the virtual memory paging file for the associated process.&lt;/p&gt;\\n","pos":[36666,36780],"source":"\\n<p>The amount of memory, in bytes, allocated in the virtual memory paging file for the associated process.</p>\\n"},{"content":"\\n&lt;p&gt;The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.&lt;/p&gt;\\n","pos":[36915,37034],"source":"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</p>\\n"},{"pos":[37790,37813],"content":"PagedSystemMemorySize64","needQuote":true,"nodes":[{"content":"PagedSystemMemorySize64","pos":[0,23]}]},{"content":"\\n&lt;p&gt;The amount of system memory, in bytes, allocated for the associated process that can be written to the virtual memory paging file.&lt;/p&gt;\\n","pos":[38598,38739],"source":"\\n<p>The amount of system memory, in bytes, allocated for the associated process that can be written to the virtual memory paging file.</p>\\n"},{"content":"\\n&lt;p&gt;The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.&lt;/p&gt;\\n","pos":[38874,38993],"source":"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</p>\\n"},{"pos":[39759,39780],"content":"PeakPagedMemorySize64","needQuote":true,"nodes":[{"content":"PeakPagedMemorySize64","pos":[0,21]}]},{"content":"\\n&lt;p&gt;The maximum amount of memory, in bytes, allocated in the virtual memory paging file for the associated process since it was started.&lt;/p&gt;\\n","pos":[40577,40720],"source":"\\n<p>The maximum amount of memory, in bytes, allocated in the virtual memory paging file for the associated process since it was started.</p>\\n"},{"content":"\\n&lt;p&gt;The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.&lt;/p&gt;\\n","pos":[40855,40974],"source":"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</p>\\n"},{"pos":[41597,41620],"content":"PeakVirtualMemorySize64","needQuote":true,"nodes":[{"content":"PeakVirtualMemorySize64","pos":[0,23]}]},{"content":"\\n&lt;p&gt;The maximum amount of virtual memory, in bytes, allocated for the associated process since it was started.&lt;/p&gt;\\n","pos":[42399,42516],"source":"\\n<p>The maximum amount of virtual memory, in bytes, allocated for the associated process since it was started.</p>\\n"},{"content":"\\n&lt;p&gt;The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.&lt;/p&gt;\\n","pos":[42651,42770],"source":"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</p>\\n"},{"pos":[43378,43394],"content":"PeakWorkingSet64","needQuote":true,"nodes":[{"content":"PeakWorkingSet64","pos":[0,16]}]},{"content":"\\n&lt;p&gt;The maximum amount of physical memory, in bytes, allocated for the associated process since it was started.&lt;/p&gt;\\n","pos":[44146,44264],"source":"\\n<p>The maximum amount of physical memory, in bytes, allocated for the associated process since it was started.</p>\\n"},{"content":"\\n&lt;p&gt;The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.&lt;/p&gt;\\n","pos":[44399,44518],"source":"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</p>\\n"},{"pos":[45335,45355],"content":"PriorityBoostEnabled","needQuote":true,"nodes":[{"content":"PriorityBoostEnabled","pos":[0,20]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if dynamic boosting of the process priority should take place for a process when it is taken out of the wait state; otherwise, &lt;strong&gt;false&lt;/strong&gt;.","pos":[46200,46379],"source":"\\n<p>\\n<strong>true</strong> if dynamic boosting of the process priority should take place for a process when it is taken out of the wait state; otherwise, <strong>false</strong>."},{"content":"The default is &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[46380,46424],"source":" The default is <strong>false</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;Priority boost information could not be retrieved from the associated process resource.","pos":[46559,46651],"source":"\\n<p>Priority boost information could not be retrieved from the associated process resource."},{"content":"&lt;/p&gt;\\n","pos":[46652,46658],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;The process identifier or process handle is zero.","pos":[46779,46964],"source":"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</p>\\n<p>-or- </p>\\n<p>The process identifier or process handle is zero."},{"content":"(The process has not been started.) &lt;/p&gt;\\n","pos":[46965,47007],"source":" (The process has not been started.) </p>\\n"},{"pos":[48340,48353],"content":"PriorityClass","needQuote":true,"nodes":[{"content":"PriorityClass","pos":[0,13]}]},{"content":"\\n&lt;p&gt;Process priority information could not be set or retrieved from the associated process resource.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;The process identifier or process handle is zero.","pos":[49473,49646],"source":"\\n<p>Process priority information could not be set or retrieved from the associated process resource.</p>\\n<p>-or- </p>\\n<p>The process identifier or process handle is zero."},{"content":"(The process has not been started.) &lt;/p&gt;\\n","pos":[49647,49689],"source":" (The process has not been started.) </p>\\n"},{"pos":[51846,51865],"content":"PrivateMemorySize64","needQuote":true,"nodes":[{"content":"PrivateMemorySize64","pos":[0,19]}]},{"content":"\\n&lt;p&gt;The amount of memory, in bytes, allocated for the associated process that cannot be shared with other processes.&lt;/p&gt;\\n","pos":[52626,52749],"source":"\\n<p>The amount of memory, in bytes, allocated for the associated process that cannot be shared with other processes.</p>\\n"},{"content":"\\n&lt;p&gt;The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.&lt;/p&gt;\\n","pos":[52884,53003],"source":"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</p>\\n"},{"pos":[53496,53519],"content":"PrivilegedProcessorTime","needQuote":true,"nodes":[{"content":"PrivilegedProcessorTime","pos":[0,23]}]},{"content":"\\n&lt;p&gt;The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.","pos":[54607,54720],"source":"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property."},{"content":"&lt;/p&gt;\\n","pos":[54721,54727],"source":" </p>\\n"},{"pos":[55852,55863],"content":"ProcessName","needQuote":true,"nodes":[{"content":"ProcessName","pos":[0,11]}]},{"content":"\\n&lt;p&gt;The name that the system uses to identify the process to the user.&lt;/p&gt;\\n","pos":[56544,56621],"source":"\\n<p>The name that the system uses to identify the process to the user.</p>\\n"},{"content":"\\n&lt;p&gt;The process is not on this computer.&lt;/p&gt;\\n","pos":[57485,57532],"source":"\\n<p>The process is not on this computer.</p>\\n"},{"pos":[58159,58176],"content":"ProcessorAffinity","needQuote":true,"nodes":[{"content":"ProcessorAffinity","pos":[0,17]}]},{"content":"\\n&lt;p&gt;A bitmask representing the processors that the threads in the associated process can run on.","pos":[58937,59034],"source":"\\n<p>A bitmask representing the processors that the threads in the associated process can run on."},{"content":"The default depends on the number of processors on the computer.","pos":[59035,59099]},{"content":"The default value is 2 n -1, where n is the number of processors.&lt;/p&gt;\\n","pos":[59100,59171],"source":" The default value is 2 n -1, where n is the number of processors.</p>\\n"},{"pos":[60751,60761],"content":"SafeHandle","needQuote":true,"nodes":[{"content":"SafeHandle","pos":[0,10]}]},{"content":"\\n&lt;p&gt;The native handle to this process.&lt;/p&gt;\\n","pos":[61502,61547],"source":"\\n<p>The native handle to this process.</p>\\n"},{"pos":[61847,61856],"content":"SessionId","needQuote":true,"nodes":[{"content":"SessionId","pos":[0,9]}]},{"content":"\\n&lt;p&gt;The Terminal Services session identifier for the associated process.&lt;/p&gt;\\n","pos":[62570,62649],"source":"\\n<p>The Terminal Services session identifier for the associated process.</p>\\n"},{"content":"\\n&lt;p&gt;There is no session associated with this process.&lt;/p&gt;\\n","pos":[62770,62830],"source":"\\n<p>There is no session associated with this process.</p>\\n"},{"content":"\\n&lt;p&gt;There is no process associated with this session identifier.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;The associated process is not on this machine.","pos":[62943,63076],"source":"\\n<p>There is no process associated with this session identifier.</p>\\n<p>-or-</p>\\n<p>The associated process is not on this machine."},{"content":"&lt;/p&gt;\\n","pos":[63077,63083],"source":" </p>\\n"},{"pos":[63809,63822],"content":"StandardError","needQuote":true,"nodes":[{"content":"StandardError","pos":[0,13]}]},{"pos":[66455,66468],"content":"StandardInput","needQuote":true,"nodes":[{"content":"StandardInput","pos":[0,13]}]},{"pos":[68638,68652],"content":"StandardOutput","needQuote":true,"nodes":[{"content":"StandardOutput","pos":[0,14]}]},{"pos":[71285,71294],"content":"StartInfo","needQuote":true,"nodes":[{"content":"StartInfo","pos":[0,9]}]},{"pos":[73415,73424],"content":"StartTime","needQuote":true,"nodes":[{"content":"StartTime","pos":[0,9]}]},{"content":"\\n&lt;p&gt;An object  that indicates when the process started.","pos":[74123,74179],"source":"\\n<p>An object  that indicates when the process started."},{"content":"An exception is thrown if the process is not running.&lt;/p&gt;\\n","pos":[74180,74239],"source":" An exception is thrown if the process is not running.</p>\\n"},{"content":"\\n&lt;p&gt;The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.","pos":[74374,74487],"source":"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property."},{"content":"&lt;/p&gt;\\n","pos":[74488,74494],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The process has exited.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;The process has not been started.&lt;/p&gt;\\n","pos":[75000,75089],"source":"\\n<p>The process has exited.</p>\\n<p>-or-</p>\\n<p>The process has not been started.</p>\\n"},{"content":"\\n&lt;p&gt;An error occurred in the call to the Windows function.&lt;/p&gt;\\n","pos":[75210,75275],"source":"\\n<p>An error occurred in the call to the Windows function.</p>\\n"},{"pos":[75710,75717],"content":"Threads","needQuote":true,"nodes":[{"content":"Threads","pos":[0,7]}]},{"pos":[78194,78212],"content":"TotalProcessorTime","needQuote":true,"nodes":[{"content":"TotalProcessorTime","pos":[0,18]}]},{"content":"\\n&lt;p&gt;The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.","pos":[79512,79625],"source":"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property."},{"content":"&lt;/p&gt;\\n","pos":[79626,79632],"source":" </p>\\n"},{"pos":[80765,80782],"content":"UserProcessorTime","needQuote":true,"nodes":[{"content":"UserProcessorTime","pos":[0,17]}]},{"content":"\\n&lt;p&gt;The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.","pos":[81903,82016],"source":"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property."},{"content":"&lt;/p&gt;\\n","pos":[82017,82023],"source":" </p>\\n"},{"pos":[83160,83179],"content":"VirtualMemorySize64","needQuote":true,"nodes":[{"content":"VirtualMemorySize64","pos":[0,19]}]},{"content":"\\n&lt;p&gt;The amount of virtual memory, in bytes, allocated for the associated process.&lt;/p&gt;\\n","pos":[83944,84032],"source":"\\n<p>The amount of virtual memory, in bytes, allocated for the associated process.</p>\\n"},{"content":"\\n&lt;p&gt;The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.&lt;/p&gt;\\n","pos":[84167,84286],"source":"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</p>\\n"},{"pos":[84886,84898],"content":"WorkingSet64","needQuote":true,"nodes":[{"content":"WorkingSet64","pos":[0,12]}]},{"content":"\\n&lt;p&gt;The amount of physical memory, in bytes, allocated for the associated process.&lt;/p&gt;\\n","pos":[85632,85721],"source":"\\n<p>The amount of physical memory, in bytes, allocated for the associated process.</p>\\n"},{"content":"\\n&lt;p&gt;The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.&lt;/p&gt;\\n","pos":[85856,85975],"source":"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</p>\\n"},{"pos":[86787,86804],"content":"ErrorDataReceived","needQuote":true,"nodes":[{"content":"ErrorDataReceived","pos":[0,17]}]},{"pos":[88675,88681],"content":"Exited","needQuote":true,"nodes":[{"content":"Exited","pos":[0,6]}]},{"pos":[89744,89762],"content":"OutputDataReceived","needQuote":true,"nodes":[{"content":"OutputDataReceived","pos":[0,18]}]},{"pos":[91696,91716],"content":"BeginErrorReadLine()","needQuote":true,"nodes":[{"content":"BeginErrorReadLine()","pos":[0,20]}]},{"pos":[94208,94229],"content":"BeginOutputReadLine()","needQuote":true,"nodes":[{"content":"BeginOutputReadLine()","pos":[0,21]}]},{"pos":[96726,96743],"content":"CancelErrorRead()","needQuote":true,"nodes":[{"content":"CancelErrorRead()","pos":[0,17]}]},{"pos":[98846,98864],"content":"CancelOutputRead()","needQuote":true,"nodes":[{"content":"CancelOutputRead()","pos":[0,18]}]},{"pos":[100976,100992],"content":"EnterDebugMode()","needQuote":true,"nodes":[{"content":"EnterDebugMode()","pos":[0,16]}]},{"pos":[102424,102443],"content":"GetCurrentProcess()","needQuote":true,"nodes":[{"content":"GetCurrentProcess()","pos":[0,19]}]},{"pos":[104407,104428],"content":"GetProcessById(Int32)","needQuote":true,"nodes":[{"content":"GetProcessById(Int32)","pos":[0,21]}]},{"content":"\\n&lt;p&gt;The system-unique identifier of a process resource.","pos":[105311,105367],"source":"\\n<p>The system-unique identifier of a process resource."},{"content":"&lt;/p&gt;\\n","pos":[105368,105374],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The process specified by the &lt;em&gt;processId&lt;/em&gt; parameter is not running.","pos":[105766,105844],"source":"\\n<p>The process specified by the <em>processId</em> parameter is not running."},{"content":"The identifier might be expired.","pos":[105845,105877]},{"content":"&lt;/p&gt;\\n","pos":[105878,105884],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The process was not started by this object.&lt;/p&gt;\\n","pos":[105997,106051],"source":"\\n<p>The process was not started by this object.</p>\\n"},{"pos":[107075,107104],"content":"GetProcessById(Int32, String)","needQuote":true,"nodes":[{"content":"GetProcessById(Int32, String)","pos":[0,29]}]},{"content":"\\n&lt;p&gt;The system-unique identifier of a process resource.","pos":[108058,108114],"source":"\\n<p>The system-unique identifier of a process resource."},{"content":"&lt;/p&gt;\\n","pos":[108115,108121],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The name of a computer on the network.","pos":[108191,108234],"source":"\\n<p>The name of a computer on the network."},{"content":"&lt;/p&gt;\\n","pos":[108235,108241],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The process specified by the &lt;em&gt;processId&lt;/em&gt; parameter is not running.","pos":[108632,108710],"source":"\\n<p>The process specified by the <em>processId</em> parameter is not running."},{"content":"The identifier might be expired.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;The &lt;em&gt;machineName&lt;/em&gt; parameter syntax is invalid.","pos":[108711,108819],"source":" The identifier might be expired.</p>\\n<p>-or- </p>\\n<p>The <em>machineName</em> parameter syntax is invalid."},{"content":"The name might have length zero (0).","pos":[108820,108856]},{"content":"&lt;/p&gt;\\n","pos":[108857,108863],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;machineName&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.","pos":[108968,109033],"source":"\\n<p>The <em>machineName</em> parameter is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[109034,109040],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The process was not started by this object.&lt;/p&gt;\\n","pos":[109153,109207],"source":"\\n<p>The process was not started by this object.</p>\\n"},{"pos":[110254,110268],"content":"GetProcesses()","needQuote":true,"nodes":[{"content":"GetProcesses()","pos":[0,14]}]},{"pos":[112320,112340],"content":"GetProcesses(String)","needQuote":true,"nodes":[{"content":"GetProcesses(String)","pos":[0,20]}]},{"content":"\\n&lt;p&gt;The computer from which to read the list of processes.","pos":[113224,113283],"source":"\\n<p>The computer from which to read the list of processes."},{"content":"&lt;/p&gt;\\n","pos":[113284,113290],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;machineName&lt;/em&gt; parameter syntax is invalid.","pos":[113667,113725],"source":"\\n<p>The <em>machineName</em> parameter syntax is invalid."},{"content":"It might have length zero (0).","pos":[113726,113756]},{"content":"&lt;/p&gt;\\n","pos":[113757,113763],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;machineName&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.","pos":[113868,113933],"source":"\\n<p>The <em>machineName</em> parameter is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[113934,113940],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The operating system platform does not support this operation on remote computers.","pos":[114061,114148],"source":"\\n<p>The operating system platform does not support this operation on remote computers."},{"content":"&lt;/p&gt;\\n","pos":[114149,114155],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;There are problems accessing the performance counter API's used to get process information.","pos":[114268,114364],"source":"\\n<p>There are problems accessing the performance counter API's used to get process information."},{"content":"This exception is specific to Windows NT, Windows 2000, and Windows XP.","pos":[114365,114436]},{"content":"&lt;/p&gt;\\n","pos":[114437,114443],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A problem occurred accessing an underlying system API.","pos":[114564,114623],"source":"\\n<p>A problem occurred accessing an underlying system API."},{"content":"&lt;/p&gt;\\n","pos":[114624,114630],"source":" </p>\\n"},{"pos":[115704,115730],"content":"GetProcessesByName(String)","needQuote":true,"nodes":[{"content":"GetProcessesByName(String)","pos":[0,26]}]},{"content":"\\n&lt;p&gt;The friendly name of the process.","pos":[116708,116746],"source":"\\n<p>The friendly name of the process."},{"content":"&lt;/p&gt;\\n","pos":[116747,116753],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;There are problems accessing the performance counter API's used to get process information.","pos":[117150,117246],"source":"\\n<p>There are problems accessing the performance counter API's used to get process information."},{"content":"This exception is specific to Windows NT, Windows 2000, and Windows XP.","pos":[117247,117318]},{"content":"&lt;/p&gt;\\n","pos":[117319,117325],"source":" </p>\\n"},{"pos":[118405,118439],"content":"GetProcessesByName(String, String)","needQuote":true,"nodes":[{"content":"GetProcessesByName(String, String)","pos":[0,34]}]},{"content":"\\n&lt;p&gt;The friendly name of the process.","pos":[119473,119511],"source":"\\n<p>The friendly name of the process."},{"content":"&lt;/p&gt;\\n","pos":[119512,119518],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The name of a computer on the network.","pos":[119588,119631],"source":"\\n<p>The name of a computer on the network."},{"content":"&lt;/p&gt;\\n","pos":[119632,119638],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;machineName&lt;/em&gt; parameter syntax is invalid.","pos":[120019,120077],"source":"\\n<p>The <em>machineName</em> parameter syntax is invalid."},{"content":"It might have length zero (0).","pos":[120078,120108]},{"content":"&lt;/p&gt;\\n","pos":[120109,120115],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;machineName&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.","pos":[120220,120285],"source":"\\n<p>The <em>machineName</em> parameter is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[120286,120292],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The operating system platform does not support this operation on remote computers.","pos":[120413,120500],"source":"\\n<p>The operating system platform does not support this operation on remote computers."},{"content":"&lt;/p&gt;\\n","pos":[120501,120507],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;There are problems accessing the performance counter API's used to get process information.","pos":[120620,120716],"source":"\\n<p>There are problems accessing the performance counter API's used to get process information."},{"content":"This exception is specific to Windows NT, Windows 2000, and Windows XP.","pos":[120717,120788]},{"content":"&lt;/p&gt;\\n","pos":[120789,120795],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A problem occurred accessing an underlying system API.","pos":[120916,120975],"source":"\\n<p>A problem occurred accessing an underlying system API."},{"content":"&lt;/p&gt;\\n","pos":[120976,120982],"source":" </p>\\n"},{"pos":[122167,122173],"content":"Kill()","needQuote":true,"nodes":[{"content":"Kill()","pos":[0,6]}]},{"content":"\\n&lt;p&gt;The associated process could not be terminated.","pos":[122860,122912],"source":"\\n<p>The associated process could not be terminated."},{"content":"&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;The process is terminating.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;The associated process is a Win16 executable.&lt;/p&gt;\\n","pos":[122913,123036],"source":" </p>\\n<p>-or-</p>\\n<p>The process is terminating.</p>\\n<p>-or- </p>\\n<p>The associated process is a Win16 executable.</p>\\n"},{"pos":[124461,124477],"content":"LeaveDebugMode()","needQuote":true,"nodes":[{"content":"LeaveDebugMode()","pos":[0,16]}]},{"pos":[125813,125823],"content":"OnExited()","needQuote":true,"nodes":[{"content":"OnExited()","pos":[0,10]}]},{"pos":[126995,127004],"content":"Refresh()","needQuote":true,"nodes":[{"content":"Refresh()","pos":[0,9]}]},{"pos":[128041,128048],"content":"Start()","needQuote":true,"nodes":[{"content":"Start()","pos":[0,7]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if a process resource is started; &lt;strong&gt;false&lt;/strong&gt; if no new process resource is started (for example, if an existing process is reused).&lt;/p&gt;\\n","pos":[128955,129133],"source":"\\n<p>\\n<strong>true</strong> if a process resource is started; <strong>false</strong> if no new process resource is started (for example, if an existing process is reused).</p>\\n"},{"content":"\\n&lt;p&gt;There was an error in opening the associated file.","pos":[130298,130353],"source":"\\n<p>There was an error in opening the associated file."},{"content":"&lt;/p&gt;\\n","pos":[130354,130360],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The process object has already been disposed.","pos":[130469,130519],"source":"\\n<p>The process object has already been disposed."},{"content":"&lt;/p&gt;\\n","pos":[130520,130526],"source":" </p>\\n"},{"pos":[131575,131598],"content":"Start(ProcessStartInfo)","needQuote":true,"nodes":[{"content":"Start(ProcessStartInfo)","pos":[0,23]}]},{"content":"\\n&lt;p&gt;The &lt;em&gt;startInfo&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.","pos":[135140,135203],"source":"\\n<p>The <em>startInfo</em> parameter is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[135204,135210],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The process object has already been disposed.","pos":[135319,135369],"source":"\\n<p>The process object has already been disposed."},{"content":"&lt;/p&gt;\\n","pos":[135370,135376],"source":" </p>\\n"},{"pos":[137173,137186],"content":"Start(String)","needQuote":true,"nodes":[{"content":"Start(String)","pos":[0,13]}]},{"content":"\\n&lt;p&gt;The name of a document or application file to run in the process.","pos":[138086,138156],"source":"\\n<p>The name of a document or application file to run in the process."},{"content":"&lt;/p&gt;\\n","pos":[138157,138163],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An error occurred when opening the associated file.","pos":[139015,139071],"source":"\\n<p>An error occurred when opening the associated file."},{"content":"&lt;/p&gt;\\n","pos":[139072,139078],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The process object has already been disposed.","pos":[139187,139237],"source":"\\n<p>The process object has already been disposed."},{"content":"&lt;/p&gt;\\n","pos":[139238,139244],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The PATH environment variable has a string containing quotes.&lt;/p&gt;\\n","pos":[139355,139427],"source":"\\n<p>The PATH environment variable has a string containing quotes.</p>\\n"},{"pos":[140381,140402],"content":"Start(String, String)","needQuote":true,"nodes":[{"content":"Start(String, String)","pos":[0,21]}]},{"content":"\\n&lt;p&gt;The name of an application file to run in the process.","pos":[141377,141436],"source":"\\n<p>The name of an application file to run in the process."},{"content":"&lt;/p&gt;\\n","pos":[141437,141443],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;Command-line arguments to pass when starting the process.","pos":[141511,141573],"source":"\\n<p>Command-line arguments to pass when starting the process."},{"content":"&lt;/p&gt;\\n","pos":[141574,141580],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;fileName&lt;/em&gt; or &lt;em&gt;arguments&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.","pos":[142424,142508],"source":"\\n<p>The <em>fileName</em> or <em>arguments</em> parameter is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[142509,142515],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The process object has already been disposed.","pos":[143088,143138],"source":"\\n<p>The process object has already been disposed."},{"content":"&lt;/p&gt;\\n","pos":[143139,143145],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The PATH environment variable has a string containing quotes.&lt;/p&gt;\\n","pos":[143256,143328],"source":"\\n<p>The PATH environment variable has a string containing quotes.</p>\\n"},{"pos":[144320,144333],"content":"WaitForExit()","needQuote":true,"nodes":[{"content":"WaitForExit()","pos":[0,13]}]},{"content":"\\n&lt;p&gt;The wait setting could not be accessed.","pos":[145176,145220],"source":"\\n<p>The wait setting could not be accessed."},{"content":"&lt;/p&gt;\\n","pos":[145221,145227],"source":" </p>\\n"},{"pos":[147334,147352],"content":"WaitForExit(Int32)","needQuote":true,"nodes":[{"content":"WaitForExit(Int32)","pos":[0,18]}]},{"content":"\\n&lt;p&gt;The amount of time, in milliseconds, to wait for the associated process to exit.","pos":[148239,148324],"source":"\\n<p>The amount of time, in milliseconds, to wait for the associated process to exit."},{"content":"The maximum is the largest possible value of a 32-bit integer, which represents infinity to the operating system.","pos":[148325,148438]},{"content":"&lt;/p&gt;\\n","pos":[148439,148445],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the associated process has exited; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[148506,148613],"source":"\\n<p>\\n<strong>true</strong> if the associated process has exited; otherwise, <strong>false</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The wait setting could not be accessed.","pos":[148748,148792],"source":"\\n<p>The wait setting could not be accessed."},{"content":"&lt;/p&gt;\\n","pos":[148793,148799],"source":" </p>\\n"},{"pos":[150992,151001],"content":"Dispose()","needQuote":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[151866,151882],"content":"Dispose(Boolean)","needQuote":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to release both managed and unmanaged resources; &lt;strong&gt;false&lt;/strong&gt; to release only unmanaged resources.","pos":[152610,152747],"source":"\\n<p>\\n<strong>true</strong> to release both managed and unmanaged resources; <strong>false</strong> to release only unmanaged resources."},{"content":"&lt;/p&gt;\\n","pos":[152748,152754],"source":" </p>\\n"},{"pos":[152955,152973],"content":"System.Diagnostics","needQuote":true,"nodes":[{"content":"System.Diagnostics","pos":[0,18]}]},{"pos":[153140,153146],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[153296,153307],"content":"IDisposable","needQuote":true,"nodes":[{"content":"IDisposable","pos":[0,11]}]},{"pos":[153482,153492],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[153587,153595],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[153664,153665],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[153692,153693],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[153763,153771],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[153840,153841],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[153868,153869],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[154052,154066],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[154185,154191],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[154258,154259],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[154309,154315],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[154375,154376],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[154459,154465],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[154532,154533],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[154583,154589],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[154649,154650],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[154864,154886],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[155034,155040],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[155107,155108],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[155158,155164],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[155225,155226]},{"pos":[155281,155287],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[155347,155348],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[155445,155451],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[155518,155519],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[155569,155575],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[155636,155637]},{"pos":[155692,155698],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[155758,155759],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[156004,156035],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[156201,156216],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[156292,156293],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[156343,156349],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[156410,156411]},{"pos":[156466,156472],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[156532,156533],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[156639,156654],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[156730,156731],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[156781,156787],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[156848,156849]},{"pos":[156904,156910],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[156970,156971],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[157201,157214],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[157315,157326],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[157398,157399],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[157426,157427],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[157500,157511],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[157583,157584],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[157611,157612],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[157787,157796],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[157889,157896],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[157964,157965],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[157992,157993],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[158062,158069],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[158137,158138],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[158165,158166],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[158341,158358],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[158467,158482],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[158558,158559],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[158586,158587],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[158664,158679],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[158755,158756],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[158783,158784],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[158929,158935],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[159065,159070],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[159213,159220],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[159370,159378],"content":"DateTime","needQuote":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[159529,159535],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[159711,159724],"content":"ProcessModule","needQuote":true,"nodes":[{"content":"ProcessModule","pos":[0,13]}]},{"pos":[159914,159920],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[160106,160129],"content":"ProcessModuleCollection","needQuote":true,"nodes":[{"content":"ProcessModuleCollection","pos":[0,23]}]},{"pos":[160348,160353],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[160533,160553],"content":"ProcessPriorityClass","needQuote":true,"nodes":[{"content":"ProcessPriorityClass","pos":[0,20]}]},{"pos":[160766,160774],"content":"TimeSpan","needQuote":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[160978,160995],"content":"SafeProcessHandle","needQuote":true,"nodes":[{"content":"SafeProcessHandle","pos":[0,17]}]},{"pos":[161212,161239],"content":"Microsoft.Win32.SafeHandles","needQuote":true,"nodes":[{"content":"Microsoft.Win32.SafeHandles","pos":[0,27]}]},{"pos":[161445,161457],"content":"StreamReader","needQuote":true,"nodes":[{"content":"StreamReader","pos":[0,12]}]},{"pos":[161605,161614],"content":"System.IO","needQuote":true,"nodes":[{"content":"System.IO","pos":[0,9]}]},{"pos":[161766,161778],"content":"StreamWriter","needQuote":true,"nodes":[{"content":"StreamWriter","pos":[0,12]}]},{"pos":[161981,161997],"content":"ProcessStartInfo","needQuote":true,"nodes":[{"content":"ProcessStartInfo","pos":[0,16]}]},{"pos":[162237,162260],"content":"ProcessThreadCollection","needQuote":true,"nodes":[{"content":"ProcessThreadCollection","pos":[0,23]}]},{"pos":[162522,162546],"content":"DataReceivedEventHandler","needQuote":true,"nodes":[{"content":"DataReceivedEventHandler","pos":[0,24]}]},{"pos":[162775,162787],"content":"EventHandler","needQuote":true,"nodes":[{"content":"EventHandler","pos":[0,12]}]},{"pos":[162975,162982],"content":"Process","needQuote":true,"nodes":[{"content":"Process","pos":[0,7]}]},{"pos":[163132,163141],"content":"Process[]","needQuote":true,"nodes":[{"content":"Process[]","pos":[0,9]}]},{"pos":[163309,163316],"content":"Process","needQuote":true,"nodes":[{"content":"Process","pos":[0,7]}]},{"content":"[]","pos":[163369,163371]},{"pos":[163449,163456],"content":"Process","needQuote":true,"nodes":[{"content":"Process","pos":[0,7]}]},{"pos":[163508,163510],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[163674,163683],"content":"Dispose()","needQuote":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[163786,163793],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[163845,163846],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[163873,163874],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[163948,163955],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[164007,164008],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[164035,164036],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[164205,164234],"content":"PlatformNotSupportedException","needQuote":true,"nodes":[{"content":"PlatformNotSupportedException","pos":[0,29]}]},{"pos":[164467,164492],"content":"InvalidOperationException","needQuote":true,"nodes":[{"content":"InvalidOperationException","pos":[0,25]}]},{"pos":[164709,164730],"content":"NotSupportedException","needQuote":true,"nodes":[{"content":"NotSupportedException","pos":[0,21]}]},{"pos":[164926,164940],"content":"Win32Exception","needQuote":true,"nodes":[{"content":"Win32Exception","pos":[0,14]}]},{"pos":[165150,165167],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]},{"pos":[165402,165424],"content":"NullReferenceException","needQuote":true,"nodes":[{"content":"NullReferenceException","pos":[0,22]}]},{"pos":[165615,165636],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[165834,165849],"content":"SystemException","needQuote":true,"nodes":[{"content":"SystemException","pos":[0,15]}]},{"pos":[166021,166044],"content":"ObjectDisposedException","needQuote":true,"nodes":[{"content":"ObjectDisposedException","pos":[0,23]}]},{"pos":[166241,166262],"content":"FileNotFoundException","needQuote":true,"nodes":[{"content":"FileNotFoundException","pos":[0,21]}]}],"content":"items:\n- uid: System.Diagnostics.Process\n  commentId: T:System.Diagnostics.Process\n  id: Process\n  parent: System.Diagnostics\n  children:\n  - System.Diagnostics.Process.#ctor\n  - System.Diagnostics.Process.BasePriority\n  - System.Diagnostics.Process.BeginErrorReadLine\n  - System.Diagnostics.Process.BeginOutputReadLine\n  - System.Diagnostics.Process.CancelErrorRead\n  - System.Diagnostics.Process.CancelOutputRead\n  - System.Diagnostics.Process.Dispose\n  - System.Diagnostics.Process.Dispose(System.Boolean)\n  - System.Diagnostics.Process.EnableRaisingEvents\n  - System.Diagnostics.Process.EnterDebugMode\n  - System.Diagnostics.Process.ErrorDataReceived\n  - System.Diagnostics.Process.ExitCode\n  - System.Diagnostics.Process.Exited\n  - System.Diagnostics.Process.ExitTime\n  - System.Diagnostics.Process.GetCurrentProcess\n  - System.Diagnostics.Process.GetProcessById(System.Int32)\n  - System.Diagnostics.Process.GetProcessById(System.Int32,System.String)\n  - System.Diagnostics.Process.GetProcesses\n  - System.Diagnostics.Process.GetProcesses(System.String)\n  - System.Diagnostics.Process.GetProcessesByName(System.String)\n  - System.Diagnostics.Process.GetProcessesByName(System.String,System.String)\n  - System.Diagnostics.Process.HasExited\n  - System.Diagnostics.Process.Id\n  - System.Diagnostics.Process.Kill\n  - System.Diagnostics.Process.LeaveDebugMode\n  - System.Diagnostics.Process.MachineName\n  - System.Diagnostics.Process.MainModule\n  - System.Diagnostics.Process.MaxWorkingSet\n  - System.Diagnostics.Process.MinWorkingSet\n  - System.Diagnostics.Process.Modules\n  - System.Diagnostics.Process.NonpagedSystemMemorySize64\n  - System.Diagnostics.Process.OnExited\n  - System.Diagnostics.Process.OutputDataReceived\n  - System.Diagnostics.Process.PagedMemorySize64\n  - System.Diagnostics.Process.PagedSystemMemorySize64\n  - System.Diagnostics.Process.PeakPagedMemorySize64\n  - System.Diagnostics.Process.PeakVirtualMemorySize64\n  - System.Diagnostics.Process.PeakWorkingSet64\n  - System.Diagnostics.Process.PriorityBoostEnabled\n  - System.Diagnostics.Process.PriorityClass\n  - System.Diagnostics.Process.PrivateMemorySize64\n  - System.Diagnostics.Process.PrivilegedProcessorTime\n  - System.Diagnostics.Process.ProcessName\n  - System.Diagnostics.Process.ProcessorAffinity\n  - System.Diagnostics.Process.Refresh\n  - System.Diagnostics.Process.SafeHandle\n  - System.Diagnostics.Process.SessionId\n  - System.Diagnostics.Process.StandardError\n  - System.Diagnostics.Process.StandardInput\n  - System.Diagnostics.Process.StandardOutput\n  - System.Diagnostics.Process.Start\n  - System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)\n  - System.Diagnostics.Process.Start(System.String)\n  - System.Diagnostics.Process.Start(System.String,System.String)\n  - System.Diagnostics.Process.StartInfo\n  - System.Diagnostics.Process.StartTime\n  - System.Diagnostics.Process.Threads\n  - System.Diagnostics.Process.TotalProcessorTime\n  - System.Diagnostics.Process.UserProcessorTime\n  - System.Diagnostics.Process.VirtualMemorySize64\n  - System.Diagnostics.Process.WaitForExit\n  - System.Diagnostics.Process.WaitForExit(System.Int32)\n  - System.Diagnostics.Process.WorkingSet64\n  langs:\n  - csharp\n  - vb\n  name: Process\n  fullName: System.Diagnostics.Process\n  type: Class\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Process\n    path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n    startLine: 20\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Provides access to local and remote processes and enables you to start and stop local system processes.</p>\\n\"\n  syntax:\n    content: 'public class Process : IDisposable'\n    content.vb: >-\n      Public Class Process\n          Implements IDisposable\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: Process\n- uid: System.Diagnostics.Process.#ctor\n  commentId: M:System.Diagnostics.Process.#ctor\n  id: '#ctor'\n  parent: System.Diagnostics.Process\n  langs:\n  - csharp\n  - vb\n  name: Process()\n  fullName: System.Diagnostics.Process.Process()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n    startLine: 93\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Diagnostics.Process\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public Process()\n    content.vb: Public Sub New\n  see:\n  - type: System.Security.Permissions.SecurityAction.LinkDemand\n    commentId: F:System.Security.Permissions.SecurityAction.LinkDemand\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Process.Process()\n- uid: System.Diagnostics.Process.BasePriority\n  commentId: P:System.Diagnostics.Process.BasePriority\n  id: BasePriority\n  parent: System.Diagnostics.Process\n  langs:\n  - csharp\n  - vb\n  name: BasePriority\n  fullName: System.Diagnostics.Process.BasePriority\n  type: Property\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: BasePriority\n    path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n    startLine: 150\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets the base priority of the associated process.</p>\\n\"\n  syntax:\n    content: public int BasePriority { get; }\n    content.vb: Public ReadOnly Property BasePriority As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The base priority, which is computed from the <xref href=\\\"System.Diagnostics.Process.PriorityClass\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the associated process.</p>\\n\"\n  exceptions:\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Windows Me); set the <xref href=\\\"System.Diagnostics.ProcessStartInfo.UseShellExecute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property to <strong>false</strong> to access this property on Windows 98 and Windows Me.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The process has exited.</p>\\n<p>-or- </p>\\n<p>The process has not started, so there is no process ID. </p>\\n\"\n  seealso:\n  - type: System.Diagnostics.Process.PriorityClass\n    commentId: P:System.Diagnostics.Process.PriorityClass\n  - type: System.Diagnostics.ProcessPriorityClass\n    commentId: T:System.Diagnostics.ProcessPriorityClass\n  - type: System.Diagnostics.ThreadPriorityLevel\n    commentId: T:System.Diagnostics.ThreadPriorityLevel\n  see:\n  - type: System.Security.Permissions.SecurityAction.LinkDemand\n    commentId: F:System.Security.Permissions.SecurityAction.LinkDemand\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Process.BasePriority\n- uid: System.Diagnostics.Process.EnableRaisingEvents\n  commentId: P:System.Diagnostics.Process.EnableRaisingEvents\n  id: EnableRaisingEvents\n  parent: System.Diagnostics.Process\n  langs:\n  - csharp\n  - vb\n  name: EnableRaisingEvents\n  fullName: System.Diagnostics.Process.EnableRaisingEvents\n  type: Property\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: EnableRaisingEvents\n    path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n    startLine: 553\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets or sets whether the <xref href=\\\"System.Diagnostics.Process.Exited\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> event should be raised when the process terminates.</p>\\n\"\n  syntax:\n    content: public bool EnableRaisingEvents { get; set; }\n    content.vb: Public Property EnableRaisingEvents As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the <xref href=\\\"System.Diagnostics.Process.Exited\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> event should be raised when the associated process is terminated (through either an exit or a call to <xref href=\\\"System.Diagnostics.Process.Kill\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>); otherwise, <strong>false</strong>. The default is <strong>false</strong>.</p>\\n\"\n  seealso:\n  - type: System.Diagnostics.Process.WaitForExit(System.Int32)\n    commentId: M:System.Diagnostics.Process.WaitForExit(System.Int32)\n  - type: System.Diagnostics.Process.Exited\n    commentId: E:System.Diagnostics.Process.Exited\n  - type: System.Diagnostics.Process.CloseMainWindow\n    commentId: M:System.Diagnostics.Process.CloseMainWindow\n  - type: System.Diagnostics.Process.Kill\n    commentId: M:System.Diagnostics.Process.Kill\n  - type: System.Diagnostics.Process.Handle\n    commentId: P:System.Diagnostics.Process.Handle\n  - type: System.Diagnostics.Process.ExitTime\n    commentId: P:System.Diagnostics.Process.ExitTime\n  - type: System.Diagnostics.Process.HasExited\n    commentId: P:System.Diagnostics.Process.HasExited\n  see:\n  - type: System.Security.Permissions.SecurityAction.LinkDemand\n    commentId: F:System.Security.Permissions.SecurityAction.LinkDemand\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: Process.EnableRaisingEvents\n- uid: System.Diagnostics.Process.ExitCode\n  commentId: P:System.Diagnostics.Process.ExitCode\n  id: ExitCode\n  parent: System.Diagnostics.Process\n  langs:\n  - csharp\n  - vb\n  name: ExitCode\n  fullName: System.Diagnostics.Process.ExitCode\n  type: Property\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ExitCode\n    path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n    startLine: 166\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets the value that the associated process specified when it terminated.</p>\\n\"\n  syntax:\n    content: public int ExitCode { get; }\n    content.vb: Public ReadOnly Property ExitCode As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The code that the associated process specified when it terminated.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The process has not exited.</p>\\n<p>-or- </p>\\n<p>The process <xref href=\\\"System.Diagnostics.Process.Handle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is not valid. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>You are trying to access the <xref href=\\\"System.Diagnostics.Process.ExitCode\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property for a process that is running on a remote computer. This property is available only for processes that are running on the local computer.</p>\\n\"\n  seealso:\n  - type: System.Diagnostics.Process.HasExited\n    commentId: P:System.Diagnostics.Process.HasExited\n  - type: System.Diagnostics.Process.CloseMainWindow\n    commentId: M:System.Diagnostics.Process.CloseMainWindow\n  - type: System.Diagnostics.Process.Kill\n    commentId: M:System.Diagnostics.Process.Kill\n  - type: System.Diagnostics.Process.WaitForExit(System.Int32)\n    commentId: M:System.Diagnostics.Process.WaitForExit(System.Int32)\n  - type: System.Diagnostics.Process.EnableRaisingEvents\n    commentId: P:System.Diagnostics.Process.EnableRaisingEvents\n  see:\n  - type: System.Security.Permissions.SecurityAction.LinkDemand\n    commentId: F:System.Security.Permissions.SecurityAction.LinkDemand\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Process.ExitCode\n- uid: System.Diagnostics.Process.ExitTime\n  commentId: P:System.Diagnostics.Process.ExitTime\n  id: ExitTime\n  parent: System.Diagnostics.Process\n  langs:\n  - csharp\n  - vb\n  name: ExitTime\n  fullName: System.Diagnostics.Process.ExitTime\n  type: Property\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ExitTime\n    path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n    startLine: 203\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets the time that the associated process exited.</p>\\n\"\n  syntax:\n    content: public DateTime ExitTime { get; }\n    content.vb: Public ReadOnly Property ExitTime As Date\n    parameters: []\n    return:\n      type: System.DateTime\n      description: \"\\n<p>A <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that indicates when the associated process was terminated.</p>\\n\"\n  exceptions:\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>You are trying to access the <xref href=\\\"System.Diagnostics.Process.ExitTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property for a process that is running on a remote computer. This property is available only for processes that are running on the local computer.</p>\\n\"\n  seealso:\n  - type: System.Diagnostics.Process.Handle\n    commentId: P:System.Diagnostics.Process.Handle\n  - type: System.Diagnostics.Process.ExitCode\n    commentId: P:System.Diagnostics.Process.ExitCode\n  see:\n  - type: System.Security.Permissions.SecurityAction.LinkDemand\n    commentId: F:System.Security.Permissions.SecurityAction.LinkDemand\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Process.ExitTime\n- uid: System.Diagnostics.Process.HasExited\n  commentId: P:System.Diagnostics.Process.HasExited\n  id: HasExited\n  parent: System.Diagnostics.Process\n  langs:\n  - csharp\n  - vb\n  name: HasExited\n  fullName: System.Diagnostics.Process.HasExited\n  type: Property\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: HasExited\n    path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n    startLine: 181\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets a value indicating whether the associated process has been terminated.</p>\\n\"\n  syntax:\n    content: public bool HasExited { get; }\n    content.vb: Public ReadOnly Property HasExited As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the operating system process referenced by the <xref href=\\\"System.Diagnostics.Process\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> component has terminated; otherwise, <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>There is no process associated with the object. </p>\\n\"\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: \"\\n<p>The exit code for the process could not be retrieved. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>You are trying to access the <xref href=\\\"System.Diagnostics.Process.HasExited\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property for a process that is running on a remote computer. This property is available only for processes that are running on the local computer.</p>\\n\"\n  seealso:\n  - type: System.Diagnostics.Process.ExitCode\n    commentId: P:System.Diagnostics.Process.ExitCode\n  - type: System.Diagnostics.Process.ExitTime\n    commentId: P:System.Diagnostics.Process.ExitTime\n  - type: System.Diagnostics.Process.WaitForExit(System.Int32)\n    commentId: M:System.Diagnostics.Process.WaitForExit(System.Int32)\n  - type: System.Diagnostics.Process.EnableRaisingEvents\n    commentId: P:System.Diagnostics.Process.EnableRaisingEvents\n  - type: System.Diagnostics.Process.OnExited\n    commentId: M:System.Diagnostics.Process.OnExited\n  see:\n  - type: System.Security.Permissions.SecurityAction.LinkDemand\n    commentId: F:System.Security.Permissions.SecurityAction.LinkDemand\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Process.HasExited\n- uid: System.Diagnostics.Process.Id\n  commentId: P:System.Diagnostics.Process.Id\n  id: Id\n  parent: System.Diagnostics.Process\n  langs:\n  - csharp\n  - vb\n  name: Id\n  fullName: System.Diagnostics.Process.Id\n  type: Property\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Id\n    path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n    startLine: 223\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets the unique identifier for the associated process.</p>\\n\"\n  syntax:\n    content: public int Id { get; }\n    content.vb: Public ReadOnly Property Id As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The system-generated unique identifier of the process that is referenced by this <xref href=\\\"System.Diagnostics.Process\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The process's <xref href=\\\"System.Diagnostics.Process.Id\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property has not been set.</p>\\n<p>-or- </p>\\n<p>There is no process associated with this <xref href=\\\"System.Diagnostics.Process\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object. </p>\\n\"\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Windows Me); set the <xref href=\\\"System.Diagnostics.ProcessStartInfo.UseShellExecute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property to <strong>false</strong> to access this property on Windows 98 and Windows Me.</p>\\n\"\n  seealso:\n  - type: System.Diagnostics.Process.Handle\n    commentId: P:System.Diagnostics.Process.Handle\n  - type: System.Diagnostics.Process.GetProcessById(System.Int32,System.String)\n    commentId: M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)\n  see:\n  - type: System.Security.Permissions.SecurityAction.LinkDemand\n    commentId: F:System.Security.Permissions.SecurityAction.LinkDemand\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Process.Id\n- uid: System.Diagnostics.Process.MachineName\n  commentId: P:System.Diagnostics.Process.MachineName\n  id: MachineName\n  parent: System.Diagnostics.Process\n  langs:\n  - csharp\n  - vb\n  name: MachineName\n  fullName: System.Diagnostics.Process.MachineName\n  type: Property\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: MachineName\n    path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n    startLine: 238\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets the name of the computer the associated process is running on.</p>\\n\"\n  syntax:\n    content: public string MachineName { get; }\n    content.vb: Public ReadOnly Property MachineName As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The name of the computer that the associated process is running on.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>There is no process associated with this <xref href=\\\"System.Diagnostics.Process\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object. </p>\\n\"\n  seealso:\n  - type: System.Diagnostics.Process.GetProcesses\n    commentId: M:System.Diagnostics.Process.GetProcesses\n  - type: System.Diagnostics.Process.GetProcessById(System.Int32,System.String)\n    commentId: M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)\n  - type: System.Diagnostics.Process.GetProcessesByName(System.String)\n    commentId: M:System.Diagnostics.Process.GetProcessesByName(System.String)\n  see:\n  - type: System.Security.Permissions.SecurityAction.LinkDemand\n    commentId: F:System.Security.Permissions.SecurityAction.LinkDemand\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Process.MachineName\n- uid: System.Diagnostics.Process.MainModule\n  commentId: P:System.Diagnostics.Process.MainModule\n  id: MainModule\n  parent: System.Diagnostics.Process\n  langs:\n  - csharp\n  - vb\n  name: MainModule\n  fullName: System.Diagnostics.Process.MainModule\n  type: Property\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/ref/System.Diagnostics.Process.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: MainModule\n    path: src/System.Diagnostics.Process/ref/System.Diagnostics.Process.cs\n    startLine: 35\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets the main module for the associated process.</p>\\n\"\n  syntax:\n    content: public ProcessModule MainModule { get; }\n    content.vb: Public ReadOnly Property MainModule As ProcessModule\n    parameters: []\n    return:\n      type: System.Diagnostics.ProcessModule\n      description: \"\\n<p>The <xref href=\\\"System.Diagnostics.ProcessModule\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that was used to start the process.</p>\\n\"\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>You are trying to access the <xref href=\\\"System.Diagnostics.Process.MainModule\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property for a process that is running on a remote computer. This property is available only for processes that are running on the local computer.</p>\\n\"\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: \"\\n<p>A 32-bit process is trying to access the modules of a 64-bit process.</p>\\n\"\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Windows Me); set <xref href=\\\"System.Diagnostics.ProcessStartInfo.UseShellExecute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to <strong>false</strong> to access this property on Windows 98 and Windows Me.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The process <xref href=\\\"System.Diagnostics.Process.Id\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is not available.</p>\\n<p>-or- </p>\\n<p>The process has exited. </p>\\n\"\n  seealso:\n  - type: System.Diagnostics.Process.Modules\n    commentId: P:System.Diagnostics.Process.Modules\n  see:\n  - type: System.Security.Permissions.SecurityAction.LinkDemand\n    commentId: F:System.Security.Permissions.SecurityAction.LinkDemand\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Process.MainModule\n- uid: System.Diagnostics.Process.MaxWorkingSet\n  commentId: P:System.Diagnostics.Process.MaxWorkingSet\n  id: MaxWorkingSet\n  parent: System.Diagnostics.Process\n  langs:\n  - csharp\n  - vb\n  name: MaxWorkingSet\n  fullName: System.Diagnostics.Process.MaxWorkingSet\n  type: Property\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: MaxWorkingSet\n    path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n    startLine: 253\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets or sets the maximum allowable working set size, in bytes, for the associated process.</p>\\n\"\n  syntax:\n    content: public IntPtr MaxWorkingSet { get; set; }\n    content.vb: Public Property MaxWorkingSet As IntPtr\n    parameters: []\n    return:\n      type: System.IntPtr\n      description: \"\\n<p>The maximum working set size that is allowed in memory for the process, in bytes.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The maximum working set size is invalid. It must be greater than or equal to the minimum working set size.</p>\\n\"\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: \"\\n<p>Working set information cannot be retrieved from the associated process resource.</p>\\n<p>-or- </p>\\n<p>The process identifier or process handle is zero because the process has not been started. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>You are trying to access the <xref href=\\\"System.Diagnostics.Process.MaxWorkingSet\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property for a process that is running on a remote computer. This property is available only for processes that are running on the local computer.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The process <xref href=\\\"System.Diagnostics.Process.Id\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is not available.</p>\\n<p>-or- </p>\\n<p>The process has exited. </p>\\n\"\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property. </p>\\n\"\n  seealso:\n  - type: System.Diagnostics.Process.MinWorkingSet\n    commentId: P:System.Diagnostics.Process.MinWorkingSet\n  - type: System.Diagnostics.Process.WorkingSet64\n    commentId: P:System.Diagnostics.Process.WorkingSet64\n  - type: System.Diagnostics.Process.PeakWorkingSet64\n    commentId: P:System.Diagnostics.Process.PeakWorkingSet64\n  see:\n  - type: System.Security.Permissions.SecurityAction.LinkDemand\n    commentId: F:System.Security.Permissions.SecurityAction.LinkDemand\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: Process.MaxWorkingSet\n- uid: System.Diagnostics.Process.MinWorkingSet\n  commentId: P:System.Diagnostics.Process.MinWorkingSet\n  id: MinWorkingSet\n  parent: System.Diagnostics.Process\n  langs:\n  - csharp\n  - vb\n  name: MinWorkingSet\n  fullName: System.Diagnostics.Process.MinWorkingSet\n  type: Property\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: MinWorkingSet\n    path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n    startLine: 272\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets or sets the minimum allowable working set size, in bytes, for the associated process.</p>\\n\"\n  syntax:\n    content: public IntPtr MinWorkingSet { get; set; }\n    content.vb: Public Property MinWorkingSet As IntPtr\n    parameters: []\n    return:\n      type: System.IntPtr\n      description: \"\\n<p>The minimum working set size that is required in memory for the process, in bytes.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The minimum working set size is invalid. It must be less than or equal to the maximum working set size.</p>\\n\"\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: \"\\n<p>Working set information cannot be retrieved from the associated process resource.</p>\\n<p>-or- </p>\\n<p>The process identifier or process handle is zero because the process has not been started. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>You are trying to access the <xref href=\\\"System.Diagnostics.Process.MinWorkingSet\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property for a process that is running on a remote computer. This property is available only for processes that are running on the local computer. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The process <xref href=\\\"System.Diagnostics.Process.Id\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is not available.</p>\\n<p>-or- </p>\\n<p>The process has exited.</p>\\n\"\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property. </p>\\n\"\n  seealso:\n  - type: System.Diagnostics.Process.MaxWorkingSet\n    commentId: P:System.Diagnostics.Process.MaxWorkingSet\n  - type: System.Diagnostics.Process.WorkingSet64\n    commentId: P:System.Diagnostics.Process.WorkingSet64\n  - type: System.Diagnostics.Process.PeakWorkingSet64\n    commentId: P:System.Diagnostics.Process.PeakWorkingSet64\n  see:\n  - type: System.Security.Permissions.SecurityAction.LinkDemand\n    commentId: F:System.Security.Permissions.SecurityAction.LinkDemand\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: Process.MinWorkingSet\n- uid: System.Diagnostics.Process.Modules\n  commentId: P:System.Diagnostics.Process.Modules\n  id: Modules\n  parent: System.Diagnostics.Process\n  langs:\n  - csharp\n  - vb\n  name: Modules\n  fullName: System.Diagnostics.Process.Modules\n  type: Property\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Modules\n    path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n    startLine: 285\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets the modules that have been loaded by the associated process.</p>\\n\"\n  syntax:\n    content: public ProcessModuleCollection Modules { get; }\n    content.vb: Public ReadOnly Property Modules As ProcessModuleCollection\n    parameters: []\n    return:\n      type: System.Diagnostics.ProcessModuleCollection\n      description: \"\\n<p>An array of type <xref href=\\\"System.Diagnostics.ProcessModule\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents the modules that have been loaded by the associated process.</p>\\n\"\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>You are attempting to access the <xref href=\\\"System.Diagnostics.Process.Modules\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property for a process that is running on a remote computer. This property is available only for processes that are running on the local computer. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The process <xref href=\\\"System.Diagnostics.Process.Id\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is not available.</p>\\n\"\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Windows Me); set <xref href=\\\"System.Diagnostics.ProcessStartInfo.UseShellExecute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to <strong>false</strong> to access this property on Windows 98 and Windows Me.</p>\\n\"\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: \"\\n<p>You are attempting to access the <xref href=\\\"System.Diagnostics.Process.Modules\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property for either the system process or the idle process. These processes do not have modules.</p>\\n\"\n  seealso:\n  - type: System.Diagnostics.ProcessModule\n    commentId: T:System.Diagnostics.ProcessModule\n  see:\n  - type: System.Security.Permissions.SecurityAction.LinkDemand\n    commentId: F:System.Security.Permissions.SecurityAction.LinkDemand\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Process.Modules\n- uid: System.Diagnostics.Process.NonpagedSystemMemorySize64\n  commentId: P:System.Diagnostics.Process.NonpagedSystemMemorySize64\n  id: NonpagedSystemMemorySize64\n  parent: System.Diagnostics.Process\n  langs:\n  - csharp\n  - vb\n  name: NonpagedSystemMemorySize64\n  fullName: System.Diagnostics.Process.NonpagedSystemMemorySize64\n  type: Property\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: NonpagedSystemMemorySize64\n    path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n    startLine: 305\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets the amount of nonpaged system memory, in bytes, allocated for the associated process.</p>\\n\"\n  syntax:\n    content: public long NonpagedSystemMemorySize64 { get; }\n    content.vb: Public ReadOnly Property NonpagedSystemMemorySize64 As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>The amount of system memory, in bytes, allocated for the associated process that cannot be written to the virtual memory paging file.</p>\\n\"\n  exceptions:\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</p>\\n\"\n  seealso:\n  - type: System.Diagnostics.Process.PagedSystemMemorySize64\n    commentId: P:System.Diagnostics.Process.PagedSystemMemorySize64\n  see:\n  - type: System.Security.Permissions.SecurityAction.LinkDemand\n    commentId: F:System.Security.Permissions.SecurityAction.LinkDemand\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Process.NonpagedSystemMemorySize64\n- uid: System.Diagnostics.Process.PagedMemorySize64\n  commentId: P:System.Diagnostics.Process.PagedMemorySize64\n  id: PagedMemorySize64\n  parent: System.Diagnostics.Process\n  langs:\n  - csharp\n  - vb\n  name: PagedMemorySize64\n  fullName: System.Diagnostics.Process.PagedMemorySize64\n  type: Property\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: PagedMemorySize64\n    path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n    startLine: 314\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets the amount of paged memory, in bytes, allocated for the associated process.</p>\\n\"\n  syntax:\n    content: public long PagedMemorySize64 { get; }\n    content.vb: Public ReadOnly Property PagedMemorySize64 As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>The amount of memory, in bytes, allocated in the virtual memory paging file for the associated process.</p>\\n\"\n  exceptions:\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</p>\\n\"\n  seealso:\n  - type: System.Diagnostics.Process.PeakPagedMemorySize64\n    commentId: P:System.Diagnostics.Process.PeakPagedMemorySize64\n  - type: System.Diagnostics.Process.PagedSystemMemorySize64\n    commentId: P:System.Diagnostics.Process.PagedSystemMemorySize64\n  see:\n  - type: System.Security.Permissions.SecurityAction.LinkDemand\n    commentId: F:System.Security.Permissions.SecurityAction.LinkDemand\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Process.PagedMemorySize64\n- uid: System.Diagnostics.Process.PagedSystemMemorySize64\n  commentId: P:System.Diagnostics.Process.PagedSystemMemorySize64\n  id: PagedSystemMemorySize64\n  parent: System.Diagnostics.Process\n  langs:\n  - csharp\n  - vb\n  name: PagedSystemMemorySize64\n  fullName: System.Diagnostics.Process.PagedSystemMemorySize64\n  type: Property\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: PagedSystemMemorySize64\n    path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n    startLine: 323\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets the amount of pageable system memory, in bytes, allocated for the associated process.</p>\\n\"\n  syntax:\n    content: public long PagedSystemMemorySize64 { get; }\n    content.vb: Public ReadOnly Property PagedSystemMemorySize64 As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>The amount of system memory, in bytes, allocated for the associated process that can be written to the virtual memory paging file.</p>\\n\"\n  exceptions:\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</p>\\n\"\n  seealso:\n  - type: System.Diagnostics.Process.PagedSystemMemorySize64\n    commentId: P:System.Diagnostics.Process.PagedSystemMemorySize64\n  - type: System.Diagnostics.Process.NonpagedSystemMemorySize64\n    commentId: P:System.Diagnostics.Process.NonpagedSystemMemorySize64\n  see:\n  - type: System.Security.Permissions.SecurityAction.LinkDemand\n    commentId: F:System.Security.Permissions.SecurityAction.LinkDemand\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Process.PagedSystemMemorySize64\n- uid: System.Diagnostics.Process.PeakPagedMemorySize64\n  commentId: P:System.Diagnostics.Process.PeakPagedMemorySize64\n  id: PeakPagedMemorySize64\n  parent: System.Diagnostics.Process\n  langs:\n  - csharp\n  - vb\n  name: PeakPagedMemorySize64\n  fullName: System.Diagnostics.Process.PeakPagedMemorySize64\n  type: Property\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: PeakPagedMemorySize64\n    path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n    startLine: 332\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets the maximum amount of memory in the virtual memory paging file, in bytes, used by the associated process.</p>\\n\"\n  syntax:\n    content: public long PeakPagedMemorySize64 { get; }\n    content.vb: Public ReadOnly Property PeakPagedMemorySize64 As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>The maximum amount of memory, in bytes, allocated in the virtual memory paging file for the associated process since it was started.</p>\\n\"\n  exceptions:\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</p>\\n\"\n  seealso:\n  - type: System.Diagnostics.Process.PagedMemorySize64\n    commentId: P:System.Diagnostics.Process.PagedMemorySize64\n  see:\n  - type: System.Security.Permissions.SecurityAction.LinkDemand\n    commentId: F:System.Security.Permissions.SecurityAction.LinkDemand\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Process.PeakPagedMemorySize64\n- uid: System.Diagnostics.Process.PeakVirtualMemorySize64\n  commentId: P:System.Diagnostics.Process.PeakVirtualMemorySize64\n  id: PeakVirtualMemorySize64\n  parent: System.Diagnostics.Process\n  langs:\n  - csharp\n  - vb\n  name: PeakVirtualMemorySize64\n  fullName: System.Diagnostics.Process.PeakVirtualMemorySize64\n  type: Property\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: PeakVirtualMemorySize64\n    path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n    startLine: 350\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets the maximum amount of virtual memory, in bytes, used by the associated process.</p>\\n\"\n  syntax:\n    content: public long PeakVirtualMemorySize64 { get; }\n    content.vb: Public ReadOnly Property PeakVirtualMemorySize64 As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>The maximum amount of virtual memory, in bytes, allocated for the associated process since it was started.</p>\\n\"\n  exceptions:\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</p>\\n\"\n  seealso:\n  - type: System.Diagnostics.Process.VirtualMemorySize64\n    commentId: P:System.Diagnostics.Process.VirtualMemorySize64\n  see:\n  - type: System.Security.Permissions.SecurityAction.LinkDemand\n    commentId: F:System.Security.Permissions.SecurityAction.LinkDemand\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Process.PeakVirtualMemorySize64\n- uid: System.Diagnostics.Process.PeakWorkingSet64\n  commentId: P:System.Diagnostics.Process.PeakWorkingSet64\n  id: PeakWorkingSet64\n  parent: System.Diagnostics.Process\n  langs:\n  - csharp\n  - vb\n  name: PeakWorkingSet64\n  fullName: System.Diagnostics.Process.PeakWorkingSet64\n  type: Property\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: PeakWorkingSet64\n    path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n    startLine: 341\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets the maximum amount of physical memory, in bytes, used by the associated process.</p>\\n\"\n  syntax:\n    content: public long PeakWorkingSet64 { get; }\n    content.vb: Public ReadOnly Property PeakWorkingSet64 As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>The maximum amount of physical memory, in bytes, allocated for the associated process since it was started.</p>\\n\"\n  exceptions:\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</p>\\n\"\n  seealso:\n  - type: System.Diagnostics.Process.WorkingSet64\n    commentId: P:System.Diagnostics.Process.WorkingSet64\n  - type: System.Diagnostics.Process.MinWorkingSet\n    commentId: P:System.Diagnostics.Process.MinWorkingSet\n  - type: System.Diagnostics.Process.MaxWorkingSet\n    commentId: P:System.Diagnostics.Process.MaxWorkingSet\n  see:\n  - type: System.Security.Permissions.SecurityAction.LinkDemand\n    commentId: F:System.Security.Permissions.SecurityAction.LinkDemand\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Process.PeakWorkingSet64\n- uid: System.Diagnostics.Process.PriorityBoostEnabled\n  commentId: P:System.Diagnostics.Process.PriorityBoostEnabled\n  id: PriorityBoostEnabled\n  parent: System.Diagnostics.Process\n  langs:\n  - csharp\n  - vb\n  name: PriorityBoostEnabled\n  fullName: System.Diagnostics.Process.PriorityBoostEnabled\n  type: Property\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: PriorityBoostEnabled\n    path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n    startLine: 366\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets or sets a value indicating whether the associated process priority should temporarily be boosted by the operating system when the main window has the focus.</p>\\n\"\n  syntax:\n    content: public bool PriorityBoostEnabled { get; set; }\n    content.vb: Public Property PriorityBoostEnabled As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if dynamic boosting of the process priority should take place for a process when it is taken out of the wait state; otherwise, <strong>false</strong>. The default is <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: \"\\n<p>Priority boost information could not be retrieved from the associated process resource. </p>\\n\"\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</p>\\n<p>-or- </p>\\n<p>The process identifier or process handle is zero. (The process has not been started.) </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>You are attempting to access the <xref href=\\\"System.Diagnostics.Process.PriorityBoostEnabled\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property for a process that is running on a remote computer. This property is available only for processes that are running on the local computer. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The process <xref href=\\\"System.Diagnostics.Process.Id\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is not available.</p>\\n\"\n  seealso:\n  - type: System.Diagnostics.Process.PriorityClass\n    commentId: P:System.Diagnostics.Process.PriorityClass\n  - type: System.Diagnostics.Process.BasePriority\n    commentId: P:System.Diagnostics.Process.BasePriority\n  see:\n  - type: System.Security.Permissions.SecurityAction.LinkDemand\n    commentId: F:System.Security.Permissions.SecurityAction.LinkDemand\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: Process.PriorityBoostEnabled\n- uid: System.Diagnostics.Process.PriorityClass\n  commentId: P:System.Diagnostics.Process.PriorityClass\n  id: PriorityClass\n  parent: System.Diagnostics.Process\n  langs:\n  - csharp\n  - vb\n  name: PriorityClass\n  fullName: System.Diagnostics.Process.PriorityClass\n  type: Property\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: PriorityClass\n    path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n    startLine: 391\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets or sets the overall priority category for the associated process.</p>\\n\"\n  syntax:\n    content: public ProcessPriorityClass PriorityClass { get; set; }\n    content.vb: Public Property PriorityClass As ProcessPriorityClass\n    parameters: []\n    return:\n      type: System.Diagnostics.ProcessPriorityClass\n      description: \"\\n<p>The priority category for the associated process, from which the <xref href=\\\"System.Diagnostics.Process.BasePriority\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the process is calculated.</p>\\n\"\n  exceptions:\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: \"\\n<p>Process priority information could not be set or retrieved from the associated process resource.</p>\\n<p>-or- </p>\\n<p>The process identifier or process handle is zero. (The process has not been started.) </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>You are attempting to access the <xref href=\\\"System.Diagnostics.Process.PriorityClass\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property for a process that is running on a remote computer. This property is available only for processes that are running on the local computer. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The process <xref href=\\\"System.Diagnostics.Process.Id\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is not available.</p>\\n\"\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>You have set the <xref href=\\\"System.Diagnostics.Process.PriorityClass\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to <strong>AboveNormal</strong> or <strong>BelowNormal</strong> when using Windows 98 or Windows Millennium Edition (Windows Me). These platforms do not support those values for the priority class. </p>\\n\"\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: \"\\n<p>Priority class cannot be set because it does not use a valid value, as defined in the <xref href=\\\"System.Diagnostics.ProcessPriorityClass\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> enumeration.</p>\\n\"\n  seealso:\n  - type: System.Diagnostics.Process.BasePriority\n    commentId: P:System.Diagnostics.Process.BasePriority\n  - type: System.Diagnostics.Process.PriorityBoostEnabled\n    commentId: P:System.Diagnostics.Process.PriorityBoostEnabled\n  see:\n  - type: System.Security.Permissions.SecurityAction.LinkDemand\n    commentId: F:System.Security.Permissions.SecurityAction.LinkDemand\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: Process.PriorityClass\n- uid: System.Diagnostics.Process.PrivateMemorySize64\n  commentId: P:System.Diagnostics.Process.PrivateMemorySize64\n  id: PrivateMemorySize64\n  parent: System.Diagnostics.Process\n  langs:\n  - csharp\n  - vb\n  name: PrivateMemorySize64\n  fullName: System.Diagnostics.Process.PrivateMemorySize64\n  type: Property\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: PrivateMemorySize64\n    path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n    startLine: 415\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets the amount of private memory, in bytes, allocated for the associated process.</p>\\n\"\n  syntax:\n    content: public long PrivateMemorySize64 { get; }\n    content.vb: Public ReadOnly Property PrivateMemorySize64 As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>The amount of memory, in bytes, allocated for the associated process that cannot be shared with other processes.</p>\\n\"\n  exceptions:\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</p>\\n\"\n  see:\n  - type: System.Security.Permissions.SecurityAction.LinkDemand\n    commentId: F:System.Security.Permissions.SecurityAction.LinkDemand\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Process.PrivateMemorySize64\n- uid: System.Diagnostics.Process.PrivilegedProcessorTime\n  commentId: P:System.Diagnostics.Process.PrivilegedProcessorTime\n  id: PrivilegedProcessorTime\n  parent: System.Diagnostics.Process\n  langs:\n  - csharp\n  - vb\n  name: PrivilegedProcessorTime\n  fullName: System.Diagnostics.Process.PrivilegedProcessorTime\n  type: Property\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/ref/System.Diagnostics.Process.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: PrivilegedProcessorTime\n    path: src/System.Diagnostics.Process/ref/System.Diagnostics.Process.cs\n    startLine: 48\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets the privileged processor time for this process.</p>\\n\"\n  syntax:\n    content: public TimeSpan PrivilegedProcessorTime { get; }\n    content.vb: Public ReadOnly Property PrivilegedProcessorTime As TimeSpan\n    parameters: []\n    return:\n      type: System.TimeSpan\n      description: \"\\n<p>A <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that indicates the amount of time that the process has spent running code inside the operating system core.</p>\\n\"\n  exceptions:\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>You are attempting to access the <xref href=\\\"System.Diagnostics.Process.PrivilegedProcessorTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property for a process that is running on a remote computer. This property is available only for processes that are running on the local computer. </p>\\n\"\n  seealso:\n  - type: System.Diagnostics.Process.UserProcessorTime\n    commentId: P:System.Diagnostics.Process.UserProcessorTime\n  - type: System.Diagnostics.Process.PrivilegedProcessorTime\n    commentId: P:System.Diagnostics.Process.PrivilegedProcessorTime\n  see:\n  - type: System.Security.Permissions.SecurityAction.LinkDemand\n    commentId: F:System.Security.Permissions.SecurityAction.LinkDemand\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Process.PrivilegedProcessorTime\n- uid: System.Diagnostics.Process.ProcessName\n  commentId: P:System.Diagnostics.Process.ProcessName\n  id: ProcessName\n  parent: System.Diagnostics.Process\n  langs:\n  - csharp\n  - vb\n  name: ProcessName\n  fullName: System.Diagnostics.Process.ProcessName\n  type: Property\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ProcessName\n    path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n    startLine: 430\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets the name of the process.</p>\\n\"\n  syntax:\n    content: public string ProcessName { get; }\n    content.vb: Public ReadOnly Property ProcessName As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The name that the system uses to identify the process to the user.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The process does not have an identifier, or no process is associated with the <xref href=\\\"System.Diagnostics.Process\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or- </p>\\n<p>The associated process has exited. </p>\\n\"\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Windows Me); set <xref href=\\\"System.Diagnostics.ProcessStartInfo.UseShellExecute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to <strong>false</strong> to access this property on Windows 98 and Windows Me.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The process is not on this computer.</p>\\n\"\n  seealso:\n  - type: System.Diagnostics.Process.GetProcessesByName(System.String)\n    commentId: M:System.Diagnostics.Process.GetProcessesByName(System.String)\n  see:\n  - type: System.Security.Permissions.SecurityAction.LinkDemand\n    commentId: F:System.Security.Permissions.SecurityAction.LinkDemand\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Process.ProcessName\n- uid: System.Diagnostics.Process.ProcessorAffinity\n  commentId: P:System.Diagnostics.Process.ProcessorAffinity\n  id: ProcessorAffinity\n  parent: System.Diagnostics.Process\n  langs:\n  - csharp\n  - vb\n  name: ProcessorAffinity\n  fullName: System.Diagnostics.Process.ProcessorAffinity\n  type: Property\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ProcessorAffinity\n    path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n    startLine: 445\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets or sets the processors on which the threads in this process can be scheduled to run.</p>\\n\"\n  syntax:\n    content: public IntPtr ProcessorAffinity { get; set; }\n    content.vb: Public Property ProcessorAffinity As IntPtr\n    parameters: []\n    return:\n      type: System.IntPtr\n      description: \"\\n<p>A bitmask representing the processors that the threads in the associated process can run on. The default depends on the number of processors on the computer. The default value is 2 n -1, where n is the number of processors.</p>\\n\"\n  exceptions:\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: \"\\n<p>\\n<xref href=\\\"System.Diagnostics.Process.ProcessorAffinity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> information could not be set or retrieved from the associated process resource.</p>\\n<p>-or- </p>\\n<p>The process identifier or process handle is zero. (The process has not been started.) </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>You are attempting to access the <xref href=\\\"System.Diagnostics.Process.ProcessorAffinity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property for a process that is running on a remote computer. This property is available only for processes that are running on the local computer. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The process <xref href=\\\"System.Diagnostics.Process.Id\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> was not available.</p>\\n<p>-or- </p>\\n<p>The process has exited. </p>\\n\"\n  see:\n  - type: System.Security.Permissions.SecurityAction.LinkDemand\n    commentId: F:System.Security.Permissions.SecurityAction.LinkDemand\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: Process.ProcessorAffinity\n- uid: System.Diagnostics.Process.SafeHandle\n  commentId: P:System.Diagnostics.Process.SafeHandle\n  id: SafeHandle\n  parent: System.Diagnostics.Process\n  langs:\n  - csharp\n  - vb\n  name: SafeHandle\n  fullName: System.Diagnostics.Process.SafeHandle\n  type: Property\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SafeHandle\n    path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n    startLine: 126\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets the native handle to this process.</p>\\n\"\n  syntax:\n    content: public SafeProcessHandle SafeHandle { get; }\n    content.vb: Public ReadOnly Property SafeHandle As SafeProcessHandle\n    parameters: []\n    return:\n      type: Microsoft.Win32.SafeHandles.SafeProcessHandle\n      description: \"\\n<p>The native handle to this process.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Process.SafeHandle\n- uid: System.Diagnostics.Process.SessionId\n  commentId: P:System.Diagnostics.Process.SessionId\n  id: SessionId\n  parent: System.Diagnostics.Process\n  langs:\n  - csharp\n  - vb\n  name: SessionId\n  fullName: System.Diagnostics.Process.SessionId\n  type: Property\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SessionId\n    path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n    startLine: 464\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets the Terminal Services session identifier for the associated process.</p>\\n\"\n  syntax:\n    content: public int SessionId { get; }\n    content.vb: Public ReadOnly Property SessionId As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The Terminal Services session identifier for the associated process.</p>\\n\"\n  exceptions:\n  - type: System.NullReferenceException\n    commentId: T:System.NullReferenceException\n    description: \"\\n<p>There is no session associated with this process.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>There is no process associated with this session identifier.</p>\\n<p>-or-</p>\\n<p>The associated process is not on this machine. </p>\\n\"\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>The <xref href=\\\"System.Diagnostics.Process.SessionId\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is not supported on Windows 98.</p>\\n\"\n  see:\n  - type: System.Security.Permissions.SecurityAction.LinkDemand\n    commentId: F:System.Security.Permissions.SecurityAction.LinkDemand\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Process.SessionId\n- uid: System.Diagnostics.Process.StandardError\n  commentId: P:System.Diagnostics.Process.StandardError\n  id: StandardError\n  parent: System.Diagnostics.Process\n  langs:\n  - csharp\n  - vb\n  name: StandardError\n  fullName: System.Diagnostics.Process.StandardError\n  type: Property\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: StandardError\n    path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n    startLine: 625\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets a stream used to read the error output of the application.</p>\\n\"\n  syntax:\n    content: public StreamReader StandardError { get; }\n    content.vb: Public ReadOnly Property StandardError As StreamReader\n    parameters: []\n    return:\n      type: System.IO.StreamReader\n      description: \"\\n<p>A <xref href=\\\"System.IO.StreamReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that can be used to read the standard error stream of the application.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The <xref href=\\\"System.Diagnostics.Process.StandardError\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> stream has not been defined for redirection; ensure <xref href=\\\"System.Diagnostics.ProcessStartInfo.RedirectStandardError\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is set to <strong>true</strong> and <xref href=\\\"System.Diagnostics.ProcessStartInfo.UseShellExecute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is set to <strong>false</strong>.</p>\\n<p>- or - </p>\\n<p>The <xref href=\\\"System.Diagnostics.Process.StandardError\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> stream has been opened for asynchronous read operations with <xref href=\\\"System.Diagnostics.Process.BeginErrorReadLine\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  seealso:\n  - type: System.Diagnostics.Process.StandardInput\n    commentId: P:System.Diagnostics.Process.StandardInput\n  - type: System.Diagnostics.Process.StandardOutput\n    commentId: P:System.Diagnostics.Process.StandardOutput\n  - type: System.Diagnostics.ProcessStartInfo.RedirectStandardError\n    commentId: P:System.Diagnostics.ProcessStartInfo.RedirectStandardError\n  see:\n  - type: System.Security.Permissions.SecurityAction.LinkDemand\n    commentId: F:System.Security.Permissions.SecurityAction.LinkDemand\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Process.StandardError\n- uid: System.Diagnostics.Process.StandardInput\n  commentId: P:System.Diagnostics.Process.StandardInput\n  id: StandardInput\n  parent: System.Diagnostics.Process\n  langs:\n  - csharp\n  - vb\n  name: StandardInput\n  fullName: System.Diagnostics.Process.StandardInput\n  type: Property\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: StandardInput\n    path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n    startLine: 584\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets a stream used to write the input of the application.</p>\\n\"\n  syntax:\n    content: public StreamWriter StandardInput { get; }\n    content.vb: Public ReadOnly Property StandardInput As StreamWriter\n    parameters: []\n    return:\n      type: System.IO.StreamWriter\n      description: \"\\n<p>A <xref href=\\\"System.IO.StreamWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that can be used to write the standard input stream of the application.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The <xref href=\\\"System.Diagnostics.Process.StandardInput\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> stream has not been defined because <xref href=\\\"System.Diagnostics.ProcessStartInfo.RedirectStandardInput\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is set to <strong>false</strong>. </p>\\n\"\n  seealso:\n  - type: System.Diagnostics.Process.StandardOutput\n    commentId: P:System.Diagnostics.Process.StandardOutput\n  - type: System.Diagnostics.Process.StandardError\n    commentId: P:System.Diagnostics.Process.StandardError\n  - type: System.Diagnostics.ProcessStartInfo.RedirectStandardInput\n    commentId: P:System.Diagnostics.ProcessStartInfo.RedirectStandardInput\n  see:\n  - type: System.Security.Permissions.SecurityAction.LinkDemand\n    commentId: F:System.Security.Permissions.SecurityAction.LinkDemand\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Process.StandardInput\n- uid: System.Diagnostics.Process.StandardOutput\n  commentId: P:System.Diagnostics.Process.StandardOutput\n  id: StandardOutput\n  parent: System.Diagnostics.Process\n  langs:\n  - csharp\n  - vb\n  name: StandardOutput\n  fullName: System.Diagnostics.Process.StandardOutput\n  type: Property\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: StandardOutput\n    path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n    startLine: 600\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets a stream used to read the textual output of the application.</p>\\n\"\n  syntax:\n    content: public StreamReader StandardOutput { get; }\n    content.vb: Public ReadOnly Property StandardOutput As StreamReader\n    parameters: []\n    return:\n      type: System.IO.StreamReader\n      description: \"\\n<p>A <xref href=\\\"System.IO.StreamReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that can be used to read the standard output stream of the application.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The <xref href=\\\"System.Diagnostics.Process.StandardOutput\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> stream has not been defined for redirection; ensure <xref href=\\\"System.Diagnostics.ProcessStartInfo.RedirectStandardOutput\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is set to <strong>true</strong> and <xref href=\\\"System.Diagnostics.ProcessStartInfo.UseShellExecute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is set to <strong>false</strong>.</p>\\n<p>- or - </p>\\n<p>The <xref href=\\\"System.Diagnostics.Process.StandardOutput\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> stream has been opened for asynchronous read operations with <xref href=\\\"System.Diagnostics.Process.BeginOutputReadLine\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  seealso:\n  - type: System.Diagnostics.Process.StandardInput\n    commentId: P:System.Diagnostics.Process.StandardInput\n  - type: System.Diagnostics.Process.StandardError\n    commentId: P:System.Diagnostics.Process.StandardError\n  - type: System.Diagnostics.ProcessStartInfo.RedirectStandardOutput\n    commentId: P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput\n  see:\n  - type: System.Security.Permissions.SecurityAction.LinkDemand\n    commentId: F:System.Security.Permissions.SecurityAction.LinkDemand\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Process.StandardOutput\n- uid: System.Diagnostics.Process.StartInfo\n  commentId: P:System.Diagnostics.Process.StartInfo\n  id: StartInfo\n  parent: System.Diagnostics.Process\n  langs:\n  - csharp\n  - vb\n  name: StartInfo\n  fullName: System.Diagnostics.Process.StartInfo\n  type: Property\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: StartInfo\n    path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n    startLine: 479\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets or sets the properties to pass to the <xref href=\\\"System.Diagnostics.Process.Start\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method of the <xref href=\\\"System.Diagnostics.Process\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public ProcessStartInfo StartInfo { get; set; }\n    content.vb: Public Property StartInfo As ProcessStartInfo\n    parameters: []\n    return:\n      type: System.Diagnostics.ProcessStartInfo\n      description: \"\\n<p>The <xref href=\\\"System.Diagnostics.ProcessStartInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents the data with which to start the process. These arguments include the name of the executable file or document used to start the process.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The value that specifies the <xref href=\\\"System.Diagnostics.Process.StartInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is <strong>null</strong>. </p>\\n\"\n  seealso:\n  - type: System.Diagnostics.Process.Start\n    commentId: M:System.Diagnostics.Process.Start\n  - type: System.Diagnostics.ProcessStartInfo.FileName\n    commentId: P:System.Diagnostics.ProcessStartInfo.FileName\n  see:\n  - type: System.Security.Permissions.SecurityAction.LinkDemand\n    commentId: F:System.Security.Permissions.SecurityAction.LinkDemand\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: Process.StartInfo\n- uid: System.Diagnostics.Process.StartTime\n  commentId: P:System.Diagnostics.Process.StartTime\n  id: StartTime\n  parent: System.Diagnostics.Process\n  langs:\n  - csharp\n  - vb\n  name: StartTime\n  fullName: System.Diagnostics.Process.StartTime\n  type: Property\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/ref/System.Diagnostics.Process.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: StartTime\n    path: src/System.Diagnostics.Process/ref/System.Diagnostics.Process.cs\n    startLine: 57\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets the time that the associated process was started.</p>\\n\"\n  syntax:\n    content: public DateTime StartTime { get; }\n    content.vb: Public ReadOnly Property StartTime As Date\n    parameters: []\n    return:\n      type: System.DateTime\n      description: \"\\n<p>An object  that indicates when the process started. An exception is thrown if the process is not running.</p>\\n\"\n  exceptions:\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>You are attempting to access the <xref href=\\\"System.Diagnostics.Process.StartTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property for a process that is running on a remote computer. This property is available only for processes that are running on the local computer. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The process has exited.</p>\\n<p>-or-</p>\\n<p>The process has not been started.</p>\\n\"\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: \"\\n<p>An error occurred in the call to the Windows function.</p>\\n\"\n  see:\n  - type: System.Security.Permissions.SecurityAction.LinkDemand\n    commentId: F:System.Security.Permissions.SecurityAction.LinkDemand\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Process.StartTime\n- uid: System.Diagnostics.Process.Threads\n  commentId: P:System.Diagnostics.Process.Threads\n  id: Threads\n  parent: System.Diagnostics.Process\n  langs:\n  - csharp\n  - vb\n  name: Threads\n  fullName: System.Diagnostics.Process.Threads\n  type: Property\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Threads\n    path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n    startLine: 516\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets the set of threads that are running in the associated process.</p>\\n\"\n  syntax:\n    content: public ProcessThreadCollection Threads { get; }\n    content.vb: Public ReadOnly Property Threads As ProcessThreadCollection\n    parameters: []\n    return:\n      type: System.Diagnostics.ProcessThreadCollection\n      description: \"\\n<p>An array of type <xref href=\\\"System.Diagnostics.ProcessThread\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> representing the operating system threads currently running in the associated process.</p>\\n\"\n  exceptions:\n  - type: System.SystemException\n    commentId: T:System.SystemException\n    description: \"\\n<p>The process does not have an <xref href=\\\"System.Diagnostics.Process.Id\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, or no process is associated with the <xref href=\\\"System.Diagnostics.Process\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n<p>-or- </p>\\n<p>The associated process has exited. </p>\\n\"\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Windows Me); set <xref href=\\\"System.Diagnostics.ProcessStartInfo.UseShellExecute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to <strong>false</strong> to access this property on Windows 98 and Windows Me.</p>\\n\"\n  seealso:\n  - type: System.Diagnostics.ProcessThread\n    commentId: T:System.Diagnostics.ProcessThread\n  - type: System.Diagnostics.Process.BasePriority\n    commentId: P:System.Diagnostics.Process.BasePriority\n  see:\n  - type: System.Security.Permissions.SecurityAction.LinkDemand\n    commentId: F:System.Security.Permissions.SecurityAction.LinkDemand\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Process.Threads\n- uid: System.Diagnostics.Process.TotalProcessorTime\n  commentId: P:System.Diagnostics.Process.TotalProcessorTime\n  id: TotalProcessorTime\n  parent: System.Diagnostics.Process\n  langs:\n  - csharp\n  - vb\n  name: TotalProcessorTime\n  fullName: System.Diagnostics.Process.TotalProcessorTime\n  type: Property\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/ref/System.Diagnostics.Process.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: TotalProcessorTime\n    path: src/System.Diagnostics.Process/ref/System.Diagnostics.Process.cs\n    startLine: 59\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets the total processor time for this process.</p>\\n\"\n  syntax:\n    content: public TimeSpan TotalProcessorTime { get; }\n    content.vb: Public ReadOnly Property TotalProcessorTime As TimeSpan\n    parameters: []\n    return:\n      type: System.TimeSpan\n      description: \"\\n<p>A <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that indicates the amount of time that the associated process has spent utilizing the CPU. This value is the sum of the <xref href=\\\"System.Diagnostics.Process.UserProcessorTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and the <xref href=\\\"System.Diagnostics.Process.PrivilegedProcessorTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>You are attempting to access the <xref href=\\\"System.Diagnostics.Process.TotalProcessorTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property for a process that is running on a remote computer. This property is available only for processes that are running on the local computer. </p>\\n\"\n  seealso:\n  - type: System.Diagnostics.Process.UserProcessorTime\n    commentId: P:System.Diagnostics.Process.UserProcessorTime\n  - type: System.Diagnostics.Process.PrivilegedProcessorTime\n    commentId: P:System.Diagnostics.Process.PrivilegedProcessorTime\n  see:\n  - type: System.Security.Permissions.SecurityAction.LinkDemand\n    commentId: F:System.Security.Permissions.SecurityAction.LinkDemand\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Process.TotalProcessorTime\n- uid: System.Diagnostics.Process.UserProcessorTime\n  commentId: P:System.Diagnostics.Process.UserProcessorTime\n  id: UserProcessorTime\n  parent: System.Diagnostics.Process\n  langs:\n  - csharp\n  - vb\n  name: UserProcessorTime\n  fullName: System.Diagnostics.Process.UserProcessorTime\n  type: Property\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/ref/System.Diagnostics.Process.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: UserProcessorTime\n    path: src/System.Diagnostics.Process/ref/System.Diagnostics.Process.cs\n    startLine: 60\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets the user processor time for this process.</p>\\n\"\n  syntax:\n    content: public TimeSpan UserProcessorTime { get; }\n    content.vb: Public ReadOnly Property UserProcessorTime As TimeSpan\n    parameters: []\n    return:\n      type: System.TimeSpan\n      description: \"\\n<p>A <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that indicates the amount of time that the associated process has spent running code inside the application portion of the process (not inside the operating system core).</p>\\n\"\n  exceptions:\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>You are attempting to access the <xref href=\\\"System.Diagnostics.Process.UserProcessorTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property for a process that is running on a remote computer. This property is available only for processes that are running on the local computer. </p>\\n\"\n  seealso:\n  - type: System.Diagnostics.Process.UserProcessorTime\n    commentId: P:System.Diagnostics.Process.UserProcessorTime\n  - type: System.Diagnostics.Process.PrivilegedProcessorTime\n    commentId: P:System.Diagnostics.Process.PrivilegedProcessorTime\n  see:\n  - type: System.Security.Permissions.SecurityAction.LinkDemand\n    commentId: F:System.Security.Permissions.SecurityAction.LinkDemand\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Process.UserProcessorTime\n- uid: System.Diagnostics.Process.VirtualMemorySize64\n  commentId: P:System.Diagnostics.Process.VirtualMemorySize64\n  id: VirtualMemorySize64\n  parent: System.Diagnostics.Process\n  langs:\n  - csharp\n  - vb\n  name: VirtualMemorySize64\n  fullName: System.Diagnostics.Process.VirtualMemorySize64\n  type: Property\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: VirtualMemorySize64\n    path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n    startLine: 537\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets the amount of the virtual memory, in bytes, allocated for the associated process.</p>\\n\"\n  syntax:\n    content: public long VirtualMemorySize64 { get; }\n    content.vb: Public ReadOnly Property VirtualMemorySize64 As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>The amount of virtual memory, in bytes, allocated for the associated process.</p>\\n\"\n  exceptions:\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</p>\\n\"\n  seealso:\n  - type: System.Diagnostics.Process.PeakVirtualMemorySize64\n    commentId: P:System.Diagnostics.Process.PeakVirtualMemorySize64\n  see:\n  - type: System.Security.Permissions.SecurityAction.LinkDemand\n    commentId: F:System.Security.Permissions.SecurityAction.LinkDemand\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Process.VirtualMemorySize64\n- uid: System.Diagnostics.Process.WorkingSet64\n  commentId: P:System.Diagnostics.Process.WorkingSet64\n  id: WorkingSet64\n  parent: System.Diagnostics.Process\n  langs:\n  - csharp\n  - vb\n  name: WorkingSet64\n  fullName: System.Diagnostics.Process.WorkingSet64\n  type: Property\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WorkingSet64\n    path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n    startLine: 647\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets the amount of physical memory, in bytes, allocated for the associated process.</p>\\n\"\n  syntax:\n    content: public long WorkingSet64 { get; }\n    content.vb: Public ReadOnly Property WorkingSet64 As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>The amount of physical memory, in bytes, allocated for the associated process.</p>\\n\"\n  exceptions:\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>The platform is Windows 98 or Windows Millennium Edition (Windows Me), which does not support this property.</p>\\n\"\n  seealso:\n  - type: System.Diagnostics.Process.MinWorkingSet\n    commentId: P:System.Diagnostics.Process.MinWorkingSet\n  - type: System.Diagnostics.Process.MaxWorkingSet\n    commentId: P:System.Diagnostics.Process.MaxWorkingSet\n  - type: System.Diagnostics.Process.PeakWorkingSet64\n    commentId: P:System.Diagnostics.Process.PeakWorkingSet64\n  see:\n  - type: System.Security.Permissions.SecurityAction.LinkDemand\n    commentId: F:System.Security.Permissions.SecurityAction.LinkDemand\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Process.WorkingSet64\n- uid: System.Diagnostics.Process.ErrorDataReceived\n  commentId: E:System.Diagnostics.Process.ErrorDataReceived\n  id: ErrorDataReceived\n  parent: System.Diagnostics.Process\n  langs:\n  - csharp\n  - vb\n  name: ErrorDataReceived\n  fullName: System.Diagnostics.Process.ErrorDataReceived\n  type: Event\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ErrorDataReceived\n    path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n    startLine: 72\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Occurs when an application writes to its redirected <xref href=\\\"System.Diagnostics.Process.StandardError\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> stream.</p>\\n\"\n  syntax:\n    content: public event DataReceivedEventHandler ErrorDataReceived\n    content.vb: Public Event ErrorDataReceived As DataReceivedEventHandler\n    return:\n      type: System.Diagnostics.DataReceivedEventHandler\n  seealso:\n  - type: System.Diagnostics.ProcessStartInfo.RedirectStandardError\n    commentId: P:System.Diagnostics.ProcessStartInfo.RedirectStandardError\n  - type: System.Diagnostics.Process.StandardError\n    commentId: P:System.Diagnostics.Process.StandardError\n  - type: System.Diagnostics.Process.BeginErrorReadLine\n    commentId: M:System.Diagnostics.Process.BeginErrorReadLine\n  - type: System.Diagnostics.Process.CancelErrorRead\n    commentId: M:System.Diagnostics.Process.CancelErrorRead\n  - type: System.Diagnostics.DataReceivedEventHandler\n    commentId: T:System.Diagnostics.DataReceivedEventHandler\n  see:\n  - type: System.Security.Permissions.SecurityAction.LinkDemand\n    commentId: F:System.Security.Permissions.SecurityAction.LinkDemand\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Process.ErrorDataReceived\n- uid: System.Diagnostics.Process.Exited\n  commentId: E:System.Diagnostics.Process.Exited\n  id: Exited\n  parent: System.Diagnostics.Process\n  langs:\n  - csharp\n  - vb\n  name: Exited\n  fullName: System.Diagnostics.Process.Exited\n  type: Event\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Exited\n    path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n    startLine: 656\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Occurs when a process exits.</p>\\n\"\n  syntax:\n    content: public event EventHandler Exited\n    content.vb: Public Event Exited As EventHandler\n    return:\n      type: System.EventHandler\n  see:\n  - type: System.Security.Permissions.SecurityAction.LinkDemand\n    commentId: F:System.Security.Permissions.SecurityAction.LinkDemand\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Process.Exited\n- uid: System.Diagnostics.Process.OutputDataReceived\n  commentId: E:System.Diagnostics.Process.OutputDataReceived\n  id: OutputDataReceived\n  parent: System.Diagnostics.Process\n  langs:\n  - csharp\n  - vb\n  name: OutputDataReceived\n  fullName: System.Diagnostics.Process.OutputDataReceived\n  type: Event\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: OutputDataReceived\n    path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n    startLine: 71\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Occurs each time an application writes a line to its redirected <xref href=\\\"System.Diagnostics.Process.StandardOutput\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> stream. </p>\\n\"\n  syntax:\n    content: public event DataReceivedEventHandler OutputDataReceived\n    content.vb: Public Event OutputDataReceived As DataReceivedEventHandler\n    return:\n      type: System.Diagnostics.DataReceivedEventHandler\n  seealso:\n  - type: System.Diagnostics.ProcessStartInfo.RedirectStandardOutput\n    commentId: P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput\n  - type: System.Diagnostics.Process.StandardOutput\n    commentId: P:System.Diagnostics.Process.StandardOutput\n  - type: System.Diagnostics.Process.BeginOutputReadLine\n    commentId: M:System.Diagnostics.Process.BeginOutputReadLine\n  - type: System.Diagnostics.Process.CancelOutputRead\n    commentId: M:System.Diagnostics.Process.CancelOutputRead\n  - type: System.Diagnostics.DataReceivedEventHandler\n    commentId: T:System.Diagnostics.DataReceivedEventHandler\n  see:\n  - type: System.Security.Permissions.SecurityAction.LinkDemand\n    commentId: F:System.Security.Permissions.SecurityAction.LinkDemand\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Process.OutputDataReceived\n- uid: System.Diagnostics.Process.BeginErrorReadLine\n  commentId: M:System.Diagnostics.Process.BeginErrorReadLine\n  id: BeginErrorReadLine\n  parent: System.Diagnostics.Process\n  langs:\n  - csharp\n  - vb\n  name: BeginErrorReadLine()\n  fullName: System.Diagnostics.Process.BeginErrorReadLine()\n  type: Method\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: BeginErrorReadLine\n    path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n    startLine: 1268\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Begins asynchronous read operations on the redirected <xref href=\\\"System.Diagnostics.Process.StandardError\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> stream of the application.</p>\\n\"\n  syntax:\n    content: public void BeginErrorReadLine()\n    content.vb: Public Sub BeginErrorReadLine\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The <xref href=\\\"System.Diagnostics.ProcessStartInfo.RedirectStandardError\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is <strong>false</strong>.</p>\\n<p>- or - </p>\\n<p>An asynchronous read operation is already in progress on the <xref href=\\\"System.Diagnostics.Process.StandardError\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> stream.</p>\\n<p>- or - </p>\\n<p>The <xref href=\\\"System.Diagnostics.Process.StandardError\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> stream has been used by a synchronous read operation. </p>\\n\"\n  seealso:\n  - type: System.Diagnostics.ProcessStartInfo.RedirectStandardError\n    commentId: P:System.Diagnostics.ProcessStartInfo.RedirectStandardError\n  - type: System.Diagnostics.Process.StandardError\n    commentId: P:System.Diagnostics.Process.StandardError\n  - type: System.Diagnostics.Process.ErrorDataReceived\n    commentId: E:System.Diagnostics.Process.ErrorDataReceived\n  - type: System.Diagnostics.DataReceivedEventHandler\n    commentId: T:System.Diagnostics.DataReceivedEventHandler\n  - type: System.Diagnostics.Process.CancelErrorRead\n    commentId: M:System.Diagnostics.Process.CancelErrorRead\n  see:\n  - type: System.Security.Permissions.SecurityAction.LinkDemand\n    commentId: F:System.Security.Permissions.SecurityAction.LinkDemand\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Process.BeginErrorReadLine()\n- uid: System.Diagnostics.Process.BeginOutputReadLine\n  commentId: M:System.Diagnostics.Process.BeginOutputReadLine\n  id: BeginOutputReadLine\n  parent: System.Diagnostics.Process\n  langs:\n  - csharp\n  - vb\n  name: BeginOutputReadLine()\n  fullName: System.Diagnostics.Process.BeginOutputReadLine()\n  type: Method\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: BeginOutputReadLine\n    path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n    startLine: 1230\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Begins asynchronous read operations on the redirected <xref href=\\\"System.Diagnostics.Process.StandardOutput\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> stream of the application.</p>\\n\"\n  syntax:\n    content: public void BeginOutputReadLine()\n    content.vb: Public Sub BeginOutputReadLine\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The <xref href=\\\"System.Diagnostics.ProcessStartInfo.RedirectStandardOutput\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is <strong>false</strong>.</p>\\n<p>- or - </p>\\n<p>An asynchronous read operation is already in progress on the <xref href=\\\"System.Diagnostics.Process.StandardOutput\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> stream.</p>\\n<p>- or - </p>\\n<p>The <xref href=\\\"System.Diagnostics.Process.StandardOutput\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> stream has been used by a synchronous read operation. </p>\\n\"\n  seealso:\n  - type: System.Diagnostics.ProcessStartInfo.RedirectStandardOutput\n    commentId: P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput\n  - type: System.Diagnostics.Process.StandardOutput\n    commentId: P:System.Diagnostics.Process.StandardOutput\n  - type: System.Diagnostics.Process.OutputDataReceived\n    commentId: E:System.Diagnostics.Process.OutputDataReceived\n  - type: System.Diagnostics.DataReceivedEventHandler\n    commentId: T:System.Diagnostics.DataReceivedEventHandler\n  - type: System.Diagnostics.Process.CancelOutputRead\n    commentId: M:System.Diagnostics.Process.CancelOutputRead\n  see:\n  - type: System.Security.Permissions.SecurityAction.LinkDemand\n    commentId: F:System.Security.Permissions.SecurityAction.LinkDemand\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Process.BeginOutputReadLine()\n- uid: System.Diagnostics.Process.CancelErrorRead\n  commentId: M:System.Diagnostics.Process.CancelErrorRead\n  id: CancelErrorRead\n  parent: System.Diagnostics.Process\n  langs:\n  - csharp\n  - vb\n  name: CancelErrorRead()\n  fullName: System.Diagnostics.Process.CancelErrorRead()\n  type: Method\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CancelErrorRead\n    path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n    startLine: 1325\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Cancels the asynchronous read operation on the redirected <xref href=\\\"System.Diagnostics.Process.StandardError\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> stream of an application.</p>\\n\"\n  syntax:\n    content: public void CancelErrorRead()\n    content.vb: Public Sub CancelErrorRead\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The <xref href=\\\"System.Diagnostics.Process.StandardError\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> stream is not enabled for asynchronous read operations. </p>\\n\"\n  seealso:\n  - type: System.Diagnostics.Process.BeginErrorReadLine\n    commentId: M:System.Diagnostics.Process.BeginErrorReadLine\n  - type: System.Diagnostics.ProcessStartInfo.RedirectStandardError\n    commentId: P:System.Diagnostics.ProcessStartInfo.RedirectStandardError\n  - type: System.Diagnostics.Process.StandardError\n    commentId: P:System.Diagnostics.Process.StandardError\n  - type: System.Diagnostics.Process.ErrorDataReceived\n    commentId: E:System.Diagnostics.Process.ErrorDataReceived\n  - type: System.Diagnostics.DataReceivedEventHandler\n    commentId: T:System.Diagnostics.DataReceivedEventHandler\n  see:\n  - type: System.Security.Permissions.SecurityAction.LinkDemand\n    commentId: F:System.Security.Permissions.SecurityAction.LinkDemand\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Process.CancelErrorRead()\n- uid: System.Diagnostics.Process.CancelOutputRead\n  commentId: M:System.Diagnostics.Process.CancelOutputRead\n  id: CancelOutputRead\n  parent: System.Diagnostics.Process\n  langs:\n  - csharp\n  - vb\n  name: CancelOutputRead()\n  fullName: System.Diagnostics.Process.CancelOutputRead()\n  type: Method\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CancelOutputRead\n    path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n    startLine: 1305\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Cancels the asynchronous read operation on the redirected <xref href=\\\"System.Diagnostics.Process.StandardOutput\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> stream of an application.</p>\\n\"\n  syntax:\n    content: public void CancelOutputRead()\n    content.vb: Public Sub CancelOutputRead\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The <xref href=\\\"System.Diagnostics.Process.StandardOutput\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> stream is not enabled for asynchronous read operations. </p>\\n\"\n  seealso:\n  - type: System.Diagnostics.Process.BeginOutputReadLine\n    commentId: M:System.Diagnostics.Process.BeginOutputReadLine\n  - type: System.Diagnostics.ProcessStartInfo.RedirectStandardOutput\n    commentId: P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput\n  - type: System.Diagnostics.Process.StandardOutput\n    commentId: P:System.Diagnostics.Process.StandardOutput\n  - type: System.Diagnostics.Process.OutputDataReceived\n    commentId: E:System.Diagnostics.Process.OutputDataReceived\n  - type: System.Diagnostics.DataReceivedEventHandler\n    commentId: T:System.Diagnostics.DataReceivedEventHandler\n  see:\n  - type: System.Security.Permissions.SecurityAction.LinkDemand\n    commentId: F:System.Security.Permissions.SecurityAction.LinkDemand\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Process.CancelOutputRead()\n- uid: System.Diagnostics.Process.EnterDebugMode\n  commentId: M:System.Diagnostics.Process.EnterDebugMode\n  id: EnterDebugMode\n  parent: System.Diagnostics.Process\n  langs:\n  - csharp\n  - vb\n  name: EnterDebugMode()\n  fullName: System.Diagnostics.Process.EnterDebugMode()\n  type: Method\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/ref/System.Diagnostics.Process.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: EnterDebugMode\n    path: src/System.Diagnostics.Process/ref/System.Diagnostics.Process.cs\n    startLine: 70\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Puts a <xref href=\\\"System.Diagnostics.Process\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> component in state to interact with operating system processes that run in a special mode by enabling the native property <strong>SeDebugPrivilege</strong> on the current thread.</p>\\n\"\n  syntax:\n    content: public static void EnterDebugMode()\n    content.vb: Public Shared Sub EnterDebugMode\n  seealso:\n  - type: System.Diagnostics.Process.LeaveDebugMode\n    commentId: M:System.Diagnostics.Process.LeaveDebugMode\n  see:\n  - type: System.Security.Permissions.SecurityAction.LinkDemand\n    commentId: F:System.Security.Permissions.SecurityAction.LinkDemand\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Process.EnterDebugMode()\n- uid: System.Diagnostics.Process.GetCurrentProcess\n  commentId: M:System.Diagnostics.Process.GetCurrentProcess\n  id: GetCurrentProcess\n  parent: System.Diagnostics.Process\n  langs:\n  - csharp\n  - vb\n  name: GetCurrentProcess()\n  fullName: System.Diagnostics.Process.GetCurrentProcess()\n  type: Method\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetCurrentProcess\n    path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n    startLine: 959\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets a new <xref href=\\\"System.Diagnostics.Process\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> component and associates it with the currently active process.</p>\\n\"\n  syntax:\n    content: public static Process GetCurrentProcess()\n    content.vb: Public Shared Function GetCurrentProcess As Process\n    return:\n      type: System.Diagnostics.Process\n      description: \"\\n<p>A new <xref href=\\\"System.Diagnostics.Process\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> component associated with the process resource that is running the calling application.</p>\\n\"\n  seealso:\n  - type: System.Diagnostics.Process.GetProcessById(System.Int32,System.String)\n    commentId: M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)\n  - type: System.Diagnostics.Process.GetProcessesByName(System.String)\n    commentId: M:System.Diagnostics.Process.GetProcessesByName(System.String)\n  - type: System.Diagnostics.Process.GetProcesses\n    commentId: M:System.Diagnostics.Process.GetProcesses\n  see:\n  - type: System.Security.Permissions.SecurityAction.LinkDemand\n    commentId: F:System.Security.Permissions.SecurityAction.LinkDemand\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Process.GetCurrentProcess()\n- uid: System.Diagnostics.Process.GetProcessById(System.Int32)\n  commentId: M:System.Diagnostics.Process.GetProcessById(System.Int32)\n  id: GetProcessById(System.Int32)\n  parent: System.Diagnostics.Process\n  langs:\n  - csharp\n  - vb\n  name: GetProcessById(Int32)\n  fullName: System.Diagnostics.Process.GetProcessById(System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetProcessById\n    path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n    startLine: 892\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Returns a new <xref href=\\\"System.Diagnostics.Process\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> component, given the identifier of a process on the local computer.</p>\\n\"\n  syntax:\n    content: public static Process GetProcessById(int processId)\n    content.vb: Public Shared Function GetProcessById(processId As Integer) As Process\n    parameters:\n    - id: processId\n      type: System.Int32\n      description: \"\\n<p>The system-unique identifier of a process resource. </p>\\n\"\n    return:\n      type: System.Diagnostics.Process\n      description: \"\\n<p>A <xref href=\\\"System.Diagnostics.Process\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> component that is associated with the local process resource identified by the <em>processId</em> parameter.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The process specified by the <em>processId</em> parameter is not running. The identifier might be expired. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The process was not started by this object.</p>\\n\"\n  seealso:\n  - type: System.Diagnostics.Process.Id\n    commentId: P:System.Diagnostics.Process.Id\n  - type: System.Diagnostics.Process.GetProcessesByName(System.String)\n    commentId: M:System.Diagnostics.Process.GetProcessesByName(System.String)\n  - type: System.Diagnostics.Process.GetProcesses\n    commentId: M:System.Diagnostics.Process.GetProcesses\n  - type: System.Diagnostics.Process.GetCurrentProcess\n    commentId: M:System.Diagnostics.Process.GetCurrentProcess\n  see:\n  - type: System.Security.Permissions.SecurityAction.LinkDemand\n    commentId: F:System.Security.Permissions.SecurityAction.LinkDemand\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Process.GetProcessById(Int32)\n- uid: System.Diagnostics.Process.GetProcessById(System.Int32,System.String)\n  commentId: M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)\n  id: GetProcessById(System.Int32,System.String)\n  parent: System.Diagnostics.Process\n  langs:\n  - csharp\n  - vb\n  name: GetProcessById(Int32, String)\n  fullName: System.Diagnostics.Process.GetProcessById(System.Int32, System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetProcessById\n    path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n    startLine: 876\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Returns a new <xref href=\\\"System.Diagnostics.Process\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> component, given a process identifier and the name of a computer on the network.</p>\\n\"\n  syntax:\n    content: public static Process GetProcessById(int processId, string machineName)\n    content.vb: Public Shared Function GetProcessById(processId As Integer, machineName As String) As Process\n    parameters:\n    - id: processId\n      type: System.Int32\n      description: \"\\n<p>The system-unique identifier of a process resource. </p>\\n\"\n    - id: machineName\n      type: System.String\n      description: \"\\n<p>The name of a computer on the network. </p>\\n\"\n    return:\n      type: System.Diagnostics.Process\n      description: \"\\n<p>A <xref href=\\\"System.Diagnostics.Process\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> component that is associated with a remote process resource identified by the <em>processId</em> parameter.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The process specified by the <em>processId</em> parameter is not running. The identifier might be expired.</p>\\n<p>-or- </p>\\n<p>The <em>machineName</em> parameter syntax is invalid. The name might have length zero (0). </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>machineName</em> parameter is <strong>null</strong>. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The process was not started by this object.</p>\\n\"\n  seealso:\n  - type: System.Diagnostics.Process.Id\n    commentId: P:System.Diagnostics.Process.Id\n  - type: System.Diagnostics.Process.MachineName\n    commentId: P:System.Diagnostics.Process.MachineName\n  - type: System.Diagnostics.Process.GetProcessesByName(System.String)\n    commentId: M:System.Diagnostics.Process.GetProcessesByName(System.String)\n  - type: System.Diagnostics.Process.GetProcesses\n    commentId: M:System.Diagnostics.Process.GetProcesses\n  - type: System.Diagnostics.Process.GetCurrentProcess\n    commentId: M:System.Diagnostics.Process.GetCurrentProcess\n  see:\n  - type: System.Security.Permissions.SecurityAction.LinkDemand\n    commentId: F:System.Security.Permissions.SecurityAction.LinkDemand\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Process.GetProcessById(Int32, String)\n- uid: System.Diagnostics.Process.GetProcesses\n  commentId: M:System.Diagnostics.Process.GetProcesses\n  id: GetProcesses\n  parent: System.Diagnostics.Process\n  langs:\n  - csharp\n  - vb\n  name: GetProcesses()\n  fullName: System.Diagnostics.Process.GetProcesses()\n  type: Method\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetProcesses\n    path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n    startLine: 916\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Creates a new <xref href=\\\"System.Diagnostics.Process\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> component for each process resource on the local computer.</p>\\n\"\n  syntax:\n    content: public static Process[] GetProcesses()\n    content.vb: Public Shared Function GetProcesses As Process()\n    return:\n      type: System.Diagnostics.Process[]\n      description: \"\\n<p>An array of type <xref href=\\\"System.Diagnostics.Process\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents all the process resources running on the local computer.</p>\\n\"\n  seealso:\n  - type: System.Diagnostics.Process.MachineName\n    commentId: P:System.Diagnostics.Process.MachineName\n  - type: System.Diagnostics.Process.GetProcessById(System.Int32,System.String)\n    commentId: M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)\n  - type: System.Diagnostics.Process.GetProcessesByName(System.String)\n    commentId: M:System.Diagnostics.Process.GetProcessesByName(System.String)\n  - type: System.Diagnostics.Process.GetCurrentProcess\n    commentId: M:System.Diagnostics.Process.GetCurrentProcess\n  see:\n  - type: System.Security.Permissions.SecurityAction.LinkDemand\n    commentId: F:System.Security.Permissions.SecurityAction.LinkDemand\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Process.GetProcesses()\n- uid: System.Diagnostics.Process.GetProcesses(System.String)\n  commentId: M:System.Diagnostics.Process.GetProcesses(System.String)\n  id: GetProcesses(System.String)\n  parent: System.Diagnostics.Process\n  langs:\n  - csharp\n  - vb\n  name: GetProcesses(String)\n  fullName: System.Diagnostics.Process.GetProcesses(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetProcesses\n    path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n    startLine: 928\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Creates a new <xref href=\\\"System.Diagnostics.Process\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> component for each process resource on the specified computer.</p>\\n\"\n  syntax:\n    content: public static Process[] GetProcesses(string machineName)\n    content.vb: Public Shared Function GetProcesses(machineName As String) As Process()\n    parameters:\n    - id: machineName\n      type: System.String\n      description: \"\\n<p>The computer from which to read the list of processes. </p>\\n\"\n    return:\n      type: System.Diagnostics.Process[]\n      description: \"\\n<p>An array of type <xref href=\\\"System.Diagnostics.Process\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents all the process resources running on the specified computer.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The <em>machineName</em> parameter syntax is invalid. It might have length zero (0). </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>machineName</em> parameter is <strong>null</strong>. </p>\\n\"\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>The operating system platform does not support this operation on remote computers. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>There are problems accessing the performance counter API's used to get process information. This exception is specific to Windows NT, Windows 2000, and Windows XP. </p>\\n\"\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: \"\\n<p>A problem occurred accessing an underlying system API. </p>\\n\"\n  seealso:\n  - type: System.Diagnostics.Process.MachineName\n    commentId: P:System.Diagnostics.Process.MachineName\n  - type: System.Diagnostics.Process.GetProcessById(System.Int32,System.String)\n    commentId: M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)\n  - type: System.Diagnostics.Process.GetProcessesByName(System.String)\n    commentId: M:System.Diagnostics.Process.GetProcessesByName(System.String)\n  - type: System.Diagnostics.Process.GetCurrentProcess\n    commentId: M:System.Diagnostics.Process.GetCurrentProcess\n  see:\n  - type: System.Security.Permissions.SecurityAction.LinkDemand\n    commentId: F:System.Security.Permissions.SecurityAction.LinkDemand\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Process.GetProcesses(String)\n- uid: System.Diagnostics.Process.GetProcessesByName(System.String)\n  commentId: M:System.Diagnostics.Process.GetProcessesByName(System.String)\n  id: GetProcessesByName(System.String)\n  parent: System.Diagnostics.Process\n  langs:\n  - csharp\n  - vb\n  name: GetProcessesByName(String)\n  fullName: System.Diagnostics.Process.GetProcessesByName(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetProcessesByName\n    path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n    startLine: 905\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Creates an array of new <xref href=\\\"System.Diagnostics.Process\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> components and associates them with all the process resources on the local computer that share the specified process name.</p>\\n\"\n  syntax:\n    content: public static Process[] GetProcessesByName(string processName)\n    content.vb: Public Shared Function GetProcessesByName(processName As String) As Process()\n    parameters:\n    - id: processName\n      type: System.String\n      description: \"\\n<p>The friendly name of the process. </p>\\n\"\n    return:\n      type: System.Diagnostics.Process[]\n      description: \"\\n<p>An array of type <xref href=\\\"System.Diagnostics.Process\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents the process resources running the specified application or file.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>There are problems accessing the performance counter API's used to get process information. This exception is specific to Windows NT, Windows 2000, and Windows XP. </p>\\n\"\n  seealso:\n  - type: System.Diagnostics.Process.ProcessName\n    commentId: P:System.Diagnostics.Process.ProcessName\n  - type: System.Diagnostics.Process.GetProcessById(System.Int32,System.String)\n    commentId: M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)\n  - type: System.Diagnostics.Process.GetProcesses\n    commentId: M:System.Diagnostics.Process.GetProcesses\n  - type: System.Diagnostics.Process.GetCurrentProcess\n    commentId: M:System.Diagnostics.Process.GetCurrentProcess\n  see:\n  - type: System.Security.Permissions.SecurityAction.LinkDemand\n    commentId: F:System.Security.Permissions.SecurityAction.LinkDemand\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Process.GetProcessesByName(String)\n- uid: System.Diagnostics.Process.GetProcessesByName(System.String,System.String)\n  commentId: M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)\n  id: GetProcessesByName(System.String,System.String)\n  parent: System.Diagnostics.Process\n  langs:\n  - csharp\n  - vb\n  name: GetProcessesByName(String, String)\n  fullName: System.Diagnostics.Process.GetProcessesByName(System.String, System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/ref/System.Diagnostics.Process.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetProcessesByName\n    path: src/System.Diagnostics.Process/ref/System.Diagnostics.Process.cs\n    startLine: 77\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Creates an array of new <xref href=\\\"System.Diagnostics.Process\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> components and associates them with all the process resources on a remote computer that share the specified process name.</p>\\n\"\n  syntax:\n    content: public static Process[] GetProcessesByName(string processName, string machineName)\n    content.vb: Public Shared Function GetProcessesByName(processName As String, machineName As String) As Process()\n    parameters:\n    - id: processName\n      type: System.String\n      description: \"\\n<p>The friendly name of the process. </p>\\n\"\n    - id: machineName\n      type: System.String\n      description: \"\\n<p>The name of a computer on the network. </p>\\n\"\n    return:\n      type: System.Diagnostics.Process[]\n      description: \"\\n<p>An array of type <xref href=\\\"System.Diagnostics.Process\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents the process resources running the specified application or file.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The <em>machineName</em> parameter syntax is invalid. It might have length zero (0). </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>machineName</em> parameter is <strong>null</strong>. </p>\\n\"\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>The operating system platform does not support this operation on remote computers. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>There are problems accessing the performance counter API's used to get process information. This exception is specific to Windows NT, Windows 2000, and Windows XP. </p>\\n\"\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: \"\\n<p>A problem occurred accessing an underlying system API. </p>\\n\"\n  seealso:\n  - type: System.Diagnostics.Process.ProcessName\n    commentId: P:System.Diagnostics.Process.ProcessName\n  - type: System.Diagnostics.Process.MachineName\n    commentId: P:System.Diagnostics.Process.MachineName\n  - type: System.Diagnostics.Process.GetProcessById(System.Int32,System.String)\n    commentId: M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)\n  - type: System.Diagnostics.Process.GetProcesses\n    commentId: M:System.Diagnostics.Process.GetProcesses\n  - type: System.Diagnostics.Process.GetCurrentProcess\n    commentId: M:System.Diagnostics.Process.GetCurrentProcess\n  see:\n  - type: System.Security.Permissions.SecurityAction.LinkDemand\n    commentId: F:System.Security.Permissions.SecurityAction.LinkDemand\n  - type: System.Security.Permissions.SecurityPermission\n    commentId: T:System.Security.Permissions.SecurityPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Process.GetProcessesByName(String, String)\n- uid: System.Diagnostics.Process.Kill\n  commentId: M:System.Diagnostics.Process.Kill\n  id: Kill\n  parent: System.Diagnostics.Process\n  langs:\n  - csharp\n  - vb\n  name: Kill()\n  fullName: System.Diagnostics.Process.Kill()\n  type: Method\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/ref/System.Diagnostics.Process.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Kill\n    path: src/System.Diagnostics.Process/ref/System.Diagnostics.Process.cs\n    startLine: 78\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Immediately stops the associated process.</p>\\n\"\n  syntax:\n    content: public void Kill()\n    content.vb: Public Sub Kill\n  exceptions:\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: \"\\n<p>The associated process could not be terminated. </p>\\n<p>-or-</p>\\n<p>The process is terminating.</p>\\n<p>-or- </p>\\n<p>The associated process is a Win16 executable.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>You are attempting to call <xref href=\\\"System.Diagnostics.Process.Kill\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for a process that is running on a remote computer. The method is available only for processes running on the local computer.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The process has already exited. </p>\\n<p>-or-</p>\\n<p>There is no process associated with this <xref href=\\\"System.Diagnostics.Process\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  seealso:\n  - type: System.Environment.Exit(System.Int32)\n    commentId: M:System.Environment.Exit(System.Int32)\n  - type: System.Diagnostics.Process.CloseMainWindow\n    commentId: M:System.Diagnostics.Process.CloseMainWindow\n  - type: System.Diagnostics.Process.Start\n    commentId: M:System.Diagnostics.Process.Start\n  see:\n  - type: System.Security.Permissions.SecurityAction.LinkDemand\n    commentId: F:System.Security.Permissions.SecurityAction.LinkDemand\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Process.Kill()\n- uid: System.Diagnostics.Process.LeaveDebugMode\n  commentId: M:System.Diagnostics.Process.LeaveDebugMode\n  id: LeaveDebugMode\n  parent: System.Diagnostics.Process\n  langs:\n  - csharp\n  - vb\n  name: LeaveDebugMode()\n  fullName: System.Diagnostics.Process.LeaveDebugMode()\n  type: Method\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/ref/System.Diagnostics.Process.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: LeaveDebugMode\n    path: src/System.Diagnostics.Process/ref/System.Diagnostics.Process.cs\n    startLine: 79\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Takes a <xref href=\\\"System.Diagnostics.Process\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> component out of the state that lets it interact with operating system processes that run in a special mode.</p>\\n\"\n  syntax:\n    content: public static void LeaveDebugMode()\n    content.vb: Public Shared Sub LeaveDebugMode\n  seealso:\n  - type: System.Diagnostics.Process.EnterDebugMode\n    commentId: M:System.Diagnostics.Process.EnterDebugMode\n  see:\n  - type: System.Security.Permissions.SecurityAction.LinkDemand\n    commentId: F:System.Security.Permissions.SecurityAction.LinkDemand\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Process.LeaveDebugMode()\n- uid: System.Diagnostics.Process.OnExited\n  commentId: M:System.Diagnostics.Process.OnExited\n  id: OnExited\n  parent: System.Diagnostics.Process\n  langs:\n  - csharp\n  - vb\n  name: OnExited()\n  fullName: System.Diagnostics.Process.OnExited()\n  type: Method\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: OnExited\n    path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n    startLine: 969\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Raises the <xref href=\\\"System.Diagnostics.Process.Exited\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> event.</p>\\n\"\n  syntax:\n    content: protected void OnExited()\n    content.vb: Protected Sub OnExited\n  seealso:\n  - type: System.Diagnostics.Process.Exited\n    commentId: E:System.Diagnostics.Process.Exited\n  see:\n  - type: System.Security.Permissions.SecurityAction.LinkDemand\n    commentId: F:System.Security.Permissions.SecurityAction.LinkDemand\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: Process.OnExited()\n- uid: System.Diagnostics.Process.Refresh\n  commentId: M:System.Diagnostics.Process.Refresh\n  id: Refresh\n  parent: System.Diagnostics.Process\n  langs:\n  - csharp\n  - vb\n  name: Refresh()\n  fullName: System.Diagnostics.Process.Refresh()\n  type: Method\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Refresh\n    path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n    startLine: 1005\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Discards any information about the associated process that has been cached inside the process component.</p>\\n\"\n  syntax:\n    content: public void Refresh()\n    content.vb: Public Sub Refresh\n  see:\n  - type: System.Security.Permissions.SecurityAction.LinkDemand\n    commentId: F:System.Security.Permissions.SecurityAction.LinkDemand\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Process.Refresh()\n- uid: System.Diagnostics.Process.Start\n  commentId: M:System.Diagnostics.Process.Start\n  id: Start\n  parent: System.Diagnostics.Process\n  langs:\n  - csharp\n  - vb\n  name: Start()\n  fullName: System.Diagnostics.Process.Start()\n  type: Method\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Start\n    path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n    startLine: 1075\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Starts (or reuses) the process resource that is specified by the <xref href=\\\"System.Diagnostics.Process.StartInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property of this <xref href=\\\"System.Diagnostics.Process\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> component and associates it with the component.</p>\\n\"\n  syntax:\n    content: public bool Start()\n    content.vb: Public Function Start As Boolean\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if a process resource is started; <strong>false</strong> if no new process resource is started (for example, if an existing process is reused).</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>No file name was specified in the <xref href=\\\"System.Diagnostics.Process\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> component's <xref href=\\\"System.Diagnostics.Process.StartInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or- </p>\\n<p>The <xref href=\\\"System.Diagnostics.ProcessStartInfo.UseShellExecute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> member of the <xref href=\\\"System.Diagnostics.Process.StartInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is <strong>true</strong> while <xref href=\\\"System.Diagnostics.ProcessStartInfo.RedirectStandardInput\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.Diagnostics.ProcessStartInfo.RedirectStandardOutput\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, or <xref href=\\\"System.Diagnostics.ProcessStartInfo.RedirectStandardError\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is <strong>true</strong>. </p>\\n\"\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: \"\\n<p>There was an error in opening the associated file. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The process object has already been disposed. </p>\\n\"\n  seealso:\n  - type: System.Diagnostics.Process.StartInfo\n    commentId: P:System.Diagnostics.Process.StartInfo\n  - type: System.Diagnostics.ProcessStartInfo.FileName\n    commentId: P:System.Diagnostics.ProcessStartInfo.FileName\n  - type: System.Diagnostics.ProcessStartInfo\n    commentId: T:System.Diagnostics.ProcessStartInfo\n  - type: System.Diagnostics.Process.CloseMainWindow\n    commentId: M:System.Diagnostics.Process.CloseMainWindow\n  - type: System.Diagnostics.Process.Kill\n    commentId: M:System.Diagnostics.Process.Kill\n  see:\n  - type: System.Security.Permissions.SecurityAction.LinkDemand\n    commentId: F:System.Security.Permissions.SecurityAction.LinkDemand\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Process.Start()\n- uid: System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)\n  commentId: M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)\n  id: Start(System.Diagnostics.ProcessStartInfo)\n  parent: System.Diagnostics.Process\n  langs:\n  - csharp\n  - vb\n  name: Start(ProcessStartInfo)\n  fullName: System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)\n  type: Method\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Start\n    path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n    startLine: 1135\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Starts the process resource that is specified by the parameter containing process start information (for example, the file name of the process to start) and associates the resource with a new <xref href=\\\"System.Diagnostics.Process\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> component.</p>\\n\"\n  syntax:\n    content: public static Process Start(ProcessStartInfo startInfo)\n    content.vb: Public Shared Function Start(startInfo As ProcessStartInfo) As Process\n    parameters:\n    - id: startInfo\n      type: System.Diagnostics.ProcessStartInfo\n      description: \"\\n<p>The <xref href=\\\"System.Diagnostics.ProcessStartInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the information that is used to start the process, including the file name and any command-line arguments. </p>\\n\"\n    return:\n      type: System.Diagnostics.Process\n      description: \"\\n<p>A new <xref href=\\\"System.Diagnostics.Process\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is associated with the process resource, or <strong>null</strong> if no process resource is started. Note that a new process that’s started alongside already running instances of the same process will be independent from the others. In addition, Start may return a non-null Process with its <xref href=\\\"System.Diagnostics.Process.HasExited\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property already set to <strong>true</strong>. In this case, the started process may have activated an existing instance of itself and then exited.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>No file name was specified in the <em>startInfo</em> parameter's <xref href=\\\"System.Diagnostics.ProcessStartInfo.FileName\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property.</p>\\n<p>-or- </p>\\n<p>The <xref href=\\\"System.Diagnostics.ProcessStartInfo.UseShellExecute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property of the <em>startInfo</em> parameter is <strong>true</strong> and the <xref href=\\\"System.Diagnostics.ProcessStartInfo.RedirectStandardInput\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.Diagnostics.ProcessStartInfo.RedirectStandardOutput\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, or <xref href=\\\"System.Diagnostics.ProcessStartInfo.RedirectStandardError\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is also <strong>true</strong>.</p>\\n<p>-or-</p>\\n<p>The <xref href=\\\"System.Diagnostics.ProcessStartInfo.UseShellExecute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property of the <em>startInfo</em> parameter is <strong>true</strong> and the <xref href=\\\"System.Diagnostics.ProcessStartInfo.UserName\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is not <strong>null</strong> or empty or the <xref href=\\\"System.Diagnostics.ProcessStartInfo.Password\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is not <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>startInfo</em> parameter is <strong>null</strong>. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The process object has already been disposed. </p>\\n\"\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: \"\\n<p>The file specified in the <em>startInfo</em> parameter's <xref href=\\\"System.Diagnostics.ProcessStartInfo.FileName\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property could not be found.</p>\\n\"\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: \"\\n<p>An error occurred when opening the associated file. </p>\\n<p>-or-</p>\\n<p>The sum of the length of the arguments and the length of the full path to the process exceeds 2080. The error message associated with this exception can be one of the following: \\\"The data area passed to a system call is too small.\\\" or \\\"Access is denied.\\\"</p>\\n\"\n  seealso:\n  - type: System.Diagnostics.Process.StartInfo\n    commentId: P:System.Diagnostics.Process.StartInfo\n  - type: System.Diagnostics.ProcessStartInfo.FileName\n    commentId: P:System.Diagnostics.ProcessStartInfo.FileName\n  - type: System.Diagnostics.ProcessStartInfo\n    commentId: T:System.Diagnostics.ProcessStartInfo\n  - type: System.Diagnostics.Process.CloseMainWindow\n    commentId: M:System.Diagnostics.Process.CloseMainWindow\n  - type: System.Diagnostics.Process.Kill\n    commentId: M:System.Diagnostics.Process.Kill\n  see:\n  - type: System.Security.Permissions.SecurityAction.LinkDemand\n    commentId: F:System.Security.Permissions.SecurityAction.LinkDemand\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Process.Start(ProcessStartInfo)\n- uid: System.Diagnostics.Process.Start(System.String)\n  commentId: M:System.Diagnostics.Process.Start(System.String)\n  id: Start(System.String)\n  parent: System.Diagnostics.Process\n  langs:\n  - csharp\n  - vb\n  name: Start(String)\n  fullName: System.Diagnostics.Process.Start(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Start\n    path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n    startLine: 1109\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Starts a process resource by specifying the name of a document or application file and associates the resource with a new <xref href=\\\"System.Diagnostics.Process\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> component.</p>\\n\"\n  syntax:\n    content: public static Process Start(string fileName)\n    content.vb: Public Shared Function Start(fileName As String) As Process\n    parameters:\n    - id: fileName\n      type: System.String\n      description: \"\\n<p>The name of a document or application file to run in the process. </p>\\n\"\n    return:\n      type: System.Diagnostics.Process\n      description: \"\\n<p>A new <xref href=\\\"System.Diagnostics.Process\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is associated with the process resource, or <strong>null</strong> if no process resource is started. Note that a new process that’s started alongside already running instances of the same process will be independent from the others. In addition, Start may return a non-null Process with its <xref href=\\\"System.Diagnostics.Process.HasExited\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property already set to <strong>true</strong>. In this case, the started process may have activated an existing instance of itself and then exited.</p>\\n\"\n  exceptions:\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: \"\\n<p>An error occurred when opening the associated file. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The process object has already been disposed. </p>\\n\"\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: \"\\n<p>The PATH environment variable has a string containing quotes.</p>\\n\"\n  seealso:\n  - type: System.Diagnostics.ProcessStartInfo.FileName\n    commentId: P:System.Diagnostics.ProcessStartInfo.FileName\n  - type: System.Diagnostics.Process.StartInfo\n    commentId: P:System.Diagnostics.Process.StartInfo\n  - type: System.Diagnostics.Process.CloseMainWindow\n    commentId: M:System.Diagnostics.Process.CloseMainWindow\n  - type: System.Diagnostics.Process.Kill\n    commentId: M:System.Diagnostics.Process.Kill\n  see:\n  - type: System.Security.Permissions.SecurityAction.LinkDemand\n    commentId: F:System.Security.Permissions.SecurityAction.LinkDemand\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Process.Start(String)\n- uid: System.Diagnostics.Process.Start(System.String,System.String)\n  commentId: M:System.Diagnostics.Process.Start(System.String,System.String)\n  id: Start(System.String,System.String)\n  parent: System.Diagnostics.Process\n  langs:\n  - csharp\n  - vb\n  name: Start(String, String)\n  fullName: System.Diagnostics.Process.Start(System.String, System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Start\n    path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n    startLine: 1122\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Starts a process resource by specifying the name of an application and a set of command-line arguments, and associates the resource with a new <xref href=\\\"System.Diagnostics.Process\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> component.</p>\\n\"\n  syntax:\n    content: public static Process Start(string fileName, string arguments)\n    content.vb: Public Shared Function Start(fileName As String, arguments As String) As Process\n    parameters:\n    - id: fileName\n      type: System.String\n      description: \"\\n<p>The name of an application file to run in the process. </p>\\n\"\n    - id: arguments\n      type: System.String\n      description: \"\\n<p>Command-line arguments to pass when starting the process. </p>\\n\"\n    return:\n      type: System.Diagnostics.Process\n      description: \"\\n<p>A new <xref href=\\\"System.Diagnostics.Process\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is associated with the process resource, or <strong>null</strong> if no process resource is started. Note that a new process that’s started alongside already running instances of the same process will be independent from the others. In addition, Start may return a non-null Process with its <xref href=\\\"System.Diagnostics.Process.HasExited\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property already set to <strong>true</strong>. In this case, the started process may have activated an existing instance of itself and then exited.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The <em>fileName</em> or <em>arguments</em> parameter is <strong>null</strong>. </p>\\n\"\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: \"\\n<p>An error occurred when opening the associated file. </p>\\n<p>-or-</p>\\n<p>The sum of the length of the arguments and the length of the full path to the process exceeds 2080. The error message associated with this exception can be one of the following: \\\"The data area passed to a system call is too small.\\\" or \\\"Access is denied.\\\"</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The process object has already been disposed. </p>\\n\"\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: \"\\n<p>The PATH environment variable has a string containing quotes.</p>\\n\"\n  seealso:\n  - type: System.Diagnostics.ProcessStartInfo.FileName\n    commentId: P:System.Diagnostics.ProcessStartInfo.FileName\n  - type: System.Diagnostics.Process.StartInfo\n    commentId: P:System.Diagnostics.Process.StartInfo\n  - type: System.Diagnostics.ProcessStartInfo\n    commentId: T:System.Diagnostics.ProcessStartInfo\n  - type: System.Diagnostics.Process.CloseMainWindow\n    commentId: M:System.Diagnostics.Process.CloseMainWindow\n  - type: System.Diagnostics.Process.Kill\n    commentId: M:System.Diagnostics.Process.Kill\n  see:\n  - type: System.Security.Permissions.SecurityAction.LinkDemand\n    commentId: F:System.Security.Permissions.SecurityAction.LinkDemand\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Process.Start(String, String)\n- uid: System.Diagnostics.Process.WaitForExit\n  commentId: M:System.Diagnostics.Process.WaitForExit\n  id: WaitForExit\n  parent: System.Diagnostics.Process\n  langs:\n  - csharp\n  - vb\n  name: WaitForExit()\n  fullName: System.Diagnostics.Process.WaitForExit()\n  type: Method\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WaitForExit\n    path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n    startLine: 1203\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Instructs the <xref href=\\\"System.Diagnostics.Process\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> component to wait indefinitely for the associated process to exit.</p>\\n\"\n  syntax:\n    content: public void WaitForExit()\n    content.vb: Public Sub WaitForExit\n  exceptions:\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: \"\\n<p>The wait setting could not be accessed. </p>\\n\"\n  - type: System.SystemException\n    commentId: T:System.SystemException\n    description: \"\\n<p>No process <xref href=\\\"System.Diagnostics.Process.Id\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been set, and a <xref href=\\\"System.Diagnostics.Process.Handle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> from which the <xref href=\\\"System.Diagnostics.Process.Id\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property can be determined does not exist.</p>\\n<p>-or- </p>\\n<p>There is no process associated with this <xref href=\\\"System.Diagnostics.Process\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n<p>-or- </p>\\n<p>You are attempting to call <xref href=\\\"System.Diagnostics.Process.WaitForExit\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for a process that is running on a remote computer. This method is available only for processes that are running on the local computer. </p>\\n\"\n  seealso:\n  - type: System.Diagnostics.Process.CloseMainWindow\n    commentId: M:System.Diagnostics.Process.CloseMainWindow\n  - type: System.Diagnostics.Process.Kill\n    commentId: M:System.Diagnostics.Process.Kill\n  - type: System.Diagnostics.Process.Handle\n    commentId: P:System.Diagnostics.Process.Handle\n  - type: System.Diagnostics.Process.ExitTime\n    commentId: P:System.Diagnostics.Process.ExitTime\n  - type: System.Diagnostics.Process.EnableRaisingEvents\n    commentId: P:System.Diagnostics.Process.EnableRaisingEvents\n  - type: System.Diagnostics.Process.HasExited\n    commentId: P:System.Diagnostics.Process.HasExited\n  - type: System.Diagnostics.Process.Exited\n    commentId: E:System.Diagnostics.Process.Exited\n  see:\n  - type: System.Security.Permissions.SecurityAction.LinkDemand\n    commentId: F:System.Security.Permissions.SecurityAction.LinkDemand\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Process.WaitForExit()\n- uid: System.Diagnostics.Process.WaitForExit(System.Int32)\n  commentId: M:System.Diagnostics.Process.WaitForExit(System.Int32)\n  id: WaitForExit(System.Int32)\n  parent: System.Diagnostics.Process\n  langs:\n  - csharp\n  - vb\n  name: WaitForExit(Int32)\n  fullName: System.Diagnostics.Process.WaitForExit(System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WaitForExit\n    path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n    startLine: 1212\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Instructs the <xref href=\\\"System.Diagnostics.Process\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> component to wait the specified number of milliseconds for the associated process to exit.</p>\\n\"\n  syntax:\n    content: public bool WaitForExit(int milliseconds)\n    content.vb: Public Function WaitForExit(milliseconds As Integer) As Boolean\n    parameters:\n    - id: milliseconds\n      type: System.Int32\n      description: \"\\n<p>The amount of time, in milliseconds, to wait for the associated process to exit. The maximum is the largest possible value of a 32-bit integer, which represents infinity to the operating system. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the associated process has exited; otherwise, <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: \"\\n<p>The wait setting could not be accessed. </p>\\n\"\n  - type: System.SystemException\n    commentId: T:System.SystemException\n    description: \"\\n<p>No process <xref href=\\\"System.Diagnostics.Process.Id\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been set, and a <xref href=\\\"System.Diagnostics.Process.Handle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> from which the <xref href=\\\"System.Diagnostics.Process.Id\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property can be determined does not exist.</p>\\n<p>-or- </p>\\n<p>There is no process associated with this <xref href=\\\"System.Diagnostics.Process\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n<p>-or- </p>\\n<p>You are attempting to call <xref href=\\\"System.Diagnostics.Process.WaitForExit(System.Int32)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for a process that is running on a remote computer. This method is available only for processes that are running on the local computer. </p>\\n\"\n  seealso:\n  - type: System.Diagnostics.Process.CloseMainWindow\n    commentId: M:System.Diagnostics.Process.CloseMainWindow\n  - type: System.Diagnostics.Process.Kill\n    commentId: M:System.Diagnostics.Process.Kill\n  - type: System.Diagnostics.Process.Handle\n    commentId: P:System.Diagnostics.Process.Handle\n  - type: System.Diagnostics.Process.ExitTime\n    commentId: P:System.Diagnostics.Process.ExitTime\n  - type: System.Diagnostics.Process.EnableRaisingEvents\n    commentId: P:System.Diagnostics.Process.EnableRaisingEvents\n  - type: System.Diagnostics.Process.HasExited\n    commentId: P:System.Diagnostics.Process.HasExited\n  - type: System.Diagnostics.Process.Exited\n    commentId: E:System.Diagnostics.Process.Exited\n  - type: System.Diagnostics.Process.SynchronizingObject\n    commentId: P:System.Diagnostics.Process.SynchronizingObject\n  see:\n  - type: System.Security.Permissions.SecurityAction.LinkDemand\n    commentId: F:System.Security.Permissions.SecurityAction.LinkDemand\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Process.WaitForExit(Int32)\n- uid: System.Diagnostics.Process.Dispose\n  commentId: M:System.Diagnostics.Process.Dispose\n  id: Dispose\n  parent: System.Diagnostics.Process\n  langs:\n  - csharp\n  - vb\n  name: Dispose()\n  fullName: System.Diagnostics.Process.Dispose()\n  type: Method\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Dispose\n    path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n    startLine: 1361\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  syntax:\n    content: public void Dispose()\n    content.vb: Public Sub Dispose\n  implements:\n  - System.IDisposable.Dispose\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Process.Dispose()\n- uid: System.Diagnostics.Process.Dispose(System.Boolean)\n  commentId: M:System.Diagnostics.Process.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Diagnostics.Process\n  langs:\n  - csharp\n  - vb\n  name: Dispose(Boolean)\n  fullName: System.Diagnostics.Process.Dispose(System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Dispose\n    path: src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs\n    startLine: 706\n  assemblies:\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Release all resources used by this process.</p>\\n\"\n  syntax:\n    content: protected virtual void Dispose(bool disposing)\n    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to release both managed and unmanaged resources; <strong>false</strong> to release only unmanaged resources. </p>\\n\"\n  modifiers.csharp:\n  - protected\n  - virtual\n  modifiers.vb:\n  - Protected\n  - Overridable\n  nameWithType: Process.Dispose(Boolean)\nreferences:\n- uid: System.Diagnostics\n  isExternal: false\n  name: System.Diagnostics\n  fullName: System.Diagnostics\n  nameWithType: System.Diagnostics\n  commentId: N:System.Diagnostics\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  fullName: System.IDisposable\n  nameWithType: IDisposable\n  commentId: T:System.IDisposable\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  fullName: System.DateTime\n  nameWithType: DateTime\n  commentId: T:System.DateTime\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.Diagnostics.ProcessModule\n  parent: System.Diagnostics\n  isExternal: false\n  name: ProcessModule\n  fullName: System.Diagnostics.ProcessModule\n  nameWithType: ProcessModule\n  commentId: T:System.Diagnostics.ProcessModule\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  fullName: System.IntPtr\n  nameWithType: IntPtr\n  commentId: T:System.IntPtr\n- uid: System.Diagnostics.ProcessModuleCollection\n  parent: System.Diagnostics\n  isExternal: false\n  name: ProcessModuleCollection\n  fullName: System.Diagnostics.ProcessModuleCollection\n  nameWithType: ProcessModuleCollection\n  commentId: T:System.Diagnostics.ProcessModuleCollection\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  fullName: System.Int64\n  nameWithType: Int64\n  commentId: T:System.Int64\n- uid: System.Diagnostics.ProcessPriorityClass\n  parent: System.Diagnostics\n  isExternal: false\n  name: ProcessPriorityClass\n  fullName: System.Diagnostics.ProcessPriorityClass\n  nameWithType: ProcessPriorityClass\n  commentId: T:System.Diagnostics.ProcessPriorityClass\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  fullName: System.TimeSpan\n  nameWithType: TimeSpan\n  commentId: T:System.TimeSpan\n- uid: Microsoft.Win32.SafeHandles.SafeProcessHandle\n  parent: Microsoft.Win32.SafeHandles\n  isExternal: false\n  name: SafeProcessHandle\n  fullName: Microsoft.Win32.SafeHandles.SafeProcessHandle\n  nameWithType: SafeProcessHandle\n  commentId: T:Microsoft.Win32.SafeHandles.SafeProcessHandle\n- uid: Microsoft.Win32.SafeHandles\n  isExternal: false\n  name: Microsoft.Win32.SafeHandles\n  fullName: Microsoft.Win32.SafeHandles\n  nameWithType: Microsoft.Win32.SafeHandles\n  commentId: N:Microsoft.Win32.SafeHandles\n- uid: System.IO.StreamReader\n  parent: System.IO\n  isExternal: false\n  name: StreamReader\n  fullName: System.IO.StreamReader\n  nameWithType: StreamReader\n  commentId: T:System.IO.StreamReader\n- uid: System.IO\n  isExternal: false\n  name: System.IO\n  fullName: System.IO\n  nameWithType: System.IO\n  commentId: N:System.IO\n- uid: System.IO.StreamWriter\n  parent: System.IO\n  isExternal: false\n  name: StreamWriter\n  fullName: System.IO.StreamWriter\n  nameWithType: StreamWriter\n  commentId: T:System.IO.StreamWriter\n- uid: System.Diagnostics.ProcessStartInfo\n  parent: System.Diagnostics\n  isExternal: false\n  name: ProcessStartInfo\n  fullName: System.Diagnostics.ProcessStartInfo\n  nameWithType: ProcessStartInfo\n  commentId: T:System.Diagnostics.ProcessStartInfo\n- uid: System.Diagnostics.ProcessThreadCollection\n  parent: System.Diagnostics\n  isExternal: false\n  name: ProcessThreadCollection\n  fullName: System.Diagnostics.ProcessThreadCollection\n  nameWithType: ProcessThreadCollection\n  commentId: T:System.Diagnostics.ProcessThreadCollection\n- uid: System.Diagnostics.DataReceivedEventHandler\n  parent: System.Diagnostics\n  isExternal: false\n  name: DataReceivedEventHandler\n  fullName: System.Diagnostics.DataReceivedEventHandler\n  nameWithType: DataReceivedEventHandler\n  commentId: T:System.Diagnostics.DataReceivedEventHandler\n- uid: System.EventHandler\n  parent: System\n  isExternal: false\n  name: EventHandler\n  fullName: System.EventHandler\n  nameWithType: EventHandler\n  commentId: T:System.EventHandler\n- uid: System.Diagnostics.Process\n  parent: System.Diagnostics\n  isExternal: false\n  name: Process\n  fullName: System.Diagnostics.Process\n  nameWithType: Process\n  commentId: T:System.Diagnostics.Process\n- uid: System.Diagnostics.Process[]\n  name: Process[]\n  fullName: System.Diagnostics.Process[]\n  fullname.vb: System.Diagnostics.Process()\n  name.vb: Process()\n  spec.csharp:\n  - uid: System.Diagnostics.Process\n    name: Process\n    fullName: System.Diagnostics.Process\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Diagnostics.Process\n    name: Process\n    fullName: System.Diagnostics.Process\n  - name: ()\n    fullName: ()\n  nameWithType: Process[]\n  nameWithType.vb: Process()\n- uid: System.IDisposable.Dispose\n  parent: System.IDisposable\n  isExternal: false\n  name: Dispose()\n  fullName: System.IDisposable.Dispose()\n  spec.csharp:\n  - uid: System.IDisposable.Dispose\n    name: Dispose\n    fullName: System.IDisposable.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IDisposable.Dispose\n    name: Dispose\n    fullName: System.IDisposable.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: IDisposable.Dispose()\n  commentId: M:System.IDisposable.Dispose\n- uid: System.PlatformNotSupportedException\n  isExternal: false\n  name: PlatformNotSupportedException\n  fullName: System.PlatformNotSupportedException\n  nameWithType: PlatformNotSupportedException\n  commentId: T:System.PlatformNotSupportedException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  fullName: System.InvalidOperationException\n  nameWithType: InvalidOperationException\n  commentId: T:System.InvalidOperationException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  fullName: System.NotSupportedException\n  nameWithType: NotSupportedException\n  commentId: T:System.NotSupportedException\n- uid: System.ComponentModel.Win32Exception\n  isExternal: false\n  name: Win32Exception\n  fullName: System.ComponentModel.Win32Exception\n  nameWithType: Win32Exception\n  commentId: T:System.ComponentModel.Win32Exception\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n- uid: System.ComponentModel.InvalidEnumArgumentException\n- uid: System.NullReferenceException\n  isExternal: false\n  name: NullReferenceException\n  fullName: System.NullReferenceException\n  nameWithType: NullReferenceException\n  commentId: T:System.NullReferenceException\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.SystemException\n  parent: System\n  isExternal: true\n  name: SystemException\n  fullName: System.SystemException\n  commentId: T:System.SystemException\n  nameWithType: SystemException\n- uid: System.ObjectDisposedException\n  isExternal: false\n  name: ObjectDisposedException\n  fullName: System.ObjectDisposedException\n  nameWithType: ObjectDisposedException\n  commentId: T:System.ObjectDisposedException\n- uid: System.IO.FileNotFoundException\n  isExternal: false\n  name: FileNotFoundException\n  fullName: System.IO.FileNotFoundException\n  nameWithType: FileNotFoundException\n  commentId: T:System.IO.FileNotFoundException\n"}