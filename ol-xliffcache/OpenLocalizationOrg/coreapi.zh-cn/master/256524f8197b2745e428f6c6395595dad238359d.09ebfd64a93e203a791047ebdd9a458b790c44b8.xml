{"nodes":[{"pos":[366,379],"content":"AsyncLocal<T>","needQuote":true,"nodes":[{"content":"AsyncLocal&lt;T&gt;","pos":[0,13],"source":"AsyncLocal<T>"}]},{"content":"\\n&lt;p&gt;The type of the ambient data.","pos":[1111,1145],"source":"\\n<p>The type of the ambient data."},{"content":"&lt;/p&gt;\\n","pos":[1146,1152],"source":" </p>\\n"},{"pos":[1915,1927],"content":"AsyncLocal()","needQuote":true,"nodes":[{"content":"AsyncLocal()","pos":[0,12]}]},{"pos":[3157,3206],"content":"AsyncLocal(Action<AsyncLocalValueChangedArgs<T>>)","needQuote":true,"nodes":[{"content":"AsyncLocal(Action&lt;AsyncLocalValueChangedArgs&lt;T&gt;&gt;)","pos":[0,49],"source":"AsyncLocal(Action<AsyncLocalValueChangedArgs<T>>)"}]},{"content":"\\n&lt;p&gt;The delegate that is called whenever the current value changes on any thread.","pos":[4245,4327],"source":"\\n<p>The delegate that is called whenever the current value changes on any thread."},{"content":"&lt;/p&gt;\\n","pos":[4328,4334],"source":" </p>\\n"},{"pos":[5215,5220],"content":"Value","needQuote":true,"nodes":[{"content":"Value","pos":[0,5]}]},{"content":"\\n&lt;p&gt;The value of the ambient data.","pos":[5936,5971],"source":"\\n<p>The value of the ambient data."},{"content":"&lt;/p&gt;\\n","pos":[5972,5978],"source":" </p>\\n"},{"pos":[6251,6267],"content":"System.Threading","needQuote":true,"nodes":[{"content":"System.Threading","pos":[0,16]}]},{"pos":[6428,6434],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6594,6604],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[6699,6707],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[6776,6777],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6804,6805],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6875,6883],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[6952,6953],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6980,6981],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7164,7178],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[7297,7303],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[7370,7371],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7421,7427],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7487,7488],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7571,7577],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[7644,7645],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7695,7701],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7761,7762],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7976,7998],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[8146,8152],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[8219,8220],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8270,8276],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[8337,8338]},{"pos":[8393,8399],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8459,8460],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8557,8563],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[8630,8631],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8681,8687],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[8748,8749]},{"pos":[8804,8810],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8870,8871],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9116,9147],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[9313,9328],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[9404,9405],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9455,9461],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[9522,9523]},{"pos":[9578,9584],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9644,9645],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9751,9766],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[9842,9843],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9893,9899],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[9960,9961]},{"pos":[10016,10022],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10082,10083],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10313,10326],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[10427,10438],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[10510,10511],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10538,10539],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10612,10623],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[10695,10696],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10723,10724],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10899,10908],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[11001,11008],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[11076,11077],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11104,11105],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11174,11181],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[11249,11250],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11277,11278],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11453,11470],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[11579,11594],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[11670,11671],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11698,11699],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11776,11791],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[11867,11868],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11895,11896],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12041,12047],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[12238,12275],"content":"Action<AsyncLocalValueChangedArgs<T>>","needQuote":true,"nodes":[{"content":"Action&lt;AsyncLocalValueChangedArgs&lt;T&gt;&gt;","pos":[0,37],"source":"Action<AsyncLocalValueChangedArgs<T>>"}]},{"pos":[12538,12544],"content":"Action","needQuote":true,"nodes":[{"content":"Action","pos":[0,6]}]},{"pos":[12604,12605],"content":"<","needQuote":true,"nodes":[]},{"pos":[12687,12713],"content":"AsyncLocalValueChangedArgs","needQuote":true,"nodes":[{"content":"AsyncLocalValueChangedArgs","pos":[0,26]}]},{"pos":[12782,12783],"content":"<","needQuote":true,"nodes":[]},{"pos":[12810,12811],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[12938,12944],"content":"Action","needQuote":true,"nodes":[{"content":"Action","pos":[0,6]}]},{"content":"(Of","pos":[13005,13008]},{"pos":[13097,13123],"content":"AsyncLocalValueChangedArgs","needQuote":true,"nodes":[{"content":"AsyncLocalValueChangedArgs","pos":[0,26]}]},{"content":"(Of","pos":[13193,13196]},{"pos":[13230,13231],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[13258,13259],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13286,13287],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13550,13559],"content":"Action<T>","needQuote":true,"nodes":[{"content":"Action&lt;T&gt;","pos":[0,9],"source":"Action<T>"}]},{"pos":[13698,13704],"content":"Action","needQuote":true,"nodes":[{"content":"Action","pos":[0,6]}]},{"pos":[13743,13744],"content":"<","needQuote":true,"nodes":[]},{"pos":[13771,13772],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[13867,13873],"content":"Action","needQuote":true,"nodes":[{"content":"Action","pos":[0,6]}]},{"content":"(Of","pos":[13913,13916]},{"pos":[13950,13951],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[13978,13979],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14122,14123],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[14212,14213],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]}],"content":"items:\n- uid: System.Threading.AsyncLocal`1\n  commentId: T:System.Threading.AsyncLocal`1\n  id: AsyncLocal`1\n  parent: System.Threading\n  children:\n  - System.Threading.AsyncLocal`1.#ctor\n  - System.Threading.AsyncLocal`1.#ctor(System.Action{System.Threading.AsyncLocalValueChangedArgs{`0}})\n  - System.Threading.AsyncLocal`1.Value\n  langs:\n  - csharp\n  - vb\n  name: AsyncLocal<T>\n  fullName: System.Threading.AsyncLocal<T>\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/AsyncLocal.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: AsyncLocal\n    path: src/mscorlib/src/System/Threading/AsyncLocal.cs\n    startLine: 40\n  assemblies:\n  - System.Threading\n  namespace: System.Threading\n  summary: \"\\n<p>Represents ambient data that is local to a given asynchronous control flow, such as an asynchronous method. </p>\\n\"\n  syntax:\n    content: 'public sealed class AsyncLocal<T> : IAsyncLocal'\n    content.vb: >-\n      Public NotInheritable Class AsyncLocal(Of T)\n          Implements IAsyncLocal\n    typeParameters:\n    - id: T\n      description: \"\\n<p>The type of the ambient data. </p>\\n\"\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  fullName.vb: System.Threading.AsyncLocal(Of T)\n  name.vb: AsyncLocal(Of T)\n  nameWithType: AsyncLocal<T>\n  nameWithType.vb: AsyncLocal(Of T)\n- uid: System.Threading.AsyncLocal`1.#ctor\n  commentId: M:System.Threading.AsyncLocal`1.#ctor\n  id: '#ctor'\n  parent: System.Threading.AsyncLocal`1\n  langs:\n  - csharp\n  - vb\n  name: AsyncLocal()\n  fullName: System.Threading.AsyncLocal<T>.AsyncLocal()\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/AsyncLocal.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Threading/AsyncLocal.cs\n    startLine: 48\n  assemblies:\n  - System.Threading\n  namespace: System.Threading\n  summary: \"\\n<p>Instantiates an <xref href=\\\"System.Threading.AsyncLocal`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance that does not receive change notifications. </p>\\n\"\n  syntax:\n    content: public AsyncLocal()\n    content.vb: Public Sub New\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Threading.AsyncLocal(Of T).AsyncLocal()\n  nameWithType: AsyncLocal<T>.AsyncLocal()\n  nameWithType.vb: AsyncLocal(Of T).AsyncLocal()\n- uid: System.Threading.AsyncLocal`1.#ctor(System.Action{System.Threading.AsyncLocalValueChangedArgs{`0}})\n  commentId: M:System.Threading.AsyncLocal`1.#ctor(System.Action{System.Threading.AsyncLocalValueChangedArgs{`0}})\n  id: '#ctor(System.Action{System.Threading.AsyncLocalValueChangedArgs{`0}})'\n  parent: System.Threading.AsyncLocal`1\n  langs:\n  - csharp\n  - vb\n  name: AsyncLocal(Action<AsyncLocalValueChangedArgs<T>>)\n  fullName: System.Threading.AsyncLocal<T>.AsyncLocal(System.Action<System.Threading.AsyncLocalValueChangedArgs<T>>)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/AsyncLocal.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Threading/AsyncLocal.cs\n    startLine: 56\n  assemblies:\n  - System.Threading\n  namespace: System.Threading\n  summary: \"\\n<p>Instantiates an <xref href=\\\"System.Threading.AsyncLocal`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> local instance that receives change notifications. </p>\\n\"\n  syntax:\n    content: >-\n      [SecurityCritical]\n\n      public AsyncLocal(Action<AsyncLocalValueChangedArgs<T>> valueChangedHandler)\n    content.vb: >-\n      <SecurityCritical>\n\n      Public Sub New(valueChangedHandler As Action(Of AsyncLocalValueChangedArgs(Of T)))\n    parameters:\n    - id: valueChangedHandler\n      type: System.Action{System.Threading.AsyncLocalValueChangedArgs{{T}}}\n      description: \"\\n<p>The delegate that is called whenever the current value changes on any thread. </p>\\n\"\n  seealso:\n  - type: System.Threading.AsyncLocalValueChangedArgs`1\n    commentId: T:System.Threading.AsyncLocalValueChangedArgs`1\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n    ctor: System.Security.SecurityCriticalAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Threading.AsyncLocal(Of T).AsyncLocal(System.Action(Of System.Threading.AsyncLocalValueChangedArgs(Of T)))\n  name.vb: AsyncLocal(Action(Of AsyncLocalValueChangedArgs(Of T)))\n  nameWithType: AsyncLocal<T>.AsyncLocal(Action<AsyncLocalValueChangedArgs<T>>)\n  nameWithType.vb: AsyncLocal(Of T).AsyncLocal(Action(Of AsyncLocalValueChangedArgs(Of T)))\n- uid: System.Threading.AsyncLocal`1.Value\n  commentId: P:System.Threading.AsyncLocal`1.Value\n  id: Value\n  parent: System.Threading.AsyncLocal`1\n  langs:\n  - csharp\n  - vb\n  name: Value\n  fullName: System.Threading.AsyncLocal<T>.Value\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/AsyncLocal.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Value\n    path: src/mscorlib/src/System/Threading/AsyncLocal.cs\n    startLine: 62\n  assemblies:\n  - System.Threading\n  namespace: System.Threading\n  summary: \"\\n<p>Gets or sets the value of the ambient data. </p>\\n\"\n  syntax:\n    content: >-\n      public T Value\n\n      {\n          [SecuritySafeCritical]\n          get;\n          [SecuritySafeCritical]\n          set;\n      }\n    content.vb: Public Property Value As T\n    parameters: []\n    return:\n      type: '{T}'\n      description: \"\\n<p>The value of the ambient data. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Threading.AsyncLocal(Of T).Value\n  nameWithType: AsyncLocal<T>.Value\n  nameWithType.vb: AsyncLocal(Of T).Value\nreferences:\n- uid: System.Threading\n  isExternal: false\n  name: System.Threading\n  fullName: System.Threading\n  nameWithType: System.Threading\n  commentId: N:System.Threading\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Action{System.Threading.AsyncLocalValueChangedArgs{{T}}}\n  parent: System\n  definition: System.Action`1\n  name: Action<AsyncLocalValueChangedArgs<T>>\n  fullName: System.Action<System.Threading.AsyncLocalValueChangedArgs<T>>\n  fullname.vb: System.Action(Of System.Threading.AsyncLocalValueChangedArgs(Of T))\n  name.vb: Action(Of AsyncLocalValueChangedArgs(Of T))\n  spec.csharp:\n  - uid: System.Action`1\n    name: Action\n    fullName: System.Action\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Threading.AsyncLocalValueChangedArgs`1\n    name: AsyncLocalValueChangedArgs\n    fullName: System.Threading.AsyncLocalValueChangedArgs\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Action`1\n    name: Action\n    fullName: System.Action\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Threading.AsyncLocalValueChangedArgs`1\n    name: AsyncLocalValueChangedArgs\n    fullName: System.Threading.AsyncLocalValueChangedArgs\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Action<AsyncLocalValueChangedArgs<T>>\n  nameWithType.vb: Action(Of AsyncLocalValueChangedArgs(Of T))\n  commentId: T:System.Action{System.Threading.AsyncLocalValueChangedArgs{`0}}\n- uid: System.Action`1\n  isExternal: false\n  name: Action<T>\n  fullName: System.Action<T>\n  fullname.vb: System.Action(Of T)\n  name.vb: Action(Of T)\n  spec.csharp:\n  - uid: System.Action`1\n    name: Action\n    fullName: System.Action\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Action`1\n    name: Action\n    fullName: System.Action\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: Action<T>\n  nameWithType.vb: Action(Of T)\n  commentId: T:System.Action`1\n- uid: '{T}'\n  definition: T\n  name: T\n  fullName: T\n  nameWithType: T\n  commentId: '!:T'\n- uid: T\n  isExternal: false\n  name: T\n  fullName: T\n  nameWithType: T\n"}