{"nodes":[{"pos":[1395,1424],"content":"TaskCompletionSource<TResult>","needQuote":true,"nodes":[{"content":"TaskCompletionSource&lt;TResult&gt;","pos":[0,29],"source":"TaskCompletionSource<TResult>"}]},{"pos":[3581,3603],"content":"TaskCompletionSource()","needQuote":true,"nodes":[{"content":"TaskCompletionSource()","pos":[0,22]}]},{"pos":[4861,4889],"content":"TaskCompletionSource(Object)","needQuote":true,"nodes":[{"content":"TaskCompletionSource(Object)","pos":[0,28]}]},{"pos":[6597,6646],"content":"TaskCompletionSource(Object, TaskCreationOptions)","needQuote":true,"nodes":[{"content":"TaskCompletionSource(Object, TaskCreationOptions)","pos":[0,49]}]},{"pos":[9102,9143],"content":"TaskCompletionSource(TaskCreationOptions)","needQuote":true,"nodes":[{"content":"TaskCompletionSource(TaskCreationOptions)","pos":[0,41]}]},{"pos":[11161,11165],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[12824,12837],"content":"SetCanceled()","needQuote":true,"nodes":[{"content":"SetCanceled()","pos":[0,13]}]},{"pos":[15238,15274],"content":"SetException(IEnumerable<Exception>)","needQuote":true,"nodes":[{"content":"SetException(IEnumerable&lt;Exception&gt;)","pos":[0,36],"source":"SetException(IEnumerable<Exception>)"}]},{"content":"\\n&lt;p&gt;The &lt;em&gt;exceptions&lt;/em&gt; argument is null.&lt;/p&gt;\\n","pos":[16898,16950],"source":"\\n<p>The <em>exceptions</em> argument is null.</p>\\n"},{"content":"\\n&lt;p&gt;There are one or more null elements in &lt;em&gt;exceptions&lt;/em&gt;.&lt;/p&gt;\\n","pos":[17047,17117],"source":"\\n<p>There are one or more null elements in <em>exceptions</em>.</p>\\n"},{"pos":[18455,18478],"content":"SetException(Exception)","needQuote":true,"nodes":[{"content":"SetException(Exception)","pos":[0,23]}]},{"content":"\\n&lt;p&gt;The &lt;em&gt;exception&lt;/em&gt; argument is null.&lt;/p&gt;\\n","pos":[19963,20014],"source":"\\n<p>The <em>exception</em> argument is null.</p>\\n"},{"pos":[21178,21196],"content":"SetResult(TResult)","needQuote":true,"nodes":[{"content":"SetResult(TResult)","pos":[0,18]}]},{"pos":[23646,23662],"content":"TrySetCanceled()","needQuote":true,"nodes":[{"content":"TrySetCanceled()","pos":[0,16]}]},{"content":"\\n&lt;p&gt;True if the operation was successful; false if the operation was unsuccessful or the object has already been disposed.&lt;/p&gt;\\n","pos":[24562,24691],"source":"\\n<p>True if the operation was successful; false if the operation was unsuccessful or the object has already been disposed.</p>\\n"},{"pos":[25335,25368],"content":"TrySetCanceled(CancellationToken)","needQuote":true,"nodes":[{"content":"TrySetCanceled(CancellationToken)","pos":[0,33]}]},{"content":"\\n&lt;p&gt;A cancellation token.","pos":[26497,26523],"source":"\\n<p>A cancellation token."},{"content":"&lt;/p&gt;\\n","pos":[26524,26530],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the operation is successful; otherwise, &lt;strong&gt;false&lt;/strong&gt;.","pos":[26591,26686],"source":"\\n<p>\\n<strong>true</strong> if the operation is successful; otherwise, <strong>false</strong>."},{"content":"&lt;/p&gt;\\n","pos":[26687,26693],"source":" </p>\\n"},{"pos":[27474,27513],"content":"TrySetException(IEnumerable<Exception>)","needQuote":true,"nodes":[{"content":"TrySetException(IEnumerable&lt;Exception&gt;)","pos":[0,39],"source":"TrySetException(IEnumerable<Exception>)"}]},{"content":"\\n&lt;p&gt;True if the operation was successful; otherwise, false.&lt;/p&gt;\\n","pos":[28871,28937],"source":"\\n<p>True if the operation was successful; otherwise, false.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;exceptions&lt;/em&gt; argument is null.&lt;/p&gt;\\n","pos":[29304,29356],"source":"\\n<p>The <em>exceptions</em> argument is null.</p>\\n"},{"content":"\\n&lt;p&gt;There are one or more null elements in &lt;em&gt;exceptions&lt;/em&gt;.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;The &lt;em&gt;exceptions&lt;/em&gt; collection is empty.&lt;/p&gt;\\n","pos":[29453,29589],"source":"\\n<p>There are one or more null elements in <em>exceptions</em>.</p>\\n<p>-or-</p>\\n<p>The <em>exceptions</em> collection is empty.</p>\\n"},{"pos":[30345,30371],"content":"TrySetException(Exception)","needQuote":true,"nodes":[{"content":"TrySetException(Exception)","pos":[0,26]}]},{"content":"\\n&lt;p&gt;True if the operation was successful; otherwise, false.&lt;/p&gt;\\n","pos":[31589,31655],"source":"\\n<p>True if the operation was successful; otherwise, false.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;exception&lt;/em&gt; argument is null.&lt;/p&gt;\\n","pos":[32022,32073],"source":"\\n<p>The <em>exception</em> argument is null.</p>\\n"},{"pos":[32652,32673],"content":"TrySetResult(TResult)","needQuote":true,"nodes":[{"content":"TrySetResult(TResult)","pos":[0,21]}]},{"content":"\\n&lt;p&gt;True if the operation was successful; otherwise, false.","pos":[33825,33885],"source":"\\n<p>True if the operation was successful; otherwise, false."},{"content":"&lt;/p&gt;\\n","pos":[33886,33892],"source":" </p>\\n"},{"pos":[34257,34279],"content":"System.Threading.Tasks","needQuote":true,"nodes":[{"content":"System.Threading.Tasks","pos":[0,22]}]},{"pos":[34458,34464],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[34624,34634],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[34729,34737],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[34806,34807],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[34834,34835],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34905,34913],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[34982,34983],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[35010,35011],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[35194,35208],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[35327,35333],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[35400,35401],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[35451,35457],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[35517,35518],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[35601,35607],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[35674,35675],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[35725,35731],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[35791,35792],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[36006,36028],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[36176,36182],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[36249,36250],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[36300,36306],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[36367,36368]},{"pos":[36423,36429],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[36489,36490],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[36587,36593],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[36660,36661],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[36711,36717],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[36778,36779]},{"pos":[36834,36840],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[36900,36901],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[37146,37177],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[37343,37358],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[37434,37435],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[37485,37491],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[37552,37553]},{"pos":[37608,37614],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[37674,37675],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[37781,37796],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[37872,37873],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[37923,37929],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[37990,37991]},{"pos":[38046,38052],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[38112,38113],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[38343,38356],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[38457,38468],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[38540,38541],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[38568,38569],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[38642,38653],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[38725,38726],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[38753,38754],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[38929,38938],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[39031,39038],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[39106,39107],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[39134,39135],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[39204,39211],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[39279,39280],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[39307,39308],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[39483,39500],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[39609,39624],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[39700,39701],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[39728,39729],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[39806,39821],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[39897,39898],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[39925,39926],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[40071,40077],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[40253,40272],"content":"TaskCreationOptions","needQuote":true,"nodes":[{"content":"TaskCreationOptions","pos":[0,19]}]},{"pos":[40553,40566],"content":"Task<TResult>","needQuote":true,"nodes":[{"content":"Task&lt;TResult&gt;","pos":[0,13],"source":"Task<TResult>"}]},{"pos":[40763,40767],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[40820,40821],"content":"<","needQuote":true,"nodes":[]},{"pos":[40848,40855],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[40970,40974],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"content":"(Of","pos":[41028,41031]},{"pos":[41065,41072],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[41105,41106],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[41301,41314],"content":"Task<TResult>","needQuote":true,"nodes":[{"content":"Task&lt;TResult&gt;","pos":[0,13],"source":"Task<TResult>"}]},{"pos":[41511,41515],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[41568,41569],"content":"<","needQuote":true,"nodes":[]},{"pos":[41596,41603],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[41718,41722],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"content":"(Of","pos":[41776,41779]},{"pos":[41813,41820],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[41853,41854],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[42146,42168],"content":"IEnumerable<Exception>","needQuote":true,"nodes":[{"content":"IEnumerable&lt;Exception&gt;","pos":[0,22],"source":"IEnumerable<Exception>"}]},{"pos":[42425,42436],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[42521,42522],"content":"<","needQuote":true,"nodes":[]},{"pos":[42575,42584],"content":"Exception","needQuote":true,"nodes":[{"content":"Exception","pos":[0,9]}]},{"pos":[42740,42751],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[42837,42840]},{"pos":[42900,42909],"content":"Exception","needQuote":true,"nodes":[{"content":"Exception","pos":[0,9]}]},{"pos":[42972,42973],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[43222,43236],"content":"IEnumerable<T>","needQuote":true,"nodes":[{"content":"IEnumerable&lt;T&gt;","pos":[0,14],"source":"IEnumerable<T>"}]},{"pos":[43455,43466],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[43530,43531],"content":"<","needQuote":true,"nodes":[]},{"pos":[43558,43559],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[43679,43690],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[43755,43758]},{"pos":[43792,43793],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[43820,43821],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[44024,44050],"content":"System.Collections.Generic","needQuote":true,"nodes":[{"content":"System.Collections.Generic","pos":[0,26]}]},{"pos":[44244,44253],"content":"Exception","needQuote":true,"nodes":[{"content":"Exception","pos":[0,9]}]},{"pos":[44390,44397],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[44510,44517],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[44629,44636],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[44815,44832],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[45016,45032],"content":"System.Threading","needQuote":true,"nodes":[{"content":"System.Threading","pos":[0,16]}]},{"pos":[45197,45224],"content":"ArgumentOutOfRangeException","needQuote":true,"nodes":[{"content":"ArgumentOutOfRangeException","pos":[0,27]}]},{"pos":[45451,45476],"content":"InvalidOperationException","needQuote":true,"nodes":[{"content":"InvalidOperationException","pos":[0,25]}]},{"pos":[45678,45701],"content":"ObjectDisposedException","needQuote":true,"nodes":[{"content":"ObjectDisposedException","pos":[0,23]}]},{"pos":[45895,45916],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[46117,46134],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]}],"content":"items:\n- uid: System.Threading.Tasks.TaskCompletionSource`1\n  commentId: T:System.Threading.Tasks.TaskCompletionSource`1\n  id: TaskCompletionSource`1\n  parent: System.Threading.Tasks\n  children:\n  - System.Threading.Tasks.TaskCompletionSource`1.#ctor\n  - System.Threading.Tasks.TaskCompletionSource`1.#ctor(System.Object)\n  - System.Threading.Tasks.TaskCompletionSource`1.#ctor(System.Object,System.Threading.Tasks.TaskCreationOptions)\n  - System.Threading.Tasks.TaskCompletionSource`1.#ctor(System.Threading.Tasks.TaskCreationOptions)\n  - System.Threading.Tasks.TaskCompletionSource`1.SetCanceled\n  - System.Threading.Tasks.TaskCompletionSource`1.SetException(System.Collections.Generic.IEnumerable{System.Exception})\n  - System.Threading.Tasks.TaskCompletionSource`1.SetException(System.Exception)\n  - System.Threading.Tasks.TaskCompletionSource`1.SetResult(`0)\n  - System.Threading.Tasks.TaskCompletionSource`1.Task\n  - System.Threading.Tasks.TaskCompletionSource`1.TrySetCanceled\n  - System.Threading.Tasks.TaskCompletionSource`1.TrySetCanceled(System.Threading.CancellationToken)\n  - System.Threading.Tasks.TaskCompletionSource`1.TrySetException(System.Collections.Generic.IEnumerable{System.Exception})\n  - System.Threading.Tasks.TaskCompletionSource`1.TrySetException(System.Exception)\n  - System.Threading.Tasks.TaskCompletionSource`1.TrySetResult(`0)\n  langs:\n  - csharp\n  - vb\n  name: TaskCompletionSource<TResult>\n  fullName: System.Threading.Tasks.TaskCompletionSource<TResult>\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/Tasks/TaskCompletionSource.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: TaskCompletionSource\n    path: src/mscorlib/src/System/Threading/Tasks/TaskCompletionSource.cs\n    startLine: 49\n  assemblies:\n  - System.Threading.Tasks\n  namespace: System.Threading.Tasks\n  summary: \"\\n<p>Represents the producer side of a <xref href=\\\"System.Threading.Tasks.Task`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> unbound to a delegate, providing access to the consumer side through the <xref href=\\\"System.Threading.Tasks.TaskCompletionSource`1.Task\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property.</p>\\n\"\n  syntax:\n    content: >-\n      [HostProtection(Synchronization = true, ExternalThreading = true)]\n\n      public class TaskCompletionSource<TResult>\n    content.vb: >-\n      <HostProtection(Synchronization:=True, ExternalThreading:=True)>\n\n      Public Class TaskCompletionSource(Of TResult)\n    typeParameters:\n    - id: TResult\n      description: \"\\n<p>The type of the result value assocatied with this <xref href=\\\"System.Threading.Tasks.TaskCompletionSource`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  fullName.vb: System.Threading.Tasks.TaskCompletionSource(Of TResult)\n  name.vb: TaskCompletionSource(Of TResult)\n  nameWithType: TaskCompletionSource<TResult>\n  nameWithType.vb: TaskCompletionSource(Of TResult)\n- uid: System.Threading.Tasks.TaskCompletionSource`1.#ctor\n  commentId: M:System.Threading.Tasks.TaskCompletionSource`1.#ctor\n  id: '#ctor'\n  parent: System.Threading.Tasks.TaskCompletionSource`1\n  langs:\n  - csharp\n  - vb\n  name: TaskCompletionSource()\n  fullName: System.Threading.Tasks.TaskCompletionSource<TResult>.TaskCompletionSource()\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/Tasks/TaskCompletionSource.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Threading/Tasks/TaskCompletionSource.cs\n    startLine: 57\n  assemblies:\n  - System.Threading.Tasks\n  namespace: System.Threading.Tasks\n  summary: \"\\n<p>Creates a <xref href=\\\"System.Threading.Tasks.TaskCompletionSource`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public TaskCompletionSource()\n    content.vb: Public Sub New\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Threading.Tasks.TaskCompletionSource(Of TResult).TaskCompletionSource()\n  nameWithType: TaskCompletionSource<TResult>.TaskCompletionSource()\n  nameWithType.vb: TaskCompletionSource(Of TResult).TaskCompletionSource()\n- uid: System.Threading.Tasks.TaskCompletionSource`1.#ctor(System.Object)\n  commentId: M:System.Threading.Tasks.TaskCompletionSource`1.#ctor(System.Object)\n  id: '#ctor(System.Object)'\n  parent: System.Threading.Tasks.TaskCompletionSource`1\n  langs:\n  - csharp\n  - vb\n  name: TaskCompletionSource(Object)\n  fullName: System.Threading.Tasks.TaskCompletionSource<TResult>.TaskCompletionSource(System.Object)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/Tasks/TaskCompletionSource.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Threading/Tasks/TaskCompletionSource.cs\n    startLine: 88\n  assemblies:\n  - System.Threading.Tasks\n  namespace: System.Threading.Tasks\n  summary: \"\\n<p>Creates a <xref href=\\\"System.Threading.Tasks.TaskCompletionSource`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> with the specified state.</p>\\n\"\n  syntax:\n    content: public TaskCompletionSource(object state)\n    content.vb: Public Sub New(state As Object)\n    parameters:\n    - id: state\n      type: System.Object\n      description: \"\\n<p>The state to use as the underlying <xref href=\\\"System.Threading.Tasks.Task`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>'s AsyncState.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Threading.Tasks.TaskCompletionSource(Of TResult).TaskCompletionSource(System.Object)\n  nameWithType: TaskCompletionSource<TResult>.TaskCompletionSource(Object)\n  nameWithType.vb: TaskCompletionSource(Of TResult).TaskCompletionSource(Object)\n- uid: System.Threading.Tasks.TaskCompletionSource`1.#ctor(System.Object,System.Threading.Tasks.TaskCreationOptions)\n  commentId: M:System.Threading.Tasks.TaskCompletionSource`1.#ctor(System.Object,System.Threading.Tasks.TaskCreationOptions)\n  id: '#ctor(System.Object,System.Threading.Tasks.TaskCreationOptions)'\n  parent: System.Threading.Tasks.TaskCompletionSource`1\n  langs:\n  - csharp\n  - vb\n  name: TaskCompletionSource(Object, TaskCreationOptions)\n  fullName: System.Threading.Tasks.TaskCompletionSource<TResult>.TaskCompletionSource(System.Object, System.Threading.Tasks.TaskCreationOptions)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/Tasks/TaskCompletionSource.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Threading/Tasks/TaskCompletionSource.cs\n    startLine: 105\n  assemblies:\n  - System.Threading.Tasks\n  namespace: System.Threading.Tasks\n  summary: \"\\n<p>Creates a <xref href=\\\"System.Threading.Tasks.TaskCompletionSource`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> with the specified state and options.</p>\\n\"\n  syntax:\n    content: public TaskCompletionSource(object state, TaskCreationOptions creationOptions)\n    content.vb: Public Sub New(state As Object, creationOptions As TaskCreationOptions)\n    parameters:\n    - id: state\n      type: System.Object\n      description: \"\\n<p>The state to use as the underlying <xref href=\\\"System.Threading.Tasks.Task`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>'s AsyncState.</p>\\n\"\n    - id: creationOptions\n      type: System.Threading.Tasks.TaskCreationOptions\n      description: \"\\n<p>The options to use when creating the underlying <xref href=\\\"System.Threading.Tasks.Task`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The <em>creationOptions</em> represent options invalid for use with a <xref href=\\\"System.Threading.Tasks.TaskCompletionSource`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Threading.Tasks.TaskCompletionSource(Of TResult).TaskCompletionSource(System.Object, System.Threading.Tasks.TaskCreationOptions)\n  nameWithType: TaskCompletionSource<TResult>.TaskCompletionSource(Object, TaskCreationOptions)\n  nameWithType.vb: TaskCompletionSource(Of TResult).TaskCompletionSource(Object, TaskCreationOptions)\n- uid: System.Threading.Tasks.TaskCompletionSource`1.#ctor(System.Threading.Tasks.TaskCreationOptions)\n  commentId: M:System.Threading.Tasks.TaskCompletionSource`1.#ctor(System.Threading.Tasks.TaskCreationOptions)\n  id: '#ctor(System.Threading.Tasks.TaskCreationOptions)'\n  parent: System.Threading.Tasks.TaskCompletionSource`1\n  langs:\n  - csharp\n  - vb\n  name: TaskCompletionSource(TaskCreationOptions)\n  fullName: System.Threading.Tasks.TaskCompletionSource<TResult>.TaskCompletionSource(System.Threading.Tasks.TaskCreationOptions)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/Tasks/TaskCompletionSource.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Threading/Tasks/TaskCompletionSource.cs\n    startLine: 77\n  assemblies:\n  - System.Threading.Tasks\n  namespace: System.Threading.Tasks\n  summary: \"\\n<p>Creates a <xref href=\\\"System.Threading.Tasks.TaskCompletionSource`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> with the specified options.</p>\\n\"\n  syntax:\n    content: public TaskCompletionSource(TaskCreationOptions creationOptions)\n    content.vb: Public Sub New(creationOptions As TaskCreationOptions)\n    parameters:\n    - id: creationOptions\n      type: System.Threading.Tasks.TaskCreationOptions\n      description: \"\\n<p>The options to use when creating the underlying <xref href=\\\"System.Threading.Tasks.Task`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The <em>creationOptions</em> represent options invalid for use with a <xref href=\\\"System.Threading.Tasks.TaskCompletionSource`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Threading.Tasks.TaskCompletionSource(Of TResult).TaskCompletionSource(System.Threading.Tasks.TaskCreationOptions)\n  nameWithType: TaskCompletionSource<TResult>.TaskCompletionSource(TaskCreationOptions)\n  nameWithType.vb: TaskCompletionSource(Of TResult).TaskCompletionSource(TaskCreationOptions)\n- uid: System.Threading.Tasks.TaskCompletionSource`1.Task\n  commentId: P:System.Threading.Tasks.TaskCompletionSource`1.Task\n  id: Task\n  parent: System.Threading.Tasks.TaskCompletionSource`1\n  langs:\n  - csharp\n  - vb\n  name: Task\n  fullName: System.Threading.Tasks.TaskCompletionSource<TResult>.Task\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/Tasks/TaskCompletionSource.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Task\n    path: src/mscorlib/src/System/Threading/Tasks/TaskCompletionSource.cs\n    startLine: 123\n  assemblies:\n  - System.Threading.Tasks\n  namespace: System.Threading.Tasks\n  summary: \"\\n<p>Gets the <xref href=\\\"System.Threading.Tasks.Task`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> created by this <xref href=\\\"System.Threading.Tasks.TaskCompletionSource`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public Task<TResult> Task { get; }\n    content.vb: Public ReadOnly Property Task As Task(Of TResult)\n    parameters: []\n    return:\n      type: System.Threading.Tasks.Task{{TResult}}\n      description: \"\\n<p>Returns the <xref href=\\\"System.Threading.Tasks.Task`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> created by this <xref href=\\\"System.Threading.Tasks.TaskCompletionSource`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  fullName.vb: System.Threading.Tasks.TaskCompletionSource(Of TResult).Task\n  nameWithType: TaskCompletionSource<TResult>.Task\n  nameWithType.vb: TaskCompletionSource(Of TResult).Task\n- uid: System.Threading.Tasks.TaskCompletionSource`1.SetCanceled\n  commentId: M:System.Threading.Tasks.TaskCompletionSource`1.SetCanceled\n  id: SetCanceled\n  parent: System.Threading.Tasks.TaskCompletionSource`1\n  langs:\n  - csharp\n  - vb\n  name: SetCanceled()\n  fullName: System.Threading.Tasks.TaskCompletionSource<TResult>.SetCanceled()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/Tasks/TaskCompletionSource.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: SetCanceled\n    path: src/mscorlib/src/System/Threading/Tasks/TaskCompletionSource.cs\n    startLine: 363\n  assemblies:\n  - System.Threading.Tasks\n  namespace: System.Threading.Tasks\n  summary: \"\\n<p>Transitions the underlying <xref href=\\\"System.Threading.Tasks.Task`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> into the <xref href=\\\"System.Threading.Tasks.TaskStatus.Canceled\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> state.</p>\\n\"\n  syntax:\n    content: public void SetCanceled()\n    content.vb: Public Sub SetCanceled\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The underlying <xref href=\\\"System.Threading.Tasks.Task`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is already in one of the three final states: <xref href=\\\"System.Threading.Tasks.TaskStatus.RanToCompletion\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.Threading.Tasks.TaskStatus.Faulted\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, or <xref href=\\\"System.Threading.Tasks.TaskStatus.Canceled\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, or if the underlying <xref href=\\\"System.Threading.Tasks.Task`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has already been disposed.</p>\\n\"\n  seealso:\n  - type: System.Threading.Tasks.TaskCompletionSource`1.TrySetCanceled\n    commentId: M:System.Threading.Tasks.TaskCompletionSource`1.TrySetCanceled\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Threading.Tasks.TaskCompletionSource(Of TResult).SetCanceled()\n  nameWithType: TaskCompletionSource<TResult>.SetCanceled()\n  nameWithType.vb: TaskCompletionSource(Of TResult).SetCanceled()\n- uid: System.Threading.Tasks.TaskCompletionSource`1.SetException(System.Collections.Generic.IEnumerable{System.Exception})\n  commentId: M:System.Threading.Tasks.TaskCompletionSource`1.SetException(System.Collections.Generic.IEnumerable{System.Exception})\n  id: SetException(System.Collections.Generic.IEnumerable{System.Exception})\n  parent: System.Threading.Tasks.TaskCompletionSource`1\n  langs:\n  - csharp\n  - vb\n  name: SetException(IEnumerable<Exception>)\n  fullName: System.Threading.Tasks.TaskCompletionSource<TResult>.SetException(System.Collections.Generic.IEnumerable<System.Exception>)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/Tasks/TaskCompletionSource.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: SetException\n    path: src/mscorlib/src/System/Threading/Tasks/TaskCompletionSource.cs\n    startLine: 266\n  assemblies:\n  - System.Threading.Tasks\n  namespace: System.Threading.Tasks\n  summary: \"\\n<p>Transitions the underlying <xref href=\\\"System.Threading.Tasks.Task`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> into the <xref href=\\\"System.Threading.Tasks.TaskStatus.Faulted\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> state and binds a collection of exception objects to it.</p>\\n\"\n  syntax:\n    content: public void SetException(IEnumerable<Exception> exceptions)\n    content.vb: Public Sub SetException(exceptions As IEnumerable(Of Exception))\n    parameters:\n    - id: exceptions\n      type: System.Collections.Generic.IEnumerable{System.Exception}\n      description: \"\\n<p>The collection of exceptions to bind to this <xref href=\\\"System.Threading.Tasks.Task`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Threading.Tasks.TaskCompletionSource`1.Task\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> was disposed.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>exceptions</em> argument is null.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>There are one or more null elements in <em>exceptions</em>.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The underlying <xref href=\\\"System.Threading.Tasks.Task`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is already in one of the three final states: <xref href=\\\"System.Threading.Tasks.TaskStatus.RanToCompletion\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.Threading.Tasks.TaskStatus.Faulted\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, or <xref href=\\\"System.Threading.Tasks.TaskStatus.Canceled\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p></p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Threading.Tasks.TaskCompletionSource(Of TResult).SetException(System.Collections.Generic.IEnumerable(Of System.Exception))\n  name.vb: SetException(IEnumerable(Of Exception))\n  nameWithType: TaskCompletionSource<TResult>.SetException(IEnumerable<Exception>)\n  nameWithType.vb: TaskCompletionSource(Of TResult).SetException(IEnumerable(Of Exception))\n- uid: System.Threading.Tasks.TaskCompletionSource`1.SetException(System.Exception)\n  commentId: M:System.Threading.Tasks.TaskCompletionSource`1.SetException(System.Exception)\n  id: SetException(System.Exception)\n  parent: System.Threading.Tasks.TaskCompletionSource`1\n  langs:\n  - csharp\n  - vb\n  name: SetException(Exception)\n  fullName: System.Threading.Tasks.TaskCompletionSource<TResult>.SetException(System.Exception)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/Tasks/TaskCompletionSource.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: SetException\n    path: src/mscorlib/src/System/Threading/Tasks/TaskCompletionSource.cs\n    startLine: 238\n  assemblies:\n  - System.Threading.Tasks\n  namespace: System.Threading.Tasks\n  summary: \"\\n<p>Transitions the underlying <xref href=\\\"System.Threading.Tasks.Task`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> into the <xref href=\\\"System.Threading.Tasks.TaskStatus.Faulted\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> state and binds it to a specified exception.</p>\\n\"\n  syntax:\n    content: public void SetException(Exception exception)\n    content.vb: Public Sub SetException(exception As Exception)\n    parameters:\n    - id: exception\n      type: System.Exception\n      description: \"\\n<p>The exception to bind to this <xref href=\\\"System.Threading.Tasks.Task`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Threading.Tasks.TaskCompletionSource`1.Task\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> was disposed.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>exception</em> argument is null.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The underlying <xref href=\\\"System.Threading.Tasks.Task`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is already in one of the three final states: <xref href=\\\"System.Threading.Tasks.TaskStatus.RanToCompletion\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.Threading.Tasks.TaskStatus.Faulted\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, or <xref href=\\\"System.Threading.Tasks.TaskStatus.Canceled\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p></p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Threading.Tasks.TaskCompletionSource(Of TResult).SetException(System.Exception)\n  nameWithType: TaskCompletionSource<TResult>.SetException(Exception)\n  nameWithType.vb: TaskCompletionSource(Of TResult).SetException(Exception)\n- uid: System.Threading.Tasks.TaskCompletionSource`1.SetResult(`0)\n  commentId: M:System.Threading.Tasks.TaskCompletionSource`1.SetResult(`0)\n  id: SetResult(`0)\n  parent: System.Threading.Tasks.TaskCompletionSource`1\n  langs:\n  - csharp\n  - vb\n  name: SetResult(TResult)\n  fullName: System.Threading.Tasks.TaskCompletionSource<TResult>.SetResult(TResult)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/Tasks/TaskCompletionSource.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: SetResult\n    path: src/mscorlib/src/System/Threading/Tasks/TaskCompletionSource.cs\n    startLine: 315\n  assemblies:\n  - System.Threading.Tasks\n  namespace: System.Threading.Tasks\n  summary: \"\\n<p>Transitions the underlying <xref href=\\\"System.Threading.Tasks.Task`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> into the <xref href=\\\"System.Threading.Tasks.TaskStatus.RanToCompletion\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> state.</p>\\n\"\n  syntax:\n    content: public void SetResult(TResult result)\n    content.vb: Public Sub SetResult(result As TResult)\n    parameters:\n    - id: result\n      type: '{TResult}'\n      description: \"\\n<p>The result value to bind to this <xref href=\\\"System.Threading.Tasks.Task`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Threading.Tasks.TaskCompletionSource`1.Task\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> was disposed.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The underlying <xref href=\\\"System.Threading.Tasks.Task`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is already in one of the three final states: <xref href=\\\"System.Threading.Tasks.TaskStatus.RanToCompletion\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.Threading.Tasks.TaskStatus.Faulted\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, or <xref href=\\\"System.Threading.Tasks.TaskStatus.Canceled\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Threading.Tasks.TaskCompletionSource(Of TResult).SetResult(TResult)\n  nameWithType: TaskCompletionSource<TResult>.SetResult(TResult)\n  nameWithType.vb: TaskCompletionSource(Of TResult).SetResult(TResult)\n- uid: System.Threading.Tasks.TaskCompletionSource`1.TrySetCanceled\n  commentId: M:System.Threading.Tasks.TaskCompletionSource`1.TrySetCanceled\n  id: TrySetCanceled\n  parent: System.Threading.Tasks.TaskCompletionSource`1\n  langs:\n  - csharp\n  - vb\n  name: TrySetCanceled()\n  fullName: System.Threading.Tasks.TaskCompletionSource<TResult>.TrySetCanceled()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/Tasks/TaskCompletionSource.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: TrySetCanceled\n    path: src/mscorlib/src/System/Threading/Tasks/TaskCompletionSource.cs\n    startLine: 336\n  assemblies:\n  - System.Threading.Tasks\n  namespace: System.Threading.Tasks\n  summary: \"\\n<p>Attempts to transition the underlying <xref href=\\\"System.Threading.Tasks.Task`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> into the <xref href=\\\"System.Threading.Tasks.TaskStatus.Canceled\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> state.</p>\\n\"\n  syntax:\n    content: public bool TrySetCanceled()\n    content.vb: Public Function TrySetCanceled As Boolean\n    return:\n      type: System.Boolean\n      description: \"\\n<p>True if the operation was successful; false if the operation was unsuccessful or the object has already been disposed.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Threading.Tasks.TaskCompletionSource(Of TResult).TrySetCanceled()\n  nameWithType: TaskCompletionSource<TResult>.TrySetCanceled()\n  nameWithType.vb: TaskCompletionSource(Of TResult).TrySetCanceled()\n- uid: System.Threading.Tasks.TaskCompletionSource`1.TrySetCanceled(System.Threading.CancellationToken)\n  commentId: M:System.Threading.Tasks.TaskCompletionSource`1.TrySetCanceled(System.Threading.CancellationToken)\n  id: TrySetCanceled(System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.TaskCompletionSource`1\n  langs:\n  - csharp\n  - vb\n  name: TrySetCanceled(CancellationToken)\n  fullName: System.Threading.Tasks.TaskCompletionSource<TResult>.TrySetCanceled(System.Threading.CancellationToken)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/Tasks/TaskCompletionSource.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: TrySetCanceled\n    path: src/mscorlib/src/System/Threading/Tasks/TaskCompletionSource.cs\n    startLine: 342\n  assemblies:\n  - System.Threading.Tasks\n  namespace: System.Threading.Tasks\n  summary: \"\\n<p>Attempts to transition the underlying <xref href=\\\"System.Threading.Tasks.Task`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> into the <xref href=\\\"System.Threading.Tasks.TaskStatus.Canceled\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> state and enables a cancellation token to be stored in the canceled task. </p>\\n\"\n  syntax:\n    content: public bool TrySetCanceled(CancellationToken cancellationToken)\n    content.vb: Public Function TrySetCanceled(cancellationToken As CancellationToken) As Boolean\n    parameters:\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: \"\\n<p>A cancellation token. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the operation is successful; otherwise, <strong>false</strong>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Threading.Tasks.TaskCompletionSource(Of TResult).TrySetCanceled(System.Threading.CancellationToken)\n  nameWithType: TaskCompletionSource<TResult>.TrySetCanceled(CancellationToken)\n  nameWithType.vb: TaskCompletionSource(Of TResult).TrySetCanceled(CancellationToken)\n- uid: System.Threading.Tasks.TaskCompletionSource`1.TrySetException(System.Collections.Generic.IEnumerable{System.Exception})\n  commentId: M:System.Threading.Tasks.TaskCompletionSource`1.TrySetException(System.Collections.Generic.IEnumerable{System.Exception})\n  id: TrySetException(System.Collections.Generic.IEnumerable{System.Exception})\n  parent: System.Threading.Tasks.TaskCompletionSource`1\n  langs:\n  - csharp\n  - vb\n  name: TrySetException(IEnumerable<Exception>)\n  fullName: System.Threading.Tasks.TaskCompletionSource<TResult>.TrySetException(System.Collections.Generic.IEnumerable<System.Exception>)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/Tasks/TaskCompletionSource.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: TrySetException\n    path: src/mscorlib/src/System/Threading/Tasks/TaskCompletionSource.cs\n    startLine: 185\n  assemblies:\n  - System.Threading.Tasks\n  namespace: System.Threading.Tasks\n  summary: \"\\n<p>Attempts to transition the underlying <xref href=\\\"System.Threading.Tasks.Task`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> into the <xref href=\\\"System.Threading.Tasks.TaskStatus.Faulted\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> state and binds a collection of exception objects to it. </p>\\n\"\n  syntax:\n    content: public bool TrySetException(IEnumerable<Exception> exceptions)\n    content.vb: Public Function TrySetException(exceptions As IEnumerable(Of Exception)) As Boolean\n    parameters:\n    - id: exceptions\n      type: System.Collections.Generic.IEnumerable{System.Exception}\n      description: \"\\n<p>The collection of exceptions to bind to this <xref href=\\\"System.Threading.Tasks.Task`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>True if the operation was successful; otherwise, false.</p>\\n\"\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Threading.Tasks.TaskCompletionSource`1.Task\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> was disposed.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>exceptions</em> argument is null.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>There are one or more null elements in <em>exceptions</em>.</p>\\n<p>-or-</p>\\n<p>The <em>exceptions</em> collection is empty.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Threading.Tasks.TaskCompletionSource(Of TResult).TrySetException(System.Collections.Generic.IEnumerable(Of System.Exception))\n  name.vb: TrySetException(IEnumerable(Of Exception))\n  nameWithType: TaskCompletionSource<TResult>.TrySetException(IEnumerable<Exception>)\n  nameWithType.vb: TaskCompletionSource(Of TResult).TrySetException(IEnumerable(Of Exception))\n- uid: System.Threading.Tasks.TaskCompletionSource`1.TrySetException(System.Exception)\n  commentId: M:System.Threading.Tasks.TaskCompletionSource`1.TrySetException(System.Exception)\n  id: TrySetException(System.Exception)\n  parent: System.Threading.Tasks.TaskCompletionSource`1\n  langs:\n  - csharp\n  - vb\n  name: TrySetException(Exception)\n  fullName: System.Threading.Tasks.TaskCompletionSource<TResult>.TrySetException(System.Exception)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/Tasks/TaskCompletionSource.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: TrySetException\n    path: src/mscorlib/src/System/Threading/Tasks/TaskCompletionSource.cs\n    startLine: 156\n  assemblies:\n  - System.Threading.Tasks\n  namespace: System.Threading.Tasks\n  summary: \"\\n<p>Attempts to transition the underlying <xref href=\\\"System.Threading.Tasks.Task`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> into the <xref href=\\\"System.Threading.Tasks.TaskStatus.Faulted\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> state and binds it to a specified exception.</p>\\n\"\n  syntax:\n    content: public bool TrySetException(Exception exception)\n    content.vb: Public Function TrySetException(exception As Exception) As Boolean\n    parameters:\n    - id: exception\n      type: System.Exception\n      description: \"\\n<p>The exception to bind to this <xref href=\\\"System.Threading.Tasks.Task`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>True if the operation was successful; otherwise, false.</p>\\n\"\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Threading.Tasks.TaskCompletionSource`1.Task\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> was disposed.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>exception</em> argument is null.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Threading.Tasks.TaskCompletionSource(Of TResult).TrySetException(System.Exception)\n  nameWithType: TaskCompletionSource<TResult>.TrySetException(Exception)\n  nameWithType.vb: TaskCompletionSource(Of TResult).TrySetException(Exception)\n- uid: System.Threading.Tasks.TaskCompletionSource`1.TrySetResult(`0)\n  commentId: M:System.Threading.Tasks.TaskCompletionSource`1.TrySetResult(`0)\n  id: TrySetResult(`0)\n  parent: System.Threading.Tasks.TaskCompletionSource`1\n  langs:\n  - csharp\n  - vb\n  name: TrySetResult(TResult)\n  fullName: System.Threading.Tasks.TaskCompletionSource<TResult>.TrySetResult(TResult)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/Tasks/TaskCompletionSource.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: TrySetResult\n    path: src/mscorlib/src/System/Threading/Tasks/TaskCompletionSource.cs\n    startLine: 292\n  assemblies:\n  - System.Threading.Tasks\n  namespace: System.Threading.Tasks\n  summary: \"\\n<p>Attempts to transition the underlying <xref href=\\\"System.Threading.Tasks.Task`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> into the <xref href=\\\"System.Threading.Tasks.TaskStatus.RanToCompletion\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> state.</p>\\n\"\n  syntax:\n    content: public bool TrySetResult(TResult result)\n    content.vb: Public Function TrySetResult(result As TResult) As Boolean\n    parameters:\n    - id: result\n      type: '{TResult}'\n      description: \"\\n<p>The result value to bind to this <xref href=\\\"System.Threading.Tasks.Task`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>True if the operation was successful; otherwise, false. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Threading.Tasks.TaskCompletionSource(Of TResult).TrySetResult(TResult)\n  nameWithType: TaskCompletionSource<TResult>.TrySetResult(TResult)\n  nameWithType.vb: TaskCompletionSource(Of TResult).TrySetResult(TResult)\nreferences:\n- uid: System.Threading.Tasks\n  isExternal: false\n  name: System.Threading.Tasks\n  fullName: System.Threading.Tasks\n  nameWithType: System.Threading.Tasks\n  commentId: N:System.Threading.Tasks\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Threading.Tasks.TaskCreationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskCreationOptions\n  fullName: System.Threading.Tasks.TaskCreationOptions\n  nameWithType: TaskCreationOptions\n  commentId: T:System.Threading.Tasks.TaskCreationOptions\n- uid: System.Threading.Tasks.Task{{TResult}}\n  parent: System.Threading.Tasks\n  definition: System.Threading.Tasks.Task`1\n  name: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n  fullname.vb: System.Threading.Tasks.Task(Of TResult)\n  name.vb: Task(Of TResult)\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n  - name: <\n    fullName: <\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  nameWithType: Task<TResult>\n  nameWithType.vb: Task(Of TResult)\n  commentId: T:System.Threading.Tasks.Task{`0}\n- uid: System.Threading.Tasks.Task`1\n  isExternal: false\n  name: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n  fullname.vb: System.Threading.Tasks.Task(Of TResult)\n  name.vb: Task(Of TResult)\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n  - name: <\n    fullName: <\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  nameWithType: Task<TResult>\n  nameWithType.vb: Task(Of TResult)\n  commentId: T:System.Threading.Tasks.Task`1\n- uid: System.Collections.Generic.IEnumerable{System.Exception}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<Exception>\n  fullName: System.Collections.Generic.IEnumerable<System.Exception>\n  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Exception)\n  name.vb: IEnumerable(Of Exception)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Exception\n    name: Exception\n    fullName: System.Exception\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Exception\n    name: Exception\n    fullName: System.Exception\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: IEnumerable<Exception>\n  nameWithType.vb: IEnumerable(Of Exception)\n  commentId: T:System.Collections.Generic.IEnumerable{System.Exception}\n- uid: System.Collections.Generic.IEnumerable`1\n  isExternal: false\n  name: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n  fullname.vb: System.Collections.Generic.IEnumerable(Of T)\n  name.vb: IEnumerable(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: IEnumerable<T>\n  nameWithType.vb: IEnumerable(Of T)\n  commentId: T:System.Collections.Generic.IEnumerable`1\n- uid: System.Collections.Generic\n  isExternal: false\n  name: System.Collections.Generic\n  fullName: System.Collections.Generic\n  nameWithType: System.Collections.Generic\n  commentId: N:System.Collections.Generic\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  fullName: System.Exception\n  nameWithType: Exception\n  commentId: T:System.Exception\n- uid: '{TResult}'\n  definition: TResult\n  name: TResult\n  fullName: TResult\n  nameWithType: TResult\n  commentId: '!:TResult'\n- uid: TResult\n  isExternal: false\n  name: TResult\n  fullName: TResult\n  nameWithType: TResult\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  fullName: System.Threading.CancellationToken\n  nameWithType: CancellationToken\n  commentId: T:System.Threading.CancellationToken\n- uid: System.Threading\n  isExternal: false\n  name: System.Threading\n  fullName: System.Threading\n  nameWithType: System.Threading\n  commentId: N:System.Threading\n- uid: System.ArgumentOutOfRangeException\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  commentId: T:System.ArgumentOutOfRangeException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  fullName: System.InvalidOperationException\n  nameWithType: InvalidOperationException\n  commentId: T:System.InvalidOperationException\n- uid: System.ObjectDisposedException\n  isExternal: false\n  name: ObjectDisposedException\n  fullName: System.ObjectDisposedException\n  nameWithType: ObjectDisposedException\n  commentId: T:System.ObjectDisposedException\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n"}