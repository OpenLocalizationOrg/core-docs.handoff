{"nodes":[{"pos":[1370,1382],"content":"StreamWriter","needQuote":true,"nodes":[{"content":"StreamWriter","pos":[0,12]}]},{"pos":[6048,6068],"content":"StreamWriter(Stream)","needQuote":true,"nodes":[{"content":"StreamWriter(Stream)","pos":[0,20]}]},{"content":"\\n&lt;p&gt;The stream to write to.","pos":[6854,6882],"source":"\\n<p>The stream to write to."},{"content":"&lt;/p&gt;\\n","pos":[6883,6889],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;stream&lt;/em&gt; is not writable.","pos":[7000,7039],"source":"\\n<p>\\n<em>stream</em> is not writable."},{"content":"&lt;/p&gt;\\n","pos":[7040,7046],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;stream&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[7151,7199],"source":"\\n<p>\\n<em>stream</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[7200,7206],"source":" </p>\\n"},{"pos":[7595,7625],"content":"StreamWriter(Stream, Encoding)","needQuote":true,"nodes":[{"content":"StreamWriter(Stream, Encoding)","pos":[0,30]}]},{"content":"\\n&lt;p&gt;The stream to write to.","pos":[8482,8510],"source":"\\n<p>The stream to write to."},{"content":"&lt;/p&gt;\\n","pos":[8511,8517],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The character encoding to use.","pos":[8591,8626],"source":"\\n<p>The character encoding to use."},{"content":"&lt;/p&gt;\\n","pos":[8627,8633],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;stream&lt;/em&gt; or &lt;em&gt;encoding&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[8752,8821],"source":"\\n<p>\\n<em>stream</em> or <em>encoding</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[8822,8828],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;stream&lt;/em&gt; is not writable.","pos":[8925,8964],"source":"\\n<p>\\n<em>stream</em> is not writable."},{"content":"&lt;/p&gt;\\n","pos":[8965,8971],"source":" </p>\\n"},{"pos":[9489,9526],"content":"StreamWriter(Stream, Encoding, Int32)","needQuote":true,"nodes":[{"content":"StreamWriter(Stream, Encoding, Int32)","pos":[0,37]}]},{"content":"\\n&lt;p&gt;The stream to write to.","pos":[10424,10452],"source":"\\n<p>The stream to write to."},{"content":"&lt;/p&gt;\\n","pos":[10453,10459],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The character encoding to use.","pos":[10533,10568],"source":"\\n<p>The character encoding to use."},{"content":"&lt;/p&gt;\\n","pos":[10569,10575],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The buffer size, in bytes.","pos":[10643,10674],"source":"\\n<p>The buffer size, in bytes."},{"content":"&lt;/p&gt;\\n","pos":[10675,10681],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;stream&lt;/em&gt; or &lt;em&gt;encoding&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[10800,10869],"source":"\\n<p>\\n<em>stream</em> or <em>encoding</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[10870,10876],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;bufferSize&lt;/em&gt; is negative.","pos":[10993,11032],"source":"\\n<p>\\n<em>bufferSize</em> is negative."},{"content":"&lt;/p&gt;\\n","pos":[11033,11039],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;stream&lt;/em&gt; is not writable.","pos":[11136,11175],"source":"\\n<p>\\n<em>stream</em> is not writable."},{"content":"&lt;/p&gt;\\n","pos":[11176,11182],"source":" </p>\\n"},{"pos":[11752,11798],"content":"StreamWriter(Stream, Encoding, Int32, Boolean)","needQuote":true,"nodes":[{"content":"StreamWriter(Stream, Encoding, Int32, Boolean)","pos":[0,46]}]},{"content":"\\n&lt;p&gt;The stream to write to.&lt;/p&gt;\\n","pos":[12789,12823],"source":"\\n<p>The stream to write to.</p>\\n"},{"content":"\\n&lt;p&gt;The character encoding to use.&lt;/p&gt;\\n","pos":[12897,12938],"source":"\\n<p>The character encoding to use.</p>\\n"},{"content":"\\n&lt;p&gt;The buffer size, in bytes.&lt;/p&gt;\\n","pos":[13006,13043],"source":"\\n<p>The buffer size, in bytes.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;stream&lt;/em&gt; or &lt;em&gt;encoding&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[13438,13507],"source":"\\n<p>\\n<em>stream</em> or <em>encoding</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[13508,13514],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;bufferSize&lt;/em&gt; is negative.","pos":[13631,13670],"source":"\\n<p>\\n<em>bufferSize</em> is negative."},{"content":"&lt;/p&gt;\\n","pos":[13671,13677],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;stream&lt;/em&gt; is not writable.","pos":[13774,13813],"source":"\\n<p>\\n<em>stream</em> is not writable."},{"content":"&lt;/p&gt;\\n","pos":[13814,13820],"source":" </p>\\n"},{"pos":[14128,14137],"content":"AutoFlush","needQuote":true,"nodes":[{"content":"AutoFlush","pos":[0,9]}]},{"pos":[15520,15530],"content":"BaseStream","needQuote":true,"nodes":[{"content":"BaseStream","pos":[0,10]}]},{"content":"\\n&lt;p&gt;The stream this &lt;strong&gt;StreamWriter&lt;/strong&gt; is writing to.&lt;/p&gt;\\n","pos":[16192,16263],"source":"\\n<p>The stream this <strong>StreamWriter</strong> is writing to.</p>\\n"},{"pos":[16581,16589],"content":"Encoding","needQuote":true,"nodes":[{"content":"Encoding","pos":[0,8]}]},{"pos":[17983,17999],"content":"Dispose(Boolean)","needQuote":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to release both managed and unmanaged resources; &lt;strong&gt;false&lt;/strong&gt; to release only unmanaged resources.","pos":[18784,18921],"source":"\\n<p>\\n<strong>true</strong> to release both managed and unmanaged resources; <strong>false</strong> to release only unmanaged resources."},{"content":"&lt;/p&gt;\\n","pos":[18922,18928],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The current encoding does not support displaying half of a Unicode surrogate pair.&lt;/p&gt;\\n","pos":[19122,19215],"source":"\\n<p>The current encoding does not support displaying half of a Unicode surrogate pair.</p>\\n"},{"pos":[19514,19521],"content":"Flush()","needQuote":true,"nodes":[{"content":"Flush()","pos":[0,7]}]},{"content":"\\n&lt;p&gt;The current writer is closed.","pos":[20257,20291],"source":"\\n<p>The current writer is closed."},{"content":"&lt;/p&gt;\\n","pos":[20292,20298],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error has occurred.","pos":[20389,20420],"source":"\\n<p>An I/O error has occurred."},{"content":"&lt;/p&gt;\\n","pos":[20421,20427],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The current encoding does not support displaying half of a Unicode surrogate pair.","pos":[20548,20635],"source":"\\n<p>The current encoding does not support displaying half of a Unicode surrogate pair."},{"content":"&lt;/p&gt;\\n","pos":[20636,20642],"source":" </p>\\n"},{"pos":[21025,21037],"content":"FlushAsync()","needQuote":true,"nodes":[{"content":"FlushAsync()","pos":[0,12]}]},{"content":"\\n&lt;p&gt;A task that represents the asynchronous flush operation.&lt;/p&gt;\\n","pos":[21895,21962],"source":"\\n<p>A task that represents the asynchronous flush operation.</p>\\n"},{"content":"\\n&lt;p&gt;The stream has been disposed.&lt;/p&gt;\\n","pos":[22131,22171],"source":"\\n<p>The stream has been disposed.</p>\\n"},{"pos":[22499,22510],"content":"Write(Char)","needQuote":true,"nodes":[{"content":"Write(Char)","pos":[0,11]}]},{"content":"\\n&lt;p&gt;The character to write to the stream.","pos":[23119,23161],"source":"\\n<p>The character to write to the stream."},{"content":"&lt;/p&gt;\\n","pos":[23162,23168],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurs.","pos":[23327,23352],"source":"\\n<p>An I/O error occurs."},{"content":"&lt;/p&gt;\\n","pos":[23353,23359],"source":" </p>\\n"},{"pos":[24582,24595],"content":"Write(Char[])","needQuote":true,"nodes":[{"content":"Write(Char[])","pos":[0,13]}]},{"content":"\\n&lt;p&gt;A character array containing the data to write.","pos":[25221,25273],"source":"\\n<p>A character array containing the data to write."},{"content":"If &lt;em&gt;buffer&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;, nothing is written.","pos":[25274,25338],"source":" If <em>buffer</em> is <strong>null</strong>, nothing is written."},{"content":"&lt;/p&gt;\\n","pos":[25339,25345],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurs.","pos":[25506,25531],"source":"\\n<p>An I/O error occurs."},{"content":"&lt;/p&gt;\\n","pos":[25532,25538],"source":" </p>\\n"},{"pos":[26971,26998],"content":"Write(Char[], Int32, Int32)","needQuote":true,"nodes":[{"content":"Write(Char[], Int32, Int32)","pos":[0,27]}]},{"content":"\\n&lt;p&gt;A character array that contains the data to write.","pos":[27717,27772],"source":"\\n<p>A character array that contains the data to write."},{"content":"&lt;/p&gt;\\n","pos":[27773,27779],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The character position in the buffer at which to start reading data.","pos":[27842,27915],"source":"\\n<p>The character position in the buffer at which to start reading data."},{"content":"&lt;/p&gt;\\n","pos":[27916,27922],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The maximum number of characters to write.","pos":[27985,28032],"source":"\\n<p>The maximum number of characters to write."},{"content":"&lt;/p&gt;\\n","pos":[28033,28039],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;buffer&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[28240,28288],"source":"\\n<p>\\n<em>buffer</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[28289,28295],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The buffer length minus &lt;em&gt;index&lt;/em&gt; is less than &lt;em&gt;count&lt;/em&gt;.","pos":[28392,28464],"source":"\\n<p>The buffer length minus <em>index</em> is less than <em>count</em>."},{"content":"&lt;/p&gt;\\n","pos":[28465,28471],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;index&lt;/em&gt; or &lt;em&gt;count&lt;/em&gt; is negative.","pos":[28588,28640],"source":"\\n<p>\\n<em>index</em> or <em>count</em> is negative."},{"content":"&lt;/p&gt;\\n","pos":[28641,28647],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurs.","pos":[28738,28763],"source":"\\n<p>An I/O error occurs."},{"content":"&lt;/p&gt;\\n","pos":[28764,28770],"source":" </p>\\n"},{"pos":[30195,30208],"content":"Write(String)","needQuote":true,"nodes":[{"content":"Write(String)","pos":[0,13]}]},{"content":"\\n&lt;p&gt;The string to write to the stream.","pos":[30822,30861],"source":"\\n<p>The string to write to the stream."},{"content":"If &lt;em&gt;value&lt;/em&gt; is null, nothing is written.","pos":[30862,30908],"source":" If <em>value</em> is null, nothing is written."},{"content":"&lt;/p&gt;\\n","pos":[30909,30915],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error occurs.","pos":[31966,31991],"source":"\\n<p>An I/O error occurs."},{"content":"&lt;/p&gt;\\n","pos":[31992,31998],"source":" </p>\\n"},{"pos":[32342,32358],"content":"WriteAsync(Char)","needQuote":true,"nodes":[{"content":"WriteAsync(Char)","pos":[0,16]}]},{"content":"\\n&lt;p&gt;The character to write to the stream.&lt;/p&gt;\\n","pos":[33186,33234],"source":"\\n<p>The character to write to the stream.</p>\\n"},{"content":"\\n&lt;p&gt;A task that represents the asynchronous write operation.&lt;/p&gt;\\n","pos":[33308,33375],"source":"\\n<p>A task that represents the asynchronous write operation.</p>\\n"},{"content":"\\n&lt;p&gt;The stream writer is disposed.&lt;/p&gt;\\n","pos":[33557,33598],"source":"\\n<p>The stream writer is disposed.</p>\\n"},{"content":"\\n&lt;p&gt;The stream writer is currently in use by a previous write operation.&lt;/p&gt;\\n","pos":[33711,33790],"source":"\\n<p>The stream writer is currently in use by a previous write operation.</p>\\n"},{"pos":[34221,34253],"content":"WriteAsync(Char[], Int32, Int32)","needQuote":true,"nodes":[{"content":"WriteAsync(Char[], Int32, Int32)","pos":[0,32]}]},{"content":"\\n&lt;p&gt;A character array that contains the data to write.&lt;/p&gt;\\n","pos":[35191,35252],"source":"\\n<p>A character array that contains the data to write.</p>\\n"},{"content":"\\n&lt;p&gt;The character position in the buffer at which to begin reading data.&lt;/p&gt;\\n","pos":[35315,35394],"source":"\\n<p>The character position in the buffer at which to begin reading data.</p>\\n"},{"content":"\\n&lt;p&gt;The maximum number of characters to write.&lt;/p&gt;\\n","pos":[35457,35510],"source":"\\n<p>The maximum number of characters to write.</p>\\n"},{"content":"\\n&lt;p&gt;A task that represents the asynchronous write operation.&lt;/p&gt;\\n","pos":[35584,35651],"source":"\\n<p>A task that represents the asynchronous write operation.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;buffer&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[35857,35911],"source":"\\n<p>\\n<em>buffer</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;index&lt;/em&gt; plus &lt;em&gt;count&lt;/em&gt; is greater than the buffer length.&lt;/p&gt;\\n","pos":[36008,36092],"source":"\\n<p>The <em>index</em> plus <em>count</em> is greater than the buffer length.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;index&lt;/em&gt; or &lt;em&gt;count&lt;/em&gt; is negative.&lt;/p&gt;\\n","pos":[36209,36267],"source":"\\n<p>\\n<em>index</em> or <em>count</em> is negative.</p>\\n"},{"content":"\\n&lt;p&gt;The stream writer is disposed.&lt;/p&gt;\\n","pos":[36376,36417],"source":"\\n<p>The stream writer is disposed.</p>\\n"},{"content":"\\n&lt;p&gt;The stream writer is currently in use by a previous write operation.","pos":[36530,36603],"source":"\\n<p>The stream writer is currently in use by a previous write operation."},{"content":"&lt;/p&gt;\\n","pos":[36604,36610],"source":" </p>\\n"},{"pos":[37180,37198],"content":"WriteAsync(String)","needQuote":true,"nodes":[{"content":"WriteAsync(String)","pos":[0,18]}]},{"content":"\\n&lt;p&gt;The string to write to the stream.","pos":[38031,38070],"source":"\\n<p>The string to write to the stream."},{"content":"If &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;, nothing is written.&lt;/p&gt;\\n","pos":[38071,38140],"source":" If <em>value</em> is <strong>null</strong>, nothing is written.</p>\\n"},{"content":"\\n&lt;p&gt;A task that represents the asynchronous write operation.&lt;/p&gt;\\n","pos":[38214,38281],"source":"\\n<p>A task that represents the asynchronous write operation.</p>\\n"},{"content":"\\n&lt;p&gt;The stream writer is disposed.&lt;/p&gt;\\n","pos":[38465,38506],"source":"\\n<p>The stream writer is disposed.</p>\\n"},{"content":"\\n&lt;p&gt;The stream writer is currently in use by a previous write operation.&lt;/p&gt;\\n","pos":[38619,38698],"source":"\\n<p>The stream writer is currently in use by a previous write operation.</p>\\n"},{"pos":[39020,39036],"content":"WriteLineAsync()","needQuote":true,"nodes":[{"content":"WriteLineAsync()","pos":[0,16]}]},{"content":"\\n&lt;p&gt;A task that represents the asynchronous write operation.&lt;/p&gt;\\n","pos":[39846,39913],"source":"\\n<p>A task that represents the asynchronous write operation.</p>\\n"},{"content":"\\n&lt;p&gt;The stream writer is disposed.&lt;/p&gt;\\n","pos":[40086,40127],"source":"\\n<p>The stream writer is disposed.</p>\\n"},{"content":"\\n&lt;p&gt;The stream writer is currently in use by a previous write operation.&lt;/p&gt;\\n","pos":[40240,40319],"source":"\\n<p>The stream writer is currently in use by a previous write operation.</p>\\n"},{"pos":[40678,40698],"content":"WriteLineAsync(Char)","needQuote":true,"nodes":[{"content":"WriteLineAsync(Char)","pos":[0,20]}]},{"content":"\\n&lt;p&gt;The character to write to the stream.&lt;/p&gt;\\n","pos":[41572,41620],"source":"\\n<p>The character to write to the stream.</p>\\n"},{"content":"\\n&lt;p&gt;A task that represents the asynchronous write operation.&lt;/p&gt;\\n","pos":[41694,41761],"source":"\\n<p>A task that represents the asynchronous write operation.</p>\\n"},{"content":"\\n&lt;p&gt;The stream writer is disposed.&lt;/p&gt;\\n","pos":[41947,41988],"source":"\\n<p>The stream writer is disposed.</p>\\n"},{"content":"\\n&lt;p&gt;The stream writer is currently in use by a previous write operation.&lt;/p&gt;\\n","pos":[42101,42180],"source":"\\n<p>The stream writer is currently in use by a previous write operation.</p>\\n"},{"pos":[42627,42663],"content":"WriteLineAsync(Char[], Int32, Int32)","needQuote":true,"nodes":[{"content":"WriteLineAsync(Char[], Int32, Int32)","pos":[0,36]}]},{"content":"\\n&lt;p&gt;The character array to write data from.&lt;/p&gt;\\n","pos":[43647,43697],"source":"\\n<p>The character array to write data from.</p>\\n"},{"content":"\\n&lt;p&gt;The character position in the buffer at which to start reading data.&lt;/p&gt;\\n","pos":[43760,43839],"source":"\\n<p>The character position in the buffer at which to start reading data.</p>\\n"},{"content":"\\n&lt;p&gt;The maximum number of characters to write.&lt;/p&gt;\\n","pos":[43902,43955],"source":"\\n<p>The maximum number of characters to write.</p>\\n"},{"content":"\\n&lt;p&gt;A task that represents the asynchronous write operation.&lt;/p&gt;\\n","pos":[44029,44096],"source":"\\n<p>A task that represents the asynchronous write operation.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;buffer&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[44306,44360],"source":"\\n<p>\\n<em>buffer</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;index&lt;/em&gt; plus &lt;em&gt;count&lt;/em&gt; is greater than the buffer length.&lt;/p&gt;\\n","pos":[44457,44541],"source":"\\n<p>The <em>index</em> plus <em>count</em> is greater than the buffer length.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;index&lt;/em&gt; or &lt;em&gt;count&lt;/em&gt; is negative.&lt;/p&gt;\\n","pos":[44658,44716],"source":"\\n<p>\\n<em>index</em> or <em>count</em> is negative.</p>\\n"},{"content":"\\n&lt;p&gt;The stream writer is disposed.&lt;/p&gt;\\n","pos":[44825,44866],"source":"\\n<p>The stream writer is disposed.</p>\\n"},{"content":"\\n&lt;p&gt;The stream writer is currently in use by a previous write operation.","pos":[44979,45052],"source":"\\n<p>The stream writer is currently in use by a previous write operation."},{"content":"&lt;/p&gt;\\n","pos":[45053,45059],"source":" </p>\\n"},{"pos":[45657,45679],"content":"WriteLineAsync(String)","needQuote":true,"nodes":[{"content":"WriteLineAsync(String)","pos":[0,22]}]},{"content":"\\n&lt;p&gt;The string to write.","pos":[46558,46583],"source":"\\n<p>The string to write."},{"content":"If the value is &lt;strong&gt;null&lt;/strong&gt;, only a line terminator is written.","pos":[46584,46657],"source":" If the value is <strong>null</strong>, only a line terminator is written."},{"content":"&lt;/p&gt;\\n","pos":[46658,46664],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A task that represents the asynchronous write operation.&lt;/p&gt;\\n","pos":[46738,46805],"source":"\\n<p>A task that represents the asynchronous write operation.</p>\\n"},{"content":"\\n&lt;p&gt;The stream writer is disposed.&lt;/p&gt;\\n","pos":[46993,47034],"source":"\\n<p>The stream writer is disposed.</p>\\n"},{"content":"\\n&lt;p&gt;The stream writer is currently in use by a previous write operation.&lt;/p&gt;\\n","pos":[47147,47226],"source":"\\n<p>The stream writer is currently in use by a previous write operation.</p>\\n"},{"pos":[47422,47431],"content":"System.IO","needQuote":true,"nodes":[{"content":"System.IO","pos":[0,9]}]},{"pos":[47571,47577],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[47732,47742],"content":"TextWriter","needQuote":true,"nodes":[{"content":"TextWriter","pos":[0,10]}]},{"pos":[47910,47921],"content":"IDisposable","needQuote":true,"nodes":[{"content":"IDisposable","pos":[0,11]}]},{"pos":[48114,48125],"content":"CoreNewLine","needQuote":true,"nodes":[{"content":"CoreNewLine","pos":[0,11]}]},{"pos":[48360,48374],"content":"FormatProvider","needQuote":true,"nodes":[{"content":"FormatProvider","pos":[0,14]}]},{"pos":[48611,48618],"content":"NewLine","needQuote":true,"nodes":[{"content":"NewLine","pos":[0,7]}]},{"pos":[48834,48843],"content":"Dispose()","needQuote":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[48950,48957],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[49011,49012],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[49039,49040],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[49116,49123],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[49177,49178],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[49205,49206],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[49412,49426],"content":"Write(Boolean)","needQuote":true,"nodes":[{"content":"Write(Boolean)","pos":[0,14]}]},{"pos":[49559,49564],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[49616,49617],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[49668,49675],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[49736,49737],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[49827,49832],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[49884,49885],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[49936,49943],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[50004,50005],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[50230,50244],"content":"Write(Decimal)","needQuote":true,"nodes":[{"content":"Write(Decimal)","pos":[0,14]}]},{"pos":[50377,50382],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[50434,50435],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[50486,50493],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[50554,50555],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[50645,50650],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[50702,50703],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[50754,50761],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[50822,50823],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[51047,51060],"content":"Write(Double)","needQuote":true,"nodes":[{"content":"Write(Double)","pos":[0,13]}]},{"pos":[51191,51196],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[51248,51249],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[51299,51305],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[51365,51366],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[51455,51460],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[51512,51513],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[51563,51569],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[51629,51630],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[51851,51863],"content":"Write(Int32)","needQuote":true,"nodes":[{"content":"Write(Int32)","pos":[0,12]}]},{"pos":[51992,51997],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[52049,52050],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[52099,52104],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[52163,52164],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[52252,52257],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[52309,52310],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[52359,52364],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[52423,52424],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[52643,52655],"content":"Write(Int64)","needQuote":true,"nodes":[{"content":"Write(Int64)","pos":[0,12]}]},{"pos":[52784,52789],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[52841,52842],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[52891,52896],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[52955,52956],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[53044,53049],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[53101,53102],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[53151,53156],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[53215,53216],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[53436,53449],"content":"Write(Object)","needQuote":true,"nodes":[{"content":"Write(Object)","pos":[0,13]}]},{"pos":[53580,53585],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[53637,53638],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[53688,53694],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[53754,53755],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[53844,53849],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[53901,53902],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[53952,53958],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[54018,54019],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[54241,54254],"content":"Write(Single)","needQuote":true,"nodes":[{"content":"Write(Single)","pos":[0,13]}]},{"pos":[54385,54390],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[54442,54443],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[54493,54499],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[54559,54560],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[54649,54654],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[54706,54707],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[54757,54763],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[54823,54824],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[55060,55081],"content":"Write(String, Object)","needQuote":true,"nodes":[{"content":"Write(String, Object)","pos":[0,21]}]},{"pos":[55241,55246],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[55298,55299],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[55349,55355],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[55416,55417]},{"pos":[55472,55478],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[55538,55539],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[55642,55647],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[55699,55700],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[55750,55756],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[55817,55818]},{"pos":[55873,55879],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[55939,55940],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[56212,56241],"content":"Write(String, Object, Object)","needQuote":true,"nodes":[{"content":"Write(String, Object, Object)","pos":[0,29]}]},{"pos":[56430,56435],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[56487,56488],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[56538,56544],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[56605,56606]},{"pos":[56661,56667],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[56728,56729]},{"pos":[56784,56790],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[56850,56851],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[56968,56973],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[57025,57026],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[57076,57082],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[57143,57144]},{"pos":[57199,57205],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[57266,57267]},{"pos":[57322,57328],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[57388,57389],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[57697,57734],"content":"Write(String, Object, Object, Object)","needQuote":true,"nodes":[{"content":"Write(String, Object, Object, Object)","pos":[0,37]}]},{"pos":[57952,57957],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[58009,58010],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[58060,58066],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[58127,58128]},{"pos":[58183,58189],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[58250,58251]},{"pos":[58306,58312],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[58373,58374]},{"pos":[58429,58435],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[58495,58496],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[58627,58632],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[58684,58685],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[58735,58741],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[58802,58803]},{"pos":[58858,58864],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[58925,58926]},{"pos":[58981,58987],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[59048,59049]},{"pos":[59104,59110],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[59170,59171],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[59475,59498],"content":"Write(String, Object[])","needQuote":true,"nodes":[{"content":"Write(String, Object[])","pos":[0,23]}]},{"pos":[59771,59776],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[59828,59829],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[59879,59885],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[59946,59947]},{"pos":[60002,60008],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":"[]","pos":[60069,60071]},{"pos":[60102,60103],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[60208,60213],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[60265,60266],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[60316,60322],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[60383,60384]},{"pos":[60439,60445],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[60505,60507],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[60535,60536],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[60838,60851],"content":"Write(UInt32)","needQuote":true,"nodes":[{"content":"Write(UInt32)","pos":[0,13]}]},{"pos":[60982,60987],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[61039,61040],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[61090,61096],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[61156,61157],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[61246,61251],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[61303,61304],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[61354,61360],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[61420,61421],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[61643,61656],"content":"Write(UInt64)","needQuote":true,"nodes":[{"content":"Write(UInt64)","pos":[0,13]}]},{"pos":[61787,61792],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[61844,61845],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[61895,61901],"content":"UInt64","needQuote":true,"nodes":[{"content":"UInt64","pos":[0,6]}]},{"pos":[61961,61962],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[62051,62056],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[62108,62109],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[62159,62165],"content":"UInt64","needQuote":true,"nodes":[{"content":"UInt64","pos":[0,6]}]},{"pos":[62225,62226],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[62453,62471],"content":"WriteAsync(Char[])","needQuote":true,"nodes":[{"content":"WriteAsync(Char[])","pos":[0,18]}]},{"pos":[62704,62714],"content":"WriteAsync","needQuote":true,"nodes":[{"content":"WriteAsync","pos":[0,10]}]},{"pos":[62771,62772],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[62820,62824],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"content":"[]","pos":[62883,62885]},{"pos":[62916,62917],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[63011,63021],"content":"WriteAsync","needQuote":true,"nodes":[{"content":"WriteAsync","pos":[0,10]}]},{"pos":[63078,63079],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[63127,63131],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[63189,63191],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[63219,63220],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[63491,63502],"content":"WriteLine()","needQuote":true,"nodes":[{"content":"WriteLine()","pos":[0,11]}]},{"pos":[63613,63622],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[63678,63679],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[63706,63707],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[63785,63794],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[63850,63851],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[63878,63879],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[64093,64111],"content":"WriteLine(Boolean)","needQuote":true,"nodes":[{"content":"WriteLine(Boolean)","pos":[0,18]}]},{"pos":[64252,64261],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[64317,64318],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[64369,64376],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[64437,64438],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[64532,64541],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[64597,64598],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[64649,64656],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[64717,64718],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[64952,64967],"content":"WriteLine(Char)","needQuote":true,"nodes":[{"content":"WriteLine(Char)","pos":[0,15]}]},{"pos":[65102,65111],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[65167,65168],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[65216,65220],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[65278,65279],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[65370,65379],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[65435,65436],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[65484,65488],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[65546,65547],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[65777,65794],"content":"WriteLine(Char[])","needQuote":true,"nodes":[{"content":"WriteLine(Char[])","pos":[0,17]}]},{"pos":[66023,66032],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[66088,66089],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[66137,66141],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"content":"[]","pos":[66200,66202]},{"pos":[66233,66234],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[66327,66336],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[66392,66393],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[66441,66445],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[66503,66505],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[66533,66534],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[66842,66873],"content":"WriteLine(Char[], Int32, Int32)","needQuote":true,"nodes":[{"content":"WriteLine(Char[], Int32, Int32)","pos":[0,31]}]},{"pos":[67198,67207],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[67263,67264],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[67312,67316],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"content":"[]","pos":[67375,67377]},{"content":",","pos":[67409,67410]},{"pos":[67464,67469],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[67529,67530]},{"pos":[67584,67589],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[67648,67649],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[67768,67777],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[67833,67834],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[67882,67886],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[67944,67946],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[67975,67976]},{"pos":[68030,68035],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[68095,68096]},{"pos":[68150,68155],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[68214,68215],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[68552,68570],"content":"WriteLine(Decimal)","needQuote":true,"nodes":[{"content":"WriteLine(Decimal)","pos":[0,18]}]},{"pos":[68711,68720],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[68776,68777],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[68828,68835],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[68896,68897],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[68991,69000],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[69056,69057],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[69108,69115],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[69176,69177],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[69413,69430],"content":"WriteLine(Double)","needQuote":true,"nodes":[{"content":"WriteLine(Double)","pos":[0,17]}]},{"pos":[69569,69578],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[69634,69635],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[69685,69691],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[69751,69752],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[69845,69854],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[69910,69911],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[69961,69967],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[70027,70028],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[70261,70277],"content":"WriteLine(Int32)","needQuote":true,"nodes":[{"content":"WriteLine(Int32)","pos":[0,16]}]},{"pos":[70414,70423],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[70479,70480],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[70529,70534],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[70593,70594],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[70686,70695],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[70751,70752],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[70801,70806],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[70865,70866],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[71097,71113],"content":"WriteLine(Int64)","needQuote":true,"nodes":[{"content":"WriteLine(Int64)","pos":[0,16]}]},{"pos":[71250,71259],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[71315,71316],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[71365,71370],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[71429,71430],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[71522,71531],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[71587,71588],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[71637,71642],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[71701,71702],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[71934,71951],"content":"WriteLine(Object)","needQuote":true,"nodes":[{"content":"WriteLine(Object)","pos":[0,17]}]},{"pos":[72090,72099],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[72155,72156],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[72206,72212],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[72272,72273],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[72366,72375],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[72431,72432],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[72482,72488],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[72548,72549],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[72783,72800],"content":"WriteLine(Single)","needQuote":true,"nodes":[{"content":"WriteLine(Single)","pos":[0,17]}]},{"pos":[72939,72948],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[73004,73005],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[73055,73061],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[73121,73122],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[73215,73224],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[73280,73281],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[73331,73337],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[73397,73398],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[73632,73649],"content":"WriteLine(String)","needQuote":true,"nodes":[{"content":"WriteLine(String)","pos":[0,17]}]},{"pos":[73788,73797],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[73853,73854],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[73904,73910],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[73970,73971],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[74064,74073],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[74129,74130],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[74180,74186],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[74246,74247],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[74495,74520],"content":"WriteLine(String, Object)","needQuote":true,"nodes":[{"content":"WriteLine(String, Object)","pos":[0,25]}]},{"pos":[74688,74697],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[74753,74754],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[74804,74810],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[74871,74872]},{"pos":[74927,74933],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[74993,74994],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[75101,75110],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[75166,75167],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[75217,75223],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[75284,75285]},{"pos":[75340,75346],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[75406,75407],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[75691,75724],"content":"WriteLine(String, Object, Object)","needQuote":true,"nodes":[{"content":"WriteLine(String, Object, Object)","pos":[0,33]}]},{"pos":[75921,75930],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[75986,75987],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[76037,76043],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[76104,76105]},{"pos":[76160,76166],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[76227,76228]},{"pos":[76283,76289],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[76349,76350],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[76471,76480],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[76536,76537],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[76587,76593],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[76654,76655]},{"pos":[76710,76716],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[76777,76778]},{"pos":[76833,76839],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[76899,76900],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[77220,77261],"content":"WriteLine(String, Object, Object, Object)","needQuote":true,"nodes":[{"content":"WriteLine(String, Object, Object, Object)","pos":[0,41]}]},{"pos":[77487,77496],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[77552,77553],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[77603,77609],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[77670,77671]},{"pos":[77726,77732],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[77793,77794]},{"pos":[77849,77855],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[77916,77917]},{"pos":[77972,77978],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[78038,78039],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[78174,78183],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[78239,78240],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[78290,78296],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[78357,78358]},{"pos":[78413,78419],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[78480,78481]},{"pos":[78536,78542],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[78603,78604]},{"pos":[78659,78665],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[78725,78726],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[79042,79069],"content":"WriteLine(String, Object[])","needQuote":true,"nodes":[{"content":"WriteLine(String, Object[])","pos":[0,27]}]},{"pos":[79358,79367],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[79423,79424],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[79474,79480],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[79541,79542]},{"pos":[79597,79603],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":"[]","pos":[79664,79666]},{"pos":[79697,79698],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[79807,79816],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[79872,79873],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[79923,79929],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[79990,79991]},{"pos":[80046,80052],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[80112,80114],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[80142,80143],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[80461,80478],"content":"WriteLine(UInt32)","needQuote":true,"nodes":[{"content":"WriteLine(UInt32)","pos":[0,17]}]},{"pos":[80617,80626],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[80682,80683],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[80733,80739],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[80799,80800],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[80893,80902],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[80958,80959],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[81009,81015],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[81075,81076],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[81310,81327],"content":"WriteLine(UInt64)","needQuote":true,"nodes":[{"content":"WriteLine(UInt64)","pos":[0,17]}]},{"pos":[81466,81475],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[81531,81532],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[81582,81588],"content":"UInt64","needQuote":true,"nodes":[{"content":"UInt64","pos":[0,6]}]},{"pos":[81648,81649],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[81742,81751],"content":"WriteLine","needQuote":true,"nodes":[{"content":"WriteLine","pos":[0,9]}]},{"pos":[81807,81808],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[81858,81864],"content":"UInt64","needQuote":true,"nodes":[{"content":"UInt64","pos":[0,6]}]},{"pos":[81924,81925],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[82164,82186],"content":"WriteLineAsync(Char[])","needQuote":true,"nodes":[{"content":"WriteLineAsync(Char[])","pos":[0,22]}]},{"pos":[82435,82449],"content":"WriteLineAsync","needQuote":true,"nodes":[{"content":"WriteLineAsync","pos":[0,14]}]},{"pos":[82510,82511],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[82559,82563],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"content":"[]","pos":[82622,82624]},{"pos":[82655,82656],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[82754,82768],"content":"WriteLineAsync","needQuote":true,"nodes":[{"content":"WriteLineAsync","pos":[0,14]}]},{"pos":[82829,82830],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[82878,82882],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[82940,82942],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[82970,82971],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[83238,83248],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[83343,83351],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[83420,83421],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[83448,83449],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[83519,83527],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[83596,83597],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[83624,83625],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[83808,83822],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[83941,83947],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[84014,84015],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[84065,84071],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[84131,84132],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[84215,84221],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[84288,84289],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[84339,84345],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[84405,84406],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[84620,84642],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[84790,84796],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[84863,84864],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[84914,84920],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[84981,84982]},{"pos":[85037,85043],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[85103,85104],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[85201,85207],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[85274,85275],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[85325,85331],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[85392,85393]},{"pos":[85448,85454],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[85514,85515],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[85760,85791],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[85957,85972],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[86048,86049],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[86099,86105],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[86166,86167]},{"pos":[86222,86228],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[86288,86289],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[86395,86410],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[86486,86487],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[86537,86543],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[86604,86605]},{"pos":[86660,86666],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[86726,86727],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[86957,86970],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[87071,87082],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[87154,87155],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[87182,87183],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[87256,87267],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[87339,87340],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[87367,87368],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[87543,87552],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[87645,87652],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[87720,87721],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[87748,87749],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[87818,87825],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[87893,87894],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[87921,87922],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[88097,88114],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[88223,88238],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[88314,88315],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[88342,88343],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[88420,88435],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[88511,88512],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[88539,88540],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[88685,88691],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[88834,88846],"content":"StreamWriter","needQuote":true,"nodes":[{"content":"StreamWriter","pos":[0,12]}]},{"pos":[89021,89027],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[89190,89198],"content":"Encoding","needQuote":true,"nodes":[{"content":"Encoding","pos":[0,8]}]},{"pos":[89340,89351],"content":"System.Text","needQuote":true,"nodes":[{"content":"System.Text","pos":[0,11]}]},{"pos":[89496,89501],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[89644,89651],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[89829,89837],"content":"Encoding","needQuote":true,"nodes":[{"content":"Encoding","pos":[0,8]}]},{"pos":[90071,90087],"content":"Dispose(Boolean)","needQuote":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[90224,90231],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[90285,90286],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[90337,90344],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[90405,90406],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[90498,90505],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[90559,90560],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[90611,90618],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[90679,90680],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[90894,90901],"content":"Flush()","needQuote":true,"nodes":[{"content":"Flush()","pos":[0,7]}]},{"pos":[91004,91009],"content":"Flush","needQuote":true,"nodes":[{"content":"Flush","pos":[0,5]}]},{"pos":[91061,91062],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[91089,91090],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[91164,91169],"content":"Flush","needQuote":true,"nodes":[{"content":"Flush","pos":[0,5]}]},{"pos":[91221,91222],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[91249,91250],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[91442,91454],"content":"FlushAsync()","needQuote":true,"nodes":[{"content":"FlushAsync()","pos":[0,12]}]},{"pos":[91567,91577],"content":"FlushAsync","needQuote":true,"nodes":[{"content":"FlushAsync","pos":[0,10]}]},{"pos":[91634,91635],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[91662,91663],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[91742,91752],"content":"FlushAsync","needQuote":true,"nodes":[{"content":"FlushAsync","pos":[0,10]}]},{"pos":[91809,91810],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[91837,91838],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[92038,92042],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[92205,92227],"content":"System.Threading.Tasks","needQuote":true,"nodes":[{"content":"System.Threading.Tasks","pos":[0,22]}]},{"pos":[92445,92456],"content":"Write(Char)","needQuote":true,"nodes":[{"content":"Write(Char)","pos":[0,11]}]},{"pos":[92583,92588],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[92640,92641],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[92689,92693],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[92751,92752],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[92839,92844],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[92896,92897],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[92945,92949],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[93007,93008],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[93183,93187],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[93367,93380],"content":"Write(Char[])","needQuote":true,"nodes":[{"content":"Write(Char[])","pos":[0,13]}]},{"pos":[93593,93598],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[93650,93651],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[93699,93703],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"content":"[]","pos":[93762,93764]},{"pos":[93795,93796],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[93885,93890],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[93942,93943],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[93991,93995],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[94053,94055],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[94083,94084],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[94272,94278],"content":"Char[]","needQuote":true,"nodes":[{"content":"Char[]","pos":[0,6]}]},{"pos":[94398,94402],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"content":"[]","pos":[94461,94463]},{"pos":[94526,94530],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[94588,94590],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[94790,94817],"content":"Write(Char[], Int32, Int32)","needQuote":true,"nodes":[{"content":"Write(Char[], Int32, Int32)","pos":[0,27]}]},{"pos":[95126,95131],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[95183,95184],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[95232,95236],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"content":"[]","pos":[95295,95297]},{"content":",","pos":[95329,95330]},{"pos":[95384,95389],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[95449,95450]},{"pos":[95504,95509],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[95568,95569],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[95684,95689],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[95741,95742],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[95790,95794],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[95852,95854],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[95883,95884]},{"pos":[95938,95943],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[96003,96004]},{"pos":[96058,96063],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[96122,96123],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[96443,96456],"content":"Write(String)","needQuote":true,"nodes":[{"content":"Write(String)","pos":[0,13]}]},{"pos":[96587,96592],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[96644,96645],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[96695,96701],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[96761,96762],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[96851,96856],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[96908,96909],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[96959,96965],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[97025,97026],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[97207,97213],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[97402,97418],"content":"WriteAsync(Char)","needQuote":true,"nodes":[{"content":"WriteAsync(Char)","pos":[0,16]}]},{"pos":[97555,97565],"content":"WriteAsync","needQuote":true,"nodes":[{"content":"WriteAsync","pos":[0,10]}]},{"pos":[97622,97623],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[97671,97675],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[97733,97734],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[97826,97836],"content":"WriteAsync","needQuote":true,"nodes":[{"content":"WriteAsync","pos":[0,10]}]},{"pos":[97893,97894],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[97942,97946],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[98004,98005],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[98264,98296],"content":"WriteAsync(Char[], Int32, Int32)","needQuote":true,"nodes":[{"content":"WriteAsync(Char[], Int32, Int32)","pos":[0,32]}]},{"pos":[98625,98635],"content":"WriteAsync","needQuote":true,"nodes":[{"content":"WriteAsync","pos":[0,10]}]},{"pos":[98692,98693],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[98741,98745],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"content":"[]","pos":[98804,98806]},{"content":",","pos":[98838,98839]},{"pos":[98893,98898],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[98958,98959]},{"pos":[99013,99018],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[99077,99078],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[99198,99208],"content":"WriteAsync","needQuote":true,"nodes":[{"content":"WriteAsync","pos":[0,10]}]},{"pos":[99265,99266],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[99314,99318],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[99376,99378],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[99407,99408]},{"pos":[99462,99467],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[99527,99528]},{"pos":[99582,99587],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[99646,99647],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[99987,100005],"content":"WriteAsync(String)","needQuote":true,"nodes":[{"content":"WriteAsync(String)","pos":[0,18]}]},{"pos":[100146,100156],"content":"WriteAsync","needQuote":true,"nodes":[{"content":"WriteAsync","pos":[0,10]}]},{"pos":[100213,100214],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[100264,100270],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[100330,100331],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[100425,100435],"content":"WriteAsync","needQuote":true,"nodes":[{"content":"WriteAsync","pos":[0,10]}]},{"pos":[100492,100493],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[100543,100549],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[100609,100610],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[100837,100853],"content":"WriteLineAsync()","needQuote":true,"nodes":[{"content":"WriteLineAsync()","pos":[0,16]}]},{"pos":[100974,100988],"content":"WriteLineAsync","needQuote":true,"nodes":[{"content":"WriteLineAsync","pos":[0,14]}]},{"pos":[101049,101050],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[101077,101078],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[101161,101175],"content":"WriteLineAsync","needQuote":true,"nodes":[{"content":"WriteLineAsync","pos":[0,14]}]},{"pos":[101236,101237],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[101264,101265],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[101491,101511],"content":"WriteLineAsync(Char)","needQuote":true,"nodes":[{"content":"WriteLineAsync(Char)","pos":[0,20]}]},{"pos":[101656,101670],"content":"WriteLineAsync","needQuote":true,"nodes":[{"content":"WriteLineAsync","pos":[0,14]}]},{"pos":[101731,101732],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[101780,101784],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[101842,101843],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[101939,101953],"content":"WriteLineAsync","needQuote":true,"nodes":[{"content":"WriteLineAsync","pos":[0,14]}]},{"pos":[102014,102015],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[102063,102067],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[102125,102126],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[102397,102433],"content":"WriteLineAsync(Char[], Int32, Int32)","needQuote":true,"nodes":[{"content":"WriteLineAsync(Char[], Int32, Int32)","pos":[0,36]}]},{"pos":[102778,102792],"content":"WriteLineAsync","needQuote":true,"nodes":[{"content":"WriteLineAsync","pos":[0,14]}]},{"pos":[102853,102854],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[102902,102906],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"content":"[]","pos":[102965,102967]},{"content":",","pos":[102999,103000]},{"pos":[103054,103059],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[103119,103120]},{"pos":[103174,103179],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[103238,103239],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[103363,103377],"content":"WriteLineAsync","needQuote":true,"nodes":[{"content":"WriteLineAsync","pos":[0,14]}]},{"pos":[103438,103439],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[103487,103491],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[103549,103551],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[103580,103581]},{"pos":[103635,103640],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[103700,103701]},{"pos":[103755,103760],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[103819,103820],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[104176,104198],"content":"WriteLineAsync(String)","needQuote":true,"nodes":[{"content":"WriteLineAsync(String)","pos":[0,22]}]},{"pos":[104347,104361],"content":"WriteLineAsync","needQuote":true,"nodes":[{"content":"WriteLineAsync","pos":[0,14]}]},{"pos":[104422,104423],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[104473,104479],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[104539,104540],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[104638,104652],"content":"WriteLineAsync","needQuote":true,"nodes":[{"content":"WriteLineAsync","pos":[0,14]}]},{"pos":[104713,104714],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[104764,104770],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[104830,104831],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[105041,105058],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]},{"pos":[105234,105255],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[105449,105476],"content":"ArgumentOutOfRangeException","needQuote":true,"nodes":[{"content":"ArgumentOutOfRangeException","pos":[0,27]}]},{"pos":[105690,105714],"content":"EncoderFallbackException","needQuote":true,"nodes":[{"content":"EncoderFallbackException","pos":[0,24]}]},{"pos":[105923,105946],"content":"ObjectDisposedException","needQuote":true,"nodes":[{"content":"ObjectDisposedException","pos":[0,23]}]},{"pos":[106153,106164],"content":"IOException","needQuote":true,"nodes":[{"content":"IOException","pos":[0,11]}]},{"pos":[106345,106366],"content":"NotSupportedException","needQuote":true,"nodes":[{"content":"NotSupportedException","pos":[0,21]}]},{"pos":[106575,106600],"content":"InvalidOperationException","needQuote":true,"nodes":[{"content":"InvalidOperationException","pos":[0,25]}]}],"content":"items:\n- uid: System.IO.StreamWriter\n  commentId: T:System.IO.StreamWriter\n  id: StreamWriter\n  parent: System.IO\n  children:\n  - System.IO.StreamWriter.#ctor(System.IO.Stream)\n  - System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding)\n  - System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32)\n  - System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32,System.Boolean)\n  - System.IO.StreamWriter.AutoFlush\n  - System.IO.StreamWriter.BaseStream\n  - System.IO.StreamWriter.Dispose(System.Boolean)\n  - System.IO.StreamWriter.Encoding\n  - System.IO.StreamWriter.Flush\n  - System.IO.StreamWriter.FlushAsync\n  - System.IO.StreamWriter.Null\n  - System.IO.StreamWriter.Write(System.Char)\n  - System.IO.StreamWriter.Write(System.Char[])\n  - System.IO.StreamWriter.Write(System.Char[],System.Int32,System.Int32)\n  - System.IO.StreamWriter.Write(System.String)\n  - System.IO.StreamWriter.WriteAsync(System.Char)\n  - System.IO.StreamWriter.WriteAsync(System.Char[],System.Int32,System.Int32)\n  - System.IO.StreamWriter.WriteAsync(System.String)\n  - System.IO.StreamWriter.WriteLineAsync\n  - System.IO.StreamWriter.WriteLineAsync(System.Char)\n  - System.IO.StreamWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)\n  - System.IO.StreamWriter.WriteLineAsync(System.String)\n  langs:\n  - csharp\n  - vb\n  name: StreamWriter\n  fullName: System.IO.StreamWriter\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/StreamWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: StreamWriter\n    path: src/mscorlib/src/System/IO/StreamWriter.cs\n    startLine: 33\n  assemblies:\n  - System.IO\n  namespace: System.IO\n  summary: \"\\n<p>Implements a <xref href=\\\"System.IO.TextWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for writing characters to a stream in a particular encoding.</p>\\n\"\n  syntax:\n    content: >-\n      [Serializable]\n\n      [ComVisible(true)]\n\n      public class StreamWriter : TextWriter, IDisposable\n    content.vb: >-\n      <Serializable>\n\n      <ComVisible(True)>\n\n      Public Class StreamWriter\n          Inherits TextWriter\n          Implements IDisposable\n  seealso:\n  - type: System.IO.Stream\n    commentId: T:System.IO.Stream\n  - type: System.IO.StreamReader\n    commentId: T:System.IO.StreamReader\n  - type: System.Text.Encoder\n    commentId: T:System.Text.Encoder\n  - type: System.Text.Encoding\n    commentId: T:System.Text.Encoding\n  inheritance:\n  - System.Object\n  - System.IO.TextWriter\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.IO.TextWriter.CoreNewLine\n  - System.IO.TextWriter.FormatProvider\n  - System.IO.TextWriter.NewLine\n  - System.IO.TextWriter.Dispose\n  - System.IO.TextWriter.Write(System.Boolean)\n  - System.IO.TextWriter.Write(System.Decimal)\n  - System.IO.TextWriter.Write(System.Double)\n  - System.IO.TextWriter.Write(System.Int32)\n  - System.IO.TextWriter.Write(System.Int64)\n  - System.IO.TextWriter.Write(System.Object)\n  - System.IO.TextWriter.Write(System.Single)\n  - System.IO.TextWriter.Write(System.String,System.Object)\n  - System.IO.TextWriter.Write(System.String,System.Object,System.Object)\n  - System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)\n  - System.IO.TextWriter.Write(System.String,System.Object[])\n  - System.IO.TextWriter.Write(System.UInt32)\n  - System.IO.TextWriter.Write(System.UInt64)\n  - System.IO.TextWriter.WriteAsync(System.Char[])\n  - System.IO.TextWriter.WriteLine\n  - System.IO.TextWriter.WriteLine(System.Boolean)\n  - System.IO.TextWriter.WriteLine(System.Char)\n  - System.IO.TextWriter.WriteLine(System.Char[])\n  - System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)\n  - System.IO.TextWriter.WriteLine(System.Decimal)\n  - System.IO.TextWriter.WriteLine(System.Double)\n  - System.IO.TextWriter.WriteLine(System.Int32)\n  - System.IO.TextWriter.WriteLine(System.Int64)\n  - System.IO.TextWriter.WriteLine(System.Object)\n  - System.IO.TextWriter.WriteLine(System.Single)\n  - System.IO.TextWriter.WriteLine(System.String)\n  - System.IO.TextWriter.WriteLine(System.String,System.Object)\n  - System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)\n  - System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)\n  - System.IO.TextWriter.WriteLine(System.String,System.Object[])\n  - System.IO.TextWriter.WriteLine(System.UInt32)\n  - System.IO.TextWriter.WriteLine(System.UInt64)\n  - System.IO.TextWriter.WriteLineAsync(System.Char[])\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: StreamWriter\n- uid: System.IO.StreamWriter.Null\n  commentId: F:System.IO.StreamWriter.Null\n  parent: System.IO.StreamWriter\n  langs:\n  - csharp\n  - vb\n  fullName: System.IO.StreamWriter.Null\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/StreamWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    path: src/mscorlib/src/System/IO/StreamWriter.cs\n    startLine: 50\n  assemblies:\n  - System.IO\n  namespace: System.IO\n  summary: \"\\n<p>Provides a <strong>StreamWriter</strong> with no backing store that can be written to, but not read from.</p>\\n\"\n  syntax:\n    content: public static readonly StreamWriter Null\n    content.vb: Public Shared ReadOnly Null As StreamWriter\n    return:\n      type: System.IO.StreamWriter\n  modifiers.csharp:\n  - public\n  - static\n  - readonly\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: StreamWriter.Null\n- uid: System.IO.StreamWriter.#ctor(System.IO.Stream)\n  commentId: M:System.IO.StreamWriter.#ctor(System.IO.Stream)\n  id: '#ctor(System.IO.Stream)'\n  parent: System.IO.StreamWriter\n  langs:\n  - csharp\n  - vb\n  name: StreamWriter(Stream)\n  fullName: System.IO.StreamWriter.StreamWriter(System.IO.Stream)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/StreamWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/IO/StreamWriter.cs\n    startLine: 115\n  assemblies:\n  - System.IO\n  namespace: System.IO\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.IO.StreamWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class for the specified stream by using UTF-8 encoding and the default buffer size.</p>\\n\"\n  syntax:\n    content: public StreamWriter(Stream stream)\n    content.vb: Public Sub New(stream As Stream)\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: \"\\n<p>The stream to write to. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>stream</em> is not writable. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>stream</em> is <strong>null</strong>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: StreamWriter.StreamWriter(Stream)\n- uid: System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding)\n  commentId: M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding)\n  id: '#ctor(System.IO.Stream,System.Text.Encoding)'\n  parent: System.IO.StreamWriter\n  langs:\n  - csharp\n  - vb\n  name: StreamWriter(Stream, Encoding)\n  fullName: System.IO.StreamWriter.StreamWriter(System.IO.Stream, System.Text.Encoding)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/StreamWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/IO/StreamWriter.cs\n    startLine: 119\n  assemblies:\n  - System.IO\n  namespace: System.IO\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.IO.StreamWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class for the specified stream by using the specified encoding and the default buffer size.</p>\\n\"\n  syntax:\n    content: public StreamWriter(Stream stream, Encoding encoding)\n    content.vb: Public Sub New(stream As Stream, encoding As Encoding)\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: \"\\n<p>The stream to write to. </p>\\n\"\n    - id: encoding\n      type: System.Text.Encoding\n      description: \"\\n<p>The character encoding to use. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>stream</em> or <em>encoding</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>stream</em> is not writable. </p>\\n\"\n  seealso:\n  - type: System.Text.Encoding\n    commentId: T:System.Text.Encoding\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: StreamWriter.StreamWriter(Stream, Encoding)\n- uid: System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32)\n  commentId: M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32)\n  id: '#ctor(System.IO.Stream,System.Text.Encoding,System.Int32)'\n  parent: System.IO.StreamWriter\n  langs:\n  - csharp\n  - vb\n  name: StreamWriter(Stream, Encoding, Int32)\n  fullName: System.IO.StreamWriter.StreamWriter(System.IO.Stream, System.Text.Encoding, System.Int32)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/StreamWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/IO/StreamWriter.cs\n    startLine: 127\n  assemblies:\n  - System.IO\n  namespace: System.IO\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.IO.StreamWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class for the specified stream by using the specified encoding and buffer size.</p>\\n\"\n  syntax:\n    content: public StreamWriter(Stream stream, Encoding encoding, int bufferSize)\n    content.vb: Public Sub New(stream As Stream, encoding As Encoding, bufferSize As Integer)\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: \"\\n<p>The stream to write to. </p>\\n\"\n    - id: encoding\n      type: System.Text.Encoding\n      description: \"\\n<p>The character encoding to use. </p>\\n\"\n    - id: bufferSize\n      type: System.Int32\n      description: \"\\n<p>The buffer size, in bytes. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>stream</em> or <em>encoding</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>bufferSize</em> is negative. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>stream</em> is not writable. </p>\\n\"\n  seealso:\n  - type: System.Text.Encoding\n    commentId: T:System.Text.Encoding\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: StreamWriter.StreamWriter(Stream, Encoding, Int32)\n- uid: System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32,System.Boolean)\n  commentId: M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32,System.Boolean)\n  id: '#ctor(System.IO.Stream,System.Text.Encoding,System.Int32,System.Boolean)'\n  parent: System.IO.StreamWriter\n  langs:\n  - csharp\n  - vb\n  name: StreamWriter(Stream, Encoding, Int32, Boolean)\n  fullName: System.IO.StreamWriter.StreamWriter(System.IO.Stream, System.Text.Encoding, System.Int32, System.Boolean)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/StreamWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/IO/StreamWriter.cs\n    startLine: 131\n  assemblies:\n  - System.IO\n  namespace: System.IO\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.IO.StreamWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class for the specified stream by using the specified encoding and buffer size, and optionally leaves the stream open.</p>\\n\"\n  syntax:\n    content: public StreamWriter(Stream stream, Encoding encoding, int bufferSize, bool leaveOpen)\n    content.vb: Public Sub New(stream As Stream, encoding As Encoding, bufferSize As Integer, leaveOpen As Boolean)\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: \"\\n<p>The stream to write to.</p>\\n\"\n    - id: encoding\n      type: System.Text.Encoding\n      description: \"\\n<p>The character encoding to use.</p>\\n\"\n    - id: bufferSize\n      type: System.Int32\n      description: \"\\n<p>The buffer size, in bytes.</p>\\n\"\n    - id: leaveOpen\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to leave the stream open after the <xref href=\\\"System.IO.StreamWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is disposed; otherwise, <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>stream</em> or <em>encoding</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>bufferSize</em> is negative. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>stream</em> is not writable. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: StreamWriter.StreamWriter(Stream, Encoding, Int32, Boolean)\n- uid: System.IO.StreamWriter.AutoFlush\n  commentId: P:System.IO.StreamWriter.AutoFlush\n  id: AutoFlush\n  parent: System.IO.StreamWriter\n  langs:\n  - csharp\n  - vb\n  name: AutoFlush\n  fullName: System.IO.StreamWriter.AutoFlush\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/StreamWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: AutoFlush\n    path: src/mscorlib/src/System/IO/StreamWriter.cs\n    startLine: 303\n  assemblies:\n  - System.IO\n  namespace: System.IO\n  summary: \"\\n<p>Gets or sets a value indicating whether the <xref href=\\\"System.IO.StreamWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> will flush its buffer to the underlying stream after every call to <xref href=\\\"System.IO.StreamWriter.Write(System.Char)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public virtual bool AutoFlush { get; set; }\n    content.vb: Public Overridable Property AutoFlush As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to force <xref href=\\\"System.IO.StreamWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to flush its buffer; otherwise, <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: StreamWriter.AutoFlush\n- uid: System.IO.StreamWriter.BaseStream\n  commentId: P:System.IO.StreamWriter.BaseStream\n  id: BaseStream\n  parent: System.IO.StreamWriter\n  langs:\n  - csharp\n  - vb\n  name: BaseStream\n  fullName: System.IO.StreamWriter.BaseStream\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/StreamWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: BaseStream\n    path: src/mscorlib/src/System/IO/StreamWriter.cs\n    startLine: 315\n  assemblies:\n  - System.IO\n  namespace: System.IO\n  summary: \"\\n<p>Gets the underlying stream that interfaces with a backing store.</p>\\n\"\n  syntax:\n    content: public virtual Stream BaseStream { get; }\n    content.vb: Public Overridable ReadOnly Property BaseStream As Stream\n    parameters: []\n    return:\n      type: System.IO.Stream\n      description: \"\\n<p>The stream this <strong>StreamWriter</strong> is writing to.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  nameWithType: StreamWriter.BaseStream\n- uid: System.IO.StreamWriter.Encoding\n  commentId: P:System.IO.StreamWriter.Encoding\n  id: Encoding\n  parent: System.IO.StreamWriter\n  langs:\n  - csharp\n  - vb\n  name: Encoding\n  fullName: System.IO.StreamWriter.Encoding\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/StreamWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Encoding\n    path: src/mscorlib/src/System/IO/StreamWriter.cs\n    startLine: 327\n  assemblies:\n  - System.IO\n  namespace: System.IO\n  summary: \"\\n<p>Gets the <xref href=\\\"System.Text.Encoding\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> in which the output is written.</p>\\n\"\n  syntax:\n    content: public override Encoding Encoding { get; }\n    content.vb: Public Overrides ReadOnly Property Encoding As Encoding\n    parameters: []\n    return:\n      type: System.Text.Encoding\n      description: \"\\n<p>The <xref href=\\\"System.Text.Encoding\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> specified in the constructor for the current instance, or <xref href=\\\"System.Text.UTF8Encoding\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> if an encoding was not specified.</p>\\n\"\n  overridden: System.IO.TextWriter.Encoding\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: StreamWriter.Encoding\n- uid: System.IO.StreamWriter.Dispose(System.Boolean)\n  commentId: M:System.IO.StreamWriter.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.IO.StreamWriter\n  langs:\n  - csharp\n  - vb\n  name: Dispose(Boolean)\n  fullName: System.IO.StreamWriter.Dispose(System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/StreamWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Dispose\n    path: src/mscorlib/src/System/IO/StreamWriter.cs\n    startLine: 215\n  assemblies:\n  - System.IO\n  namespace: System.IO\n  summary: \"\\n<p>Releases the unmanaged resources used by the <xref href=\\\"System.IO.StreamWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and optionally releases the managed resources.</p>\\n\"\n  syntax:\n    content: protected override void Dispose(bool disposing)\n    content.vb: Protected Overrides Sub Dispose(disposing As Boolean)\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to release both managed and unmanaged resources; <strong>false</strong> to release only unmanaged resources. </p>\\n\"\n  overridden: System.IO.TextWriter.Dispose(System.Boolean)\n  exceptions:\n  - type: System.Text.EncoderFallbackException\n    commentId: T:System.Text.EncoderFallbackException\n    description: \"\\n<p>The current encoding does not support displaying half of a Unicode surrogate pair.</p>\\n\"\n  modifiers.csharp:\n  - protected\n  - override\n  modifiers.vb:\n  - Protected\n  - Overrides\n  nameWithType: StreamWriter.Dispose(Boolean)\n- uid: System.IO.StreamWriter.Flush\n  commentId: M:System.IO.StreamWriter.Flush\n  id: Flush\n  parent: System.IO.StreamWriter\n  langs:\n  - csharp\n  - vb\n  name: Flush()\n  fullName: System.IO.StreamWriter.Flush()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/StreamWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Flush\n    path: src/mscorlib/src/System/IO/StreamWriter.cs\n    startLine: 265\n  assemblies:\n  - System.IO\n  namespace: System.IO\n  summary: \"\\n<p>Clears all buffers for the current writer and causes any buffered data to be written to the underlying stream.</p>\\n\"\n  syntax:\n    content: public override void Flush()\n    content.vb: Public Overrides Sub Flush\n  overridden: System.IO.TextWriter.Flush\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The current writer is closed. </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error has occurred. </p>\\n\"\n  - type: System.Text.EncoderFallbackException\n    commentId: T:System.Text.EncoderFallbackException\n    description: \"\\n<p>The current encoding does not support displaying half of a Unicode surrogate pair. </p>\\n\"\n  seealso:\n  - type: System.IO.Stream.Close\n    commentId: M:System.IO.Stream.Close\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: StreamWriter.Flush()\n- uid: System.IO.StreamWriter.FlushAsync\n  commentId: M:System.IO.StreamWriter.FlushAsync\n  id: FlushAsync\n  parent: System.IO.StreamWriter\n  langs:\n  - csharp\n  - vb\n  name: FlushAsync()\n  fullName: System.IO.StreamWriter.FlushAsync()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/StreamWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: FlushAsync\n    path: src/mscorlib/src/System/IO/StreamWriter.cs\n    startLine: 753\n  assemblies:\n  - System.IO\n  namespace: System.IO\n  summary: \"\\n<p>Clears all buffers for this stream asynchronously and causes any buffered data to be written to the underlying device.</p>\\n\"\n  syntax:\n    content: >-\n      [HostProtection(ExternalThreading = true)]\n\n      [ComVisible(false)]\n\n      public override Task FlushAsync()\n    content.vb: >-\n      <HostProtection(ExternalThreading:=True)>\n\n      <ComVisible(False)>\n\n      Public Overrides Function FlushAsync As Task\n    return:\n      type: System.Threading.Tasks.Task\n      description: \"\\n<p>A task that represents the asynchronous flush operation.</p>\\n\"\n  overridden: System.IO.TextWriter.FlushAsync\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The stream has been disposed.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: StreamWriter.FlushAsync()\n- uid: System.IO.StreamWriter.Write(System.Char)\n  commentId: M:System.IO.StreamWriter.Write(System.Char)\n  id: Write(System.Char)\n  parent: System.IO.StreamWriter\n  langs:\n  - csharp\n  - vb\n  name: Write(Char)\n  fullName: System.IO.StreamWriter.Write(System.Char)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/StreamWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Write\n    path: src/mscorlib/src/System/IO/StreamWriter.cs\n    startLine: 331\n  assemblies:\n  - System.IO\n  namespace: System.IO\n  summary: \"\\n<p>Writes a character to the stream.</p>\\n\"\n  syntax:\n    content: public override void Write(char value)\n    content.vb: Public Overrides Sub Write(value As Char)\n    parameters:\n    - id: value\n      type: System.Char\n      description: \"\\n<p>The character to write to the stream. </p>\\n\"\n  overridden: System.IO.TextWriter.Write(System.Char)\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurs. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>\\n<xref href=\\\"System.IO.StreamWriter.AutoFlush\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is true or the <xref href=\\\"System.IO.StreamWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> buffer is full, and current writer is closed. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<xref href=\\\"System.IO.StreamWriter.AutoFlush\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is true or the <xref href=\\\"System.IO.StreamWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> buffer is full, and the contents of the buffer cannot be written to the underlying fixed size stream because the <xref href=\\\"System.IO.StreamWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is at the end the stream. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: StreamWriter.Write(Char)\n- uid: System.IO.StreamWriter.Write(System.Char[])\n  commentId: M:System.IO.StreamWriter.Write(System.Char[])\n  id: Write(System.Char[])\n  parent: System.IO.StreamWriter\n  langs:\n  - csharp\n  - vb\n  name: Write(Char[])\n  fullName: System.IO.StreamWriter.Write(System.Char[])\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/StreamWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Write\n    path: src/mscorlib/src/System/IO/StreamWriter.cs\n    startLine: 341\n  assemblies:\n  - System.IO\n  namespace: System.IO\n  summary: \"\\n<p>Writes a character array to the stream.</p>\\n\"\n  syntax:\n    content: public override void Write(char[] buffer)\n    content.vb: Public Overrides Sub Write(buffer As Char())\n    parameters:\n    - id: buffer\n      type: System.Char[]\n      description: \"\\n<p>A character array containing the data to write. If <em>buffer</em> is <strong>null</strong>, nothing is written. </p>\\n\"\n  overridden: System.IO.TextWriter.Write(System.Char[])\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurs. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>\\n<xref href=\\\"System.IO.StreamWriter.AutoFlush\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is true or the <xref href=\\\"System.IO.StreamWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> buffer is full, and current writer is closed. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<xref href=\\\"System.IO.StreamWriter.AutoFlush\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is true or the <xref href=\\\"System.IO.StreamWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> buffer is full, and the contents of the buffer cannot be written to the underlying fixed size stream because the <xref href=\\\"System.IO.StreamWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is at the end the stream. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  fullName.vb: System.IO.StreamWriter.Write(System.Char())\n  name.vb: Write(Char())\n  nameWithType: StreamWriter.Write(Char[])\n  nameWithType.vb: StreamWriter.Write(Char())\n- uid: System.IO.StreamWriter.Write(System.Char[],System.Int32,System.Int32)\n  commentId: M:System.IO.StreamWriter.Write(System.Char[],System.Int32,System.Int32)\n  id: Write(System.Char[],System.Int32,System.Int32)\n  parent: System.IO.StreamWriter\n  langs:\n  - csharp\n  - vb\n  name: Write(Char[], Int32, Int32)\n  fullName: System.IO.StreamWriter.Write(System.Char[], System.Int32, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/StreamWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Write\n    path: src/mscorlib/src/System/IO/StreamWriter.cs\n    startLine: 365\n  assemblies:\n  - System.IO\n  namespace: System.IO\n  summary: \"\\n<p>Writes a subarray of characters to the stream.</p>\\n\"\n  syntax:\n    content: public override void Write(char[] buffer, int index, int count)\n    content.vb: Public Overrides Sub Write(buffer As Char(), index As Integer, count As Integer)\n    parameters:\n    - id: buffer\n      type: System.Char[]\n      description: \"\\n<p>A character array that contains the data to write. </p>\\n\"\n    - id: index\n      type: System.Int32\n      description: \"\\n<p>The character position in the buffer at which to start reading data. </p>\\n\"\n    - id: count\n      type: System.Int32\n      description: \"\\n<p>The maximum number of characters to write. </p>\\n\"\n  overridden: System.IO.TextWriter.Write(System.Char[],System.Int32,System.Int32)\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>buffer</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The buffer length minus <em>index</em> is less than <em>count</em>. </p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>index</em> or <em>count</em> is negative. </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurs. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>\\n<xref href=\\\"System.IO.StreamWriter.AutoFlush\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is true or the <xref href=\\\"System.IO.StreamWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> buffer is full, and current writer is closed. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<xref href=\\\"System.IO.StreamWriter.AutoFlush\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is true or the <xref href=\\\"System.IO.StreamWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> buffer is full, and the contents of the buffer cannot be written to the underlying fixed size stream because the <xref href=\\\"System.IO.StreamWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is at the end the stream. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  fullName.vb: System.IO.StreamWriter.Write(System.Char(), System.Int32, System.Int32)\n  name.vb: Write(Char(), Int32, Int32)\n  nameWithType: StreamWriter.Write(Char[], Int32, Int32)\n  nameWithType.vb: StreamWriter.Write(Char(), Int32, Int32)\n- uid: System.IO.StreamWriter.Write(System.String)\n  commentId: M:System.IO.StreamWriter.Write(System.String)\n  id: Write(System.String)\n  parent: System.IO.StreamWriter\n  langs:\n  - csharp\n  - vb\n  name: Write(String)\n  fullName: System.IO.StreamWriter.Write(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/StreamWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Write\n    path: src/mscorlib/src/System/IO/StreamWriter.cs\n    startLine: 391\n  assemblies:\n  - System.IO\n  namespace: System.IO\n  summary: \"\\n<p>Writes a string to the stream.</p>\\n\"\n  syntax:\n    content: public override void Write(string value)\n    content.vb: Public Overrides Sub Write(value As String)\n    parameters:\n    - id: value\n      type: System.String\n      description: \"\\n<p>The string to write to the stream. If <em>value</em> is null, nothing is written. </p>\\n\"\n  overridden: System.IO.TextWriter.Write(System.String)\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>\\n<xref href=\\\"System.IO.StreamWriter.AutoFlush\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is true or the <xref href=\\\"System.IO.StreamWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> buffer is full, and current writer is closed. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<xref href=\\\"System.IO.StreamWriter.AutoFlush\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is true or the <xref href=\\\"System.IO.StreamWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> buffer is full, and the contents of the buffer cannot be written to the underlying fixed size stream because the <xref href=\\\"System.IO.StreamWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is at the end the stream. </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error occurs. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: StreamWriter.Write(String)\n- uid: System.IO.StreamWriter.WriteAsync(System.Char)\n  commentId: M:System.IO.StreamWriter.WriteAsync(System.Char)\n  id: WriteAsync(System.Char)\n  parent: System.IO.StreamWriter\n  langs:\n  - csharp\n  - vb\n  name: WriteAsync(Char)\n  fullName: System.IO.StreamWriter.WriteAsync(System.Char)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/StreamWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: WriteAsync\n    path: src/mscorlib/src/System/IO/StreamWriter.cs\n    startLine: 415\n  assemblies:\n  - System.IO\n  namespace: System.IO\n  summary: \"\\n<p>Writes a character to the stream asynchronously.</p>\\n\"\n  syntax:\n    content: >-\n      [HostProtection(ExternalThreading = true)]\n\n      [ComVisible(false)]\n\n      public override Task WriteAsync(char value)\n    content.vb: >-\n      <HostProtection(ExternalThreading:=True)>\n\n      <ComVisible(False)>\n\n      Public Overrides Function WriteAsync(value As Char) As Task\n    parameters:\n    - id: value\n      type: System.Char\n      description: \"\\n<p>The character to write to the stream.</p>\\n\"\n    return:\n      type: System.Threading.Tasks.Task\n      description: \"\\n<p>A task that represents the asynchronous write operation.</p>\\n\"\n  overridden: System.IO.TextWriter.WriteAsync(System.Char)\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The stream writer is disposed.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The stream writer is currently in use by a previous write operation.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: StreamWriter.WriteAsync(Char)\n- uid: System.IO.StreamWriter.WriteAsync(System.Char[],System.Int32,System.Int32)\n  commentId: M:System.IO.StreamWriter.WriteAsync(System.Char[],System.Int32,System.Int32)\n  id: WriteAsync(System.Char[],System.Int32,System.Int32)\n  parent: System.IO.StreamWriter\n  langs:\n  - csharp\n  - vb\n  name: WriteAsync(Char[], Int32, Int32)\n  fullName: System.IO.StreamWriter.WriteAsync(System.Char[], System.Int32, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/StreamWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: WriteAsync\n    path: src/mscorlib/src/System/IO/StreamWriter.cs\n    startLine: 563\n  assemblies:\n  - System.IO\n  namespace: System.IO\n  summary: \"\\n<p>Writes a subarray of characters to the stream asynchronously.</p>\\n\"\n  syntax:\n    content: >-\n      [HostProtection(ExternalThreading = true)]\n\n      [ComVisible(false)]\n\n      public override Task WriteAsync(char[] buffer, int index, int count)\n    content.vb: >-\n      <HostProtection(ExternalThreading:=True)>\n\n      <ComVisible(False)>\n\n      Public Overrides Function WriteAsync(buffer As Char(), index As Integer, count As Integer) As Task\n    parameters:\n    - id: buffer\n      type: System.Char[]\n      description: \"\\n<p>A character array that contains the data to write.</p>\\n\"\n    - id: index\n      type: System.Int32\n      description: \"\\n<p>The character position in the buffer at which to begin reading data.</p>\\n\"\n    - id: count\n      type: System.Int32\n      description: \"\\n<p>The maximum number of characters to write.</p>\\n\"\n    return:\n      type: System.Threading.Tasks.Task\n      description: \"\\n<p>A task that represents the asynchronous write operation.</p>\\n\"\n  overridden: System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>buffer</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The <em>index</em> plus <em>count</em> is greater than the buffer length.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>index</em> or <em>count</em> is negative.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The stream writer is disposed.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The stream writer is currently in use by a previous write operation. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  fullName.vb: System.IO.StreamWriter.WriteAsync(System.Char(), System.Int32, System.Int32)\n  name.vb: WriteAsync(Char(), Int32, Int32)\n  nameWithType: StreamWriter.WriteAsync(Char[], Int32, Int32)\n  nameWithType.vb: StreamWriter.WriteAsync(Char(), Int32, Int32)\n- uid: System.IO.StreamWriter.WriteAsync(System.String)\n  commentId: M:System.IO.StreamWriter.WriteAsync(System.String)\n  id: WriteAsync(System.String)\n  parent: System.IO.StreamWriter\n  langs:\n  - csharp\n  - vb\n  name: WriteAsync(String)\n  fullName: System.IO.StreamWriter.WriteAsync(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/StreamWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: WriteAsync\n    path: src/mscorlib/src/System/IO/StreamWriter.cs\n    startLine: 477\n  assemblies:\n  - System.IO\n  namespace: System.IO\n  summary: \"\\n<p>Writes a string to the stream asynchronously.</p>\\n\"\n  syntax:\n    content: >-\n      [HostProtection(ExternalThreading = true)]\n\n      [ComVisible(false)]\n\n      public override Task WriteAsync(string value)\n    content.vb: >-\n      <HostProtection(ExternalThreading:=True)>\n\n      <ComVisible(False)>\n\n      Public Overrides Function WriteAsync(value As String) As Task\n    parameters:\n    - id: value\n      type: System.String\n      description: \"\\n<p>The string to write to the stream. If <em>value</em> is <strong>null</strong>, nothing is written.</p>\\n\"\n    return:\n      type: System.Threading.Tasks.Task\n      description: \"\\n<p>A task that represents the asynchronous write operation.</p>\\n\"\n  overridden: System.IO.TextWriter.WriteAsync(System.String)\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The stream writer is disposed.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The stream writer is currently in use by a previous write operation.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: StreamWriter.WriteAsync(String)\n- uid: System.IO.StreamWriter.WriteLineAsync\n  commentId: M:System.IO.StreamWriter.WriteLineAsync\n  id: WriteLineAsync\n  parent: System.IO.StreamWriter\n  langs:\n  - csharp\n  - vb\n  name: WriteLineAsync()\n  fullName: System.IO.StreamWriter.WriteLineAsync()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/StreamWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: WriteLineAsync\n    path: src/mscorlib/src/System/IO/StreamWriter.cs\n    startLine: 651\n  assemblies:\n  - System.IO\n  namespace: System.IO\n  summary: \"\\n<p>Writes a line terminator asynchronously to the stream.</p>\\n\"\n  syntax:\n    content: >-\n      [HostProtection(ExternalThreading = true)]\n\n      [ComVisible(false)]\n\n      public override Task WriteLineAsync()\n    content.vb: >-\n      <HostProtection(ExternalThreading:=True)>\n\n      <ComVisible(False)>\n\n      Public Overrides Function WriteLineAsync As Task\n    return:\n      type: System.Threading.Tasks.Task\n      description: \"\\n<p>A task that represents the asynchronous write operation.</p>\\n\"\n  overridden: System.IO.TextWriter.WriteLineAsync\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The stream writer is disposed.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The stream writer is currently in use by a previous write operation.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: StreamWriter.WriteLineAsync()\n- uid: System.IO.StreamWriter.WriteLineAsync(System.Char)\n  commentId: M:System.IO.StreamWriter.WriteLineAsync(System.Char)\n  id: WriteLineAsync(System.Char)\n  parent: System.IO.StreamWriter\n  langs:\n  - csharp\n  - vb\n  name: WriteLineAsync(Char)\n  fullName: System.IO.StreamWriter.WriteLineAsync(System.Char)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/StreamWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: WriteLineAsync\n    path: src/mscorlib/src/System/IO/StreamWriter.cs\n    startLine: 674\n  assemblies:\n  - System.IO\n  namespace: System.IO\n  summary: \"\\n<p>Writes a character followed by a line terminator asynchronously to the stream.</p>\\n\"\n  syntax:\n    content: >-\n      [HostProtection(ExternalThreading = true)]\n\n      [ComVisible(false)]\n\n      public override Task WriteLineAsync(char value)\n    content.vb: >-\n      <HostProtection(ExternalThreading:=True)>\n\n      <ComVisible(False)>\n\n      Public Overrides Function WriteLineAsync(value As Char) As Task\n    parameters:\n    - id: value\n      type: System.Char\n      description: \"\\n<p>The character to write to the stream.</p>\\n\"\n    return:\n      type: System.Threading.Tasks.Task\n      description: \"\\n<p>A task that represents the asynchronous write operation.</p>\\n\"\n  overridden: System.IO.TextWriter.WriteLineAsync(System.Char)\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The stream writer is disposed.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The stream writer is currently in use by a previous write operation.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: StreamWriter.WriteLineAsync(Char)\n- uid: System.IO.StreamWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)\n  commentId: M:System.IO.StreamWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)\n  id: WriteLineAsync(System.Char[],System.Int32,System.Int32)\n  parent: System.IO.StreamWriter\n  langs:\n  - csharp\n  - vb\n  name: WriteLineAsync(Char[], Int32, Int32)\n  fullName: System.IO.StreamWriter.WriteLineAsync(System.Char[], System.Int32, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/StreamWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: WriteLineAsync\n    path: src/mscorlib/src/System/IO/StreamWriter.cs\n    startLine: 720\n  assemblies:\n  - System.IO\n  namespace: System.IO\n  summary: \"\\n<p>Writes a subarray of characters followed by a line terminator asynchronously to the stream.</p>\\n\"\n  syntax:\n    content: >-\n      [HostProtection(ExternalThreading = true)]\n\n      [ComVisible(false)]\n\n      public override Task WriteLineAsync(char[] buffer, int index, int count)\n    content.vb: >-\n      <HostProtection(ExternalThreading:=True)>\n\n      <ComVisible(False)>\n\n      Public Overrides Function WriteLineAsync(buffer As Char(), index As Integer, count As Integer) As Task\n    parameters:\n    - id: buffer\n      type: System.Char[]\n      description: \"\\n<p>The character array to write data from.</p>\\n\"\n    - id: index\n      type: System.Int32\n      description: \"\\n<p>The character position in the buffer at which to start reading data.</p>\\n\"\n    - id: count\n      type: System.Int32\n      description: \"\\n<p>The maximum number of characters to write.</p>\\n\"\n    return:\n      type: System.Threading.Tasks.Task\n      description: \"\\n<p>A task that represents the asynchronous write operation.</p>\\n\"\n  overridden: System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>buffer</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The <em>index</em> plus <em>count</em> is greater than the buffer length.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>index</em> or <em>count</em> is negative.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The stream writer is disposed.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The stream writer is currently in use by a previous write operation. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  fullName.vb: System.IO.StreamWriter.WriteLineAsync(System.Char(), System.Int32, System.Int32)\n  name.vb: WriteLineAsync(Char(), Int32, Int32)\n  nameWithType: StreamWriter.WriteLineAsync(Char[], Int32, Int32)\n  nameWithType.vb: StreamWriter.WriteLineAsync(Char(), Int32, Int32)\n- uid: System.IO.StreamWriter.WriteLineAsync(System.String)\n  commentId: M:System.IO.StreamWriter.WriteLineAsync(System.String)\n  id: WriteLineAsync(System.String)\n  parent: System.IO.StreamWriter\n  langs:\n  - csharp\n  - vb\n  name: WriteLineAsync(String)\n  fullName: System.IO.StreamWriter.WriteLineAsync(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IO/StreamWriter.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: WriteLineAsync\n    path: src/mscorlib/src/System/IO/StreamWriter.cs\n    startLine: 697\n  assemblies:\n  - System.IO\n  namespace: System.IO\n  summary: \"\\n<p>Writes a string followed by a line terminator asynchronously to the stream.</p>\\n\"\n  syntax:\n    content: >-\n      [HostProtection(ExternalThreading = true)]\n\n      [ComVisible(false)]\n\n      public override Task WriteLineAsync(string value)\n    content.vb: >-\n      <HostProtection(ExternalThreading:=True)>\n\n      <ComVisible(False)>\n\n      Public Overrides Function WriteLineAsync(value As String) As Task\n    parameters:\n    - id: value\n      type: System.String\n      description: \"\\n<p>The string to write. If the value is <strong>null</strong>, only a line terminator is written. </p>\\n\"\n    return:\n      type: System.Threading.Tasks.Task\n      description: \"\\n<p>A task that represents the asynchronous write operation.</p>\\n\"\n  overridden: System.IO.TextWriter.WriteLineAsync(System.String)\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The stream writer is disposed.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The stream writer is currently in use by a previous write operation.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: StreamWriter.WriteLineAsync(String)\nreferences:\n- uid: System.IO\n  isExternal: false\n  name: System.IO\n  fullName: System.IO\n  nameWithType: System.IO\n  commentId: N:System.IO\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.IO.TextWriter\n  parent: System.IO\n  isExternal: false\n  name: TextWriter\n  fullName: System.IO.TextWriter\n  nameWithType: TextWriter\n  commentId: T:System.IO.TextWriter\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  fullName: System.IDisposable\n  nameWithType: IDisposable\n  commentId: T:System.IDisposable\n- uid: System.IO.TextWriter.CoreNewLine\n  parent: System.IO.TextWriter\n  isExternal: false\n  name: CoreNewLine\n  fullName: System.IO.TextWriter.CoreNewLine\n  nameWithType: TextWriter.CoreNewLine\n  commentId: F:System.IO.TextWriter.CoreNewLine\n- uid: System.IO.TextWriter.FormatProvider\n  parent: System.IO.TextWriter\n  isExternal: false\n  name: FormatProvider\n  fullName: System.IO.TextWriter.FormatProvider\n  nameWithType: TextWriter.FormatProvider\n  commentId: P:System.IO.TextWriter.FormatProvider\n- uid: System.IO.TextWriter.NewLine\n  parent: System.IO.TextWriter\n  isExternal: false\n  name: NewLine\n  fullName: System.IO.TextWriter.NewLine\n  nameWithType: TextWriter.NewLine\n  commentId: P:System.IO.TextWriter.NewLine\n- uid: System.IO.TextWriter.Dispose\n  parent: System.IO.TextWriter\n  isExternal: false\n  name: Dispose()\n  fullName: System.IO.TextWriter.Dispose()\n  spec.csharp:\n  - uid: System.IO.TextWriter.Dispose\n    name: Dispose\n    fullName: System.IO.TextWriter.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.Dispose\n    name: Dispose\n    fullName: System.IO.TextWriter.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.Dispose()\n  commentId: M:System.IO.TextWriter.Dispose\n- uid: System.IO.TextWriter.Write(System.Boolean)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: Write(Boolean)\n  fullName: System.IO.TextWriter.Write(System.Boolean)\n  spec.csharp:\n  - uid: System.IO.TextWriter.Write(System.Boolean)\n    name: Write\n    fullName: System.IO.TextWriter.Write\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.Write(System.Boolean)\n    name: Write\n    fullName: System.IO.TextWriter.Write\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.Write(Boolean)\n  commentId: M:System.IO.TextWriter.Write(System.Boolean)\n- uid: System.IO.TextWriter.Write(System.Decimal)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: Write(Decimal)\n  fullName: System.IO.TextWriter.Write(System.Decimal)\n  spec.csharp:\n  - uid: System.IO.TextWriter.Write(System.Decimal)\n    name: Write\n    fullName: System.IO.TextWriter.Write\n  - name: (\n    fullName: (\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.Write(System.Decimal)\n    name: Write\n    fullName: System.IO.TextWriter.Write\n  - name: (\n    fullName: (\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.Write(Decimal)\n  commentId: M:System.IO.TextWriter.Write(System.Decimal)\n- uid: System.IO.TextWriter.Write(System.Double)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: Write(Double)\n  fullName: System.IO.TextWriter.Write(System.Double)\n  spec.csharp:\n  - uid: System.IO.TextWriter.Write(System.Double)\n    name: Write\n    fullName: System.IO.TextWriter.Write\n  - name: (\n    fullName: (\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.Write(System.Double)\n    name: Write\n    fullName: System.IO.TextWriter.Write\n  - name: (\n    fullName: (\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.Write(Double)\n  commentId: M:System.IO.TextWriter.Write(System.Double)\n- uid: System.IO.TextWriter.Write(System.Int32)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: Write(Int32)\n  fullName: System.IO.TextWriter.Write(System.Int32)\n  spec.csharp:\n  - uid: System.IO.TextWriter.Write(System.Int32)\n    name: Write\n    fullName: System.IO.TextWriter.Write\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.Write(System.Int32)\n    name: Write\n    fullName: System.IO.TextWriter.Write\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.Write(Int32)\n  commentId: M:System.IO.TextWriter.Write(System.Int32)\n- uid: System.IO.TextWriter.Write(System.Int64)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: Write(Int64)\n  fullName: System.IO.TextWriter.Write(System.Int64)\n  spec.csharp:\n  - uid: System.IO.TextWriter.Write(System.Int64)\n    name: Write\n    fullName: System.IO.TextWriter.Write\n  - name: (\n    fullName: (\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.Write(System.Int64)\n    name: Write\n    fullName: System.IO.TextWriter.Write\n  - name: (\n    fullName: (\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.Write(Int64)\n  commentId: M:System.IO.TextWriter.Write(System.Int64)\n- uid: System.IO.TextWriter.Write(System.Object)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: Write(Object)\n  fullName: System.IO.TextWriter.Write(System.Object)\n  spec.csharp:\n  - uid: System.IO.TextWriter.Write(System.Object)\n    name: Write\n    fullName: System.IO.TextWriter.Write\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.Write(System.Object)\n    name: Write\n    fullName: System.IO.TextWriter.Write\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.Write(Object)\n  commentId: M:System.IO.TextWriter.Write(System.Object)\n- uid: System.IO.TextWriter.Write(System.Single)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: Write(Single)\n  fullName: System.IO.TextWriter.Write(System.Single)\n  spec.csharp:\n  - uid: System.IO.TextWriter.Write(System.Single)\n    name: Write\n    fullName: System.IO.TextWriter.Write\n  - name: (\n    fullName: (\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.Write(System.Single)\n    name: Write\n    fullName: System.IO.TextWriter.Write\n  - name: (\n    fullName: (\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.Write(Single)\n  commentId: M:System.IO.TextWriter.Write(System.Single)\n- uid: System.IO.TextWriter.Write(System.String,System.Object)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: Write(String, Object)\n  fullName: System.IO.TextWriter.Write(System.String, System.Object)\n  spec.csharp:\n  - uid: System.IO.TextWriter.Write(System.String,System.Object)\n    name: Write\n    fullName: System.IO.TextWriter.Write\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.Write(System.String,System.Object)\n    name: Write\n    fullName: System.IO.TextWriter.Write\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.Write(String, Object)\n  commentId: M:System.IO.TextWriter.Write(System.String,System.Object)\n- uid: System.IO.TextWriter.Write(System.String,System.Object,System.Object)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: Write(String, Object, Object)\n  fullName: System.IO.TextWriter.Write(System.String, System.Object, System.Object)\n  spec.csharp:\n  - uid: System.IO.TextWriter.Write(System.String,System.Object,System.Object)\n    name: Write\n    fullName: System.IO.TextWriter.Write\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.Write(System.String,System.Object,System.Object)\n    name: Write\n    fullName: System.IO.TextWriter.Write\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.Write(String, Object, Object)\n  commentId: M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)\n- uid: System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: Write(String, Object, Object, Object)\n  fullName: System.IO.TextWriter.Write(System.String, System.Object, System.Object, System.Object)\n  spec.csharp:\n  - uid: System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)\n    name: Write\n    fullName: System.IO.TextWriter.Write\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)\n    name: Write\n    fullName: System.IO.TextWriter.Write\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.Write(String, Object, Object, Object)\n  commentId: M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)\n- uid: System.IO.TextWriter.Write(System.String,System.Object[])\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: Write(String, Object[])\n  fullName: System.IO.TextWriter.Write(System.String, System.Object[])\n  fullname.vb: System.IO.TextWriter.Write(System.String, System.Object())\n  name.vb: Write(String, Object())\n  spec.csharp:\n  - uid: System.IO.TextWriter.Write(System.String,System.Object[])\n    name: Write\n    fullName: System.IO.TextWriter.Write\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.Write(System.String,System.Object[])\n    name: Write\n    fullName: System.IO.TextWriter.Write\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.Write(String, Object[])\n  nameWithType.vb: TextWriter.Write(String, Object())\n  commentId: M:System.IO.TextWriter.Write(System.String,System.Object[])\n- uid: System.IO.TextWriter.Write(System.UInt32)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: Write(UInt32)\n  fullName: System.IO.TextWriter.Write(System.UInt32)\n  spec.csharp:\n  - uid: System.IO.TextWriter.Write(System.UInt32)\n    name: Write\n    fullName: System.IO.TextWriter.Write\n  - name: (\n    fullName: (\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.Write(System.UInt32)\n    name: Write\n    fullName: System.IO.TextWriter.Write\n  - name: (\n    fullName: (\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.Write(UInt32)\n  commentId: M:System.IO.TextWriter.Write(System.UInt32)\n- uid: System.IO.TextWriter.Write(System.UInt64)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: Write(UInt64)\n  fullName: System.IO.TextWriter.Write(System.UInt64)\n  spec.csharp:\n  - uid: System.IO.TextWriter.Write(System.UInt64)\n    name: Write\n    fullName: System.IO.TextWriter.Write\n  - name: (\n    fullName: (\n  - uid: System.UInt64\n    name: UInt64\n    fullName: System.UInt64\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.Write(System.UInt64)\n    name: Write\n    fullName: System.IO.TextWriter.Write\n  - name: (\n    fullName: (\n  - uid: System.UInt64\n    name: UInt64\n    fullName: System.UInt64\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.Write(UInt64)\n  commentId: M:System.IO.TextWriter.Write(System.UInt64)\n- uid: System.IO.TextWriter.WriteAsync(System.Char[])\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: WriteAsync(Char[])\n  fullName: System.IO.TextWriter.WriteAsync(System.Char[])\n  fullname.vb: System.IO.TextWriter.WriteAsync(System.Char())\n  name.vb: WriteAsync(Char())\n  spec.csharp:\n  - uid: System.IO.TextWriter.WriteAsync(System.Char[])\n    name: WriteAsync\n    fullName: System.IO.TextWriter.WriteAsync\n  - name: (\n    fullName: (\n  - uid: System.Char\n    name: Char\n    fullName: System.Char\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.WriteAsync(System.Char[])\n    name: WriteAsync\n    fullName: System.IO.TextWriter.WriteAsync\n  - name: (\n    fullName: (\n  - uid: System.Char\n    name: Char\n    fullName: System.Char\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.WriteAsync(Char[])\n  nameWithType.vb: TextWriter.WriteAsync(Char())\n  commentId: M:System.IO.TextWriter.WriteAsync(System.Char[])\n- uid: System.IO.TextWriter.WriteLine\n  parent: System.IO.TextWriter\n  isExternal: false\n  name: WriteLine()\n  fullName: System.IO.TextWriter.WriteLine()\n  spec.csharp:\n  - uid: System.IO.TextWriter.WriteLine\n    name: WriteLine\n    fullName: System.IO.TextWriter.WriteLine\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.WriteLine\n    name: WriteLine\n    fullName: System.IO.TextWriter.WriteLine\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.WriteLine()\n  commentId: M:System.IO.TextWriter.WriteLine\n- uid: System.IO.TextWriter.WriteLine(System.Boolean)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: WriteLine(Boolean)\n  fullName: System.IO.TextWriter.WriteLine(System.Boolean)\n  spec.csharp:\n  - uid: System.IO.TextWriter.WriteLine(System.Boolean)\n    name: WriteLine\n    fullName: System.IO.TextWriter.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.WriteLine(System.Boolean)\n    name: WriteLine\n    fullName: System.IO.TextWriter.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.WriteLine(Boolean)\n  commentId: M:System.IO.TextWriter.WriteLine(System.Boolean)\n- uid: System.IO.TextWriter.WriteLine(System.Char)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: WriteLine(Char)\n  fullName: System.IO.TextWriter.WriteLine(System.Char)\n  spec.csharp:\n  - uid: System.IO.TextWriter.WriteLine(System.Char)\n    name: WriteLine\n    fullName: System.IO.TextWriter.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.Char\n    name: Char\n    fullName: System.Char\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.WriteLine(System.Char)\n    name: WriteLine\n    fullName: System.IO.TextWriter.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.Char\n    name: Char\n    fullName: System.Char\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.WriteLine(Char)\n  commentId: M:System.IO.TextWriter.WriteLine(System.Char)\n- uid: System.IO.TextWriter.WriteLine(System.Char[])\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: WriteLine(Char[])\n  fullName: System.IO.TextWriter.WriteLine(System.Char[])\n  fullname.vb: System.IO.TextWriter.WriteLine(System.Char())\n  name.vb: WriteLine(Char())\n  spec.csharp:\n  - uid: System.IO.TextWriter.WriteLine(System.Char[])\n    name: WriteLine\n    fullName: System.IO.TextWriter.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.Char\n    name: Char\n    fullName: System.Char\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.WriteLine(System.Char[])\n    name: WriteLine\n    fullName: System.IO.TextWriter.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.Char\n    name: Char\n    fullName: System.Char\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.WriteLine(Char[])\n  nameWithType.vb: TextWriter.WriteLine(Char())\n  commentId: M:System.IO.TextWriter.WriteLine(System.Char[])\n- uid: System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: WriteLine(Char[], Int32, Int32)\n  fullName: System.IO.TextWriter.WriteLine(System.Char[], System.Int32, System.Int32)\n  fullname.vb: System.IO.TextWriter.WriteLine(System.Char(), System.Int32, System.Int32)\n  name.vb: WriteLine(Char(), Int32, Int32)\n  spec.csharp:\n  - uid: System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)\n    name: WriteLine\n    fullName: System.IO.TextWriter.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.Char\n    name: Char\n    fullName: System.Char\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)\n    name: WriteLine\n    fullName: System.IO.TextWriter.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.Char\n    name: Char\n    fullName: System.Char\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.WriteLine(Char[], Int32, Int32)\n  nameWithType.vb: TextWriter.WriteLine(Char(), Int32, Int32)\n  commentId: M:System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)\n- uid: System.IO.TextWriter.WriteLine(System.Decimal)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: WriteLine(Decimal)\n  fullName: System.IO.TextWriter.WriteLine(System.Decimal)\n  spec.csharp:\n  - uid: System.IO.TextWriter.WriteLine(System.Decimal)\n    name: WriteLine\n    fullName: System.IO.TextWriter.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.WriteLine(System.Decimal)\n    name: WriteLine\n    fullName: System.IO.TextWriter.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.WriteLine(Decimal)\n  commentId: M:System.IO.TextWriter.WriteLine(System.Decimal)\n- uid: System.IO.TextWriter.WriteLine(System.Double)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: WriteLine(Double)\n  fullName: System.IO.TextWriter.WriteLine(System.Double)\n  spec.csharp:\n  - uid: System.IO.TextWriter.WriteLine(System.Double)\n    name: WriteLine\n    fullName: System.IO.TextWriter.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.WriteLine(System.Double)\n    name: WriteLine\n    fullName: System.IO.TextWriter.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.WriteLine(Double)\n  commentId: M:System.IO.TextWriter.WriteLine(System.Double)\n- uid: System.IO.TextWriter.WriteLine(System.Int32)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: WriteLine(Int32)\n  fullName: System.IO.TextWriter.WriteLine(System.Int32)\n  spec.csharp:\n  - uid: System.IO.TextWriter.WriteLine(System.Int32)\n    name: WriteLine\n    fullName: System.IO.TextWriter.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.WriteLine(System.Int32)\n    name: WriteLine\n    fullName: System.IO.TextWriter.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.WriteLine(Int32)\n  commentId: M:System.IO.TextWriter.WriteLine(System.Int32)\n- uid: System.IO.TextWriter.WriteLine(System.Int64)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: WriteLine(Int64)\n  fullName: System.IO.TextWriter.WriteLine(System.Int64)\n  spec.csharp:\n  - uid: System.IO.TextWriter.WriteLine(System.Int64)\n    name: WriteLine\n    fullName: System.IO.TextWriter.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.WriteLine(System.Int64)\n    name: WriteLine\n    fullName: System.IO.TextWriter.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.WriteLine(Int64)\n  commentId: M:System.IO.TextWriter.WriteLine(System.Int64)\n- uid: System.IO.TextWriter.WriteLine(System.Object)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: WriteLine(Object)\n  fullName: System.IO.TextWriter.WriteLine(System.Object)\n  spec.csharp:\n  - uid: System.IO.TextWriter.WriteLine(System.Object)\n    name: WriteLine\n    fullName: System.IO.TextWriter.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.WriteLine(System.Object)\n    name: WriteLine\n    fullName: System.IO.TextWriter.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.WriteLine(Object)\n  commentId: M:System.IO.TextWriter.WriteLine(System.Object)\n- uid: System.IO.TextWriter.WriteLine(System.Single)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: WriteLine(Single)\n  fullName: System.IO.TextWriter.WriteLine(System.Single)\n  spec.csharp:\n  - uid: System.IO.TextWriter.WriteLine(System.Single)\n    name: WriteLine\n    fullName: System.IO.TextWriter.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.WriteLine(System.Single)\n    name: WriteLine\n    fullName: System.IO.TextWriter.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.WriteLine(Single)\n  commentId: M:System.IO.TextWriter.WriteLine(System.Single)\n- uid: System.IO.TextWriter.WriteLine(System.String)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: WriteLine(String)\n  fullName: System.IO.TextWriter.WriteLine(System.String)\n  spec.csharp:\n  - uid: System.IO.TextWriter.WriteLine(System.String)\n    name: WriteLine\n    fullName: System.IO.TextWriter.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.WriteLine(System.String)\n    name: WriteLine\n    fullName: System.IO.TextWriter.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.WriteLine(String)\n  commentId: M:System.IO.TextWriter.WriteLine(System.String)\n- uid: System.IO.TextWriter.WriteLine(System.String,System.Object)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: WriteLine(String, Object)\n  fullName: System.IO.TextWriter.WriteLine(System.String, System.Object)\n  spec.csharp:\n  - uid: System.IO.TextWriter.WriteLine(System.String,System.Object)\n    name: WriteLine\n    fullName: System.IO.TextWriter.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.WriteLine(System.String,System.Object)\n    name: WriteLine\n    fullName: System.IO.TextWriter.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.WriteLine(String, Object)\n  commentId: M:System.IO.TextWriter.WriteLine(System.String,System.Object)\n- uid: System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: WriteLine(String, Object, Object)\n  fullName: System.IO.TextWriter.WriteLine(System.String, System.Object, System.Object)\n  spec.csharp:\n  - uid: System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)\n    name: WriteLine\n    fullName: System.IO.TextWriter.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)\n    name: WriteLine\n    fullName: System.IO.TextWriter.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.WriteLine(String, Object, Object)\n  commentId: M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)\n- uid: System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: WriteLine(String, Object, Object, Object)\n  fullName: System.IO.TextWriter.WriteLine(System.String, System.Object, System.Object, System.Object)\n  spec.csharp:\n  - uid: System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)\n    name: WriteLine\n    fullName: System.IO.TextWriter.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)\n    name: WriteLine\n    fullName: System.IO.TextWriter.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.WriteLine(String, Object, Object, Object)\n  commentId: M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)\n- uid: System.IO.TextWriter.WriteLine(System.String,System.Object[])\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: WriteLine(String, Object[])\n  fullName: System.IO.TextWriter.WriteLine(System.String, System.Object[])\n  fullname.vb: System.IO.TextWriter.WriteLine(System.String, System.Object())\n  name.vb: WriteLine(String, Object())\n  spec.csharp:\n  - uid: System.IO.TextWriter.WriteLine(System.String,System.Object[])\n    name: WriteLine\n    fullName: System.IO.TextWriter.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.WriteLine(System.String,System.Object[])\n    name: WriteLine\n    fullName: System.IO.TextWriter.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.WriteLine(String, Object[])\n  nameWithType.vb: TextWriter.WriteLine(String, Object())\n  commentId: M:System.IO.TextWriter.WriteLine(System.String,System.Object[])\n- uid: System.IO.TextWriter.WriteLine(System.UInt32)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: WriteLine(UInt32)\n  fullName: System.IO.TextWriter.WriteLine(System.UInt32)\n  spec.csharp:\n  - uid: System.IO.TextWriter.WriteLine(System.UInt32)\n    name: WriteLine\n    fullName: System.IO.TextWriter.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.WriteLine(System.UInt32)\n    name: WriteLine\n    fullName: System.IO.TextWriter.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.WriteLine(UInt32)\n  commentId: M:System.IO.TextWriter.WriteLine(System.UInt32)\n- uid: System.IO.TextWriter.WriteLine(System.UInt64)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: WriteLine(UInt64)\n  fullName: System.IO.TextWriter.WriteLine(System.UInt64)\n  spec.csharp:\n  - uid: System.IO.TextWriter.WriteLine(System.UInt64)\n    name: WriteLine\n    fullName: System.IO.TextWriter.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.UInt64\n    name: UInt64\n    fullName: System.UInt64\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.WriteLine(System.UInt64)\n    name: WriteLine\n    fullName: System.IO.TextWriter.WriteLine\n  - name: (\n    fullName: (\n  - uid: System.UInt64\n    name: UInt64\n    fullName: System.UInt64\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.WriteLine(UInt64)\n  commentId: M:System.IO.TextWriter.WriteLine(System.UInt64)\n- uid: System.IO.TextWriter.WriteLineAsync(System.Char[])\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: WriteLineAsync(Char[])\n  fullName: System.IO.TextWriter.WriteLineAsync(System.Char[])\n  fullname.vb: System.IO.TextWriter.WriteLineAsync(System.Char())\n  name.vb: WriteLineAsync(Char())\n  spec.csharp:\n  - uid: System.IO.TextWriter.WriteLineAsync(System.Char[])\n    name: WriteLineAsync\n    fullName: System.IO.TextWriter.WriteLineAsync\n  - name: (\n    fullName: (\n  - uid: System.Char\n    name: Char\n    fullName: System.Char\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.WriteLineAsync(System.Char[])\n    name: WriteLineAsync\n    fullName: System.IO.TextWriter.WriteLineAsync\n  - name: (\n    fullName: (\n  - uid: System.Char\n    name: Char\n    fullName: System.Char\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.WriteLineAsync(Char[])\n  nameWithType.vb: TextWriter.WriteLineAsync(Char())\n  commentId: M:System.IO.TextWriter.WriteLineAsync(System.Char[])\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.IO.StreamWriter\n  parent: System.IO\n  isExternal: false\n  name: StreamWriter\n  fullName: System.IO.StreamWriter\n  nameWithType: StreamWriter\n  commentId: T:System.IO.StreamWriter\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  fullName: System.IO.Stream\n  nameWithType: Stream\n  commentId: T:System.IO.Stream\n- uid: System.Text.Encoding\n  parent: System.Text\n  isExternal: false\n  name: Encoding\n  fullName: System.Text.Encoding\n  nameWithType: Encoding\n  commentId: T:System.Text.Encoding\n- uid: System.Text\n  isExternal: false\n  name: System.Text\n  fullName: System.Text\n  nameWithType: System.Text\n  commentId: N:System.Text\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.IO.TextWriter.Encoding\n  parent: System.IO.TextWriter\n  isExternal: false\n  name: Encoding\n  fullName: System.IO.TextWriter.Encoding\n  nameWithType: TextWriter.Encoding\n  commentId: P:System.IO.TextWriter.Encoding\n- uid: System.IO.TextWriter.Dispose(System.Boolean)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: Dispose(Boolean)\n  fullName: System.IO.TextWriter.Dispose(System.Boolean)\n  spec.csharp:\n  - uid: System.IO.TextWriter.Dispose(System.Boolean)\n    name: Dispose\n    fullName: System.IO.TextWriter.Dispose\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.Dispose(System.Boolean)\n    name: Dispose\n    fullName: System.IO.TextWriter.Dispose\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.Dispose(Boolean)\n  commentId: M:System.IO.TextWriter.Dispose(System.Boolean)\n- uid: System.IO.TextWriter.Flush\n  parent: System.IO.TextWriter\n  isExternal: false\n  name: Flush()\n  fullName: System.IO.TextWriter.Flush()\n  spec.csharp:\n  - uid: System.IO.TextWriter.Flush\n    name: Flush\n    fullName: System.IO.TextWriter.Flush\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.Flush\n    name: Flush\n    fullName: System.IO.TextWriter.Flush\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.Flush()\n  commentId: M:System.IO.TextWriter.Flush\n- uid: System.IO.TextWriter.FlushAsync\n  parent: System.IO.TextWriter\n  isExternal: false\n  name: FlushAsync()\n  fullName: System.IO.TextWriter.FlushAsync()\n  spec.csharp:\n  - uid: System.IO.TextWriter.FlushAsync\n    name: FlushAsync\n    fullName: System.IO.TextWriter.FlushAsync\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.FlushAsync\n    name: FlushAsync\n    fullName: System.IO.TextWriter.FlushAsync\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.FlushAsync()\n  commentId: M:System.IO.TextWriter.FlushAsync\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  fullName: System.Threading.Tasks.Task\n  nameWithType: Task\n  commentId: T:System.Threading.Tasks.Task\n- uid: System.Threading.Tasks\n  isExternal: false\n  name: System.Threading.Tasks\n  fullName: System.Threading.Tasks\n  nameWithType: System.Threading.Tasks\n  commentId: N:System.Threading.Tasks\n- uid: System.IO.TextWriter.Write(System.Char)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: Write(Char)\n  fullName: System.IO.TextWriter.Write(System.Char)\n  spec.csharp:\n  - uid: System.IO.TextWriter.Write(System.Char)\n    name: Write\n    fullName: System.IO.TextWriter.Write\n  - name: (\n    fullName: (\n  - uid: System.Char\n    name: Char\n    fullName: System.Char\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.Write(System.Char)\n    name: Write\n    fullName: System.IO.TextWriter.Write\n  - name: (\n    fullName: (\n  - uid: System.Char\n    name: Char\n    fullName: System.Char\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.Write(Char)\n  commentId: M:System.IO.TextWriter.Write(System.Char)\n- uid: System.Char\n  parent: System\n  isExternal: false\n  name: Char\n  fullName: System.Char\n  nameWithType: Char\n  commentId: T:System.Char\n- uid: System.IO.TextWriter.Write(System.Char[])\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: Write(Char[])\n  fullName: System.IO.TextWriter.Write(System.Char[])\n  fullname.vb: System.IO.TextWriter.Write(System.Char())\n  name.vb: Write(Char())\n  spec.csharp:\n  - uid: System.IO.TextWriter.Write(System.Char[])\n    name: Write\n    fullName: System.IO.TextWriter.Write\n  - name: (\n    fullName: (\n  - uid: System.Char\n    name: Char\n    fullName: System.Char\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.Write(System.Char[])\n    name: Write\n    fullName: System.IO.TextWriter.Write\n  - name: (\n    fullName: (\n  - uid: System.Char\n    name: Char\n    fullName: System.Char\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.Write(Char[])\n  nameWithType.vb: TextWriter.Write(Char())\n  commentId: M:System.IO.TextWriter.Write(System.Char[])\n- uid: System.Char[]\n  name: Char[]\n  fullName: System.Char[]\n  fullname.vb: System.Char()\n  name.vb: Char()\n  spec.csharp:\n  - uid: System.Char\n    name: Char\n    fullName: System.Char\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Char\n    name: Char\n    fullName: System.Char\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: Char[]\n  nameWithType.vb: Char()\n- uid: System.IO.TextWriter.Write(System.Char[],System.Int32,System.Int32)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: Write(Char[], Int32, Int32)\n  fullName: System.IO.TextWriter.Write(System.Char[], System.Int32, System.Int32)\n  fullname.vb: System.IO.TextWriter.Write(System.Char(), System.Int32, System.Int32)\n  name.vb: Write(Char(), Int32, Int32)\n  spec.csharp:\n  - uid: System.IO.TextWriter.Write(System.Char[],System.Int32,System.Int32)\n    name: Write\n    fullName: System.IO.TextWriter.Write\n  - name: (\n    fullName: (\n  - uid: System.Char\n    name: Char\n    fullName: System.Char\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.Write(System.Char[],System.Int32,System.Int32)\n    name: Write\n    fullName: System.IO.TextWriter.Write\n  - name: (\n    fullName: (\n  - uid: System.Char\n    name: Char\n    fullName: System.Char\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.Write(Char[], Int32, Int32)\n  nameWithType.vb: TextWriter.Write(Char(), Int32, Int32)\n  commentId: M:System.IO.TextWriter.Write(System.Char[],System.Int32,System.Int32)\n- uid: System.IO.TextWriter.Write(System.String)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: Write(String)\n  fullName: System.IO.TextWriter.Write(System.String)\n  spec.csharp:\n  - uid: System.IO.TextWriter.Write(System.String)\n    name: Write\n    fullName: System.IO.TextWriter.Write\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.Write(System.String)\n    name: Write\n    fullName: System.IO.TextWriter.Write\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.Write(String)\n  commentId: M:System.IO.TextWriter.Write(System.String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.IO.TextWriter.WriteAsync(System.Char)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: WriteAsync(Char)\n  fullName: System.IO.TextWriter.WriteAsync(System.Char)\n  spec.csharp:\n  - uid: System.IO.TextWriter.WriteAsync(System.Char)\n    name: WriteAsync\n    fullName: System.IO.TextWriter.WriteAsync\n  - name: (\n    fullName: (\n  - uid: System.Char\n    name: Char\n    fullName: System.Char\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.WriteAsync(System.Char)\n    name: WriteAsync\n    fullName: System.IO.TextWriter.WriteAsync\n  - name: (\n    fullName: (\n  - uid: System.Char\n    name: Char\n    fullName: System.Char\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.WriteAsync(Char)\n  commentId: M:System.IO.TextWriter.WriteAsync(System.Char)\n- uid: System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: WriteAsync(Char[], Int32, Int32)\n  fullName: System.IO.TextWriter.WriteAsync(System.Char[], System.Int32, System.Int32)\n  fullname.vb: System.IO.TextWriter.WriteAsync(System.Char(), System.Int32, System.Int32)\n  name.vb: WriteAsync(Char(), Int32, Int32)\n  spec.csharp:\n  - uid: System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)\n    name: WriteAsync\n    fullName: System.IO.TextWriter.WriteAsync\n  - name: (\n    fullName: (\n  - uid: System.Char\n    name: Char\n    fullName: System.Char\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)\n    name: WriteAsync\n    fullName: System.IO.TextWriter.WriteAsync\n  - name: (\n    fullName: (\n  - uid: System.Char\n    name: Char\n    fullName: System.Char\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.WriteAsync(Char[], Int32, Int32)\n  nameWithType.vb: TextWriter.WriteAsync(Char(), Int32, Int32)\n  commentId: M:System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)\n- uid: System.IO.TextWriter.WriteAsync(System.String)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: WriteAsync(String)\n  fullName: System.IO.TextWriter.WriteAsync(System.String)\n  spec.csharp:\n  - uid: System.IO.TextWriter.WriteAsync(System.String)\n    name: WriteAsync\n    fullName: System.IO.TextWriter.WriteAsync\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.WriteAsync(System.String)\n    name: WriteAsync\n    fullName: System.IO.TextWriter.WriteAsync\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.WriteAsync(String)\n  commentId: M:System.IO.TextWriter.WriteAsync(System.String)\n- uid: System.IO.TextWriter.WriteLineAsync\n  parent: System.IO.TextWriter\n  isExternal: false\n  name: WriteLineAsync()\n  fullName: System.IO.TextWriter.WriteLineAsync()\n  spec.csharp:\n  - uid: System.IO.TextWriter.WriteLineAsync\n    name: WriteLineAsync\n    fullName: System.IO.TextWriter.WriteLineAsync\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.WriteLineAsync\n    name: WriteLineAsync\n    fullName: System.IO.TextWriter.WriteLineAsync\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.WriteLineAsync()\n  commentId: M:System.IO.TextWriter.WriteLineAsync\n- uid: System.IO.TextWriter.WriteLineAsync(System.Char)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: WriteLineAsync(Char)\n  fullName: System.IO.TextWriter.WriteLineAsync(System.Char)\n  spec.csharp:\n  - uid: System.IO.TextWriter.WriteLineAsync(System.Char)\n    name: WriteLineAsync\n    fullName: System.IO.TextWriter.WriteLineAsync\n  - name: (\n    fullName: (\n  - uid: System.Char\n    name: Char\n    fullName: System.Char\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.WriteLineAsync(System.Char)\n    name: WriteLineAsync\n    fullName: System.IO.TextWriter.WriteLineAsync\n  - name: (\n    fullName: (\n  - uid: System.Char\n    name: Char\n    fullName: System.Char\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.WriteLineAsync(Char)\n  commentId: M:System.IO.TextWriter.WriteLineAsync(System.Char)\n- uid: System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: WriteLineAsync(Char[], Int32, Int32)\n  fullName: System.IO.TextWriter.WriteLineAsync(System.Char[], System.Int32, System.Int32)\n  fullname.vb: System.IO.TextWriter.WriteLineAsync(System.Char(), System.Int32, System.Int32)\n  name.vb: WriteLineAsync(Char(), Int32, Int32)\n  spec.csharp:\n  - uid: System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)\n    name: WriteLineAsync\n    fullName: System.IO.TextWriter.WriteLineAsync\n  - name: (\n    fullName: (\n  - uid: System.Char\n    name: Char\n    fullName: System.Char\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)\n    name: WriteLineAsync\n    fullName: System.IO.TextWriter.WriteLineAsync\n  - name: (\n    fullName: (\n  - uid: System.Char\n    name: Char\n    fullName: System.Char\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.WriteLineAsync(Char[], Int32, Int32)\n  nameWithType.vb: TextWriter.WriteLineAsync(Char(), Int32, Int32)\n  commentId: M:System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)\n- uid: System.IO.TextWriter.WriteLineAsync(System.String)\n  parent: System.IO.TextWriter\n  isExternal: true\n  name: WriteLineAsync(String)\n  fullName: System.IO.TextWriter.WriteLineAsync(System.String)\n  spec.csharp:\n  - uid: System.IO.TextWriter.WriteLineAsync(System.String)\n    name: WriteLineAsync\n    fullName: System.IO.TextWriter.WriteLineAsync\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.TextWriter.WriteLineAsync(System.String)\n    name: WriteLineAsync\n    fullName: System.IO.TextWriter.WriteLineAsync\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TextWriter.WriteLineAsync(String)\n  commentId: M:System.IO.TextWriter.WriteLineAsync(System.String)\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  commentId: T:System.ArgumentOutOfRangeException\n- uid: System.Text.EncoderFallbackException\n  isExternal: false\n  name: EncoderFallbackException\n  fullName: System.Text.EncoderFallbackException\n  nameWithType: EncoderFallbackException\n  commentId: T:System.Text.EncoderFallbackException\n- uid: System.ObjectDisposedException\n  isExternal: false\n  name: ObjectDisposedException\n  fullName: System.ObjectDisposedException\n  nameWithType: ObjectDisposedException\n  commentId: T:System.ObjectDisposedException\n- uid: System.IO.IOException\n  parent: System.IO\n  isExternal: false\n  name: IOException\n  fullName: System.IO.IOException\n  nameWithType: IOException\n  commentId: T:System.IO.IOException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  fullName: System.NotSupportedException\n  nameWithType: NotSupportedException\n  commentId: T:System.NotSupportedException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  fullName: System.InvalidOperationException\n  nameWithType: InvalidOperationException\n  commentId: T:System.InvalidOperationException\n"}