{"nodes":[{"pos":[643,666],"content":"BadImageFormatException","needQuote":true,"nodes":[{"content":"BadImageFormatException","pos":[0,23]}]},{"pos":[2457,2482],"content":"BadImageFormatException()","needQuote":true,"nodes":[{"content":"BadImageFormatException()","pos":[0,25]}]},{"pos":[3472,3503],"content":"BadImageFormatException(String)","needQuote":true,"nodes":[{"content":"BadImageFormatException(String)","pos":[0,31]}]},{"content":"\\n&lt;p&gt;The message that describes the error.","pos":[4295,4337],"source":"\\n<p>The message that describes the error."},{"content":"&lt;/p&gt;\\n","pos":[4338,4344],"source":" </p>\\n"},{"pos":[4758,4800],"content":"BadImageFormatException(String, Exception)","needQuote":true,"nodes":[{"content":"BadImageFormatException(String, Exception)","pos":[0,42]}]},{"content":"\\n&lt;p&gt;The error message that explains the reason for the exception.","pos":[5722,5788],"source":"\\n<p>The error message that explains the reason for the exception."},{"content":"&lt;/p&gt;\\n","pos":[5789,5795],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The exception that is the cause of the current exception.","pos":[5862,5924],"source":"\\n<p>The exception that is the cause of the current exception."},{"content":"If the &lt;em&gt;inner&lt;/em&gt; parameter is not a null reference, the current exception is raised in a &lt;strong&gt;catch&lt;/strong&gt; block that handles the inner exception.","pos":[5925,6081],"source":" If the <em>inner</em> parameter is not a null reference, the current exception is raised in a <strong>catch</strong> block that handles the inner exception."},{"content":"&lt;/p&gt;\\n","pos":[6082,6088],"source":" </p>\\n"},{"pos":[6576,6615],"content":"BadImageFormatException(String, String)","needQuote":true,"nodes":[{"content":"BadImageFormatException(String, String)","pos":[0,39]}]},{"content":"\\n&lt;p&gt;A message that describes the error.","pos":[7473,7513],"source":"\\n<p>A message that describes the error."},{"content":"&lt;/p&gt;\\n","pos":[7514,7520],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The full name of the file with the invalid image.","pos":[7587,7641],"source":"\\n<p>The full name of the file with the invalid image."},{"content":"&lt;/p&gt;\\n","pos":[7642,7648],"source":" </p>\\n"},{"pos":[8112,8162],"content":"BadImageFormatException(String, String, Exception)","needQuote":true,"nodes":[{"content":"BadImageFormatException(String, String, Exception)","pos":[0,50]}]},{"content":"\\n&lt;p&gt;The error message that explains the reason for the exception.","pos":[9136,9202],"source":"\\n<p>The error message that explains the reason for the exception."},{"content":"&lt;/p&gt;\\n","pos":[9203,9209],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The full name of the file with the invalid image.","pos":[9276,9330],"source":"\\n<p>The full name of the file with the invalid image."},{"content":"&lt;/p&gt;\\n","pos":[9331,9337],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The exception that is the cause of the current exception.","pos":[9404,9466],"source":"\\n<p>The exception that is the cause of the current exception."},{"content":"If the &lt;em&gt;inner&lt;/em&gt; parameter is not &lt;strong&gt;null&lt;/strong&gt;, the current exception is raised in a &lt;strong&gt;catch&lt;/strong&gt; block that handles the inner exception.","pos":[9467,9628],"source":" If the <em>inner</em> parameter is not <strong>null</strong>, the current exception is raised in a <strong>catch</strong> block that handles the inner exception."},{"content":"&lt;/p&gt;\\n","pos":[9629,9635],"source":" </p>\\n"},{"pos":[9979,9987],"content":"FileName","needQuote":true,"nodes":[{"content":"FileName","pos":[0,8]}]},{"content":"\\n&lt;p&gt;The name of the file with the invalid image, or a null reference if no file name was passed to the constructor for the current instance.&lt;/p&gt;\\n","pos":[10632,10779],"source":"\\n<p>The name of the file with the invalid image, or a null reference if no file name was passed to the constructor for the current instance.</p>\\n"},{"pos":[11099,11106],"content":"Message","needQuote":true,"nodes":[{"content":"Message","pos":[0,7]}]},{"content":"\\n&lt;p&gt;A string containing the error message and the name of the file that caused this exception.&lt;/p&gt;\\n","pos":[11788,11889],"source":"\\n<p>A string containing the error message and the name of the file that caused this exception.</p>\\n"},{"pos":[12277,12287],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"content":"\\n&lt;p&gt;A string containing the fully qualified name of this exception and possibly the error message, the name of the inner exception, and the stack trace.&lt;/p&gt;\\n","pos":[12999,13158],"source":"\\n<p>A string containing the fully qualified name of this exception and possibly the error message, the name of the inner exception, and the stack trace.</p>\\n"},{"pos":[13390,13396],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[13527,13533],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13681,13690],"content":"Exception","needQuote":true,"nodes":[{"content":"Exception","pos":[0,9]}]},{"pos":[13862,13866],"content":"Data","needQuote":true,"nodes":[{"content":"Data","pos":[0,4]}]},{"pos":[14057,14065],"content":"HelpLink","needQuote":true,"nodes":[{"content":"HelpLink","pos":[0,8]}]},{"pos":[14267,14274],"content":"HResult","needQuote":true,"nodes":[{"content":"HResult","pos":[0,7]}]},{"pos":[14480,14494],"content":"InnerException","needQuote":true,"nodes":[{"content":"InnerException","pos":[0,14]}]},{"pos":[14713,14719],"content":"Source","needQuote":true,"nodes":[{"content":"Source","pos":[0,6]}]},{"pos":[14918,14928],"content":"StackTrace","needQuote":true,"nodes":[{"content":"StackTrace","pos":[0,10]}]},{"pos":[15145,15163],"content":"GetBaseException()","needQuote":true,"nodes":[{"content":"GetBaseException()","pos":[0,18]}]},{"pos":[15280,15296],"content":"GetBaseException","needQuote":true,"nodes":[{"content":"GetBaseException","pos":[0,16]}]},{"pos":[15355,15356],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15383,15384],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15465,15481],"content":"GetBaseException","needQuote":true,"nodes":[{"content":"GetBaseException","pos":[0,16]}]},{"pos":[15540,15541],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15568,15569],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15774,15788],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[15907,15913],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[15980,15981],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16031,16037],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16097,16098],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16181,16187],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[16254,16255],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16305,16311],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16371,16372],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16586,16608],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[16756,16762],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[16829,16830],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16880,16886],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[16947,16948]},{"pos":[17003,17009],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17069,17070],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17167,17173],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[17240,17241],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17291,17297],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[17358,17359]},{"pos":[17414,17420],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17480,17481],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17726,17757],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[17923,17938],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[18014,18015],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18065,18071],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[18132,18133]},{"pos":[18188,18194],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18254,18255],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18361,18376],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[18452,18453],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18503,18509],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[18570,18571]},{"pos":[18626,18632],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18692,18693],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18923,18936],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[19037,19048],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[19120,19121],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19148,19149],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19222,19233],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[19305,19306],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19333,19334],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19509,19518],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[19611,19618],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[19686,19687],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19714,19715],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19784,19791],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[19859,19860],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19887,19888],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20063,20080],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[20189,20204],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[20280,20281],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20308,20309],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20386,20401],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[20477,20478],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20505,20506],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20675,20681],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[20847,20854],"content":"Message","needQuote":true,"nodes":[{"content":"Message","pos":[0,7]}]},{"pos":[21054,21064],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[21165,21173],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[21224,21225],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21252,21253],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21326,21334],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[21385,21386],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21413,21414],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]}],"content":"items:\n- uid: System.BadImageFormatException\n  commentId: T:System.BadImageFormatException\n  id: BadImageFormatException\n  parent: System\n  children:\n  - System.BadImageFormatException.#ctor\n  - System.BadImageFormatException.#ctor(System.String)\n  - System.BadImageFormatException.#ctor(System.String,System.Exception)\n  - System.BadImageFormatException.#ctor(System.String,System.String)\n  - System.BadImageFormatException.#ctor(System.String,System.String,System.Exception)\n  - System.BadImageFormatException.FileName\n  - System.BadImageFormatException.Message\n  - System.BadImageFormatException.ToString\n  langs:\n  - csharp\n  - vb\n  name: BadImageFormatException\n  fullName: System.BadImageFormatException\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/BadImageFormatException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: BadImageFormatException\n    path: src/mscorlib/src/System/BadImageFormatException.cs\n    startLine: 22\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>The exception that is thrown when the file image of a dynamic link library (DLL) or an executable program is invalid. </p>\\n\"\n  syntax:\n    content: >-\n      [ComVisible(true)]\n\n      [Serializable]\n\n      public class BadImageFormatException : SystemException, ISerializable, _Exception\n    content.vb: >-\n      <ComVisible(True)>\n\n      <Serializable>\n\n      Public Class BadImageFormatException\n          Inherits SystemException\n          Implements ISerializable, _Exception\n  seealso:\n  - type: System.Exception\n    commentId: T:System.Exception\n  inheritance:\n  - System.Object\n  - System.Exception\n  inheritedMembers:\n  - System.Exception.Data\n  - System.Exception.HelpLink\n  - System.Exception.HResult\n  - System.Exception.InnerException\n  - System.Exception.Source\n  - System.Exception.StackTrace\n  - System.Exception.GetBaseException\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: BadImageFormatException\n- uid: System.BadImageFormatException.#ctor\n  commentId: M:System.BadImageFormatException.#ctor\n  id: '#ctor'\n  parent: System.BadImageFormatException\n  langs:\n  - csharp\n  - vb\n  name: BadImageFormatException()\n  fullName: System.BadImageFormatException.BadImageFormatException()\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/BadImageFormatException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/BadImageFormatException.cs\n    startLine: 29\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.BadImageFormatException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public BadImageFormatException()\n    content.vb: Public Sub New\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: BadImageFormatException.BadImageFormatException()\n- uid: System.BadImageFormatException.#ctor(System.String)\n  commentId: M:System.BadImageFormatException.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.BadImageFormatException\n  langs:\n  - csharp\n  - vb\n  name: BadImageFormatException(String)\n  fullName: System.BadImageFormatException.BadImageFormatException(System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/BadImageFormatException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/BadImageFormatException.cs\n    startLine: 34\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.BadImageFormatException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with a specified error message.</p>\\n\"\n  syntax:\n    content: public BadImageFormatException(string message)\n    content.vb: Public Sub New(message As String)\n    parameters:\n    - id: message\n      type: System.String\n      description: \"\\n<p>The message that describes the error. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: BadImageFormatException.BadImageFormatException(String)\n- uid: System.BadImageFormatException.#ctor(System.String,System.Exception)\n  commentId: M:System.BadImageFormatException.#ctor(System.String,System.Exception)\n  id: '#ctor(System.String,System.Exception)'\n  parent: System.BadImageFormatException\n  langs:\n  - csharp\n  - vb\n  name: BadImageFormatException(String, Exception)\n  fullName: System.BadImageFormatException.BadImageFormatException(System.String, System.Exception)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/BadImageFormatException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/BadImageFormatException.cs\n    startLine: 39\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.BadImageFormatException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception.</p>\\n\"\n  syntax:\n    content: public BadImageFormatException(string message, Exception inner)\n    content.vb: Public Sub New(message As String, inner As Exception)\n    parameters:\n    - id: message\n      type: System.String\n      description: \"\\n<p>The error message that explains the reason for the exception. </p>\\n\"\n    - id: inner\n      type: System.Exception\n      description: \"\\n<p>The exception that is the cause of the current exception. If the <em>inner</em> parameter is not a null reference, the current exception is raised in a <strong>catch</strong> block that handles the inner exception. </p>\\n\"\n  seealso:\n  - type: System.Exception\n    commentId: T:System.Exception\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: BadImageFormatException.BadImageFormatException(String, Exception)\n- uid: System.BadImageFormatException.#ctor(System.String,System.String)\n  commentId: M:System.BadImageFormatException.#ctor(System.String,System.String)\n  id: '#ctor(System.String,System.String)'\n  parent: System.BadImageFormatException\n  langs:\n  - csharp\n  - vb\n  name: BadImageFormatException(String, String)\n  fullName: System.BadImageFormatException.BadImageFormatException(System.String, System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/BadImageFormatException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/BadImageFormatException.cs\n    startLine: 44\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.BadImageFormatException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with a specified error message and file name.</p>\\n\"\n  syntax:\n    content: public BadImageFormatException(string message, string fileName)\n    content.vb: Public Sub New(message As String, fileName As String)\n    parameters:\n    - id: message\n      type: System.String\n      description: \"\\n<p>A message that describes the error. </p>\\n\"\n    - id: fileName\n      type: System.String\n      description: \"\\n<p>The full name of the file with the invalid image. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: BadImageFormatException.BadImageFormatException(String, String)\n- uid: System.BadImageFormatException.#ctor(System.String,System.String,System.Exception)\n  commentId: M:System.BadImageFormatException.#ctor(System.String,System.String,System.Exception)\n  id: '#ctor(System.String,System.String,System.Exception)'\n  parent: System.BadImageFormatException\n  langs:\n  - csharp\n  - vb\n  name: BadImageFormatException(String, String, Exception)\n  fullName: System.BadImageFormatException.BadImageFormatException(System.String, System.String, System.Exception)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/BadImageFormatException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/BadImageFormatException.cs\n    startLine: 50\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.BadImageFormatException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception.</p>\\n\"\n  syntax:\n    content: public BadImageFormatException(string message, string fileName, Exception inner)\n    content.vb: Public Sub New(message As String, fileName As String, inner As Exception)\n    parameters:\n    - id: message\n      type: System.String\n      description: \"\\n<p>The error message that explains the reason for the exception. </p>\\n\"\n    - id: fileName\n      type: System.String\n      description: \"\\n<p>The full name of the file with the invalid image. </p>\\n\"\n    - id: inner\n      type: System.Exception\n      description: \"\\n<p>The exception that is the cause of the current exception. If the <em>inner</em> parameter is not <strong>null</strong>, the current exception is raised in a <strong>catch</strong> block that handles the inner exception. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: BadImageFormatException.BadImageFormatException(String, String, Exception)\n- uid: System.BadImageFormatException.FileName\n  commentId: P:System.BadImageFormatException.FileName\n  id: FileName\n  parent: System.BadImageFormatException\n  langs:\n  - csharp\n  - vb\n  name: FileName\n  fullName: System.BadImageFormatException.FileName\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/BadImageFormatException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: FileName\n    path: src/mscorlib/src/System/BadImageFormatException.cs\n    startLine: 76\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Gets the name of the file that causes this exception.</p>\\n\"\n  syntax:\n    content: public string FileName { get; }\n    content.vb: Public ReadOnly Property FileName As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The name of the file with the invalid image, or a null reference if no file name was passed to the constructor for the current instance.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: BadImageFormatException.FileName\n- uid: System.BadImageFormatException.Message\n  commentId: P:System.BadImageFormatException.Message\n  id: Message\n  parent: System.BadImageFormatException\n  langs:\n  - csharp\n  - vb\n  name: Message\n  fullName: System.BadImageFormatException.Message\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/BadImageFormatException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Message\n    path: src/mscorlib/src/System/BadImageFormatException.cs\n    startLine: 56\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Gets the error message and the name of the file that caused this exception.</p>\\n\"\n  syntax:\n    content: public override string Message { get; }\n    content.vb: Public Overrides ReadOnly Property Message As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>A string containing the error message and the name of the file that caused this exception.</p>\\n\"\n  overridden: System.Exception.Message\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: BadImageFormatException.Message\n- uid: System.BadImageFormatException.ToString\n  commentId: M:System.BadImageFormatException.ToString\n  id: ToString\n  parent: System.BadImageFormatException\n  langs:\n  - csharp\n  - vb\n  name: ToString()\n  fullName: System.BadImageFormatException.ToString()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/BadImageFormatException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ToString\n    path: src/mscorlib/src/System/BadImageFormatException.cs\n    startLine: 80\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Returns the fully qualified name of this exception and possibly the error message, the name of the inner exception, and the stack trace.</p>\\n\"\n  syntax:\n    content: public override string ToString()\n    content.vb: Public Overrides Function ToString As String\n    return:\n      type: System.String\n      description: \"\\n<p>A string containing the fully qualified name of this exception and possibly the error message, the name of the inner exception, and the stack trace.</p>\\n\"\n  overridden: System.Exception.ToString\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: BadImageFormatException.ToString()\nreferences:\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  fullName: System.Exception\n  nameWithType: Exception\n  commentId: T:System.Exception\n- uid: System.Exception.Data\n  parent: System.Exception\n  isExternal: false\n  name: Data\n  fullName: System.Exception.Data\n  nameWithType: Exception.Data\n  commentId: P:System.Exception.Data\n- uid: System.Exception.HelpLink\n  parent: System.Exception\n  isExternal: false\n  name: HelpLink\n  fullName: System.Exception.HelpLink\n  nameWithType: Exception.HelpLink\n  commentId: P:System.Exception.HelpLink\n- uid: System.Exception.HResult\n  parent: System.Exception\n  isExternal: false\n  name: HResult\n  fullName: System.Exception.HResult\n  nameWithType: Exception.HResult\n  commentId: P:System.Exception.HResult\n- uid: System.Exception.InnerException\n  parent: System.Exception\n  isExternal: false\n  name: InnerException\n  fullName: System.Exception.InnerException\n  nameWithType: Exception.InnerException\n  commentId: P:System.Exception.InnerException\n- uid: System.Exception.Source\n  parent: System.Exception\n  isExternal: false\n  name: Source\n  fullName: System.Exception.Source\n  nameWithType: Exception.Source\n  commentId: P:System.Exception.Source\n- uid: System.Exception.StackTrace\n  parent: System.Exception\n  isExternal: false\n  name: StackTrace\n  fullName: System.Exception.StackTrace\n  nameWithType: Exception.StackTrace\n  commentId: P:System.Exception.StackTrace\n- uid: System.Exception.GetBaseException\n  parent: System.Exception\n  isExternal: false\n  name: GetBaseException()\n  fullName: System.Exception.GetBaseException()\n  spec.csharp:\n  - uid: System.Exception.GetBaseException\n    name: GetBaseException\n    fullName: System.Exception.GetBaseException\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Exception.GetBaseException\n    name: GetBaseException\n    fullName: System.Exception.GetBaseException\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Exception.GetBaseException()\n  commentId: M:System.Exception.GetBaseException\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.Exception.Message\n  parent: System.Exception\n  isExternal: false\n  name: Message\n  fullName: System.Exception.Message\n  nameWithType: Exception.Message\n  commentId: P:System.Exception.Message\n- uid: System.Exception.ToString\n  parent: System.Exception\n  isExternal: false\n  name: ToString()\n  fullName: System.Exception.ToString()\n  spec.csharp:\n  - uid: System.Exception.ToString\n    name: ToString\n    fullName: System.Exception.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Exception.ToString\n    name: ToString\n    fullName: System.Exception.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Exception.ToString()\n  commentId: M:System.Exception.ToString\n"}