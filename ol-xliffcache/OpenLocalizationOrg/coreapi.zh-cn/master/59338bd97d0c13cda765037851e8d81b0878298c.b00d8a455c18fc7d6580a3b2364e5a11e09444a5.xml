{"nodes":[{"pos":[1594,1612],"content":"IPGlobalProperties","needQuote":true,"nodes":[{"content":"IPGlobalProperties","pos":[0,18]}]},{"pos":[3013,3033],"content":"IPGlobalProperties()","needQuote":true,"nodes":[{"content":"IPGlobalProperties()","pos":[0,20]}]},{"pos":[4160,4173],"content":"DhcpScopeName","needQuote":true,"nodes":[{"content":"DhcpScopeName","pos":[0,13]}]},{"content":"\\n&lt;p&gt;A Win32 function call failed.","pos":[5284,5318],"source":"\\n<p>A Win32 function call failed."},{"content":"&lt;/p&gt;\\n","pos":[5319,5325],"source":" </p>\\n"},{"pos":[5890,5900],"content":"DomainName","needQuote":true,"nodes":[{"content":"DomainName","pos":[0,10]}]},{"content":"\\n&lt;p&gt;A Win32 function call failed.","pos":[7124,7158],"source":"\\n<p>A Win32 function call failed."},{"content":"&lt;/p&gt;\\n","pos":[7159,7165],"source":" </p>\\n"},{"pos":[7721,7729],"content":"HostName","needQuote":true,"nodes":[{"content":"HostName","pos":[0,8]}]},{"content":"\\n&lt;p&gt;A Win32 function call failed.","pos":[8796,8830],"source":"\\n<p>A Win32 function call failed."},{"content":"&lt;/p&gt;\\n","pos":[8831,8837],"source":" </p>\\n"},{"pos":[9400,9411],"content":"IsWinsProxy","needQuote":true,"nodes":[{"content":"IsWinsProxy","pos":[0,11]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the local computer is a WINS proxy; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[10321,10429],"source":"\\n<p>\\n<strong>true</strong> if the local computer is a WINS proxy; otherwise, <strong>false</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;A Win32 function call failed.","pos":[10606,10640],"source":"\\n<p>A Win32 function call failed."},{"content":"&lt;/p&gt;\\n","pos":[10641,10647],"source":" </p>\\n"},{"pos":[11204,11212],"content":"NodeType","needQuote":true,"nodes":[{"content":"NodeType","pos":[0,8]}]},{"content":"\\n&lt;p&gt;A Win32 function call failed.","pos":[12359,12393],"source":"\\n<p>A Win32 function call failed."},{"content":"&lt;/p&gt;\\n","pos":[12394,12400],"source":" </p>\\n"},{"pos":[12999,13024],"content":"GetActiveTcpConnections()","needQuote":true,"nodes":[{"content":"GetActiveTcpConnections()","pos":[0,25]}]},{"content":"\\n&lt;p&gt;The Win32 function &lt;strong&gt;GetTcpTable&lt;/strong&gt; failed.","pos":[14421,14481],"source":"\\n<p>The Win32 function <strong>GetTcpTable</strong> failed."},{"content":"&lt;/p&gt;\\n","pos":[14482,14488],"source":" </p>\\n"},{"pos":[15077,15100],"content":"GetActiveTcpListeners()","needQuote":true,"nodes":[{"content":"GetActiveTcpListeners()","pos":[0,23]}]},{"content":"\\n&lt;p&gt;The Win32 function &lt;strong&gt;GetTcpTable&lt;/strong&gt; failed.","pos":[16399,16459],"source":"\\n<p>The Win32 function <strong>GetTcpTable</strong> failed."},{"content":"&lt;/p&gt;\\n","pos":[16460,16466],"source":" </p>\\n"},{"pos":[17053,17076],"content":"GetActiveUdpListeners()","needQuote":true,"nodes":[{"content":"GetActiveUdpListeners()","pos":[0,23]}]},{"content":"\\n&lt;p&gt;The call to the Win32 function &lt;strong&gt;GetUdpTable&lt;/strong&gt; failed.","pos":[18345,18417],"source":"\\n<p>The call to the Win32 function <strong>GetUdpTable</strong> failed."},{"content":"&lt;/p&gt;\\n","pos":[18418,18424],"source":" </p>\\n"},{"pos":[19005,19026],"content":"GetIcmpV4Statistics()","needQuote":true,"nodes":[{"content":"GetIcmpV4Statistics()","pos":[0,21]}]},{"content":"\\n&lt;p&gt;The Win32 function &lt;strong&gt;GetIcmpStatistics&lt;/strong&gt; failed.","pos":[20274,20340],"source":"\\n<p>The Win32 function <strong>GetIcmpStatistics</strong> failed."},{"content":"&lt;/p&gt;\\n","pos":[20341,20347],"source":" </p>\\n"},{"pos":[20926,20947],"content":"GetIcmpV6Statistics()","needQuote":true,"nodes":[{"content":"GetIcmpV6Statistics()","pos":[0,21]}]},{"content":"\\n&lt;p&gt;The Win32 function &lt;strong&gt;GetIcmpStatisticsEx&lt;/strong&gt; failed.","pos":[22195,22263],"source":"\\n<p>The Win32 function <strong>GetIcmpStatisticsEx</strong> failed."},{"content":"&lt;/p&gt;\\n","pos":[22264,22270],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The local computer's operating system is not Windows XP or later.&lt;/p&gt;\\n","pos":[22391,22467],"source":"\\n<p>The local computer's operating system is not Windows XP or later.</p>\\n"},{"pos":[23052,23075],"content":"GetIPGlobalProperties()","needQuote":true,"nodes":[{"content":"GetIPGlobalProperties()","pos":[0,23]}]},{"pos":[24730,24755],"content":"GetIPv4GlobalStatistics()","needQuote":true,"nodes":[{"content":"GetIPv4GlobalStatistics()","pos":[0,25]}]},{"content":"\\n&lt;p&gt;The call to the Win32 function &lt;strong&gt;GetIpStatistics&lt;/strong&gt; failed.&lt;/p&gt;\\n","pos":[26001,26083],"source":"\\n<p>The call to the Win32 function <strong>GetIpStatistics</strong> failed.</p>\\n"},{"pos":[26678,26703],"content":"GetIPv6GlobalStatistics()","needQuote":true,"nodes":[{"content":"GetIPv6GlobalStatistics()","pos":[0,25]}]},{"content":"\\n&lt;p&gt;The call to the Win32 function &lt;strong&gt;GetIpStatistics&lt;/strong&gt; failed.&lt;/p&gt;\\n","pos":[27949,28031],"source":"\\n<p>The call to the Win32 function <strong>GetIpStatistics</strong> failed.</p>\\n"},{"content":"\\n&lt;p&gt;The local computer is not running an operating system that supports IPv6.","pos":[28152,28230],"source":"\\n<p>The local computer is not running an operating system that supports IPv6."},{"content":"&lt;/p&gt;\\n","pos":[28231,28237],"source":" </p>\\n"},{"pos":[28823,28845],"content":"GetTcpIPv4Statistics()","needQuote":true,"nodes":[{"content":"GetTcpIPv4Statistics()","pos":[0,22]}]},{"content":"\\n&lt;p&gt;The call to the Win32 function &lt;strong&gt;GetTcpStatistics&lt;/strong&gt; failed.&lt;/p&gt;\\n","pos":[30096,30179],"source":"\\n<p>The call to the Win32 function <strong>GetTcpStatistics</strong> failed.</p>\\n"},{"pos":[30762,30784],"content":"GetTcpIPv6Statistics()","needQuote":true,"nodes":[{"content":"GetTcpIPv6Statistics()","pos":[0,22]}]},{"content":"\\n&lt;p&gt;The call to the Win32 function &lt;strong&gt;GetTcpStatistics&lt;/strong&gt; failed.&lt;/p&gt;\\n","pos":[32035,32118],"source":"\\n<p>The call to the Win32 function <strong>GetTcpStatistics</strong> failed.</p>\\n"},{"content":"\\n&lt;p&gt;The local computer is not running an operating system that supports IPv6.","pos":[32239,32317],"source":"\\n<p>The local computer is not running an operating system that supports IPv6."},{"content":"&lt;/p&gt;\\n","pos":[32318,32324],"source":" </p>\\n"},{"pos":[32907,32929],"content":"GetUdpIPv4Statistics()","needQuote":true,"nodes":[{"content":"GetUdpIPv4Statistics()","pos":[0,22]}]},{"content":"\\n&lt;p&gt;The call to the Win32 function GetUdpStatistics failed.&lt;/p&gt;\\n","pos":[34173,34239],"source":"\\n<p>The call to the Win32 function GetUdpStatistics failed.</p>\\n"},{"pos":[34822,34844],"content":"GetUdpIPv6Statistics()","needQuote":true,"nodes":[{"content":"GetUdpIPv6Statistics()","pos":[0,22]}]},{"content":"\\n&lt;p&gt;The call to the Win32 function &lt;strong&gt;GetUdpStatistics&lt;/strong&gt; failed.&lt;/p&gt;\\n","pos":[36088,36171],"source":"\\n<p>The call to the Win32 function <strong>GetUdpStatistics</strong> failed.</p>\\n"},{"content":"\\n&lt;p&gt;The local computer is not running an operating system that supports IPv6.","pos":[36292,36370],"source":"\\n<p>The local computer is not running an operating system that supports IPv6."},{"content":"&lt;/p&gt;\\n","pos":[36371,36377],"source":" </p>\\n"},{"pos":[36972,36998],"content":"GetUnicastAddressesAsync()","needQuote":true,"nodes":[{"content":"GetUnicastAddressesAsync()","pos":[0,26]}]},{"content":"\\n&lt;p&gt;The call to the native &lt;strong&gt;GetAdaptersAddresses&lt;/strong&gt; function failed.&lt;/p&gt;\\n","pos":[38343,38431],"source":"\\n<p>The call to the native <strong>GetAdaptersAddresses</strong> function failed.</p>\\n"},{"content":"\\n&lt;p&gt;The call to the native &lt;strong&gt;NotifyStableUnicastIpAddressTable&lt;/strong&gt; function failed.&lt;/p&gt;\\n","pos":[38845,38946],"source":"\\n<p>The call to the native <strong>NotifyStableUnicastIpAddressTable</strong> function failed.</p>\\n"},{"pos":[39904,39933],"content":"System.Net.NetworkInformation","needQuote":true,"nodes":[{"content":"System.Net.NetworkInformation","pos":[0,29]}]},{"pos":[40133,40139],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[40299,40309],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[40404,40412],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[40481,40482],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[40509,40510],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[40580,40588],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[40657,40658],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[40685,40686],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[40869,40883],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[41002,41008],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[41075,41076],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[41126,41132],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[41192,41193],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[41276,41282],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[41349,41350],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[41400,41406],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[41466,41467],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[41681,41703],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[41851,41857],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[41924,41925],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[41975,41981],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[42042,42043]},{"pos":[42098,42104],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[42164,42165],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[42262,42268],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[42335,42336],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[42386,42392],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[42453,42454]},{"pos":[42509,42515],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[42575,42576],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[42821,42852],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[43018,43033],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[43109,43110],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[43160,43166],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[43227,43228]},{"pos":[43283,43289],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[43349,43350],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[43456,43471],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[43547,43548],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[43598,43604],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[43665,43666]},{"pos":[43721,43727],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[43787,43788],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[44018,44031],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[44132,44143],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[44215,44216],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[44243,44244],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[44317,44328],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[44400,44401],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[44428,44429],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[44604,44613],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[44706,44713],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[44781,44782],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[44809,44810],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[44879,44886],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[44954,44955],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[44982,44983],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[45158,45175],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[45284,45299],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[45375,45376],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[45403,45404],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[45481,45496],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[45572,45573],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[45600,45601],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[45746,45752],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[45883,45889],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[46035,46042],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[46245,46260],"content":"NetBiosNodeType","needQuote":true,"nodes":[{"content":"NetBiosNodeType","pos":[0,15]}]},{"pos":[46484,46510],"content":"TcpConnectionInformation[]","needQuote":true,"nodes":[{"content":"TcpConnectionInformation[]","pos":[0,26]}]},{"pos":[46779,46803],"content":"TcpConnectionInformation","needQuote":true,"nodes":[{"content":"TcpConnectionInformation","pos":[0,24]}]},{"content":"[]","pos":[46884,46886]},{"pos":[46992,47016],"content":"TcpConnectionInformation","needQuote":true,"nodes":[{"content":"TcpConnectionInformation","pos":[0,24]}]},{"pos":[47096,47098],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[47244,47256],"content":"IPEndPoint[]","needQuote":true,"nodes":[{"content":"IPEndPoint[]","pos":[0,12]}]},{"pos":[47412,47422],"content":"IPEndPoint","needQuote":true,"nodes":[{"content":"IPEndPoint","pos":[0,10]}]},{"content":"[]","pos":[47491,47493]},{"pos":[47566,47576],"content":"IPEndPoint","needQuote":true,"nodes":[{"content":"IPEndPoint","pos":[0,10]}]},{"pos":[47644,47646],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[47847,47863],"content":"IcmpV4Statistics","needQuote":true,"nodes":[{"content":"IcmpV4Statistics","pos":[0,16]}]},{"pos":[48140,48156],"content":"IcmpV6Statistics","needQuote":true,"nodes":[{"content":"IcmpV6Statistics","pos":[0,16]}]},{"pos":[48435,48453],"content":"IPGlobalProperties","needQuote":true,"nodes":[{"content":"IPGlobalProperties","pos":[0,18]}]},{"pos":[48738,48756],"content":"IPGlobalStatistics","needQuote":true,"nodes":[{"content":"IPGlobalStatistics","pos":[0,18]}]},{"pos":[49036,49049],"content":"TcpStatistics","needQuote":true,"nodes":[{"content":"TcpStatistics","pos":[0,13]}]},{"pos":[49314,49327],"content":"UdpStatistics","needQuote":true,"nodes":[{"content":"UdpStatistics","pos":[0,13]}]},{"pos":[49662,49705],"content":"Task<UnicastIPAddressInformationCollection>","needQuote":true,"nodes":[{"content":"Task&lt;UnicastIPAddressInformationCollection&gt;","pos":[0,43],"source":"Task<UnicastIPAddressInformationCollection>"}]},{"pos":[50052,50056],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[50130,50131],"content":"<","needQuote":true,"nodes":[]},{"pos":[50235,50272],"content":"UnicastIPAddressInformationCollection","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformationCollection","pos":[0,37]}]},{"pos":[50447,50451],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"content":"(Of","pos":[50526,50529]},{"pos":[50640,50677],"content":"UnicastIPAddressInformationCollection","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformationCollection","pos":[0,37]}]},{"pos":[50770,50771],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[51091,51104],"content":"Task<TResult>","needQuote":true,"nodes":[{"content":"Task&lt;TResult&gt;","pos":[0,13],"source":"Task<TResult>"}]},{"pos":[51301,51305],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[51358,51359],"content":"<","needQuote":true,"nodes":[]},{"pos":[51386,51393],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[51508,51512],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"content":"(Of","pos":[51566,51569]},{"pos":[51603,51610],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[51643,51644],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[51830,51852],"content":"System.Threading.Tasks","needQuote":true,"nodes":[{"content":"System.Threading.Tasks","pos":[0,22]}]},{"pos":[52058,52085],"content":"NetworkInformationException","needQuote":true,"nodes":[{"content":"NetworkInformationException","pos":[0,27]}]},{"pos":[52345,52374],"content":"PlatformNotSupportedException","needQuote":true,"nodes":[{"content":"PlatformNotSupportedException","pos":[0,29]}]},{"pos":[52591,52608],"content":"SecurityException","needQuote":true,"nodes":[{"content":"SecurityException","pos":[0,17]}]},{"pos":[52810,52824],"content":"Win32Exception","needQuote":true,"nodes":[{"content":"Win32Exception","pos":[0,14]}]}],"content":"items:\n- uid: System.Net.NetworkInformation.IPGlobalProperties\n  commentId: T:System.Net.NetworkInformation.IPGlobalProperties\n  id: IPGlobalProperties\n  parent: System.Net.NetworkInformation\n  children:\n  - System.Net.NetworkInformation.IPGlobalProperties.#ctor\n  - System.Net.NetworkInformation.IPGlobalProperties.DhcpScopeName\n  - System.Net.NetworkInformation.IPGlobalProperties.DomainName\n  - System.Net.NetworkInformation.IPGlobalProperties.GetActiveTcpConnections\n  - System.Net.NetworkInformation.IPGlobalProperties.GetActiveTcpListeners\n  - System.Net.NetworkInformation.IPGlobalProperties.GetActiveUdpListeners\n  - System.Net.NetworkInformation.IPGlobalProperties.GetIcmpV4Statistics\n  - System.Net.NetworkInformation.IPGlobalProperties.GetIcmpV6Statistics\n  - System.Net.NetworkInformation.IPGlobalProperties.GetIPGlobalProperties\n  - System.Net.NetworkInformation.IPGlobalProperties.GetIPv4GlobalStatistics\n  - System.Net.NetworkInformation.IPGlobalProperties.GetIPv6GlobalStatistics\n  - System.Net.NetworkInformation.IPGlobalProperties.GetTcpIPv4Statistics\n  - System.Net.NetworkInformation.IPGlobalProperties.GetTcpIPv6Statistics\n  - System.Net.NetworkInformation.IPGlobalProperties.GetUdpIPv4Statistics\n  - System.Net.NetworkInformation.IPGlobalProperties.GetUdpIPv6Statistics\n  - System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddressesAsync\n  - System.Net.NetworkInformation.IPGlobalProperties.HostName\n  - System.Net.NetworkInformation.IPGlobalProperties.IsWinsProxy\n  - System.Net.NetworkInformation.IPGlobalProperties.NodeType\n  langs:\n  - csharp\n  - vb\n  name: IPGlobalProperties\n  fullName: System.Net.NetworkInformation.IPGlobalProperties\n  type: Class\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IPGlobalProperties\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 124\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Provides information about the network connectivity of the local computer.</p>\\n\"\n  syntax:\n    content: public abstract class IPGlobalProperties\n    content.vb: Public MustInherit Class IPGlobalProperties\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - abstract\n  - class\n  modifiers.vb:\n  - Public\n  - MustInherit\n  - Class\n  nameWithType: IPGlobalProperties\n- uid: System.Net.NetworkInformation.IPGlobalProperties.#ctor\n  commentId: M:System.Net.NetworkInformation.IPGlobalProperties.#ctor\n  id: '#ctor'\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  langs:\n  - csharp\n  - vb\n  name: IPGlobalProperties()\n  fullName: System.Net.NetworkInformation.IPGlobalProperties.IPGlobalProperties()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 126\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Net.NetworkInformation.IPGlobalProperties\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: protected IPGlobalProperties()\n    content.vb: Protected Sub New\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: IPGlobalProperties.IPGlobalProperties()\n- uid: System.Net.NetworkInformation.IPGlobalProperties.DhcpScopeName\n  commentId: P:System.Net.NetworkInformation.IPGlobalProperties.DhcpScopeName\n  id: DhcpScopeName\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  langs:\n  - csharp\n  - vb\n  name: DhcpScopeName\n  fullName: System.Net.NetworkInformation.IPGlobalProperties.DhcpScopeName\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: DhcpScopeName\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 127\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Gets the Dynamic Host Configuration Protocol (DHCP) scope name.</p>\\n\"\n  syntax:\n    content: public abstract string DhcpScopeName { get; }\n    content.vb: Public MustOverride ReadOnly Property DhcpScopeName As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>A <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance that contains the computer's DHCP scope name.</p>\\n\"\n  exceptions:\n  - type: System.Net.NetworkInformation.NetworkInformationException\n    commentId: T:System.Net.NetworkInformation.NetworkInformationException\n    description: \"\\n<p>A Win32 function call failed. </p>\\n\"\n  see:\n  - type: System.Net.NetworkInformation.NetworkInformationPermission\n    commentId: T:System.Net.NetworkInformation.NetworkInformationPermission\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: IPGlobalProperties.DhcpScopeName\n- uid: System.Net.NetworkInformation.IPGlobalProperties.DomainName\n  commentId: P:System.Net.NetworkInformation.IPGlobalProperties.DomainName\n  id: DomainName\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  langs:\n  - csharp\n  - vb\n  name: DomainName\n  fullName: System.Net.NetworkInformation.IPGlobalProperties.DomainName\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: DomainName\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 128\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Gets the domain in which the local computer is registered.</p>\\n\"\n  syntax:\n    content: public abstract string DomainName { get; }\n    content.vb: Public MustOverride ReadOnly Property DomainName As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>A <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance that contains the computer's domain name. If the computer does not belong to a domain, returns <xref href=\\\"System.String.Empty\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.Net.NetworkInformation.NetworkInformationException\n    commentId: T:System.Net.NetworkInformation.NetworkInformationException\n    description: \"\\n<p>A Win32 function call failed. </p>\\n\"\n  see:\n  - type: System.Net.NetworkInformation.NetworkInformationPermission\n    commentId: T:System.Net.NetworkInformation.NetworkInformationPermission\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: IPGlobalProperties.DomainName\n- uid: System.Net.NetworkInformation.IPGlobalProperties.HostName\n  commentId: P:System.Net.NetworkInformation.IPGlobalProperties.HostName\n  id: HostName\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  langs:\n  - csharp\n  - vb\n  name: HostName\n  fullName: System.Net.NetworkInformation.IPGlobalProperties.HostName\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: HostName\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 129\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Gets the host name for the local computer.</p>\\n\"\n  syntax:\n    content: public abstract string HostName { get; }\n    content.vb: Public MustOverride ReadOnly Property HostName As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>A <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance that contains the computer's NetBIOS name.</p>\\n\"\n  exceptions:\n  - type: System.Net.NetworkInformation.NetworkInformationException\n    commentId: T:System.Net.NetworkInformation.NetworkInformationException\n    description: \"\\n<p>A Win32 function call failed. </p>\\n\"\n  see:\n  - type: System.Net.NetworkInformation.NetworkInformationPermission\n    commentId: T:System.Net.NetworkInformation.NetworkInformationPermission\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: IPGlobalProperties.HostName\n- uid: System.Net.NetworkInformation.IPGlobalProperties.IsWinsProxy\n  commentId: P:System.Net.NetworkInformation.IPGlobalProperties.IsWinsProxy\n  id: IsWinsProxy\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  langs:\n  - csharp\n  - vb\n  name: IsWinsProxy\n  fullName: System.Net.NetworkInformation.IPGlobalProperties.IsWinsProxy\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsWinsProxy\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 130\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Gets a <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that specifies whether the local computer is acting as a Windows Internet Name Service (WINS) proxy.</p>\\n\"\n  syntax:\n    content: public abstract bool IsWinsProxy { get; }\n    content.vb: Public MustOverride ReadOnly Property IsWinsProxy As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the local computer is a WINS proxy; otherwise, <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.Net.NetworkInformation.NetworkInformationException\n    commentId: T:System.Net.NetworkInformation.NetworkInformationException\n    description: \"\\n<p>A Win32 function call failed. </p>\\n\"\n  see:\n  - type: System.Net.NetworkInformation.NetworkInformationPermission\n    commentId: T:System.Net.NetworkInformation.NetworkInformationPermission\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: IPGlobalProperties.IsWinsProxy\n- uid: System.Net.NetworkInformation.IPGlobalProperties.NodeType\n  commentId: P:System.Net.NetworkInformation.IPGlobalProperties.NodeType\n  id: NodeType\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  langs:\n  - csharp\n  - vb\n  name: NodeType\n  fullName: System.Net.NetworkInformation.IPGlobalProperties.NodeType\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: NodeType\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 131\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Gets the Network Basic Input/Output System (NetBIOS) node type of the local computer.</p>\\n\"\n  syntax:\n    content: public abstract NetBiosNodeType NodeType { get; }\n    content.vb: Public MustOverride ReadOnly Property NodeType As NetBiosNodeType\n    parameters: []\n    return:\n      type: System.Net.NetworkInformation.NetBiosNodeType\n      description: \"\\n<p>A <xref href=\\\"System.Net.NetworkInformation.NetBiosNodeType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  exceptions:\n  - type: System.Net.NetworkInformation.NetworkInformationException\n    commentId: T:System.Net.NetworkInformation.NetworkInformationException\n    description: \"\\n<p>A Win32 function call failed. </p>\\n\"\n  see:\n  - type: System.Net.NetworkInformation.NetworkInformationPermission\n    commentId: T:System.Net.NetworkInformation.NetworkInformationPermission\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: IPGlobalProperties.NodeType\n- uid: System.Net.NetworkInformation.IPGlobalProperties.GetActiveTcpConnections\n  commentId: M:System.Net.NetworkInformation.IPGlobalProperties.GetActiveTcpConnections\n  id: GetActiveTcpConnections\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  langs:\n  - csharp\n  - vb\n  name: GetActiveTcpConnections()\n  fullName: System.Net.NetworkInformation.IPGlobalProperties.GetActiveTcpConnections()\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetActiveTcpConnections\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 132\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Returns information about the Internet Protocol version 4 (IPv4) and IPv6 Transmission Control Protocol (TCP) connections on the local computer.</p>\\n\"\n  syntax:\n    content: public abstract TcpConnectionInformation[] GetActiveTcpConnections()\n    content.vb: Public MustOverride Function GetActiveTcpConnections As TcpConnectionInformation()\n    return:\n      type: System.Net.NetworkInformation.TcpConnectionInformation[]\n      description: \"\\n<p>A <xref href=\\\"System.Net.NetworkInformation.TcpConnectionInformation\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> array that contains objects that describe the active TCP connections, or an empty array if no active TCP connections are detected.</p>\\n\"\n  exceptions:\n  - type: System.Net.NetworkInformation.NetworkInformationException\n    commentId: T:System.Net.NetworkInformation.NetworkInformationException\n    description: \"\\n<p>The Win32 function <strong>GetTcpTable</strong> failed. </p>\\n\"\n  see:\n  - type: System.Net.NetworkInformation.NetworkInformationPermission\n    commentId: T:System.Net.NetworkInformation.NetworkInformationPermission\n  modifiers.csharp:\n  - public\n  - abstract\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: IPGlobalProperties.GetActiveTcpConnections()\n- uid: System.Net.NetworkInformation.IPGlobalProperties.GetActiveTcpListeners\n  commentId: M:System.Net.NetworkInformation.IPGlobalProperties.GetActiveTcpListeners\n  id: GetActiveTcpListeners\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  langs:\n  - csharp\n  - vb\n  name: GetActiveTcpListeners()\n  fullName: System.Net.NetworkInformation.IPGlobalProperties.GetActiveTcpListeners()\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetActiveTcpListeners\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 133\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Returns endpoint information about the Internet Protocol version 4 (IPv4) and IPv6 Transmission Control Protocol (TCP) listeners on the local computer.</p>\\n\"\n  syntax:\n    content: public abstract IPEndPoint[] GetActiveTcpListeners()\n    content.vb: Public MustOverride Function GetActiveTcpListeners As IPEndPoint()\n    return:\n      type: System.Net.IPEndPoint[]\n      description: \"\\n<p>A <xref href=\\\"System.Net.IPEndPoint\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> array that contains objects that describe the active TCP listeners, or an empty array, if no active TCP listeners are detected.</p>\\n\"\n  exceptions:\n  - type: System.Net.NetworkInformation.NetworkInformationException\n    commentId: T:System.Net.NetworkInformation.NetworkInformationException\n    description: \"\\n<p>The Win32 function <strong>GetTcpTable</strong> failed. </p>\\n\"\n  see:\n  - type: System.Net.NetworkInformation.NetworkInformationPermission\n    commentId: T:System.Net.NetworkInformation.NetworkInformationPermission\n  modifiers.csharp:\n  - public\n  - abstract\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: IPGlobalProperties.GetActiveTcpListeners()\n- uid: System.Net.NetworkInformation.IPGlobalProperties.GetActiveUdpListeners\n  commentId: M:System.Net.NetworkInformation.IPGlobalProperties.GetActiveUdpListeners\n  id: GetActiveUdpListeners\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  langs:\n  - csharp\n  - vb\n  name: GetActiveUdpListeners()\n  fullName: System.Net.NetworkInformation.IPGlobalProperties.GetActiveUdpListeners()\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetActiveUdpListeners\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 134\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Returns information about the Internet Protocol version 4 (IPv4) and IPv6 User Datagram Protocol (UDP) listeners on the local computer.</p>\\n\"\n  syntax:\n    content: public abstract IPEndPoint[] GetActiveUdpListeners()\n    content.vb: Public MustOverride Function GetActiveUdpListeners As IPEndPoint()\n    return:\n      type: System.Net.IPEndPoint[]\n      description: \"\\n<p>An <xref href=\\\"System.Net.IPEndPoint\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> array that contains objects that describe the UDP listeners, or an empty array if no UDP listeners are detected.</p>\\n\"\n  exceptions:\n  - type: System.Net.NetworkInformation.NetworkInformationException\n    commentId: T:System.Net.NetworkInformation.NetworkInformationException\n    description: \"\\n<p>The call to the Win32 function <strong>GetUdpTable</strong> failed. </p>\\n\"\n  see:\n  - type: System.Net.NetworkInformation.NetworkInformationPermission\n    commentId: T:System.Net.NetworkInformation.NetworkInformationPermission\n  modifiers.csharp:\n  - public\n  - abstract\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: IPGlobalProperties.GetActiveUdpListeners()\n- uid: System.Net.NetworkInformation.IPGlobalProperties.GetIcmpV4Statistics\n  commentId: M:System.Net.NetworkInformation.IPGlobalProperties.GetIcmpV4Statistics\n  id: GetIcmpV4Statistics\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  langs:\n  - csharp\n  - vb\n  name: GetIcmpV4Statistics()\n  fullName: System.Net.NetworkInformation.IPGlobalProperties.GetIcmpV4Statistics()\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetIcmpV4Statistics\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 135\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Provides Internet Control Message Protocol (ICMP) version 4 statistical data for the local computer.</p>\\n\"\n  syntax:\n    content: public abstract IcmpV4Statistics GetIcmpV4Statistics()\n    content.vb: Public MustOverride Function GetIcmpV4Statistics As IcmpV4Statistics\n    return:\n      type: System.Net.NetworkInformation.IcmpV4Statistics\n      description: \"\\n<p>An <xref href=\\\"System.Net.NetworkInformation.IcmpV4Statistics\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that provides ICMP version 4 traffic statistics for the local computer.</p>\\n\"\n  exceptions:\n  - type: System.Net.NetworkInformation.NetworkInformationException\n    commentId: T:System.Net.NetworkInformation.NetworkInformationException\n    description: \"\\n<p>The Win32 function <strong>GetIcmpStatistics</strong> failed. </p>\\n\"\n  see:\n  - type: System.Net.NetworkInformation.NetworkInformationPermission\n    commentId: T:System.Net.NetworkInformation.NetworkInformationPermission\n  modifiers.csharp:\n  - public\n  - abstract\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: IPGlobalProperties.GetIcmpV4Statistics()\n- uid: System.Net.NetworkInformation.IPGlobalProperties.GetIcmpV6Statistics\n  commentId: M:System.Net.NetworkInformation.IPGlobalProperties.GetIcmpV6Statistics\n  id: GetIcmpV6Statistics\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  langs:\n  - csharp\n  - vb\n  name: GetIcmpV6Statistics()\n  fullName: System.Net.NetworkInformation.IPGlobalProperties.GetIcmpV6Statistics()\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetIcmpV6Statistics\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 136\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Provides Internet Control Message Protocol (ICMP) version 6 statistical data for the local computer.</p>\\n\"\n  syntax:\n    content: public abstract IcmpV6Statistics GetIcmpV6Statistics()\n    content.vb: Public MustOverride Function GetIcmpV6Statistics As IcmpV6Statistics\n    return:\n      type: System.Net.NetworkInformation.IcmpV6Statistics\n      description: \"\\n<p>An <xref href=\\\"System.Net.NetworkInformation.IcmpV6Statistics\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that provides ICMP version 6 traffic statistics for the local computer.</p>\\n\"\n  exceptions:\n  - type: System.Net.NetworkInformation.NetworkInformationException\n    commentId: T:System.Net.NetworkInformation.NetworkInformationException\n    description: \"\\n<p>The Win32 function <strong>GetIcmpStatisticsEx</strong> failed. </p>\\n\"\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>The local computer's operating system is not Windows XP or later.</p>\\n\"\n  see:\n  - type: System.Net.NetworkInformation.NetworkInformationPermission\n    commentId: T:System.Net.NetworkInformation.NetworkInformationPermission\n  modifiers.csharp:\n  - public\n  - abstract\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: IPGlobalProperties.GetIcmpV6Statistics()\n- uid: System.Net.NetworkInformation.IPGlobalProperties.GetIPGlobalProperties\n  commentId: M:System.Net.NetworkInformation.IPGlobalProperties.GetIPGlobalProperties\n  id: GetIPGlobalProperties\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  langs:\n  - csharp\n  - vb\n  name: GetIPGlobalProperties()\n  fullName: System.Net.NetworkInformation.IPGlobalProperties.GetIPGlobalProperties()\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetIPGlobalProperties\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 137\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Gets an object that provides information about the local computer's network connectivity and traffic statistics.</p>\\n\"\n  syntax:\n    content: public static IPGlobalProperties GetIPGlobalProperties()\n    content.vb: Public Shared Function GetIPGlobalProperties As IPGlobalProperties\n    return:\n      type: System.Net.NetworkInformation.IPGlobalProperties\n      description: \"\\n<p>A <xref href=\\\"System.Net.NetworkInformation.IPGlobalProperties\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that contains information about the local computer.</p>\\n\"\n  see:\n  - type: System.Net.NetworkInformation.NetworkInformationPermission\n    commentId: T:System.Net.NetworkInformation.NetworkInformationPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: IPGlobalProperties.GetIPGlobalProperties()\n- uid: System.Net.NetworkInformation.IPGlobalProperties.GetIPv4GlobalStatistics\n  commentId: M:System.Net.NetworkInformation.IPGlobalProperties.GetIPv4GlobalStatistics\n  id: GetIPv4GlobalStatistics\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  langs:\n  - csharp\n  - vb\n  name: GetIPv4GlobalStatistics()\n  fullName: System.Net.NetworkInformation.IPGlobalProperties.GetIPv4GlobalStatistics()\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetIPv4GlobalStatistics\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 138\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Provides Internet Protocol version 4 (IPv4) statistical data for the local computer.</p>\\n\"\n  syntax:\n    content: public abstract IPGlobalStatistics GetIPv4GlobalStatistics()\n    content.vb: Public MustOverride Function GetIPv4GlobalStatistics As IPGlobalStatistics\n    return:\n      type: System.Net.NetworkInformation.IPGlobalStatistics\n      description: \"\\n<p>An <xref href=\\\"System.Net.NetworkInformation.IPGlobalStatistics\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that provides IPv4 traffic statistics for the local computer.</p>\\n\"\n  exceptions:\n  - type: System.Net.NetworkInformation.NetworkInformationException\n    commentId: T:System.Net.NetworkInformation.NetworkInformationException\n    description: \"\\n<p>The call to the Win32 function <strong>GetIpStatistics</strong> failed.</p>\\n\"\n  see:\n  - type: System.Net.NetworkInformation.NetworkInformationPermission\n    commentId: T:System.Net.NetworkInformation.NetworkInformationPermission\n  modifiers.csharp:\n  - public\n  - abstract\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: IPGlobalProperties.GetIPv4GlobalStatistics()\n- uid: System.Net.NetworkInformation.IPGlobalProperties.GetIPv6GlobalStatistics\n  commentId: M:System.Net.NetworkInformation.IPGlobalProperties.GetIPv6GlobalStatistics\n  id: GetIPv6GlobalStatistics\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  langs:\n  - csharp\n  - vb\n  name: GetIPv6GlobalStatistics()\n  fullName: System.Net.NetworkInformation.IPGlobalProperties.GetIPv6GlobalStatistics()\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetIPv6GlobalStatistics\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 139\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Provides Internet Protocol version 6 (IPv6) statistical data for the local computer.</p>\\n\"\n  syntax:\n    content: public abstract IPGlobalStatistics GetIPv6GlobalStatistics()\n    content.vb: Public MustOverride Function GetIPv6GlobalStatistics As IPGlobalStatistics\n    return:\n      type: System.Net.NetworkInformation.IPGlobalStatistics\n      description: \"\\n<p>An <xref href=\\\"System.Net.NetworkInformation.IPGlobalStatistics\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that provides IPv6 traffic statistics for the local computer.</p>\\n\"\n  exceptions:\n  - type: System.Net.NetworkInformation.NetworkInformationException\n    commentId: T:System.Net.NetworkInformation.NetworkInformationException\n    description: \"\\n<p>The call to the Win32 function <strong>GetIpStatistics</strong> failed.</p>\\n\"\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>The local computer is not running an operating system that supports IPv6. </p>\\n\"\n  see:\n  - type: System.Net.NetworkInformation.NetworkInformationPermission\n    commentId: T:System.Net.NetworkInformation.NetworkInformationPermission\n  modifiers.csharp:\n  - public\n  - abstract\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: IPGlobalProperties.GetIPv6GlobalStatistics()\n- uid: System.Net.NetworkInformation.IPGlobalProperties.GetTcpIPv4Statistics\n  commentId: M:System.Net.NetworkInformation.IPGlobalProperties.GetTcpIPv4Statistics\n  id: GetTcpIPv4Statistics\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  langs:\n  - csharp\n  - vb\n  name: GetTcpIPv4Statistics()\n  fullName: System.Net.NetworkInformation.IPGlobalProperties.GetTcpIPv4Statistics()\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetTcpIPv4Statistics\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 140\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Provides Transmission Control Protocol/Internet Protocol version 4 (TCP/IPv4) statistical data for the local computer.</p>\\n\"\n  syntax:\n    content: public abstract TcpStatistics GetTcpIPv4Statistics()\n    content.vb: Public MustOverride Function GetTcpIPv4Statistics As TcpStatistics\n    return:\n      type: System.Net.NetworkInformation.TcpStatistics\n      description: \"\\n<p>A <xref href=\\\"System.Net.NetworkInformation.TcpStatistics\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that provides TCP/IPv4 traffic statistics for the local computer.</p>\\n\"\n  exceptions:\n  - type: System.Net.NetworkInformation.NetworkInformationException\n    commentId: T:System.Net.NetworkInformation.NetworkInformationException\n    description: \"\\n<p>The call to the Win32 function <strong>GetTcpStatistics</strong> failed.</p>\\n\"\n  see:\n  - type: System.Net.NetworkInformation.NetworkInformationPermission\n    commentId: T:System.Net.NetworkInformation.NetworkInformationPermission\n  modifiers.csharp:\n  - public\n  - abstract\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: IPGlobalProperties.GetTcpIPv4Statistics()\n- uid: System.Net.NetworkInformation.IPGlobalProperties.GetTcpIPv6Statistics\n  commentId: M:System.Net.NetworkInformation.IPGlobalProperties.GetTcpIPv6Statistics\n  id: GetTcpIPv6Statistics\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  langs:\n  - csharp\n  - vb\n  name: GetTcpIPv6Statistics()\n  fullName: System.Net.NetworkInformation.IPGlobalProperties.GetTcpIPv6Statistics()\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetTcpIPv6Statistics\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 141\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Provides Transmission Control Protocol/Internet Protocol version 6 (TCP/IPv6) statistical data for the local computer.</p>\\n\"\n  syntax:\n    content: public abstract TcpStatistics GetTcpIPv6Statistics()\n    content.vb: Public MustOverride Function GetTcpIPv6Statistics As TcpStatistics\n    return:\n      type: System.Net.NetworkInformation.TcpStatistics\n      description: \"\\n<p>A <xref href=\\\"System.Net.NetworkInformation.TcpStatistics\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that provides TCP/IPv6 traffic statistics for the local computer.</p>\\n\"\n  exceptions:\n  - type: System.Net.NetworkInformation.NetworkInformationException\n    commentId: T:System.Net.NetworkInformation.NetworkInformationException\n    description: \"\\n<p>The call to the Win32 function <strong>GetTcpStatistics</strong> failed.</p>\\n\"\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>The local computer is not running an operating system that supports IPv6. </p>\\n\"\n  see:\n  - type: System.Net.NetworkInformation.NetworkInformationPermission\n    commentId: T:System.Net.NetworkInformation.NetworkInformationPermission\n  modifiers.csharp:\n  - public\n  - abstract\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: IPGlobalProperties.GetTcpIPv6Statistics()\n- uid: System.Net.NetworkInformation.IPGlobalProperties.GetUdpIPv4Statistics\n  commentId: M:System.Net.NetworkInformation.IPGlobalProperties.GetUdpIPv4Statistics\n  id: GetUdpIPv4Statistics\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  langs:\n  - csharp\n  - vb\n  name: GetUdpIPv4Statistics()\n  fullName: System.Net.NetworkInformation.IPGlobalProperties.GetUdpIPv4Statistics()\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetUdpIPv4Statistics\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 142\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Provides User Datagram Protocol/Internet Protocol version 4 (UDP/IPv4) statistical data for the local computer.</p>\\n\"\n  syntax:\n    content: public abstract UdpStatistics GetUdpIPv4Statistics()\n    content.vb: Public MustOverride Function GetUdpIPv4Statistics As UdpStatistics\n    return:\n      type: System.Net.NetworkInformation.UdpStatistics\n      description: \"\\n<p>A <xref href=\\\"System.Net.NetworkInformation.UdpStatistics\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that provides UDP/IPv4 traffic statistics for the local computer.</p>\\n\"\n  exceptions:\n  - type: System.Net.NetworkInformation.NetworkInformationException\n    commentId: T:System.Net.NetworkInformation.NetworkInformationException\n    description: \"\\n<p>The call to the Win32 function GetUdpStatistics failed.</p>\\n\"\n  see:\n  - type: System.Net.NetworkInformation.NetworkInformationPermission\n    commentId: T:System.Net.NetworkInformation.NetworkInformationPermission\n  modifiers.csharp:\n  - public\n  - abstract\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: IPGlobalProperties.GetUdpIPv4Statistics()\n- uid: System.Net.NetworkInformation.IPGlobalProperties.GetUdpIPv6Statistics\n  commentId: M:System.Net.NetworkInformation.IPGlobalProperties.GetUdpIPv6Statistics\n  id: GetUdpIPv6Statistics\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  langs:\n  - csharp\n  - vb\n  name: GetUdpIPv6Statistics()\n  fullName: System.Net.NetworkInformation.IPGlobalProperties.GetUdpIPv6Statistics()\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetUdpIPv6Statistics\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 143\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Provides User Datagram Protocol/Internet Protocol version 6 (UDP/IPv6) statistical data for the local computer.</p>\\n\"\n  syntax:\n    content: public abstract UdpStatistics GetUdpIPv6Statistics()\n    content.vb: Public MustOverride Function GetUdpIPv6Statistics As UdpStatistics\n    return:\n      type: System.Net.NetworkInformation.UdpStatistics\n      description: \"\\n<p>A <xref href=\\\"System.Net.NetworkInformation.UdpStatistics\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that provides UDP/IPv6 traffic statistics for the local computer.</p>\\n\"\n  exceptions:\n  - type: System.Net.NetworkInformation.NetworkInformationException\n    commentId: T:System.Net.NetworkInformation.NetworkInformationException\n    description: \"\\n<p>The call to the Win32 function <strong>GetUdpStatistics</strong> failed.</p>\\n\"\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>The local computer is not running an operating system that supports IPv6. </p>\\n\"\n  see:\n  - type: System.Net.NetworkInformation.NetworkInformationPermission\n    commentId: T:System.Net.NetworkInformation.NetworkInformationPermission\n  modifiers.csharp:\n  - public\n  - abstract\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: IPGlobalProperties.GetUdpIPv6Statistics()\n- uid: System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddressesAsync\n  commentId: M:System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddressesAsync\n  id: GetUnicastAddressesAsync\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  langs:\n  - csharp\n  - vb\n  name: GetUnicastAddressesAsync()\n  fullName: System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddressesAsync()\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetUnicastAddressesAsync\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 144\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Retrieves the stable unicast IP address table on the local computer as an asynchronous operation.</p>\\n\"\n  syntax:\n    content: public virtual Task<UnicastIPAddressInformationCollection> GetUnicastAddressesAsync()\n    content.vb: Public Overridable Function GetUnicastAddressesAsync As Task(Of UnicastIPAddressInformationCollection)\n    return:\n      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.UnicastIPAddressInformationCollection}\n      description: \"\\n<p>Returns <xref href=\\\"System.Threading.Tasks.Task`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>The task object representing the asynchronous operation.</p>\\n\"\n  exceptions:\n  - type: System.Net.NetworkInformation.NetworkInformationException\n    commentId: T:System.Net.NetworkInformation.NetworkInformationException\n    description: \"\\n<p>The call to the native <strong>GetAdaptersAddresses</strong> function failed.</p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The caller does not have necessary <xref href=\\\"System.Net.NetworkInformation.NetworkInformationAccess.Read\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> permission. </p>\\n\"\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: \"\\n<p>The call to the native <strong>NotifyStableUnicastIpAddressTable</strong> function failed.</p>\\n\"\n  seealso:\n  - type: System.Net.IPAddress.IsIPv6Teredo\n    commentId: P:System.Net.IPAddress.IsIPv6Teredo\n  - type: System.Net.NetworkInformation.IPGlobalProperties.BeginGetUnicastAddresses(System.AsyncCallback,System.Object)\n    commentId: M:System.Net.NetworkInformation.IPGlobalProperties.BeginGetUnicastAddresses(System.AsyncCallback,System.Object)\n  - type: System.Net.NetworkInformation.IPGlobalProperties.EndGetUnicastAddresses(System.IAsyncResult)\n    commentId: M:System.Net.NetworkInformation.IPGlobalProperties.EndGetUnicastAddresses(System.IAsyncResult)\n  - type: System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddresses\n    commentId: M:System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddresses\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: IPGlobalProperties.GetUnicastAddressesAsync()\nreferences:\n- uid: System.Net.NetworkInformation\n  isExternal: false\n  name: System.Net.NetworkInformation\n  fullName: System.Net.NetworkInformation\n  commentId: N:System.Net.NetworkInformation\n  nameWithType: System.Net.NetworkInformation\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.Net.NetworkInformation.NetBiosNodeType\n  parent: System.Net.NetworkInformation\n  isExternal: false\n  name: NetBiosNodeType\n  fullName: System.Net.NetworkInformation.NetBiosNodeType\n  commentId: T:System.Net.NetworkInformation.NetBiosNodeType\n  nameWithType: NetBiosNodeType\n- uid: System.Net.NetworkInformation.TcpConnectionInformation[]\n  name: TcpConnectionInformation[]\n  fullName: System.Net.NetworkInformation.TcpConnectionInformation[]\n  fullname.vb: System.Net.NetworkInformation.TcpConnectionInformation()\n  name.vb: TcpConnectionInformation()\n  spec.csharp:\n  - uid: System.Net.NetworkInformation.TcpConnectionInformation\n    name: TcpConnectionInformation\n    fullName: System.Net.NetworkInformation.TcpConnectionInformation\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Net.NetworkInformation.TcpConnectionInformation\n    name: TcpConnectionInformation\n    fullName: System.Net.NetworkInformation.TcpConnectionInformation\n  - name: ()\n    fullName: ()\n  nameWithType: TcpConnectionInformation[]\n  nameWithType.vb: TcpConnectionInformation()\n- uid: System.Net.IPEndPoint[]\n  name: IPEndPoint[]\n  fullName: System.Net.IPEndPoint[]\n  fullname.vb: System.Net.IPEndPoint()\n  name.vb: IPEndPoint()\n  spec.csharp:\n  - uid: System.Net.IPEndPoint\n    name: IPEndPoint\n    fullName: System.Net.IPEndPoint\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Net.IPEndPoint\n    name: IPEndPoint\n    fullName: System.Net.IPEndPoint\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: IPEndPoint[]\n  nameWithType.vb: IPEndPoint()\n- uid: System.Net.NetworkInformation.IcmpV4Statistics\n  parent: System.Net.NetworkInformation\n  isExternal: false\n  name: IcmpV4Statistics\n  fullName: System.Net.NetworkInformation.IcmpV4Statistics\n  commentId: T:System.Net.NetworkInformation.IcmpV4Statistics\n  nameWithType: IcmpV4Statistics\n- uid: System.Net.NetworkInformation.IcmpV6Statistics\n  parent: System.Net.NetworkInformation\n  isExternal: false\n  name: IcmpV6Statistics\n  fullName: System.Net.NetworkInformation.IcmpV6Statistics\n  commentId: T:System.Net.NetworkInformation.IcmpV6Statistics\n  nameWithType: IcmpV6Statistics\n- uid: System.Net.NetworkInformation.IPGlobalProperties\n  parent: System.Net.NetworkInformation\n  isExternal: false\n  name: IPGlobalProperties\n  fullName: System.Net.NetworkInformation.IPGlobalProperties\n  commentId: T:System.Net.NetworkInformation.IPGlobalProperties\n  nameWithType: IPGlobalProperties\n- uid: System.Net.NetworkInformation.IPGlobalStatistics\n  parent: System.Net.NetworkInformation\n  isExternal: false\n  name: IPGlobalStatistics\n  fullName: System.Net.NetworkInformation.IPGlobalStatistics\n  commentId: T:System.Net.NetworkInformation.IPGlobalStatistics\n  nameWithType: IPGlobalStatistics\n- uid: System.Net.NetworkInformation.TcpStatistics\n  parent: System.Net.NetworkInformation\n  isExternal: false\n  name: TcpStatistics\n  fullName: System.Net.NetworkInformation.TcpStatistics\n  commentId: T:System.Net.NetworkInformation.TcpStatistics\n  nameWithType: TcpStatistics\n- uid: System.Net.NetworkInformation.UdpStatistics\n  parent: System.Net.NetworkInformation\n  isExternal: false\n  name: UdpStatistics\n  fullName: System.Net.NetworkInformation.UdpStatistics\n  commentId: T:System.Net.NetworkInformation.UdpStatistics\n  nameWithType: UdpStatistics\n- uid: System.Threading.Tasks.Task{System.Net.NetworkInformation.UnicastIPAddressInformationCollection}\n  parent: System.Threading.Tasks\n  definition: System.Threading.Tasks.Task`1\n  name: Task<UnicastIPAddressInformationCollection>\n  fullName: System.Threading.Tasks.Task<System.Net.NetworkInformation.UnicastIPAddressInformationCollection>\n  fullname.vb: System.Threading.Tasks.Task(Of System.Net.NetworkInformation.UnicastIPAddressInformationCollection)\n  name.vb: Task(Of UnicastIPAddressInformationCollection)\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformationCollection\n    name: UnicastIPAddressInformationCollection\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformationCollection\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformationCollection\n    name: UnicastIPAddressInformationCollection\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformationCollection\n  - name: )\n    fullName: )\n  commentId: T:System.Threading.Tasks.Task{System.Net.NetworkInformation.UnicastIPAddressInformationCollection}\n  nameWithType: Task<UnicastIPAddressInformationCollection>\n  nameWithType.vb: Task(Of UnicastIPAddressInformationCollection)\n- uid: System.Threading.Tasks.Task`1\n  isExternal: false\n  name: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n  fullname.vb: System.Threading.Tasks.Task(Of TResult)\n  name.vb: Task(Of TResult)\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n  - name: <\n    fullName: <\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  commentId: T:System.Threading.Tasks.Task`1\n  nameWithType: Task<TResult>\n  nameWithType.vb: Task(Of TResult)\n- uid: System.Threading.Tasks\n  isExternal: false\n  name: System.Threading.Tasks\n  fullName: System.Threading.Tasks\n  commentId: N:System.Threading.Tasks\n  nameWithType: System.Threading.Tasks\n- uid: System.Net.NetworkInformation.NetworkInformationException\n  isExternal: false\n  name: NetworkInformationException\n  fullName: System.Net.NetworkInformation.NetworkInformationException\n  commentId: T:System.Net.NetworkInformation.NetworkInformationException\n  nameWithType: NetworkInformationException\n- uid: System.PlatformNotSupportedException\n  isExternal: false\n  name: PlatformNotSupportedException\n  fullName: System.PlatformNotSupportedException\n  nameWithType: PlatformNotSupportedException\n  commentId: T:System.PlatformNotSupportedException\n- uid: System.Security.SecurityException\n  isExternal: false\n  name: SecurityException\n  fullName: System.Security.SecurityException\n  nameWithType: SecurityException\n  commentId: T:System.Security.SecurityException\n- uid: System.ComponentModel.Win32Exception\n  isExternal: false\n  name: Win32Exception\n  fullName: System.ComponentModel.Win32Exception\n  nameWithType: Win32Exception\n  commentId: T:System.ComponentModel.Win32Exception\n"}