{"nodes":[{"pos":[897,906],"content":"X509Chain","needQuote":true,"nodes":[{"content":"X509Chain","pos":[0,9]}]},{"pos":[2541,2552],"content":"X509Chain()","needQuote":true,"nodes":[{"content":"X509Chain()","pos":[0,11]}]},{"pos":[3762,3775],"content":"ChainElements","needQuote":true,"nodes":[{"content":"ChainElements","pos":[0,13]}]},{"pos":[5389,5400],"content":"ChainPolicy","needQuote":true,"nodes":[{"content":"ChainPolicy","pos":[0,11]}]},{"content":"\\n&lt;p&gt;The value being set for this property is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[6748,6822],"source":"\\n<p>The value being set for this property is <strong>null</strong>.</p>\\n"},{"pos":[7213,7224],"content":"ChainStatus","needQuote":true,"nodes":[{"content":"ChainStatus","pos":[0,11]}]},{"pos":[8806,8816],"content":"SafeHandle","needQuote":true,"nodes":[{"content":"SafeHandle","pos":[0,10]}]},{"pos":[10529,10552],"content":"Build(X509Certificate2)","needQuote":true,"nodes":[{"content":"Build(X509Certificate2)","pos":[0,23]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the X.509 certificate is valid; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[11872,11976],"source":"\\n<p>\\n<strong>true</strong> if the X.509 certificate is valid; otherwise, <strong>false</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;certificate&lt;/em&gt; is not a valid certificate or is &lt;strong&gt;null&lt;/strong&gt;.","pos":[12087,12172],"source":"\\n<p>The <em>certificate</em> is not a valid certificate or is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[12173,12179],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;certificate&lt;/em&gt; is unreadable.","pos":[12330,12374],"source":"\\n<p>The <em>certificate</em> is unreadable."},{"content":"&lt;/p&gt;\\n","pos":[12375,12381],"source":" </p>\\n"},{"pos":[13277,13286],"content":"Dispose()","needQuote":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[14574,14590],"content":"Dispose(Boolean)","needQuote":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to release both managed and unmanaged resources; &lt;strong&gt;false&lt;/strong&gt; to release only unmanaged resources.&lt;/p&gt;\\n","pos":[15635,15778],"source":"\\n<p>\\n<strong>true</strong> to release both managed and unmanaged resources; <strong>false</strong> to release only unmanaged resources.</p>\\n"},{"pos":[16008,16053],"content":"System.Security.Cryptography.X509Certificates","needQuote":true,"nodes":[{"content":"System.Security.Cryptography.X509Certificates","pos":[0,45]}]},{"pos":[16301,16307],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16457,16468],"content":"IDisposable","needQuote":true,"nodes":[{"content":"IDisposable","pos":[0,11]}]},{"pos":[16643,16653],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[16748,16756],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[16825,16826],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16853,16854],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16924,16932],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[17001,17002],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17029,17030],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17213,17227],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[17346,17352],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[17419,17420],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17470,17476],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17536,17537],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17620,17626],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[17693,17694],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17744,17750],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17810,17811],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18025,18047],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[18195,18201],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[18268,18269],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18319,18325],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[18386,18387]},{"pos":[18442,18448],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18508,18509],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18606,18612],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[18679,18680],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18730,18736],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[18797,18798]},{"pos":[18853,18859],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18919,18920],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19165,19196],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[19362,19377],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[19453,19454],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19504,19510],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[19571,19572]},{"pos":[19627,19633],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[19693,19694],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19800,19815],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[19891,19892],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19942,19948],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[20009,20010]},{"pos":[20065,20071],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[20131,20132],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20362,20375],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[20476,20487],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[20559,20560],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20587,20588],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20661,20672],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[20744,20745],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20772,20773],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20948,20957],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[21050,21057],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[21125,21126],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21153,21154],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21223,21230],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[21298,21299],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21326,21327],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21502,21519],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[21628,21643],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[21719,21720],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21747,21748],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21825,21840],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[21916,21917],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21944,21945],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22090,22096],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[22325,22351],"content":"X509ChainElementCollection","needQuote":true,"nodes":[{"content":"X509ChainElementCollection","pos":[0,26]}]},{"pos":[22721,22736],"content":"X509ChainPolicy","needQuote":true,"nodes":[{"content":"X509ChainPolicy","pos":[0,15]}]},{"pos":[22999,23016],"content":"X509ChainStatus[]","needQuote":true,"nodes":[{"content":"X509ChainStatus[]","pos":[0,17]}]},{"pos":[23297,23312],"content":"X509ChainStatus","needQuote":true,"nodes":[{"content":"X509ChainStatus","pos":[0,15]}]},{"content":"[]","pos":[23400,23402]},{"pos":[23515,23530],"content":"X509ChainStatus","needQuote":true,"nodes":[{"content":"X509ChainStatus","pos":[0,15]}]},{"pos":[23617,23619],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[23829,23848],"content":"SafeX509ChainHandle","needQuote":true,"nodes":[{"content":"SafeX509ChainHandle","pos":[0,19]}]},{"pos":[24071,24098],"content":"Microsoft.Win32.SafeHandles","needQuote":true,"nodes":[{"content":"Microsoft.Win32.SafeHandles","pos":[0,27]}]},{"pos":[24380,24396],"content":"X509Certificate2","needQuote":true,"nodes":[{"content":"X509Certificate2","pos":[0,16]}]},{"pos":[24650,24657],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[24830,24839],"content":"Dispose()","needQuote":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[24942,24949],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[25001,25002],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25029,25030],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25104,25111],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[25163,25164],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25191,25192],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25353,25374],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[25575,25592],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]},{"pos":[25791,25813],"content":"CryptographicException","needQuote":true,"nodes":[{"content":"CryptographicException","pos":[0,22]}]}],"content":"items:\n- uid: System.Security.Cryptography.X509Certificates.X509Chain\n  commentId: T:System.Security.Cryptography.X509Certificates.X509Chain\n  id: X509Chain\n  parent: System.Security.Cryptography.X509Certificates\n  children:\n  - System.Security.Cryptography.X509Certificates.X509Chain.#ctor\n  - System.Security.Cryptography.X509Certificates.X509Chain.Build(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  - System.Security.Cryptography.X509Certificates.X509Chain.ChainElements\n  - System.Security.Cryptography.X509Certificates.X509Chain.ChainPolicy\n  - System.Security.Cryptography.X509Certificates.X509Chain.ChainStatus\n  - System.Security.Cryptography.X509Certificates.X509Chain.Dispose\n  - System.Security.Cryptography.X509Certificates.X509Chain.Dispose(System.Boolean)\n  - System.Security.Cryptography.X509Certificates.X509Chain.SafeHandle\n  langs:\n  - csharp\n  - vb\n  name: X509Chain\n  fullName: System.Security.Cryptography.X509Certificates.X509Chain\n  type: Class\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: X509Chain\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 217\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Represents a chain-building engine for <xref href=\\\"System.Security.Cryptography.X509Certificates.X509Certificate2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> certificates.</p>\\n\"\n  syntax:\n    content: 'public class X509Chain : IDisposable'\n    content.vb: >-\n      Public Class X509Chain\n          Implements IDisposable\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: X509Chain\n- uid: System.Security.Cryptography.X509Certificates.X509Chain.#ctor\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Chain.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.X509Certificates.X509Chain\n  langs:\n  - csharp\n  - vb\n  name: X509Chain()\n  fullName: System.Security.Cryptography.X509Certificates.X509Chain.X509Chain()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 219\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.Cryptography.X509Certificates.X509Chain\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public X509Chain()\n    content.vb: Public Sub New\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: X509Chain.X509Chain()\n- uid: System.Security.Cryptography.X509Certificates.X509Chain.ChainElements\n  commentId: P:System.Security.Cryptography.X509Certificates.X509Chain.ChainElements\n  id: ChainElements\n  parent: System.Security.Cryptography.X509Certificates.X509Chain\n  langs:\n  - csharp\n  - vb\n  name: ChainElements\n  fullName: System.Security.Cryptography.X509Certificates.X509Chain.ChainElements\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ChainElements\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 220\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Gets a collection of <xref href=\\\"System.Security.Cryptography.X509Certificates.X509ChainElement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects.</p>\\n\"\n  syntax:\n    content: public X509ChainElementCollection ChainElements { get; }\n    content.vb: Public ReadOnly Property ChainElements As X509ChainElementCollection\n    parameters: []\n    return:\n      type: System.Security.Cryptography.X509Certificates.X509ChainElementCollection\n      description: \"\\n<p>An <xref href=\\\"System.Security.Cryptography.X509Certificates.X509ChainElementCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: X509Chain.ChainElements\n- uid: System.Security.Cryptography.X509Certificates.X509Chain.ChainPolicy\n  commentId: P:System.Security.Cryptography.X509Certificates.X509Chain.ChainPolicy\n  id: ChainPolicy\n  parent: System.Security.Cryptography.X509Certificates.X509Chain\n  langs:\n  - csharp\n  - vb\n  name: ChainPolicy\n  fullName: System.Security.Cryptography.X509Certificates.X509Chain.ChainPolicy\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ChainPolicy\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 221\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Gets or sets the <xref href=\\\"System.Security.Cryptography.X509Certificates.X509ChainPolicy\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to use when building an X.509 certificate chain.</p>\\n\"\n  syntax:\n    content: public X509ChainPolicy ChainPolicy { get; set; }\n    content.vb: Public Property ChainPolicy As X509ChainPolicy\n    parameters: []\n    return:\n      type: System.Security.Cryptography.X509Certificates.X509ChainPolicy\n      description: \"\\n<p>The <xref href=\\\"System.Security.Cryptography.X509Certificates.X509ChainPolicy\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object associated with this X.509 chain.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The value being set for this property is <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: X509Chain.ChainPolicy\n- uid: System.Security.Cryptography.X509Certificates.X509Chain.ChainStatus\n  commentId: P:System.Security.Cryptography.X509Certificates.X509Chain.ChainStatus\n  id: ChainStatus\n  parent: System.Security.Cryptography.X509Certificates.X509Chain\n  langs:\n  - csharp\n  - vb\n  name: ChainStatus\n  fullName: System.Security.Cryptography.X509Certificates.X509Chain.ChainStatus\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ChainStatus\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 222\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Gets the status of each element in an <xref href=\\\"System.Security.Cryptography.X509Certificates.X509Chain\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public X509ChainStatus[] ChainStatus { get; }\n    content.vb: Public ReadOnly Property ChainStatus As X509ChainStatus()\n    parameters: []\n    return:\n      type: System.Security.Cryptography.X509Certificates.X509ChainStatus[]\n      description: \"\\n<p>An array of <xref href=\\\"System.Security.Cryptography.X509Certificates.X509ChainStatus\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: X509Chain.ChainStatus\n- uid: System.Security.Cryptography.X509Certificates.X509Chain.SafeHandle\n  commentId: P:System.Security.Cryptography.X509Certificates.X509Chain.SafeHandle\n  id: SafeHandle\n  parent: System.Security.Cryptography.X509Certificates.X509Chain\n  langs:\n  - csharp\n  - vb\n  name: SafeHandle\n  fullName: System.Security.Cryptography.X509Certificates.X509Chain.SafeHandle\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SafeHandle\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 223\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Gets a safe handle for this <xref href=\\\"System.Security.Cryptography.X509Certificates.X509Chain\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance. </p>\\n\"\n  syntax:\n    content: public SafeX509ChainHandle SafeHandle { get; }\n    content.vb: Public ReadOnly Property SafeHandle As SafeX509ChainHandle\n    parameters: []\n    return:\n      type: Microsoft.Win32.SafeHandles.SafeX509ChainHandle\n      description: \"\\n<p>Returns the <xref href=\\\"Microsoft.Win32.SafeHandles.SafeX509ChainHandle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: X509Chain.SafeHandle\n- uid: System.Security.Cryptography.X509Certificates.X509Chain.Build(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Chain.Build(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  id: Build(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  parent: System.Security.Cryptography.X509Certificates.X509Chain\n  langs:\n  - csharp\n  - vb\n  name: Build(X509Certificate2)\n  fullName: System.Security.Cryptography.X509Certificates.X509Chain.Build(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Build\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 224\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Builds an X.509 chain using the policy specified in <xref href=\\\"System.Security.Cryptography.X509Certificates.X509ChainPolicy\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public bool Build(X509Certificate2 certificate)\n    content.vb: Public Function Build(certificate As X509Certificate2) As Boolean\n    parameters:\n    - id: certificate\n      type: System.Security.Cryptography.X509Certificates.X509Certificate2\n      description: \"\\n<p>An <xref href=\\\"System.Security.Cryptography.X509Certificates.X509Certificate2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the X.509 certificate is valid; otherwise, <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The <em>certificate</em> is not a valid certificate or is <strong>null</strong>. </p>\\n\"\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: \"\\n<p>The <em>certificate</em> is unreadable. </p>\\n\"\n  see:\n  - type: System.Security.Permissions.SecurityAction.InheritanceDemand\n    commentId: F:System.Security.Permissions.SecurityAction.InheritanceDemand\n  - type: System.Security.Permissions.SecurityAction.LinkDemand\n    commentId: F:System.Security.Permissions.SecurityAction.LinkDemand\n  - type: System.Security.Permissions.StorePermission\n    commentId: T:System.Security.Permissions.StorePermission\n  - type: System.Security.Permissions.StorePermission\n    commentId: T:System.Security.Permissions.StorePermission\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: X509Chain.Build(X509Certificate2)\n- uid: System.Security.Cryptography.X509Certificates.X509Chain.Dispose\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Chain.Dispose\n  id: Dispose\n  parent: System.Security.Cryptography.X509Certificates.X509Chain\n  langs:\n  - csharp\n  - vb\n  name: Dispose()\n  fullName: System.Security.Cryptography.X509Certificates.X509Chain.Dispose()\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Dispose\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 225\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Releases all of the resources used by this <xref href=\\\"System.Security.Cryptography.X509Certificates.X509Chain\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public void Dispose()\n    content.vb: Public Sub Dispose\n  implements:\n  - System.IDisposable.Dispose\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: X509Chain.Dispose()\n- uid: System.Security.Cryptography.X509Certificates.X509Chain.Dispose(System.Boolean)\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Chain.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Security.Cryptography.X509Certificates.X509Chain\n  langs:\n  - csharp\n  - vb\n  name: Dispose(Boolean)\n  fullName: System.Security.Cryptography.X509Certificates.X509Chain.Dispose(System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Dispose\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 226\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Releases the unmanaged resources used by this <xref href=\\\"System.Security.Cryptography.X509Certificates.X509Chain\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, and optionally releases the managed resources.</p>\\n\"\n  syntax:\n    content: protected virtual void Dispose(bool disposing)\n    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to release both managed and unmanaged resources; <strong>false</strong> to release only unmanaged resources.</p>\\n\"\n  modifiers.csharp:\n  - protected\n  - virtual\n  modifiers.vb:\n  - Protected\n  - Overridable\n  nameWithType: X509Chain.Dispose(Boolean)\nreferences:\n- uid: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: System.Security.Cryptography.X509Certificates\n  fullName: System.Security.Cryptography.X509Certificates\n  commentId: N:System.Security.Cryptography.X509Certificates\n  nameWithType: System.Security.Cryptography.X509Certificates\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  fullName: System.IDisposable\n  commentId: T:System.IDisposable\n  nameWithType: IDisposable\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Security.Cryptography.X509Certificates.X509ChainElementCollection\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509ChainElementCollection\n  fullName: System.Security.Cryptography.X509Certificates.X509ChainElementCollection\n  commentId: T:System.Security.Cryptography.X509Certificates.X509ChainElementCollection\n  nameWithType: X509ChainElementCollection\n- uid: System.Security.Cryptography.X509Certificates.X509ChainPolicy\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509ChainPolicy\n  fullName: System.Security.Cryptography.X509Certificates.X509ChainPolicy\n  commentId: T:System.Security.Cryptography.X509Certificates.X509ChainPolicy\n  nameWithType: X509ChainPolicy\n- uid: System.Security.Cryptography.X509Certificates.X509ChainStatus[]\n  name: X509ChainStatus[]\n  fullName: System.Security.Cryptography.X509Certificates.X509ChainStatus[]\n  fullname.vb: System.Security.Cryptography.X509Certificates.X509ChainStatus()\n  name.vb: X509ChainStatus()\n  spec.csharp:\n  - uid: System.Security.Cryptography.X509Certificates.X509ChainStatus\n    name: X509ChainStatus\n    fullName: System.Security.Cryptography.X509Certificates.X509ChainStatus\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Security.Cryptography.X509Certificates.X509ChainStatus\n    name: X509ChainStatus\n    fullName: System.Security.Cryptography.X509Certificates.X509ChainStatus\n  - name: ()\n    fullName: ()\n  nameWithType: X509ChainStatus[]\n  nameWithType.vb: X509ChainStatus()\n- uid: Microsoft.Win32.SafeHandles.SafeX509ChainHandle\n  parent: Microsoft.Win32.SafeHandles\n  isExternal: false\n  name: SafeX509ChainHandle\n  fullName: Microsoft.Win32.SafeHandles.SafeX509ChainHandle\n  commentId: T:Microsoft.Win32.SafeHandles.SafeX509ChainHandle\n  nameWithType: SafeX509ChainHandle\n- uid: Microsoft.Win32.SafeHandles\n  isExternal: false\n  name: Microsoft.Win32.SafeHandles\n  fullName: Microsoft.Win32.SafeHandles\n  commentId: N:Microsoft.Win32.SafeHandles\n  nameWithType: Microsoft.Win32.SafeHandles\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate2\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509Certificate2\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2\n  commentId: T:System.Security.Cryptography.X509Certificates.X509Certificate2\n  nameWithType: X509Certificate2\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.IDisposable.Dispose\n  parent: System.IDisposable\n  isExternal: false\n  name: Dispose()\n  fullName: System.IDisposable.Dispose()\n  spec.csharp:\n  - uid: System.IDisposable.Dispose\n    name: Dispose\n    fullName: System.IDisposable.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IDisposable.Dispose\n    name: Dispose\n    fullName: System.IDisposable.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.IDisposable.Dispose\n  nameWithType: IDisposable.Dispose()\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n- uid: System.Security.Cryptography.CryptographicException\n  isExternal: false\n  name: CryptographicException\n  fullName: System.Security.Cryptography.CryptographicException\n  commentId: T:System.Security.Cryptography.CryptographicException\n  nameWithType: CryptographicException\n"}