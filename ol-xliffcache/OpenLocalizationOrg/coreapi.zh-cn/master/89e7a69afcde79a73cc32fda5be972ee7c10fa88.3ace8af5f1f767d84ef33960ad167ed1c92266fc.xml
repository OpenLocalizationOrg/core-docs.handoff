{"nodes":[{"pos":[2110,2115],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[3793,3801],"content":"MaxValue","needQuote":true,"nodes":[{"content":"MaxValue","pos":[0,8]}]},{"pos":[4776,4784],"content":"MinValue","needQuote":true,"nodes":[{"content":"MinValue","pos":[0,8]}]},{"pos":[5804,5820],"content":"CompareTo(Int32)","needQuote":true,"nodes":[{"content":"CompareTo(Int32)","pos":[0,16]}]},{"content":"\\n&lt;p&gt;An integer to compare.","pos":[6494,6521],"source":"\\n<p>An integer to compare."},{"content":"&lt;/p&gt;\\n","pos":[6522,6528],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A signed number indicating the relative values of this instance and &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\\n&lt;p&gt;Return Value &lt;/p&gt;\\n&lt;p&gt;Description &lt;/p&gt;\\n&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;\\n&lt;p&gt;Less than zero &lt;/p&gt;\\n&lt;/td&gt;&lt;td&gt;\\n&lt;p&gt;This instance is less than &lt;em&gt;value&lt;/em&gt;.","pos":[6587,6828],"source":"\\n<p>A signed number indicating the relative values of this instance and <em>value</em>.</p>\\n<p>Return Value </p>\\n<p>Description </p>\\n<table><tbody><tr><td>\\n<p>Less than zero </p>\\n</td><td>\\n<p>This instance is less than <em>value</em>."},{"content":"&lt;/p&gt;\\n&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;\\n&lt;p&gt;Zero &lt;/p&gt;\\n&lt;/td&gt;&lt;td&gt;\\n&lt;p&gt;This instance is equal to &lt;em&gt;value&lt;/em&gt;.","pos":[6829,6924],"source":" </p>\\n</td></tr><tr><td>\\n<p>Zero </p>\\n</td><td>\\n<p>This instance is equal to <em>value</em>."},{"content":"&lt;/p&gt;\\n&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;\\n&lt;p&gt;Greater than zero &lt;/p&gt;\\n&lt;/td&gt;&lt;td&gt;\\n&lt;p&gt;This instance is greater than &lt;em&gt;value&lt;/em&gt;.","pos":[6925,7037],"source":" </p>\\n</td></tr><tr><td>\\n<p>Greater than zero </p>\\n</td><td>\\n<p>This instance is greater than <em>value</em>."},{"content":"&lt;/p&gt;\\n&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\\n","pos":[7038,7072],"source":" </p>\\n</td></tr></tbody></table>\\n"},{"pos":[7584,7597],"content":"Equals(Int32)","needQuote":true,"nodes":[{"content":"Equals(Int32)","pos":[0,13]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if &lt;em&gt;obj&lt;/em&gt; has the same value as this instance; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[8544,8666],"source":"\\n<p>\\n<strong>true</strong> if <em>obj</em> has the same value as this instance; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[9011,9025],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"content":"\\n&lt;p&gt;An object to compare with this instance.","pos":[9674,9719],"source":"\\n<p>An object to compare with this instance."},{"content":"&lt;/p&gt;\\n","pos":[9720,9726],"source":" </p>\\n"},{"pos":[10441,10454],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"content":"\\n&lt;p&gt;A 32-bit signed integer hash code.&lt;/p&gt;\\n","pos":[11025,11070],"source":"\\n<p>A 32-bit signed integer hash code.</p>\\n"},{"pos":[11411,11424],"content":"Parse(String)","needQuote":true,"nodes":[{"content":"Parse(String)","pos":[0,13]}]},{"content":"\\n&lt;p&gt;A string containing a number to convert.","pos":[12065,12110],"source":"\\n<p>A string containing a number to convert."},{"content":"&lt;/p&gt;\\n","pos":[12111,12117],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A 32-bit signed integer equivalent to the number contained in &lt;em&gt;s&lt;/em&gt;.&lt;/p&gt;\\n","pos":[12176,12260],"source":"\\n<p>A 32-bit signed integer equivalent to the number contained in <em>s</em>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;s&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[12379,12422],"source":"\\n<p>\\n<em>s</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[12423,12429],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;s&lt;/em&gt; is not in the correct format.","pos":[12522,12569],"source":"\\n<p>\\n<em>s</em> is not in the correct format."},{"content":"&lt;/p&gt;\\n","pos":[12570,12576],"source":" </p>\\n"},{"pos":[13385,13412],"content":"Parse(String, NumberStyles)","needQuote":true,"nodes":[{"content":"Parse(String, NumberStyles)","pos":[0,27]}]},{"content":"\\n&lt;p&gt;A string containing a number to convert.","pos":[14152,14197],"source":"\\n<p>A string containing a number to convert."},{"content":"&lt;/p&gt;\\n","pos":[14198,14204],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A 32-bit signed integer equivalent to the number specified in &lt;em&gt;s&lt;/em&gt;.&lt;/p&gt;\\n","pos":[14607,14691],"source":"\\n<p>A 32-bit signed integer equivalent to the number specified in <em>s</em>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;s&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[14810,14853],"source":"\\n<p>\\n<em>s</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[14854,14860],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;s&lt;/em&gt; is not in a format compliant with &lt;em&gt;style&lt;/em&gt;.","pos":[15478,15545],"source":"\\n<p>\\n<em>s</em> is not in a format compliant with <em>style</em>."},{"content":"&lt;/p&gt;\\n","pos":[15546,15552],"source":" </p>\\n"},{"pos":[16759,16803],"content":"Parse(String, NumberStyles, IFormatProvider)","needQuote":true,"nodes":[{"content":"Parse(String, NumberStyles, IFormatProvider)","pos":[0,44]}]},{"content":"\\n&lt;p&gt;A string containing a number to convert.","pos":[17650,17695],"source":"\\n<p>A string containing a number to convert."},{"content":"&lt;/p&gt;\\n","pos":[17696,17702],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An object that supplies culture-specific information about the format of &lt;em&gt;s&lt;/em&gt;.","pos":[18118,18207],"source":"\\n<p>An object that supplies culture-specific information about the format of <em>s</em>."},{"content":"&lt;/p&gt;\\n","pos":[18208,18214],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A 32-bit signed integer equivalent to the number specified in &lt;em&gt;s&lt;/em&gt;.&lt;/p&gt;\\n","pos":[18273,18357],"source":"\\n<p>A 32-bit signed integer equivalent to the number specified in <em>s</em>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;s&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[18476,18519],"source":"\\n<p>\\n<em>s</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[18520,18526],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;s&lt;/em&gt; is not in a format compliant with &lt;em&gt;style&lt;/em&gt;.","pos":[19144,19211],"source":"\\n<p>\\n<em>s</em> is not in a format compliant with <em>style</em>."},{"content":"&lt;/p&gt;\\n","pos":[19212,19218],"source":" </p>\\n"},{"pos":[20097,20127],"content":"Parse(String, IFormatProvider)","needQuote":true,"nodes":[{"content":"Parse(String, IFormatProvider)","pos":[0,30]}]},{"content":"\\n&lt;p&gt;A string containing a number to convert.","pos":[20886,20931],"source":"\\n<p>A string containing a number to convert."},{"content":"&lt;/p&gt;\\n","pos":[20932,20938],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An object that supplies culture-specific formatting information about &lt;em&gt;s&lt;/em&gt;.","pos":[21014,21100],"source":"\\n<p>An object that supplies culture-specific formatting information about <em>s</em>."},{"content":"&lt;/p&gt;\\n","pos":[21101,21107],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A 32-bit signed integer equivalent to the number specified in &lt;em&gt;s&lt;/em&gt;.&lt;/p&gt;\\n","pos":[21166,21250],"source":"\\n<p>A 32-bit signed integer equivalent to the number specified in <em>s</em>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;s&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[21369,21412],"source":"\\n<p>\\n<em>s</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[21413,21419],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;s&lt;/em&gt; is not of the correct format.","pos":[21512,21559],"source":"\\n<p>\\n<em>s</em> is not of the correct format."},{"content":"&lt;/p&gt;\\n","pos":[21560,21566],"source":" </p>\\n"},{"pos":[22616,22645],"content":"IComparable.CompareTo(Object)","needQuote":true,"nodes":[{"content":"IComparable.CompareTo(Object)","pos":[0,29]}]},{"pos":[23755,23781],"content":"IConvertible.GetTypeCode()","needQuote":true,"nodes":[{"content":"IConvertible.GetTypeCode()","pos":[0,26]}]},{"pos":[24860,24899],"content":"IConvertible.ToBoolean(IFormatProvider)","needQuote":true,"nodes":[{"content":"IConvertible.ToBoolean(IFormatProvider)","pos":[0,39]}]},{"content":"\\n&lt;p&gt;This parameter is ignored.&lt;/p&gt;\\n","pos":[25759,25796],"source":"\\n<p>This parameter is ignored.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the value of the current instance is not zero; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[25857,25976],"source":"\\n<p>\\n<strong>true</strong> if the value of the current instance is not zero; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[26521,26557],"content":"IConvertible.ToByte(IFormatProvider)","needQuote":true,"nodes":[{"content":"IConvertible.ToByte(IFormatProvider)","pos":[0,36]}]},{"content":"\\n&lt;p&gt;This parameter is ignored.&lt;/p&gt;\\n","pos":[27396,27433],"source":"\\n<p>This parameter is ignored.</p>\\n"},{"pos":[28157,28193],"content":"IConvertible.ToChar(IFormatProvider)","needQuote":true,"nodes":[{"content":"IConvertible.ToChar(IFormatProvider)","pos":[0,36]}]},{"content":"\\n&lt;p&gt;This parameter is ignored.&lt;/p&gt;\\n","pos":[29032,29069],"source":"\\n<p>This parameter is ignored.</p>\\n"},{"pos":[29805,29845],"content":"IConvertible.ToDateTime(IFormatProvider)","needQuote":true,"nodes":[{"content":"IConvertible.ToDateTime(IFormatProvider)","pos":[0,40]}]},{"content":"\\n&lt;p&gt;This parameter is ignored.&lt;/p&gt;\\n","pos":[30720,30757],"source":"\\n<p>This parameter is ignored.</p>\\n"},{"content":"\\n&lt;p&gt;This conversion is not supported.","pos":[30819,30857],"source":"\\n<p>This conversion is not supported."},{"content":"No value is returned.&lt;/p&gt;\\n","pos":[30858,30885],"source":" No value is returned.</p>\\n"},{"content":"\\n&lt;p&gt;In all cases.&lt;/p&gt;\\n","pos":[31002,31026],"source":"\\n<p>In all cases.</p>\\n"},{"pos":[31584,31623],"content":"IConvertible.ToDecimal(IFormatProvider)","needQuote":true,"nodes":[{"content":"IConvertible.ToDecimal(IFormatProvider)","pos":[0,39]}]},{"content":"\\n&lt;p&gt;This parameter is ignored.&lt;/p&gt;\\n","pos":[32485,32522],"source":"\\n<p>This parameter is ignored.</p>\\n"},{"pos":[33270,33308],"content":"IConvertible.ToDouble(IFormatProvider)","needQuote":true,"nodes":[{"content":"IConvertible.ToDouble(IFormatProvider)","pos":[0,38]}]},{"content":"\\n&lt;p&gt;This parameter is ignored.&lt;/p&gt;\\n","pos":[34163,34200],"source":"\\n<p>This parameter is ignored.</p>\\n"},{"pos":[34939,34976],"content":"IConvertible.ToInt16(IFormatProvider)","needQuote":true,"nodes":[{"content":"IConvertible.ToInt16(IFormatProvider)","pos":[0,37]}]},{"content":"\\n&lt;p&gt;This parameter is ignored.&lt;/p&gt;\\n","pos":[35823,35860],"source":"\\n<p>This parameter is ignored.</p>\\n"},{"pos":[36594,36631],"content":"IConvertible.ToInt32(IFormatProvider)","needQuote":true,"nodes":[{"content":"IConvertible.ToInt32(IFormatProvider)","pos":[0,37]}]},{"content":"\\n&lt;p&gt;This parameter is ignored.&lt;/p&gt;\\n","pos":[37478,37515],"source":"\\n<p>This parameter is ignored.</p>\\n"},{"content":"\\n&lt;p&gt;The value of the current instance, unchanged.&lt;/p&gt;\\n","pos":[37574,37630],"source":"\\n<p>The value of the current instance, unchanged.</p>\\n"},{"pos":[38170,38207],"content":"IConvertible.ToInt64(IFormatProvider)","needQuote":true,"nodes":[{"content":"IConvertible.ToInt64(IFormatProvider)","pos":[0,37]}]},{"content":"\\n&lt;p&gt;This parameter is ignored.&lt;/p&gt;\\n","pos":[39052,39089],"source":"\\n<p>This parameter is ignored.</p>\\n"},{"pos":[39823,39860],"content":"IConvertible.ToSByte(IFormatProvider)","needQuote":true,"nodes":[{"content":"IConvertible.ToSByte(IFormatProvider)","pos":[0,37]}]},{"content":"\\n&lt;p&gt;This parameter is ignored.&lt;/p&gt;\\n","pos":[40707,40744],"source":"\\n<p>This parameter is ignored.</p>\\n"},{"pos":[41481,41519],"content":"IConvertible.ToSingle(IFormatProvider)","needQuote":true,"nodes":[{"content":"IConvertible.ToSingle(IFormatProvider)","pos":[0,38]}]},{"content":"\\n&lt;p&gt;This parameter is ignored.&lt;/p&gt;\\n","pos":[42373,42410],"source":"\\n<p>This parameter is ignored.</p>\\n"},{"pos":[43182,43224],"content":"IConvertible.ToType(Type, IFormatProvider)","needQuote":true,"nodes":[{"content":"IConvertible.ToType(Type, IFormatProvider)","pos":[0,42]}]},{"content":"\\n&lt;p&gt;An object that provides information about the format of the returned value.&lt;/p&gt;\\n","pos":[44302,44388],"source":"\\n<p>An object that provides information about the format of the returned value.</p>\\n"},{"content":"\\n&lt;p&gt;The value of the current instance, converted to &lt;em&gt;type&lt;/em&gt;.&lt;/p&gt;\\n","pos":[44448,44521],"source":"\\n<p>The value of the current instance, converted to <em>type</em>.</p>\\n"},{"pos":[45090,45128],"content":"IConvertible.ToUInt16(IFormatProvider)","needQuote":true,"nodes":[{"content":"IConvertible.ToUInt16(IFormatProvider)","pos":[0,38]}]},{"content":"\\n&lt;p&gt;This parameter is ignored.&lt;/p&gt;\\n","pos":[45983,46020],"source":"\\n<p>This parameter is ignored.</p>\\n"},{"pos":[46762,46800],"content":"IConvertible.ToUInt32(IFormatProvider)","needQuote":true,"nodes":[{"content":"IConvertible.ToUInt32(IFormatProvider)","pos":[0,38]}]},{"content":"\\n&lt;p&gt;This parameter is ignored.&lt;/p&gt;\\n","pos":[47655,47692],"source":"\\n<p>This parameter is ignored.</p>\\n"},{"pos":[48434,48472],"content":"IConvertible.ToUInt64(IFormatProvider)","needQuote":true,"nodes":[{"content":"IConvertible.ToUInt64(IFormatProvider)","pos":[0,38]}]},{"content":"\\n&lt;p&gt;This parameter is ignored.&lt;/p&gt;\\n","pos":[49325,49362],"source":"\\n<p>This parameter is ignored.</p>\\n"},{"pos":[49958,49968],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"content":"\\n&lt;p&gt;The string representation of the value of this instance, consisting of a negative sign if the value is negative, and a sequence of digits ranging from 0 to 9 with no leading zeroes.&lt;/p&gt;\\n","pos":[50652,50844],"source":"\\n<p>The string representation of the value of this instance, consisting of a negative sign if the value is negative, and a sequence of digits ranging from 0 to 9 with no leading zeroes.</p>\\n"},{"pos":[51376,51401],"content":"ToString(IFormatProvider)","needQuote":true,"nodes":[{"content":"ToString(IFormatProvider)","pos":[0,25]}]},{"content":"\\n&lt;p&gt;An object that supplies culture-specific formatting information.","pos":[52229,52298],"source":"\\n<p>An object that supplies culture-specific formatting information."},{"content":"&lt;/p&gt;\\n","pos":[52299,52305],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The string representation of the value of this instance as specified by &lt;em&gt;provider&lt;/em&gt;.&lt;/p&gt;\\n","pos":[52365,52466],"source":"\\n<p>The string representation of the value of this instance as specified by <em>provider</em>.</p>\\n"},{"pos":[52990,53006],"content":"ToString(String)","needQuote":true,"nodes":[{"content":"ToString(String)","pos":[0,16]}]},{"content":"\\n&lt;p&gt;A standard or custom numeric format string.&lt;/p&gt;\\n","pos":[53764,53818],"source":"\\n<p>A standard or custom numeric format string.</p>\\n"},{"content":"\\n&lt;p&gt;The string representation of the value of this instance as specified by &lt;em&gt;format&lt;/em&gt;.&lt;/p&gt;\\n","pos":[53878,53977],"source":"\\n<p>The string representation of the value of this instance as specified by <em>format</em>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;format&lt;/em&gt; is invalid or not supported.","pos":[54084,54135],"source":"\\n<p>\\n<em>format</em> is invalid or not supported."},{"content":"&lt;/p&gt;\\n","pos":[54136,54142],"source":" </p>\\n"},{"pos":[54655,54688],"content":"ToString(String, IFormatProvider)","needQuote":true,"nodes":[{"content":"ToString(String, IFormatProvider)","pos":[0,33]}]},{"content":"\\n&lt;p&gt;A standard or custom numeric format string.&lt;/p&gt;\\n","pos":[55565,55619],"source":"\\n<p>A standard or custom numeric format string.</p>\\n"},{"content":"\\n&lt;p&gt;An object that supplies culture-specific formatting information.","pos":[55695,55764],"source":"\\n<p>An object that supplies culture-specific formatting information."},{"content":"&lt;/p&gt;\\n","pos":[55765,55771],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The string representation of the value of this instance as specified by &lt;em&gt;format&lt;/em&gt; and &lt;em&gt;provider&lt;/em&gt;.&lt;/p&gt;\\n","pos":[55831,55952],"source":"\\n<p>The string representation of the value of this instance as specified by <em>format</em> and <em>provider</em>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;format&lt;/em&gt; is invalid or not supported.&lt;/p&gt;\\n","pos":[56059,56116],"source":"\\n<p>\\n<em>format</em> is invalid or not supported.</p>\\n"},{"pos":[56820,56878],"content":"TryParse(String, NumberStyles, IFormatProvider, out Int32)","needQuote":true,"nodes":[{"content":"TryParse(String, NumberStyles, IFormatProvider, out Int32)","pos":[0,58]}]},{"content":"\\n&lt;p&gt;A string containing a number to convert.","pos":[57856,57901],"source":"\\n<p>A string containing a number to convert."},{"content":"The string is interpreted using the style specified by &lt;em&gt;style&lt;/em&gt;.&lt;/p&gt;\\n","pos":[57902,57978],"source":" The string is interpreted using the style specified by <em>style</em>.</p>\\n"},{"content":"\\n&lt;p&gt;An object that supplies culture-specific formatting information about &lt;em&gt;s&lt;/em&gt;.","pos":[58394,58480],"source":"\\n<p>An object that supplies culture-specific formatting information about <em>s</em>."},{"content":"&lt;/p&gt;\\n","pos":[58481,58487],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if &lt;em&gt;s&lt;/em&gt; was converted successfully; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[59337,59448],"source":"\\n<p>\\n<strong>true</strong> if <em>s</em> was converted successfully; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[60937,60964],"content":"TryParse(String, out Int32)","needQuote":true,"nodes":[{"content":"TryParse(String, out Int32)","pos":[0,27]}]},{"content":"\\n&lt;p&gt;A string containing a number to convert.","pos":[61736,61781],"source":"\\n<p>A string containing a number to convert."},{"content":"&lt;/p&gt;\\n","pos":[61782,61788],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if &lt;em&gt;s&lt;/em&gt; was converted successfully; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[62618,62729],"source":"\\n<p>\\n<strong>true</strong> if <em>s</em> was converted successfully; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[63260,63266],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[63402,63413],"content":"IComparable","needQuote":true,"nodes":[{"content":"IComparable","pos":[0,11]}]},{"pos":[63607,63625],"content":"IComparable<Int32>","needQuote":true,"nodes":[{"content":"IComparable&lt;Int32&gt;","pos":[0,18],"source":"IComparable<Int32>"}]},{"pos":[63810,63821],"content":"IComparable","needQuote":true,"nodes":[{"content":"IComparable","pos":[0,11]}]},{"pos":[63865,63866],"content":"<","needQuote":true,"nodes":[]},{"pos":[63915,63920],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[64052,64063],"content":"IComparable","needQuote":true,"nodes":[{"content":"IComparable","pos":[0,11]}]},{"content":"(Of","pos":[64108,64111]},{"pos":[64167,64172],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[64231,64232],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[64445,64457],"content":"IConvertible","needQuote":true,"nodes":[{"content":"IConvertible","pos":[0,12]}]},{"pos":[64652,64669],"content":"IEquatable<Int32>","needQuote":true,"nodes":[{"content":"IEquatable&lt;Int32&gt;","pos":[0,17],"source":"IEquatable<Int32>"}]},{"pos":[64850,64860],"content":"IEquatable","needQuote":true,"nodes":[{"content":"IEquatable","pos":[0,10]}]},{"pos":[64903,64904],"content":"<","needQuote":true,"nodes":[]},{"pos":[64953,64958],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[65089,65099],"content":"IEquatable","needQuote":true,"nodes":[{"content":"IEquatable","pos":[0,10]}]},{"content":"(Of","pos":[65143,65146]},{"pos":[65202,65207],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[65266,65267],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[65477,65489],"content":"IFormattable","needQuote":true,"nodes":[{"content":"IFormattable","pos":[0,12]}]},{"pos":[65694,65716],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[65864,65870],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[65937,65938],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[65988,65994],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[66055,66056]},{"pos":[66111,66117],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[66177,66178],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[66275,66281],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[66348,66349],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[66399,66405],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[66466,66467]},{"pos":[66522,66528],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[66588,66589],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[66834,66865],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[67031,67046],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[67122,67123],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[67173,67179],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[67240,67241]},{"pos":[67296,67302],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[67362,67363],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[67469,67484],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[67560,67561],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[67611,67617],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[67678,67679]},{"pos":[67734,67740],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[67800,67801],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[68027,68036],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[68129,68136],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[68204,68205],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[68232,68233],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[68302,68309],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[68377,68378],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[68405,68406],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[68549,68563],"content":"IComparable<T>","needQuote":true,"nodes":[{"content":"IComparable&lt;T&gt;","pos":[0,14],"source":"IComparable<T>"}]},{"pos":[68722,68733],"content":"IComparable","needQuote":true,"nodes":[{"content":"IComparable","pos":[0,11]}]},{"pos":[68777,68778],"content":"<","needQuote":true,"nodes":[]},{"pos":[68805,68806],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[68906,68917],"content":"IComparable","needQuote":true,"nodes":[{"content":"IComparable","pos":[0,11]}]},{"content":"(Of","pos":[68962,68965]},{"pos":[68999,69000],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[69027,69028],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[69204,69217],"content":"IEquatable<T>","needQuote":true,"nodes":[{"content":"IEquatable&lt;T&gt;","pos":[0,13],"source":"IEquatable<T>"}]},{"pos":[69372,69382],"content":"IEquatable","needQuote":true,"nodes":[{"content":"IEquatable","pos":[0,10]}]},{"pos":[69425,69426],"content":"<","needQuote":true,"nodes":[]},{"pos":[69453,69454],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[69553,69563],"content":"IEquatable","needQuote":true,"nodes":[{"content":"IEquatable","pos":[0,10]}]},{"content":"(Of","pos":[69607,69610]},{"pos":[69644,69645],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[69672,69673],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[69857,69863],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[70007,70012],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[70252,70268],"content":"CompareTo(Int32)","needQuote":true,"nodes":[{"content":"CompareTo(Int32)","pos":[0,16]}]},{"pos":[70482,70491],"content":"CompareTo","needQuote":true,"nodes":[{"content":"CompareTo","pos":[0,9]}]},{"pos":[70559,70560],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[70609,70614],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[70673,70674],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[70756,70765],"content":"CompareTo","needQuote":true,"nodes":[{"content":"CompareTo","pos":[0,9]}]},{"pos":[70836,70837],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[70886,70891],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[70950,70951],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[71220,71232],"content":"CompareTo(T)","needQuote":true,"nodes":[{"content":"CompareTo(T)","pos":[0,12]}]},{"pos":[71402,71411],"content":"CompareTo","needQuote":true,"nodes":[{"content":"CompareTo","pos":[0,9]}]},{"pos":[71468,71469],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[71496,71497],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[71524,71525],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[71607,71616],"content":"CompareTo","needQuote":true,"nodes":[{"content":"CompareTo","pos":[0,9]}]},{"pos":[71676,71677],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[71704,71705],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[71732,71733],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[72049,72062],"content":"Equals(Int32)","needQuote":true,"nodes":[{"content":"Equals(Int32)","pos":[0,13]}]},{"pos":[72264,72270],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[72334,72335],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[72384,72389],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[72448,72449],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[72527,72533],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[72600,72601],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[72650,72655],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[72714,72715],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[72969,72976],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[73124,73133],"content":"Equals(T)","needQuote":true,"nodes":[{"content":"Equals(T)","pos":[0,9]}]},{"pos":[73291,73297],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[73350,73351],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[73378,73379],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[73406,73407],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[73485,73491],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[73547,73548],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[73575,73576],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[73603,73604],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[73853,73867],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[73992,73998],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[74047,74048],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[74098,74104],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[74164,74165],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[74251,74257],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[74306,74307],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[74357,74363],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[74423,74424],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[74605,74614],"content":"ValueType","needQuote":true,"nodes":[{"content":"ValueType","pos":[0,9]}]},{"pos":[74793,74806],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[74913,74924],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[74978,74979],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[75006,75007],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[75083,75094],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[75148,75149],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[75176,75177],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[75344,75350],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[75529,75541],"content":"NumberStyles","needQuote":true,"nodes":[{"content":"NumberStyles","pos":[0,12]}]},{"pos":[75722,75742],"content":"System.Globalization","needQuote":true,"nodes":[{"content":"System.Globalization","pos":[0,20]}]},{"pos":[75924,75939],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[76152,76169],"content":"CompareTo(Object)","needQuote":true,"nodes":[{"content":"CompareTo(Object)","pos":[0,17]}]},{"pos":[76304,76313],"content":"CompareTo","needQuote":true,"nodes":[{"content":"CompareTo","pos":[0,9]}]},{"pos":[76367,76368],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[76418,76424],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[76484,76485],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[76576,76585],"content":"CompareTo","needQuote":true,"nodes":[{"content":"CompareTo","pos":[0,9]}]},{"pos":[76639,76640],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[76690,76696],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[76756,76757],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[76976,76989],"content":"GetTypeCode()","needQuote":true,"nodes":[{"content":"GetTypeCode()","pos":[0,13]}]},{"pos":[77102,77113],"content":"GetTypeCode","needQuote":true,"nodes":[{"content":"GetTypeCode","pos":[0,11]}]},{"pos":[77170,77171],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[77198,77199],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[77278,77289],"content":"GetTypeCode","needQuote":true,"nodes":[{"content":"GetTypeCode","pos":[0,11]}]},{"pos":[77346,77347],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[77374,77375],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[77550,77558],"content":"TypeCode","needQuote":true,"nodes":[{"content":"TypeCode","pos":[0,8]}]},{"pos":[77762,77788],"content":"ToBoolean(IFormatProvider)","needQuote":true,"nodes":[{"content":"ToBoolean(IFormatProvider)","pos":[0,26]}]},{"pos":[77943,77952],"content":"ToBoolean","needQuote":true,"nodes":[{"content":"ToBoolean","pos":[0,9]}]},{"pos":[78007,78008],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[78067,78082],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[78130,78131],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[78232,78241],"content":"ToBoolean","needQuote":true,"nodes":[{"content":"ToBoolean","pos":[0,9]}]},{"pos":[78296,78297],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[78356,78371],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[78419,78420],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[78678,78701],"content":"ToByte(IFormatProvider)","needQuote":true,"nodes":[{"content":"ToByte(IFormatProvider)","pos":[0,23]}]},{"pos":[78850,78856],"content":"ToByte","needQuote":true,"nodes":[{"content":"ToByte","pos":[0,6]}]},{"pos":[78908,78909],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[78968,78983],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[79031,79032],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[79130,79136],"content":"ToByte","needQuote":true,"nodes":[{"content":"ToByte","pos":[0,6]}]},{"pos":[79188,79189],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[79248,79263],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[79311,79312],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[79512,79516],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[79705,79728],"content":"ToChar(IFormatProvider)","needQuote":true,"nodes":[{"content":"ToChar(IFormatProvider)","pos":[0,23]}]},{"pos":[79877,79883],"content":"ToChar","needQuote":true,"nodes":[{"content":"ToChar","pos":[0,6]}]},{"pos":[79935,79936],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[79995,80010],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[80058,80059],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[80157,80163],"content":"ToChar","needQuote":true,"nodes":[{"content":"ToChar","pos":[0,6]}]},{"pos":[80215,80216],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[80275,80290],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[80338,80339],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[80539,80543],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[80736,80763],"content":"ToDateTime(IFormatProvider)","needQuote":true,"nodes":[{"content":"ToDateTime(IFormatProvider)","pos":[0,27]}]},{"pos":[80920,80930],"content":"ToDateTime","needQuote":true,"nodes":[{"content":"ToDateTime","pos":[0,10]}]},{"pos":[80986,80987],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[81046,81061],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[81109,81110],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[81212,81222],"content":"ToDateTime","needQuote":true,"nodes":[{"content":"ToDateTime","pos":[0,10]}]},{"pos":[81278,81279],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[81338,81353],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[81401,81402],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[81614,81622],"content":"DateTime","needQuote":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[81826,81852],"content":"ToDecimal(IFormatProvider)","needQuote":true,"nodes":[{"content":"ToDecimal(IFormatProvider)","pos":[0,26]}]},{"pos":[82007,82016],"content":"ToDecimal","needQuote":true,"nodes":[{"content":"ToDecimal","pos":[0,9]}]},{"pos":[82071,82072],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[82131,82146],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[82194,82195],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[82296,82305],"content":"ToDecimal","needQuote":true,"nodes":[{"content":"ToDecimal","pos":[0,9]}]},{"pos":[82360,82361],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[82420,82435],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[82483,82484],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[82693,82700],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[82900,82925],"content":"ToDouble(IFormatProvider)","needQuote":true,"nodes":[{"content":"ToDouble(IFormatProvider)","pos":[0,25]}]},{"pos":[83078,83086],"content":"ToDouble","needQuote":true,"nodes":[{"content":"ToDouble","pos":[0,8]}]},{"pos":[83140,83141],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[83200,83215],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[83263,83264],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[83364,83372],"content":"ToDouble","needQuote":true,"nodes":[{"content":"ToDouble","pos":[0,8]}]},{"pos":[83426,83427],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[83486,83501],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[83549,83550],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[83756,83762],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[83958,83982],"content":"ToInt16(IFormatProvider)","needQuote":true,"nodes":[{"content":"ToInt16(IFormatProvider)","pos":[0,24]}]},{"pos":[84133,84140],"content":"ToInt16","needQuote":true,"nodes":[{"content":"ToInt16","pos":[0,7]}]},{"pos":[84193,84194],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[84253,84268],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[84316,84317],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[84416,84423],"content":"ToInt16","needQuote":true,"nodes":[{"content":"ToInt16","pos":[0,7]}]},{"pos":[84476,84477],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[84536,84551],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[84599,84600],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[84803,84808],"content":"Int16","needQuote":true,"nodes":[{"content":"Int16","pos":[0,5]}]},{"pos":[85001,85025],"content":"ToInt32(IFormatProvider)","needQuote":true,"nodes":[{"content":"ToInt32(IFormatProvider)","pos":[0,24]}]},{"pos":[85176,85183],"content":"ToInt32","needQuote":true,"nodes":[{"content":"ToInt32","pos":[0,7]}]},{"pos":[85236,85237],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[85296,85311],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[85359,85360],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[85459,85466],"content":"ToInt32","needQuote":true,"nodes":[{"content":"ToInt32","pos":[0,7]}]},{"pos":[85519,85520],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[85579,85594],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[85642,85643],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[85898,85922],"content":"ToInt64(IFormatProvider)","needQuote":true,"nodes":[{"content":"ToInt64(IFormatProvider)","pos":[0,24]}]},{"pos":[86073,86080],"content":"ToInt64","needQuote":true,"nodes":[{"content":"ToInt64","pos":[0,7]}]},{"pos":[86133,86134],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[86193,86208],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[86256,86257],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[86356,86363],"content":"ToInt64","needQuote":true,"nodes":[{"content":"ToInt64","pos":[0,7]}]},{"pos":[86416,86417],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[86476,86491],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[86539,86540],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[86743,86748],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[86941,86965],"content":"ToSByte(IFormatProvider)","needQuote":true,"nodes":[{"content":"ToSByte(IFormatProvider)","pos":[0,24]}]},{"pos":[87116,87123],"content":"ToSByte","needQuote":true,"nodes":[{"content":"ToSByte","pos":[0,7]}]},{"pos":[87176,87177],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[87236,87251],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[87299,87300],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[87399,87406],"content":"ToSByte","needQuote":true,"nodes":[{"content":"ToSByte","pos":[0,7]}]},{"pos":[87459,87460],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[87519,87534],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[87582,87583],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[87786,87791],"content":"SByte","needQuote":true,"nodes":[{"content":"SByte","pos":[0,5]}]},{"pos":[87985,88010],"content":"ToSingle(IFormatProvider)","needQuote":true,"nodes":[{"content":"ToSingle(IFormatProvider)","pos":[0,25]}]},{"pos":[88163,88171],"content":"ToSingle","needQuote":true,"nodes":[{"content":"ToSingle","pos":[0,8]}]},{"pos":[88225,88226],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[88285,88300],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[88348,88349],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[88449,88457],"content":"ToSingle","needQuote":true,"nodes":[{"content":"ToSingle","pos":[0,8]}]},{"pos":[88511,88512],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[88571,88586],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[88634,88635],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[88841,88847],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[89054,89083],"content":"ToType(Type, IFormatProvider)","needQuote":true,"nodes":[{"content":"ToType(Type, IFormatProvider)","pos":[0,29]}]},{"pos":[89257,89263],"content":"ToType","needQuote":true,"nodes":[{"content":"ToType","pos":[0,6]}]},{"pos":[89315,89316],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[89364,89368],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[89406,89407]},{"pos":[89471,89486],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[89534,89535],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[89645,89651],"content":"ToType","needQuote":true,"nodes":[{"content":"ToType","pos":[0,6]}]},{"pos":[89703,89704],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[89752,89756],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[89794,89795]},{"pos":[89859,89874],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[89922,89923],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[90141,90145],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[90336,90361],"content":"ToUInt16(IFormatProvider)","needQuote":true,"nodes":[{"content":"ToUInt16(IFormatProvider)","pos":[0,25]}]},{"pos":[90514,90522],"content":"ToUInt16","needQuote":true,"nodes":[{"content":"ToUInt16","pos":[0,8]}]},{"pos":[90576,90577],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[90636,90651],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[90699,90700],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[90800,90808],"content":"ToUInt16","needQuote":true,"nodes":[{"content":"ToUInt16","pos":[0,8]}]},{"pos":[90862,90863],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[90922,90937],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[90985,90986],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[91192,91198],"content":"UInt16","needQuote":true,"nodes":[{"content":"UInt16","pos":[0,6]}]},{"pos":[91395,91420],"content":"ToUInt32(IFormatProvider)","needQuote":true,"nodes":[{"content":"ToUInt32(IFormatProvider)","pos":[0,25]}]},{"pos":[91573,91581],"content":"ToUInt32","needQuote":true,"nodes":[{"content":"ToUInt32","pos":[0,8]}]},{"pos":[91635,91636],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[91695,91710],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[91758,91759],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[91859,91867],"content":"ToUInt32","needQuote":true,"nodes":[{"content":"ToUInt32","pos":[0,8]}]},{"pos":[91921,91922],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[91981,91996],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[92044,92045],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[92251,92257],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[92454,92479],"content":"ToUInt64(IFormatProvider)","needQuote":true,"nodes":[{"content":"ToUInt64(IFormatProvider)","pos":[0,25]}]},{"pos":[92632,92640],"content":"ToUInt64","needQuote":true,"nodes":[{"content":"ToUInt64","pos":[0,8]}]},{"pos":[92694,92695],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[92754,92769],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[92817,92818],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[92918,92926],"content":"ToUInt64","needQuote":true,"nodes":[{"content":"ToUInt64","pos":[0,8]}]},{"pos":[92980,92981],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[93040,93055],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[93103,93104],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[93310,93316],"content":"UInt64","needQuote":true,"nodes":[{"content":"UInt64","pos":[0,6]}]},{"pos":[93483,93493],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[93594,93602],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[93653,93654],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[93681,93682],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[93755,93763],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[93814,93815],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[93842,93843],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[94056,94081],"content":"ToString(IFormatProvider)","needQuote":true,"nodes":[{"content":"ToString(IFormatProvider)","pos":[0,25]}]},{"pos":[94234,94242],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[94296,94297],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[94356,94371],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[94419,94420],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[94520,94528],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[94582,94583],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[94642,94657],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[94705,94706],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[94977,95010],"content":"ToString(String, IFormatProvider)","needQuote":true,"nodes":[{"content":"ToString(String, IFormatProvider)","pos":[0,33]}]},{"pos":[95192,95200],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[95254,95255],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[95305,95311],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[95372,95373]},{"pos":[95437,95452],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[95500,95501],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[95615,95623],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[95677,95678],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[95728,95734],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[95795,95796]},{"pos":[95860,95875],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[95923,95924],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[96150,96171],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[96370,96385],"content":"FormatException","needQuote":true,"nodes":[{"content":"FormatException","pos":[0,15]}]},{"pos":[96551,96568],"content":"OverflowException","needQuote":true,"nodes":[{"content":"OverflowException","pos":[0,17]}]},{"pos":[96757,96774],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]},{"pos":[96949,96969],"content":"InvalidCastException","needQuote":true,"nodes":[{"content":"InvalidCastException","pos":[0,20]}]}],"content":"items:\n- uid: System.Int32\n  commentId: T:System.Int32\n  id: Int32\n  parent: System\n  children:\n  - System.Int32.CompareTo(System.Int32)\n  - System.Int32.Equals(System.Int32)\n  - System.Int32.Equals(System.Object)\n  - System.Int32.GetHashCode\n  - System.Int32.MaxValue\n  - System.Int32.MinValue\n  - System.Int32.Parse(System.String)\n  - System.Int32.Parse(System.String,System.Globalization.NumberStyles)\n  - System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)\n  - System.Int32.Parse(System.String,System.IFormatProvider)\n  - System.Int32.System#IComparable#CompareTo(System.Object)\n  - System.Int32.System#IConvertible#GetTypeCode\n  - System.Int32.System#IConvertible#ToBoolean(System.IFormatProvider)\n  - System.Int32.System#IConvertible#ToByte(System.IFormatProvider)\n  - System.Int32.System#IConvertible#ToChar(System.IFormatProvider)\n  - System.Int32.System#IConvertible#ToDateTime(System.IFormatProvider)\n  - System.Int32.System#IConvertible#ToDecimal(System.IFormatProvider)\n  - System.Int32.System#IConvertible#ToDouble(System.IFormatProvider)\n  - System.Int32.System#IConvertible#ToInt16(System.IFormatProvider)\n  - System.Int32.System#IConvertible#ToInt32(System.IFormatProvider)\n  - System.Int32.System#IConvertible#ToInt64(System.IFormatProvider)\n  - System.Int32.System#IConvertible#ToSByte(System.IFormatProvider)\n  - System.Int32.System#IConvertible#ToSingle(System.IFormatProvider)\n  - System.Int32.System#IConvertible#ToType(System.Type,System.IFormatProvider)\n  - System.Int32.System#IConvertible#ToUInt16(System.IFormatProvider)\n  - System.Int32.System#IConvertible#ToUInt32(System.IFormatProvider)\n  - System.Int32.System#IConvertible#ToUInt64(System.IFormatProvider)\n  - System.Int32.ToString\n  - System.Int32.ToString(System.IFormatProvider)\n  - System.Int32.ToString(System.String)\n  - System.Int32.ToString(System.String,System.IFormatProvider)\n  - System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)\n  - System.Int32.TryParse(System.String,System.Int32@)\n  langs:\n  - csharp\n  - vb\n  name: Int32\n  fullName: System.Int32\n  type: Struct\n  source:\n    remote:\n      path: src/mscorlib/src/System/Int32.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Int32\n    path: src/mscorlib/src/System/Int32.cs\n    startLine: 21\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Represents a 32-bit signed integer.</p>\\n\"\n  syntax:\n    content: >-\n      [Serializable]\n\n      [StructLayout(LayoutKind.Sequential)]\n\n      [ComVisible(true)]\n\n      public struct Int32 : IComparable, IFormattable, IConvertible, IComparable<int>, IEquatable<int>\n    content.vb: >-\n      <Serializable>\n\n      <StructLayout(LayoutKind.Sequential)>\n\n      <ComVisible(True)>\n\n      Public Structure Int32\n          Implements IComparable, IFormattable, IConvertible, IComparable(Of Integer), IEquatable(Of Integer)\n  implements:\n  - System.IComparable\n  - System.IComparable{System.Int32}\n  - System.IConvertible\n  - System.IEquatable{System.Int32}\n  - System.IFormattable\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  attributes:\n  - type: System.Runtime.InteropServices.StructLayoutAttribute\n    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)\n    arguments:\n    - type: System.Runtime.InteropServices.LayoutKind\n      value: 0\n  modifiers.csharp:\n  - public\n  - struct\n  modifiers.vb:\n  - Public\n  - Structure\n  nameWithType: Int32\n- uid: System.Int32.MaxValue\n  commentId: F:System.Int32.MaxValue\n  id: MaxValue\n  parent: System.Int32\n  langs:\n  - csharp\n  - vb\n  name: MaxValue\n  fullName: System.Int32.MaxValue\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Int32.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: MaxValue\n    path: src/mscorlib/src/System/Int32.cs\n    startLine: 29\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Represents the largest possible value of an <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. This field is constant.</p>\\n\"\n  syntax:\n    content: public const int MaxValue = 2147483647\n    content.vb: Public Const MaxValue As Integer = 2147483647\n    return:\n      type: System.Int32\n  seealso:\n  - type: System.Int32.MinValue\n    commentId: F:System.Int32.MinValue\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: Int32.MaxValue\n- uid: System.Int32.MinValue\n  commentId: F:System.Int32.MinValue\n  id: MinValue\n  parent: System.Int32\n  langs:\n  - csharp\n  - vb\n  name: MinValue\n  fullName: System.Int32.MinValue\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Int32.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: MinValue\n    path: src/mscorlib/src/System/Int32.cs\n    startLine: 30\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Represents the smallest possible value of <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. This field is constant.</p>\\n\"\n  syntax:\n    content: public const int MinValue = -2147483648\n    content.vb: Public Const MinValue As Integer = -2147483648\n    return:\n      type: System.Int32\n  seealso:\n  - type: System.Int32.MaxValue\n    commentId: F:System.Int32.MaxValue\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: Int32.MinValue\n- uid: System.Int32.CompareTo(System.Int32)\n  commentId: M:System.Int32.CompareTo(System.Int32)\n  id: CompareTo(System.Int32)\n  parent: System.Int32\n  langs:\n  - csharp\n  - vb\n  name: CompareTo(Int32)\n  fullName: System.Int32.CompareTo(System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Int32.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: CompareTo\n    path: src/mscorlib/src/System/Int32.cs\n    startLine: 53\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Compares this instance to a specified 32-bit signed integer and returns an indication of their relative values.</p>\\n\"\n  syntax:\n    content: public int CompareTo(int value)\n    content.vb: Public Function CompareTo(value As Integer) As Integer\n    parameters:\n    - id: value\n      type: System.Int32\n      description: \"\\n<p>An integer to compare. </p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>A signed number indicating the relative values of this instance and <em>value</em>.</p>\\n<p>Return Value </p>\\n<p>Description </p>\\n<table><tbody><tr><td>\\n<p>Less than zero </p>\\n</td><td>\\n<p>This instance is less than <em>value</em>. </p>\\n</td></tr><tr><td>\\n<p>Zero </p>\\n</td><td>\\n<p>This instance is equal to <em>value</em>. </p>\\n</td></tr><tr><td>\\n<p>Greater than zero </p>\\n</td><td>\\n<p>This instance is greater than <em>value</em>. </p>\\n</td></tr></tbody></table>\\n\"\n  seealso:\n  - type: System.UInt32\n    commentId: T:System.UInt32\n  - type: System.Int32.Equals(System.Object)\n    commentId: M:System.Int32.Equals(System.Object)\n  implements:\n  - System.IComparable{System.Int32}.CompareTo(System.Int32)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Int32.CompareTo(Int32)\n- uid: System.Int32.Equals(System.Int32)\n  commentId: M:System.Int32.Equals(System.Int32)\n  id: Equals(System.Int32)\n  parent: System.Int32\n  langs:\n  - csharp\n  - vb\n  name: Equals(Int32)\n  fullName: System.Int32.Equals(System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Int32.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Equals\n    path: src/mscorlib/src/System/Int32.cs\n    startLine: 68\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Returns a value indicating whether this instance is equal to a specified <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value. </p>\\n\"\n  syntax:\n    content: >-\n      [NonVersionable]\n\n      public bool Equals(int obj)\n    content.vb: >-\n      <NonVersionable>\n\n      Public Function Equals(obj As Integer) As Boolean\n    parameters:\n    - id: obj\n      type: System.Int32\n      description: \"\\n<p>An <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value to compare to this instance.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if <em>obj</em> has the same value as this instance; otherwise, <strong>false</strong>.</p>\\n\"\n  implements:\n  - System.IEquatable{System.Int32}.Equals(System.Int32)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Int32.Equals(Int32)\n- uid: System.Int32.Equals(System.Object)\n  commentId: M:System.Int32.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Int32\n  langs:\n  - csharp\n  - vb\n  name: Equals(Object)\n  fullName: System.Int32.Equals(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Int32.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Equals\n    path: src/mscorlib/src/System/Int32.cs\n    startLine: 61\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Returns a value indicating whether this instance is equal to a specified object.</p>\\n\"\n  syntax:\n    content: public override bool Equals(object obj)\n    content.vb: Public Overrides Function Equals(obj As Object) As Boolean\n    parameters:\n    - id: obj\n      type: System.Object\n      description: \"\\n<p>An object to compare with this instance. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if <em>obj</em> is an instance of <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and equals the value of this instance; otherwise, <strong>false</strong>.</p>\\n\"\n  overridden: System.ValueType.Equals(System.Object)\n  seealso:\n  - type: System.Int32.CompareTo(System.Object)\n    commentId: M:System.Int32.CompareTo(System.Object)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: Int32.Equals(Object)\n- uid: System.Int32.GetHashCode\n  commentId: M:System.Int32.GetHashCode\n  id: GetHashCode\n  parent: System.Int32\n  langs:\n  - csharp\n  - vb\n  name: GetHashCode()\n  fullName: System.Int32.GetHashCode()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Int32.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetHashCode\n    path: src/mscorlib/src/System/Int32.cs\n    startLine: 75\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Returns the hash code for this instance.</p>\\n\"\n  syntax:\n    content: public override int GetHashCode()\n    content.vb: Public Overrides Function GetHashCode As Integer\n    return:\n      type: System.Int32\n      description: \"\\n<p>A 32-bit signed integer hash code.</p>\\n\"\n  overridden: System.ValueType.GetHashCode\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: Int32.GetHashCode()\n- uid: System.Int32.Parse(System.String)\n  commentId: M:System.Int32.Parse(System.String)\n  id: Parse(System.String)\n  parent: System.Int32\n  langs:\n  - csharp\n  - vb\n  name: Parse(String)\n  fullName: System.Int32.Parse(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Int32.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Parse\n    path: src/mscorlib/src/System/Int32.cs\n    startLine: 107\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Converts the string representation of a number to its 32-bit signed integer equivalent.</p>\\n\"\n  syntax:\n    content: public static int Parse(string s)\n    content.vb: Public Shared Function Parse(s As String) As Integer\n    parameters:\n    - id: s\n      type: System.String\n      description: \"\\n<p>A string containing a number to convert. </p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>A 32-bit signed integer equivalent to the number contained in <em>s</em>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>s</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>\\n<em>s</em> is not in the correct format. </p>\\n\"\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: \"\\n<p>\\n<em>s</em> represents a number less than <xref href=\\\"System.Int32.MinValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or greater than <xref href=\\\"System.Int32.MaxValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  seealso:\n  - type: System.Int32.ToString\n    commentId: M:System.Int32.ToString\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Int32.Parse(String)\n- uid: System.Int32.Parse(System.String,System.Globalization.NumberStyles)\n  commentId: M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)\n  id: Parse(System.String,System.Globalization.NumberStyles)\n  parent: System.Int32\n  langs:\n  - csharp\n  - vb\n  name: Parse(String, NumberStyles)\n  fullName: System.Int32.Parse(System.String, System.Globalization.NumberStyles)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Int32.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Parse\n    path: src/mscorlib/src/System/Int32.cs\n    startLine: 112\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Converts the string representation of a number in a specified style to its 32-bit signed integer equivalent.</p>\\n\"\n  syntax:\n    content: public static int Parse(string s, NumberStyles style)\n    content.vb: Public Shared Function Parse(s As String, style As NumberStyles) As Integer\n    parameters:\n    - id: s\n      type: System.String\n      description: \"\\n<p>A string containing a number to convert. </p>\\n\"\n    - id: style\n      type: System.Globalization.NumberStyles\n      description: \"\\n<p>A bitwise combination of the enumeration values that indicates the style elements that can be present in <em>s</em>. A typical value to specify is <xref href=\\\"System.Globalization.NumberStyles.Integer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>A 32-bit signed integer equivalent to the number specified in <em>s</em>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>s</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>style</em> is not a <xref href=\\\"System.Globalization.NumberStyles\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value. </p>\\n<p>-or-</p>\\n<p>\\n<em>style</em> is not a combination of <xref href=\\\"System.Globalization.NumberStyles.AllowHexSpecifier\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and <xref href=\\\"System.Globalization.NumberStyles.HexNumber\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values.</p>\\n\"\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>\\n<em>s</em> is not in a format compliant with <em>style</em>. </p>\\n\"\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: \"\\n<p>\\n<em>s</em> represents a number less than <xref href=\\\"System.Int32.MinValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or greater than <xref href=\\\"System.Int32.MaxValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n<p>-or-</p>\\n<p>\\n<em>s</em> includes non-zero, fractional digits.</p>\\n\"\n  seealso:\n  - type: System.Int32.ToString\n    commentId: M:System.Int32.ToString\n  - type: System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)\n    commentId: M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Int32.Parse(String, NumberStyles)\n- uid: System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)\n  commentId: M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)\n  id: Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)\n  parent: System.Int32\n  langs:\n  - csharp\n  - vb\n  name: Parse(String, NumberStyles, IFormatProvider)\n  fullName: System.Int32.Parse(System.String, System.Globalization.NumberStyles, System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Int32.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Parse\n    path: src/mscorlib/src/System/Int32.cs\n    startLine: 131\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Converts the string representation of a number in a specified style and culture-specific format to its 32-bit signed integer equivalent.</p>\\n\"\n  syntax:\n    content: public static int Parse(string s, NumberStyles style, IFormatProvider provider)\n    content.vb: Public Shared Function Parse(s As String, style As NumberStyles, provider As IFormatProvider) As Integer\n    parameters:\n    - id: s\n      type: System.String\n      description: \"\\n<p>A string containing a number to convert. </p>\\n\"\n    - id: style\n      type: System.Globalization.NumberStyles\n      description: \"\\n<p>A bitwise combination of enumeration values that indicates the style elements that can be present in <em>s</em>. A typical value to specify is <xref href=\\\"System.Globalization.NumberStyles.Integer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>An object that supplies culture-specific information about the format of <em>s</em>. </p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>A 32-bit signed integer equivalent to the number specified in <em>s</em>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>s</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>style</em> is not a <xref href=\\\"System.Globalization.NumberStyles\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value. </p>\\n<p>-or-</p>\\n<p>\\n<em>style</em> is not a combination of <xref href=\\\"System.Globalization.NumberStyles.AllowHexSpecifier\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and <xref href=\\\"System.Globalization.NumberStyles.HexNumber\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values.</p>\\n\"\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>\\n<em>s</em> is not in a format compliant with <em>style</em>. </p>\\n\"\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: \"\\n<p>\\n<em>s</em> represents a number less than <xref href=\\\"System.Int32.MinValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or greater than <xref href=\\\"System.Int32.MaxValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n<p>-or-</p>\\n<p>\\n<em>s</em> includes non-zero, fractional digits.</p>\\n\"\n  seealso:\n  - type: System.Int32.ToString\n    commentId: M:System.Int32.ToString\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Int32.Parse(String, NumberStyles, IFormatProvider)\n- uid: System.Int32.Parse(System.String,System.IFormatProvider)\n  commentId: M:System.Int32.Parse(System.String,System.IFormatProvider)\n  id: Parse(System.String,System.IFormatProvider)\n  parent: System.Int32\n  langs:\n  - csharp\n  - vb\n  name: Parse(String, IFormatProvider)\n  fullName: System.Int32.Parse(System.String, System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Int32.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Parse\n    path: src/mscorlib/src/System/Int32.cs\n    startLine: 122\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Converts the string representation of a number in a specified culture-specific format to its 32-bit signed integer equivalent.</p>\\n\"\n  syntax:\n    content: public static int Parse(string s, IFormatProvider provider)\n    content.vb: Public Shared Function Parse(s As String, provider As IFormatProvider) As Integer\n    parameters:\n    - id: s\n      type: System.String\n      description: \"\\n<p>A string containing a number to convert. </p>\\n\"\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>An object that supplies culture-specific formatting information about <em>s</em>. </p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>A 32-bit signed integer equivalent to the number specified in <em>s</em>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>s</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>\\n<em>s</em> is not of the correct format. </p>\\n\"\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: \"\\n<p>\\n<em>s</em> represents a number less than <xref href=\\\"System.Int32.MinValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or greater than <xref href=\\\"System.Int32.MaxValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  seealso:\n  - type: System.Int32.ToString\n    commentId: M:System.Int32.ToString\n  - type: System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)\n    commentId: M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Int32.Parse(String, IFormatProvider)\n- uid: System.Int32.System#IComparable#CompareTo(System.Object)\n  commentId: M:System.Int32.System#IComparable#CompareTo(System.Object)\n  id: System#IComparable#CompareTo(System.Object)\n  isEii: true\n  parent: System.Int32\n  langs:\n  - csharp\n  - vb\n  name: IComparable.CompareTo(Object)\n  fullName: System.Int32.System.IComparable.CompareTo(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime/ref/System.Runtime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.IComparable.CompareTo\n    path: src/System.Runtime/ref/System.Runtime.cs\n    startLine: 1067\n  assemblies:\n  - System.Runtime\n  namespace: System\n  syntax:\n    content: int IComparable.CompareTo(object value)\n    content.vb: Function System.IComparable.CompareTo(value As Object) As Integer Implements IComparable.CompareTo\n    parameters:\n    - id: value\n      type: System.Object\n    return:\n      type: System.Int32\n  implements:\n  - System.IComparable.CompareTo(System.Object)\n  name.vb: System.IComparable.CompareTo(Object)\n  nameWithType: Int32.IComparable.CompareTo(Object)\n  nameWithType.vb: Int32.System.IComparable.CompareTo(Object)\n- uid: System.Int32.System#IConvertible#GetTypeCode\n  commentId: M:System.Int32.System#IConvertible#GetTypeCode\n  id: System#IConvertible#GetTypeCode\n  isEii: true\n  parent: System.Int32\n  langs:\n  - csharp\n  - vb\n  name: IConvertible.GetTypeCode()\n  fullName: System.Int32.System.IConvertible.GetTypeCode()\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime/ref/System.Runtime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.IConvertible.GetTypeCode\n    path: src/System.Runtime/ref/System.Runtime.cs\n    startLine: 1068\n  assemblies:\n  - System.Runtime\n  namespace: System\n  syntax:\n    content: TypeCode IConvertible.GetTypeCode()\n    content.vb: Function System.IConvertible.GetTypeCode As TypeCode Implements IConvertible.GetTypeCode\n    return:\n      type: System.TypeCode\n  implements:\n  - System.IConvertible.GetTypeCode\n  name.vb: System.IConvertible.GetTypeCode()\n  nameWithType: Int32.IConvertible.GetTypeCode()\n  nameWithType.vb: Int32.System.IConvertible.GetTypeCode()\n- uid: System.Int32.System#IConvertible#ToBoolean(System.IFormatProvider)\n  commentId: M:System.Int32.System#IConvertible#ToBoolean(System.IFormatProvider)\n  id: System#IConvertible#ToBoolean(System.IFormatProvider)\n  isEii: true\n  parent: System.Int32\n  langs:\n  - csharp\n  - vb\n  name: IConvertible.ToBoolean(IFormatProvider)\n  fullName: System.Int32.System.IConvertible.ToBoolean(System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Int32.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.IConvertible.ToBoolean\n    path: src/mscorlib/src/System/Int32.cs\n    startLine: 164\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>For a description of this member, see <xref href=\\\"System.IConvertible.ToBoolean(System.IFormatProvider)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  syntax:\n    content: bool IConvertible.ToBoolean(IFormatProvider provider)\n    content.vb: Function System.IConvertible.ToBoolean(provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>This parameter is ignored.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the value of the current instance is not zero; otherwise, <strong>false</strong>.</p>\\n\"\n  implements:\n  - System.IConvertible.ToBoolean(System.IFormatProvider)\n  name.vb: System.IConvertible.ToBoolean(IFormatProvider)\n  nameWithType: Int32.IConvertible.ToBoolean(IFormatProvider)\n  nameWithType.vb: Int32.System.IConvertible.ToBoolean(IFormatProvider)\n- uid: System.Int32.System#IConvertible#ToByte(System.IFormatProvider)\n  commentId: M:System.Int32.System#IConvertible#ToByte(System.IFormatProvider)\n  id: System#IConvertible#ToByte(System.IFormatProvider)\n  isEii: true\n  parent: System.Int32\n  langs:\n  - csharp\n  - vb\n  name: IConvertible.ToByte(IFormatProvider)\n  fullName: System.Int32.System.IConvertible.ToByte(System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Int32.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.IConvertible.ToByte\n    path: src/mscorlib/src/System/Int32.cs\n    startLine: 179\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>For a description of this member, see <xref href=\\\"System.IConvertible.ToByte(System.IFormatProvider)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  syntax:\n    content: byte IConvertible.ToByte(IFormatProvider provider)\n    content.vb: Function System.IConvertible.ToByte(provider As IFormatProvider) As Byte Implements IConvertible.ToByte\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>This parameter is ignored.</p>\\n\"\n    return:\n      type: System.Byte\n      description: \"\\n<p>The value of the current instance, converted to a <xref href=\\\"System.Byte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  implements:\n  - System.IConvertible.ToByte(System.IFormatProvider)\n  name.vb: System.IConvertible.ToByte(IFormatProvider)\n  nameWithType: Int32.IConvertible.ToByte(IFormatProvider)\n  nameWithType.vb: Int32.System.IConvertible.ToByte(IFormatProvider)\n- uid: System.Int32.System#IConvertible#ToChar(System.IFormatProvider)\n  commentId: M:System.Int32.System#IConvertible#ToChar(System.IFormatProvider)\n  id: System#IConvertible#ToChar(System.IFormatProvider)\n  isEii: true\n  parent: System.Int32\n  langs:\n  - csharp\n  - vb\n  name: IConvertible.ToChar(IFormatProvider)\n  fullName: System.Int32.System.IConvertible.ToChar(System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Int32.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.IConvertible.ToChar\n    path: src/mscorlib/src/System/Int32.cs\n    startLine: 169\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>For a description of this member, see <xref href=\\\"System.IConvertible.ToChar(System.IFormatProvider)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  syntax:\n    content: char IConvertible.ToChar(IFormatProvider provider)\n    content.vb: Function System.IConvertible.ToChar(provider As IFormatProvider) As Char Implements IConvertible.ToChar\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>This parameter is ignored.</p>\\n\"\n    return:\n      type: System.Char\n      description: \"\\n<p>The value of the current instance, converted to a <xref href=\\\"System.Char\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  implements:\n  - System.IConvertible.ToChar(System.IFormatProvider)\n  name.vb: System.IConvertible.ToChar(IFormatProvider)\n  nameWithType: Int32.IConvertible.ToChar(IFormatProvider)\n  nameWithType.vb: Int32.System.IConvertible.ToChar(IFormatProvider)\n- uid: System.Int32.System#IConvertible#ToDateTime(System.IFormatProvider)\n  commentId: M:System.Int32.System#IConvertible#ToDateTime(System.IFormatProvider)\n  id: System#IConvertible#ToDateTime(System.IFormatProvider)\n  isEii: true\n  parent: System.Int32\n  langs:\n  - csharp\n  - vb\n  name: IConvertible.ToDateTime(IFormatProvider)\n  fullName: System.Int32.System.IConvertible.ToDateTime(System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Int32.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.IConvertible.ToDateTime\n    path: src/mscorlib/src/System/Int32.cs\n    startLine: 229\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>This conversion is not supported. Attempting to use this method throws an <xref href=\\\"System.InvalidCastException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: DateTime IConvertible.ToDateTime(IFormatProvider provider)\n    content.vb: Function System.IConvertible.ToDateTime(provider As IFormatProvider) As Date Implements IConvertible.ToDateTime\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>This parameter is ignored.</p>\\n\"\n    return:\n      type: System.DateTime\n      description: \"\\n<p>This conversion is not supported. No value is returned.</p>\\n\"\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>In all cases.</p>\\n\"\n  implements:\n  - System.IConvertible.ToDateTime(System.IFormatProvider)\n  name.vb: System.IConvertible.ToDateTime(IFormatProvider)\n  nameWithType: Int32.IConvertible.ToDateTime(IFormatProvider)\n  nameWithType.vb: Int32.System.IConvertible.ToDateTime(IFormatProvider)\n- uid: System.Int32.System#IConvertible#ToDecimal(System.IFormatProvider)\n  commentId: M:System.Int32.System#IConvertible#ToDecimal(System.IFormatProvider)\n  id: System#IConvertible#ToDecimal(System.IFormatProvider)\n  isEii: true\n  parent: System.Int32\n  langs:\n  - csharp\n  - vb\n  name: IConvertible.ToDecimal(IFormatProvider)\n  fullName: System.Int32.System.IConvertible.ToDecimal(System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Int32.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.IConvertible.ToDecimal\n    path: src/mscorlib/src/System/Int32.cs\n    startLine: 224\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>For a description of this member, see <xref href=\\\"System.IConvertible.ToDecimal(System.IFormatProvider)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: decimal IConvertible.ToDecimal(IFormatProvider provider)\n    content.vb: Function System.IConvertible.ToDecimal(provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>This parameter is ignored.</p>\\n\"\n    return:\n      type: System.Decimal\n      description: \"\\n<p>The value of the current instance, converted to a <xref href=\\\"System.Decimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  implements:\n  - System.IConvertible.ToDecimal(System.IFormatProvider)\n  name.vb: System.IConvertible.ToDecimal(IFormatProvider)\n  nameWithType: Int32.IConvertible.ToDecimal(IFormatProvider)\n  nameWithType.vb: Int32.System.IConvertible.ToDecimal(IFormatProvider)\n- uid: System.Int32.System#IConvertible#ToDouble(System.IFormatProvider)\n  commentId: M:System.Int32.System#IConvertible#ToDouble(System.IFormatProvider)\n  id: System#IConvertible#ToDouble(System.IFormatProvider)\n  isEii: true\n  parent: System.Int32\n  langs:\n  - csharp\n  - vb\n  name: IConvertible.ToDouble(IFormatProvider)\n  fullName: System.Int32.System.IConvertible.ToDouble(System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Int32.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.IConvertible.ToDouble\n    path: src/mscorlib/src/System/Int32.cs\n    startLine: 219\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>For a description of this member, see <xref href=\\\"System.IConvertible.ToDouble(System.IFormatProvider)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  syntax:\n    content: double IConvertible.ToDouble(IFormatProvider provider)\n    content.vb: Function System.IConvertible.ToDouble(provider As IFormatProvider) As Double Implements IConvertible.ToDouble\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>This parameter is ignored.</p>\\n\"\n    return:\n      type: System.Double\n      description: \"\\n<p>The value of the current instance, converted to a <xref href=\\\"System.Double\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  implements:\n  - System.IConvertible.ToDouble(System.IFormatProvider)\n  name.vb: System.IConvertible.ToDouble(IFormatProvider)\n  nameWithType: Int32.IConvertible.ToDouble(IFormatProvider)\n  nameWithType.vb: Int32.System.IConvertible.ToDouble(IFormatProvider)\n- uid: System.Int32.System#IConvertible#ToInt16(System.IFormatProvider)\n  commentId: M:System.Int32.System#IConvertible#ToInt16(System.IFormatProvider)\n  id: System#IConvertible#ToInt16(System.IFormatProvider)\n  isEii: true\n  parent: System.Int32\n  langs:\n  - csharp\n  - vb\n  name: IConvertible.ToInt16(IFormatProvider)\n  fullName: System.Int32.System.IConvertible.ToInt16(System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Int32.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.IConvertible.ToInt16\n    path: src/mscorlib/src/System/Int32.cs\n    startLine: 184\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>For a description of this member, see <xref href=\\\"System.IConvertible.ToInt16(System.IFormatProvider)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  syntax:\n    content: short IConvertible.ToInt16(IFormatProvider provider)\n    content.vb: Function System.IConvertible.ToInt16(provider As IFormatProvider) As Short Implements IConvertible.ToInt16\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>This parameter is ignored.</p>\\n\"\n    return:\n      type: System.Int16\n      description: \"\\n<p>The value of the current instance, converted to an <xref href=\\\"System.Int16\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  implements:\n  - System.IConvertible.ToInt16(System.IFormatProvider)\n  name.vb: System.IConvertible.ToInt16(IFormatProvider)\n  nameWithType: Int32.IConvertible.ToInt16(IFormatProvider)\n  nameWithType.vb: Int32.System.IConvertible.ToInt16(IFormatProvider)\n- uid: System.Int32.System#IConvertible#ToInt32(System.IFormatProvider)\n  commentId: M:System.Int32.System#IConvertible#ToInt32(System.IFormatProvider)\n  id: System#IConvertible#ToInt32(System.IFormatProvider)\n  isEii: true\n  parent: System.Int32\n  langs:\n  - csharp\n  - vb\n  name: IConvertible.ToInt32(IFormatProvider)\n  fullName: System.Int32.System.IConvertible.ToInt32(System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Int32.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.IConvertible.ToInt32\n    path: src/mscorlib/src/System/Int32.cs\n    startLine: 194\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>For a description of this member, see <xref href=\\\"System.IConvertible.ToInt32(System.IFormatProvider)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  syntax:\n    content: int IConvertible.ToInt32(IFormatProvider provider)\n    content.vb: Function System.IConvertible.ToInt32(provider As IFormatProvider) As Integer Implements IConvertible.ToInt32\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>This parameter is ignored.</p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>The value of the current instance, unchanged.</p>\\n\"\n  implements:\n  - System.IConvertible.ToInt32(System.IFormatProvider)\n  name.vb: System.IConvertible.ToInt32(IFormatProvider)\n  nameWithType: Int32.IConvertible.ToInt32(IFormatProvider)\n  nameWithType.vb: Int32.System.IConvertible.ToInt32(IFormatProvider)\n- uid: System.Int32.System#IConvertible#ToInt64(System.IFormatProvider)\n  commentId: M:System.Int32.System#IConvertible#ToInt64(System.IFormatProvider)\n  id: System#IConvertible#ToInt64(System.IFormatProvider)\n  isEii: true\n  parent: System.Int32\n  langs:\n  - csharp\n  - vb\n  name: IConvertible.ToInt64(IFormatProvider)\n  fullName: System.Int32.System.IConvertible.ToInt64(System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Int32.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.IConvertible.ToInt64\n    path: src/mscorlib/src/System/Int32.cs\n    startLine: 204\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>For a description of this member, see <xref href=\\\"System.IConvertible.ToInt64(System.IFormatProvider)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  syntax:\n    content: long IConvertible.ToInt64(IFormatProvider provider)\n    content.vb: Function System.IConvertible.ToInt64(provider As IFormatProvider) As Long Implements IConvertible.ToInt64\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>This parameter is ignored.</p>\\n\"\n    return:\n      type: System.Int64\n      description: \"\\n<p>The value of the current instance, converted to an <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  implements:\n  - System.IConvertible.ToInt64(System.IFormatProvider)\n  name.vb: System.IConvertible.ToInt64(IFormatProvider)\n  nameWithType: Int32.IConvertible.ToInt64(IFormatProvider)\n  nameWithType.vb: Int32.System.IConvertible.ToInt64(IFormatProvider)\n- uid: System.Int32.System#IConvertible#ToSByte(System.IFormatProvider)\n  commentId: M:System.Int32.System#IConvertible#ToSByte(System.IFormatProvider)\n  id: System#IConvertible#ToSByte(System.IFormatProvider)\n  isEii: true\n  parent: System.Int32\n  langs:\n  - csharp\n  - vb\n  name: IConvertible.ToSByte(IFormatProvider)\n  fullName: System.Int32.System.IConvertible.ToSByte(System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Int32.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.IConvertible.ToSByte\n    path: src/mscorlib/src/System/Int32.cs\n    startLine: 174\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>For a description of this member, see <xref href=\\\"System.IConvertible.ToSByte(System.IFormatProvider)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  syntax:\n    content: sbyte IConvertible.ToSByte(IFormatProvider provider)\n    content.vb: Function System.IConvertible.ToSByte(provider As IFormatProvider) As SByte Implements IConvertible.ToSByte\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>This parameter is ignored.</p>\\n\"\n    return:\n      type: System.SByte\n      description: \"\\n<p>The value of the current instance, converted to an <xref href=\\\"System.SByte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  implements:\n  - System.IConvertible.ToSByte(System.IFormatProvider)\n  name.vb: System.IConvertible.ToSByte(IFormatProvider)\n  nameWithType: Int32.IConvertible.ToSByte(IFormatProvider)\n  nameWithType.vb: Int32.System.IConvertible.ToSByte(IFormatProvider)\n- uid: System.Int32.System#IConvertible#ToSingle(System.IFormatProvider)\n  commentId: M:System.Int32.System#IConvertible#ToSingle(System.IFormatProvider)\n  id: System#IConvertible#ToSingle(System.IFormatProvider)\n  isEii: true\n  parent: System.Int32\n  langs:\n  - csharp\n  - vb\n  name: IConvertible.ToSingle(IFormatProvider)\n  fullName: System.Int32.System.IConvertible.ToSingle(System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Int32.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.IConvertible.ToSingle\n    path: src/mscorlib/src/System/Int32.cs\n    startLine: 214\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>For a description of this member, see <xref href=\\\"System.IConvertible.ToSingle(System.IFormatProvider)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  syntax:\n    content: float IConvertible.ToSingle(IFormatProvider provider)\n    content.vb: Function System.IConvertible.ToSingle(provider As IFormatProvider) As Single Implements IConvertible.ToSingle\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>This parameter is ignored.</p>\\n\"\n    return:\n      type: System.Single\n      description: \"\\n<p>The value of the current instance, converted to a <xref href=\\\"System.Single\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  implements:\n  - System.IConvertible.ToSingle(System.IFormatProvider)\n  name.vb: System.IConvertible.ToSingle(IFormatProvider)\n  nameWithType: Int32.IConvertible.ToSingle(IFormatProvider)\n  nameWithType.vb: Int32.System.IConvertible.ToSingle(IFormatProvider)\n- uid: System.Int32.System#IConvertible#ToType(System.Type,System.IFormatProvider)\n  commentId: M:System.Int32.System#IConvertible#ToType(System.Type,System.IFormatProvider)\n  id: System#IConvertible#ToType(System.Type,System.IFormatProvider)\n  isEii: true\n  parent: System.Int32\n  langs:\n  - csharp\n  - vb\n  name: IConvertible.ToType(Type, IFormatProvider)\n  fullName: System.Int32.System.IConvertible.ToType(System.Type, System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Int32.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.IConvertible.ToType\n    path: src/mscorlib/src/System/Int32.cs\n    startLine: 234\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>For a description of this member, see <xref href=\\\"System.IConvertible.ToType(System.Type,System.IFormatProvider)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  syntax:\n    content: object IConvertible.ToType(Type type, IFormatProvider provider)\n    content.vb: Function System.IConvertible.ToType(type As Type, provider As IFormatProvider) As Object Implements IConvertible.ToType\n    parameters:\n    - id: type\n      type: System.Type\n      description: \"\\n<p>The type to which to convert this <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>An object that provides information about the format of the returned value.</p>\\n\"\n    return:\n      type: System.Object\n      description: \"\\n<p>The value of the current instance, converted to <em>type</em>.</p>\\n\"\n  implements:\n  - System.IConvertible.ToType(System.Type,System.IFormatProvider)\n  name.vb: System.IConvertible.ToType(Type, IFormatProvider)\n  nameWithType: Int32.IConvertible.ToType(Type, IFormatProvider)\n  nameWithType.vb: Int32.System.IConvertible.ToType(Type, IFormatProvider)\n- uid: System.Int32.System#IConvertible#ToUInt16(System.IFormatProvider)\n  commentId: M:System.Int32.System#IConvertible#ToUInt16(System.IFormatProvider)\n  id: System#IConvertible#ToUInt16(System.IFormatProvider)\n  isEii: true\n  parent: System.Int32\n  langs:\n  - csharp\n  - vb\n  name: IConvertible.ToUInt16(IFormatProvider)\n  fullName: System.Int32.System.IConvertible.ToUInt16(System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Int32.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.IConvertible.ToUInt16\n    path: src/mscorlib/src/System/Int32.cs\n    startLine: 189\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>For a description of this member, see <xref href=\\\"System.IConvertible.ToUInt16(System.IFormatProvider)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  syntax:\n    content: ushort IConvertible.ToUInt16(IFormatProvider provider)\n    content.vb: Function System.IConvertible.ToUInt16(provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>This parameter is ignored.</p>\\n\"\n    return:\n      type: System.UInt16\n      description: \"\\n<p>The value of the current instance, converted to a <xref href=\\\"System.UInt16\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  implements:\n  - System.IConvertible.ToUInt16(System.IFormatProvider)\n  name.vb: System.IConvertible.ToUInt16(IFormatProvider)\n  nameWithType: Int32.IConvertible.ToUInt16(IFormatProvider)\n  nameWithType.vb: Int32.System.IConvertible.ToUInt16(IFormatProvider)\n- uid: System.Int32.System#IConvertible#ToUInt32(System.IFormatProvider)\n  commentId: M:System.Int32.System#IConvertible#ToUInt32(System.IFormatProvider)\n  id: System#IConvertible#ToUInt32(System.IFormatProvider)\n  isEii: true\n  parent: System.Int32\n  langs:\n  - csharp\n  - vb\n  name: IConvertible.ToUInt32(IFormatProvider)\n  fullName: System.Int32.System.IConvertible.ToUInt32(System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Int32.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.IConvertible.ToUInt32\n    path: src/mscorlib/src/System/Int32.cs\n    startLine: 199\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>For a description of this member, see <xref href=\\\"System.IConvertible.ToUInt32(System.IFormatProvider)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  syntax:\n    content: uint IConvertible.ToUInt32(IFormatProvider provider)\n    content.vb: Function System.IConvertible.ToUInt32(provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>This parameter is ignored.</p>\\n\"\n    return:\n      type: System.UInt32\n      description: \"\\n<p>The value of the current instance, converted to a <xref href=\\\"System.UInt32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  implements:\n  - System.IConvertible.ToUInt32(System.IFormatProvider)\n  name.vb: System.IConvertible.ToUInt32(IFormatProvider)\n  nameWithType: Int32.IConvertible.ToUInt32(IFormatProvider)\n  nameWithType.vb: Int32.System.IConvertible.ToUInt32(IFormatProvider)\n- uid: System.Int32.System#IConvertible#ToUInt64(System.IFormatProvider)\n  commentId: M:System.Int32.System#IConvertible#ToUInt64(System.IFormatProvider)\n  id: System#IConvertible#ToUInt64(System.IFormatProvider)\n  isEii: true\n  parent: System.Int32\n  langs:\n  - csharp\n  - vb\n  name: IConvertible.ToUInt64(IFormatProvider)\n  fullName: System.Int32.System.IConvertible.ToUInt64(System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Int32.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.IConvertible.ToUInt64\n    path: src/mscorlib/src/System/Int32.cs\n    startLine: 209\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>For a description of this member, see <xref href=\\\"System.IConvertible.ToUInt64(System.IFormatProvider)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  syntax:\n    content: ulong IConvertible.ToUInt64(IFormatProvider provider)\n    content.vb: Function System.IConvertible.ToUInt64(provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>This parameter is ignored.</p>\\n\"\n    return:\n      type: System.UInt64\n      description: \"\\n<p>The value of the current instance, converted to a <xref href=\\\"System.UInt64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  implements:\n  - System.IConvertible.ToUInt64(System.IFormatProvider)\n  name.vb: System.IConvertible.ToUInt64(IFormatProvider)\n  nameWithType: Int32.IConvertible.ToUInt64(IFormatProvider)\n  nameWithType.vb: Int32.System.IConvertible.ToUInt64(IFormatProvider)\n- uid: System.Int32.ToString\n  commentId: M:System.Int32.ToString\n  id: ToString\n  parent: System.Int32\n  langs:\n  - csharp\n  - vb\n  name: ToString()\n  fullName: System.Int32.ToString()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Int32.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ToString\n    path: src/mscorlib/src/System/Int32.cs\n    startLine: 79\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Converts the numeric value of this instance to its equivalent string representation.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public override string ToString()\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Overrides Function ToString As String\n    return:\n      type: System.String\n      description: \"\\n<p>The string representation of the value of this instance, consisting of a negative sign if the value is negative, and a sequence of digits ranging from 0 to 9 with no leading zeroes.</p>\\n\"\n  overridden: System.ValueType.ToString\n  seealso:\n  - type: System.Int32.Parse(System.String)\n    commentId: M:System.Int32.Parse(System.String)\n  - type: System.String\n    commentId: T:System.String\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: Int32.ToString()\n- uid: System.Int32.ToString(System.IFormatProvider)\n  commentId: M:System.Int32.ToString(System.IFormatProvider)\n  id: ToString(System.IFormatProvider)\n  parent: System.Int32\n  langs:\n  - csharp\n  - vb\n  name: ToString(IFormatProvider)\n  fullName: System.Int32.ToString(System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Int32.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ToString\n    path: src/mscorlib/src/System/Int32.cs\n    startLine: 93\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public string ToString(IFormatProvider provider)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Function ToString(provider As IFormatProvider) As String\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>An object that supplies culture-specific formatting information. </p>\\n\"\n    return:\n      type: System.String\n      description: \"\\n<p>The string representation of the value of this instance as specified by <em>provider</em>.</p>\\n\"\n  seealso:\n  - type: System.Int32.Parse(System.String)\n    commentId: M:System.Int32.Parse(System.String)\n  - type: System.String\n    commentId: T:System.String\n  implements:\n  - System.IConvertible.ToString(System.IFormatProvider)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Int32.ToString(IFormatProvider)\n- uid: System.Int32.ToString(System.String)\n  commentId: M:System.Int32.ToString(System.String)\n  id: ToString(System.String)\n  parent: System.Int32\n  langs:\n  - csharp\n  - vb\n  name: ToString(String)\n  fullName: System.Int32.ToString(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Int32.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ToString\n    path: src/mscorlib/src/System/Int32.cs\n    startLine: 86\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Converts the numeric value of this instance to its equivalent string representation, using the specified format.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public string ToString(string format)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Function ToString(format As String) As String\n    parameters:\n    - id: format\n      type: System.String\n      description: \"\\n<p>A standard or custom numeric format string.</p>\\n\"\n    return:\n      type: System.String\n      description: \"\\n<p>The string representation of the value of this instance as specified by <em>format</em>.</p>\\n\"\n  exceptions:\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>\\n<em>format</em> is invalid or not supported. </p>\\n\"\n  seealso:\n  - type: System.Int32.Parse(System.String)\n    commentId: M:System.Int32.Parse(System.String)\n  - type: System.String\n    commentId: T:System.String\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Int32.ToString(String)\n- uid: System.Int32.ToString(System.String,System.IFormatProvider)\n  commentId: M:System.Int32.ToString(System.String,System.IFormatProvider)\n  id: ToString(System.String,System.IFormatProvider)\n  parent: System.Int32\n  langs:\n  - csharp\n  - vb\n  name: ToString(String, IFormatProvider)\n  fullName: System.Int32.ToString(System.String, System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Int32.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ToString\n    path: src/mscorlib/src/System/Int32.cs\n    startLine: 100\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific format information.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public string ToString(string format, IFormatProvider provider)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Function ToString(format As String, provider As IFormatProvider) As String\n    parameters:\n    - id: format\n      type: System.String\n      description: \"\\n<p>A standard or custom numeric format string.</p>\\n\"\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>An object that supplies culture-specific formatting information. </p>\\n\"\n    return:\n      type: System.String\n      description: \"\\n<p>The string representation of the value of this instance as specified by <em>format</em> and <em>provider</em>.</p>\\n\"\n  exceptions:\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>\\n<em>format</em> is invalid or not supported.</p>\\n\"\n  seealso:\n  - type: System.Int32.Parse(System.String)\n    commentId: M:System.Int32.Parse(System.String)\n  implements:\n  - System.IFormattable.ToString(System.String,System.IFormatProvider)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Int32.ToString(String, IFormatProvider)\n- uid: System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)\n  commentId: M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)\n  id: TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)\n  parent: System.Int32\n  langs:\n  - csharp\n  - vb\n  name: TryParse(String, NumberStyles, IFormatProvider, out Int32)\n  fullName: System.Int32.TryParse(System.String, System.Globalization.NumberStyles, System.IFormatProvider, out System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Int32.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: TryParse\n    path: src/mscorlib/src/System/Int32.cs\n    startLine: 148\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Converts the string representation of a number in a specified style and culture-specific format to its 32-bit signed integer equivalent. A return value indicates whether the conversion succeeded.</p>\\n\"\n  syntax:\n    content: public static bool TryParse(string s, NumberStyles style, IFormatProvider provider, out int result)\n    content.vb: Public Shared Function TryParse(s As String, style As NumberStyles, provider As IFormatProvider, ByRef result As Integer) As Boolean\n    parameters:\n    - id: s\n      type: System.String\n      description: \"\\n<p>A string containing a number to convert. The string is interpreted using the style specified by <em>style</em>.</p>\\n\"\n    - id: style\n      type: System.Globalization.NumberStyles\n      description: \"\\n<p>A bitwise combination of enumeration values that indicates the style elements that can be present in <em>s</em>. A typical value to specify is <xref href=\\\"System.Globalization.NumberStyles.Integer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>An object that supplies culture-specific formatting information about <em>s</em>. </p>\\n\"\n    - id: result\n      type: System.Int32\n      description: \"\\n<p>When this method returns, contains the 32-bit signed integer value equivalent of the number contained in <em>s</em>, if the conversion succeeded, or zero if the conversion failed. The conversion fails if the <em>s</em> parameter is <strong>null</strong>  or <xref href=\\\"System.String.Empty\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, is not in a format compliant with <em>style</em>, or represents a number less than <xref href=\\\"System.Int32.MinValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or greater than <xref href=\\\"System.Int32.MaxValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. This parameter is passed uninitialized; any value originally supplied in <em>result</em> will be overwritten.  </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if <em>s</em> was converted successfully; otherwise, <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>style</em> is not a <xref href=\\\"System.Globalization.NumberStyles\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value. </p>\\n<p>-or-</p>\\n<p>\\n<em>style</em> is not a combination of <xref href=\\\"System.Globalization.NumberStyles.AllowHexSpecifier\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and <xref href=\\\"System.Globalization.NumberStyles.HexNumber\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values.</p>\\n\"\n  seealso:\n  - type: System.Int32.Parse(System.String)\n    commentId: M:System.Int32.Parse(System.String)\n  - type: System.Globalization.NumberStyles\n    commentId: T:System.Globalization.NumberStyles\n  - type: System.Int32.ToString\n    commentId: M:System.Int32.ToString\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Int32.TryParse(System.String, System.Globalization.NumberStyles, System.IFormatProvider, ByRef System.Int32)\n  name.vb: TryParse(String, NumberStyles, IFormatProvider, ByRef Int32)\n  nameWithType: Int32.TryParse(String, NumberStyles, IFormatProvider, out Int32)\n  nameWithType.vb: Int32.TryParse(String, NumberStyles, IFormatProvider, ByRef Int32)\n- uid: System.Int32.TryParse(System.String,System.Int32@)\n  commentId: M:System.Int32.TryParse(System.String,System.Int32@)\n  id: TryParse(System.String,System.Int32@)\n  parent: System.Int32\n  langs:\n  - csharp\n  - vb\n  name: TryParse(String, out Int32)\n  fullName: System.Int32.TryParse(System.String, out System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Int32.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: TryParse\n    path: src/mscorlib/src/System/Int32.cs\n    startLine: 140\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Converts the string representation of a number to its 32-bit signed integer equivalent. A return value indicates whether the conversion succeeded.</p>\\n\"\n  syntax:\n    content: public static bool TryParse(string s, out int result)\n    content.vb: Public Shared Function TryParse(s As String, ByRef result As Integer) As Boolean\n    parameters:\n    - id: s\n      type: System.String\n      description: \"\\n<p>A string containing a number to convert. </p>\\n\"\n    - id: result\n      type: System.Int32\n      description: \"\\n<p>When this method returns, contains the 32-bit signed integer value equivalent of the number contained in <em>s</em>, if the conversion succeeded, or zero if the conversion failed. The conversion fails if the <em>s</em> parameter is <strong>null</strong>  or <xref href=\\\"System.String.Empty\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, is not of the correct format, or represents a number less than <xref href=\\\"System.Int32.MinValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or greater than <xref href=\\\"System.Int32.MaxValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. This parameter is passed uninitialized; any value originally supplied in <em>result</em> will be overwritten.  </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if <em>s</em> was converted successfully; otherwise, <strong>false</strong>.</p>\\n\"\n  seealso:\n  - type: System.Int32.Parse(System.String)\n    commentId: M:System.Int32.Parse(System.String)\n  - type: System.Int32.ToString\n    commentId: M:System.Int32.ToString\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Int32.TryParse(System.String, ByRef System.Int32)\n  name.vb: TryParse(String, ByRef Int32)\n  nameWithType: Int32.TryParse(String, out Int32)\n  nameWithType.vb: Int32.TryParse(String, ByRef Int32)\nreferences:\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.IComparable\n  parent: System\n  isExternal: false\n  name: IComparable\n  fullName: System.IComparable\n  nameWithType: IComparable\n  commentId: T:System.IComparable\n- uid: System.IComparable{System.Int32}\n  parent: System\n  definition: System.IComparable`1\n  name: IComparable<Int32>\n  fullName: System.IComparable<System.Int32>\n  fullname.vb: System.IComparable(Of System.Int32)\n  name.vb: IComparable(Of Int32)\n  spec.csharp:\n  - uid: System.IComparable`1\n    name: IComparable\n    fullName: System.IComparable\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.IComparable`1\n    name: IComparable\n    fullName: System.IComparable\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: IComparable<Int32>\n  nameWithType.vb: IComparable(Of Int32)\n  commentId: T:System.IComparable{System.Int32}\n- uid: System.IConvertible\n  parent: System\n  isExternal: false\n  name: IConvertible\n  fullName: System.IConvertible\n  nameWithType: IConvertible\n  commentId: T:System.IConvertible\n- uid: System.IEquatable{System.Int32}\n  parent: System\n  definition: System.IEquatable`1\n  name: IEquatable<Int32>\n  fullName: System.IEquatable<System.Int32>\n  fullname.vb: System.IEquatable(Of System.Int32)\n  name.vb: IEquatable(Of Int32)\n  spec.csharp:\n  - uid: System.IEquatable`1\n    name: IEquatable\n    fullName: System.IEquatable\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.IEquatable`1\n    name: IEquatable\n    fullName: System.IEquatable\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: IEquatable<Int32>\n  nameWithType.vb: IEquatable(Of Int32)\n  commentId: T:System.IEquatable{System.Int32}\n- uid: System.IFormattable\n  parent: System\n  isExternal: false\n  name: IFormattable\n  fullName: System.IFormattable\n  nameWithType: IFormattable\n  commentId: T:System.IFormattable\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.IComparable`1\n  isExternal: false\n  name: IComparable<T>\n  fullName: System.IComparable<T>\n  fullname.vb: System.IComparable(Of T)\n  name.vb: IComparable(Of T)\n  spec.csharp:\n  - uid: System.IComparable`1\n    name: IComparable\n    fullName: System.IComparable\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.IComparable`1\n    name: IComparable\n    fullName: System.IComparable\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: IComparable<T>\n  nameWithType.vb: IComparable(Of T)\n  commentId: T:System.IComparable`1\n- uid: System.IEquatable`1\n  isExternal: false\n  name: IEquatable<T>\n  fullName: System.IEquatable<T>\n  fullname.vb: System.IEquatable(Of T)\n  name.vb: IEquatable(Of T)\n  spec.csharp:\n  - uid: System.IEquatable`1\n    name: IEquatable\n    fullName: System.IEquatable\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.IEquatable`1\n    name: IEquatable\n    fullName: System.IEquatable\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: IEquatable<T>\n  nameWithType.vb: IEquatable(Of T)\n  commentId: T:System.IEquatable`1\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.IComparable{System.Int32}.CompareTo(System.Int32)\n  parent: System.IComparable{System.Int32}\n  definition: System.IComparable`1.CompareTo(`0)\n  name: CompareTo(Int32)\n  fullName: System.IComparable<System.Int32>.CompareTo(System.Int32)\n  fullname.vb: System.IComparable(Of System.Int32).CompareTo(System.Int32)\n  spec.csharp:\n  - uid: System.IComparable`1.CompareTo(`0)\n    name: CompareTo\n    fullName: System.IComparable<System.Int32>.CompareTo\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IComparable`1.CompareTo(`0)\n    name: CompareTo\n    fullName: System.IComparable(Of System.Int32).CompareTo\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: IComparable<Int32>.CompareTo(Int32)\n  nameWithType.vb: IComparable(Of Int32).CompareTo(Int32)\n  commentId: M:System.IComparable{System.Int32}.CompareTo(System.Int32)\n- uid: System.IComparable`1.CompareTo(`0)\n  isExternal: false\n  name: CompareTo(T)\n  fullName: System.IComparable<T>.CompareTo(T)\n  fullname.vb: System.IComparable(Of T).CompareTo(T)\n  spec.csharp:\n  - uid: System.IComparable`1.CompareTo(`0)\n    name: CompareTo\n    fullName: System.IComparable<T>.CompareTo\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IComparable`1.CompareTo(`0)\n    name: CompareTo\n    fullName: System.IComparable(Of T).CompareTo\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: IComparable<T>.CompareTo(T)\n  nameWithType.vb: IComparable(Of T).CompareTo(T)\n  commentId: M:System.IComparable`1.CompareTo(`0)\n- uid: System.IEquatable{System.Int32}.Equals(System.Int32)\n  parent: System.IEquatable{System.Int32}\n  definition: System.IEquatable`1.Equals(`0)\n  name: Equals(Int32)\n  fullName: System.IEquatable<System.Int32>.Equals(System.Int32)\n  fullname.vb: System.IEquatable(Of System.Int32).Equals(System.Int32)\n  spec.csharp:\n  - uid: System.IEquatable`1.Equals(`0)\n    name: Equals\n    fullName: System.IEquatable<System.Int32>.Equals\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IEquatable`1.Equals(`0)\n    name: Equals\n    fullName: System.IEquatable(Of System.Int32).Equals\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: IEquatable<Int32>.Equals(Int32)\n  nameWithType.vb: IEquatable(Of Int32).Equals(Int32)\n  commentId: M:System.IEquatable{System.Int32}.Equals(System.Int32)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.IEquatable`1.Equals(`0)\n  isExternal: false\n  name: Equals(T)\n  fullName: System.IEquatable<T>.Equals(T)\n  fullname.vb: System.IEquatable(Of T).Equals(T)\n  spec.csharp:\n  - uid: System.IEquatable`1.Equals(`0)\n    name: Equals\n    fullName: System.IEquatable<T>.Equals\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IEquatable`1.Equals(`0)\n    name: Equals\n    fullName: System.IEquatable(Of T).Equals\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: IEquatable<T>.Equals(T)\n  nameWithType.vb: IEquatable(Of T).Equals(T)\n  commentId: M:System.IEquatable`1.Equals(`0)\n- uid: System.ValueType.Equals(System.Object)\n  parent: System.ValueType\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.ValueType.Equals(System.Object)\n  spec.csharp:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: ValueType.Equals(Object)\n  commentId: M:System.ValueType.Equals(System.Object)\n- uid: System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  fullName: System.ValueType\n  nameWithType: ValueType\n  commentId: T:System.ValueType\n- uid: System.ValueType.GetHashCode\n  parent: System.ValueType\n  isExternal: false\n  name: GetHashCode()\n  fullName: System.ValueType.GetHashCode()\n  spec.csharp:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ValueType.GetHashCode()\n  commentId: M:System.ValueType.GetHashCode\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.Globalization.NumberStyles\n  parent: System.Globalization\n  isExternal: false\n  name: NumberStyles\n  fullName: System.Globalization.NumberStyles\n  nameWithType: NumberStyles\n  commentId: T:System.Globalization.NumberStyles\n- uid: System.Globalization\n  isExternal: false\n  name: System.Globalization\n  fullName: System.Globalization\n  nameWithType: System.Globalization\n  commentId: N:System.Globalization\n- uid: System.IFormatProvider\n  parent: System\n  isExternal: false\n  name: IFormatProvider\n  fullName: System.IFormatProvider\n  nameWithType: IFormatProvider\n  commentId: T:System.IFormatProvider\n- uid: System.IComparable.CompareTo(System.Object)\n  parent: System.IComparable\n  isExternal: true\n  name: CompareTo(Object)\n  fullName: System.IComparable.CompareTo(System.Object)\n  spec.csharp:\n  - uid: System.IComparable.CompareTo(System.Object)\n    name: CompareTo\n    fullName: System.IComparable.CompareTo\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IComparable.CompareTo(System.Object)\n    name: CompareTo\n    fullName: System.IComparable.CompareTo\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: IComparable.CompareTo(Object)\n  commentId: M:System.IComparable.CompareTo(System.Object)\n- uid: System.IConvertible.GetTypeCode\n  parent: System.IConvertible\n  isExternal: false\n  name: GetTypeCode()\n  fullName: System.IConvertible.GetTypeCode()\n  spec.csharp:\n  - uid: System.IConvertible.GetTypeCode\n    name: GetTypeCode\n    fullName: System.IConvertible.GetTypeCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IConvertible.GetTypeCode\n    name: GetTypeCode\n    fullName: System.IConvertible.GetTypeCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: IConvertible.GetTypeCode()\n  commentId: M:System.IConvertible.GetTypeCode\n- uid: System.TypeCode\n  parent: System\n  isExternal: false\n  name: TypeCode\n  fullName: System.TypeCode\n  nameWithType: TypeCode\n  commentId: T:System.TypeCode\n- uid: System.IConvertible.ToBoolean(System.IFormatProvider)\n  parent: System.IConvertible\n  isExternal: false\n  name: ToBoolean(IFormatProvider)\n  fullName: System.IConvertible.ToBoolean(System.IFormatProvider)\n  spec.csharp:\n  - uid: System.IConvertible.ToBoolean(System.IFormatProvider)\n    name: ToBoolean\n    fullName: System.IConvertible.ToBoolean\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IConvertible.ToBoolean(System.IFormatProvider)\n    name: ToBoolean\n    fullName: System.IConvertible.ToBoolean\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  nameWithType: IConvertible.ToBoolean(IFormatProvider)\n  commentId: M:System.IConvertible.ToBoolean(System.IFormatProvider)\n- uid: System.IConvertible.ToByte(System.IFormatProvider)\n  parent: System.IConvertible\n  isExternal: false\n  name: ToByte(IFormatProvider)\n  fullName: System.IConvertible.ToByte(System.IFormatProvider)\n  spec.csharp:\n  - uid: System.IConvertible.ToByte(System.IFormatProvider)\n    name: ToByte\n    fullName: System.IConvertible.ToByte\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IConvertible.ToByte(System.IFormatProvider)\n    name: ToByte\n    fullName: System.IConvertible.ToByte\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  nameWithType: IConvertible.ToByte(IFormatProvider)\n  commentId: M:System.IConvertible.ToByte(System.IFormatProvider)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  fullName: System.Byte\n  nameWithType: Byte\n  commentId: T:System.Byte\n- uid: System.IConvertible.ToChar(System.IFormatProvider)\n  parent: System.IConvertible\n  isExternal: false\n  name: ToChar(IFormatProvider)\n  fullName: System.IConvertible.ToChar(System.IFormatProvider)\n  spec.csharp:\n  - uid: System.IConvertible.ToChar(System.IFormatProvider)\n    name: ToChar\n    fullName: System.IConvertible.ToChar\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IConvertible.ToChar(System.IFormatProvider)\n    name: ToChar\n    fullName: System.IConvertible.ToChar\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  nameWithType: IConvertible.ToChar(IFormatProvider)\n  commentId: M:System.IConvertible.ToChar(System.IFormatProvider)\n- uid: System.Char\n  parent: System\n  isExternal: false\n  name: Char\n  fullName: System.Char\n  nameWithType: Char\n  commentId: T:System.Char\n- uid: System.IConvertible.ToDateTime(System.IFormatProvider)\n  parent: System.IConvertible\n  isExternal: false\n  name: ToDateTime(IFormatProvider)\n  fullName: System.IConvertible.ToDateTime(System.IFormatProvider)\n  spec.csharp:\n  - uid: System.IConvertible.ToDateTime(System.IFormatProvider)\n    name: ToDateTime\n    fullName: System.IConvertible.ToDateTime\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IConvertible.ToDateTime(System.IFormatProvider)\n    name: ToDateTime\n    fullName: System.IConvertible.ToDateTime\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  nameWithType: IConvertible.ToDateTime(IFormatProvider)\n  commentId: M:System.IConvertible.ToDateTime(System.IFormatProvider)\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  fullName: System.DateTime\n  nameWithType: DateTime\n  commentId: T:System.DateTime\n- uid: System.IConvertible.ToDecimal(System.IFormatProvider)\n  parent: System.IConvertible\n  isExternal: false\n  name: ToDecimal(IFormatProvider)\n  fullName: System.IConvertible.ToDecimal(System.IFormatProvider)\n  spec.csharp:\n  - uid: System.IConvertible.ToDecimal(System.IFormatProvider)\n    name: ToDecimal\n    fullName: System.IConvertible.ToDecimal\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IConvertible.ToDecimal(System.IFormatProvider)\n    name: ToDecimal\n    fullName: System.IConvertible.ToDecimal\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  nameWithType: IConvertible.ToDecimal(IFormatProvider)\n  commentId: M:System.IConvertible.ToDecimal(System.IFormatProvider)\n- uid: System.Decimal\n  parent: System\n  isExternal: false\n  name: Decimal\n  fullName: System.Decimal\n  nameWithType: Decimal\n  commentId: T:System.Decimal\n- uid: System.IConvertible.ToDouble(System.IFormatProvider)\n  parent: System.IConvertible\n  isExternal: false\n  name: ToDouble(IFormatProvider)\n  fullName: System.IConvertible.ToDouble(System.IFormatProvider)\n  spec.csharp:\n  - uid: System.IConvertible.ToDouble(System.IFormatProvider)\n    name: ToDouble\n    fullName: System.IConvertible.ToDouble\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IConvertible.ToDouble(System.IFormatProvider)\n    name: ToDouble\n    fullName: System.IConvertible.ToDouble\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  nameWithType: IConvertible.ToDouble(IFormatProvider)\n  commentId: M:System.IConvertible.ToDouble(System.IFormatProvider)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  fullName: System.Double\n  nameWithType: Double\n  commentId: T:System.Double\n- uid: System.IConvertible.ToInt16(System.IFormatProvider)\n  parent: System.IConvertible\n  isExternal: false\n  name: ToInt16(IFormatProvider)\n  fullName: System.IConvertible.ToInt16(System.IFormatProvider)\n  spec.csharp:\n  - uid: System.IConvertible.ToInt16(System.IFormatProvider)\n    name: ToInt16\n    fullName: System.IConvertible.ToInt16\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IConvertible.ToInt16(System.IFormatProvider)\n    name: ToInt16\n    fullName: System.IConvertible.ToInt16\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  nameWithType: IConvertible.ToInt16(IFormatProvider)\n  commentId: M:System.IConvertible.ToInt16(System.IFormatProvider)\n- uid: System.Int16\n  parent: System\n  isExternal: false\n  name: Int16\n  fullName: System.Int16\n  nameWithType: Int16\n  commentId: T:System.Int16\n- uid: System.IConvertible.ToInt32(System.IFormatProvider)\n  parent: System.IConvertible\n  isExternal: false\n  name: ToInt32(IFormatProvider)\n  fullName: System.IConvertible.ToInt32(System.IFormatProvider)\n  spec.csharp:\n  - uid: System.IConvertible.ToInt32(System.IFormatProvider)\n    name: ToInt32\n    fullName: System.IConvertible.ToInt32\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IConvertible.ToInt32(System.IFormatProvider)\n    name: ToInt32\n    fullName: System.IConvertible.ToInt32\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  nameWithType: IConvertible.ToInt32(IFormatProvider)\n  commentId: M:System.IConvertible.ToInt32(System.IFormatProvider)\n- uid: System.IConvertible.ToInt64(System.IFormatProvider)\n  parent: System.IConvertible\n  isExternal: false\n  name: ToInt64(IFormatProvider)\n  fullName: System.IConvertible.ToInt64(System.IFormatProvider)\n  spec.csharp:\n  - uid: System.IConvertible.ToInt64(System.IFormatProvider)\n    name: ToInt64\n    fullName: System.IConvertible.ToInt64\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IConvertible.ToInt64(System.IFormatProvider)\n    name: ToInt64\n    fullName: System.IConvertible.ToInt64\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  nameWithType: IConvertible.ToInt64(IFormatProvider)\n  commentId: M:System.IConvertible.ToInt64(System.IFormatProvider)\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  fullName: System.Int64\n  nameWithType: Int64\n  commentId: T:System.Int64\n- uid: System.IConvertible.ToSByte(System.IFormatProvider)\n  parent: System.IConvertible\n  isExternal: false\n  name: ToSByte(IFormatProvider)\n  fullName: System.IConvertible.ToSByte(System.IFormatProvider)\n  spec.csharp:\n  - uid: System.IConvertible.ToSByte(System.IFormatProvider)\n    name: ToSByte\n    fullName: System.IConvertible.ToSByte\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IConvertible.ToSByte(System.IFormatProvider)\n    name: ToSByte\n    fullName: System.IConvertible.ToSByte\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  nameWithType: IConvertible.ToSByte(IFormatProvider)\n  commentId: M:System.IConvertible.ToSByte(System.IFormatProvider)\n- uid: System.SByte\n  parent: System\n  isExternal: false\n  name: SByte\n  fullName: System.SByte\n  nameWithType: SByte\n  commentId: T:System.SByte\n- uid: System.IConvertible.ToSingle(System.IFormatProvider)\n  parent: System.IConvertible\n  isExternal: false\n  name: ToSingle(IFormatProvider)\n  fullName: System.IConvertible.ToSingle(System.IFormatProvider)\n  spec.csharp:\n  - uid: System.IConvertible.ToSingle(System.IFormatProvider)\n    name: ToSingle\n    fullName: System.IConvertible.ToSingle\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IConvertible.ToSingle(System.IFormatProvider)\n    name: ToSingle\n    fullName: System.IConvertible.ToSingle\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  nameWithType: IConvertible.ToSingle(IFormatProvider)\n  commentId: M:System.IConvertible.ToSingle(System.IFormatProvider)\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  fullName: System.Single\n  nameWithType: Single\n  commentId: T:System.Single\n- uid: System.IConvertible.ToType(System.Type,System.IFormatProvider)\n  parent: System.IConvertible\n  isExternal: false\n  name: ToType(Type, IFormatProvider)\n  fullName: System.IConvertible.ToType(System.Type, System.IFormatProvider)\n  spec.csharp:\n  - uid: System.IConvertible.ToType(System.Type,System.IFormatProvider)\n    name: ToType\n    fullName: System.IConvertible.ToType\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n  - name: ', '\n    fullName: ', '\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IConvertible.ToType(System.Type,System.IFormatProvider)\n    name: ToType\n    fullName: System.IConvertible.ToType\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n  - name: ', '\n    fullName: ', '\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  nameWithType: IConvertible.ToType(Type, IFormatProvider)\n  commentId: M:System.IConvertible.ToType(System.Type,System.IFormatProvider)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  fullName: System.Type\n  nameWithType: Type\n  commentId: T:System.Type\n- uid: System.IConvertible.ToUInt16(System.IFormatProvider)\n  parent: System.IConvertible\n  isExternal: false\n  name: ToUInt16(IFormatProvider)\n  fullName: System.IConvertible.ToUInt16(System.IFormatProvider)\n  spec.csharp:\n  - uid: System.IConvertible.ToUInt16(System.IFormatProvider)\n    name: ToUInt16\n    fullName: System.IConvertible.ToUInt16\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IConvertible.ToUInt16(System.IFormatProvider)\n    name: ToUInt16\n    fullName: System.IConvertible.ToUInt16\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  nameWithType: IConvertible.ToUInt16(IFormatProvider)\n  commentId: M:System.IConvertible.ToUInt16(System.IFormatProvider)\n- uid: System.UInt16\n  parent: System\n  isExternal: false\n  name: UInt16\n  fullName: System.UInt16\n  nameWithType: UInt16\n  commentId: T:System.UInt16\n- uid: System.IConvertible.ToUInt32(System.IFormatProvider)\n  parent: System.IConvertible\n  isExternal: false\n  name: ToUInt32(IFormatProvider)\n  fullName: System.IConvertible.ToUInt32(System.IFormatProvider)\n  spec.csharp:\n  - uid: System.IConvertible.ToUInt32(System.IFormatProvider)\n    name: ToUInt32\n    fullName: System.IConvertible.ToUInt32\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IConvertible.ToUInt32(System.IFormatProvider)\n    name: ToUInt32\n    fullName: System.IConvertible.ToUInt32\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  nameWithType: IConvertible.ToUInt32(IFormatProvider)\n  commentId: M:System.IConvertible.ToUInt32(System.IFormatProvider)\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  fullName: System.UInt32\n  nameWithType: UInt32\n  commentId: T:System.UInt32\n- uid: System.IConvertible.ToUInt64(System.IFormatProvider)\n  parent: System.IConvertible\n  isExternal: false\n  name: ToUInt64(IFormatProvider)\n  fullName: System.IConvertible.ToUInt64(System.IFormatProvider)\n  spec.csharp:\n  - uid: System.IConvertible.ToUInt64(System.IFormatProvider)\n    name: ToUInt64\n    fullName: System.IConvertible.ToUInt64\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IConvertible.ToUInt64(System.IFormatProvider)\n    name: ToUInt64\n    fullName: System.IConvertible.ToUInt64\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  nameWithType: IConvertible.ToUInt64(IFormatProvider)\n  commentId: M:System.IConvertible.ToUInt64(System.IFormatProvider)\n- uid: System.UInt64\n  parent: System\n  isExternal: false\n  name: UInt64\n  fullName: System.UInt64\n  nameWithType: UInt64\n  commentId: T:System.UInt64\n- uid: System.ValueType.ToString\n  parent: System.ValueType\n  isExternal: false\n  name: ToString()\n  fullName: System.ValueType.ToString()\n  spec.csharp:\n  - uid: System.ValueType.ToString\n    name: ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.ToString\n    name: ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ValueType.ToString()\n  commentId: M:System.ValueType.ToString\n- uid: System.IConvertible.ToString(System.IFormatProvider)\n  parent: System.IConvertible\n  isExternal: false\n  name: ToString(IFormatProvider)\n  fullName: System.IConvertible.ToString(System.IFormatProvider)\n  spec.csharp:\n  - uid: System.IConvertible.ToString(System.IFormatProvider)\n    name: ToString\n    fullName: System.IConvertible.ToString\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IConvertible.ToString(System.IFormatProvider)\n    name: ToString\n    fullName: System.IConvertible.ToString\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  nameWithType: IConvertible.ToString(IFormatProvider)\n  commentId: M:System.IConvertible.ToString(System.IFormatProvider)\n- uid: System.IFormattable.ToString(System.String,System.IFormatProvider)\n  parent: System.IFormattable\n  isExternal: true\n  name: ToString(String, IFormatProvider)\n  fullName: System.IFormattable.ToString(System.String, System.IFormatProvider)\n  spec.csharp:\n  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)\n    name: ToString\n    fullName: System.IFormattable.ToString\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)\n    name: ToString\n    fullName: System.IFormattable.ToString\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  nameWithType: IFormattable.ToString(String, IFormatProvider)\n  commentId: M:System.IFormattable.ToString(System.String,System.IFormatProvider)\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.FormatException\n  parent: System\n  isExternal: false\n  name: FormatException\n  fullName: System.FormatException\n  nameWithType: FormatException\n  commentId: T:System.FormatException\n- uid: System.OverflowException\n  isExternal: false\n  name: OverflowException\n  fullName: System.OverflowException\n  nameWithType: OverflowException\n  commentId: T:System.OverflowException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n- uid: System.InvalidCastException\n  isExternal: false\n  name: InvalidCastException\n  fullName: System.InvalidCastException\n  nameWithType: InvalidCastException\n  commentId: T:System.InvalidCastException\n"}