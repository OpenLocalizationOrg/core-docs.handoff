{"nodes":[{"pos":[650,664],"content":"ArrayConverter","needQuote":true,"nodes":[{"content":"ArrayConverter","pos":[0,14]}]},{"pos":[5698,5714],"content":"ArrayConverter()","needQuote":true,"nodes":[{"content":"ArrayConverter()","pos":[0,16]}]},{"pos":[7078,7138],"content":"ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)","needQuote":true,"nodes":[{"content":"ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)","pos":[0,60]}]},{"content":"\\n&lt;p&gt;The culture into which &lt;em&gt;value&lt;/em&gt; will be converted.&lt;/p&gt;\\n","pos":[8474,8541],"source":"\\n<p>The culture into which <em>value</em> will be converted.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;destinationType&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[9364,9421],"source":"\\n<p>\\n<em>destinationType</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[9422,9428],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The conversion cannot be performed.","pos":[9533,9573],"source":"\\n<p>The conversion cannot be performed."},{"content":"&lt;/p&gt;\\n","pos":[9574,9580],"source":" </p>\\n"},{"pos":[10222,10280],"content":"GetProperties(ITypeDescriptorContext, Object, Attribute[])","needQuote":true,"nodes":[{"content":"GetProperties(ITypeDescriptorContext, Object, Attribute[])","pos":[0,58]}]},{"pos":[13317,13363],"content":"GetPropertiesSupported(ITypeDescriptorContext)","needQuote":true,"nodes":[{"content":"GetPropertiesSupported(ITypeDescriptorContext)","pos":[0,46]}]},{"pos":[15236,15257],"content":"System.ComponentModel","needQuote":true,"nodes":[{"content":"System.ComponentModel","pos":[0,21]}]},{"pos":[15433,15439],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15621,15634],"content":"TypeConverter","needQuote":true,"nodes":[{"content":"TypeConverter","pos":[0,13]}]},{"pos":[15873,15892],"content":"CollectionConverter","needQuote":true,"nodes":[{"content":"CollectionConverter","pos":[0,19]}]},{"pos":[16229,16273],"content":"CanConvertFrom(ITypeDescriptorContext, Type)","needQuote":true,"nodes":[{"content":"CanConvertFrom(ITypeDescriptorContext, Type)","pos":[0,44]}]},{"pos":[16539,16553],"content":"CanConvertFrom","needQuote":true,"nodes":[{"content":"CanConvertFrom","pos":[0,14]}]},{"pos":[16629,16630],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16711,16733],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[16804,16805]},{"pos":[16858,16862],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[16920,16921],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17077,17091],"content":"CanConvertFrom","needQuote":true,"nodes":[{"content":"CanConvertFrom","pos":[0,14]}]},{"pos":[17167,17168],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17249,17271],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[17342,17343]},{"pos":[17396,17400],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[17458,17459],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17819,17839],"content":"CanConvertFrom(Type)","needQuote":true,"nodes":[{"content":"CanConvertFrom(Type)","pos":[0,20]}]},{"pos":[18014,18028],"content":"CanConvertFrom","needQuote":true,"nodes":[{"content":"CanConvertFrom","pos":[0,14]}]},{"pos":[18104,18105],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18153,18157],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[18215,18216],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18327,18341],"content":"CanConvertFrom","needQuote":true,"nodes":[{"content":"CanConvertFrom","pos":[0,14]}]},{"pos":[18417,18418],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18466,18470],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[18528,18529],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18863,18905],"content":"CanConvertTo(ITypeDescriptorContext, Type)","needQuote":true,"nodes":[{"content":"CanConvertTo(ITypeDescriptorContext, Type)","pos":[0,42]}]},{"pos":[19167,19179],"content":"CanConvertTo","needQuote":true,"nodes":[{"content":"CanConvertTo","pos":[0,12]}]},{"pos":[19253,19254],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19335,19357],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[19428,19429]},{"pos":[19482,19486],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[19544,19545],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19699,19711],"content":"CanConvertTo","needQuote":true,"nodes":[{"content":"CanConvertTo","pos":[0,12]}]},{"pos":[19785,19786],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19867,19889],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[19960,19961]},{"pos":[20014,20018],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[20076,20077],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20431,20449],"content":"CanConvertTo(Type)","needQuote":true,"nodes":[{"content":"CanConvertTo(Type)","pos":[0,18]}]},{"pos":[20620,20632],"content":"CanConvertTo","needQuote":true,"nodes":[{"content":"CanConvertTo","pos":[0,12]}]},{"pos":[20706,20707],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20755,20759],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[20817,20818],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20927,20939],"content":"CanConvertTo","needQuote":true,"nodes":[{"content":"CanConvertTo","pos":[0,12]}]},{"pos":[21013,21014],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21062,21066],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[21124,21125],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21489,21545],"content":"ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)","needQuote":true,"nodes":[{"content":"ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)","pos":[0,56]}]},{"pos":[21876,21887],"content":"ConvertFrom","needQuote":true,"nodes":[{"content":"ConvertFrom","pos":[0,11]}]},{"pos":[21960,21961],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22042,22064],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[22135,22136]},{"pos":[22210,22221],"content":"CultureInfo","needQuote":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"content":",","pos":[22301,22302]},{"pos":[22357,22363],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[22423,22424],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22612,22623],"content":"ConvertFrom","needQuote":true,"nodes":[{"content":"ConvertFrom","pos":[0,11]}]},{"pos":[22696,22697],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22778,22800],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[22871,22872]},{"pos":[22946,22957],"content":"CultureInfo","needQuote":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"content":",","pos":[23037,23038]},{"pos":[23093,23099],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[23159,23160],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23563,23582],"content":"ConvertFrom(Object)","needQuote":true,"nodes":[{"content":"ConvertFrom(Object)","pos":[0,19]}]},{"pos":[23755,23766],"content":"ConvertFrom","needQuote":true,"nodes":[{"content":"ConvertFrom","pos":[0,11]}]},{"pos":[23839,23840],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23890,23896],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[23956,23957],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24067,24078],"content":"ConvertFrom","needQuote":true,"nodes":[{"content":"ConvertFrom","pos":[0,11]}]},{"pos":[24151,24152],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24202,24208],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[24268,24269],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24617,24675],"content":"ConvertFromInvariantString(ITypeDescriptorContext, String)","needQuote":true,"nodes":[{"content":"ConvertFromInvariantString(ITypeDescriptorContext, String)","pos":[0,58]}]},{"pos":[24969,24995],"content":"ConvertFromInvariantString","needQuote":true,"nodes":[{"content":"ConvertFromInvariantString","pos":[0,26]}]},{"pos":[25083,25084],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25165,25187],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[25258,25259]},{"pos":[25314,25320],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[25380,25381],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25551,25577],"content":"ConvertFromInvariantString","needQuote":true,"nodes":[{"content":"ConvertFromInvariantString","pos":[0,26]}]},{"pos":[25665,25666],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25747,25769],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[25840,25841]},{"pos":[25896,25902],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[25962,25963],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26365,26399],"content":"ConvertFromInvariantString(String)","needQuote":true,"nodes":[{"content":"ConvertFromInvariantString(String)","pos":[0,34]}]},{"pos":[26602,26628],"content":"ConvertFromInvariantString","needQuote":true,"nodes":[{"content":"ConvertFromInvariantString","pos":[0,26]}]},{"pos":[26716,26717],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26767,26773],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[26833,26834],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26959,26985],"content":"ConvertFromInvariantString","needQuote":true,"nodes":[{"content":"ConvertFromInvariantString","pos":[0,26]}]},{"pos":[27073,27074],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27124,27130],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[27190,27191],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27593,27655],"content":"ConvertFromString(ITypeDescriptorContext, CultureInfo, String)","needQuote":true,"nodes":[{"content":"ConvertFromString(ITypeDescriptorContext, CultureInfo, String)","pos":[0,62]}]},{"pos":[27998,28015],"content":"ConvertFromString","needQuote":true,"nodes":[{"content":"ConvertFromString","pos":[0,17]}]},{"pos":[28094,28095],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28176,28198],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[28269,28270]},{"pos":[28344,28355],"content":"CultureInfo","needQuote":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"content":",","pos":[28435,28436]},{"pos":[28491,28497],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[28557,28558],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28752,28769],"content":"ConvertFromString","needQuote":true,"nodes":[{"content":"ConvertFromString","pos":[0,17]}]},{"pos":[28848,28849],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28930,28952],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[29023,29024]},{"pos":[29098,29109],"content":"CultureInfo","needQuote":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"content":",","pos":[29189,29190]},{"pos":[29245,29251],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[29311,29312],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29778,29827],"content":"ConvertFromString(ITypeDescriptorContext, String)","needQuote":true,"nodes":[{"content":"ConvertFromString(ITypeDescriptorContext, String)","pos":[0,49]}]},{"pos":[30103,30120],"content":"ConvertFromString","needQuote":true,"nodes":[{"content":"ConvertFromString","pos":[0,17]}]},{"pos":[30199,30200],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30281,30303],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[30374,30375]},{"pos":[30430,30436],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[30496,30497],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30658,30675],"content":"ConvertFromString","needQuote":true,"nodes":[{"content":"ConvertFromString","pos":[0,17]}]},{"pos":[30754,30755],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30836,30858],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[30929,30930]},{"pos":[30985,30991],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[31051,31052],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31427,31452],"content":"ConvertFromString(String)","needQuote":true,"nodes":[{"content":"ConvertFromString(String)","pos":[0,25]}]},{"pos":[31637,31654],"content":"ConvertFromString","needQuote":true,"nodes":[{"content":"ConvertFromString","pos":[0,17]}]},{"pos":[31733,31734],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31784,31790],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[31850,31851],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31967,31984],"content":"ConvertFromString","needQuote":true,"nodes":[{"content":"ConvertFromString","pos":[0,17]}]},{"pos":[32063,32064],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[32114,32120],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[32180,32181],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[32491,32514],"content":"ConvertTo(Object, Type)","needQuote":true,"nodes":[{"content":"ConvertTo(Object, Type)","pos":[0,23]}]},{"pos":[32708,32717],"content":"ConvertTo","needQuote":true,"nodes":[{"content":"ConvertTo","pos":[0,9]}]},{"pos":[32788,32789],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[32839,32845],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[32906,32907]},{"pos":[32960,32964],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[33022,33023],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[33143,33152],"content":"ConvertTo","needQuote":true,"nodes":[{"content":"ConvertTo","pos":[0,9]}]},{"pos":[33223,33224],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[33274,33280],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[33341,33342]},{"pos":[33395,33399],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[33457,33458],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[33818,33874],"content":"ConvertToInvariantString(ITypeDescriptorContext, Object)","needQuote":true,"nodes":[{"content":"ConvertToInvariantString(ITypeDescriptorContext, Object)","pos":[0,56]}]},{"pos":[34164,34188],"content":"ConvertToInvariantString","needQuote":true,"nodes":[{"content":"ConvertToInvariantString","pos":[0,24]}]},{"pos":[34274,34275],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[34356,34378],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[34449,34450]},{"pos":[34505,34511],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[34571,34572],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34740,34764],"content":"ConvertToInvariantString","needQuote":true,"nodes":[{"content":"ConvertToInvariantString","pos":[0,24]}]},{"pos":[34850,34851],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[34932,34954],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[35025,35026]},{"pos":[35081,35087],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[35147,35148],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[35544,35576],"content":"ConvertToInvariantString(Object)","needQuote":true,"nodes":[{"content":"ConvertToInvariantString(Object)","pos":[0,32]}]},{"pos":[35775,35799],"content":"ConvertToInvariantString","needQuote":true,"nodes":[{"content":"ConvertToInvariantString","pos":[0,24]}]},{"pos":[35885,35886],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[35936,35942],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[36002,36003],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[36126,36150],"content":"ConvertToInvariantString","needQuote":true,"nodes":[{"content":"ConvertToInvariantString","pos":[0,24]}]},{"pos":[36236,36237],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[36287,36293],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[36353,36354],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[36750,36810],"content":"ConvertToString(ITypeDescriptorContext, CultureInfo, Object)","needQuote":true,"nodes":[{"content":"ConvertToString(ITypeDescriptorContext, CultureInfo, Object)","pos":[0,60]}]},{"pos":[37149,37164],"content":"ConvertToString","needQuote":true,"nodes":[{"content":"ConvertToString","pos":[0,15]}]},{"pos":[37241,37242],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[37323,37345],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[37416,37417]},{"pos":[37491,37502],"content":"CultureInfo","needQuote":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"content":",","pos":[37582,37583]},{"pos":[37638,37644],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[37704,37705],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[37897,37912],"content":"ConvertToString","needQuote":true,"nodes":[{"content":"ConvertToString","pos":[0,15]}]},{"pos":[37989,37990],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[38071,38093],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[38164,38165]},{"pos":[38239,38250],"content":"CultureInfo","needQuote":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"content":",","pos":[38330,38331]},{"pos":[38386,38392],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[38452,38453],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[38913,38960],"content":"ConvertToString(ITypeDescriptorContext, Object)","needQuote":true,"nodes":[{"content":"ConvertToString(ITypeDescriptorContext, Object)","pos":[0,47]}]},{"pos":[39232,39247],"content":"ConvertToString","needQuote":true,"nodes":[{"content":"ConvertToString","pos":[0,15]}]},{"pos":[39324,39325],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[39406,39428],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[39499,39500]},{"pos":[39555,39561],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[39621,39622],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[39781,39796],"content":"ConvertToString","needQuote":true,"nodes":[{"content":"ConvertToString","pos":[0,15]}]},{"pos":[39873,39874],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[39955,39977],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[40048,40049]},{"pos":[40104,40110],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[40170,40171],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[40540,40563],"content":"ConvertToString(Object)","needQuote":true,"nodes":[{"content":"ConvertToString(Object)","pos":[0,23]}]},{"pos":[40744,40759],"content":"ConvertToString","needQuote":true,"nodes":[{"content":"ConvertToString","pos":[0,15]}]},{"pos":[40836,40837],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[40887,40893],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[40953,40954],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[41068,41083],"content":"ConvertToString","needQuote":true,"nodes":[{"content":"ConvertToString","pos":[0,15]}]},{"pos":[41160,41161],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[41211,41217],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[41277,41278],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[41594,41621],"content":"CreateInstance(IDictionary)","needQuote":true,"nodes":[{"content":"CreateInstance(IDictionary)","pos":[0,27]}]},{"pos":[41834,41848],"content":"CreateInstance","needQuote":true,"nodes":[{"content":"CreateInstance","pos":[0,14]}]},{"pos":[41924,41925],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[41992,42003],"content":"IDictionary","needQuote":true,"nodes":[{"content":"IDictionary","pos":[0,11]}]},{"pos":[42080,42081],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[42211,42225],"content":"CreateInstance","needQuote":true,"nodes":[{"content":"CreateInstance","pos":[0,14]}]},{"pos":[42301,42302],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[42369,42380],"content":"IDictionary","needQuote":true,"nodes":[{"content":"IDictionary","pos":[0,11]}]},{"pos":[42457,42458],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[42839,42890],"content":"CreateInstance(ITypeDescriptorContext, IDictionary)","needQuote":true,"nodes":[{"content":"CreateInstance(ITypeDescriptorContext, IDictionary)","pos":[0,51]}]},{"pos":[43194,43208],"content":"CreateInstance","needQuote":true,"nodes":[{"content":"CreateInstance","pos":[0,14]}]},{"pos":[43284,43285],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[43366,43388],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[43459,43460]},{"pos":[43532,43543],"content":"IDictionary","needQuote":true,"nodes":[{"content":"IDictionary","pos":[0,11]}]},{"pos":[43620,43621],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[43796,43810],"content":"CreateInstance","needQuote":true,"nodes":[{"content":"CreateInstance","pos":[0,14]}]},{"pos":[43886,43887],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[43968,43990],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[44061,44062]},{"pos":[44134,44145],"content":"IDictionary","needQuote":true,"nodes":[{"content":"IDictionary","pos":[0,11]}]},{"pos":[44222,44223],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[44620,44651],"content":"GetConvertFromException(Object)","needQuote":true,"nodes":[{"content":"GetConvertFromException(Object)","pos":[0,31]}]},{"pos":[44848,44871],"content":"GetConvertFromException","needQuote":true,"nodes":[{"content":"GetConvertFromException","pos":[0,23]}]},{"pos":[44956,44957],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[45007,45013],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[45073,45074],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[45196,45219],"content":"GetConvertFromException","needQuote":true,"nodes":[{"content":"GetConvertFromException","pos":[0,23]}]},{"pos":[45304,45305],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[45355,45361],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[45421,45422],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[45756,45791],"content":"GetConvertToException(Object, Type)","needQuote":true,"nodes":[{"content":"GetConvertToException(Object, Type)","pos":[0,35]}]},{"pos":[46009,46030],"content":"GetConvertToException","needQuote":true,"nodes":[{"content":"GetConvertToException","pos":[0,21]}]},{"pos":[46113,46114],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[46164,46170],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[46231,46232]},{"pos":[46285,46289],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[46347,46348],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[46480,46501],"content":"GetConvertToException","needQuote":true,"nodes":[{"content":"GetConvertToException","pos":[0,21]}]},{"pos":[46584,46585],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[46635,46641],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[46702,46703]},{"pos":[46756,46760],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[46818,46819],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[47146,47174],"content":"GetCreateInstanceSupported()","needQuote":true,"nodes":[{"content":"GetCreateInstanceSupported()","pos":[0,28]}]},{"pos":[47349,47375],"content":"GetCreateInstanceSupported","needQuote":true,"nodes":[{"content":"GetCreateInstanceSupported","pos":[0,26]}]},{"pos":[47463,47464],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[47491,47492],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[47602,47628],"content":"GetCreateInstanceSupported","needQuote":true,"nodes":[{"content":"GetCreateInstanceSupported","pos":[0,26]}]},{"pos":[47716,47717],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[47744,47745],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[48089,48139],"content":"GetCreateInstanceSupported(ITypeDescriptorContext)","needQuote":true,"nodes":[{"content":"GetCreateInstanceSupported(ITypeDescriptorContext)","pos":[0,50]}]},{"pos":[48404,48430],"content":"GetCreateInstanceSupported","needQuote":true,"nodes":[{"content":"GetCreateInstanceSupported","pos":[0,26]}]},{"pos":[48518,48519],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[48600,48622],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"pos":[48692,48693],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[48849,48875],"content":"GetCreateInstanceSupported","needQuote":true,"nodes":[{"content":"GetCreateInstanceSupported","pos":[0,26]}]},{"pos":[48963,48964],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[49045,49067],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"pos":[49137,49138],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[49550,49595],"content":"GetProperties(ITypeDescriptorContext, Object)","needQuote":true,"nodes":[{"content":"GetProperties(ITypeDescriptorContext, Object)","pos":[0,45]}]},{"pos":[49863,49876],"content":"GetProperties","needQuote":true,"nodes":[{"content":"GetProperties","pos":[0,13]}]},{"pos":[49951,49952],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[50033,50055],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[50126,50127]},{"pos":[50182,50188],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[50248,50249],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[50406,50419],"content":"GetProperties","needQuote":true,"nodes":[{"content":"GetProperties","pos":[0,13]}]},{"pos":[50494,50495],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[50576,50598],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[50669,50670]},{"pos":[50725,50731],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[50791,50792],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[51155,51176],"content":"GetProperties(Object)","needQuote":true,"nodes":[{"content":"GetProperties(Object)","pos":[0,21]}]},{"pos":[51353,51366],"content":"GetProperties","needQuote":true,"nodes":[{"content":"GetProperties","pos":[0,13]}]},{"pos":[51441,51442],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[51492,51498],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[51558,51559],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[51671,51684],"content":"GetProperties","needQuote":true,"nodes":[{"content":"GetProperties","pos":[0,13]}]},{"pos":[51759,51760],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[51810,51816],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[51876,51877],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[52166,52190],"content":"GetPropertiesSupported()","needQuote":true,"nodes":[{"content":"GetPropertiesSupported()","pos":[0,24]}]},{"pos":[52357,52379],"content":"GetPropertiesSupported","needQuote":true,"nodes":[{"content":"GetPropertiesSupported","pos":[0,22]}]},{"pos":[52463,52464],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[52491,52492],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[52598,52620],"content":"GetPropertiesSupported","needQuote":true,"nodes":[{"content":"GetPropertiesSupported","pos":[0,22]}]},{"pos":[52704,52705],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[52732,52733],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[53014,53033],"content":"GetStandardValues()","needQuote":true,"nodes":[{"content":"GetStandardValues()","pos":[0,19]}]},{"pos":[53190,53207],"content":"GetStandardValues","needQuote":true,"nodes":[{"content":"GetStandardValues","pos":[0,17]}]},{"pos":[53286,53287],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[53314,53315],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[53416,53433],"content":"GetStandardValues","needQuote":true,"nodes":[{"content":"GetStandardValues","pos":[0,17]}]},{"pos":[53512,53513],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[53540,53541],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[53858,53899],"content":"GetStandardValues(ITypeDescriptorContext)","needQuote":true,"nodes":[{"content":"GetStandardValues(ITypeDescriptorContext)","pos":[0,41]}]},{"pos":[54146,54163],"content":"GetStandardValues","needQuote":true,"nodes":[{"content":"GetStandardValues","pos":[0,17]}]},{"pos":[54242,54243],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[54324,54346],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"pos":[54416,54417],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[54564,54581],"content":"GetStandardValues","needQuote":true,"nodes":[{"content":"GetStandardValues","pos":[0,17]}]},{"pos":[54660,54661],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[54742,54764],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"pos":[54834,54835],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[55183,55211],"content":"GetStandardValuesExclusive()","needQuote":true,"nodes":[{"content":"GetStandardValuesExclusive()","pos":[0,28]}]},{"pos":[55386,55412],"content":"GetStandardValuesExclusive","needQuote":true,"nodes":[{"content":"GetStandardValuesExclusive","pos":[0,26]}]},{"pos":[55500,55501],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[55528,55529],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[55639,55665],"content":"GetStandardValuesExclusive","needQuote":true,"nodes":[{"content":"GetStandardValuesExclusive","pos":[0,26]}]},{"pos":[55753,55754],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[55781,55782],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[56126,56176],"content":"GetStandardValuesExclusive(ITypeDescriptorContext)","needQuote":true,"nodes":[{"content":"GetStandardValuesExclusive(ITypeDescriptorContext)","pos":[0,50]}]},{"pos":[56441,56467],"content":"GetStandardValuesExclusive","needQuote":true,"nodes":[{"content":"GetStandardValuesExclusive","pos":[0,26]}]},{"pos":[56555,56556],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[56637,56659],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"pos":[56729,56730],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[56886,56912],"content":"GetStandardValuesExclusive","needQuote":true,"nodes":[{"content":"GetStandardValuesExclusive","pos":[0,26]}]},{"pos":[57000,57001],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[57082,57104],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"pos":[57174,57175],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[57541,57569],"content":"GetStandardValuesSupported()","needQuote":true,"nodes":[{"content":"GetStandardValuesSupported()","pos":[0,28]}]},{"pos":[57744,57770],"content":"GetStandardValuesSupported","needQuote":true,"nodes":[{"content":"GetStandardValuesSupported","pos":[0,26]}]},{"pos":[57858,57859],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[57886,57887],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[57997,58023],"content":"GetStandardValuesSupported","needQuote":true,"nodes":[{"content":"GetStandardValuesSupported","pos":[0,26]}]},{"pos":[58111,58112],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[58139,58140],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[58484,58534],"content":"GetStandardValuesSupported(ITypeDescriptorContext)","needQuote":true,"nodes":[{"content":"GetStandardValuesSupported(ITypeDescriptorContext)","pos":[0,50]}]},{"pos":[58799,58825],"content":"GetStandardValuesSupported","needQuote":true,"nodes":[{"content":"GetStandardValuesSupported","pos":[0,26]}]},{"pos":[58913,58914],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[58995,59017],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"pos":[59087,59088],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[59244,59270],"content":"GetStandardValuesSupported","needQuote":true,"nodes":[{"content":"GetStandardValuesSupported","pos":[0,26]}]},{"pos":[59358,59359],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[59440,59462],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"pos":[59532,59533],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[59939,59978],"content":"IsValid(ITypeDescriptorContext, Object)","needQuote":true,"nodes":[{"content":"IsValid(ITypeDescriptorContext, Object)","pos":[0,39]}]},{"pos":[60234,60241],"content":"IsValid","needQuote":true,"nodes":[{"content":"IsValid","pos":[0,7]}]},{"pos":[60310,60311],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[60392,60414],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[60485,60486]},{"pos":[60541,60547],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[60607,60608],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[60759,60766],"content":"IsValid","needQuote":true,"nodes":[{"content":"IsValid","pos":[0,7]}]},{"pos":[60835,60836],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[60917,60939],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[61010,61011]},{"pos":[61066,61072],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[61132,61133],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[61478,61493],"content":"IsValid(Object)","needQuote":true,"nodes":[{"content":"IsValid(Object)","pos":[0,15]}]},{"pos":[61658,61665],"content":"IsValid","needQuote":true,"nodes":[{"content":"IsValid","pos":[0,7]}]},{"pos":[61734,61735],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[61785,61791],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[61851,61852],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[61958,61965],"content":"IsValid","needQuote":true,"nodes":[{"content":"IsValid","pos":[0,7]}]},{"pos":[62034,62035],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[62085,62091],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[62151,62152],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[62488,62542],"content":"SortProperties(PropertyDescriptorCollection, String[])","needQuote":true,"nodes":[{"content":"SortProperties(PropertyDescriptorCollection, String[])","pos":[0,54]}]},{"pos":[63029,63043],"content":"SortProperties","needQuote":true,"nodes":[{"content":"SortProperties","pos":[0,14]}]},{"pos":[63119,63120],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[63207,63235],"content":"PropertyDescriptorCollection","needQuote":true,"nodes":[{"content":"PropertyDescriptorCollection","pos":[0,28]}]},{"content":",","pos":[63312,63313]},{"pos":[63368,63374],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":"[]","pos":[63435,63437]},{"pos":[63468,63469],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[63635,63649],"content":"SortProperties","needQuote":true,"nodes":[{"content":"SortProperties","pos":[0,14]}]},{"pos":[63725,63726],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[63813,63841],"content":"PropertyDescriptorCollection","needQuote":true,"nodes":[{"content":"PropertyDescriptorCollection","pos":[0,28]}]},{"content":",","pos":[63918,63919]},{"pos":[63974,63980],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[64040,64042],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[64070,64071],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[64476,64486],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[64581,64589],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[64658,64659],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[64686,64687],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[64757,64765],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[64834,64835],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[64862,64863],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[65046,65060],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[65179,65185],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[65252,65253],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[65303,65309],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[65369,65370],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[65453,65459],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[65526,65527],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[65577,65583],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[65643,65644],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[65858,65880],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[66028,66034],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[66101,66102],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[66152,66158],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[66219,66220]},{"pos":[66275,66281],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[66341,66342],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[66439,66445],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[66512,66513],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[66563,66569],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[66630,66631]},{"pos":[66686,66692],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[66752,66753],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[66998,67029],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[67195,67210],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[67286,67287],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[67337,67343],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[67404,67405]},{"pos":[67460,67466],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[67526,67527],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[67633,67648],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[67724,67725],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[67775,67781],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[67842,67843]},{"pos":[67898,67904],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[67964,67965],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[68195,68208],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[68309,68320],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[68392,68393],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[68420,68421],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[68494,68505],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[68577,68578],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[68605,68606],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[68781,68790],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[68883,68890],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[68958,68959],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[68986,68987],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[69056,69063],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[69131,69132],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[69159,69160],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[69335,69352],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[69461,69476],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[69552,69553],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[69580,69581],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[69658,69673],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[69749,69750],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[69777,69778],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[69923,69929],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[70237,70297],"content":"ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)","needQuote":true,"nodes":[{"content":"ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)","pos":[0,60]}]},{"pos":[70661,70670],"content":"ConvertTo","needQuote":true,"nodes":[{"content":"ConvertTo","pos":[0,9]}]},{"pos":[70747,70748],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[70829,70851],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[70922,70923]},{"pos":[70997,71008],"content":"CultureInfo","needQuote":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"content":",","pos":[71088,71089]},{"pos":[71144,71150],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[71211,71212]},{"pos":[71265,71269],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[71327,71328],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[71532,71541],"content":"ConvertTo","needQuote":true,"nodes":[{"content":"ConvertTo","pos":[0,9]}]},{"pos":[71618,71619],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[71700,71722],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[71793,71794]},{"pos":[71868,71879],"content":"CultureInfo","needQuote":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"content":",","pos":[71959,71960]},{"pos":[72015,72021],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[72082,72083]},{"pos":[72136,72140],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[72198,72199],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[72597,72619],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"pos":[72875,72886],"content":"CultureInfo","needQuote":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"pos":[73072,73076],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[73205,73225],"content":"System.Globalization","needQuote":true,"nodes":[{"content":"System.Globalization","pos":[0,20]}]},{"pos":[73553,73611],"content":"GetProperties(ITypeDescriptorContext, Object, Attribute[])","needQuote":true,"nodes":[{"content":"GetProperties(ITypeDescriptorContext, Object, Attribute[])","pos":[0,58]}]},{"pos":[74152,74165],"content":"GetProperties","needQuote":true,"nodes":[{"content":"GetProperties","pos":[0,13]}]},{"pos":[74246,74247],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[74328,74350],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[74421,74422]},{"pos":[74477,74483],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[74544,74545]},{"pos":[74603,74612],"content":"Attribute","needQuote":true,"nodes":[{"content":"Attribute","pos":[0,9]}]},{"content":"[]","pos":[74676,74678]},{"pos":[74709,74710],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[74892,74905],"content":"GetProperties","needQuote":true,"nodes":[{"content":"GetProperties","pos":[0,13]}]},{"pos":[74986,74987],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[75068,75090],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"content":",","pos":[75161,75162]},{"pos":[75217,75223],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[75284,75285]},{"pos":[75343,75352],"content":"Attribute","needQuote":true,"nodes":[{"content":"Attribute","pos":[0,9]}]},{"pos":[75415,75417],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[75445,75446],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[75840,75851],"content":"Attribute[]","needQuote":true,"nodes":[{"content":"Attribute[]","pos":[0,11]}]},{"pos":[75991,76000],"content":"Attribute","needQuote":true,"nodes":[{"content":"Attribute","pos":[0,9]}]},{"content":"[]","pos":[76064,76066]},{"pos":[76134,76143],"content":"Attribute","needQuote":true,"nodes":[{"content":"Attribute","pos":[0,9]}]},{"pos":[76206,76208],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[76403,76431],"content":"PropertyDescriptorCollection","needQuote":true,"nodes":[{"content":"PropertyDescriptorCollection","pos":[0,28]}]},{"pos":[76804,76850],"content":"GetPropertiesSupported(ITypeDescriptorContext)","needQuote":true,"nodes":[{"content":"GetPropertiesSupported(ITypeDescriptorContext)","pos":[0,46]}]},{"pos":[77119,77141],"content":"GetPropertiesSupported","needQuote":true,"nodes":[{"content":"GetPropertiesSupported","pos":[0,22]}]},{"pos":[77231,77232],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[77313,77335],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"pos":[77405,77406],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[77564,77586],"content":"GetPropertiesSupported","needQuote":true,"nodes":[{"content":"GetPropertiesSupported","pos":[0,22]}]},{"pos":[77676,77677],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[77758,77780],"content":"ITypeDescriptorContext","needQuote":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"pos":[77850,77851],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[78144,78151],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[78297,78318],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[78523,78544],"content":"NotSupportedException","needQuote":true,"nodes":[{"content":"NotSupportedException","pos":[0,21]}]}],"content":"items:\n- uid: System.ComponentModel.ArrayConverter\n  commentId: T:System.ComponentModel.ArrayConverter\n  id: ArrayConverter\n  parent: System.ComponentModel\n  children:\n  - System.ComponentModel.ArrayConverter.#ctor\n  - System.ComponentModel.ArrayConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  - System.ComponentModel.ArrayConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  - System.ComponentModel.ArrayConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  langs:\n  - csharp\n  - vb\n  name: ArrayConverter\n  fullName: System.ComponentModel.ArrayConverter\n  type: Class\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/ArrayConverter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ArrayConverter\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/ArrayConverter.cs\n    startLine: 12\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Provides a type converter to convert <xref href=\\\"System.Array\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects to and from various other representations.</p>\\n\"\n  syntax:\n    content: 'public class ArrayConverter : CollectionConverter'\n    content.vb: >-\n      Public Class ArrayConverter\n          Inherits CollectionConverter\n  seealso:\n  - type: System.ComponentModel.TypeDescriptor\n    commentId: T:System.ComponentModel.TypeDescriptor\n  inheritance:\n  - System.Object\n  - System.ComponentModel.TypeConverter\n  - System.ComponentModel.CollectionConverter\n  inheritedMembers:\n  - System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  - System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  - System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported\n  - System.ComponentModel.TypeConverter.GetStandardValues\n  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.IsValid(System.Object)\n  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: ArrayConverter\n- uid: System.ComponentModel.ArrayConverter.#ctor\n  commentId: M:System.ComponentModel.ArrayConverter.#ctor\n  id: '#ctor'\n  parent: System.ComponentModel.ArrayConverter\n  langs:\n  - csharp\n  - vb\n  name: ArrayConverter()\n  fullName: System.ComponentModel.ArrayConverter.ArrayConverter()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs\n    startLine: 12\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.ComponentModel.ArrayConverter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class. </p>\\n\"\n  syntax:\n    content: public ArrayConverter()\n    content.vb: Public Sub New\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: ArrayConverter.ArrayConverter()\n- uid: System.ComponentModel.ArrayConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  commentId: M:System.ComponentModel.ArrayConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.ComponentModel.ArrayConverter\n  langs:\n  - csharp\n  - vb\n  name: ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  fullName: System.ComponentModel.ArrayConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object, System.Type)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/ArrayConverter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ConvertTo\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/ArrayConverter.cs\n    startLine: 17\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Converts the given value object to the specified destination type.</p>\\n\"\n  syntax:\n    content: public override object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType)\n    content.vb: Public Overrides Function ConvertTo(context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: \"\\n<p>An <xref href=\\\"System.ComponentModel.ITypeDescriptorContext\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that provides a format context. </p>\\n\"\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: \"\\n<p>The culture into which <em>value</em> will be converted.</p>\\n\"\n    - id: value\n      type: System.Object\n      description: \"\\n<p>The <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to convert. </p>\\n\"\n    - id: destinationType\n      type: System.Type\n      description: \"\\n<p>The <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to convert the value to. </p>\\n\"\n    return:\n      type: System.Object\n      description: \"\\n<p>An <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents the converted value.</p>\\n\"\n  overridden: System.ComponentModel.CollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>destinationType</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The conversion cannot be performed. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: ArrayConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n- uid: System.ComponentModel.ArrayConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  commentId: M:System.ComponentModel.ArrayConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  id: GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  parent: System.ComponentModel.ArrayConverter\n  langs:\n  - csharp\n  - vb\n  name: GetProperties(ITypeDescriptorContext, Object, Attribute[])\n  fullName: System.ComponentModel.ArrayConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext, System.Object, System.Attribute[])\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/ArrayConverter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetProperties\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/ArrayConverter.cs\n    startLine: 36\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Gets a collection of properties for the type of array specified by the value parameter.</p>\\n\"\n  syntax:\n    content: public override PropertyDescriptorCollection GetProperties(ITypeDescriptorContext context, object value, Attribute[] attributes)\n    content.vb: Public Overrides Function GetProperties(context As ITypeDescriptorContext, value As Object, attributes As Attribute()) As PropertyDescriptorCollection\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: \"\\n<p>An <xref href=\\\"System.ComponentModel.ITypeDescriptorContext\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that provides a format context. </p>\\n\"\n    - id: value\n      type: System.Object\n      description: \"\\n<p>An <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that specifies the type of array to get the properties for. </p>\\n\"\n    - id: attributes\n      type: System.Attribute[]\n      description: \"\\n<p>An array of type <xref href=\\\"System.Attribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that will be used as a filter. </p>\\n\"\n    return:\n      type: System.ComponentModel.PropertyDescriptorCollection\n      description: \"\\n<p>A <xref href=\\\"System.ComponentModel.PropertyDescriptorCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> with the properties that are exposed for an array, or <strong>null</strong> if there are no properties.</p>\\n\"\n  overridden: System.ComponentModel.CollectionConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  fullName.vb: System.ComponentModel.ArrayConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext, System.Object, System.Attribute())\n  name.vb: GetProperties(ITypeDescriptorContext, Object, Attribute())\n  nameWithType: ArrayConverter.GetProperties(ITypeDescriptorContext, Object, Attribute[])\n  nameWithType.vb: ArrayConverter.GetProperties(ITypeDescriptorContext, Object, Attribute())\n- uid: System.ComponentModel.ArrayConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  commentId: M:System.ComponentModel.ArrayConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  id: GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.ArrayConverter\n  langs:\n  - csharp\n  - vb\n  name: GetPropertiesSupported(ITypeDescriptorContext)\n  fullName: System.ComponentModel.ArrayConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/ArrayConverter.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetPropertiesSupported\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/ArrayConverter.cs\n    startLine: 67\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Gets a value indicating whether this object supports properties.</p>\\n\"\n  syntax:\n    content: public override bool GetPropertiesSupported(ITypeDescriptorContext context)\n    content.vb: Public Overrides Function GetPropertiesSupported(context As ITypeDescriptorContext) As Boolean\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: \"\\n<p>An <xref href=\\\"System.ComponentModel.ITypeDescriptorContext\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that provides a format context. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> because <xref href=\\\"System.ComponentModel.ArrayConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> should be called to find the properties of this object. This method never returns <strong>false</strong>.</p>\\n\"\n  overridden: System.ComponentModel.CollectionConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: ArrayConverter.GetPropertiesSupported(ITypeDescriptorContext)\nreferences:\n- uid: System.ComponentModel\n  isExternal: false\n  name: System.ComponentModel\n  fullName: System.ComponentModel\n  nameWithType: System.ComponentModel\n  commentId: N:System.ComponentModel\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.ComponentModel.TypeConverter\n  parent: System.ComponentModel\n  isExternal: false\n  name: TypeConverter\n  fullName: System.ComponentModel.TypeConverter\n  nameWithType: TypeConverter\n  commentId: T:System.ComponentModel.TypeConverter\n- uid: System.ComponentModel.CollectionConverter\n  parent: System.ComponentModel\n  isExternal: false\n  name: CollectionConverter\n  fullName: System.ComponentModel.CollectionConverter\n  nameWithType: CollectionConverter\n  commentId: T:System.ComponentModel.CollectionConverter\n- uid: System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: CanConvertFrom(ITypeDescriptorContext, Type)\n  fullName: System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Type)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n    name: CanConvertFrom\n    fullName: System.ComponentModel.TypeConverter.CanConvertFrom\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n    name: CanConvertFrom\n    fullName: System.ComponentModel.TypeConverter.CanConvertFrom\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n  commentId: M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n- uid: System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: CanConvertFrom(Type)\n  fullName: System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n    name: CanConvertFrom\n    fullName: System.ComponentModel.TypeConverter.CanConvertFrom\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n    name: CanConvertFrom\n    fullName: System.ComponentModel.TypeConverter.CanConvertFrom\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.CanConvertFrom(Type)\n  commentId: M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n- uid: System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: CanConvertTo(ITypeDescriptorContext, Type)\n  fullName: System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Type)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n    name: CanConvertTo\n    fullName: System.ComponentModel.TypeConverter.CanConvertTo\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n    name: CanConvertTo\n    fullName: System.ComponentModel.TypeConverter.CanConvertTo\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.CanConvertTo(ITypeDescriptorContext, Type)\n  commentId: M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n- uid: System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: CanConvertTo(Type)\n  fullName: System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n    name: CanConvertTo\n    fullName: System.ComponentModel.TypeConverter.CanConvertTo\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n    name: CanConvertTo\n    fullName: System.ComponentModel.TypeConverter.CanConvertTo\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.CanConvertTo(Type)\n  commentId: M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n- uid: System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  fullName: System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n    name: ConvertFrom\n    fullName: System.ComponentModel.TypeConverter.ConvertFrom\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.Globalization.CultureInfo\n    name: CultureInfo\n    fullName: System.Globalization.CultureInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n    name: ConvertFrom\n    fullName: System.ComponentModel.TypeConverter.ConvertFrom\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.Globalization.CultureInfo\n    name: CultureInfo\n    fullName: System.Globalization.CultureInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  commentId: M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n- uid: System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: ConvertFrom(Object)\n  fullName: System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n    name: ConvertFrom\n    fullName: System.ComponentModel.TypeConverter.ConvertFrom\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n    name: ConvertFrom\n    fullName: System.ComponentModel.TypeConverter.ConvertFrom\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.ConvertFrom(Object)\n  commentId: M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: ConvertFromInvariantString(ITypeDescriptorContext, String)\n  fullName: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext, System.String)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n    name: ConvertFromInvariantString\n    fullName: System.ComponentModel.TypeConverter.ConvertFromInvariantString\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n    name: ConvertFromInvariantString\n    fullName: System.ComponentModel.TypeConverter.ConvertFromInvariantString\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext, String)\n  commentId: M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: ConvertFromInvariantString(String)\n  fullName: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n    name: ConvertFromInvariantString\n    fullName: System.ComponentModel.TypeConverter.ConvertFromInvariantString\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n    name: ConvertFromInvariantString\n    fullName: System.ComponentModel.TypeConverter.ConvertFromInvariantString\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.ConvertFromInvariantString(String)\n  commentId: M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: ConvertFromString(ITypeDescriptorContext, CultureInfo, String)\n  fullName: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.String)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n    name: ConvertFromString\n    fullName: System.ComponentModel.TypeConverter.ConvertFromString\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.Globalization.CultureInfo\n    name: CultureInfo\n    fullName: System.Globalization.CultureInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n    name: ConvertFromString\n    fullName: System.ComponentModel.TypeConverter.ConvertFromString\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.Globalization.CultureInfo\n    name: CultureInfo\n    fullName: System.Globalization.CultureInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.ConvertFromString(ITypeDescriptorContext, CultureInfo, String)\n  commentId: M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: ConvertFromString(ITypeDescriptorContext, String)\n  fullName: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.String)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n    name: ConvertFromString\n    fullName: System.ComponentModel.TypeConverter.ConvertFromString\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n    name: ConvertFromString\n    fullName: System.ComponentModel.TypeConverter.ConvertFromString\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.ConvertFromString(ITypeDescriptorContext, String)\n  commentId: M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: ConvertFromString(String)\n  fullName: System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n    name: ConvertFromString\n    fullName: System.ComponentModel.TypeConverter.ConvertFromString\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n    name: ConvertFromString\n    fullName: System.ComponentModel.TypeConverter.ConvertFromString\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.ConvertFromString(String)\n  commentId: M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n- uid: System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: ConvertTo(Object, Type)\n  fullName: System.ComponentModel.TypeConverter.ConvertTo(System.Object, System.Type)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n    name: ConvertTo\n    fullName: System.ComponentModel.TypeConverter.ConvertTo\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n    name: ConvertTo\n    fullName: System.ComponentModel.TypeConverter.ConvertTo\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.ConvertTo(Object, Type)\n  commentId: M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: ConvertToInvariantString(ITypeDescriptorContext, Object)\n  fullName: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext, System.Object)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n    name: ConvertToInvariantString\n    fullName: System.ComponentModel.TypeConverter.ConvertToInvariantString\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n    name: ConvertToInvariantString\n    fullName: System.ComponentModel.TypeConverter.ConvertToInvariantString\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.ConvertToInvariantString(ITypeDescriptorContext, Object)\n  commentId: M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: ConvertToInvariantString(Object)\n  fullName: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n    name: ConvertToInvariantString\n    fullName: System.ComponentModel.TypeConverter.ConvertToInvariantString\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n    name: ConvertToInvariantString\n    fullName: System.ComponentModel.TypeConverter.ConvertToInvariantString\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.ConvertToInvariantString(Object)\n  commentId: M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: ConvertToString(ITypeDescriptorContext, CultureInfo, Object)\n  fullName: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n    name: ConvertToString\n    fullName: System.ComponentModel.TypeConverter.ConvertToString\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.Globalization.CultureInfo\n    name: CultureInfo\n    fullName: System.Globalization.CultureInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n    name: ConvertToString\n    fullName: System.ComponentModel.TypeConverter.ConvertToString\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.Globalization.CultureInfo\n    name: CultureInfo\n    fullName: System.Globalization.CultureInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.ConvertToString(ITypeDescriptorContext, CultureInfo, Object)\n  commentId: M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: ConvertToString(ITypeDescriptorContext, Object)\n  fullName: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext, System.Object)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n    name: ConvertToString\n    fullName: System.ComponentModel.TypeConverter.ConvertToString\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n    name: ConvertToString\n    fullName: System.ComponentModel.TypeConverter.ConvertToString\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.ConvertToString(ITypeDescriptorContext, Object)\n  commentId: M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: ConvertToString(Object)\n  fullName: System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n    name: ConvertToString\n    fullName: System.ComponentModel.TypeConverter.ConvertToString\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n    name: ConvertToString\n    fullName: System.ComponentModel.TypeConverter.ConvertToString\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.ConvertToString(Object)\n  commentId: M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n- uid: System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: CreateInstance(IDictionary)\n  fullName: System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n    name: CreateInstance\n    fullName: System.ComponentModel.TypeConverter.CreateInstance\n  - name: (\n    fullName: (\n  - uid: System.Collections.IDictionary\n    name: IDictionary\n    fullName: System.Collections.IDictionary\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n    name: CreateInstance\n    fullName: System.ComponentModel.TypeConverter.CreateInstance\n  - name: (\n    fullName: (\n  - uid: System.Collections.IDictionary\n    name: IDictionary\n    fullName: System.Collections.IDictionary\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.CreateInstance(IDictionary)\n  commentId: M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n- uid: System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: CreateInstance(ITypeDescriptorContext, IDictionary)\n  fullName: System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext, System.Collections.IDictionary)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n    name: CreateInstance\n    fullName: System.ComponentModel.TypeConverter.CreateInstance\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.IDictionary\n    name: IDictionary\n    fullName: System.Collections.IDictionary\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n    name: CreateInstance\n    fullName: System.ComponentModel.TypeConverter.CreateInstance\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.IDictionary\n    name: IDictionary\n    fullName: System.Collections.IDictionary\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.CreateInstance(ITypeDescriptorContext, IDictionary)\n  commentId: M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n- uid: System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: GetConvertFromException(Object)\n  fullName: System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n    name: GetConvertFromException\n    fullName: System.ComponentModel.TypeConverter.GetConvertFromException\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n    name: GetConvertFromException\n    fullName: System.ComponentModel.TypeConverter.GetConvertFromException\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.GetConvertFromException(Object)\n  commentId: M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n- uid: System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: GetConvertToException(Object, Type)\n  fullName: System.ComponentModel.TypeConverter.GetConvertToException(System.Object, System.Type)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n    name: GetConvertToException\n    fullName: System.ComponentModel.TypeConverter.GetConvertToException\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n    name: GetConvertToException\n    fullName: System.ComponentModel.TypeConverter.GetConvertToException\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.GetConvertToException(Object, Type)\n  commentId: M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetCreateInstanceSupported()\n  fullName: System.ComponentModel.TypeConverter.GetCreateInstanceSupported()\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n    name: GetCreateInstanceSupported\n    fullName: System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n    name: GetCreateInstanceSupported\n    fullName: System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.GetCreateInstanceSupported()\n  commentId: M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetCreateInstanceSupported(ITypeDescriptorContext)\n  fullName: System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n    name: GetCreateInstanceSupported\n    fullName: System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n    name: GetCreateInstanceSupported\n    fullName: System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext)\n  commentId: M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: GetProperties(ITypeDescriptorContext, Object)\n  fullName: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext, System.Object)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n    name: GetProperties\n    fullName: System.ComponentModel.TypeConverter.GetProperties\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n    name: GetProperties\n    fullName: System.ComponentModel.TypeConverter.GetProperties\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.GetProperties(ITypeDescriptorContext, Object)\n  commentId: M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n- uid: System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: GetProperties(Object)\n  fullName: System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.GetProperties(System.Object)\n    name: GetProperties\n    fullName: System.ComponentModel.TypeConverter.GetProperties\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.GetProperties(System.Object)\n    name: GetProperties\n    fullName: System.ComponentModel.TypeConverter.GetProperties\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.GetProperties(Object)\n  commentId: M:System.ComponentModel.TypeConverter.GetProperties(System.Object)\n- uid: System.ComponentModel.TypeConverter.GetPropertiesSupported\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetPropertiesSupported()\n  fullName: System.ComponentModel.TypeConverter.GetPropertiesSupported()\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.GetPropertiesSupported\n    name: GetPropertiesSupported\n    fullName: System.ComponentModel.TypeConverter.GetPropertiesSupported\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.GetPropertiesSupported\n    name: GetPropertiesSupported\n    fullName: System.ComponentModel.TypeConverter.GetPropertiesSupported\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.GetPropertiesSupported()\n  commentId: M:System.ComponentModel.TypeConverter.GetPropertiesSupported\n- uid: System.ComponentModel.TypeConverter.GetStandardValues\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValues()\n  fullName: System.ComponentModel.TypeConverter.GetStandardValues()\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.GetStandardValues\n    name: GetStandardValues\n    fullName: System.ComponentModel.TypeConverter.GetStandardValues\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.GetStandardValues\n    name: GetStandardValues\n    fullName: System.ComponentModel.TypeConverter.GetStandardValues\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.GetStandardValues()\n  commentId: M:System.ComponentModel.TypeConverter.GetStandardValues\n- uid: System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValues(ITypeDescriptorContext)\n  fullName: System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n    name: GetStandardValues\n    fullName: System.ComponentModel.TypeConverter.GetStandardValues\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n    name: GetStandardValues\n    fullName: System.ComponentModel.TypeConverter.GetStandardValues\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.GetStandardValues(ITypeDescriptorContext)\n  commentId: M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesExclusive()\n  fullName: System.ComponentModel.TypeConverter.GetStandardValuesExclusive()\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n    name: GetStandardValuesExclusive\n    fullName: System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n    name: GetStandardValuesExclusive\n    fullName: System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.GetStandardValuesExclusive()\n  commentId: M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesExclusive(ITypeDescriptorContext)\n  fullName: System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n    name: GetStandardValuesExclusive\n    fullName: System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n    name: GetStandardValuesExclusive\n    fullName: System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n  commentId: M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesSupported()\n  fullName: System.ComponentModel.TypeConverter.GetStandardValuesSupported()\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported\n    name: GetStandardValuesSupported\n    fullName: System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported\n    name: GetStandardValuesSupported\n    fullName: System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.GetStandardValuesSupported()\n  commentId: M:System.ComponentModel.TypeConverter.GetStandardValuesSupported\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesSupported(ITypeDescriptorContext)\n  fullName: System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n    name: GetStandardValuesSupported\n    fullName: System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n    name: GetStandardValuesSupported\n    fullName: System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n  commentId: M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: IsValid(ITypeDescriptorContext, Object)\n  fullName: System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext, System.Object)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n    name: IsValid\n    fullName: System.ComponentModel.TypeConverter.IsValid\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n    name: IsValid\n    fullName: System.ComponentModel.TypeConverter.IsValid\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.IsValid(ITypeDescriptorContext, Object)\n  commentId: M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n- uid: System.ComponentModel.TypeConverter.IsValid(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: IsValid(Object)\n  fullName: System.ComponentModel.TypeConverter.IsValid(System.Object)\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.IsValid(System.Object)\n    name: IsValid\n    fullName: System.ComponentModel.TypeConverter.IsValid\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.IsValid(System.Object)\n    name: IsValid\n    fullName: System.ComponentModel.TypeConverter.IsValid\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.IsValid(Object)\n  commentId: M:System.ComponentModel.TypeConverter.IsValid(System.Object)\n- uid: System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n  parent: System.ComponentModel.TypeConverter\n  isExternal: true\n  name: SortProperties(PropertyDescriptorCollection, String[])\n  fullName: System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection, System.String[])\n  fullname.vb: System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection, System.String())\n  name.vb: SortProperties(PropertyDescriptorCollection, String())\n  spec.csharp:\n  - uid: System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n    name: SortProperties\n    fullName: System.ComponentModel.TypeConverter.SortProperties\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.PropertyDescriptorCollection\n    name: PropertyDescriptorCollection\n    fullName: System.ComponentModel.PropertyDescriptorCollection\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n    name: SortProperties\n    fullName: System.ComponentModel.TypeConverter.SortProperties\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.PropertyDescriptorCollection\n    name: PropertyDescriptorCollection\n    fullName: System.ComponentModel.PropertyDescriptorCollection\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: TypeConverter.SortProperties(PropertyDescriptorCollection, String[])\n  nameWithType.vb: TypeConverter.SortProperties(PropertyDescriptorCollection, String())\n  commentId: M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.ComponentModel.CollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.ComponentModel.CollectionConverter\n  isExternal: true\n  name: ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  fullName: System.ComponentModel.CollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object, System.Type)\n  spec.csharp:\n  - uid: System.ComponentModel.CollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n    name: ConvertTo\n    fullName: System.ComponentModel.CollectionConverter.ConvertTo\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.Globalization.CultureInfo\n    name: CultureInfo\n    fullName: System.Globalization.CultureInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.CollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n    name: ConvertTo\n    fullName: System.ComponentModel.CollectionConverter.ConvertTo\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.Globalization.CultureInfo\n    name: CultureInfo\n    fullName: System.Globalization.CultureInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CollectionConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  commentId: M:System.ComponentModel.CollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n- uid: System.ComponentModel.ITypeDescriptorContext\n  parent: System.ComponentModel\n  isExternal: false\n  name: ITypeDescriptorContext\n  fullName: System.ComponentModel.ITypeDescriptorContext\n  nameWithType: ITypeDescriptorContext\n  commentId: T:System.ComponentModel.ITypeDescriptorContext\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CultureInfo\n  fullName: System.Globalization.CultureInfo\n  nameWithType: CultureInfo\n  commentId: T:System.Globalization.CultureInfo\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  fullName: System.Type\n  nameWithType: Type\n  commentId: T:System.Type\n- uid: System.Globalization\n  isExternal: false\n  name: System.Globalization\n  fullName: System.Globalization\n  nameWithType: System.Globalization\n  commentId: N:System.Globalization\n- uid: System.ComponentModel.CollectionConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  parent: System.ComponentModel.CollectionConverter\n  isExternal: true\n  name: GetProperties(ITypeDescriptorContext, Object, Attribute[])\n  fullName: System.ComponentModel.CollectionConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext, System.Object, System.Attribute[])\n  fullname.vb: System.ComponentModel.CollectionConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext, System.Object, System.Attribute())\n  name.vb: GetProperties(ITypeDescriptorContext, Object, Attribute())\n  spec.csharp:\n  - uid: System.ComponentModel.CollectionConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n    name: GetProperties\n    fullName: System.ComponentModel.CollectionConverter.GetProperties\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Attribute\n    name: Attribute\n    fullName: System.Attribute\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.CollectionConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n    name: GetProperties\n    fullName: System.ComponentModel.CollectionConverter.GetProperties\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Attribute\n    name: Attribute\n    fullName: System.Attribute\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: CollectionConverter.GetProperties(ITypeDescriptorContext, Object, Attribute[])\n  nameWithType.vb: CollectionConverter.GetProperties(ITypeDescriptorContext, Object, Attribute())\n  commentId: M:System.ComponentModel.CollectionConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n- uid: System.Attribute[]\n  name: Attribute[]\n  fullName: System.Attribute[]\n  fullname.vb: System.Attribute()\n  name.vb: Attribute()\n  spec.csharp:\n  - uid: System.Attribute\n    name: Attribute\n    fullName: System.Attribute\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Attribute\n    name: Attribute\n    fullName: System.Attribute\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: Attribute[]\n  nameWithType.vb: Attribute()\n- uid: System.ComponentModel.PropertyDescriptorCollection\n  parent: System.ComponentModel\n  isExternal: false\n  name: PropertyDescriptorCollection\n  fullName: System.ComponentModel.PropertyDescriptorCollection\n  nameWithType: PropertyDescriptorCollection\n  commentId: T:System.ComponentModel.PropertyDescriptorCollection\n- uid: System.ComponentModel.CollectionConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.CollectionConverter\n  isExternal: false\n  name: GetPropertiesSupported(ITypeDescriptorContext)\n  fullName: System.ComponentModel.CollectionConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  spec.csharp:\n  - uid: System.ComponentModel.CollectionConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n    name: GetPropertiesSupported\n    fullName: System.ComponentModel.CollectionConverter.GetPropertiesSupported\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.CollectionConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n    name: GetPropertiesSupported\n    fullName: System.ComponentModel.CollectionConverter.GetPropertiesSupported\n  - name: (\n    fullName: (\n  - uid: System.ComponentModel.ITypeDescriptorContext\n    name: ITypeDescriptorContext\n    fullName: System.ComponentModel.ITypeDescriptorContext\n  - name: )\n    fullName: )\n  nameWithType: CollectionConverter.GetPropertiesSupported(ITypeDescriptorContext)\n  commentId: M:System.ComponentModel.CollectionConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  fullName: System.NotSupportedException\n  nameWithType: NotSupportedException\n  commentId: T:System.NotSupportedException\n"}