{"nodes":[{"pos":[666,681],"content":"SemaphoreRights","needQuote":true,"nodes":[{"content":"SemaphoreRights","pos":[0,15]}]},{"pos":[2321,2338],"content":"ChangePermissions","needQuote":true,"nodes":[{"content":"ChangePermissions","pos":[0,17]}]},{"pos":[3413,3419],"content":"Delete","needQuote":true,"nodes":[{"content":"Delete","pos":[0,6]}]},{"pos":[4419,4430],"content":"FullControl","needQuote":true,"nodes":[{"content":"FullControl","pos":[0,11]}]},{"pos":[5502,5508],"content":"Modify","needQuote":true,"nodes":[{"content":"Modify","pos":[0,6]}]},{"pos":[6517,6532],"content":"ReadPermissions","needQuote":true,"nodes":[{"content":"ReadPermissions","pos":[0,15]}]},{"pos":[7613,7624],"content":"Synchronize","needQuote":true,"nodes":[{"content":"Synchronize","pos":[0,11]}]},{"pos":[8653,8666],"content":"TakeOwnership","needQuote":true,"nodes":[{"content":"TakeOwnership","pos":[0,13]}]},{"pos":[9538,9567],"content":"System.Security.AccessControl","needQuote":true,"nodes":[{"content":"System.Security.AccessControl","pos":[0,29]}]},{"pos":[9822,9837],"content":"SemaphoreRights","needQuote":true,"nodes":[{"content":"SemaphoreRights","pos":[0,15]}]}],"content":"items:\n- uid: System.Security.AccessControl.SemaphoreRights\n  commentId: T:System.Security.AccessControl.SemaphoreRights\n  id: SemaphoreRights\n  parent: System.Security.AccessControl\n  children:\n  - System.Security.AccessControl.SemaphoreRights.ChangePermissions\n  - System.Security.AccessControl.SemaphoreRights.Delete\n  - System.Security.AccessControl.SemaphoreRights.FullControl\n  - System.Security.AccessControl.SemaphoreRights.Modify\n  - System.Security.AccessControl.SemaphoreRights.ReadPermissions\n  - System.Security.AccessControl.SemaphoreRights.Synchronize\n  - System.Security.AccessControl.SemaphoreRights.TakeOwnership\n  langs:\n  - csharp\n  - vb\n  name: SemaphoreRights\n  fullName: System.Security.AccessControl.SemaphoreRights\n  type: Enum\n  source:\n    remote:\n      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SemaphoreRights\n    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n    startLine: 83\n  assemblies:\n  - System.Threading.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Specifies the access control rights that can be applied to named system semaphore objects.</p>\\n\"\n  syntax:\n    content: >-\n      [Flags]\n\n      [SecurityCritical]\n\n      public enum SemaphoreRights\n    content.vb: >-\n      <Flags>\n\n      <SecurityCritical>\n\n      Public Enum SemaphoreRights\n  seealso:\n  - type: System.Security.AccessControl.SemaphoreAccessRule\n    commentId: T:System.Security.AccessControl.SemaphoreAccessRule\n  - type: System.Security.AccessControl.SemaphoreSecurity\n    commentId: T:System.Security.AccessControl.SemaphoreSecurity\n  attributes:\n  - type: System.FlagsAttribute\n    ctor: System.FlagsAttribute.#ctor\n    arguments: []\n  - type: System.Security.SecurityCriticalAttribute\n    ctor: System.Security.SecurityCriticalAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  - enum\n  modifiers.vb:\n  - Public\n  - Enum\n  nameWithType: SemaphoreRights\n- uid: System.Security.AccessControl.SemaphoreRights.ChangePermissions\n  commentId: F:System.Security.AccessControl.SemaphoreRights.ChangePermissions\n  id: ChangePermissions\n  parent: System.Security.AccessControl.SemaphoreRights\n  langs:\n  - csharp\n  - vb\n  name: ChangePermissions\n  fullName: System.Security.AccessControl.SemaphoreRights.ChangePermissions\n  type: Field\n  source:\n    remote:\n      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ChangePermissions\n    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n    startLine: 87\n  assemblies:\n  - System.Threading.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>The right to change the security and audit rules associated with a named semaphore.</p>\\n\"\n  syntax:\n    content: ChangePermissions = 262144\n    return:\n      type: System.Security.AccessControl.SemaphoreRights\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: SemaphoreRights.ChangePermissions\n- uid: System.Security.AccessControl.SemaphoreRights.Delete\n  commentId: F:System.Security.AccessControl.SemaphoreRights.Delete\n  id: Delete\n  parent: System.Security.AccessControl.SemaphoreRights\n  langs:\n  - csharp\n  - vb\n  name: Delete\n  fullName: System.Security.AccessControl.SemaphoreRights.Delete\n  type: Field\n  source:\n    remote:\n      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Delete\n    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n    startLine: 88\n  assemblies:\n  - System.Threading.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>The right to delete a named semaphore.</p>\\n\"\n  syntax:\n    content: Delete = 65536\n    return:\n      type: System.Security.AccessControl.SemaphoreRights\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: SemaphoreRights.Delete\n- uid: System.Security.AccessControl.SemaphoreRights.FullControl\n  commentId: F:System.Security.AccessControl.SemaphoreRights.FullControl\n  id: FullControl\n  parent: System.Security.AccessControl.SemaphoreRights\n  langs:\n  - csharp\n  - vb\n  name: FullControl\n  fullName: System.Security.AccessControl.SemaphoreRights.FullControl\n  type: Field\n  source:\n    remote:\n      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: FullControl\n    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n    startLine: 89\n  assemblies:\n  - System.Threading.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>The right to exert full control over a named semaphore, and to modify its access rules and audit rules.</p>\\n\"\n  syntax:\n    content: FullControl = 2031619\n    return:\n      type: System.Security.AccessControl.SemaphoreRights\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: SemaphoreRights.FullControl\n- uid: System.Security.AccessControl.SemaphoreRights.Modify\n  commentId: F:System.Security.AccessControl.SemaphoreRights.Modify\n  id: Modify\n  parent: System.Security.AccessControl.SemaphoreRights\n  langs:\n  - csharp\n  - vb\n  name: Modify\n  fullName: System.Security.AccessControl.SemaphoreRights.Modify\n  type: Field\n  source:\n    remote:\n      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Modify\n    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n    startLine: 90\n  assemblies:\n  - System.Threading.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>The right to release a named semaphore.</p>\\n\"\n  syntax:\n    content: Modify = 2\n    return:\n      type: System.Security.AccessControl.SemaphoreRights\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: SemaphoreRights.Modify\n- uid: System.Security.AccessControl.SemaphoreRights.ReadPermissions\n  commentId: F:System.Security.AccessControl.SemaphoreRights.ReadPermissions\n  id: ReadPermissions\n  parent: System.Security.AccessControl.SemaphoreRights\n  langs:\n  - csharp\n  - vb\n  name: ReadPermissions\n  fullName: System.Security.AccessControl.SemaphoreRights.ReadPermissions\n  type: Field\n  source:\n    remote:\n      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadPermissions\n    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n    startLine: 91\n  assemblies:\n  - System.Threading.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>The right to open and copy the access rules and audit rules for a named semaphore.</p>\\n\"\n  syntax:\n    content: ReadPermissions = 131072\n    return:\n      type: System.Security.AccessControl.SemaphoreRights\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: SemaphoreRights.ReadPermissions\n- uid: System.Security.AccessControl.SemaphoreRights.Synchronize\n  commentId: F:System.Security.AccessControl.SemaphoreRights.Synchronize\n  id: Synchronize\n  parent: System.Security.AccessControl.SemaphoreRights\n  langs:\n  - csharp\n  - vb\n  name: Synchronize\n  fullName: System.Security.AccessControl.SemaphoreRights.Synchronize\n  type: Field\n  source:\n    remote:\n      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Synchronize\n    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n    startLine: 92\n  assemblies:\n  - System.Threading.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>The right to wait on a named semaphore.</p>\\n\"\n  syntax:\n    content: Synchronize = 1048576\n    return:\n      type: System.Security.AccessControl.SemaphoreRights\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: SemaphoreRights.Synchronize\n- uid: System.Security.AccessControl.SemaphoreRights.TakeOwnership\n  commentId: F:System.Security.AccessControl.SemaphoreRights.TakeOwnership\n  id: TakeOwnership\n  parent: System.Security.AccessControl.SemaphoreRights\n  langs:\n  - csharp\n  - vb\n  name: TakeOwnership\n  fullName: System.Security.AccessControl.SemaphoreRights.TakeOwnership\n  type: Field\n  source:\n    remote:\n      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: TakeOwnership\n    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs\n    startLine: 93\n  assemblies:\n  - System.Threading.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>The right to change the owner of a named semaphore.</p>\\n\"\n  syntax:\n    content: TakeOwnership = 524288\n    return:\n      type: System.Security.AccessControl.SemaphoreRights\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: SemaphoreRights.TakeOwnership\nreferences:\n- uid: System.Security.AccessControl\n  isExternal: false\n  name: System.Security.AccessControl\n  fullName: System.Security.AccessControl\n  commentId: N:System.Security.AccessControl\n  nameWithType: System.Security.AccessControl\n- uid: System.Security.AccessControl.SemaphoreRights\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: SemaphoreRights\n  fullName: System.Security.AccessControl.SemaphoreRights\n  commentId: T:System.Security.AccessControl.SemaphoreRights\n  nameWithType: SemaphoreRights\n"}