{"nodes":[{"pos":[411,432],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[2385,2408],"content":"ArgumentNullException()","needQuote":true,"nodes":[{"content":"ArgumentNullException()","pos":[0,23]}]},{"pos":[3376,3405],"content":"ArgumentNullException(String)","needQuote":true,"nodes":[{"content":"ArgumentNullException(String)","pos":[0,29]}]},{"content":"\\n&lt;p&gt;The name of the parameter that caused the exception.","pos":[4218,4275],"source":"\\n<p>The name of the parameter that caused the exception."},{"content":"&lt;/p&gt;\\n","pos":[4276,4282],"source":" </p>\\n"},{"pos":[4686,4726],"content":"ArgumentNullException(String, Exception)","needQuote":true,"nodes":[{"content":"ArgumentNullException(String, Exception)","pos":[0,40]}]},{"content":"\\n&lt;p&gt;The error message that explains the reason for this exception.","pos":[5633,5700],"source":"\\n<p>The error message that explains the reason for this exception."},{"content":"&lt;/p&gt;\\n","pos":[5701,5707],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The exception that is the cause of the current exception, or a null reference (&lt;strong&gt;Nothing&lt;/strong&gt; in Visual Basic) if no inner exception is specified.","pos":[5783,5944],"source":"\\n<p>The exception that is the cause of the current exception, or a null reference (<strong>Nothing</strong> in Visual Basic) if no inner exception is specified."},{"content":"&lt;/p&gt;\\n","pos":[5945,5951],"source":" </p>\\n"},{"pos":[6357,6394],"content":"ArgumentNullException(String, String)","needQuote":true,"nodes":[{"content":"ArgumentNullException(String, String)","pos":[0,37]}]},{"content":"\\n&lt;p&gt;The name of the parameter that caused the exception.","pos":[7284,7341],"source":"\\n<p>The name of the parameter that caused the exception."},{"content":"&lt;/p&gt;\\n","pos":[7342,7348],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A message that describes the error.","pos":[7414,7454],"source":"\\n<p>A message that describes the error."},{"content":"&lt;/p&gt;\\n","pos":[7455,7461],"source":" </p>\\n"},{"pos":[7651,7657],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[7788,7794],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7942,7951],"content":"Exception","needQuote":true,"nodes":[{"content":"Exception","pos":[0,9]}]},{"pos":[8116,8133],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]},{"pos":[8348,8355],"content":"Message","needQuote":true,"nodes":[{"content":"Message","pos":[0,7]}]},{"pos":[8596,8605],"content":"ParamName","needQuote":true,"nodes":[{"content":"ParamName","pos":[0,9]}]},{"pos":[8831,8835],"content":"Data","needQuote":true,"nodes":[{"content":"Data","pos":[0,4]}]},{"pos":[9026,9034],"content":"HelpLink","needQuote":true,"nodes":[{"content":"HelpLink","pos":[0,8]}]},{"pos":[9236,9243],"content":"HResult","needQuote":true,"nodes":[{"content":"HResult","pos":[0,7]}]},{"pos":[9449,9463],"content":"InnerException","needQuote":true,"nodes":[{"content":"InnerException","pos":[0,14]}]},{"pos":[9682,9688],"content":"Source","needQuote":true,"nodes":[{"content":"Source","pos":[0,6]}]},{"pos":[9887,9897],"content":"StackTrace","needQuote":true,"nodes":[{"content":"StackTrace","pos":[0,10]}]},{"pos":[10114,10132],"content":"GetBaseException()","needQuote":true,"nodes":[{"content":"GetBaseException()","pos":[0,18]}]},{"pos":[10249,10265],"content":"GetBaseException","needQuote":true,"nodes":[{"content":"GetBaseException","pos":[0,16]}]},{"pos":[10324,10325],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10352,10353],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10434,10450],"content":"GetBaseException","needQuote":true,"nodes":[{"content":"GetBaseException","pos":[0,16]}]},{"pos":[10509,10510],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10537,10538],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10737,10747],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[10848,10856],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[10907,10908],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10935,10936],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11009,11017],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[11068,11069],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11096,11097],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11286,11300],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[11419,11425],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[11492,11493],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11543,11549],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11609,11610],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11693,11699],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[11766,11767],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11817,11823],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11883,11884],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12098,12120],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[12268,12274],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[12341,12342],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12392,12398],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[12459,12460]},{"pos":[12515,12521],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12581,12582],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12679,12685],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[12752,12753],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12803,12809],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[12870,12871]},{"pos":[12926,12932],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12992,12993],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13238,13269],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[13435,13450],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[13526,13527],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13577,13583],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[13644,13645]},{"pos":[13700,13706],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13766,13767],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13873,13888],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[13964,13965],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14015,14021],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[14082,14083]},{"pos":[14138,14144],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14204,14205],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14435,14448],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[14549,14560],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[14632,14633],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14660,14661],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14734,14745],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[14817,14818],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14845,14846],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15021,15030],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[15123,15130],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[15198,15199],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15226,15227],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15296,15303],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[15371,15372],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15399,15400],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15575,15592],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[15701,15716],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[15792,15793],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15820,15821],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15898,15913],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[15989,15990],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16017,16018],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16187,16193],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"items:\n- uid: System.ArgumentNullException\n  commentId: T:System.ArgumentNullException\n  id: ArgumentNullException\n  parent: System\n  children:\n  - System.ArgumentNullException.#ctor\n  - System.ArgumentNullException.#ctor(System.String)\n  - System.ArgumentNullException.#ctor(System.String,System.Exception)\n  - System.ArgumentNullException.#ctor(System.String,System.String)\n  langs:\n  - csharp\n  - vb\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/ArgumentNullException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ArgumentNullException\n    path: src/mscorlib/src/System/ArgumentNullException.cs\n    startLine: 23\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>The exception that is thrown when a null reference (<strong>Nothing</strong> in Visual Basic) is passed to a method that does not accept it as a valid argument. </p>\\n\"\n  syntax:\n    content: >-\n      [ComVisible(true)]\n\n      [Serializable]\n\n      public class ArgumentNullException : ArgumentException, _Exception, ISerializable\n    content.vb: >-\n      <ComVisible(True)>\n\n      <Serializable>\n\n      Public Class ArgumentNullException\n          Inherits ArgumentException\n          Implements _Exception, ISerializable\n  seealso:\n  - type: System.Exception\n    commentId: T:System.Exception\n  inheritance:\n  - System.Object\n  - System.Exception\n  - System.ArgumentException\n  inheritedMembers:\n  - System.ArgumentException.Message\n  - System.ArgumentException.ParamName\n  - System.Exception.Data\n  - System.Exception.HelpLink\n  - System.Exception.HResult\n  - System.Exception.InnerException\n  - System.Exception.Source\n  - System.Exception.StackTrace\n  - System.Exception.GetBaseException\n  - System.Exception.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: ArgumentNullException\n- uid: System.ArgumentNullException.#ctor\n  commentId: M:System.ArgumentNullException.#ctor\n  id: '#ctor'\n  parent: System.ArgumentNullException\n  langs:\n  - csharp\n  - vb\n  name: ArgumentNullException()\n  fullName: System.ArgumentNullException.ArgumentNullException()\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/ArgumentNullException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/ArgumentNullException.cs\n    startLine: 28\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.ArgumentNullException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public ArgumentNullException()\n    content.vb: Public Sub New\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: ArgumentNullException.ArgumentNullException()\n- uid: System.ArgumentNullException.#ctor(System.String)\n  commentId: M:System.ArgumentNullException.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.ArgumentNullException\n  langs:\n  - csharp\n  - vb\n  name: ArgumentNullException(String)\n  fullName: System.ArgumentNullException.ArgumentNullException(System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/ArgumentNullException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/ArgumentNullException.cs\n    startLine: 34\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.ArgumentNullException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the name of the parameter that causes this exception.</p>\\n\"\n  syntax:\n    content: public ArgumentNullException(string paramName)\n    content.vb: Public Sub New(paramName As String)\n    parameters:\n    - id: paramName\n      type: System.String\n      description: \"\\n<p>The name of the parameter that caused the exception. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: ArgumentNullException.ArgumentNullException(String)\n- uid: System.ArgumentNullException.#ctor(System.String,System.Exception)\n  commentId: M:System.ArgumentNullException.#ctor(System.String,System.Exception)\n  id: '#ctor(System.String,System.Exception)'\n  parent: System.ArgumentNullException\n  langs:\n  - csharp\n  - vb\n  name: ArgumentNullException(String, Exception)\n  fullName: System.ArgumentNullException.ArgumentNullException(System.String, System.Exception)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/ArgumentNullException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/ArgumentNullException.cs\n    startLine: 39\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.ArgumentNullException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with a specified error message and the exception that is the cause of this exception.</p>\\n\"\n  syntax:\n    content: public ArgumentNullException(string message, Exception innerException)\n    content.vb: Public Sub New(message As String, innerException As Exception)\n    parameters:\n    - id: message\n      type: System.String\n      description: \"\\n<p>The error message that explains the reason for this exception. </p>\\n\"\n    - id: innerException\n      type: System.Exception\n      description: \"\\n<p>The exception that is the cause of the current exception, or a null reference (<strong>Nothing</strong> in Visual Basic) if no inner exception is specified. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: ArgumentNullException.ArgumentNullException(String, Exception)\n- uid: System.ArgumentNullException.#ctor(System.String,System.String)\n  commentId: M:System.ArgumentNullException.#ctor(System.String,System.String)\n  id: '#ctor(System.String,System.String)'\n  parent: System.ArgumentNullException\n  langs:\n  - csharp\n  - vb\n  name: ArgumentNullException(String, String)\n  fullName: System.ArgumentNullException.ArgumentNullException(System.String, System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/ArgumentNullException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/ArgumentNullException.cs\n    startLine: 44\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Initializes an instance of the <xref href=\\\"System.ArgumentNullException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with a specified error message and the name of the parameter that causes this exception.</p>\\n\"\n  syntax:\n    content: public ArgumentNullException(string paramName, string message)\n    content.vb: Public Sub New(paramName As String, message As String)\n    parameters:\n    - id: paramName\n      type: System.String\n      description: \"\\n<p>The name of the parameter that caused the exception. </p>\\n\"\n    - id: message\n      type: System.String\n      description: \"\\n<p>A message that describes the error. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: ArgumentNullException.ArgumentNullException(String, String)\nreferences:\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  fullName: System.Exception\n  nameWithType: Exception\n  commentId: T:System.Exception\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n- uid: System.ArgumentException.Message\n  parent: System.ArgumentException\n  isExternal: false\n  name: Message\n  fullName: System.ArgumentException.Message\n  nameWithType: ArgumentException.Message\n  commentId: P:System.ArgumentException.Message\n- uid: System.ArgumentException.ParamName\n  parent: System.ArgumentException\n  isExternal: false\n  name: ParamName\n  fullName: System.ArgumentException.ParamName\n  nameWithType: ArgumentException.ParamName\n  commentId: P:System.ArgumentException.ParamName\n- uid: System.Exception.Data\n  parent: System.Exception\n  isExternal: false\n  name: Data\n  fullName: System.Exception.Data\n  nameWithType: Exception.Data\n  commentId: P:System.Exception.Data\n- uid: System.Exception.HelpLink\n  parent: System.Exception\n  isExternal: false\n  name: HelpLink\n  fullName: System.Exception.HelpLink\n  nameWithType: Exception.HelpLink\n  commentId: P:System.Exception.HelpLink\n- uid: System.Exception.HResult\n  parent: System.Exception\n  isExternal: false\n  name: HResult\n  fullName: System.Exception.HResult\n  nameWithType: Exception.HResult\n  commentId: P:System.Exception.HResult\n- uid: System.Exception.InnerException\n  parent: System.Exception\n  isExternal: false\n  name: InnerException\n  fullName: System.Exception.InnerException\n  nameWithType: Exception.InnerException\n  commentId: P:System.Exception.InnerException\n- uid: System.Exception.Source\n  parent: System.Exception\n  isExternal: false\n  name: Source\n  fullName: System.Exception.Source\n  nameWithType: Exception.Source\n  commentId: P:System.Exception.Source\n- uid: System.Exception.StackTrace\n  parent: System.Exception\n  isExternal: false\n  name: StackTrace\n  fullName: System.Exception.StackTrace\n  nameWithType: Exception.StackTrace\n  commentId: P:System.Exception.StackTrace\n- uid: System.Exception.GetBaseException\n  parent: System.Exception\n  isExternal: false\n  name: GetBaseException()\n  fullName: System.Exception.GetBaseException()\n  spec.csharp:\n  - uid: System.Exception.GetBaseException\n    name: GetBaseException\n    fullName: System.Exception.GetBaseException\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Exception.GetBaseException\n    name: GetBaseException\n    fullName: System.Exception.GetBaseException\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Exception.GetBaseException()\n  commentId: M:System.Exception.GetBaseException\n- uid: System.Exception.ToString\n  parent: System.Exception\n  isExternal: false\n  name: ToString()\n  fullName: System.Exception.ToString()\n  spec.csharp:\n  - uid: System.Exception.ToString\n    name: ToString\n    fullName: System.Exception.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Exception.ToString\n    name: ToString\n    fullName: System.Exception.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Exception.ToString()\n  commentId: M:System.Exception.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n"}