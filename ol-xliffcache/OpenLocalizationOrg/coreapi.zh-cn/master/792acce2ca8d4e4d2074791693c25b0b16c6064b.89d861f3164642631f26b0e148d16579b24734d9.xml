{"nodes":[{"pos":[1828,1852],"content":"ExtendedProtectionPolicy","needQuote":true,"nodes":[{"content":"ExtendedProtectionPolicy","pos":[0,24]}]},{"pos":[3654,3697],"content":"ExtendedProtectionPolicy(PolicyEnforcement)","needQuote":true,"nodes":[{"content":"ExtendedProtectionPolicy(PolicyEnforcement)","pos":[0,43]}]},{"pos":[5908,5967],"content":"ExtendedProtectionPolicy(PolicyEnforcement, ChannelBinding)","needQuote":true,"nodes":[{"content":"ExtendedProtectionPolicy(PolicyEnforcement, ChannelBinding)","pos":[0,59]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;customChannelBinding &lt;/em&gt;is &lt;strong&gt;null&lt;/strong&gt;.","pos":[8238,8300],"source":"\\n<p>\\n<em>customChannelBinding </em>is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[8301,8307],"source":" </p>\\n"},{"pos":[9293,9369],"content":"ExtendedProtectionPolicy(PolicyEnforcement, ProtectionScenario, ICollection)","needQuote":true,"nodes":[{"content":"ExtendedProtectionPolicy(PolicyEnforcement, ProtectionScenario, ICollection)","pos":[0,76]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;customServiceNames &lt;/em&gt;is &lt;strong&gt;null&lt;/strong&gt; or an empty list.","pos":[12128,12205],"source":"\\n<p>\\n<em>customServiceNames </em>is <strong>null</strong> or an empty list."},{"content":"&lt;/p&gt;\\n","pos":[12206,12212],"source":" </p>\\n"},{"pos":[13338,13424],"content":"ExtendedProtectionPolicy(PolicyEnforcement, ProtectionScenario, ServiceNameCollection)","needQuote":true,"nodes":[{"content":"ExtendedProtectionPolicy(PolicyEnforcement, ProtectionScenario, ServiceNameCollection)","pos":[0,86]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;customServiceNames &lt;/em&gt;is &lt;strong&gt;null&lt;/strong&gt; or an empty list.","pos":[16326,16403],"source":"\\n<p>\\n<em>customServiceNames </em>is <strong>null</strong> or an empty list."},{"content":"&lt;/p&gt;\\n","pos":[16404,16410],"source":" </p>\\n"},{"pos":[16959,16979],"content":"CustomChannelBinding","needQuote":true,"nodes":[{"content":"CustomChannelBinding","pos":[0,20]}]},{"pos":[18539,18557],"content":"CustomServiceNames","needQuote":true,"nodes":[{"content":"CustomServiceNames","pos":[0,18]}]},{"pos":[20205,20233],"content":"OSSupportsExtendedProtection","needQuote":true,"nodes":[{"content":"OSSupportsExtendedProtection","pos":[0,28]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the operating system supports integrated windows authentication with extended protection, otherwise &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[21118,21279],"source":"\\n<p>\\n<strong>true</strong> if the operating system supports integrated windows authentication with extended protection, otherwise <strong>false</strong>.</p>\\n"},{"pos":[21804,21821],"content":"PolicyEnforcement","needQuote":true,"nodes":[{"content":"PolicyEnforcement","pos":[0,17]}]},{"pos":[23390,23408],"content":"ProtectionScenario","needQuote":true,"nodes":[{"content":"ProtectionScenario","pos":[0,18]}]},{"pos":[24958,24968],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[26262,26311],"content":"System.Security.Authentication.ExtendedProtection","needQuote":true,"nodes":[{"content":"System.Security.Authentication.ExtendedProtection","pos":[0,49]}]},{"pos":[26571,26577],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[26750,26764],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[26883,26889],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[26956,26957],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27007,27013],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[27073,27074],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27157,27163],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[27230,27231],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27281,27287],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[27347,27348],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27562,27584],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[27732,27738],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[27805,27806],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27856,27862],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[27923,27924]},{"pos":[27979,27985],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[28045,28046],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28143,28149],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[28216,28217],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28267,28273],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[28334,28335]},{"pos":[28390,28396],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[28456,28457],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28702,28733],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[28899,28914],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[28990,28991],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29041,29047],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[29108,29109]},{"pos":[29164,29170],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[29230,29231],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29337,29352],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[29428,29429],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29479,29485],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[29546,29547]},{"pos":[29602,29608],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[29668,29669],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29899,29912],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[30013,30024],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[30096,30097],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30124,30125],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30198,30209],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[30281,30282],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30309,30310],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30485,30494],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[30587,30594],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[30662,30663],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30690,30691],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30760,30767],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[30835,30836],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30863,30864],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31039,31056],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[31165,31180],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[31256,31257],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31284,31285],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31362,31377],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[31453,31454],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31481,31482],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31627,31633],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[31861,31878],"content":"PolicyEnforcement","needQuote":true,"nodes":[{"content":"PolicyEnforcement","pos":[0,17]}]},{"pos":[32236,32250],"content":"ChannelBinding","needQuote":true,"nodes":[{"content":"ChannelBinding","pos":[0,14]}]},{"pos":[32603,32621],"content":"ProtectionScenario","needQuote":true,"nodes":[{"content":"ProtectionScenario","pos":[0,18]}]},{"pos":[32917,32928],"content":"ICollection","needQuote":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"pos":[33100,33118],"content":"System.Collections","needQuote":true,"nodes":[{"content":"System.Collections","pos":[0,18]}]},{"pos":[33386,33407],"content":"ServiceNameCollection","needQuote":true,"nodes":[{"content":"ServiceNameCollection","pos":[0,21]}]},{"pos":[33684,33691],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[33854,33864],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[33959,33967],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[34036,34037],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[34064,34065],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34135,34143],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[34212,34213],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[34240,34241],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34396,34402],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[34558,34575],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]},{"pos":[34751,34772],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]}],"content":"items:\n- uid: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy\n  commentId: T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy\n  id: ExtendedProtectionPolicy\n  parent: System.Security.Authentication.ExtendedProtection\n  children:\n  - System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.#ctor(System.Security.Authentication.ExtendedProtection.PolicyEnforcement)\n  - System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.#ctor(System.Security.Authentication.ExtendedProtection.PolicyEnforcement,System.Security.Authentication.ExtendedProtection.ChannelBinding)\n  - System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.#ctor(System.Security.Authentication.ExtendedProtection.PolicyEnforcement,System.Security.Authentication.ExtendedProtection.ProtectionScenario,System.Collections.ICollection)\n  - System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.#ctor(System.Security.Authentication.ExtendedProtection.PolicyEnforcement,System.Security.Authentication.ExtendedProtection.ProtectionScenario,System.Security.Authentication.ExtendedProtection.ServiceNameCollection)\n  - System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding\n  - System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames\n  - System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.OSSupportsExtendedProtection\n  - System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement\n  - System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.ProtectionScenario\n  - System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.ToString\n  langs:\n  - csharp\n  - vb\n  name: ExtendedProtectionPolicy\n  fullName: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy\n  type: Class\n  source:\n    remote:\n      path: src/System.Net.Security/ref/System.Net.Security.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ExtendedProtectionPolicy\n    path: src/System.Net.Security/ref/System.Net.Security.cs\n    startLine: 130\n  assemblies:\n  - System.Net.Security\n  namespace: System.Security.Authentication.ExtendedProtection\n  summary: \"\\n<p>The <xref href=\\\"System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class represents the extended protection policy used by the server to validate incoming client connections. </p>\\n\"\n  syntax:\n    content: public class ExtendedProtectionPolicy\n    content.vb: Public Class ExtendedProtectionPolicy\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: ExtendedProtectionPolicy\n- uid: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.#ctor(System.Security.Authentication.ExtendedProtection.PolicyEnforcement)\n  commentId: M:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.#ctor(System.Security.Authentication.ExtendedProtection.PolicyEnforcement)\n  id: '#ctor(System.Security.Authentication.ExtendedProtection.PolicyEnforcement)'\n  parent: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy\n  langs:\n  - csharp\n  - vb\n  name: ExtendedProtectionPolicy(PolicyEnforcement)\n  fullName: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.ExtendedProtectionPolicy(System.Security.Authentication.ExtendedProtection.PolicyEnforcement)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Net.Security/ref/System.Net.Security.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Net.Security/ref/System.Net.Security.cs\n    startLine: 132\n  assemblies:\n  - System.Net.Security\n  namespace: System.Security.Authentication.ExtendedProtection\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class that specifies when the extended protection policy should be enforced.</p>\\n\"\n  syntax:\n    content: public ExtendedProtectionPolicy(PolicyEnforcement policyEnforcement)\n    content.vb: Public Sub New(policyEnforcement As PolicyEnforcement)\n    parameters:\n    - id: policyEnforcement\n      type: System.Security.Authentication.ExtendedProtection.PolicyEnforcement\n      description: \"\\n<p>A <xref href=\\\"System.Security.Authentication.ExtendedProtection.PolicyEnforcement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that indicates when the extended protection policy should be enforced.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: ExtendedProtectionPolicy.ExtendedProtectionPolicy(PolicyEnforcement)\n- uid: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.#ctor(System.Security.Authentication.ExtendedProtection.PolicyEnforcement,System.Security.Authentication.ExtendedProtection.ChannelBinding)\n  commentId: M:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.#ctor(System.Security.Authentication.ExtendedProtection.PolicyEnforcement,System.Security.Authentication.ExtendedProtection.ChannelBinding)\n  id: '#ctor(System.Security.Authentication.ExtendedProtection.PolicyEnforcement,System.Security.Authentication.ExtendedProtection.ChannelBinding)'\n  parent: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy\n  langs:\n  - csharp\n  - vb\n  name: ExtendedProtectionPolicy(PolicyEnforcement, ChannelBinding)\n  fullName: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.ExtendedProtectionPolicy(System.Security.Authentication.ExtendedProtection.PolicyEnforcement, System.Security.Authentication.ExtendedProtection.ChannelBinding)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Net.Security/ref/System.Net.Security.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Net.Security/ref/System.Net.Security.cs\n    startLine: 133\n  assemblies:\n  - System.Net.Security\n  namespace: System.Security.Authentication.ExtendedProtection\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class that specifies when the extended protection policy should be enforced and the channel binding token (CBT) to be used.</p>\\n\"\n  syntax:\n    content: public ExtendedProtectionPolicy(PolicyEnforcement policyEnforcement, ChannelBinding customChannelBinding)\n    content.vb: Public Sub New(policyEnforcement As PolicyEnforcement, customChannelBinding As ChannelBinding)\n    parameters:\n    - id: policyEnforcement\n      type: System.Security.Authentication.ExtendedProtection.PolicyEnforcement\n      description: \"\\n<p>A <xref href=\\\"System.Security.Authentication.ExtendedProtection.PolicyEnforcement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that indicates when the extended protection policy should be enforced.</p>\\n\"\n    - id: customChannelBinding\n      type: System.Security.Authentication.ExtendedProtection.ChannelBinding\n      description: \"\\n<p>A <xref href=\\\"System.Security.Authentication.ExtendedProtection.ChannelBinding\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains a custom channel binding to use for validation.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>policyEnforcement</em> is specified as <xref href=\\\"System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>customChannelBinding </em>is <strong>null</strong>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: ExtendedProtectionPolicy.ExtendedProtectionPolicy(PolicyEnforcement, ChannelBinding)\n- uid: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.#ctor(System.Security.Authentication.ExtendedProtection.PolicyEnforcement,System.Security.Authentication.ExtendedProtection.ProtectionScenario,System.Collections.ICollection)\n  commentId: M:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.#ctor(System.Security.Authentication.ExtendedProtection.PolicyEnforcement,System.Security.Authentication.ExtendedProtection.ProtectionScenario,System.Collections.ICollection)\n  id: '#ctor(System.Security.Authentication.ExtendedProtection.PolicyEnforcement,System.Security.Authentication.ExtendedProtection.ProtectionScenario,System.Collections.ICollection)'\n  parent: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy\n  langs:\n  - csharp\n  - vb\n  name: ExtendedProtectionPolicy(PolicyEnforcement, ProtectionScenario, ICollection)\n  fullName: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.ExtendedProtectionPolicy(System.Security.Authentication.ExtendedProtection.PolicyEnforcement, System.Security.Authentication.ExtendedProtection.ProtectionScenario, System.Collections.ICollection)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Net.Security/ref/System.Net.Security.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Net.Security/ref/System.Net.Security.cs\n    startLine: 134\n  assemblies:\n  - System.Net.Security\n  namespace: System.Security.Authentication.ExtendedProtection\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class that specifies when the extended protection policy should be enforced, the kind of protection enforced by the policy, and a custom Service Provider Name (SPN) list that is used to match against a client's SPN.</p>\\n\"\n  syntax:\n    content: public ExtendedProtectionPolicy(PolicyEnforcement policyEnforcement, ProtectionScenario protectionScenario, ICollection customServiceNames)\n    content.vb: Public Sub New(policyEnforcement As PolicyEnforcement, protectionScenario As ProtectionScenario, customServiceNames As ICollection)\n    parameters:\n    - id: policyEnforcement\n      type: System.Security.Authentication.ExtendedProtection.PolicyEnforcement\n      description: \"\\n<p>A <xref href=\\\"System.Security.Authentication.ExtendedProtection.PolicyEnforcement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that indicates when the extended protection policy should be enforced.</p>\\n\"\n    - id: protectionScenario\n      type: System.Security.Authentication.ExtendedProtection.ProtectionScenario\n      description: \"\\n<p>A <xref href=\\\"System.Security.Authentication.ExtendedProtection.ProtectionScenario\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that indicates the kind of protection enforced by the policy.</p>\\n\"\n    - id: customServiceNames\n      type: System.Collections.ICollection\n      description: \"\\n<p>A <xref href=\\\"System.Collections.ICollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the custom SPN list that is used to match against a client's SPN.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>policyEnforcement</em> is specified as <xref href=\\\"System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>customServiceNames </em>is <strong>null</strong> or an empty list. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: ExtendedProtectionPolicy.ExtendedProtectionPolicy(PolicyEnforcement, ProtectionScenario, ICollection)\n- uid: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.#ctor(System.Security.Authentication.ExtendedProtection.PolicyEnforcement,System.Security.Authentication.ExtendedProtection.ProtectionScenario,System.Security.Authentication.ExtendedProtection.ServiceNameCollection)\n  commentId: M:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.#ctor(System.Security.Authentication.ExtendedProtection.PolicyEnforcement,System.Security.Authentication.ExtendedProtection.ProtectionScenario,System.Security.Authentication.ExtendedProtection.ServiceNameCollection)\n  id: '#ctor(System.Security.Authentication.ExtendedProtection.PolicyEnforcement,System.Security.Authentication.ExtendedProtection.ProtectionScenario,System.Security.Authentication.ExtendedProtection.ServiceNameCollection)'\n  parent: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy\n  langs:\n  - csharp\n  - vb\n  name: ExtendedProtectionPolicy(PolicyEnforcement, ProtectionScenario, ServiceNameCollection)\n  fullName: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.ExtendedProtectionPolicy(System.Security.Authentication.ExtendedProtection.PolicyEnforcement, System.Security.Authentication.ExtendedProtection.ProtectionScenario, System.Security.Authentication.ExtendedProtection.ServiceNameCollection)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Net.Security/ref/System.Net.Security.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Net.Security/ref/System.Net.Security.cs\n    startLine: 135\n  assemblies:\n  - System.Net.Security\n  namespace: System.Security.Authentication.ExtendedProtection\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class that specifies when the extended protection policy should be enforced, the kind of protection enforced by the policy, and a custom Service Provider Name (SPN) list that is used to match against a client's SPN.</p>\\n\"\n  syntax:\n    content: public ExtendedProtectionPolicy(PolicyEnforcement policyEnforcement, ProtectionScenario protectionScenario, ServiceNameCollection customServiceNames)\n    content.vb: Public Sub New(policyEnforcement As PolicyEnforcement, protectionScenario As ProtectionScenario, customServiceNames As ServiceNameCollection)\n    parameters:\n    - id: policyEnforcement\n      type: System.Security.Authentication.ExtendedProtection.PolicyEnforcement\n      description: \"\\n<p>A <xref href=\\\"System.Security.Authentication.ExtendedProtection.PolicyEnforcement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that indicates when the extended protection policy should be enforced.</p>\\n\"\n    - id: protectionScenario\n      type: System.Security.Authentication.ExtendedProtection.ProtectionScenario\n      description: \"\\n<p>A <xref href=\\\"System.Security.Authentication.ExtendedProtection.ProtectionScenario\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that indicates the kind of protection enforced by the policy.</p>\\n\"\n    - id: customServiceNames\n      type: System.Security.Authentication.ExtendedProtection.ServiceNameCollection\n      description: \"\\n<p>A <xref href=\\\"System.Security.Authentication.ExtendedProtection.ServiceNameCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the custom SPN list that is used to match against a client's SPN.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>policyEnforcement</em> is specified as <xref href=\\\"System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>customServiceNames </em>is <strong>null</strong> or an empty list. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: ExtendedProtectionPolicy.ExtendedProtectionPolicy(PolicyEnforcement, ProtectionScenario, ServiceNameCollection)\n- uid: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding\n  commentId: P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding\n  id: CustomChannelBinding\n  parent: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy\n  langs:\n  - csharp\n  - vb\n  name: CustomChannelBinding\n  fullName: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Security/ref/System.Net.Security.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CustomChannelBinding\n    path: src/System.Net.Security/ref/System.Net.Security.cs\n    startLine: 136\n  assemblies:\n  - System.Net.Security\n  namespace: System.Security.Authentication.ExtendedProtection\n  summary: \"\\n<p>Gets a custom channel binding token (CBT) to use for validation.</p>\\n\"\n  syntax:\n    content: public ChannelBinding CustomChannelBinding { get; }\n    content.vb: Public ReadOnly Property CustomChannelBinding As ChannelBinding\n    parameters: []\n    return:\n      type: System.Security.Authentication.ExtendedProtection.ChannelBinding\n      description: \"\\n<p>A <xref href=\\\"System.Security.Authentication.ExtendedProtection.ChannelBinding\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains a custom channel binding to use for validation.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: ExtendedProtectionPolicy.CustomChannelBinding\n- uid: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames\n  commentId: P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames\n  id: CustomServiceNames\n  parent: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy\n  langs:\n  - csharp\n  - vb\n  name: CustomServiceNames\n  fullName: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Security/ref/System.Net.Security.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CustomServiceNames\n    path: src/System.Net.Security/ref/System.Net.Security.cs\n    startLine: 137\n  assemblies:\n  - System.Net.Security\n  namespace: System.Security.Authentication.ExtendedProtection\n  summary: \"\\n<p>Gets the custom Service Provider Name (SPN) list used to match against a client's SPN.</p>\\n\"\n  syntax:\n    content: public ServiceNameCollection CustomServiceNames { get; }\n    content.vb: Public ReadOnly Property CustomServiceNames As ServiceNameCollection\n    parameters: []\n    return:\n      type: System.Security.Authentication.ExtendedProtection.ServiceNameCollection\n      description: \"\\n<p>A <xref href=\\\"System.Security.Authentication.ExtendedProtection.ServiceNameCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the custom SPN list that is used to match against a client's SPN.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: ExtendedProtectionPolicy.CustomServiceNames\n- uid: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.OSSupportsExtendedProtection\n  commentId: P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.OSSupportsExtendedProtection\n  id: OSSupportsExtendedProtection\n  parent: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy\n  langs:\n  - csharp\n  - vb\n  name: OSSupportsExtendedProtection\n  fullName: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.OSSupportsExtendedProtection\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Security/ref/System.Net.Security.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: OSSupportsExtendedProtection\n    path: src/System.Net.Security/ref/System.Net.Security.cs\n    startLine: 138\n  assemblies:\n  - System.Net.Security\n  namespace: System.Security.Authentication.ExtendedProtection\n  summary: \"\\n<p>Indicates whether the operating system supports integrated windows authentication with extended protection.</p>\\n\"\n  syntax:\n    content: public static bool OSSupportsExtendedProtection { get; }\n    content.vb: Public Shared ReadOnly Property OSSupportsExtendedProtection As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the operating system supports integrated windows authentication with extended protection, otherwise <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: ExtendedProtectionPolicy.OSSupportsExtendedProtection\n- uid: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement\n  commentId: P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement\n  id: PolicyEnforcement\n  parent: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy\n  langs:\n  - csharp\n  - vb\n  name: PolicyEnforcement\n  fullName: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Security/ref/System.Net.Security.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: PolicyEnforcement\n    path: src/System.Net.Security/ref/System.Net.Security.cs\n    startLine: 139\n  assemblies:\n  - System.Net.Security\n  namespace: System.Security.Authentication.ExtendedProtection\n  summary: \"\\n<p>Gets when the extended protection policy should be enforced.</p>\\n\"\n  syntax:\n    content: public PolicyEnforcement PolicyEnforcement { get; }\n    content.vb: Public ReadOnly Property PolicyEnforcement As PolicyEnforcement\n    parameters: []\n    return:\n      type: System.Security.Authentication.ExtendedProtection.PolicyEnforcement\n      description: \"\\n<p>A <xref href=\\\"System.Security.Authentication.ExtendedProtection.PolicyEnforcement\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that indicates when the extended protection policy should be enforced. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: ExtendedProtectionPolicy.PolicyEnforcement\n- uid: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.ProtectionScenario\n  commentId: P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.ProtectionScenario\n  id: ProtectionScenario\n  parent: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy\n  langs:\n  - csharp\n  - vb\n  name: ProtectionScenario\n  fullName: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.ProtectionScenario\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Security/ref/System.Net.Security.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ProtectionScenario\n    path: src/System.Net.Security/ref/System.Net.Security.cs\n    startLine: 140\n  assemblies:\n  - System.Net.Security\n  namespace: System.Security.Authentication.ExtendedProtection\n  summary: \"\\n<p>Gets the kind of protection enforced by the extended protection policy.</p>\\n\"\n  syntax:\n    content: public ProtectionScenario ProtectionScenario { get; }\n    content.vb: Public ReadOnly Property ProtectionScenario As ProtectionScenario\n    parameters: []\n    return:\n      type: System.Security.Authentication.ExtendedProtection.ProtectionScenario\n      description: \"\\n<p>A <xref href=\\\"System.Security.Authentication.ExtendedProtection.ProtectionScenario\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that indicates the kind of protection enforced by the policy. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: ExtendedProtectionPolicy.ProtectionScenario\n- uid: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.ToString\n  commentId: M:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.ToString\n  id: ToString\n  parent: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy\n  langs:\n  - csharp\n  - vb\n  name: ToString()\n  fullName: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.ToString()\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Security/ref/System.Net.Security.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ToString\n    path: src/System.Net.Security/ref/System.Net.Security.cs\n    startLine: 141\n  assemblies:\n  - System.Net.Security\n  namespace: System.Security.Authentication.ExtendedProtection\n  summary: \"\\n<p>Gets a string representation for the extended protection policy instance.</p>\\n\"\n  syntax:\n    content: public override string ToString()\n    content.vb: Public Overrides Function ToString As String\n    return:\n      type: System.String\n      description: \"\\n<p>A <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance that contains the representation of the <xref href=\\\"System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n  overridden: System.Object.ToString\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: ExtendedProtectionPolicy.ToString()\nreferences:\n- uid: System.Security.Authentication.ExtendedProtection\n  isExternal: false\n  name: System.Security.Authentication.ExtendedProtection\n  fullName: System.Security.Authentication.ExtendedProtection\n  commentId: N:System.Security.Authentication.ExtendedProtection\n  nameWithType: System.Security.Authentication.ExtendedProtection\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Security.Authentication.ExtendedProtection.PolicyEnforcement\n  parent: System.Security.Authentication.ExtendedProtection\n  isExternal: false\n  name: PolicyEnforcement\n  fullName: System.Security.Authentication.ExtendedProtection.PolicyEnforcement\n  commentId: T:System.Security.Authentication.ExtendedProtection.PolicyEnforcement\n  nameWithType: PolicyEnforcement\n- uid: System.Security.Authentication.ExtendedProtection.ChannelBinding\n  parent: System.Security.Authentication.ExtendedProtection\n  isExternal: false\n  name: ChannelBinding\n  fullName: System.Security.Authentication.ExtendedProtection.ChannelBinding\n  commentId: T:System.Security.Authentication.ExtendedProtection.ChannelBinding\n  nameWithType: ChannelBinding\n- uid: System.Security.Authentication.ExtendedProtection.ProtectionScenario\n  parent: System.Security.Authentication.ExtendedProtection\n  isExternal: false\n  name: ProtectionScenario\n  fullName: System.Security.Authentication.ExtendedProtection.ProtectionScenario\n  commentId: T:System.Security.Authentication.ExtendedProtection.ProtectionScenario\n  nameWithType: ProtectionScenario\n- uid: System.Collections.ICollection\n  parent: System.Collections\n  isExternal: false\n  name: ICollection\n  fullName: System.Collections.ICollection\n  commentId: T:System.Collections.ICollection\n  nameWithType: ICollection\n- uid: System.Collections\n  isExternal: false\n  name: System.Collections\n  fullName: System.Collections\n  commentId: N:System.Collections\n  nameWithType: System.Collections\n- uid: System.Security.Authentication.ExtendedProtection.ServiceNameCollection\n  parent: System.Security.Authentication.ExtendedProtection\n  isExternal: false\n  name: ServiceNameCollection\n  fullName: System.Security.Authentication.ExtendedProtection.ServiceNameCollection\n  commentId: T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection\n  nameWithType: ServiceNameCollection\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n"}