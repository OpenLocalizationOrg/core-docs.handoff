{"nodes":[{"pos":[998,1015],"content":"TokenAccessLevels","needQuote":true,"nodes":[{"content":"TokenAccessLevels","pos":[0,17]}]},{"pos":[2200,2213],"content":"AdjustDefault","needQuote":true,"nodes":[{"content":"AdjustDefault","pos":[0,13]}]},{"pos":[3318,3330],"content":"AdjustGroups","needQuote":true,"nodes":[{"content":"AdjustGroups","pos":[0,12]}]},{"pos":[4394,4410],"content":"AdjustPrivileges","needQuote":true,"nodes":[{"content":"AdjustPrivileges","pos":[0,16]}]},{"pos":[5480,5495],"content":"AdjustSessionId","needQuote":true,"nodes":[{"content":"AdjustSessionId","pos":[0,15]}]},{"pos":[6545,6554],"content":"AllAccess","needQuote":true,"nodes":[{"content":"AllAccess","pos":[0,9]}]},{"pos":[7585,7598],"content":"AssignPrimary","needQuote":true,"nodes":[{"content":"AssignPrimary","pos":[0,13]}]},{"pos":[8631,8640],"content":"Duplicate","needQuote":true,"nodes":[{"content":"Duplicate","pos":[0,9]}]},{"pos":[9647,9658],"content":"Impersonate","needQuote":true,"nodes":[{"content":"Impersonate","pos":[0,11]}]},{"pos":[10683,10697],"content":"MaximumAllowed","needQuote":true,"nodes":[{"content":"MaximumAllowed","pos":[0,14]}]},{"pos":[11843,11848],"content":"Query","needQuote":true,"nodes":[{"content":"Query","pos":[0,5]}]},{"pos":[12835,12846],"content":"QuerySource","needQuote":true,"nodes":[{"content":"QuerySource","pos":[0,11]}]},{"pos":[13851,13855],"content":"Read","needQuote":true,"nodes":[{"content":"Read","pos":[0,4]}]},{"pos":[14972,14977],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[16201,16226],"content":"System.Security.Principal","needQuote":true,"nodes":[{"content":"System.Security.Principal","pos":[0,25]}]},{"pos":[16463,16480],"content":"TokenAccessLevels","needQuote":true,"nodes":[{"content":"TokenAccessLevels","pos":[0,17]}]}],"content":"items:\n- uid: System.Security.Principal.TokenAccessLevels\n  commentId: T:System.Security.Principal.TokenAccessLevels\n  id: TokenAccessLevels\n  parent: System.Security.Principal\n  children:\n  - System.Security.Principal.TokenAccessLevels.AdjustDefault\n  - System.Security.Principal.TokenAccessLevels.AdjustGroups\n  - System.Security.Principal.TokenAccessLevels.AdjustPrivileges\n  - System.Security.Principal.TokenAccessLevels.AdjustSessionId\n  - System.Security.Principal.TokenAccessLevels.AllAccess\n  - System.Security.Principal.TokenAccessLevels.AssignPrimary\n  - System.Security.Principal.TokenAccessLevels.Duplicate\n  - System.Security.Principal.TokenAccessLevels.Impersonate\n  - System.Security.Principal.TokenAccessLevels.MaximumAllowed\n  - System.Security.Principal.TokenAccessLevels.Query\n  - System.Security.Principal.TokenAccessLevels.QuerySource\n  - System.Security.Principal.TokenAccessLevels.Read\n  - System.Security.Principal.TokenAccessLevels.Write\n  langs:\n  - csharp\n  - vb\n  name: TokenAccessLevels\n  fullName: System.Security.Principal.TokenAccessLevels\n  type: Enum\n  source:\n    remote:\n      path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: TokenAccessLevels\n    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs\n    startLine: 96\n  assemblies:\n  - System.Security.Principal.Windows\n  namespace: System.Security.Principal\n  summary: \"\\n<p>Defines the privileges of the user account associated with the access token. </p>\\n\"\n  syntax:\n    content: >-\n      [Flags]\n\n      public enum TokenAccessLevels\n    content.vb: >-\n      <Flags>\n\n      Public Enum TokenAccessLevels\n  attributes:\n  - type: System.FlagsAttribute\n    ctor: System.FlagsAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  - enum\n  modifiers.vb:\n  - Public\n  - Enum\n  nameWithType: TokenAccessLevels\n- uid: System.Security.Principal.TokenAccessLevels.AdjustDefault\n  commentId: F:System.Security.Principal.TokenAccessLevels.AdjustDefault\n  id: AdjustDefault\n  parent: System.Security.Principal.TokenAccessLevels\n  langs:\n  - csharp\n  - vb\n  name: AdjustDefault\n  fullName: System.Security.Principal.TokenAccessLevels.AdjustDefault\n  type: Field\n  source:\n    remote:\n      path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AdjustDefault\n    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs\n    startLine: 99\n  assemblies:\n  - System.Security.Principal.Windows\n  namespace: System.Security.Principal\n  summary: \"\\n<p>The user can change the default owner, primary group, or discretionary access control list (DACL) of the token.</p>\\n\"\n  syntax:\n    content: AdjustDefault = 128\n    return:\n      type: System.Security.Principal.TokenAccessLevels\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: TokenAccessLevels.AdjustDefault\n- uid: System.Security.Principal.TokenAccessLevels.AdjustGroups\n  commentId: F:System.Security.Principal.TokenAccessLevels.AdjustGroups\n  id: AdjustGroups\n  parent: System.Security.Principal.TokenAccessLevels\n  langs:\n  - csharp\n  - vb\n  name: AdjustGroups\n  fullName: System.Security.Principal.TokenAccessLevels.AdjustGroups\n  type: Field\n  source:\n    remote:\n      path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AdjustGroups\n    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs\n    startLine: 100\n  assemblies:\n  - System.Security.Principal.Windows\n  namespace: System.Security.Principal\n  summary: \"\\n<p>The user can change the attributes of the groups in the token.</p>\\n\"\n  syntax:\n    content: AdjustGroups = 64\n    return:\n      type: System.Security.Principal.TokenAccessLevels\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: TokenAccessLevels.AdjustGroups\n- uid: System.Security.Principal.TokenAccessLevels.AdjustPrivileges\n  commentId: F:System.Security.Principal.TokenAccessLevels.AdjustPrivileges\n  id: AdjustPrivileges\n  parent: System.Security.Principal.TokenAccessLevels\n  langs:\n  - csharp\n  - vb\n  name: AdjustPrivileges\n  fullName: System.Security.Principal.TokenAccessLevels.AdjustPrivileges\n  type: Field\n  source:\n    remote:\n      path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AdjustPrivileges\n    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs\n    startLine: 101\n  assemblies:\n  - System.Security.Principal.Windows\n  namespace: System.Security.Principal\n  summary: \"\\n<p>The user can enable or disable privileges in the token.</p>\\n\"\n  syntax:\n    content: AdjustPrivileges = 32\n    return:\n      type: System.Security.Principal.TokenAccessLevels\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: TokenAccessLevels.AdjustPrivileges\n- uid: System.Security.Principal.TokenAccessLevels.AdjustSessionId\n  commentId: F:System.Security.Principal.TokenAccessLevels.AdjustSessionId\n  id: AdjustSessionId\n  parent: System.Security.Principal.TokenAccessLevels\n  langs:\n  - csharp\n  - vb\n  name: AdjustSessionId\n  fullName: System.Security.Principal.TokenAccessLevels.AdjustSessionId\n  type: Field\n  source:\n    remote:\n      path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AdjustSessionId\n    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs\n    startLine: 102\n  assemblies:\n  - System.Security.Principal.Windows\n  namespace: System.Security.Principal\n  summary: \"\\n<p>The user can adjust the session identifier of the token.</p>\\n\"\n  syntax:\n    content: AdjustSessionId = 256\n    return:\n      type: System.Security.Principal.TokenAccessLevels\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: TokenAccessLevels.AdjustSessionId\n- uid: System.Security.Principal.TokenAccessLevels.AllAccess\n  commentId: F:System.Security.Principal.TokenAccessLevels.AllAccess\n  id: AllAccess\n  parent: System.Security.Principal.TokenAccessLevels\n  langs:\n  - csharp\n  - vb\n  name: AllAccess\n  fullName: System.Security.Principal.TokenAccessLevels.AllAccess\n  type: Field\n  source:\n    remote:\n      path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AllAccess\n    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs\n    startLine: 103\n  assemblies:\n  - System.Security.Principal.Windows\n  namespace: System.Security.Principal\n  summary: \"\\n<p>The user has all possible access to the token.</p>\\n\"\n  syntax:\n    content: AllAccess = 983551\n    return:\n      type: System.Security.Principal.TokenAccessLevels\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: TokenAccessLevels.AllAccess\n- uid: System.Security.Principal.TokenAccessLevels.AssignPrimary\n  commentId: F:System.Security.Principal.TokenAccessLevels.AssignPrimary\n  id: AssignPrimary\n  parent: System.Security.Principal.TokenAccessLevels\n  langs:\n  - csharp\n  - vb\n  name: AssignPrimary\n  fullName: System.Security.Principal.TokenAccessLevels.AssignPrimary\n  type: Field\n  source:\n    remote:\n      path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AssignPrimary\n    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs\n    startLine: 104\n  assemblies:\n  - System.Security.Principal.Windows\n  namespace: System.Security.Principal\n  summary: \"\\n<p>The user can attach a primary token to a process.</p>\\n\"\n  syntax:\n    content: AssignPrimary = 1\n    return:\n      type: System.Security.Principal.TokenAccessLevels\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: TokenAccessLevels.AssignPrimary\n- uid: System.Security.Principal.TokenAccessLevels.Duplicate\n  commentId: F:System.Security.Principal.TokenAccessLevels.Duplicate\n  id: Duplicate\n  parent: System.Security.Principal.TokenAccessLevels\n  langs:\n  - csharp\n  - vb\n  name: Duplicate\n  fullName: System.Security.Principal.TokenAccessLevels.Duplicate\n  type: Field\n  source:\n    remote:\n      path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Duplicate\n    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs\n    startLine: 105\n  assemblies:\n  - System.Security.Principal.Windows\n  namespace: System.Security.Principal\n  summary: \"\\n<p>The user can duplicate the token.</p>\\n\"\n  syntax:\n    content: Duplicate = 2\n    return:\n      type: System.Security.Principal.TokenAccessLevels\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: TokenAccessLevels.Duplicate\n- uid: System.Security.Principal.TokenAccessLevels.Impersonate\n  commentId: F:System.Security.Principal.TokenAccessLevels.Impersonate\n  id: Impersonate\n  parent: System.Security.Principal.TokenAccessLevels\n  langs:\n  - csharp\n  - vb\n  name: Impersonate\n  fullName: System.Security.Principal.TokenAccessLevels.Impersonate\n  type: Field\n  source:\n    remote:\n      path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Impersonate\n    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs\n    startLine: 106\n  assemblies:\n  - System.Security.Principal.Windows\n  namespace: System.Security.Principal\n  summary: \"\\n<p>The user can impersonate a client.</p>\\n\"\n  syntax:\n    content: Impersonate = 4\n    return:\n      type: System.Security.Principal.TokenAccessLevels\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: TokenAccessLevels.Impersonate\n- uid: System.Security.Principal.TokenAccessLevels.MaximumAllowed\n  commentId: F:System.Security.Principal.TokenAccessLevels.MaximumAllowed\n  id: MaximumAllowed\n  parent: System.Security.Principal.TokenAccessLevels\n  langs:\n  - csharp\n  - vb\n  name: MaximumAllowed\n  fullName: System.Security.Principal.TokenAccessLevels.MaximumAllowed\n  type: Field\n  source:\n    remote:\n      path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: MaximumAllowed\n    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs\n    startLine: 107\n  assemblies:\n  - System.Security.Principal.Windows\n  namespace: System.Security.Principal\n  summary: \"\\n<p>The maximum value that can be assigned for the <xref href=\\\"System.Security.Principal.TokenAccessLevels\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> enumeration.</p>\\n\"\n  syntax:\n    content: MaximumAllowed = 33554432\n    return:\n      type: System.Security.Principal.TokenAccessLevels\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: TokenAccessLevels.MaximumAllowed\n- uid: System.Security.Principal.TokenAccessLevels.Query\n  commentId: F:System.Security.Principal.TokenAccessLevels.Query\n  id: Query\n  parent: System.Security.Principal.TokenAccessLevels\n  langs:\n  - csharp\n  - vb\n  name: Query\n  fullName: System.Security.Principal.TokenAccessLevels.Query\n  type: Field\n  source:\n    remote:\n      path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Query\n    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs\n    startLine: 108\n  assemblies:\n  - System.Security.Principal.Windows\n  namespace: System.Security.Principal\n  summary: \"\\n<p>The user can query the token.</p>\\n\"\n  syntax:\n    content: Query = 8\n    return:\n      type: System.Security.Principal.TokenAccessLevels\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: TokenAccessLevels.Query\n- uid: System.Security.Principal.TokenAccessLevels.QuerySource\n  commentId: F:System.Security.Principal.TokenAccessLevels.QuerySource\n  id: QuerySource\n  parent: System.Security.Principal.TokenAccessLevels\n  langs:\n  - csharp\n  - vb\n  name: QuerySource\n  fullName: System.Security.Principal.TokenAccessLevels.QuerySource\n  type: Field\n  source:\n    remote:\n      path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: QuerySource\n    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs\n    startLine: 109\n  assemblies:\n  - System.Security.Principal.Windows\n  namespace: System.Security.Principal\n  summary: \"\\n<p>The user can query the source of the token.</p>\\n\"\n  syntax:\n    content: QuerySource = 16\n    return:\n      type: System.Security.Principal.TokenAccessLevels\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: TokenAccessLevels.QuerySource\n- uid: System.Security.Principal.TokenAccessLevels.Read\n  commentId: F:System.Security.Principal.TokenAccessLevels.Read\n  id: Read\n  parent: System.Security.Principal.TokenAccessLevels\n  langs:\n  - csharp\n  - vb\n  name: Read\n  fullName: System.Security.Principal.TokenAccessLevels.Read\n  type: Field\n  source:\n    remote:\n      path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Read\n    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs\n    startLine: 110\n  assemblies:\n  - System.Security.Principal.Windows\n  namespace: System.Security.Principal\n  summary: \"\\n<p>The user has standard read rights and the <xref href=\\\"System.Security.Principal.TokenAccessLevels.Query\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> privilege for the token.</p>\\n\"\n  syntax:\n    content: Read = 131080\n    return:\n      type: System.Security.Principal.TokenAccessLevels\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: TokenAccessLevels.Read\n- uid: System.Security.Principal.TokenAccessLevels.Write\n  commentId: F:System.Security.Principal.TokenAccessLevels.Write\n  id: Write\n  parent: System.Security.Principal.TokenAccessLevels\n  langs:\n  - csharp\n  - vb\n  name: Write\n  fullName: System.Security.Principal.TokenAccessLevels.Write\n  type: Field\n  source:\n    remote:\n      path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Write\n    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs\n    startLine: 111\n  assemblies:\n  - System.Security.Principal.Windows\n  namespace: System.Security.Principal\n  summary: \"\\n<p>The user has standard write rights and the <xref href=\\\"System.Security.Principal.TokenAccessLevels.AdjustPrivileges\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.Security.Principal.TokenAccessLevels.AdjustGroups\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and <xref href=\\\"System.Security.Principal.TokenAccessLevels.AdjustDefault\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> privileges for the token.</p>\\n\"\n  syntax:\n    content: Write = 131296\n    return:\n      type: System.Security.Principal.TokenAccessLevels\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: TokenAccessLevels.Write\nreferences:\n- uid: System.Security.Principal\n  isExternal: false\n  name: System.Security.Principal\n  fullName: System.Security.Principal\n  commentId: N:System.Security.Principal\n  nameWithType: System.Security.Principal\n- uid: System.Security.Principal.TokenAccessLevels\n  parent: System.Security.Principal\n  isExternal: false\n  name: TokenAccessLevels\n  fullName: System.Security.Principal.TokenAccessLevels\n  commentId: T:System.Security.Principal.TokenAccessLevels\n  nameWithType: TokenAccessLevels\n"}