{"nodes":[{"pos":[1266,1272],"content":"PointF","needQuote":true,"nodes":[{"content":"PointF","pos":[0,6]}]},{"pos":[2308,2313],"content":"Empty","needQuote":true,"nodes":[{"content":"Empty","pos":[0,5]}]},{"pos":[3427,3449],"content":"PointF(Single, Single)","needQuote":true,"nodes":[{"content":"PointF(Single, Single)","pos":[0,22]}]},{"content":"\\n&lt;p&gt;The horizontal position of the point.","pos":[4241,4283],"source":"\\n<p>The horizontal position of the point."},{"content":"&lt;/p&gt;\\n","pos":[4284,4290],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The vertical position of the point.","pos":[4350,4390],"source":"\\n<p>The vertical position of the point."},{"content":"&lt;/p&gt;\\n","pos":[4391,4397],"source":" </p>\\n"},{"pos":[4666,4673],"content":"IsEmpty","needQuote":true,"nodes":[{"content":"IsEmpty","pos":[0,7]}]},{"pos":[5927,5928],"content":"X","needQuote":true,"nodes":[{"content":"X","pos":[0,1]}]},{"pos":[6996,6997],"content":"Y","needQuote":true,"nodes":[{"content":"Y","pos":[0,1]}]},{"pos":[8200,8217],"content":"Add(PointF, Size)","needQuote":true,"nodes":[{"content":"Add(PointF, Size)","pos":[0,17]}]},{"pos":[10217,10235],"content":"Add(PointF, SizeF)","needQuote":true,"nodes":[{"content":"Add(PointF, SizeF)","pos":[0,18]}]},{"pos":[12162,12176],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[13837,13850],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[15210,15232],"content":"Addition(PointF, Size)","needQuote":true,"nodes":[{"content":"Addition(PointF, Size)","pos":[0,22]}]},{"pos":[17092,17115],"content":"Addition(PointF, SizeF)","needQuote":true,"nodes":[{"content":"Addition(PointF, SizeF)","pos":[0,23]}]},{"pos":[19061,19085],"content":"Equality(PointF, PointF)","needQuote":true,"nodes":[{"content":"Equality(PointF, PointF)","pos":[0,24]}]},{"pos":[21436,21462],"content":"Inequality(PointF, PointF)","needQuote":true,"nodes":[{"content":"Inequality(PointF, PointF)","pos":[0,26]}]},{"pos":[23372,23397],"content":"Subtraction(PointF, Size)","needQuote":true,"nodes":[{"content":"Subtraction(PointF, Size)","pos":[0,25]}]},{"pos":[25282,25308],"content":"Subtraction(PointF, SizeF)","needQuote":true,"nodes":[{"content":"Subtraction(PointF, SizeF)","pos":[0,26]}]},{"pos":[27185,27207],"content":"Subtract(PointF, Size)","needQuote":true,"nodes":[{"content":"Subtract(PointF, Size)","pos":[0,22]}]},{"pos":[29193,29216],"content":"Subtract(PointF, SizeF)","needQuote":true,"nodes":[{"content":"Subtract(PointF, SizeF)","pos":[0,23]}]},{"pos":[31076,31086],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[32157,32171],"content":"System.Drawing","needQuote":true,"nodes":[{"content":"System.Drawing","pos":[0,14]}]},{"pos":[32368,32390],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[32538,32544],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[32611,32612],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[32662,32668],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[32729,32730]},{"pos":[32785,32791],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[32851,32852],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[32949,32955],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[33022,33023],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[33073,33079],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[33140,33141]},{"pos":[33196,33202],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[33262,33263],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[33508,33539],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[33705,33720],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[33796,33797],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[33847,33853],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[33914,33915]},{"pos":[33970,33976],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[34036,34037],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34143,34158],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[34234,34235],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[34285,34291],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[34352,34353]},{"pos":[34408,34414],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[34474,34475],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34701,34710],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[34803,34810],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[34878,34879],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[34906,34907],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34976,34983],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[35051,35052],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[35079,35080],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[35233,35239],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[35360,35366],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[35513,35519],"content":"PointF","needQuote":true,"nodes":[{"content":"PointF","pos":[0,6]}]},{"pos":[35680,35686],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[35832,35839],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[36001,36005],"content":"Size","needQuote":true,"nodes":[{"content":"Size","pos":[0,4]}]},{"pos":[36175,36180],"content":"SizeF","needQuote":true,"nodes":[{"content":"SizeF","pos":[0,5]}]},{"pos":[36372,36386],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[36511,36517],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[36566,36567],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[36617,36623],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[36683,36684],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[36770,36776],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[36825,36826],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[36876,36882],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[36942,36943],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[37124,37133],"content":"ValueType","needQuote":true,"nodes":[{"content":"ValueType","pos":[0,9]}]},{"pos":[37312,37325],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[37432,37443],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[37497,37498],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[37525,37526],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[37602,37613],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[37667,37668],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[37695,37696],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[37862,37867],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[38031,38041],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[38142,38150],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[38201,38202],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[38229,38230],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[38303,38311],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[38362,38363],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[38390,38391],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[38552,38558],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"items:\n- uid: System.Drawing.PointF\n  commentId: T:System.Drawing.PointF\n  id: PointF\n  parent: System.Drawing\n  children:\n  - System.Drawing.PointF.#ctor(System.Single,System.Single)\n  - System.Drawing.PointF.Add(System.Drawing.PointF,System.Drawing.Size)\n  - System.Drawing.PointF.Add(System.Drawing.PointF,System.Drawing.SizeF)\n  - System.Drawing.PointF.Empty\n  - System.Drawing.PointF.Equals(System.Object)\n  - System.Drawing.PointF.GetHashCode\n  - System.Drawing.PointF.IsEmpty\n  - System.Drawing.PointF.op_Addition(System.Drawing.PointF,System.Drawing.Size)\n  - System.Drawing.PointF.op_Addition(System.Drawing.PointF,System.Drawing.SizeF)\n  - System.Drawing.PointF.op_Equality(System.Drawing.PointF,System.Drawing.PointF)\n  - System.Drawing.PointF.op_Inequality(System.Drawing.PointF,System.Drawing.PointF)\n  - System.Drawing.PointF.op_Subtraction(System.Drawing.PointF,System.Drawing.Size)\n  - System.Drawing.PointF.op_Subtraction(System.Drawing.PointF,System.Drawing.SizeF)\n  - System.Drawing.PointF.Subtract(System.Drawing.PointF,System.Drawing.Size)\n  - System.Drawing.PointF.Subtract(System.Drawing.PointF,System.Drawing.SizeF)\n  - System.Drawing.PointF.ToString\n  - System.Drawing.PointF.X\n  - System.Drawing.PointF.Y\n  langs:\n  - csharp\n  - vb\n  name: PointF\n  fullName: System.Drawing.PointF\n  type: Struct\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/PointF.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: PointF\n    path: src/System.Drawing.Primitives/src/System/Drawing/PointF.cs\n    startLine: 10\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Represents an ordered pair of floating-point x- and y-coordinates that defines a point in a two-dimensional plane.</p>\\n\"\n  syntax:\n    content: public struct PointF\n    content.vb: Public Structure PointF\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  modifiers.csharp:\n  - public\n  - struct\n  modifiers.vb:\n  - Public\n  - Structure\n  nameWithType: PointF\n- uid: System.Drawing.PointF.Empty\n  commentId: F:System.Drawing.PointF.Empty\n  id: Empty\n  parent: System.Drawing.PointF\n  langs:\n  - csharp\n  - vb\n  name: Empty\n  fullName: System.Drawing.PointF.Empty\n  type: Field\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/PointF.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Empty\n    path: src/System.Drawing.Primitives/src/System/Drawing/PointF.cs\n    startLine: 18\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Represents a new instance of the <xref href=\\\"System.Drawing.PointF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with member data left uninitialized.</p>\\n\"\n  syntax:\n    content: public static readonly PointF Empty\n    content.vb: Public Shared ReadOnly Empty As PointF\n    return:\n      type: System.Drawing.PointF\n  modifiers.csharp:\n  - public\n  - static\n  - readonly\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: PointF.Empty\n- uid: System.Drawing.PointF.#ctor(System.Single,System.Single)\n  commentId: M:System.Drawing.PointF.#ctor(System.Single,System.Single)\n  id: '#ctor(System.Single,System.Single)'\n  parent: System.Drawing.PointF\n  langs:\n  - csharp\n  - vb\n  name: PointF(Single, Single)\n  fullName: System.Drawing.PointF.PointF(System.Single, System.Single)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/PointF.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Drawing.Primitives/src/System/Drawing/PointF.cs\n    startLine: 28\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Drawing.PointF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified coordinates.</p>\\n\"\n  syntax:\n    content: public PointF(float x, float y)\n    content.vb: Public Sub New(x As Single, y As Single)\n    parameters:\n    - id: x\n      type: System.Single\n      description: \"\\n<p>The horizontal position of the point. </p>\\n\"\n    - id: y\n      type: System.Single\n      description: \"\\n<p>The vertical position of the point. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: PointF.PointF(Single, Single)\n- uid: System.Drawing.PointF.IsEmpty\n  commentId: P:System.Drawing.PointF.IsEmpty\n  id: IsEmpty\n  parent: System.Drawing.PointF\n  langs:\n  - csharp\n  - vb\n  name: IsEmpty\n  fullName: System.Drawing.PointF.IsEmpty\n  type: Property\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/PointF.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsEmpty\n    path: src/System.Drawing.Primitives/src/System/Drawing/PointF.cs\n    startLine: 39\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Gets a value indicating whether this <xref href=\\\"System.Drawing.PointF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is empty.</p>\\n\"\n  syntax:\n    content: public bool IsEmpty { get; }\n    content.vb: Public ReadOnly Property IsEmpty As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if both <xref href=\\\"System.Drawing.PointF.X\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and <xref href=\\\"System.Drawing.PointF.Y\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> are 0; otherwise, <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: PointF.IsEmpty\n- uid: System.Drawing.PointF.X\n  commentId: P:System.Drawing.PointF.X\n  id: X\n  parent: System.Drawing.PointF\n  langs:\n  - csharp\n  - vb\n  name: X\n  fullName: System.Drawing.PointF.X\n  type: Property\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/PointF.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: X\n    path: src/System.Drawing.Primitives/src/System/Drawing/PointF.cs\n    startLine: 52\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Gets or sets the x-coordinate of this <xref href=\\\"System.Drawing.PointF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public float X { get; set; }\n    content.vb: Public Property X As Single\n    parameters: []\n    return:\n      type: System.Single\n      description: \"\\n<p>The x-coordinate of this <xref href=\\\"System.Drawing.PointF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: PointF.X\n- uid: System.Drawing.PointF.Y\n  commentId: P:System.Drawing.PointF.Y\n  id: Y\n  parent: System.Drawing.PointF\n  langs:\n  - csharp\n  - vb\n  name: Y\n  fullName: System.Drawing.PointF.Y\n  type: Property\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/PointF.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Y\n    path: src/System.Drawing.Primitives/src/System/Drawing/PointF.cs\n    startLine: 69\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Gets or sets the y-coordinate of this <xref href=\\\"System.Drawing.PointF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public float Y { get; set; }\n    content.vb: Public Property Y As Single\n    parameters: []\n    return:\n      type: System.Single\n      description: \"\\n<p>The y-coordinate of this <xref href=\\\"System.Drawing.PointF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: PointF.Y\n- uid: System.Drawing.PointF.Add(System.Drawing.PointF,System.Drawing.Size)\n  commentId: M:System.Drawing.PointF.Add(System.Drawing.PointF,System.Drawing.Size)\n  id: Add(System.Drawing.PointF,System.Drawing.Size)\n  parent: System.Drawing.PointF\n  langs:\n  - csharp\n  - vb\n  name: Add(PointF, Size)\n  fullName: System.Drawing.PointF.Add(System.Drawing.PointF, System.Drawing.Size)\n  type: Method\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/PointF.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Add\n    path: src/System.Drawing.Primitives/src/System/Drawing/PointF.cs\n    startLine: 151\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Translates a given <xref href=\\\"System.Drawing.PointF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> by the specified <xref href=\\\"System.Drawing.Size\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public static PointF Add(PointF pt, Size sz)\n    content.vb: Public Shared Function Add(pt As PointF, sz As Size) As PointF\n    parameters:\n    - id: pt\n      type: System.Drawing.PointF\n      description: \"\\n<p>The <xref href=\\\"System.Drawing.PointF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to translate.</p>\\n\"\n    - id: sz\n      type: System.Drawing.Size\n      description: \"\\n<p>The <xref href=\\\"System.Drawing.Size\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that specifies the numbers to add to the coordinates of <em>pt</em>.</p>\\n\"\n    return:\n      type: System.Drawing.PointF\n      description: \"\\n<p>The translated <xref href=\\\"System.Drawing.PointF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  seealso:\n  - type: System.Drawing.PointF.op_Addition(System.Drawing.PointF,System.Drawing.Size)\n    commentId: M:System.Drawing.PointF.op_Addition(System.Drawing.PointF,System.Drawing.Size)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: PointF.Add(PointF, Size)\n- uid: System.Drawing.PointF.Add(System.Drawing.PointF,System.Drawing.SizeF)\n  commentId: M:System.Drawing.PointF.Add(System.Drawing.PointF,System.Drawing.SizeF)\n  id: Add(System.Drawing.PointF,System.Drawing.SizeF)\n  parent: System.Drawing.PointF\n  langs:\n  - csharp\n  - vb\n  name: Add(PointF, SizeF)\n  fullName: System.Drawing.PointF.Add(System.Drawing.PointF, System.Drawing.SizeF)\n  type: Method\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/PointF.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Add\n    path: src/System.Drawing.Primitives/src/System/Drawing/PointF.cs\n    startLine: 171\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Translates a given <xref href=\\\"System.Drawing.PointF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> by a specified <xref href=\\\"System.Drawing.SizeF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public static PointF Add(PointF pt, SizeF sz)\n    content.vb: Public Shared Function Add(pt As PointF, sz As SizeF) As PointF\n    parameters:\n    - id: pt\n      type: System.Drawing.PointF\n      description: \"\\n<p>The <xref href=\\\"System.Drawing.PointF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to translate.</p>\\n\"\n    - id: sz\n      type: System.Drawing.SizeF\n      description: \"\\n<p>The <xref href=\\\"System.Drawing.SizeF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that specifies the numbers to add to the coordinates of <em>pt</em>.</p>\\n\"\n    return:\n      type: System.Drawing.PointF\n      description: \"\\n<p>The translated <xref href=\\\"System.Drawing.PointF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  seealso:\n  - type: System.Drawing.PointF.op_Addition(System.Drawing.PointF,System.Drawing.Size)\n    commentId: M:System.Drawing.PointF.op_Addition(System.Drawing.PointF,System.Drawing.Size)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: PointF.Add(PointF, SizeF)\n- uid: System.Drawing.PointF.Equals(System.Object)\n  commentId: M:System.Drawing.PointF.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Drawing.PointF\n  langs:\n  - csharp\n  - vb\n  name: Equals(Object)\n  fullName: System.Drawing.PointF.Equals(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/PointF.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Equals\n    path: src/System.Drawing.Primitives/src/System/Drawing/PointF.cs\n    startLine: 186\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Specifies whether this <xref href=\\\"System.Drawing.PointF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> contains the same coordinates as the specified <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public override bool Equals(object obj)\n    content.vb: Public Overrides Function Equals(obj As Object) As Boolean\n    parameters:\n    - id: obj\n      type: System.Object\n      description: \"\\n<p>The <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to test. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>This method returns <strong>true</strong> if <em>obj</em> is a <xref href=\\\"System.Drawing.PointF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and has the same coordinates as this <xref href=\\\"System.Drawing.Point\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  overridden: System.ValueType.Equals(System.Object)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: PointF.Equals(Object)\n- uid: System.Drawing.PointF.GetHashCode\n  commentId: M:System.Drawing.PointF.GetHashCode\n  id: GetHashCode\n  parent: System.Drawing.PointF\n  langs:\n  - csharp\n  - vb\n  name: GetHashCode()\n  fullName: System.Drawing.PointF.GetHashCode()\n  type: Method\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/PointF.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetHashCode\n    path: src/System.Drawing.Primitives/src/System/Drawing/PointF.cs\n    startLine: 195\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Returns a hash code for this <xref href=\\\"System.Drawing.PointF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  syntax:\n    content: public override int GetHashCode()\n    content.vb: Public Overrides Function GetHashCode As Integer\n    return:\n      type: System.Int32\n      description: \"\\n<p>An integer value that specifies a hash value for this <xref href=\\\"System.Drawing.PointF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  overridden: System.ValueType.GetHashCode\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: PointF.GetHashCode()\n- uid: System.Drawing.PointF.op_Addition(System.Drawing.PointF,System.Drawing.Size)\n  commentId: M:System.Drawing.PointF.op_Addition(System.Drawing.PointF,System.Drawing.Size)\n  id: op_Addition(System.Drawing.PointF,System.Drawing.Size)\n  parent: System.Drawing.PointF\n  langs:\n  - csharp\n  - vb\n  name: Addition(PointF, Size)\n  fullName: System.Drawing.PointF.Addition(System.Drawing.PointF, System.Drawing.Size)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/PointF.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Addition\n    path: src/System.Drawing.Primitives/src/System/Drawing/PointF.cs\n    startLine: 86\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Translates a <xref href=\\\"System.Drawing.PointF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> by a given <xref href=\\\"System.Drawing.Size\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public static PointF operator +(PointF pt, Size sz)\n    content.vb: Public Shared Operator +(pt As PointF, sz As Size) As PointF\n    parameters:\n    - id: pt\n      type: System.Drawing.PointF\n      description: \"\\n<p>The <xref href=\\\"System.Drawing.PointF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to translate. </p>\\n\"\n    - id: sz\n      type: System.Drawing.Size\n      description: \"\\n<p>A <xref href=\\\"System.Drawing.Size\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that specifies the pair of numbers to add to the coordinates of <em>pt</em>. </p>\\n\"\n    return:\n      type: System.Drawing.PointF\n      description: \"\\n<p>Returns the translated <xref href=\\\"System.Drawing.PointF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: PointF.Addition(PointF, Size)\n- uid: System.Drawing.PointF.op_Addition(System.Drawing.PointF,System.Drawing.SizeF)\n  commentId: M:System.Drawing.PointF.op_Addition(System.Drawing.PointF,System.Drawing.SizeF)\n  id: op_Addition(System.Drawing.PointF,System.Drawing.SizeF)\n  parent: System.Drawing.PointF\n  langs:\n  - csharp\n  - vb\n  name: Addition(PointF, SizeF)\n  fullName: System.Drawing.PointF.Addition(System.Drawing.PointF, System.Drawing.SizeF)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/PointF.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Addition\n    path: src/System.Drawing.Primitives/src/System/Drawing/PointF.cs\n    startLine: 106\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Translates the <xref href=\\\"System.Drawing.PointF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> by the specified <xref href=\\\"System.Drawing.SizeF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public static PointF operator +(PointF pt, SizeF sz)\n    content.vb: Public Shared Operator +(pt As PointF, sz As SizeF) As PointF\n    parameters:\n    - id: pt\n      type: System.Drawing.PointF\n      description: \"\\n<p>The <xref href=\\\"System.Drawing.PointF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to translate.</p>\\n\"\n    - id: sz\n      type: System.Drawing.SizeF\n      description: \"\\n<p>The <xref href=\\\"System.Drawing.SizeF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that specifies the numbers to add to the x- and y-coordinates of the <xref href=\\\"System.Drawing.PointF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    return:\n      type: System.Drawing.PointF\n      description: \"\\n<p>The translated <xref href=\\\"System.Drawing.PointF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: PointF.Addition(PointF, SizeF)\n- uid: System.Drawing.PointF.op_Equality(System.Drawing.PointF,System.Drawing.PointF)\n  commentId: M:System.Drawing.PointF.op_Equality(System.Drawing.PointF,System.Drawing.PointF)\n  id: op_Equality(System.Drawing.PointF,System.Drawing.PointF)\n  parent: System.Drawing.PointF\n  langs:\n  - csharp\n  - vb\n  name: Equality(PointF, PointF)\n  fullName: System.Drawing.PointF.Equality(System.Drawing.PointF, System.Drawing.PointF)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/PointF.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Equality\n    path: src/System.Drawing.Primitives/src/System/Drawing/PointF.cs\n    startLine: 128\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Compares two <xref href=\\\"System.Drawing.PointF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structures. The result specifies whether the values of the <xref href=\\\"System.Drawing.PointF.X\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and <xref href=\\\"System.Drawing.PointF.Y\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> properties of the two <xref href=\\\"System.Drawing.PointF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structures are equal.</p>\\n\"\n  syntax:\n    content: public static bool operator ==(PointF left, PointF right)\n    content.vb: Public Shared Operator =(left As PointF, right As PointF) As Boolean\n    parameters:\n    - id: left\n      type: System.Drawing.PointF\n      description: \"\\n<p>A <xref href=\\\"System.Drawing.PointF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to compare. </p>\\n\"\n    - id: right\n      type: System.Drawing.PointF\n      description: \"\\n<p>A <xref href=\\\"System.Drawing.PointF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to compare. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the <xref href=\\\"System.Drawing.PointF.X\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and <xref href=\\\"System.Drawing.PointF.Y\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values of the left and right <xref href=\\\"System.Drawing.PointF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structures are equal; otherwise, <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: PointF.Equality(PointF, PointF)\n- uid: System.Drawing.PointF.op_Inequality(System.Drawing.PointF,System.Drawing.PointF)\n  commentId: M:System.Drawing.PointF.op_Inequality(System.Drawing.PointF,System.Drawing.PointF)\n  id: op_Inequality(System.Drawing.PointF,System.Drawing.PointF)\n  parent: System.Drawing.PointF\n  langs:\n  - csharp\n  - vb\n  name: Inequality(PointF, PointF)\n  fullName: System.Drawing.PointF.Inequality(System.Drawing.PointF, System.Drawing.PointF)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/PointF.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Inequality\n    path: src/System.Drawing.Primitives/src/System/Drawing/PointF.cs\n    startLine: 141\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Determines whether the coordinates of the specified points are not equal.</p>\\n\"\n  syntax:\n    content: public static bool operator !=(PointF left, PointF right)\n    content.vb: Public Shared Operator <>(left As PointF, right As PointF) As Boolean\n    parameters:\n    - id: left\n      type: System.Drawing.PointF\n      description: \"\\n<p>A <xref href=\\\"System.Drawing.PointF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to compare.</p>\\n\"\n    - id: right\n      type: System.Drawing.PointF\n      description: \"\\n<p>A <xref href=\\\"System.Drawing.PointF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to compare.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to indicate the <xref href=\\\"System.Drawing.PointF.X\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and <xref href=\\\"System.Drawing.PointF.Y\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values of <em>left</em> and <em>right</em> are not equal; otherwise, <strong>false</strong>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: PointF.Inequality(PointF, PointF)\n- uid: System.Drawing.PointF.op_Subtraction(System.Drawing.PointF,System.Drawing.Size)\n  commentId: M:System.Drawing.PointF.op_Subtraction(System.Drawing.PointF,System.Drawing.Size)\n  id: op_Subtraction(System.Drawing.PointF,System.Drawing.Size)\n  parent: System.Drawing.PointF\n  langs:\n  - csharp\n  - vb\n  name: Subtraction(PointF, Size)\n  fullName: System.Drawing.PointF.Subtraction(System.Drawing.PointF, System.Drawing.Size)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/PointF.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Subtraction\n    path: src/System.Drawing.Primitives/src/System/Drawing/PointF.cs\n    startLine: 96\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Translates a <xref href=\\\"System.Drawing.PointF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> by the negative of a given <xref href=\\\"System.Drawing.Size\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public static PointF operator -(PointF pt, Size sz)\n    content.vb: Public Shared Operator -(pt As PointF, sz As Size) As PointF\n    parameters:\n    - id: pt\n      type: System.Drawing.PointF\n      description: \"\\n<p>The <xref href=\\\"System.Drawing.PointF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to translate.</p>\\n\"\n    - id: sz\n      type: System.Drawing.Size\n      description: \"\\n<p>The <xref href=\\\"System.Drawing.Size\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that specifies the numbers to subtract from the coordinates of <em>pt</em>.</p>\\n\"\n    return:\n      type: System.Drawing.PointF\n      description: \"\\n<p>The translated <xref href=\\\"System.Drawing.PointF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: PointF.Subtraction(PointF, Size)\n- uid: System.Drawing.PointF.op_Subtraction(System.Drawing.PointF,System.Drawing.SizeF)\n  commentId: M:System.Drawing.PointF.op_Subtraction(System.Drawing.PointF,System.Drawing.SizeF)\n  id: op_Subtraction(System.Drawing.PointF,System.Drawing.SizeF)\n  parent: System.Drawing.PointF\n  langs:\n  - csharp\n  - vb\n  name: Subtraction(PointF, SizeF)\n  fullName: System.Drawing.PointF.Subtraction(System.Drawing.PointF, System.Drawing.SizeF)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/PointF.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Subtraction\n    path: src/System.Drawing.Primitives/src/System/Drawing/PointF.cs\n    startLine: 116\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Translates a <xref href=\\\"System.Drawing.PointF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> by the negative of a specified <xref href=\\\"System.Drawing.SizeF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  syntax:\n    content: public static PointF operator -(PointF pt, SizeF sz)\n    content.vb: Public Shared Operator -(pt As PointF, sz As SizeF) As PointF\n    parameters:\n    - id: pt\n      type: System.Drawing.PointF\n      description: \"\\n<p>The <xref href=\\\"System.Drawing.PointF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to translate.</p>\\n\"\n    - id: sz\n      type: System.Drawing.SizeF\n      description: \"\\n<p>The <xref href=\\\"System.Drawing.SizeF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that specifies the numbers to subtract from the coordinates of <em>pt</em>.</p>\\n\"\n    return:\n      type: System.Drawing.PointF\n      description: \"\\n<p>The translated <xref href=\\\"System.Drawing.PointF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: PointF.Subtraction(PointF, SizeF)\n- uid: System.Drawing.PointF.Subtract(System.Drawing.PointF,System.Drawing.Size)\n  commentId: M:System.Drawing.PointF.Subtract(System.Drawing.PointF,System.Drawing.Size)\n  id: Subtract(System.Drawing.PointF,System.Drawing.Size)\n  parent: System.Drawing.PointF\n  langs:\n  - csharp\n  - vb\n  name: Subtract(PointF, Size)\n  fullName: System.Drawing.PointF.Subtract(System.Drawing.PointF, System.Drawing.Size)\n  type: Method\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/PointF.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Subtract\n    path: src/System.Drawing.Primitives/src/System/Drawing/PointF.cs\n    startLine: 161\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Translates a <xref href=\\\"System.Drawing.PointF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> by the negative of a specified size.</p>\\n\"\n  syntax:\n    content: public static PointF Subtract(PointF pt, Size sz)\n    content.vb: Public Shared Function Subtract(pt As PointF, sz As Size) As PointF\n    parameters:\n    - id: pt\n      type: System.Drawing.PointF\n      description: \"\\n<p>The <xref href=\\\"System.Drawing.PointF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to translate.</p>\\n\"\n    - id: sz\n      type: System.Drawing.Size\n      description: \"\\n<p>The <xref href=\\\"System.Drawing.Size\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that specifies the numbers to subtract from the coordinates of <em>pt</em>.</p>\\n\"\n    return:\n      type: System.Drawing.PointF\n      description: \"\\n<p>The translated <xref href=\\\"System.Drawing.PointF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  seealso:\n  - type: System.Drawing.PointF.op_Subtraction(System.Drawing.PointF,System.Drawing.Size)\n    commentId: M:System.Drawing.PointF.op_Subtraction(System.Drawing.PointF,System.Drawing.Size)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: PointF.Subtract(PointF, Size)\n- uid: System.Drawing.PointF.Subtract(System.Drawing.PointF,System.Drawing.SizeF)\n  commentId: M:System.Drawing.PointF.Subtract(System.Drawing.PointF,System.Drawing.SizeF)\n  id: Subtract(System.Drawing.PointF,System.Drawing.SizeF)\n  parent: System.Drawing.PointF\n  langs:\n  - csharp\n  - vb\n  name: Subtract(PointF, SizeF)\n  fullName: System.Drawing.PointF.Subtract(System.Drawing.PointF, System.Drawing.SizeF)\n  type: Method\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/PointF.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Subtract\n    path: src/System.Drawing.Primitives/src/System/Drawing/PointF.cs\n    startLine: 181\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Translates a <xref href=\\\"System.Drawing.PointF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> by the negative of a specified size.</p>\\n\"\n  syntax:\n    content: public static PointF Subtract(PointF pt, SizeF sz)\n    content.vb: Public Shared Function Subtract(pt As PointF, sz As SizeF) As PointF\n    parameters:\n    - id: pt\n      type: System.Drawing.PointF\n      description: \"\\n<p>The <xref href=\\\"System.Drawing.PointF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to translate.</p>\\n\"\n    - id: sz\n      type: System.Drawing.SizeF\n      description: \"\\n<p>The <xref href=\\\"System.Drawing.SizeF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that specifies the numbers to subtract from the coordinates of <em>pt</em>.</p>\\n\"\n    return:\n      type: System.Drawing.PointF\n      description: \"\\n<p>The translated <xref href=\\\"System.Drawing.PointF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  seealso:\n  - type: System.Drawing.PointF.op_Subtraction(System.Drawing.PointF,System.Drawing.Size)\n    commentId: M:System.Drawing.PointF.op_Subtraction(System.Drawing.PointF,System.Drawing.Size)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: PointF.Subtract(PointF, SizeF)\n- uid: System.Drawing.PointF.ToString\n  commentId: M:System.Drawing.PointF.ToString\n  id: ToString\n  parent: System.Drawing.PointF\n  langs:\n  - csharp\n  - vb\n  name: ToString()\n  fullName: System.Drawing.PointF.ToString()\n  type: Method\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/PointF.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ToString\n    path: src/System.Drawing.Primitives/src/System/Drawing/PointF.cs\n    startLine: 200\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Converts this <xref href=\\\"System.Drawing.PointF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to a human readable string.</p>\\n\"\n  syntax:\n    content: public override string ToString()\n    content.vb: Public Overrides Function ToString As String\n    return:\n      type: System.String\n      description: \"\\n<p>A string that represents this <xref href=\\\"System.Drawing.PointF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  overridden: System.ValueType.ToString\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: PointF.ToString()\nreferences:\n- uid: System.Drawing\n  isExternal: false\n  name: System.Drawing\n  fullName: System.Drawing\n  nameWithType: System.Drawing\n  commentId: N:System.Drawing\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Drawing.PointF\n  parent: System.Drawing\n  isExternal: false\n  name: PointF\n  fullName: System.Drawing.PointF\n  nameWithType: PointF\n  commentId: T:System.Drawing.PointF\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  fullName: System.Single\n  nameWithType: Single\n  commentId: T:System.Single\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.Drawing.Size\n  parent: System.Drawing\n  isExternal: false\n  name: Size\n  fullName: System.Drawing.Size\n  nameWithType: Size\n  commentId: T:System.Drawing.Size\n- uid: System.Drawing.SizeF\n  parent: System.Drawing\n  isExternal: false\n  name: SizeF\n  fullName: System.Drawing.SizeF\n  nameWithType: SizeF\n  commentId: T:System.Drawing.SizeF\n- uid: System.ValueType.Equals(System.Object)\n  parent: System.ValueType\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.ValueType.Equals(System.Object)\n  spec.csharp:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: ValueType.Equals(Object)\n  commentId: M:System.ValueType.Equals(System.Object)\n- uid: System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  fullName: System.ValueType\n  nameWithType: ValueType\n  commentId: T:System.ValueType\n- uid: System.ValueType.GetHashCode\n  parent: System.ValueType\n  isExternal: false\n  name: GetHashCode()\n  fullName: System.ValueType.GetHashCode()\n  spec.csharp:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ValueType.GetHashCode()\n  commentId: M:System.ValueType.GetHashCode\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.ValueType.ToString\n  parent: System.ValueType\n  isExternal: false\n  name: ToString()\n  fullName: System.ValueType.ToString()\n  spec.csharp:\n  - uid: System.ValueType.ToString\n    name: ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.ToString\n    name: ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ValueType.ToString()\n  commentId: M:System.ValueType.ToString\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n"}