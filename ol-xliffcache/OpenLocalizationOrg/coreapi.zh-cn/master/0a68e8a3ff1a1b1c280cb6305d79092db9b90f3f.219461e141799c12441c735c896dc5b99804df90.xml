{"nodes":[{"pos":[249,258],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"pos":[1736,1759],"content":"Compare(Object, Object)","needQuote":true,"nodes":[{"content":"Compare(Object, Object)","pos":[0,23]}]},{"content":"\\n&lt;p&gt;The first object to compare.","pos":[2504,2537],"source":"\\n<p>The first object to compare."},{"content":"&lt;/p&gt;\\n","pos":[2538,2544],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The second object to compare.","pos":[2604,2638],"source":"\\n<p>The second object to compare."},{"content":"&lt;/p&gt;\\n","pos":[2639,2645],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A signed integer that indicates the relative values of &lt;em&gt;x&lt;/em&gt; and &lt;em&gt;y&lt;/em&gt;, as shown in the following table.&lt;/p&gt;\\n&lt;p&gt;Value &lt;/p&gt;\\n&lt;p&gt;Meaning &lt;/p&gt;\\n&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;\\n&lt;p&gt;Less than zero &lt;/p&gt;\\n&lt;/td&gt;&lt;td&gt;\\n&lt;p&gt;\\n&lt;em&gt;x&lt;/em&gt; is less than &lt;em&gt;y&lt;/em&gt;.","pos":[2704,2960],"source":"\\n<p>A signed integer that indicates the relative values of <em>x</em> and <em>y</em>, as shown in the following table.</p>\\n<p>Value </p>\\n<p>Meaning </p>\\n<table><tbody><tr><td>\\n<p>Less than zero </p>\\n</td><td>\\n<p>\\n<em>x</em> is less than <em>y</em>."},{"content":"&lt;/p&gt;\\n&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;\\n&lt;p&gt;Zero &lt;/p&gt;\\n&lt;/td&gt;&lt;td&gt;\\n&lt;p&gt;\\n&lt;em&gt;x&lt;/em&gt; equals &lt;em&gt;y&lt;/em&gt;.","pos":[2961,3046],"source":" </p>\\n</td></tr><tr><td>\\n<p>Zero </p>\\n</td><td>\\n<p>\\n<em>x</em> equals <em>y</em>."},{"content":"&lt;/p&gt;\\n&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;\\n&lt;p&gt;Greater than zero &lt;/p&gt;\\n&lt;/td&gt;&lt;td&gt;\\n&lt;p&gt;\\n&lt;em&gt;x&lt;/em&gt; is greater than &lt;em&gt;y&lt;/em&gt;.","pos":[3047,3154],"source":" </p>\\n</td></tr><tr><td>\\n<p>Greater than zero </p>\\n</td><td>\\n<p>\\n<em>x</em> is greater than <em>y</em>."},{"content":"&lt;/p&gt;\\n&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\\n","pos":[3155,3189],"source":" </p>\\n</td></tr></tbody></table>\\n"},{"pos":[4063,4081],"content":"System.Collections","needQuote":true,"nodes":[{"content":"System.Collections","pos":[0,18]}]},{"pos":[4248,4254],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[4398,4403],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[4521,4527],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[4669,4686],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]}],"content":"items:\n- uid: System.Collections.IComparer\n  commentId: T:System.Collections.IComparer\n  id: IComparer\n  parent: System.Collections\n  children:\n  - System.Collections.IComparer.Compare(System.Object,System.Object)\n  langs:\n  - csharp\n  - vb\n  name: IComparer\n  fullName: System.Collections.IComparer\n  type: Interface\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/IComparer.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: IComparer\n    path: src/mscorlib/src/System/Collections/IComparer.cs\n    startLine: 23\n  assemblies:\n  - System.Runtime\n  namespace: System.Collections\n  summary: \"\\n<p>Exposes a method that compares two objects.</p>\\n\"\n  syntax:\n    content: >-\n      [ComVisible(true)]\n\n      public interface IComparer\n    content.vb: >-\n      <ComVisible(True)>\n\n      Public Interface IComparer\n  seealso:\n  - type: System.Collections.Comparer\n    commentId: T:System.Collections.Comparer\n  - type: System.Collections.Generic.IComparer`1\n    commentId: T:System.Collections.Generic.IComparer`1\n  - type: System.Threading.Thread.CurrentCulture\n    commentId: P:System.Threading.Thread.CurrentCulture\n  - type: System.Globalization.CompareInfo\n    commentId: T:System.Globalization.CompareInfo\n  - type: System.Globalization.CultureInfo\n    commentId: T:System.Globalization.CultureInfo\n  modifiers.csharp:\n  - public\n  - interface\n  modifiers.vb:\n  - Public\n  - Interface\n  nameWithType: IComparer\n- uid: System.Collections.IComparer.Compare(System.Object,System.Object)\n  commentId: M:System.Collections.IComparer.Compare(System.Object,System.Object)\n  id: Compare(System.Object,System.Object)\n  parent: System.Collections.IComparer\n  langs:\n  - csharp\n  - vb\n  name: Compare(Object, Object)\n  fullName: System.Collections.IComparer.Compare(System.Object, System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/IComparer.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Compare\n    path: src/mscorlib/src/System/Collections/IComparer.cs\n    startLine: 29\n  assemblies:\n  - System.Runtime\n  namespace: System.Collections\n  summary: \"\\n<p>Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.</p>\\n\"\n  syntax:\n    content: int Compare(object x, object y)\n    content.vb: Function Compare(x As Object, y As Object) As Integer\n    parameters:\n    - id: x\n      type: System.Object\n      description: \"\\n<p>The first object to compare. </p>\\n\"\n    - id: y\n      type: System.Object\n      description: \"\\n<p>The second object to compare. </p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>A signed integer that indicates the relative values of <em>x</em> and <em>y</em>, as shown in the following table.</p>\\n<p>Value </p>\\n<p>Meaning </p>\\n<table><tbody><tr><td>\\n<p>Less than zero </p>\\n</td><td>\\n<p>\\n<em>x</em> is less than <em>y</em>. </p>\\n</td></tr><tr><td>\\n<p>Zero </p>\\n</td><td>\\n<p>\\n<em>x</em> equals <em>y</em>. </p>\\n</td></tr><tr><td>\\n<p>Greater than zero </p>\\n</td><td>\\n<p>\\n<em>x</em> is greater than <em>y</em>. </p>\\n</td></tr></tbody></table>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>Neither <em>x</em> nor <em>y</em> implements the <xref href=\\\"System.IComparable\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> interface.</p>\\n<p>-or- </p>\\n<p>\\n<em>x</em> and <em>y</em> are of different types and neither one can handle comparisons with the other. </p>\\n\"\n  seealso:\n  - type: System.IComparable\n    commentId: T:System.IComparable\n  - type: System.Threading.Thread.CurrentCulture\n    commentId: P:System.Threading.Thread.CurrentCulture\n  - type: System.Globalization.CompareInfo\n    commentId: T:System.Globalization.CompareInfo\n  - type: System.Globalization.CultureInfo\n    commentId: T:System.Globalization.CultureInfo\n  nameWithType: IComparer.Compare(Object, Object)\nreferences:\n- uid: System.Collections\n  isExternal: false\n  name: System.Collections\n  fullName: System.Collections\n  nameWithType: System.Collections\n  commentId: N:System.Collections\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n"}