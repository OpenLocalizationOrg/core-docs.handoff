{"nodes":[{"pos":[3184,3192],"content":"IMoniker","needQuote":true,"nodes":[{"content":"IMoniker","pos":[0,8]}]},{"pos":[5268,5322],"content":"BindToObject(IBindCtx, IMoniker, ref Guid, out Object)","needQuote":true,"nodes":[{"content":"BindToObject(IBindCtx, IMoniker, ref Guid, out Object)","pos":[0,54]}]},{"content":"\\n&lt;p&gt;A reference to the &lt;strong&gt;IBindCtx&lt;/strong&gt; interface on the bind context object used in this binding operation.","pos":[6422,6540],"source":"\\n<p>A reference to the <strong>IBindCtx</strong> interface on the bind context object used in this binding operation."},{"content":"&lt;/p&gt;\\n","pos":[6541,6547],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A reference to the moniker to the left of the current moniker, if the moniker is part of a composite moniker.","pos":[6650,6764],"source":"\\n<p>A reference to the moniker to the left of the current moniker, if the moniker is part of a composite moniker."},{"content":"&lt;/p&gt;\\n","pos":[6765,6771],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The interface identifier (IID) of the interface that the client intends to use to communicate with the object that the moniker identifies.","pos":[6838,6981],"source":"\\n<p>The interface identifier (IID) of the interface that the client intends to use to communicate with the object that the moniker identifies."},{"content":"&lt;/p&gt;\\n","pos":[6982,6988],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;When this method returns, contains a reference to the interface requested by &lt;em&gt;riidResult&lt;/em&gt;.","pos":[7216,7318],"source":"\\n<p>When this method returns, contains a reference to the interface requested by <em>riidResult</em>."},{"content":"This parameter is passed uninitialized.&lt;/p&gt;\\n","pos":[7319,7364],"source":" This parameter is passed uninitialized.</p>\\n"},{"pos":[8761,8816],"content":"BindToStorage(IBindCtx, IMoniker, ref Guid, out Object)","needQuote":true,"nodes":[{"content":"BindToStorage(IBindCtx, IMoniker, ref Guid, out Object)","pos":[0,55]}]},{"content":"\\n&lt;p&gt;A reference to the &lt;strong&gt;IBindCtx&lt;/strong&gt; interface on the bind context object used during this binding operation.","pos":[9941,10063],"source":"\\n<p>A reference to the <strong>IBindCtx</strong> interface on the bind context object used during this binding operation."},{"content":"&lt;/p&gt;\\n","pos":[10064,10070],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A reference to the moniker to the left of the current moniker, if the moniker is part of a composite moniker.","pos":[10173,10287],"source":"\\n<p>A reference to the moniker to the left of the current moniker, if the moniker is part of a composite moniker."},{"content":"&lt;/p&gt;\\n","pos":[10288,10294],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The interface identifier (IID) of the storage interface requested.","pos":[10355,10426],"source":"\\n<p>The interface identifier (IID) of the storage interface requested."},{"content":"&lt;/p&gt;\\n","pos":[10427,10433],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;When this method returns, contains a reference to the interface requested by &lt;em&gt;riid&lt;/em&gt;.","pos":[10658,10754],"source":"\\n<p>When this method returns, contains a reference to the interface requested by <em>riid</em>."},{"content":"This parameter is passed uninitialized.&lt;/p&gt;\\n","pos":[10755,10800],"source":" This parameter is passed uninitialized.</p>\\n"},{"pos":[12129,12169],"content":"CommonPrefixWith(IMoniker, out IMoniker)","needQuote":true,"nodes":[{"content":"CommonPrefixWith(IMoniker, out IMoniker)","pos":[0,40]}]},{"content":"\\n&lt;p&gt;A reference to the &lt;strong&gt;IMoniker&lt;/strong&gt; interface on another moniker to compare with the current moniker for a common prefix.","pos":[13179,13314],"source":"\\n<p>A reference to the <strong>IMoniker</strong> interface on another moniker to compare with the current moniker for a common prefix."},{"content":"&lt;/p&gt;\\n","pos":[13315,13321],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;When this method returns, contains the moniker that is the common prefix of the current moniker and &lt;em&gt;pmkOther&lt;/em&gt;.","pos":[13425,13548],"source":"\\n<p>When this method returns, contains the moniker that is the common prefix of the current moniker and <em>pmkOther</em>."},{"content":"This parameter is passed uninitialized.&lt;/p&gt;\\n","pos":[13549,13594],"source":" This parameter is passed uninitialized.</p>\\n"},{"pos":[14575,14619],"content":"ComposeWith(IMoniker, Boolean, out IMoniker)","needQuote":true,"nodes":[{"content":"ComposeWith(IMoniker, Boolean, out IMoniker)","pos":[0,44]}]},{"content":"\\n&lt;p&gt;A reference to the &lt;strong&gt;IMoniker&lt;/strong&gt; interface on a moniker to append to the end of the current moniker.","pos":[15706,15823],"source":"\\n<p>A reference to the <strong>IMoniker</strong> interface on a moniker to append to the end of the current moniker."},{"content":"&lt;/p&gt;\\n","pos":[15824,15830],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to indicate that the caller requires a nongeneric composition.","pos":[15907,15998],"source":"\\n<p>\\n<strong>true</strong> to indicate that the caller requires a nongeneric composition."},{"content":"The operation proceeds only if &lt;em&gt;pmkRight&lt;/em&gt; is a moniker class that the current moniker can combine with in some way other than forming a generic composite.","pos":[15999,16160],"source":" The operation proceeds only if <em>pmkRight</em> is a moniker class that the current moniker can combine with in some way other than forming a generic composite."},{"content":"&lt;strong&gt;false&lt;/strong&gt; to indicate that the method can create a generic composite if necessary.","pos":[16161,16256],"source":" <strong>false</strong> to indicate that the method can create a generic composite if necessary."},{"content":"&lt;/p&gt;\\n","pos":[16257,16263],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;When this method returns, contains a reference to the resulting composite moniker.","pos":[16667,16754],"source":"\\n<p>When this method returns, contains a reference to the resulting composite moniker."},{"content":"This parameter is passed uninitialized.&lt;/p&gt;\\n","pos":[16755,16800],"source":" This parameter is passed uninitialized.</p>\\n"},{"pos":[17648,17679],"content":"Enum(Boolean, out IEnumMoniker)","needQuote":true,"nodes":[{"content":"Enum(Boolean, out IEnumMoniker)","pos":[0,31]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to enumerate the monikers from left to right.","pos":[18616,18690],"source":"\\n<p>\\n<strong>true</strong> to enumerate the monikers from left to right."},{"content":"&lt;strong&gt;false&lt;/strong&gt; to enumerate from right to left.","pos":[18691,18746],"source":" <strong>false</strong> to enumerate from right to left."},{"content":"&lt;/p&gt;\\n","pos":[18747,18753],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;When this method returns, contains a reference to the enumerator object for the moniker.","pos":[19161,19254],"source":"\\n<p>When this method returns, contains a reference to the enumerator object for the moniker."},{"content":"This parameter is passed uninitialized.&lt;/p&gt;\\n","pos":[19255,19300],"source":" This parameter is passed uninitialized.</p>\\n"},{"pos":[19906,19926],"content":"GetClassID(out Guid)","needQuote":true,"nodes":[{"content":"GetClassID(out Guid)","pos":[0,20]}]},{"content":"\\n&lt;p&gt;When this method returns, contains the CLSID.","pos":[20692,20742],"source":"\\n<p>When this method returns, contains the CLSID."},{"content":"This parameter is passed uninitialized.&lt;/p&gt;\\n","pos":[20743,20788],"source":" This parameter is passed uninitialized.</p>\\n"},{"pos":[21622,21668],"content":"GetDisplayName(IBindCtx, IMoniker, out String)","needQuote":true,"nodes":[{"content":"GetDisplayName(IBindCtx, IMoniker, out String)","pos":[0,46]}]},{"content":"\\n&lt;p&gt;A reference to the bind context to use in this operation.","pos":[22744,22806],"source":"\\n<p>A reference to the bind context to use in this operation."},{"content":"&lt;/p&gt;\\n","pos":[22807,22813],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A reference to the moniker to the left of the current moniker, if the moniker is part of a composite moniker.","pos":[22916,23030],"source":"\\n<p>A reference to the moniker to the left of the current moniker, if the moniker is part of a composite moniker."},{"content":"&lt;/p&gt;\\n","pos":[23031,23037],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;When this method returns, contains the display name string.","pos":[23111,23175],"source":"\\n<p>When this method returns, contains the display name string."},{"content":"This parameter is passed uninitialized.&lt;/p&gt;\\n","pos":[23176,23221],"source":" This parameter is passed uninitialized.</p>\\n"},{"pos":[24228,24249],"content":"GetSizeMax(out Int64)","needQuote":true,"nodes":[{"content":"GetSizeMax(out Int64)","pos":[0,21]}]},{"content":"\\n&lt;p&gt;When this method returns, contains a &lt;strong&gt;long&lt;/strong&gt; value indicating the size, in bytes, of the stream needed to save this object.","pos":[25030,25172],"source":"\\n<p>When this method returns, contains a <strong>long</strong> value indicating the size, in bytes, of the stream needed to save this object."},{"content":"This parameter is passed uninitialized.&lt;/p&gt;\\n","pos":[25173,25218],"source":" This parameter is passed uninitialized.</p>\\n"},{"pos":[26176,26229],"content":"GetTimeOfLastChange(IBindCtx, IMoniker, out FILETIME)","needQuote":true,"nodes":[{"content":"GetTimeOfLastChange(IBindCtx, IMoniker, out FILETIME)","pos":[0,53]}]},{"content":"\\n&lt;p&gt;A reference to the bind context to use in this binding operation.","pos":[27339,27409],"source":"\\n<p>A reference to the bind context to use in this binding operation."},{"content":"&lt;/p&gt;\\n","pos":[27410,27416],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A reference to the moniker to the left of the current moniker, if the moniker is part of a composite moniker.","pos":[27519,27633],"source":"\\n<p>A reference to the moniker to the left of the current moniker, if the moniker is part of a composite moniker."},{"content":"&lt;/p&gt;\\n","pos":[27634,27640],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;When this method returns, contains the time of the last change.","pos":[27743,27811],"source":"\\n<p>When this method returns, contains the time of the last change."},{"content":"This parameter is passed uninitialized.&lt;/p&gt;\\n","pos":[27812,27857],"source":" This parameter is passed uninitialized.</p>\\n"},{"pos":[28609,28624],"content":"Hash(out Int32)","needQuote":true,"nodes":[{"content":"Hash(out Int32)","pos":[0,15]}]},{"content":"\\n&lt;p&gt;When this method returns, contains the hash value for this moniker.","pos":[29383,29455],"source":"\\n<p>When this method returns, contains the hash value for this moniker."},{"content":"This parameter is passed uninitialized.&lt;/p&gt;\\n","pos":[29456,29501],"source":" This parameter is passed uninitialized.</p>\\n"},{"pos":[30105,30126],"content":"Inverse(out IMoniker)","needQuote":true,"nodes":[{"content":"Inverse(out IMoniker)","pos":[0,21]}]},{"content":"\\n&lt;p&gt;When this method returns, contains a moniker that is the inverse of the current moniker.","pos":[31022,31115],"source":"\\n<p>When this method returns, contains a moniker that is the inverse of the current moniker."},{"content":"This parameter is passed uninitialized.&lt;/p&gt;\\n","pos":[31116,31161],"source":" This parameter is passed uninitialized.</p>\\n"},{"pos":[31669,31678],"content":"IsDirty()","needQuote":true,"nodes":[{"content":"IsDirty()","pos":[0,9]}]},{"content":"\\n&lt;p&gt;An &lt;strong&gt;S_OK&lt;/strong&gt;&lt;strong&gt;HRESULT&lt;/strong&gt; value if the object has changed; otherwise, an &lt;strong&gt;S_FALSE&lt;/strong&gt;&lt;strong&gt;HRESULT&lt;/strong&gt; value.&lt;/p&gt;\\n","pos":[32431,32593],"source":"\\n<p>An <strong>S_OK</strong><strong>HRESULT</strong> value if the object has changed; otherwise, an <strong>S_FALSE</strong><strong>HRESULT</strong> value.</p>\\n"},{"pos":[33024,33041],"content":"IsEqual(IMoniker)","needQuote":true,"nodes":[{"content":"IsEqual(IMoniker)","pos":[0,17]}]},{"content":"\\n&lt;p&gt;A reference to the moniker to use for comparison.","pos":[34002,34056],"source":"\\n<p>A reference to the moniker to use for comparison."},{"content":"&lt;/p&gt;\\n","pos":[34057,34063],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An &lt;strong&gt;S_OK&lt;/strong&gt;&lt;strong&gt;HRESULT&lt;/strong&gt; value if the monikers are identical; otherwise, an &lt;strong&gt;S_FALSE&lt;/strong&gt;&lt;strong&gt;HRESULT&lt;/strong&gt; value.","pos":[34122,34282],"source":"\\n<p>An <strong>S_OK</strong><strong>HRESULT</strong> value if the monikers are identical; otherwise, an <strong>S_FALSE</strong><strong>HRESULT</strong> value."},{"content":"&lt;/p&gt;\\n","pos":[34284,34290],"source":"  </p>\\n"},{"pos":[35029,35068],"content":"IsRunning(IBindCtx, IMoniker, IMoniker)","needQuote":true,"nodes":[{"content":"IsRunning(IBindCtx, IMoniker, IMoniker)","pos":[0,39]}]},{"content":"\\n&lt;p&gt;A reference to the bind context to use in this binding operation.","pos":[36208,36278],"source":"\\n<p>A reference to the bind context to use in this binding operation."},{"content":"&lt;/p&gt;\\n","pos":[36279,36285],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A reference to the moniker to the left of the current moniker if the current moniker is part of a composite.","pos":[36388,36501],"source":"\\n<p>A reference to the moniker to the left of the current moniker if the current moniker is part of a composite."},{"content":"&lt;/p&gt;\\n","pos":[36502,36508],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A reference to the moniker most recently added to the Running Object Table (ROT).","pos":[36617,36703],"source":"\\n<p>A reference to the moniker most recently added to the Running Object Table (ROT)."},{"content":"&lt;/p&gt;\\n","pos":[36704,36710],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An &lt;strong&gt;S_OK&lt;/strong&gt;&lt;strong&gt;HRESULT&lt;/strong&gt; value if the moniker is running; an &lt;strong&gt;S_FALSE&lt;/strong&gt;&lt;strong&gt;HRESULT&lt;/strong&gt; value if the moniker is not running; or an &lt;strong&gt;E_UNEXPECTED&lt;/strong&gt;&lt;strong&gt;HRESULT&lt;/strong&gt; value.&lt;/p&gt;\\n","pos":[36769,37017],"source":"\\n<p>An <strong>S_OK</strong><strong>HRESULT</strong> value if the moniker is running; an <strong>S_FALSE</strong><strong>HRESULT</strong> value if the moniker is not running; or an <strong>E_UNEXPECTED</strong><strong>HRESULT</strong> value.</p>\\n"},{"pos":[37397,37423],"content":"IsSystemMoniker(out Int32)","needQuote":true,"nodes":[{"content":"IsSystemMoniker(out Int32)","pos":[0,26]}]},{"content":"\\n&lt;p&gt;When this method returns, contains a pointer to an integer that is one of the values from the &lt;strong&gt;MKSYS&lt;/strong&gt; enumeration, and refers to one of the COM moniker classes.","pos":[38316,38496],"source":"\\n<p>When this method returns, contains a pointer to an integer that is one of the values from the <strong>MKSYS</strong> enumeration, and refers to one of the COM moniker classes."},{"content":"This parameter is passed uninitialized.&lt;/p&gt;\\n","pos":[38497,38542],"source":" This parameter is passed uninitialized.</p>\\n"},{"content":"\\n&lt;p&gt;An &lt;strong&gt;S_OK&lt;/strong&gt;&lt;strong&gt;HRESULT&lt;/strong&gt; value if the moniker is a system moniker; otherwise, an &lt;strong&gt;S_FALSE&lt;/strong&gt;&lt;strong&gt;HRESULT&lt;/strong&gt; value.&lt;/p&gt;\\n","pos":[38601,38772],"source":"\\n<p>An <strong>S_OK</strong><strong>HRESULT</strong> value if the moniker is a system moniker; otherwise, an <strong>S_FALSE</strong><strong>HRESULT</strong> value.</p>\\n"},{"pos":[39405,39418],"content":"Load(IStream)","needQuote":true,"nodes":[{"content":"Load(IStream)","pos":[0,13]}]},{"content":"\\n&lt;p&gt;The stream that the object is loaded from.","pos":[40228,40275],"source":"\\n<p>The stream that the object is loaded from."},{"content":"&lt;/p&gt;\\n","pos":[40276,40282],"source":" </p>\\n"},{"pos":[41125,41194],"content":"ParseDisplayName(IBindCtx, IMoniker, String, out Int32, out IMoniker)","needQuote":true,"nodes":[{"content":"ParseDisplayName(IBindCtx, IMoniker, String, out Int32, out IMoniker)","pos":[0,69]}]},{"content":"\\n&lt;p&gt;A reference to the bind context to use in this binding operation.","pos":[42774,42844],"source":"\\n<p>A reference to the bind context to use in this binding operation."},{"content":"&lt;/p&gt;\\n","pos":[42845,42851],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A reference to the moniker that has been built from the display name up to this point.","pos":[42954,43045],"source":"\\n<p>A reference to the moniker that has been built from the display name up to this point."},{"content":"&lt;/p&gt;\\n","pos":[43046,43052],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A reference to the string containing the remaining display name to parse.","pos":[43125,43203],"source":"\\n<p>A reference to the string containing the remaining display name to parse."},{"content":"&lt;/p&gt;\\n","pos":[43204,43210],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;When this method returns, contains the number of characters that were consumed in parsing &lt;em&gt;pszDisplayName&lt;/em&gt;.","pos":[43574,43693],"source":"\\n<p>When this method returns, contains the number of characters that were consumed in parsing <em>pszDisplayName</em>."},{"content":"This parameter is passed uninitialized.&lt;/p&gt;\\n","pos":[43694,43739],"source":" This parameter is passed uninitialized.</p>\\n"},{"content":"\\n&lt;p&gt;When this method returns, contains a reference to the moniker that was built from &lt;em&gt;pszDisplayName&lt;/em&gt;.","pos":[43840,43951],"source":"\\n<p>When this method returns, contains a reference to the moniker that was built from <em>pszDisplayName</em>."},{"content":"This parameter is passed uninitialized.&lt;/p&gt;\\n","pos":[43952,43997],"source":" This parameter is passed uninitialized.</p>\\n"},{"pos":[45283,45334],"content":"Reduce(IBindCtx, Int32, ref IMoniker, out IMoniker)","needQuote":true,"nodes":[{"content":"Reduce(IBindCtx, Int32, ref IMoniker, out IMoniker)","pos":[0,51]}]},{"content":"\\n&lt;p&gt;A reference to the &lt;strong&gt;IBindCtx&lt;/strong&gt; interface on the bind context to use in this binding operation.","pos":[46522,46635],"source":"\\n<p>A reference to the <strong>IBindCtx</strong> interface on the bind context to use in this binding operation."},{"content":"&lt;/p&gt;\\n","pos":[46636,46642],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A value that specifies how far the current moniker should be reduced.","pos":[46714,46788],"source":"\\n<p>A value that specifies how far the current moniker should be reduced."},{"content":"&lt;/p&gt;\\n","pos":[46789,46795],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A reference to the moniker to the left of the current moniker.","pos":[46899,46966],"source":"\\n<p>A reference to the moniker to the left of the current moniker."},{"content":"&lt;/p&gt;\\n","pos":[46967,46973],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;When this method returns, contains a reference to the reduced form of the current moniker, which can be &lt;strong&gt;null&lt;/strong&gt; if an error occurs or if the current moniker is reduced to nothing.","pos":[47078,47276],"source":"\\n<p>When this method returns, contains a reference to the reduced form of the current moniker, which can be <strong>null</strong> if an error occurs or if the current moniker is reduced to nothing."},{"content":"This parameter is passed uninitialized.&lt;/p&gt;\\n","pos":[47277,47322],"source":" This parameter is passed uninitialized.</p>\\n"},{"pos":[48364,48402],"content":"RelativePathTo(IMoniker, out IMoniker)","needQuote":true,"nodes":[{"content":"RelativePathTo(IMoniker, out IMoniker)","pos":[0,38]}]},{"content":"\\n&lt;p&gt;A reference to the moniker to which a relative path should be taken.","pos":[49437,49510],"source":"\\n<p>A reference to the moniker to which a relative path should be taken."},{"content":"&lt;/p&gt;\\n","pos":[49511,49517],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;When this method returns, contains a reference to the relative moniker.","pos":[49622,49698],"source":"\\n<p>When this method returns, contains a reference to the relative moniker."},{"content":"This parameter is passed uninitialized.&lt;/p&gt;\\n","pos":[49699,49744],"source":" This parameter is passed uninitialized.</p>\\n"},{"pos":[50543,50565],"content":"Save(IStream, Boolean)","needQuote":true,"nodes":[{"content":"Save(IStream, Boolean)","pos":[0,22]}]},{"content":"\\n&lt;p&gt;The stream to which the object is saved.","pos":[51437,51482],"source":"\\n<p>The stream to which the object is saved."},{"content":"&lt;/p&gt;\\n","pos":[51483,51489],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to clear the modified flag after the save is complete; otherwise &lt;strong&gt;false&lt;/strong&gt;&lt;/p&gt;\\n","pos":[51560,51682],"source":"\\n<p>\\n<strong>true</strong> to clear the modified flag after the save is complete; otherwise <strong>false</strong></p>\\n"},{"pos":[52116,52155],"content":"System.Runtime.InteropServices.ComTypes","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices.ComTypes","pos":[0,39]}]},{"pos":[52453,52461],"content":"IBindCtx","needQuote":true,"nodes":[{"content":"IBindCtx","pos":[0,8]}]},{"pos":[52746,52754],"content":"IMoniker","needQuote":true,"nodes":[{"content":"IMoniker","pos":[0,8]}]},{"pos":[52969,52973],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[53112,53118],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[53239,53245],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[53377,53384],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[53604,53616],"content":"IEnumMoniker","needQuote":true,"nodes":[{"content":"IEnumMoniker","pos":[0,12]}]},{"pos":[53845,53851],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[53995,54000],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[54210,54218],"content":"FILETIME","needQuote":true,"nodes":[{"content":"FILETIME","pos":[0,8]}]},{"pos":[54434,54439],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[54648,54655],"content":"IStream","needQuote":true,"nodes":[{"content":"IStream","pos":[0,7]}]}],"content":"items:\n- uid: System.Runtime.InteropServices.ComTypes.IMoniker\n  commentId: T:System.Runtime.InteropServices.ComTypes.IMoniker\n  id: IMoniker\n  parent: System.Runtime.InteropServices.ComTypes\n  children:\n  - System.Runtime.InteropServices.ComTypes.IMoniker.BindToObject(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.Guid@,System.Object@)\n  - System.Runtime.InteropServices.ComTypes.IMoniker.BindToStorage(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.Guid@,System.Object@)\n  - System.Runtime.InteropServices.ComTypes.IMoniker.CommonPrefixWith(System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.IMoniker@)\n  - System.Runtime.InteropServices.ComTypes.IMoniker.ComposeWith(System.Runtime.InteropServices.ComTypes.IMoniker,System.Boolean,System.Runtime.InteropServices.ComTypes.IMoniker@)\n  - System.Runtime.InteropServices.ComTypes.IMoniker.Enum(System.Boolean,System.Runtime.InteropServices.ComTypes.IEnumMoniker@)\n  - System.Runtime.InteropServices.ComTypes.IMoniker.GetClassID(System.Guid@)\n  - System.Runtime.InteropServices.ComTypes.IMoniker.GetDisplayName(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.String@)\n  - System.Runtime.InteropServices.ComTypes.IMoniker.GetSizeMax(System.Int64@)\n  - System.Runtime.InteropServices.ComTypes.IMoniker.GetTimeOfLastChange(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.FILETIME@)\n  - System.Runtime.InteropServices.ComTypes.IMoniker.Hash(System.Int32@)\n  - System.Runtime.InteropServices.ComTypes.IMoniker.Inverse(System.Runtime.InteropServices.ComTypes.IMoniker@)\n  - System.Runtime.InteropServices.ComTypes.IMoniker.IsDirty\n  - System.Runtime.InteropServices.ComTypes.IMoniker.IsEqual(System.Runtime.InteropServices.ComTypes.IMoniker)\n  - System.Runtime.InteropServices.ComTypes.IMoniker.IsRunning(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.IMoniker)\n  - System.Runtime.InteropServices.ComTypes.IMoniker.IsSystemMoniker(System.Int32@)\n  - System.Runtime.InteropServices.ComTypes.IMoniker.Load(System.Runtime.InteropServices.ComTypes.IStream)\n  - System.Runtime.InteropServices.ComTypes.IMoniker.ParseDisplayName(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.String,System.Int32@,System.Runtime.InteropServices.ComTypes.IMoniker@)\n  - System.Runtime.InteropServices.ComTypes.IMoniker.Reduce(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Int32,System.Runtime.InteropServices.ComTypes.IMoniker@,System.Runtime.InteropServices.ComTypes.IMoniker@)\n  - System.Runtime.InteropServices.ComTypes.IMoniker.RelativePathTo(System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.IMoniker@)\n  - System.Runtime.InteropServices.ComTypes.IMoniker.Save(System.Runtime.InteropServices.ComTypes.IStream,System.Boolean)\n  langs:\n  - csharp\n  - vb\n  name: IMoniker\n  fullName: System.Runtime.InteropServices.ComTypes.IMoniker\n  type: Interface\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: IMoniker\n    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs\n    startLine: 25\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Provides the managed definition of the <strong>IMoniker</strong> interface, with COM functionality from <strong>IPersist</strong> and <strong>IPersistStream</strong>.</p>\\n\"\n  syntax:\n    content: >-\n      [Guid(\"0000000f-0000-0000-C000-000000000046\")]\n\n      [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]\n\n      [ComImport]\n\n      public interface IMoniker\n    content.vb: >-\n      <Guid(\"0000000f-0000-0000-C000-000000000046\")>\n\n      <InterfaceType(ComInterfaceType.InterfaceIsIUnknown)>\n\n      <ComImport>\n\n      Public Interface IMoniker\n  attributes:\n  - type: System.Runtime.InteropServices.InterfaceTypeAttribute\n    ctor: System.Runtime.InteropServices.InterfaceTypeAttribute.#ctor(System.Runtime.InteropServices.ComInterfaceType)\n    arguments:\n    - type: System.Runtime.InteropServices.ComInterfaceType\n      value: 1\n  modifiers.csharp:\n  - public\n  - interface\n  modifiers.vb:\n  - Public\n  - Interface\n  nameWithType: IMoniker\n- uid: System.Runtime.InteropServices.ComTypes.IMoniker.BindToObject(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.Guid@,System.Object@)\n  commentId: M:System.Runtime.InteropServices.ComTypes.IMoniker.BindToObject(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.Guid@,System.Object@)\n  id: BindToObject(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.Guid@,System.Object@)\n  parent: System.Runtime.InteropServices.ComTypes.IMoniker\n  langs:\n  - csharp\n  - vb\n  name: BindToObject(IBindCtx, IMoniker, ref Guid, out Object)\n  fullName: System.Runtime.InteropServices.ComTypes.IMoniker.BindToObject(System.Runtime.InteropServices.ComTypes.IBindCtx, System.Runtime.InteropServices.ComTypes.IMoniker, ref System.Guid, out System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: BindToObject\n    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs\n    startLine: 41\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Uses the moniker to bind to the object that it identifies.</p>\\n\"\n  syntax:\n    content: void BindToObject(IBindCtx pbc, IMoniker pmkToLeft, [In] ref Guid riidResult, [MarshalAs(UnmanagedType.Interface)] out object ppvResult)\n    content.vb: Sub BindToObject(pbc As IBindCtx, pmkToLeft As IMoniker, ByRef riidResult As Guid, ByRef ppvResult As Object)\n    parameters:\n    - id: pbc\n      type: System.Runtime.InteropServices.ComTypes.IBindCtx\n      description: \"\\n<p>A reference to the <strong>IBindCtx</strong> interface on the bind context object used in this binding operation. </p>\\n\"\n    - id: pmkToLeft\n      type: System.Runtime.InteropServices.ComTypes.IMoniker\n      description: \"\\n<p>A reference to the moniker to the left of the current moniker, if the moniker is part of a composite moniker. </p>\\n\"\n    - id: riidResult\n      type: System.Guid\n      description: \"\\n<p>The interface identifier (IID) of the interface that the client intends to use to communicate with the object that the moniker identifies. </p>\\n\"\n      attributes:\n      - type: System.Runtime.InteropServices.InAttribute\n        ctor: System.Runtime.InteropServices.InAttribute.#ctor\n        arguments: []\n    - id: ppvResult\n      type: System.Object\n      description: \"\\n<p>When this method returns, contains a reference to the interface requested by <em>riidResult</em>. This parameter is passed uninitialized.</p>\\n\"\n      attributes:\n      - type: System.Runtime.InteropServices.MarshalAsAttribute\n        ctor: System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Runtime.InteropServices.UnmanagedType)\n        arguments:\n        - type: System.Runtime.InteropServices.UnmanagedType\n          value: 28\n  fullName.vb: System.Runtime.InteropServices.ComTypes.IMoniker.BindToObject(System.Runtime.InteropServices.ComTypes.IBindCtx, System.Runtime.InteropServices.ComTypes.IMoniker, ByRef System.Guid, ByRef System.Object)\n  name.vb: BindToObject(IBindCtx, IMoniker, ByRef Guid, ByRef Object)\n  nameWithType: IMoniker.BindToObject(IBindCtx, IMoniker, ref Guid, out Object)\n  nameWithType.vb: IMoniker.BindToObject(IBindCtx, IMoniker, ByRef Guid, ByRef Object)\n- uid: System.Runtime.InteropServices.ComTypes.IMoniker.BindToStorage(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.Guid@,System.Object@)\n  commentId: M:System.Runtime.InteropServices.ComTypes.IMoniker.BindToStorage(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.Guid@,System.Object@)\n  id: BindToStorage(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.Guid@,System.Object@)\n  parent: System.Runtime.InteropServices.ComTypes.IMoniker\n  langs:\n  - csharp\n  - vb\n  name: BindToStorage(IBindCtx, IMoniker, ref Guid, out Object)\n  fullName: System.Runtime.InteropServices.ComTypes.IMoniker.BindToStorage(System.Runtime.InteropServices.ComTypes.IBindCtx, System.Runtime.InteropServices.ComTypes.IMoniker, ref System.Guid, out System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: BindToStorage\n    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs\n    startLine: 42\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Retrieves an interface pointer to the storage that contains the object identified by the moniker.</p>\\n\"\n  syntax:\n    content: void BindToStorage(IBindCtx pbc, IMoniker pmkToLeft, [In] ref Guid riid, [MarshalAs(UnmanagedType.Interface)] out object ppvObj)\n    content.vb: Sub BindToStorage(pbc As IBindCtx, pmkToLeft As IMoniker, ByRef riid As Guid, ByRef ppvObj As Object)\n    parameters:\n    - id: pbc\n      type: System.Runtime.InteropServices.ComTypes.IBindCtx\n      description: \"\\n<p>A reference to the <strong>IBindCtx</strong> interface on the bind context object used during this binding operation. </p>\\n\"\n    - id: pmkToLeft\n      type: System.Runtime.InteropServices.ComTypes.IMoniker\n      description: \"\\n<p>A reference to the moniker to the left of the current moniker, if the moniker is part of a composite moniker. </p>\\n\"\n    - id: riid\n      type: System.Guid\n      description: \"\\n<p>The interface identifier (IID) of the storage interface requested. </p>\\n\"\n      attributes:\n      - type: System.Runtime.InteropServices.InAttribute\n        ctor: System.Runtime.InteropServices.InAttribute.#ctor\n        arguments: []\n    - id: ppvObj\n      type: System.Object\n      description: \"\\n<p>When this method returns, contains a reference to the interface requested by <em>riid</em>. This parameter is passed uninitialized.</p>\\n\"\n      attributes:\n      - type: System.Runtime.InteropServices.MarshalAsAttribute\n        ctor: System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Runtime.InteropServices.UnmanagedType)\n        arguments:\n        - type: System.Runtime.InteropServices.UnmanagedType\n          value: 28\n  fullName.vb: System.Runtime.InteropServices.ComTypes.IMoniker.BindToStorage(System.Runtime.InteropServices.ComTypes.IBindCtx, System.Runtime.InteropServices.ComTypes.IMoniker, ByRef System.Guid, ByRef System.Object)\n  name.vb: BindToStorage(IBindCtx, IMoniker, ByRef Guid, ByRef Object)\n  nameWithType: IMoniker.BindToStorage(IBindCtx, IMoniker, ref Guid, out Object)\n  nameWithType.vb: IMoniker.BindToStorage(IBindCtx, IMoniker, ByRef Guid, ByRef Object)\n- uid: System.Runtime.InteropServices.ComTypes.IMoniker.CommonPrefixWith(System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.IMoniker@)\n  commentId: M:System.Runtime.InteropServices.ComTypes.IMoniker.CommonPrefixWith(System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.IMoniker@)\n  id: CommonPrefixWith(System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.IMoniker@)\n  parent: System.Runtime.InteropServices.ComTypes.IMoniker\n  langs:\n  - csharp\n  - vb\n  name: CommonPrefixWith(IMoniker, out IMoniker)\n  fullName: System.Runtime.InteropServices.ComTypes.IMoniker.CommonPrefixWith(System.Runtime.InteropServices.ComTypes.IMoniker, out System.Runtime.InteropServices.ComTypes.IMoniker)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: CommonPrefixWith\n    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs\n    startLine: 53\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Creates a new moniker based on the common prefix that this moniker shares with another moniker.</p>\\n\"\n  syntax:\n    content: void CommonPrefixWith(IMoniker pmkOther, out IMoniker ppmkPrefix)\n    content.vb: Sub CommonPrefixWith(pmkOther As IMoniker, ByRef ppmkPrefix As IMoniker)\n    parameters:\n    - id: pmkOther\n      type: System.Runtime.InteropServices.ComTypes.IMoniker\n      description: \"\\n<p>A reference to the <strong>IMoniker</strong> interface on another moniker to compare with the current moniker for a common prefix. </p>\\n\"\n    - id: ppmkPrefix\n      type: System.Runtime.InteropServices.ComTypes.IMoniker\n      description: \"\\n<p>When this method returns, contains the moniker that is the common prefix of the current moniker and <em>pmkOther</em>. This parameter is passed uninitialized.</p>\\n\"\n  fullName.vb: System.Runtime.InteropServices.ComTypes.IMoniker.CommonPrefixWith(System.Runtime.InteropServices.ComTypes.IMoniker, ByRef System.Runtime.InteropServices.ComTypes.IMoniker)\n  name.vb: CommonPrefixWith(IMoniker, ByRef IMoniker)\n  nameWithType: IMoniker.CommonPrefixWith(IMoniker, out IMoniker)\n  nameWithType.vb: IMoniker.CommonPrefixWith(IMoniker, ByRef IMoniker)\n- uid: System.Runtime.InteropServices.ComTypes.IMoniker.ComposeWith(System.Runtime.InteropServices.ComTypes.IMoniker,System.Boolean,System.Runtime.InteropServices.ComTypes.IMoniker@)\n  commentId: M:System.Runtime.InteropServices.ComTypes.IMoniker.ComposeWith(System.Runtime.InteropServices.ComTypes.IMoniker,System.Boolean,System.Runtime.InteropServices.ComTypes.IMoniker@)\n  id: ComposeWith(System.Runtime.InteropServices.ComTypes.IMoniker,System.Boolean,System.Runtime.InteropServices.ComTypes.IMoniker@)\n  parent: System.Runtime.InteropServices.ComTypes.IMoniker\n  langs:\n  - csharp\n  - vb\n  name: ComposeWith(IMoniker, Boolean, out IMoniker)\n  fullName: System.Runtime.InteropServices.ComTypes.IMoniker.ComposeWith(System.Runtime.InteropServices.ComTypes.IMoniker, System.Boolean, out System.Runtime.InteropServices.ComTypes.IMoniker)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ComposeWith\n    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs\n    startLine: 44\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Combines the current moniker with another moniker, creating a new composite moniker.</p>\\n\"\n  syntax:\n    content: void ComposeWith(IMoniker pmkRight, [MarshalAs(UnmanagedType.Bool)] bool fOnlyIfNotGeneric, out IMoniker ppmkComposite)\n    content.vb: Sub ComposeWith(pmkRight As IMoniker, fOnlyIfNotGeneric As Boolean, ByRef ppmkComposite As IMoniker)\n    parameters:\n    - id: pmkRight\n      type: System.Runtime.InteropServices.ComTypes.IMoniker\n      description: \"\\n<p>A reference to the <strong>IMoniker</strong> interface on a moniker to append to the end of the current moniker. </p>\\n\"\n    - id: fOnlyIfNotGeneric\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to indicate that the caller requires a nongeneric composition. The operation proceeds only if <em>pmkRight</em> is a moniker class that the current moniker can combine with in some way other than forming a generic composite. <strong>false</strong> to indicate that the method can create a generic composite if necessary. </p>\\n\"\n      attributes:\n      - type: System.Runtime.InteropServices.MarshalAsAttribute\n        ctor: System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Runtime.InteropServices.UnmanagedType)\n        arguments:\n        - type: System.Runtime.InteropServices.UnmanagedType\n          value: 2\n    - id: ppmkComposite\n      type: System.Runtime.InteropServices.ComTypes.IMoniker\n      description: \"\\n<p>When this method returns, contains a reference to the resulting composite moniker. This parameter is passed uninitialized.</p>\\n\"\n  fullName.vb: System.Runtime.InteropServices.ComTypes.IMoniker.ComposeWith(System.Runtime.InteropServices.ComTypes.IMoniker, System.Boolean, ByRef System.Runtime.InteropServices.ComTypes.IMoniker)\n  name.vb: ComposeWith(IMoniker, Boolean, ByRef IMoniker)\n  nameWithType: IMoniker.ComposeWith(IMoniker, Boolean, out IMoniker)\n  nameWithType.vb: IMoniker.ComposeWith(IMoniker, Boolean, ByRef IMoniker)\n- uid: System.Runtime.InteropServices.ComTypes.IMoniker.Enum(System.Boolean,System.Runtime.InteropServices.ComTypes.IEnumMoniker@)\n  commentId: M:System.Runtime.InteropServices.ComTypes.IMoniker.Enum(System.Boolean,System.Runtime.InteropServices.ComTypes.IEnumMoniker@)\n  id: Enum(System.Boolean,System.Runtime.InteropServices.ComTypes.IEnumMoniker@)\n  parent: System.Runtime.InteropServices.ComTypes.IMoniker\n  langs:\n  - csharp\n  - vb\n  name: Enum(Boolean, out IEnumMoniker)\n  fullName: System.Runtime.InteropServices.ComTypes.IMoniker.Enum(System.Boolean, out System.Runtime.InteropServices.ComTypes.IEnumMoniker)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Enum\n    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs\n    startLine: 45\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Supplies a pointer to an enumerator that can enumerate the components of a composite moniker.</p>\\n\"\n  syntax:\n    content: void Enum([MarshalAs(UnmanagedType.Bool)] bool fForward, out IEnumMoniker ppenumMoniker)\n    content.vb: Sub Enum(fForward As Boolean, ByRef ppenumMoniker As IEnumMoniker)\n    parameters:\n    - id: fForward\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to enumerate the monikers from left to right. <strong>false</strong> to enumerate from right to left. </p>\\n\"\n      attributes:\n      - type: System.Runtime.InteropServices.MarshalAsAttribute\n        ctor: System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Runtime.InteropServices.UnmanagedType)\n        arguments:\n        - type: System.Runtime.InteropServices.UnmanagedType\n          value: 2\n    - id: ppenumMoniker\n      type: System.Runtime.InteropServices.ComTypes.IEnumMoniker\n      description: \"\\n<p>When this method returns, contains a reference to the enumerator object for the moniker. This parameter is passed uninitialized.</p>\\n\"\n  fullName.vb: System.Runtime.InteropServices.ComTypes.IMoniker.Enum(System.Boolean, ByRef System.Runtime.InteropServices.ComTypes.IEnumMoniker)\n  name.vb: Enum(Boolean, ByRef IEnumMoniker)\n  nameWithType: IMoniker.Enum(Boolean, out IEnumMoniker)\n  nameWithType.vb: IMoniker.Enum(Boolean, ByRef IEnumMoniker)\n- uid: System.Runtime.InteropServices.ComTypes.IMoniker.GetClassID(System.Guid@)\n  commentId: M:System.Runtime.InteropServices.ComTypes.IMoniker.GetClassID(System.Guid@)\n  id: GetClassID(System.Guid@)\n  parent: System.Runtime.InteropServices.ComTypes.IMoniker\n  langs:\n  - csharp\n  - vb\n  name: GetClassID(out Guid)\n  fullName: System.Runtime.InteropServices.ComTypes.IMoniker.GetClassID(out System.Guid)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetClassID\n    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs\n    startLine: 31\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Retrieves the class identifier (CLSID) of an object.</p>\\n\"\n  syntax:\n    content: void GetClassID(out Guid pClassID)\n    content.vb: Sub GetClassID(ByRef pClassID As Guid)\n    parameters:\n    - id: pClassID\n      type: System.Guid\n      description: \"\\n<p>When this method returns, contains the CLSID. This parameter is passed uninitialized.</p>\\n\"\n  fullName.vb: System.Runtime.InteropServices.ComTypes.IMoniker.GetClassID(ByRef System.Guid)\n  name.vb: GetClassID(ByRef Guid)\n  nameWithType: IMoniker.GetClassID(out Guid)\n  nameWithType.vb: IMoniker.GetClassID(ByRef Guid)\n- uid: System.Runtime.InteropServices.ComTypes.IMoniker.GetDisplayName(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.String@)\n  commentId: M:System.Runtime.InteropServices.ComTypes.IMoniker.GetDisplayName(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.String@)\n  id: GetDisplayName(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.String@)\n  parent: System.Runtime.InteropServices.ComTypes.IMoniker\n  langs:\n  - csharp\n  - vb\n  name: GetDisplayName(IBindCtx, IMoniker, out String)\n  fullName: System.Runtime.InteropServices.ComTypes.IMoniker.GetDisplayName(System.Runtime.InteropServices.ComTypes.IBindCtx, System.Runtime.InteropServices.ComTypes.IMoniker, out System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetDisplayName\n    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs\n    startLine: 55\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Gets the display name, which is a user-readable representation of the current moniker.</p>\\n\"\n  syntax:\n    content: void GetDisplayName(IBindCtx pbc, IMoniker pmkToLeft, [MarshalAs(UnmanagedType.LPWStr)] out string ppszDisplayName)\n    content.vb: Sub GetDisplayName(pbc As IBindCtx, pmkToLeft As IMoniker, ByRef ppszDisplayName As String)\n    parameters:\n    - id: pbc\n      type: System.Runtime.InteropServices.ComTypes.IBindCtx\n      description: \"\\n<p>A reference to the bind context to use in this operation. </p>\\n\"\n    - id: pmkToLeft\n      type: System.Runtime.InteropServices.ComTypes.IMoniker\n      description: \"\\n<p>A reference to the moniker to the left of the current moniker, if the moniker is part of a composite moniker. </p>\\n\"\n    - id: ppszDisplayName\n      type: System.String\n      description: \"\\n<p>When this method returns, contains the display name string. This parameter is passed uninitialized.</p>\\n\"\n      attributes:\n      - type: System.Runtime.InteropServices.MarshalAsAttribute\n        ctor: System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Runtime.InteropServices.UnmanagedType)\n        arguments:\n        - type: System.Runtime.InteropServices.UnmanagedType\n          value: 21\n  fullName.vb: System.Runtime.InteropServices.ComTypes.IMoniker.GetDisplayName(System.Runtime.InteropServices.ComTypes.IBindCtx, System.Runtime.InteropServices.ComTypes.IMoniker, ByRef System.String)\n  name.vb: GetDisplayName(IBindCtx, IMoniker, ByRef String)\n  nameWithType: IMoniker.GetDisplayName(IBindCtx, IMoniker, out String)\n  nameWithType.vb: IMoniker.GetDisplayName(IBindCtx, IMoniker, ByRef String)\n- uid: System.Runtime.InteropServices.ComTypes.IMoniker.GetSizeMax(System.Int64@)\n  commentId: M:System.Runtime.InteropServices.ComTypes.IMoniker.GetSizeMax(System.Int64@)\n  id: GetSizeMax(System.Int64@)\n  parent: System.Runtime.InteropServices.ComTypes.IMoniker\n  langs:\n  - csharp\n  - vb\n  name: GetSizeMax(out Int64)\n  fullName: System.Runtime.InteropServices.ComTypes.IMoniker.GetSizeMax(out System.Int64)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetSizeMax\n    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs\n    startLine: 38\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Returns the size, in bytes, of the stream needed to save the object.</p>\\n\"\n  syntax:\n    content: void GetSizeMax(out long pcbSize)\n    content.vb: Sub GetSizeMax(ByRef pcbSize As Long)\n    parameters:\n    - id: pcbSize\n      type: System.Int64\n      description: \"\\n<p>When this method returns, contains a <strong>long</strong> value indicating the size, in bytes, of the stream needed to save this object. This parameter is passed uninitialized.</p>\\n\"\n  fullName.vb: System.Runtime.InteropServices.ComTypes.IMoniker.GetSizeMax(ByRef System.Int64)\n  name.vb: GetSizeMax(ByRef Int64)\n  nameWithType: IMoniker.GetSizeMax(out Int64)\n  nameWithType.vb: IMoniker.GetSizeMax(ByRef Int64)\n- uid: System.Runtime.InteropServices.ComTypes.IMoniker.GetTimeOfLastChange(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.FILETIME@)\n  commentId: M:System.Runtime.InteropServices.ComTypes.IMoniker.GetTimeOfLastChange(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.FILETIME@)\n  id: GetTimeOfLastChange(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.FILETIME@)\n  parent: System.Runtime.InteropServices.ComTypes.IMoniker\n  langs:\n  - csharp\n  - vb\n  name: GetTimeOfLastChange(IBindCtx, IMoniker, out FILETIME)\n  fullName: System.Runtime.InteropServices.ComTypes.IMoniker.GetTimeOfLastChange(System.Runtime.InteropServices.ComTypes.IBindCtx, System.Runtime.InteropServices.ComTypes.IMoniker, out System.Runtime.InteropServices.ComTypes.FILETIME)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetTimeOfLastChange\n    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs\n    startLine: 51\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Provides a number representing the time that the object identified by the current moniker was last changed.</p>\\n\"\n  syntax:\n    content: void GetTimeOfLastChange(IBindCtx pbc, IMoniker pmkToLeft, out FILETIME pFileTime)\n    content.vb: Sub GetTimeOfLastChange(pbc As IBindCtx, pmkToLeft As IMoniker, ByRef pFileTime As FILETIME)\n    parameters:\n    - id: pbc\n      type: System.Runtime.InteropServices.ComTypes.IBindCtx\n      description: \"\\n<p>A reference to the bind context to use in this binding operation. </p>\\n\"\n    - id: pmkToLeft\n      type: System.Runtime.InteropServices.ComTypes.IMoniker\n      description: \"\\n<p>A reference to the moniker to the left of the current moniker, if the moniker is part of a composite moniker. </p>\\n\"\n    - id: pFileTime\n      type: System.Runtime.InteropServices.ComTypes.FILETIME\n      description: \"\\n<p>When this method returns, contains the time of the last change. This parameter is passed uninitialized.</p>\\n\"\n  fullName.vb: System.Runtime.InteropServices.ComTypes.IMoniker.GetTimeOfLastChange(System.Runtime.InteropServices.ComTypes.IBindCtx, System.Runtime.InteropServices.ComTypes.IMoniker, ByRef System.Runtime.InteropServices.ComTypes.FILETIME)\n  name.vb: GetTimeOfLastChange(IBindCtx, IMoniker, ByRef FILETIME)\n  nameWithType: IMoniker.GetTimeOfLastChange(IBindCtx, IMoniker, out FILETIME)\n  nameWithType.vb: IMoniker.GetTimeOfLastChange(IBindCtx, IMoniker, ByRef FILETIME)\n- uid: System.Runtime.InteropServices.ComTypes.IMoniker.Hash(System.Int32@)\n  commentId: M:System.Runtime.InteropServices.ComTypes.IMoniker.Hash(System.Int32@)\n  id: Hash(System.Int32@)\n  parent: System.Runtime.InteropServices.ComTypes.IMoniker\n  langs:\n  - csharp\n  - vb\n  name: Hash(out Int32)\n  fullName: System.Runtime.InteropServices.ComTypes.IMoniker.Hash(out System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Hash\n    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs\n    startLine: 48\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Calculates a 32-bit integer using the internal state of the moniker.</p>\\n\"\n  syntax:\n    content: void Hash(out int pdwHash)\n    content.vb: Sub Hash(ByRef pdwHash As Integer)\n    parameters:\n    - id: pdwHash\n      type: System.Int32\n      description: \"\\n<p>When this method returns, contains the hash value for this moniker. This parameter is passed uninitialized.</p>\\n\"\n  fullName.vb: System.Runtime.InteropServices.ComTypes.IMoniker.Hash(ByRef System.Int32)\n  name.vb: Hash(ByRef Int32)\n  nameWithType: IMoniker.Hash(out Int32)\n  nameWithType.vb: IMoniker.Hash(ByRef Int32)\n- uid: System.Runtime.InteropServices.ComTypes.IMoniker.Inverse(System.Runtime.InteropServices.ComTypes.IMoniker@)\n  commentId: M:System.Runtime.InteropServices.ComTypes.IMoniker.Inverse(System.Runtime.InteropServices.ComTypes.IMoniker@)\n  id: Inverse(System.Runtime.InteropServices.ComTypes.IMoniker@)\n  parent: System.Runtime.InteropServices.ComTypes.IMoniker\n  langs:\n  - csharp\n  - vb\n  name: Inverse(out IMoniker)\n  fullName: System.Runtime.InteropServices.ComTypes.IMoniker.Inverse(out System.Runtime.InteropServices.ComTypes.IMoniker)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Inverse\n    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs\n    startLine: 52\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Provides a moniker that, when composed to the right of the current moniker or one of similar structure, composes to nothing.</p>\\n\"\n  syntax:\n    content: void Inverse(out IMoniker ppmk)\n    content.vb: Sub Inverse(ByRef ppmk As IMoniker)\n    parameters:\n    - id: ppmk\n      type: System.Runtime.InteropServices.ComTypes.IMoniker\n      description: \"\\n<p>When this method returns, contains a moniker that is the inverse of the current moniker. This parameter is passed uninitialized.</p>\\n\"\n  fullName.vb: System.Runtime.InteropServices.ComTypes.IMoniker.Inverse(ByRef System.Runtime.InteropServices.ComTypes.IMoniker)\n  name.vb: Inverse(ByRef IMoniker)\n  nameWithType: IMoniker.Inverse(out IMoniker)\n  nameWithType.vb: IMoniker.Inverse(ByRef IMoniker)\n- uid: System.Runtime.InteropServices.ComTypes.IMoniker.IsDirty\n  commentId: M:System.Runtime.InteropServices.ComTypes.IMoniker.IsDirty\n  id: IsDirty\n  parent: System.Runtime.InteropServices.ComTypes.IMoniker\n  langs:\n  - csharp\n  - vb\n  name: IsDirty()\n  fullName: System.Runtime.InteropServices.ComTypes.IMoniker.IsDirty()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: IsDirty\n    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs\n    startLine: 34\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Checks the object for changes since it was last saved.</p>\\n\"\n  syntax:\n    content: >-\n      [PreserveSig]\n\n      int IsDirty()\n    content.vb: >-\n      <PreserveSig>\n\n      Function IsDirty As Integer\n    return:\n      type: System.Int32\n      description: \"\\n<p>An <strong>S_OK</strong><strong>HRESULT</strong> value if the object has changed; otherwise, an <strong>S_FALSE</strong><strong>HRESULT</strong> value.</p>\\n\"\n  nameWithType: IMoniker.IsDirty()\n- uid: System.Runtime.InteropServices.ComTypes.IMoniker.IsEqual(System.Runtime.InteropServices.ComTypes.IMoniker)\n  commentId: M:System.Runtime.InteropServices.ComTypes.IMoniker.IsEqual(System.Runtime.InteropServices.ComTypes.IMoniker)\n  id: IsEqual(System.Runtime.InteropServices.ComTypes.IMoniker)\n  parent: System.Runtime.InteropServices.ComTypes.IMoniker\n  langs:\n  - csharp\n  - vb\n  name: IsEqual(IMoniker)\n  fullName: System.Runtime.InteropServices.ComTypes.IMoniker.IsEqual(System.Runtime.InteropServices.ComTypes.IMoniker)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: IsEqual\n    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs\n    startLine: 46\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Compares the current moniker with a specified moniker and indicates whether they are identical.</p>\\n\"\n  syntax:\n    content: >-\n      [PreserveSig]\n\n      int IsEqual(IMoniker pmkOtherMoniker)\n    content.vb: >-\n      <PreserveSig>\n\n      Function IsEqual(pmkOtherMoniker As IMoniker) As Integer\n    parameters:\n    - id: pmkOtherMoniker\n      type: System.Runtime.InteropServices.ComTypes.IMoniker\n      description: \"\\n<p>A reference to the moniker to use for comparison. </p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>An <strong>S_OK</strong><strong>HRESULT</strong> value if the monikers are identical; otherwise, an <strong>S_FALSE</strong><strong>HRESULT</strong> value.  </p>\\n\"\n  nameWithType: IMoniker.IsEqual(IMoniker)\n- uid: System.Runtime.InteropServices.ComTypes.IMoniker.IsRunning(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.IMoniker)\n  commentId: M:System.Runtime.InteropServices.ComTypes.IMoniker.IsRunning(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.IMoniker)\n  id: IsRunning(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.IMoniker)\n  parent: System.Runtime.InteropServices.ComTypes.IMoniker\n  langs:\n  - csharp\n  - vb\n  name: IsRunning(IBindCtx, IMoniker, IMoniker)\n  fullName: System.Runtime.InteropServices.ComTypes.IMoniker.IsRunning(System.Runtime.InteropServices.ComTypes.IBindCtx, System.Runtime.InteropServices.ComTypes.IMoniker, System.Runtime.InteropServices.ComTypes.IMoniker)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: IsRunning\n    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs\n    startLine: 49\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Determines whether the object that is identified by the current moniker is currently loaded and running.</p>\\n\"\n  syntax:\n    content: >-\n      [PreserveSig]\n\n      int IsRunning(IBindCtx pbc, IMoniker pmkToLeft, IMoniker pmkNewlyRunning)\n    content.vb: >-\n      <PreserveSig>\n\n      Function IsRunning(pbc As IBindCtx, pmkToLeft As IMoniker, pmkNewlyRunning As IMoniker) As Integer\n    parameters:\n    - id: pbc\n      type: System.Runtime.InteropServices.ComTypes.IBindCtx\n      description: \"\\n<p>A reference to the bind context to use in this binding operation. </p>\\n\"\n    - id: pmkToLeft\n      type: System.Runtime.InteropServices.ComTypes.IMoniker\n      description: \"\\n<p>A reference to the moniker to the left of the current moniker if the current moniker is part of a composite. </p>\\n\"\n    - id: pmkNewlyRunning\n      type: System.Runtime.InteropServices.ComTypes.IMoniker\n      description: \"\\n<p>A reference to the moniker most recently added to the Running Object Table (ROT). </p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>An <strong>S_OK</strong><strong>HRESULT</strong> value if the moniker is running; an <strong>S_FALSE</strong><strong>HRESULT</strong> value if the moniker is not running; or an <strong>E_UNEXPECTED</strong><strong>HRESULT</strong> value.</p>\\n\"\n  nameWithType: IMoniker.IsRunning(IBindCtx, IMoniker, IMoniker)\n- uid: System.Runtime.InteropServices.ComTypes.IMoniker.IsSystemMoniker(System.Int32@)\n  commentId: M:System.Runtime.InteropServices.ComTypes.IMoniker.IsSystemMoniker(System.Int32@)\n  id: IsSystemMoniker(System.Int32@)\n  parent: System.Runtime.InteropServices.ComTypes.IMoniker\n  langs:\n  - csharp\n  - vb\n  name: IsSystemMoniker(out Int32)\n  fullName: System.Runtime.InteropServices.ComTypes.IMoniker.IsSystemMoniker(out System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: IsSystemMoniker\n    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs\n    startLine: 57\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Indicates whether this moniker is of one of the system-supplied moniker classes.</p>\\n\"\n  syntax:\n    content: >-\n      [PreserveSig]\n\n      int IsSystemMoniker(out int pdwMksys)\n    content.vb: >-\n      <PreserveSig>\n\n      Function IsSystemMoniker(ByRef pdwMksys As Integer) As Integer\n    parameters:\n    - id: pdwMksys\n      type: System.Int32\n      description: \"\\n<p>When this method returns, contains a pointer to an integer that is one of the values from the <strong>MKSYS</strong> enumeration, and refers to one of the COM moniker classes. This parameter is passed uninitialized.</p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>An <strong>S_OK</strong><strong>HRESULT</strong> value if the moniker is a system moniker; otherwise, an <strong>S_FALSE</strong><strong>HRESULT</strong> value.</p>\\n\"\n  fullName.vb: System.Runtime.InteropServices.ComTypes.IMoniker.IsSystemMoniker(ByRef System.Int32)\n  name.vb: IsSystemMoniker(ByRef Int32)\n  nameWithType: IMoniker.IsSystemMoniker(out Int32)\n  nameWithType.vb: IMoniker.IsSystemMoniker(ByRef Int32)\n- uid: System.Runtime.InteropServices.ComTypes.IMoniker.Load(System.Runtime.InteropServices.ComTypes.IStream)\n  commentId: M:System.Runtime.InteropServices.ComTypes.IMoniker.Load(System.Runtime.InteropServices.ComTypes.IStream)\n  id: Load(System.Runtime.InteropServices.ComTypes.IStream)\n  parent: System.Runtime.InteropServices.ComTypes.IMoniker\n  langs:\n  - csharp\n  - vb\n  name: Load(IStream)\n  fullName: System.Runtime.InteropServices.ComTypes.IMoniker.Load(System.Runtime.InteropServices.ComTypes.IStream)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Load\n    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs\n    startLine: 36\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Initializes an object from the stream where it was previously saved.</p>\\n\"\n  syntax:\n    content: void Load(IStream pStm)\n    content.vb: Sub Load(pStm As IStream)\n    parameters:\n    - id: pStm\n      type: System.Runtime.InteropServices.ComTypes.IStream\n      description: \"\\n<p>The stream that the object is loaded from. </p>\\n\"\n  nameWithType: IMoniker.Load(IStream)\n- uid: System.Runtime.InteropServices.ComTypes.IMoniker.ParseDisplayName(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.String,System.Int32@,System.Runtime.InteropServices.ComTypes.IMoniker@)\n  commentId: M:System.Runtime.InteropServices.ComTypes.IMoniker.ParseDisplayName(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.String,System.Int32@,System.Runtime.InteropServices.ComTypes.IMoniker@)\n  id: ParseDisplayName(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.String,System.Int32@,System.Runtime.InteropServices.ComTypes.IMoniker@)\n  parent: System.Runtime.InteropServices.ComTypes.IMoniker\n  langs:\n  - csharp\n  - vb\n  name: ParseDisplayName(IBindCtx, IMoniker, String, out Int32, out IMoniker)\n  fullName: System.Runtime.InteropServices.ComTypes.IMoniker.ParseDisplayName(System.Runtime.InteropServices.ComTypes.IBindCtx, System.Runtime.InteropServices.ComTypes.IMoniker, System.String, out System.Int32, out System.Runtime.InteropServices.ComTypes.IMoniker)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ParseDisplayName\n    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs\n    startLine: 56\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Reads as many characters of the specified display name as the <xref href=\\\"System.Runtime.InteropServices.ComTypes.IMoniker.ParseDisplayName(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.String,System.Int32@,System.Runtime.InteropServices.ComTypes.IMoniker@)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> understands and builds a moniker corresponding to the portion read.</p>\\n\"\n  syntax:\n    content: void ParseDisplayName(IBindCtx pbc, IMoniker pmkToLeft, [MarshalAs(UnmanagedType.LPWStr)] string pszDisplayName, out int pchEaten, out IMoniker ppmkOut)\n    content.vb: Sub ParseDisplayName(pbc As IBindCtx, pmkToLeft As IMoniker, pszDisplayName As String, ByRef pchEaten As Integer, ByRef ppmkOut As IMoniker)\n    parameters:\n    - id: pbc\n      type: System.Runtime.InteropServices.ComTypes.IBindCtx\n      description: \"\\n<p>A reference to the bind context to use in this binding operation. </p>\\n\"\n    - id: pmkToLeft\n      type: System.Runtime.InteropServices.ComTypes.IMoniker\n      description: \"\\n<p>A reference to the moniker that has been built from the display name up to this point. </p>\\n\"\n    - id: pszDisplayName\n      type: System.String\n      description: \"\\n<p>A reference to the string containing the remaining display name to parse. </p>\\n\"\n      attributes:\n      - type: System.Runtime.InteropServices.MarshalAsAttribute\n        ctor: System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Runtime.InteropServices.UnmanagedType)\n        arguments:\n        - type: System.Runtime.InteropServices.UnmanagedType\n          value: 21\n    - id: pchEaten\n      type: System.Int32\n      description: \"\\n<p>When this method returns, contains the number of characters that were consumed in parsing <em>pszDisplayName</em>. This parameter is passed uninitialized.</p>\\n\"\n    - id: ppmkOut\n      type: System.Runtime.InteropServices.ComTypes.IMoniker\n      description: \"\\n<p>When this method returns, contains a reference to the moniker that was built from <em>pszDisplayName</em>. This parameter is passed uninitialized.</p>\\n\"\n  fullName.vb: System.Runtime.InteropServices.ComTypes.IMoniker.ParseDisplayName(System.Runtime.InteropServices.ComTypes.IBindCtx, System.Runtime.InteropServices.ComTypes.IMoniker, System.String, ByRef System.Int32, ByRef System.Runtime.InteropServices.ComTypes.IMoniker)\n  name.vb: ParseDisplayName(IBindCtx, IMoniker, String, ByRef Int32, ByRef IMoniker)\n  nameWithType: IMoniker.ParseDisplayName(IBindCtx, IMoniker, String, out Int32, out IMoniker)\n  nameWithType.vb: IMoniker.ParseDisplayName(IBindCtx, IMoniker, String, ByRef Int32, ByRef IMoniker)\n- uid: System.Runtime.InteropServices.ComTypes.IMoniker.Reduce(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Int32,System.Runtime.InteropServices.ComTypes.IMoniker@,System.Runtime.InteropServices.ComTypes.IMoniker@)\n  commentId: M:System.Runtime.InteropServices.ComTypes.IMoniker.Reduce(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Int32,System.Runtime.InteropServices.ComTypes.IMoniker@,System.Runtime.InteropServices.ComTypes.IMoniker@)\n  id: Reduce(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Int32,System.Runtime.InteropServices.ComTypes.IMoniker@,System.Runtime.InteropServices.ComTypes.IMoniker@)\n  parent: System.Runtime.InteropServices.ComTypes.IMoniker\n  langs:\n  - csharp\n  - vb\n  name: Reduce(IBindCtx, Int32, ref IMoniker, out IMoniker)\n  fullName: System.Runtime.InteropServices.ComTypes.IMoniker.Reduce(System.Runtime.InteropServices.ComTypes.IBindCtx, System.Int32, ref System.Runtime.InteropServices.ComTypes.IMoniker, out System.Runtime.InteropServices.ComTypes.IMoniker)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Reduce\n    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs\n    startLine: 43\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Returns a reduced moniker, which is another moniker that refers to the same object as the current moniker but can be bound with equal or greater efficiency.</p>\\n\"\n  syntax:\n    content: void Reduce(IBindCtx pbc, int dwReduceHowFar, ref IMoniker ppmkToLeft, out IMoniker ppmkReduced)\n    content.vb: Sub Reduce(pbc As IBindCtx, dwReduceHowFar As Integer, ByRef ppmkToLeft As IMoniker, ByRef ppmkReduced As IMoniker)\n    parameters:\n    - id: pbc\n      type: System.Runtime.InteropServices.ComTypes.IBindCtx\n      description: \"\\n<p>A reference to the <strong>IBindCtx</strong> interface on the bind context to use in this binding operation. </p>\\n\"\n    - id: dwReduceHowFar\n      type: System.Int32\n      description: \"\\n<p>A value that specifies how far the current moniker should be reduced. </p>\\n\"\n    - id: ppmkToLeft\n      type: System.Runtime.InteropServices.ComTypes.IMoniker\n      description: \"\\n<p>A reference to the moniker to the left of the current moniker. </p>\\n\"\n    - id: ppmkReduced\n      type: System.Runtime.InteropServices.ComTypes.IMoniker\n      description: \"\\n<p>When this method returns, contains a reference to the reduced form of the current moniker, which can be <strong>null</strong> if an error occurs or if the current moniker is reduced to nothing. This parameter is passed uninitialized.</p>\\n\"\n  fullName.vb: System.Runtime.InteropServices.ComTypes.IMoniker.Reduce(System.Runtime.InteropServices.ComTypes.IBindCtx, System.Int32, ByRef System.Runtime.InteropServices.ComTypes.IMoniker, ByRef System.Runtime.InteropServices.ComTypes.IMoniker)\n  name.vb: Reduce(IBindCtx, Int32, ByRef IMoniker, ByRef IMoniker)\n  nameWithType: IMoniker.Reduce(IBindCtx, Int32, ref IMoniker, out IMoniker)\n  nameWithType.vb: IMoniker.Reduce(IBindCtx, Int32, ByRef IMoniker, ByRef IMoniker)\n- uid: System.Runtime.InteropServices.ComTypes.IMoniker.RelativePathTo(System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.IMoniker@)\n  commentId: M:System.Runtime.InteropServices.ComTypes.IMoniker.RelativePathTo(System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.IMoniker@)\n  id: RelativePathTo(System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.IMoniker@)\n  parent: System.Runtime.InteropServices.ComTypes.IMoniker\n  langs:\n  - csharp\n  - vb\n  name: RelativePathTo(IMoniker, out IMoniker)\n  fullName: System.Runtime.InteropServices.ComTypes.IMoniker.RelativePathTo(System.Runtime.InteropServices.ComTypes.IMoniker, out System.Runtime.InteropServices.ComTypes.IMoniker)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: RelativePathTo\n    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs\n    startLine: 54\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Supplies a moniker that, when appended to the current moniker (or one with a similar structure), yields the specified moniker.</p>\\n\"\n  syntax:\n    content: void RelativePathTo(IMoniker pmkOther, out IMoniker ppmkRelPath)\n    content.vb: Sub RelativePathTo(pmkOther As IMoniker, ByRef ppmkRelPath As IMoniker)\n    parameters:\n    - id: pmkOther\n      type: System.Runtime.InteropServices.ComTypes.IMoniker\n      description: \"\\n<p>A reference to the moniker to which a relative path should be taken. </p>\\n\"\n    - id: ppmkRelPath\n      type: System.Runtime.InteropServices.ComTypes.IMoniker\n      description: \"\\n<p>When this method returns, contains a reference to the relative moniker. This parameter is passed uninitialized.</p>\\n\"\n  fullName.vb: System.Runtime.InteropServices.ComTypes.IMoniker.RelativePathTo(System.Runtime.InteropServices.ComTypes.IMoniker, ByRef System.Runtime.InteropServices.ComTypes.IMoniker)\n  name.vb: RelativePathTo(IMoniker, ByRef IMoniker)\n  nameWithType: IMoniker.RelativePathTo(IMoniker, out IMoniker)\n  nameWithType.vb: IMoniker.RelativePathTo(IMoniker, ByRef IMoniker)\n- uid: System.Runtime.InteropServices.ComTypes.IMoniker.Save(System.Runtime.InteropServices.ComTypes.IStream,System.Boolean)\n  commentId: M:System.Runtime.InteropServices.ComTypes.IMoniker.Save(System.Runtime.InteropServices.ComTypes.IStream,System.Boolean)\n  id: Save(System.Runtime.InteropServices.ComTypes.IStream,System.Boolean)\n  parent: System.Runtime.InteropServices.ComTypes.IMoniker\n  langs:\n  - csharp\n  - vb\n  name: Save(IStream, Boolean)\n  fullName: System.Runtime.InteropServices.ComTypes.IMoniker.Save(System.Runtime.InteropServices.ComTypes.IStream, System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Save\n    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs\n    startLine: 37\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Saves an object to the specified stream.</p>\\n\"\n  syntax:\n    content: void Save(IStream pStm, [MarshalAs(UnmanagedType.Bool)] bool fClearDirty)\n    content.vb: Sub Save(pStm As IStream, fClearDirty As Boolean)\n    parameters:\n    - id: pStm\n      type: System.Runtime.InteropServices.ComTypes.IStream\n      description: \"\\n<p>The stream to which the object is saved. </p>\\n\"\n    - id: fClearDirty\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to clear the modified flag after the save is complete; otherwise <strong>false</strong></p>\\n\"\n      attributes:\n      - type: System.Runtime.InteropServices.MarshalAsAttribute\n        ctor: System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Runtime.InteropServices.UnmanagedType)\n        arguments:\n        - type: System.Runtime.InteropServices.UnmanagedType\n          value: 2\n  nameWithType: IMoniker.Save(IStream, Boolean)\nreferences:\n- uid: System.Runtime.InteropServices.ComTypes\n  isExternal: false\n  name: System.Runtime.InteropServices.ComTypes\n  fullName: System.Runtime.InteropServices.ComTypes\n  nameWithType: System.Runtime.InteropServices.ComTypes\n  commentId: N:System.Runtime.InteropServices.ComTypes\n- uid: System.Runtime.InteropServices.ComTypes.IBindCtx\n  parent: System.Runtime.InteropServices.ComTypes\n  isExternal: false\n  name: IBindCtx\n  fullName: System.Runtime.InteropServices.ComTypes.IBindCtx\n  nameWithType: IBindCtx\n  commentId: T:System.Runtime.InteropServices.ComTypes.IBindCtx\n- uid: System.Runtime.InteropServices.ComTypes.IMoniker\n  parent: System.Runtime.InteropServices.ComTypes\n  isExternal: false\n  name: IMoniker\n  fullName: System.Runtime.InteropServices.ComTypes.IMoniker\n  nameWithType: IMoniker\n  commentId: T:System.Runtime.InteropServices.ComTypes.IMoniker\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  fullName: System.Guid\n  nameWithType: Guid\n  commentId: T:System.Guid\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.Runtime.InteropServices.ComTypes.IEnumMoniker\n  parent: System.Runtime.InteropServices.ComTypes\n  isExternal: false\n  name: IEnumMoniker\n  fullName: System.Runtime.InteropServices.ComTypes.IEnumMoniker\n  nameWithType: IEnumMoniker\n  commentId: T:System.Runtime.InteropServices.ComTypes.IEnumMoniker\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  fullName: System.Int64\n  nameWithType: Int64\n  commentId: T:System.Int64\n- uid: System.Runtime.InteropServices.ComTypes.FILETIME\n  parent: System.Runtime.InteropServices.ComTypes\n  isExternal: false\n  name: FILETIME\n  fullName: System.Runtime.InteropServices.ComTypes.FILETIME\n  nameWithType: FILETIME\n  commentId: T:System.Runtime.InteropServices.ComTypes.FILETIME\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.Runtime.InteropServices.ComTypes.IStream\n  parent: System.Runtime.InteropServices.ComTypes\n  isExternal: false\n  name: IStream\n  fullName: System.Runtime.InteropServices.ComTypes.IStream\n  nameWithType: IStream\n  commentId: T:System.Runtime.InteropServices.ComTypes.IStream\n"}