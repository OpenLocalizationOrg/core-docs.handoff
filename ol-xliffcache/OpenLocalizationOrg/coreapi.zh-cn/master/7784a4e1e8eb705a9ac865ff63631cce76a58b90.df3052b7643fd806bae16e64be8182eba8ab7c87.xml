{"nodes":[{"pos":[1456,1461],"content":"Point","needQuote":true,"nodes":[{"content":"Point","pos":[0,5]}]},{"pos":[2480,2485],"content":"Empty","needQuote":true,"nodes":[{"content":"Empty","pos":[0,5]}]},{"pos":[3701,3712],"content":"Point(Size)","needQuote":true,"nodes":[{"content":"Point(Size)","pos":[0,11]}]},{"pos":[5039,5051],"content":"Point(Int32)","needQuote":true,"nodes":[{"content":"Point(Int32)","pos":[0,12]}]},{"pos":[6302,6321],"content":"Point(Int32, Int32)","needQuote":true,"nodes":[{"content":"Point(Int32, Int32)","pos":[0,19]}]},{"content":"\\n&lt;p&gt;The horizontal position of the point.","pos":[7102,7144],"source":"\\n<p>The horizontal position of the point."},{"content":"&lt;/p&gt;\\n","pos":[7145,7151],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The vertical position of the point.","pos":[7210,7250],"source":"\\n<p>The vertical position of the point."},{"content":"&lt;/p&gt;\\n","pos":[7251,7257],"source":" </p>\\n"},{"pos":[7519,7526],"content":"IsEmpty","needQuote":true,"nodes":[{"content":"IsEmpty","pos":[0,7]}]},{"pos":[8770,8771],"content":"X","needQuote":true,"nodes":[{"content":"X","pos":[0,1]}]},{"pos":[9828,9829],"content":"Y","needQuote":true,"nodes":[{"content":"Y","pos":[0,1]}]},{"pos":[11018,11034],"content":"Add(Point, Size)","needQuote":true,"nodes":[{"content":"Add(Point, Size)","pos":[0,16]}]},{"pos":[12739,12754],"content":"Ceiling(PointF)","needQuote":true,"nodes":[{"content":"Ceiling(PointF)","pos":[0,15]}]},{"pos":[14375,14389],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[16023,16036],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[17289,17302],"content":"Offset(Point)","needQuote":true,"nodes":[{"content":"Offset(Point)","pos":[0,13]}]},{"pos":[18642,18662],"content":"Offset(Int32, Int32)","needQuote":true,"nodes":[{"content":"Offset(Int32, Int32)","pos":[0,20]}]},{"content":"\\n&lt;p&gt;The amount to offset the x-coordinate.","pos":[19424,19467],"source":"\\n<p>The amount to offset the x-coordinate."},{"content":"&lt;/p&gt;\\n","pos":[19468,19474],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The amount to offset the y-coordinate.","pos":[19534,19577],"source":"\\n<p>The amount to offset the y-coordinate."},{"content":"&lt;/p&gt;\\n","pos":[19578,19584],"source":" </p>\\n"},{"pos":[19985,20006],"content":"Addition(Point, Size)","needQuote":true,"nodes":[{"content":"Addition(Point, Size)","pos":[0,21]}]},{"pos":[21838,21860],"content":"Equality(Point, Point)","needQuote":true,"nodes":[{"content":"Equality(Point, Point)","pos":[0,22]}]},{"pos":[24086,24109],"content":"Explicit(Point to Size)","needQuote":true,"nodes":[{"content":"Explicit(Point to Size)","pos":[0,23]}]},{"pos":[25929,25954],"content":"Implicit(Point to PointF)","needQuote":true,"nodes":[{"content":"Implicit(Point to PointF)","pos":[0,25]}]},{"pos":[27793,27817],"content":"Inequality(Point, Point)","needQuote":true,"nodes":[{"content":"Inequality(Point, Point)","pos":[0,24]}]},{"pos":[30096,30120],"content":"Subtraction(Point, Size)","needQuote":true,"nodes":[{"content":"Subtraction(Point, Size)","pos":[0,24]}]},{"pos":[32039,32052],"content":"Round(PointF)","needQuote":true,"nodes":[{"content":"Round(PointF)","pos":[0,13]}]},{"pos":[33738,33759],"content":"Subtract(Point, Size)","needQuote":true,"nodes":[{"content":"Subtract(Point, Size)","pos":[0,21]}]},{"pos":[35759,35769],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[37004,37020],"content":"Truncate(PointF)","needQuote":true,"nodes":[{"content":"Truncate(PointF)","pos":[0,16]}]},{"pos":[38473,38487],"content":"System.Drawing","needQuote":true,"nodes":[{"content":"System.Drawing","pos":[0,14]}]},{"pos":[38684,38706],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[38854,38860],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[38927,38928],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[38978,38984],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[39045,39046]},{"pos":[39101,39107],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[39167,39168],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[39265,39271],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[39338,39339],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[39389,39395],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[39456,39457]},{"pos":[39512,39518],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[39578,39579],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[39824,39855],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[40021,40036],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[40112,40113],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[40163,40169],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[40230,40231]},{"pos":[40286,40292],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[40352,40353],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[40459,40474],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[40550,40551],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[40601,40607],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[40668,40669]},{"pos":[40724,40730],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[40790,40791],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[41017,41026],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[41119,41126],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[41194,41195],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[41222,41223],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[41292,41299],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[41367,41368],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[41395,41396],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[41549,41555],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[41676,41682],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[41828,41833],"content":"Point","needQuote":true,"nodes":[{"content":"Point","pos":[0,5]}]},{"pos":[42005,42009],"content":"Size","needQuote":true,"nodes":[{"content":"Size","pos":[0,4]}]},{"pos":[42163,42168],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[42311,42318],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[42482,42488],"content":"PointF","needQuote":true,"nodes":[{"content":"PointF","pos":[0,6]}]},{"pos":[42683,42697],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[42822,42828],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[42877,42878],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[42928,42934],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[42994,42995],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[43081,43087],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[43136,43137],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[43187,43193],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[43253,43254],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[43435,43444],"content":"ValueType","needQuote":true,"nodes":[{"content":"ValueType","pos":[0,9]}]},{"pos":[43623,43636],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[43743,43754],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[43808,43809],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[43836,43837],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[43913,43924],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[43978,43979],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[44006,44007],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[44196,44206],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[44307,44315],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[44366,44367],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[44394,44395],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[44468,44476],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[44527,44528],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[44555,44556],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[44717,44723],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"items:\n- uid: System.Drawing.Point\n  commentId: T:System.Drawing.Point\n  id: Point\n  parent: System.Drawing\n  children:\n  - System.Drawing.Point.#ctor(System.Drawing.Size)\n  - System.Drawing.Point.#ctor(System.Int32)\n  - System.Drawing.Point.#ctor(System.Int32,System.Int32)\n  - System.Drawing.Point.Add(System.Drawing.Point,System.Drawing.Size)\n  - System.Drawing.Point.Ceiling(System.Drawing.PointF)\n  - System.Drawing.Point.Empty\n  - System.Drawing.Point.Equals(System.Object)\n  - System.Drawing.Point.GetHashCode\n  - System.Drawing.Point.IsEmpty\n  - System.Drawing.Point.Offset(System.Drawing.Point)\n  - System.Drawing.Point.Offset(System.Int32,System.Int32)\n  - System.Drawing.Point.op_Addition(System.Drawing.Point,System.Drawing.Size)\n  - System.Drawing.Point.op_Equality(System.Drawing.Point,System.Drawing.Point)\n  - System.Drawing.Point.op_Explicit(System.Drawing.Point)~System.Drawing.Size\n  - System.Drawing.Point.op_Implicit(System.Drawing.Point)~System.Drawing.PointF\n  - System.Drawing.Point.op_Inequality(System.Drawing.Point,System.Drawing.Point)\n  - System.Drawing.Point.op_Subtraction(System.Drawing.Point,System.Drawing.Size)\n  - System.Drawing.Point.Round(System.Drawing.PointF)\n  - System.Drawing.Point.Subtract(System.Drawing.Point,System.Drawing.Size)\n  - System.Drawing.Point.ToString\n  - System.Drawing.Point.Truncate(System.Drawing.PointF)\n  - System.Drawing.Point.X\n  - System.Drawing.Point.Y\n  langs:\n  - csharp\n  - vb\n  name: Point\n  fullName: System.Drawing.Point\n  type: Struct\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Point\n    path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs\n    startLine: 10\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Represents an ordered pair of integer x- and y-coordinates that defines a point in a two-dimensional plane.</p>\\n\"\n  syntax:\n    content: public struct Point\n    content.vb: Public Structure Point\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  modifiers.csharp:\n  - public\n  - struct\n  modifiers.vb:\n  - Public\n  - Structure\n  nameWithType: Point\n- uid: System.Drawing.Point.Empty\n  commentId: F:System.Drawing.Point.Empty\n  id: Empty\n  parent: System.Drawing.Point\n  langs:\n  - csharp\n  - vb\n  name: Empty\n  fullName: System.Drawing.Point.Empty\n  type: Field\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Empty\n    path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs\n    startLine: 16\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Represents a <xref href=\\\"System.Drawing.Point\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that has <xref href=\\\"System.Drawing.Point.X\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and <xref href=\\\"System.Drawing.Point.Y\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values set to zero. </p>\\n\"\n  syntax:\n    content: public static readonly Point Empty\n    content.vb: Public Shared ReadOnly Empty As Point\n    return:\n      type: System.Drawing.Point\n  modifiers.csharp:\n  - public\n  - static\n  - readonly\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: Point.Empty\n- uid: System.Drawing.Point.#ctor(System.Drawing.Size)\n  commentId: M:System.Drawing.Point.#ctor(System.Drawing.Size)\n  id: '#ctor(System.Drawing.Size)'\n  parent: System.Drawing.Point\n  langs:\n  - csharp\n  - vb\n  name: Point(Size)\n  fullName: System.Drawing.Point.Point(System.Drawing.Size)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs\n    startLine: 37\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Drawing.Point\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class from a <xref href=\\\"System.Drawing.Size\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public Point(Size sz)\n    content.vb: Public Sub New(sz As Size)\n    parameters:\n    - id: sz\n      type: System.Drawing.Size\n      description: \"\\n<p>A <xref href=\\\"System.Drawing.Size\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that specifies the coordinates for the new <xref href=\\\"System.Drawing.Point\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Point.Point(Size)\n- uid: System.Drawing.Point.#ctor(System.Int32)\n  commentId: M:System.Drawing.Point.#ctor(System.Int32)\n  id: '#ctor(System.Int32)'\n  parent: System.Drawing.Point\n  langs:\n  - csharp\n  - vb\n  name: Point(Int32)\n  fullName: System.Drawing.Point.Point(System.Int32)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs\n    startLine: 47\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Drawing.Point\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class using coordinates specified by an integer value.</p>\\n\"\n  syntax:\n    content: public Point(int dw)\n    content.vb: Public Sub New(dw As Integer)\n    parameters:\n    - id: dw\n      type: System.Int32\n      description: \"\\n<p>A 32-bit integer that specifies the coordinates for the new <xref href=\\\"System.Drawing.Point\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Point.Point(Int32)\n- uid: System.Drawing.Point.#ctor(System.Int32,System.Int32)\n  commentId: M:System.Drawing.Point.#ctor(System.Int32,System.Int32)\n  id: '#ctor(System.Int32,System.Int32)'\n  parent: System.Drawing.Point\n  langs:\n  - csharp\n  - vb\n  name: Point(Int32, Int32)\n  fullName: System.Drawing.Point.Point(System.Int32, System.Int32)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs\n    startLine: 25\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Drawing.Point\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified coordinates.</p>\\n\"\n  syntax:\n    content: public Point(int x, int y)\n    content.vb: Public Sub New(x As Integer, y As Integer)\n    parameters:\n    - id: x\n      type: System.Int32\n      description: \"\\n<p>The horizontal position of the point. </p>\\n\"\n    - id: y\n      type: System.Int32\n      description: \"\\n<p>The vertical position of the point. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Point.Point(Int32, Int32)\n- uid: System.Drawing.Point.IsEmpty\n  commentId: P:System.Drawing.Point.IsEmpty\n  id: IsEmpty\n  parent: System.Drawing.Point\n  langs:\n  - csharp\n  - vb\n  name: IsEmpty\n  fullName: System.Drawing.Point.IsEmpty\n  type: Property\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsEmpty\n    path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs\n    startLine: 58\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Gets a value indicating whether this <xref href=\\\"System.Drawing.Point\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is empty.</p>\\n\"\n  syntax:\n    content: public bool IsEmpty { get; }\n    content.vb: Public ReadOnly Property IsEmpty As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if both <xref href=\\\"System.Drawing.Point.X\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and <xref href=\\\"System.Drawing.Point.Y\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> are 0; otherwise, <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Point.IsEmpty\n- uid: System.Drawing.Point.X\n  commentId: P:System.Drawing.Point.X\n  id: X\n  parent: System.Drawing.Point\n  langs:\n  - csharp\n  - vb\n  name: X\n  fullName: System.Drawing.Point.X\n  type: Property\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: X\n    path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs\n    startLine: 69\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Gets or sets the x-coordinate of this <xref href=\\\"System.Drawing.Point\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public int X { get; set; }\n    content.vb: Public Property X As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The x-coordinate of this <xref href=\\\"System.Drawing.Point\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: Point.X\n- uid: System.Drawing.Point.Y\n  commentId: P:System.Drawing.Point.Y\n  id: Y\n  parent: System.Drawing.Point\n  langs:\n  - csharp\n  - vb\n  name: Y\n  fullName: System.Drawing.Point.Y\n  type: Property\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Y\n    path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs\n    startLine: 86\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Gets or sets the y-coordinate of this <xref href=\\\"System.Drawing.Point\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public int Y { get; set; }\n    content.vb: Public Property Y As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The y-coordinate of this <xref href=\\\"System.Drawing.Point\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: Point.Y\n- uid: System.Drawing.Point.Add(System.Drawing.Point,System.Drawing.Size)\n  commentId: M:System.Drawing.Point.Add(System.Drawing.Point,System.Drawing.Size)\n  id: Add(System.Drawing.Point,System.Drawing.Size)\n  parent: System.Drawing.Point\n  langs:\n  - csharp\n  - vb\n  name: Add(Point, Size)\n  fullName: System.Drawing.Point.Add(System.Drawing.Point, System.Drawing.Size)\n  type: Method\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Add\n    path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs\n    startLine: 169\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Adds the specified <xref href=\\\"System.Drawing.Size\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to the specified <xref href=\\\"System.Drawing.Point\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public static Point Add(Point pt, Size sz)\n    content.vb: Public Shared Function Add(pt As Point, sz As Size) As Point\n    parameters:\n    - id: pt\n      type: System.Drawing.Point\n      description: \"\\n<p>The <xref href=\\\"System.Drawing.Point\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to add.</p>\\n\"\n    - id: sz\n      type: System.Drawing.Size\n      description: \"\\n<p>The <xref href=\\\"System.Drawing.Size\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to add</p>\\n\"\n    return:\n      type: System.Drawing.Point\n      description: \"\\n<p>The <xref href=\\\"System.Drawing.Point\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is the result of the addition operation.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Point.Add(Point, Size)\n- uid: System.Drawing.Point.Ceiling(System.Drawing.PointF)\n  commentId: M:System.Drawing.Point.Ceiling(System.Drawing.PointF)\n  id: Ceiling(System.Drawing.PointF)\n  parent: System.Drawing.Point\n  langs:\n  - csharp\n  - vb\n  name: Ceiling(PointF)\n  fullName: System.Drawing.Point.Ceiling(System.Drawing.PointF)\n  type: Method\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Ceiling\n    path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs\n    startLine: 188\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Converts the specified <xref href=\\\"System.Drawing.PointF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to a <xref href=\\\"System.Drawing.Point\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> by rounding the values of the <xref href=\\\"System.Drawing.PointF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to the next higher integer values.</p>\\n\"\n  syntax:\n    content: public static Point Ceiling(PointF value)\n    content.vb: Public Shared Function Ceiling(value As PointF) As Point\n    parameters:\n    - id: value\n      type: System.Drawing.PointF\n      description: \"\\n<p>The <xref href=\\\"System.Drawing.PointF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to convert. </p>\\n\"\n    return:\n      type: System.Drawing.Point\n      description: \"\\n<p>The <xref href=\\\"System.Drawing.Point\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> this method converts to.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Point.Ceiling(PointF)\n- uid: System.Drawing.Point.Equals(System.Object)\n  commentId: M:System.Drawing.Point.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Drawing.Point\n  langs:\n  - csharp\n  - vb\n  name: Equals(Object)\n  fullName: System.Drawing.Point.Equals(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Equals\n    path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs\n    startLine: 217\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Specifies whether this <xref href=\\\"System.Drawing.Point\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> contains the same coordinates as the specified <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public override bool Equals(object obj)\n    content.vb: Public Overrides Function Equals(obj As Object) As Boolean\n    parameters:\n    - id: obj\n      type: System.Object\n      description: \"\\n<p>The <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to test. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if <em>obj</em> is a <xref href=\\\"System.Drawing.Point\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and has the same coordinates as this <xref href=\\\"System.Drawing.Point\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  overridden: System.ValueType.Equals(System.Object)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: Point.Equals(Object)\n- uid: System.Drawing.Point.GetHashCode\n  commentId: M:System.Drawing.Point.GetHashCode\n  id: GetHashCode\n  parent: System.Drawing.Point\n  langs:\n  - csharp\n  - vb\n  name: GetHashCode()\n  fullName: System.Drawing.Point.GetHashCode()\n  type: Method\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetHashCode\n    path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs\n    startLine: 230\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Returns a hash code for this <xref href=\\\"System.Drawing.Point\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public override int GetHashCode()\n    content.vb: Public Overrides Function GetHashCode As Integer\n    return:\n      type: System.Int32\n      description: \"\\n<p>An integer value that specifies a hash value for this <xref href=\\\"System.Drawing.Point\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  overridden: System.ValueType.GetHashCode\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: Point.GetHashCode()\n- uid: System.Drawing.Point.Offset(System.Drawing.Point)\n  commentId: M:System.Drawing.Point.Offset(System.Drawing.Point)\n  id: Offset(System.Drawing.Point)\n  parent: System.Drawing.Point\n  langs:\n  - csharp\n  - vb\n  name: Offset(Point)\n  fullName: System.Drawing.Point.Offset(System.Drawing.Point)\n  type: Method\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Offset\n    path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs\n    startLine: 247\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Translates this <xref href=\\\"System.Drawing.Point\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> by the specified <xref href=\\\"System.Drawing.Point\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public void Offset(Point p)\n    content.vb: Public Sub Offset(p As Point)\n    parameters:\n    - id: p\n      type: System.Drawing.Point\n      description: \"\\n<p>The <xref href=\\\"System.Drawing.Point\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> used offset this <xref href=\\\"System.Drawing.Point\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Point.Offset(Point)\n- uid: System.Drawing.Point.Offset(System.Int32,System.Int32)\n  commentId: M:System.Drawing.Point.Offset(System.Int32,System.Int32)\n  id: Offset(System.Int32,System.Int32)\n  parent: System.Drawing.Point\n  langs:\n  - csharp\n  - vb\n  name: Offset(Int32, Int32)\n  fullName: System.Drawing.Point.Offset(System.Int32, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Offset\n    path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs\n    startLine: 238\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Translates this <xref href=\\\"System.Drawing.Point\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> by the specified amount.</p>\\n\"\n  syntax:\n    content: public void Offset(int dx, int dy)\n    content.vb: Public Sub Offset(dx As Integer, dy As Integer)\n    parameters:\n    - id: dx\n      type: System.Int32\n      description: \"\\n<p>The amount to offset the x-coordinate. </p>\\n\"\n    - id: dy\n      type: System.Int32\n      description: \"\\n<p>The amount to offset the y-coordinate. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Point.Offset(Int32, Int32)\n- uid: System.Drawing.Point.op_Addition(System.Drawing.Point,System.Drawing.Size)\n  commentId: M:System.Drawing.Point.op_Addition(System.Drawing.Point,System.Drawing.Size)\n  id: op_Addition(System.Drawing.Point,System.Drawing.Size)\n  parent: System.Drawing.Point\n  langs:\n  - csharp\n  - vb\n  name: Addition(Point, Size)\n  fullName: System.Drawing.Point.Addition(System.Drawing.Point, System.Drawing.Size)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Addition\n    path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs\n    startLine: 124\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Translates a <xref href=\\\"System.Drawing.Point\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> by a given <xref href=\\\"System.Drawing.Size\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public static Point operator +(Point pt, Size sz)\n    content.vb: Public Shared Operator +(pt As Point, sz As Size) As Point\n    parameters:\n    - id: pt\n      type: System.Drawing.Point\n      description: \"\\n<p>The <xref href=\\\"System.Drawing.Point\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to translate. </p>\\n\"\n    - id: sz\n      type: System.Drawing.Size\n      description: \"\\n<p>A <xref href=\\\"System.Drawing.Size\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that specifies the pair of numbers to add to the coordinates of <em>pt</em>. </p>\\n\"\n    return:\n      type: System.Drawing.Point\n      description: \"\\n<p>The translated <xref href=\\\"System.Drawing.Point\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Point.Addition(Point, Size)\n- uid: System.Drawing.Point.op_Equality(System.Drawing.Point,System.Drawing.Point)\n  commentId: M:System.Drawing.Point.op_Equality(System.Drawing.Point,System.Drawing.Point)\n  id: op_Equality(System.Drawing.Point,System.Drawing.Point)\n  parent: System.Drawing.Point\n  langs:\n  - csharp\n  - vb\n  name: Equality(Point, Point)\n  fullName: System.Drawing.Point.Equality(System.Drawing.Point, System.Drawing.Point)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Equality\n    path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs\n    startLine: 146\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Compares two <xref href=\\\"System.Drawing.Point\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects. The result specifies whether the values of the <xref href=\\\"System.Drawing.Point.X\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and <xref href=\\\"System.Drawing.Point.Y\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> properties of the two <xref href=\\\"System.Drawing.Point\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects are equal.</p>\\n\"\n  syntax:\n    content: public static bool operator ==(Point left, Point right)\n    content.vb: Public Shared Operator =(left As Point, right As Point) As Boolean\n    parameters:\n    - id: left\n      type: System.Drawing.Point\n      description: \"\\n<p>A <xref href=\\\"System.Drawing.Point\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to compare. </p>\\n\"\n    - id: right\n      type: System.Drawing.Point\n      description: \"\\n<p>A <xref href=\\\"System.Drawing.Point\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to compare. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the <xref href=\\\"System.Drawing.Point.X\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and <xref href=\\\"System.Drawing.Point.Y\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values of <em>left</em> and <em>right</em> are equal; otherwise, <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Point.Equality(Point, Point)\n- uid: System.Drawing.Point.op_Explicit(System.Drawing.Point)~System.Drawing.Size\n  commentId: M:System.Drawing.Point.op_Explicit(System.Drawing.Point)~System.Drawing.Size\n  id: op_Explicit(System.Drawing.Point)~System.Drawing.Size\n  parent: System.Drawing.Point\n  langs:\n  - csharp\n  - vb\n  name: Explicit(Point to Size)\n  fullName: System.Drawing.Point.Explicit(System.Drawing.Point to System.Drawing.Size)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Explicit\n    path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs\n    startLine: 114\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Converts the specified <xref href=\\\"System.Drawing.Point\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure to a <xref href=\\\"System.Drawing.Size\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  syntax:\n    content: public static explicit operator Size(Point p)\n    content.vb: Public Shared Narrowing Operator CType(p As Point) As Size\n    parameters:\n    - id: p\n      type: System.Drawing.Point\n      description: \"\\n<p>The <xref href=\\\"System.Drawing.Point\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to be converted.</p>\\n\"\n    return:\n      type: System.Drawing.Size\n      description: \"\\n<p>The <xref href=\\\"System.Drawing.Size\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that results from the conversion.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Drawing.Point.Narrowing(System.Drawing.Point to System.Drawing.Size)\n  name.vb: Narrowing(Point to Size)\n  nameWithType: Point.Explicit(Point to Size)\n  nameWithType.vb: Point.Narrowing(Point to Size)\n- uid: System.Drawing.Point.op_Implicit(System.Drawing.Point)~System.Drawing.PointF\n  commentId: M:System.Drawing.Point.op_Implicit(System.Drawing.Point)~System.Drawing.PointF\n  id: op_Implicit(System.Drawing.Point)~System.Drawing.PointF\n  parent: System.Drawing.Point\n  langs:\n  - csharp\n  - vb\n  name: Implicit(Point to PointF)\n  fullName: System.Drawing.Point.Implicit(System.Drawing.Point to System.Drawing.PointF)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Implicit\n    path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs\n    startLine: 104\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Converts the specified <xref href=\\\"System.Drawing.Point\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure to a <xref href=\\\"System.Drawing.PointF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  syntax:\n    content: public static implicit operator PointF(Point p)\n    content.vb: Public Shared Widening Operator CType(p As Point) As PointF\n    parameters:\n    - id: p\n      type: System.Drawing.Point\n      description: \"\\n<p>The <xref href=\\\"System.Drawing.Point\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to be converted.</p>\\n\"\n    return:\n      type: System.Drawing.PointF\n      description: \"\\n<p>The <xref href=\\\"System.Drawing.PointF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that results from the conversion.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Drawing.Point.Widening(System.Drawing.Point to System.Drawing.PointF)\n  name.vb: Widening(Point to PointF)\n  nameWithType: Point.Implicit(Point to PointF)\n  nameWithType.vb: Point.Widening(Point to PointF)\n- uid: System.Drawing.Point.op_Inequality(System.Drawing.Point,System.Drawing.Point)\n  commentId: M:System.Drawing.Point.op_Inequality(System.Drawing.Point,System.Drawing.Point)\n  id: op_Inequality(System.Drawing.Point,System.Drawing.Point)\n  parent: System.Drawing.Point\n  langs:\n  - csharp\n  - vb\n  name: Inequality(Point, Point)\n  fullName: System.Drawing.Point.Inequality(System.Drawing.Point, System.Drawing.Point)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Inequality\n    path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs\n    startLine: 159\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Compares two <xref href=\\\"System.Drawing.Point\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects. The result specifies whether the values of the <xref href=\\\"System.Drawing.Point.X\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.Drawing.Point.Y\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> properties of the two <xref href=\\\"System.Drawing.Point\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects are unequal.</p>\\n\"\n  syntax:\n    content: public static bool operator !=(Point left, Point right)\n    content.vb: Public Shared Operator <>(left As Point, right As Point) As Boolean\n    parameters:\n    - id: left\n      type: System.Drawing.Point\n      description: \"\\n<p>A <xref href=\\\"System.Drawing.Point\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to compare. </p>\\n\"\n    - id: right\n      type: System.Drawing.Point\n      description: \"\\n<p>A <xref href=\\\"System.Drawing.Point\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to compare. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the values of either the <xref href=\\\"System.Drawing.Point.X\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> properties or the <xref href=\\\"System.Drawing.Point.Y\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> properties of <em>left</em> and <em>right</em> differ; otherwise, <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Point.Inequality(Point, Point)\n- uid: System.Drawing.Point.op_Subtraction(System.Drawing.Point,System.Drawing.Size)\n  commentId: M:System.Drawing.Point.op_Subtraction(System.Drawing.Point,System.Drawing.Size)\n  id: op_Subtraction(System.Drawing.Point,System.Drawing.Size)\n  parent: System.Drawing.Point\n  langs:\n  - csharp\n  - vb\n  name: Subtraction(Point, Size)\n  fullName: System.Drawing.Point.Subtraction(System.Drawing.Point, System.Drawing.Size)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Subtraction\n    path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs\n    startLine: 134\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Translates a <xref href=\\\"System.Drawing.Point\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> by the negative of a given <xref href=\\\"System.Drawing.Size\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public static Point operator -(Point pt, Size sz)\n    content.vb: Public Shared Operator -(pt As Point, sz As Size) As Point\n    parameters:\n    - id: pt\n      type: System.Drawing.Point\n      description: \"\\n<p>The <xref href=\\\"System.Drawing.Point\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to translate. </p>\\n\"\n    - id: sz\n      type: System.Drawing.Size\n      description: \"\\n<p>A <xref href=\\\"System.Drawing.Size\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that specifies the pair of numbers to subtract from the coordinates of <em>pt</em>. </p>\\n\"\n    return:\n      type: System.Drawing.Point\n      description: \"\\n<p>A <xref href=\\\"System.Drawing.Point\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure that is translated by the negative of a given <xref href=\\\"System.Drawing.Size\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Point.Subtraction(Point, Size)\n- uid: System.Drawing.Point.Round(System.Drawing.PointF)\n  commentId: M:System.Drawing.Point.Round(System.Drawing.PointF)\n  id: Round(System.Drawing.PointF)\n  parent: System.Drawing.Point\n  langs:\n  - csharp\n  - vb\n  name: Round(PointF)\n  fullName: System.Drawing.Point.Round(System.Drawing.PointF)\n  type: Method\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Round\n    path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs\n    startLine: 206\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Converts the specified <xref href=\\\"System.Drawing.PointF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to a <xref href=\\\"System.Drawing.Point\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object by rounding the <xref href=\\\"System.Drawing.Point\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values to the nearest integer.</p>\\n\"\n  syntax:\n    content: public static Point Round(PointF value)\n    content.vb: Public Shared Function Round(value As PointF) As Point\n    parameters:\n    - id: value\n      type: System.Drawing.PointF\n      description: \"\\n<p>The <xref href=\\\"System.Drawing.PointF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to convert. </p>\\n\"\n    return:\n      type: System.Drawing.Point\n      description: \"\\n<p>The <xref href=\\\"System.Drawing.Point\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> this method converts to.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Point.Round(PointF)\n- uid: System.Drawing.Point.Subtract(System.Drawing.Point,System.Drawing.Size)\n  commentId: M:System.Drawing.Point.Subtract(System.Drawing.Point,System.Drawing.Size)\n  id: Subtract(System.Drawing.Point,System.Drawing.Size)\n  parent: System.Drawing.Point\n  langs:\n  - csharp\n  - vb\n  name: Subtract(Point, Size)\n  fullName: System.Drawing.Point.Subtract(System.Drawing.Point, System.Drawing.Size)\n  type: Method\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Subtract\n    path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs\n    startLine: 179\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Returns the result of subtracting specified <xref href=\\\"System.Drawing.Size\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> from the specified <xref href=\\\"System.Drawing.Point\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public static Point Subtract(Point pt, Size sz)\n    content.vb: Public Shared Function Subtract(pt As Point, sz As Size) As Point\n    parameters:\n    - id: pt\n      type: System.Drawing.Point\n      description: \"\\n<p>The <xref href=\\\"System.Drawing.Point\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to be subtracted from. </p>\\n\"\n    - id: sz\n      type: System.Drawing.Size\n      description: \"\\n<p>The <xref href=\\\"System.Drawing.Size\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to subtract from the <xref href=\\\"System.Drawing.Point\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    return:\n      type: System.Drawing.Point\n      description: \"\\n<p>The <xref href=\\\"System.Drawing.Point\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is the result of the subtraction operation.</p>\\n\"\n  seealso:\n  - type: System.Drawing.Point.op_Subtraction(System.Drawing.Point,System.Drawing.Size)\n    commentId: M:System.Drawing.Point.op_Subtraction(System.Drawing.Point,System.Drawing.Size)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Point.Subtract(Point, Size)\n- uid: System.Drawing.Point.ToString\n  commentId: M:System.Drawing.Point.ToString\n  id: ToString\n  parent: System.Drawing.Point\n  langs:\n  - csharp\n  - vb\n  name: ToString()\n  fullName: System.Drawing.Point.ToString()\n  type: Method\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ToString\n    path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs\n    startLine: 259\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Converts this <xref href=\\\"System.Drawing.Point\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to a human-readable string.</p>\\n\"\n  syntax:\n    content: public override string ToString()\n    content.vb: Public Overrides Function ToString As String\n    return:\n      type: System.String\n      description: \"\\n<p>A string that represents this <xref href=\\\"System.Drawing.Point\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  overridden: System.ValueType.ToString\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: Point.ToString()\n- uid: System.Drawing.Point.Truncate(System.Drawing.PointF)\n  commentId: M:System.Drawing.Point.Truncate(System.Drawing.PointF)\n  id: Truncate(System.Drawing.PointF)\n  parent: System.Drawing.Point\n  langs:\n  - csharp\n  - vb\n  name: Truncate(PointF)\n  fullName: System.Drawing.Point.Truncate(System.Drawing.PointF)\n  type: Method\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Truncate\n    path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs\n    startLine: 197\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Converts the specified <xref href=\\\"System.Drawing.PointF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to a <xref href=\\\"System.Drawing.Point\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> by truncating the values of the <xref href=\\\"System.Drawing.Point\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public static Point Truncate(PointF value)\n    content.vb: Public Shared Function Truncate(value As PointF) As Point\n    parameters:\n    - id: value\n      type: System.Drawing.PointF\n      description: \"\\n<p>The <xref href=\\\"System.Drawing.PointF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to convert. </p>\\n\"\n    return:\n      type: System.Drawing.Point\n      description: \"\\n<p>The <xref href=\\\"System.Drawing.Point\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> this method converts to.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Point.Truncate(PointF)\nreferences:\n- uid: System.Drawing\n  isExternal: false\n  name: System.Drawing\n  fullName: System.Drawing\n  nameWithType: System.Drawing\n  commentId: N:System.Drawing\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Drawing.Point\n  parent: System.Drawing\n  isExternal: false\n  name: Point\n  fullName: System.Drawing.Point\n  nameWithType: Point\n  commentId: T:System.Drawing.Point\n- uid: System.Drawing.Size\n  parent: System.Drawing\n  isExternal: false\n  name: Size\n  fullName: System.Drawing.Size\n  nameWithType: Size\n  commentId: T:System.Drawing.Size\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.Drawing.PointF\n  parent: System.Drawing\n  isExternal: false\n  name: PointF\n  fullName: System.Drawing.PointF\n  nameWithType: PointF\n  commentId: T:System.Drawing.PointF\n- uid: System.ValueType.Equals(System.Object)\n  parent: System.ValueType\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.ValueType.Equals(System.Object)\n  spec.csharp:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: ValueType.Equals(Object)\n  commentId: M:System.ValueType.Equals(System.Object)\n- uid: System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  fullName: System.ValueType\n  nameWithType: ValueType\n  commentId: T:System.ValueType\n- uid: System.ValueType.GetHashCode\n  parent: System.ValueType\n  isExternal: false\n  name: GetHashCode()\n  fullName: System.ValueType.GetHashCode()\n  spec.csharp:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ValueType.GetHashCode()\n  commentId: M:System.ValueType.GetHashCode\n- uid: System.ValueType.ToString\n  parent: System.ValueType\n  isExternal: false\n  name: ToString()\n  fullName: System.ValueType.ToString()\n  spec.csharp:\n  - uid: System.ValueType.ToString\n    name: ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.ToString\n    name: ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ValueType.ToString()\n  commentId: M:System.ValueType.ToString\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n"}