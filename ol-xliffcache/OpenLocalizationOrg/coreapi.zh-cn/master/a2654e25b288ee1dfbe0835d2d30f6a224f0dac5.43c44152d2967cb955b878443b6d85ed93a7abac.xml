{"nodes":[{"pos":[512,532],"content":"TaskAwaiter<TResult>","needQuote":true,"nodes":[{"content":"TaskAwaiter&lt;TResult&gt;","pos":[0,20],"source":"TaskAwaiter<TResult>"}]},{"content":"\\n&lt;p&gt;The result for the task.&lt;/p&gt;\\n","pos":[1571,1606],"source":"\\n<p>The result for the task.</p>\\n"},{"pos":[2796,2807],"content":"IsCompleted","needQuote":true,"nodes":[{"content":"IsCompleted","pos":[0,11]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the task has completed; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[3565,3661],"source":"\\n<p>\\n<strong>true</strong> if the task has completed; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[4448,4459],"content":"GetResult()","needQuote":true,"nodes":[{"content":"GetResult()","pos":[0,11]}]},{"content":"\\n&lt;p&gt;The result of the completed task.&lt;/p&gt;\\n","pos":[5160,5204],"source":"\\n<p>The result of the completed task.</p>\\n"},{"content":"\\n&lt;p&gt;The task was canceled.&lt;/p&gt;\\n","pos":[5619,5652],"source":"\\n<p>The task was canceled.</p>\\n"},{"pos":[6415,6434],"content":"OnCompleted(Action)","needQuote":true,"nodes":[{"content":"OnCompleted(Action)","pos":[0,19]}]},{"content":"\\n&lt;p&gt;The action to perform when the wait operation completes.&lt;/p&gt;\\n","pos":[7430,7497],"source":"\\n<p>The action to perform when the wait operation completes.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;continuation&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[7616,7676],"source":"\\n<p>\\n<em>continuation</em> is <strong>null</strong>.</p>\\n"},{"pos":[8623,8648],"content":"UnsafeOnCompleted(Action)","needQuote":true,"nodes":[{"content":"UnsafeOnCompleted(Action)","pos":[0,25]}]},{"content":"\\n&lt;p&gt;The action to invoke when the await operation completes.&lt;/p&gt;\\n","pos":[9548,9615],"source":"\\n<p>The action to invoke when the await operation completes.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;continuation&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[9734,9794],"source":"\\n<p>\\n<em>continuation</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The awaiter was not properly initialized.&lt;/p&gt;\\n","pos":[9907,9959],"source":"\\n<p>The awaiter was not properly initialized.</p>\\n"},{"pos":[10585,10616],"content":"System.Runtime.CompilerServices","needQuote":true,"nodes":[{"content":"System.Runtime.CompilerServices","pos":[0,31]}]},{"pos":[10891,10916],"content":"ICriticalNotifyCompletion","needQuote":true,"nodes":[{"content":"ICriticalNotifyCompletion","pos":[0,25]}]},{"pos":[11229,11246],"content":"INotifyCompletion","needQuote":true,"nodes":[{"content":"INotifyCompletion","pos":[0,17]}]},{"pos":[11508,11522],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[11647,11653],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[11702,11703],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11753,11759],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11819,11820],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11906,11912],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[11961,11962],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12012,12018],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12078,12079],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12282,12295],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[12402,12413],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[12467,12468],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12495,12496],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12572,12583],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[12637,12638],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12665,12666],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12855,12865],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[12966,12974],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[13025,13026],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13053,13054],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13127,13135],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[13186,13187],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13214,13215],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13418,13440],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[13588,13594],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[13661,13662],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13712,13718],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[13779,13780]},{"pos":[13835,13841],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13901,13902],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13999,14005],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[14072,14073],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14123,14129],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[14190,14191]},{"pos":[14246,14252],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14312,14313],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14558,14589],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[14755,14770],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[14846,14847],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14897,14903],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[14964,14965]},{"pos":[15020,15026],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15086,15087],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15193,15208],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[15284,15285],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15335,15341],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[15402,15403]},{"pos":[15458,15464],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15524,15525],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15751,15760],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[15853,15860],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[15928,15929],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15956,15957],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16026,16033],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[16101,16102],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16129,16130],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16286,16295],"content":"ValueType","needQuote":true,"nodes":[{"content":"ValueType","pos":[0,9]}]},{"pos":[16449,16455],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16576,16582],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[16714,16721],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[16852,16859],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[16972,16979],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[17195,17214],"content":"OnCompleted(Action)","needQuote":true,"nodes":[{"content":"OnCompleted(Action)","pos":[0,19]}]},{"pos":[17415,17426],"content":"OnCompleted","needQuote":true,"nodes":[{"content":"OnCompleted","pos":[0,11]}]},{"pos":[17513,17514],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17564,17570],"content":"Action","needQuote":true,"nodes":[{"content":"Action","pos":[0,6]}]},{"pos":[17630,17631],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17755,17766],"content":"OnCompleted","needQuote":true,"nodes":[{"content":"OnCompleted","pos":[0,11]}]},{"pos":[17853,17854],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17904,17910],"content":"Action","needQuote":true,"nodes":[{"content":"Action","pos":[0,6]}]},{"pos":[17970,17971],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18200,18206],"content":"Action","needQuote":true,"nodes":[{"content":"Action","pos":[0,6]}]},{"pos":[18478,18503],"content":"UnsafeOnCompleted(Action)","needQuote":true,"nodes":[{"content":"UnsafeOnCompleted(Action)","pos":[0,25]}]},{"pos":[18732,18749],"content":"UnsafeOnCompleted","needQuote":true,"nodes":[{"content":"UnsafeOnCompleted","pos":[0,17]}]},{"pos":[18850,18851],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18901,18907],"content":"Action","needQuote":true,"nodes":[{"content":"Action","pos":[0,6]}]},{"pos":[18967,18968],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19106,19123],"content":"UnsafeOnCompleted","needQuote":true,"nodes":[{"content":"UnsafeOnCompleted","pos":[0,17]}]},{"pos":[19224,19225],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19275,19281],"content":"Action","needQuote":true,"nodes":[{"content":"Action","pos":[0,6]}]},{"pos":[19341,19342],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19598,19620],"content":"NullReferenceException","needQuote":true,"nodes":[{"content":"NullReferenceException","pos":[0,22]}]},{"pos":[19827,19848],"content":"TaskCanceledException","needQuote":true,"nodes":[{"content":"TaskCanceledException","pos":[0,21]}]},{"pos":[20073,20082],"content":"Exception","needQuote":true,"nodes":[{"content":"Exception","pos":[0,9]}]},{"pos":[20234,20255],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[20464,20489],"content":"InvalidOperationException","needQuote":true,"nodes":[{"content":"InvalidOperationException","pos":[0,25]}]}],"content":"items:\n- uid: System.Runtime.CompilerServices.TaskAwaiter`1\n  commentId: T:System.Runtime.CompilerServices.TaskAwaiter`1\n  id: TaskAwaiter`1\n  parent: System.Runtime.CompilerServices\n  children:\n  - System.Runtime.CompilerServices.TaskAwaiter`1.GetResult\n  - System.Runtime.CompilerServices.TaskAwaiter`1.IsCompleted\n  - System.Runtime.CompilerServices.TaskAwaiter`1.OnCompleted(System.Action)\n  - System.Runtime.CompilerServices.TaskAwaiter`1.UnsafeOnCompleted(System.Action)\n  langs:\n  - csharp\n  - vb\n  name: TaskAwaiter<TResult>\n  fullName: System.Runtime.CompilerServices.TaskAwaiter<TResult>\n  type: Struct\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/CompilerServices/TaskAwaiter.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: TaskAwaiter\n    path: src/mscorlib/src/System/Runtime/CompilerServices/TaskAwaiter.cs\n    startLine: 296\n  assemblies:\n  - System.Threading.Tasks\n  namespace: System.Runtime.CompilerServices\n  summary: \"\\n<p>Represents an object that waits for the completion of an asynchronous task and provides a parameter for the result.</p>\\n\"\n  syntax:\n    content: >-\n      [HostProtection(Synchronization = true, ExternalThreading = true)]\n\n      public struct TaskAwaiter<TResult> : ICriticalNotifyCompletion, INotifyCompletion\n    content.vb: >-\n      <HostProtection(Synchronization:=True, ExternalThreading:=True)>\n\n      Public Structure TaskAwaiter(Of TResult)\n          Implements ICriticalNotifyCompletion, INotifyCompletion\n    typeParameters:\n    - id: TResult\n      description: \"\\n<p>The result for the task.</p>\\n\"\n  implements:\n  - System.Runtime.CompilerServices.ICriticalNotifyCompletion\n  - System.Runtime.CompilerServices.INotifyCompletion\n  inheritedMembers:\n  - System.ValueType.Equals(System.Object)\n  - System.ValueType.GetHashCode\n  - System.ValueType.ToString\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  attributes:\n  - type: System.Runtime.InteropServices.StructLayoutAttribute\n    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)\n    arguments:\n    - type: System.Runtime.InteropServices.LayoutKind\n      value: 0\n  modifiers.csharp:\n  - public\n  - struct\n  modifiers.vb:\n  - Public\n  - Structure\n  fullName.vb: System.Runtime.CompilerServices.TaskAwaiter(Of TResult)\n  name.vb: TaskAwaiter(Of TResult)\n  nameWithType: TaskAwaiter<TResult>\n  nameWithType.vb: TaskAwaiter(Of TResult)\n- uid: System.Runtime.CompilerServices.TaskAwaiter`1.IsCompleted\n  commentId: P:System.Runtime.CompilerServices.TaskAwaiter`1.IsCompleted\n  id: IsCompleted\n  parent: System.Runtime.CompilerServices.TaskAwaiter`1\n  langs:\n  - csharp\n  - vb\n  name: IsCompleted\n  fullName: System.Runtime.CompilerServices.TaskAwaiter<TResult>.IsCompleted\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/CompilerServices/TaskAwaiter.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: IsCompleted\n    path: src/mscorlib/src/System/Runtime/CompilerServices/TaskAwaiter.cs\n    startLine: 313\n  assemblies:\n  - System.Threading.Tasks\n  namespace: System.Runtime.CompilerServices\n  summary: \"\\n<p>Gets a value that indicates whether the asynchronous task has completed.</p>\\n\"\n  syntax:\n    content: public bool IsCompleted { get; }\n    content.vb: Public ReadOnly Property IsCompleted As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the task has completed; otherwise, <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.NullReferenceException\n    commentId: T:System.NullReferenceException\n    description: \"\\n<p>The <xref href=\\\"System.Runtime.CompilerServices.TaskAwaiter`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object was not properly initialized.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  fullName.vb: System.Runtime.CompilerServices.TaskAwaiter(Of TResult).IsCompleted\n  nameWithType: TaskAwaiter<TResult>.IsCompleted\n  nameWithType.vb: TaskAwaiter(Of TResult).IsCompleted\n- uid: System.Runtime.CompilerServices.TaskAwaiter`1.GetResult\n  commentId: M:System.Runtime.CompilerServices.TaskAwaiter`1.GetResult\n  id: GetResult\n  parent: System.Runtime.CompilerServices.TaskAwaiter`1\n  langs:\n  - csharp\n  - vb\n  name: GetResult()\n  fullName: System.Runtime.CompilerServices.TaskAwaiter<TResult>.GetResult()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/CompilerServices/TaskAwaiter.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetResult\n    path: src/mscorlib/src/System/Runtime/CompilerServices/TaskAwaiter.cs\n    startLine: 345\n  assemblies:\n  - System.Threading.Tasks\n  namespace: System.Runtime.CompilerServices\n  summary: \"\\n<p>Ends the wait for the completion of the asynchronous task.</p>\\n\"\n  syntax:\n    content: public TResult GetResult()\n    content.vb: Public Function GetResult As TResult\n    return:\n      type: '{TResult}'\n      description: \"\\n<p>The result of the completed task.</p>\\n\"\n  exceptions:\n  - type: System.NullReferenceException\n    commentId: T:System.NullReferenceException\n    description: \"\\n<p>The <xref href=\\\"System.Runtime.CompilerServices.TaskAwaiter`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object was not properly initialized.</p>\\n\"\n  - type: System.Threading.Tasks.TaskCanceledException\n    commentId: T:System.Threading.Tasks.TaskCanceledException\n    description: \"\\n<p>The task was canceled.</p>\\n\"\n  - type: System.Exception\n    commentId: T:System.Exception\n    description: \"\\n<p>The task completed in a <xref href=\\\"System.Threading.Tasks.TaskStatus.Faulted\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> state.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Runtime.CompilerServices.TaskAwaiter(Of TResult).GetResult()\n  nameWithType: TaskAwaiter<TResult>.GetResult()\n  nameWithType.vb: TaskAwaiter(Of TResult).GetResult()\n- uid: System.Runtime.CompilerServices.TaskAwaiter`1.OnCompleted(System.Action)\n  commentId: M:System.Runtime.CompilerServices.TaskAwaiter`1.OnCompleted(System.Action)\n  id: OnCompleted(System.Action)\n  parent: System.Runtime.CompilerServices.TaskAwaiter`1\n  langs:\n  - csharp\n  - vb\n  name: OnCompleted(Action)\n  fullName: System.Runtime.CompilerServices.TaskAwaiter<TResult>.OnCompleted(System.Action)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/CompilerServices/TaskAwaiter.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: OnCompleted\n    path: src/mscorlib/src/System/Runtime/CompilerServices/TaskAwaiter.cs\n    startLine: 323\n  assemblies:\n  - System.Threading.Tasks\n  namespace: System.Runtime.CompilerServices\n  summary: \"\\n<p>Sets the action to perform when the <xref href=\\\"System.Runtime.CompilerServices.TaskAwaiter`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object stops waiting for the asynchronous task to complete.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public void OnCompleted(Action continuation)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Sub OnCompleted(continuation As Action)\n    parameters:\n    - id: continuation\n      type: System.Action\n      description: \"\\n<p>The action to perform when the wait operation completes.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>continuation</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.NullReferenceException\n    commentId: T:System.NullReferenceException\n    description: \"\\n<p>The <xref href=\\\"System.Runtime.CompilerServices.TaskAwaiter`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object was not properly initialized.</p>\\n\"\n  implements:\n  - System.Runtime.CompilerServices.INotifyCompletion.OnCompleted(System.Action)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Runtime.CompilerServices.TaskAwaiter(Of TResult).OnCompleted(System.Action)\n  nameWithType: TaskAwaiter<TResult>.OnCompleted(Action)\n  nameWithType.vb: TaskAwaiter(Of TResult).OnCompleted(Action)\n- uid: System.Runtime.CompilerServices.TaskAwaiter`1.UnsafeOnCompleted(System.Action)\n  commentId: M:System.Runtime.CompilerServices.TaskAwaiter`1.UnsafeOnCompleted(System.Action)\n  id: UnsafeOnCompleted(System.Action)\n  parent: System.Runtime.CompilerServices.TaskAwaiter`1\n  langs:\n  - csharp\n  - vb\n  name: UnsafeOnCompleted(Action)\n  fullName: System.Runtime.CompilerServices.TaskAwaiter<TResult>.UnsafeOnCompleted(System.Action)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/CompilerServices/TaskAwaiter.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: UnsafeOnCompleted\n    path: src/mscorlib/src/System/Runtime/CompilerServices/TaskAwaiter.cs\n    startLine: 334\n  assemblies:\n  - System.Threading.Tasks\n  namespace: System.Runtime.CompilerServices\n  summary: \"\\n<p>Schedules the continuation action for the asynchronous task associated with this awaiter.</p>\\n\"\n  syntax:\n    content: >-\n      [SecurityCritical]\n\n      public void UnsafeOnCompleted(Action continuation)\n    content.vb: >-\n      <SecurityCritical>\n\n      Public Sub UnsafeOnCompleted(continuation As Action)\n    parameters:\n    - id: continuation\n      type: System.Action\n      description: \"\\n<p>The action to invoke when the await operation completes.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>continuation</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The awaiter was not properly initialized.</p>\\n\"\n  implements:\n  - System.Runtime.CompilerServices.ICriticalNotifyCompletion.UnsafeOnCompleted(System.Action)\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n    ctor: System.Security.SecurityCriticalAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Runtime.CompilerServices.TaskAwaiter(Of TResult).UnsafeOnCompleted(System.Action)\n  nameWithType: TaskAwaiter<TResult>.UnsafeOnCompleted(Action)\n  nameWithType.vb: TaskAwaiter(Of TResult).UnsafeOnCompleted(Action)\nreferences:\n- uid: System.Runtime.CompilerServices\n  isExternal: false\n  name: System.Runtime.CompilerServices\n  fullName: System.Runtime.CompilerServices\n  nameWithType: System.Runtime.CompilerServices\n  commentId: N:System.Runtime.CompilerServices\n- uid: System.Runtime.CompilerServices.ICriticalNotifyCompletion\n  parent: System.Runtime.CompilerServices\n  isExternal: false\n  name: ICriticalNotifyCompletion\n  fullName: System.Runtime.CompilerServices.ICriticalNotifyCompletion\n  nameWithType: ICriticalNotifyCompletion\n  commentId: T:System.Runtime.CompilerServices.ICriticalNotifyCompletion\n- uid: System.Runtime.CompilerServices.INotifyCompletion\n  parent: System.Runtime.CompilerServices\n  isExternal: false\n  name: INotifyCompletion\n  fullName: System.Runtime.CompilerServices.INotifyCompletion\n  nameWithType: INotifyCompletion\n  commentId: T:System.Runtime.CompilerServices.INotifyCompletion\n- uid: System.ValueType.Equals(System.Object)\n  parent: System.ValueType\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.ValueType.Equals(System.Object)\n  spec.csharp:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: ValueType.Equals(Object)\n  commentId: M:System.ValueType.Equals(System.Object)\n- uid: System.ValueType.GetHashCode\n  parent: System.ValueType\n  isExternal: false\n  name: GetHashCode()\n  fullName: System.ValueType.GetHashCode()\n  spec.csharp:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ValueType.GetHashCode()\n  commentId: M:System.ValueType.GetHashCode\n- uid: System.ValueType.ToString\n  parent: System.ValueType\n  isExternal: false\n  name: ToString()\n  fullName: System.ValueType.ToString()\n  spec.csharp:\n  - uid: System.ValueType.ToString\n    name: ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.ToString\n    name: ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ValueType.ToString()\n  commentId: M:System.ValueType.ToString\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  fullName: System.ValueType\n  nameWithType: ValueType\n  commentId: T:System.ValueType\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: '{TResult}'\n  definition: TResult\n  name: TResult\n  fullName: TResult\n  nameWithType: TResult\n  commentId: '!:TResult'\n- uid: TResult\n  isExternal: false\n  name: TResult\n  fullName: TResult\n  nameWithType: TResult\n- uid: System.Runtime.CompilerServices.INotifyCompletion.OnCompleted(System.Action)\n  parent: System.Runtime.CompilerServices.INotifyCompletion\n  isExternal: true\n  name: OnCompleted(Action)\n  fullName: System.Runtime.CompilerServices.INotifyCompletion.OnCompleted(System.Action)\n  spec.csharp:\n  - uid: System.Runtime.CompilerServices.INotifyCompletion.OnCompleted(System.Action)\n    name: OnCompleted\n    fullName: System.Runtime.CompilerServices.INotifyCompletion.OnCompleted\n  - name: (\n    fullName: (\n  - uid: System.Action\n    name: Action\n    fullName: System.Action\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.CompilerServices.INotifyCompletion.OnCompleted(System.Action)\n    name: OnCompleted\n    fullName: System.Runtime.CompilerServices.INotifyCompletion.OnCompleted\n  - name: (\n    fullName: (\n  - uid: System.Action\n    name: Action\n    fullName: System.Action\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: INotifyCompletion.OnCompleted(Action)\n  commentId: M:System.Runtime.CompilerServices.INotifyCompletion.OnCompleted(System.Action)\n- uid: System.Action\n  parent: System\n  isExternal: false\n  name: Action\n  fullName: System.Action\n  nameWithType: Action\n  commentId: T:System.Action\n- uid: System.Runtime.CompilerServices.ICriticalNotifyCompletion.UnsafeOnCompleted(System.Action)\n  parent: System.Runtime.CompilerServices.ICriticalNotifyCompletion\n  isExternal: true\n  name: UnsafeOnCompleted(Action)\n  fullName: System.Runtime.CompilerServices.ICriticalNotifyCompletion.UnsafeOnCompleted(System.Action)\n  spec.csharp:\n  - uid: System.Runtime.CompilerServices.ICriticalNotifyCompletion.UnsafeOnCompleted(System.Action)\n    name: UnsafeOnCompleted\n    fullName: System.Runtime.CompilerServices.ICriticalNotifyCompletion.UnsafeOnCompleted\n  - name: (\n    fullName: (\n  - uid: System.Action\n    name: Action\n    fullName: System.Action\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.CompilerServices.ICriticalNotifyCompletion.UnsafeOnCompleted(System.Action)\n    name: UnsafeOnCompleted\n    fullName: System.Runtime.CompilerServices.ICriticalNotifyCompletion.UnsafeOnCompleted\n  - name: (\n    fullName: (\n  - uid: System.Action\n    name: Action\n    fullName: System.Action\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: ICriticalNotifyCompletion.UnsafeOnCompleted(Action)\n  commentId: M:System.Runtime.CompilerServices.ICriticalNotifyCompletion.UnsafeOnCompleted(System.Action)\n- uid: System.NullReferenceException\n  isExternal: false\n  name: NullReferenceException\n  fullName: System.NullReferenceException\n  nameWithType: NullReferenceException\n  commentId: T:System.NullReferenceException\n- uid: System.Threading.Tasks.TaskCanceledException\n  isExternal: false\n  name: TaskCanceledException\n  fullName: System.Threading.Tasks.TaskCanceledException\n  nameWithType: TaskCanceledException\n  commentId: T:System.Threading.Tasks.TaskCanceledException\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  fullName: System.Exception\n  commentId: T:System.Exception\n  nameWithType: Exception\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  fullName: System.InvalidOperationException\n  nameWithType: InvalidOperationException\n  commentId: T:System.InvalidOperationException\n"}