{"nodes":[{"pos":[523,541],"content":"EventSourceOptions","needQuote":true,"nodes":[{"content":"EventSourceOptions","pos":[0,18]}]},{"pos":[2368,2383],"content":"ActivityOptions","needQuote":true,"nodes":[{"content":"ActivityOptions","pos":[0,15]}]},{"pos":[3710,3718],"content":"Keywords","needQuote":true,"nodes":[{"content":"Keywords","pos":[0,8]}]},{"content":"\\n&lt;p&gt;The keywords applied to the event, or &lt;strong&gt;None&lt;/strong&gt; if no keywords are set.&lt;/p&gt;\\n","pos":[4580,4674],"source":"\\n<p>The keywords applied to the event, or <strong>None</strong> if no keywords are set.</p>\\n"},{"pos":[5023,5028],"content":"Level","needQuote":true,"nodes":[{"content":"Level","pos":[0,5]}]},{"content":"\\n&lt;p&gt;The event level for the event.","pos":[5792,5827],"source":"\\n<p>The event level for the event."},{"content":"If not set, the default is Verbose (5).&lt;/p&gt;\\n","pos":[5828,5873],"source":" If not set, the default is Verbose (5).</p>\\n"},{"pos":[6222,6228],"content":"Opcode","needQuote":true,"nodes":[{"content":"Opcode","pos":[0,6]}]},{"content":"\\n&lt;p&gt;The operation code to use for the specified event.","pos":[7012,7067],"source":"\\n<p>The operation code to use for the specified event."},{"content":"If not set, the default is &lt;strong&gt;Info&lt;/strong&gt; (0).&lt;/p&gt;\\n","pos":[7068,7127],"source":" If not set, the default is <strong>Info</strong> (0).</p>\\n"},{"pos":[7471,7475],"content":"Tags","needQuote":true,"nodes":[{"content":"Tags","pos":[0,4]}]},{"pos":[8532,8558],"content":"System.Diagnostics.Tracing","needQuote":true,"nodes":[{"content":"System.Diagnostics.Tracing","pos":[0,26]}]},{"pos":[8783,8797],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[8922,8928],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[8977,8978],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9028,9034],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9094,9095],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9181,9187],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[9236,9237],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9287,9293],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9353,9354],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9557,9570],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[9677,9688],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[9742,9743],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9770,9771],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9847,9858],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[9912,9913],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9940,9941],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10130,10140],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[10241,10249],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[10300,10301],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10328,10329],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10402,10410],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[10461,10462],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10489,10490],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10693,10715],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[10863,10869],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[10936,10937],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10987,10993],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[11054,11055]},{"pos":[11110,11116],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11176,11177],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11274,11280],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[11347,11348],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11398,11404],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[11465,11466]},{"pos":[11521,11527],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11587,11588],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11833,11864],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[12030,12045],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[12121,12122],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12172,12178],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[12239,12240]},{"pos":[12295,12301],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12361,12362],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12468,12483],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[12559,12560],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12610,12616],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[12677,12678]},{"pos":[12733,12739],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12799,12800],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13026,13035],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[13128,13135],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[13203,13204],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13231,13232],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13301,13308],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[13376,13377],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13404,13405],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13561,13570],"content":"ValueType","needQuote":true,"nodes":[{"content":"ValueType","pos":[0,9]}]},{"pos":[13724,13730],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13851,13857],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[14042,14062],"content":"EventActivityOptions","needQuote":true,"nodes":[{"content":"EventActivityOptions","pos":[0,20]}]},{"pos":[14336,14349],"content":"EventKeywords","needQuote":true,"nodes":[{"content":"EventKeywords","pos":[0,13]}]},{"pos":[14599,14609],"content":"EventLevel","needQuote":true,"nodes":[{"content":"EventLevel","pos":[0,10]}]},{"pos":[14851,14862],"content":"EventOpcode","needQuote":true,"nodes":[{"content":"EventOpcode","pos":[0,11]}]},{"pos":[15105,15114],"content":"EventTags","needQuote":true,"nodes":[{"content":"EventTags","pos":[0,9]}]}],"content":"items:\n- uid: System.Diagnostics.Tracing.EventSourceOptions\n  commentId: T:System.Diagnostics.Tracing.EventSourceOptions\n  id: EventSourceOptions\n  parent: System.Diagnostics.Tracing\n  children:\n  - System.Diagnostics.Tracing.EventSourceOptions.ActivityOptions\n  - System.Diagnostics.Tracing.EventSourceOptions.Keywords\n  - System.Diagnostics.Tracing.EventSourceOptions.Level\n  - System.Diagnostics.Tracing.EventSourceOptions.Opcode\n  - System.Diagnostics.Tracing.EventSourceOptions.Tags\n  langs:\n  - csharp\n  - vb\n  name: EventSourceOptions\n  fullName: System.Diagnostics.Tracing.EventSourceOptions\n  type: Struct\n  source:\n    remote:\n      path: src/mscorlib/src/System/Diagnostics/Eventing/TraceLogging/EventSourceOptions.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: EventSourceOptions\n    path: src/mscorlib/src/System/Diagnostics/Eventing/TraceLogging/EventSourceOptions.cs\n    startLine: 17\n  assemblies:\n  - System.Diagnostics.Tracing\n  namespace: System.Diagnostics.Tracing\n  summary: \"\\n<p>Specifies overrides of default event settings such as the log level, keywords and operation code when the <xref href=\\\"System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions,``0)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method is called.</p>\\n\"\n  syntax:\n    content: public struct EventSourceOptions\n    content.vb: Public Structure EventSourceOptions\n  inheritedMembers:\n  - System.ValueType.Equals(System.Object)\n  - System.ValueType.GetHashCode\n  - System.ValueType.ToString\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  attributes:\n  - type: System.Runtime.InteropServices.StructLayoutAttribute\n    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)\n    arguments:\n    - type: System.Runtime.InteropServices.LayoutKind\n      value: 0\n  modifiers.csharp:\n  - public\n  - struct\n  modifiers.vb:\n  - Public\n  - Structure\n  nameWithType: EventSourceOptions\n- uid: System.Diagnostics.Tracing.EventSourceOptions.ActivityOptions\n  commentId: P:System.Diagnostics.Tracing.EventSourceOptions.ActivityOptions\n  id: ActivityOptions\n  parent: System.Diagnostics.Tracing.EventSourceOptions\n  langs:\n  - csharp\n  - vb\n  name: ActivityOptions\n  fullName: System.Diagnostics.Tracing.EventSourceOptions.ActivityOptions\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Diagnostics/Eventing/TraceLogging/EventSourceOptions.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ActivityOptions\n    path: src/mscorlib/src/System/Diagnostics/Eventing/TraceLogging/EventSourceOptions.cs\n    startLine: 116\n  assemblies:\n  - System.Diagnostics.Tracing\n  namespace: System.Diagnostics.Tracing\n  summary: \"\\n<p>The activity options defined for this event source.</p>\\n\"\n  syntax:\n    content: public EventActivityOptions ActivityOptions { get; set; }\n    content.vb: Public Property ActivityOptions As EventActivityOptions\n    parameters: []\n    return:\n      type: System.Diagnostics.Tracing.EventActivityOptions\n      description: \"\\n<p>Returns <xref href=\\\"System.Diagnostics.Tracing.EventActivityOptions\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: EventSourceOptions.ActivityOptions\n- uid: System.Diagnostics.Tracing.EventSourceOptions.Keywords\n  commentId: P:System.Diagnostics.Tracing.EventSourceOptions.Keywords\n  id: Keywords\n  parent: System.Diagnostics.Tracing.EventSourceOptions\n  langs:\n  - csharp\n  - vb\n  name: Keywords\n  fullName: System.Diagnostics.Tracing.EventSourceOptions.Keywords\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Diagnostics/Eventing/TraceLogging/EventSourceOptions.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Keywords\n    path: src/mscorlib/src/System/Diagnostics/Eventing/TraceLogging/EventSourceOptions.cs\n    startLine: 80\n  assemblies:\n  - System.Diagnostics.Tracing\n  namespace: System.Diagnostics.Tracing\n  summary: \"\\n<p>Gets or sets the keywords applied to the event. If this property is not set, the event’s keywords will be <strong>None</strong>.</p>\\n\"\n  syntax:\n    content: public EventKeywords Keywords { get; set; }\n    content.vb: Public Property Keywords As EventKeywords\n    parameters: []\n    return:\n      type: System.Diagnostics.Tracing.EventKeywords\n      description: \"\\n<p>The keywords applied to the event, or <strong>None</strong> if no keywords are set.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: EventSourceOptions.Keywords\n- uid: System.Diagnostics.Tracing.EventSourceOptions.Level\n  commentId: P:System.Diagnostics.Tracing.EventSourceOptions.Level\n  id: Level\n  parent: System.Diagnostics.Tracing.EventSourceOptions\n  langs:\n  - csharp\n  - vb\n  name: Level\n  fullName: System.Diagnostics.Tracing.EventSourceOptions.Level\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Diagnostics/Eventing/TraceLogging/EventSourceOptions.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Level\n    path: src/mscorlib/src/System/Diagnostics/Eventing/TraceLogging/EventSourceOptions.cs\n    startLine: 36\n  assemblies:\n  - System.Diagnostics.Tracing\n  namespace: System.Diagnostics.Tracing\n  summary: \"\\n<p>Gets or sets the event level applied to the event. </p>\\n\"\n  syntax:\n    content: public EventLevel Level { get; set; }\n    content.vb: Public Property Level As EventLevel\n    parameters: []\n    return:\n      type: System.Diagnostics.Tracing.EventLevel\n      description: \"\\n<p>The event level for the event. If not set, the default is Verbose (5).</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: EventSourceOptions.Level\n- uid: System.Diagnostics.Tracing.EventSourceOptions.Opcode\n  commentId: P:System.Diagnostics.Tracing.EventSourceOptions.Opcode\n  id: Opcode\n  parent: System.Diagnostics.Tracing.EventSourceOptions\n  langs:\n  - csharp\n  - vb\n  name: Opcode\n  fullName: System.Diagnostics.Tracing.EventSourceOptions.Opcode\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Diagnostics/Eventing/TraceLogging/EventSourceOptions.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Opcode\n    path: src/mscorlib/src/System/Diagnostics/Eventing/TraceLogging/EventSourceOptions.cs\n    startLine: 54\n  assemblies:\n  - System.Diagnostics.Tracing\n  namespace: System.Diagnostics.Tracing\n  summary: \"\\n<p>Gets or sets the operation code to use for the specified event. </p>\\n\"\n  syntax:\n    content: public EventOpcode Opcode { get; set; }\n    content.vb: Public Property Opcode As EventOpcode\n    parameters: []\n    return:\n      type: System.Diagnostics.Tracing.EventOpcode\n      description: \"\\n<p>The operation code to use for the specified event. If not set, the default is <strong>Info</strong> (0).</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: EventSourceOptions.Opcode\n- uid: System.Diagnostics.Tracing.EventSourceOptions.Tags\n  commentId: P:System.Diagnostics.Tracing.EventSourceOptions.Tags\n  id: Tags\n  parent: System.Diagnostics.Tracing.EventSourceOptions\n  langs:\n  - csharp\n  - vb\n  name: Tags\n  fullName: System.Diagnostics.Tracing.EventSourceOptions.Tags\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Diagnostics/Eventing/TraceLogging/EventSourceOptions.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Tags\n    path: src/mscorlib/src/System/Diagnostics/Eventing/TraceLogging/EventSourceOptions.cs\n    startLine: 98\n  assemblies:\n  - System.Diagnostics.Tracing\n  namespace: System.Diagnostics.Tracing\n  summary: \"\\n<p>The event tags defined for this event source.</p>\\n\"\n  syntax:\n    content: public EventTags Tags { get; set; }\n    content.vb: Public Property Tags As EventTags\n    parameters: []\n    return:\n      type: System.Diagnostics.Tracing.EventTags\n      description: \"\\n<p>Returns <xref href=\\\"System.Diagnostics.Tracing.EventTags\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: EventSourceOptions.Tags\nreferences:\n- uid: System.Diagnostics.Tracing\n  isExternal: false\n  name: System.Diagnostics.Tracing\n  fullName: System.Diagnostics.Tracing\n  nameWithType: System.Diagnostics.Tracing\n  commentId: N:System.Diagnostics.Tracing\n- uid: System.ValueType.Equals(System.Object)\n  parent: System.ValueType\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.ValueType.Equals(System.Object)\n  spec.csharp:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: ValueType.Equals(Object)\n  commentId: M:System.ValueType.Equals(System.Object)\n- uid: System.ValueType.GetHashCode\n  parent: System.ValueType\n  isExternal: false\n  name: GetHashCode()\n  fullName: System.ValueType.GetHashCode()\n  spec.csharp:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ValueType.GetHashCode()\n  commentId: M:System.ValueType.GetHashCode\n- uid: System.ValueType.ToString\n  parent: System.ValueType\n  isExternal: false\n  name: ToString()\n  fullName: System.ValueType.ToString()\n  spec.csharp:\n  - uid: System.ValueType.ToString\n    name: ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.ToString\n    name: ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ValueType.ToString()\n  commentId: M:System.ValueType.ToString\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  fullName: System.ValueType\n  nameWithType: ValueType\n  commentId: T:System.ValueType\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Diagnostics.Tracing.EventActivityOptions\n  parent: System.Diagnostics.Tracing\n  isExternal: false\n  name: EventActivityOptions\n  fullName: System.Diagnostics.Tracing.EventActivityOptions\n  nameWithType: EventActivityOptions\n  commentId: T:System.Diagnostics.Tracing.EventActivityOptions\n- uid: System.Diagnostics.Tracing.EventKeywords\n  parent: System.Diagnostics.Tracing\n  isExternal: false\n  name: EventKeywords\n  fullName: System.Diagnostics.Tracing.EventKeywords\n  nameWithType: EventKeywords\n  commentId: T:System.Diagnostics.Tracing.EventKeywords\n- uid: System.Diagnostics.Tracing.EventLevel\n  parent: System.Diagnostics.Tracing\n  isExternal: false\n  name: EventLevel\n  fullName: System.Diagnostics.Tracing.EventLevel\n  nameWithType: EventLevel\n  commentId: T:System.Diagnostics.Tracing.EventLevel\n- uid: System.Diagnostics.Tracing.EventOpcode\n  parent: System.Diagnostics.Tracing\n  isExternal: false\n  name: EventOpcode\n  fullName: System.Diagnostics.Tracing.EventOpcode\n  nameWithType: EventOpcode\n  commentId: T:System.Diagnostics.Tracing.EventOpcode\n- uid: System.Diagnostics.Tracing.EventTags\n  parent: System.Diagnostics.Tracing\n  isExternal: false\n  name: EventTags\n  fullName: System.Diagnostics.Tracing.EventTags\n  nameWithType: EventTags\n  commentId: T:System.Diagnostics.Tracing.EventTags\n"}