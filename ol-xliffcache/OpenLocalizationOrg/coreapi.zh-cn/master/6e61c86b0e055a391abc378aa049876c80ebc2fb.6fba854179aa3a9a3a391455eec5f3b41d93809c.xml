{"nodes":[{"pos":[2177,2186],"content":"Rectangle","needQuote":true,"nodes":[{"content":"Rectangle","pos":[0,9]}]},{"pos":[3219,3224],"content":"Empty","needQuote":true,"nodes":[{"content":"Empty","pos":[0,5]}]},{"pos":[4397,4419],"content":"Rectangle(Point, Size)","needQuote":true,"nodes":[{"content":"Rectangle(Point, Size)","pos":[0,22]}]},{"pos":[6099,6136],"content":"Rectangle(Int32, Int32, Int32, Int32)","needQuote":true,"nodes":[{"content":"Rectangle(Int32, Int32, Int32, Int32)","pos":[0,37]}]},{"content":"\\n&lt;p&gt;The x-coordinate of the upper-left corner of the rectangle.","pos":[7035,7099],"source":"\\n<p>The x-coordinate of the upper-left corner of the rectangle."},{"content":"&lt;/p&gt;\\n","pos":[7100,7106],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The y-coordinate of the upper-left corner of the rectangle.","pos":[7165,7229],"source":"\\n<p>The y-coordinate of the upper-left corner of the rectangle."},{"content":"&lt;/p&gt;\\n","pos":[7230,7236],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The width of the rectangle.","pos":[7299,7331],"source":"\\n<p>The width of the rectangle."},{"content":"&lt;/p&gt;\\n","pos":[7332,7338],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The height of the rectangle.","pos":[7402,7435],"source":"\\n<p>The height of the rectangle."},{"content":"&lt;/p&gt;\\n","pos":[7436,7442],"source":" </p>\\n"},{"pos":[7735,7741],"content":"Bottom","needQuote":true,"nodes":[{"content":"Bottom","pos":[0,6]}]},{"pos":[9310,9316],"content":"Height","needQuote":true,"nodes":[{"content":"Height","pos":[0,6]}]},{"pos":[10479,10486],"content":"IsEmpty","needQuote":true,"nodes":[{"content":"IsEmpty","pos":[0,7]}]},{"pos":[12126,12130],"content":"Left","needQuote":true,"nodes":[{"content":"Left","pos":[0,4]}]},{"pos":[13315,13323],"content":"Location","needQuote":true,"nodes":[{"content":"Location","pos":[0,8]}]},{"pos":[14619,14624],"content":"Right","needQuote":true,"nodes":[{"content":"Right","pos":[0,5]}]},{"pos":[16176,16180],"content":"Size","needQuote":true,"nodes":[{"content":"Size","pos":[0,4]}]},{"pos":[17403,17406],"content":"Top","needQuote":true,"nodes":[{"content":"Top","pos":[0,3]}]},{"pos":[18575,18580],"content":"Width","needQuote":true,"nodes":[{"content":"Width","pos":[0,5]}]},{"pos":[19718,19719],"content":"X","needQuote":true,"nodes":[{"content":"X","pos":[0,1]}]},{"pos":[20901,20902],"content":"Y","needQuote":true,"nodes":[{"content":"Y","pos":[0,1]}]},{"pos":[22183,22202],"content":"Ceiling(RectangleF)","needQuote":true,"nodes":[{"content":"Ceiling(RectangleF)","pos":[0,19]}]},{"pos":[23940,23955],"content":"Contains(Point)","needQuote":true,"nodes":[{"content":"Contains(Point)","pos":[0,15]}]},{"pos":[25579,25598],"content":"Contains(Rectangle)","needQuote":true,"nodes":[{"content":"Contains(Rectangle)","pos":[0,19]}]},{"pos":[27320,27342],"content":"Contains(Int32, Int32)","needQuote":true,"nodes":[{"content":"Contains(Int32, Int32)","pos":[0,22]}]},{"content":"\\n&lt;p&gt;The x-coordinate of the point to test.","pos":[28214,28257],"source":"\\n<p>The x-coordinate of the point to test."},{"content":"&lt;/p&gt;\\n","pos":[28258,28264],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The y-coordinate of the point to test.","pos":[28323,28366],"source":"\\n<p>The y-coordinate of the point to test."},{"content":"&lt;/p&gt;\\n","pos":[28367,28373],"source":" </p>\\n"},{"pos":[29014,29028],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[31354,31390],"content":"FromLTRB(Int32, Int32, Int32, Int32)","needQuote":true,"nodes":[{"content":"FromLTRB(Int32, Int32, Int32, Int32)","pos":[0,36]}]},{"pos":[33669,33682],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"content":"\\n&lt;p&gt;An integer that represents the hash code for this rectangle.&lt;/p&gt;\\n","pos":[34565,34636],"source":"\\n<p>An integer that represents the hash code for this rectangle.</p>\\n"},{"pos":[35134,35166],"content":"Inflate(Rectangle, Int32, Int32)","needQuote":true,"nodes":[{"content":"Inflate(Rectangle, Int32, Int32)","pos":[0,32]}]},{"pos":[37353,37366],"content":"Inflate(Size)","needQuote":true,"nodes":[{"content":"Inflate(Size)","pos":[0,13]}]},{"content":"\\n&lt;p&gt;The amount to inflate this rectangle.","pos":[38127,38169],"source":"\\n<p>The amount to inflate this rectangle."},{"content":"&lt;/p&gt;\\n","pos":[38170,38176],"source":" </p>\\n"},{"pos":[38529,38550],"content":"Inflate(Int32, Int32)","needQuote":true,"nodes":[{"content":"Inflate(Int32, Int32)","pos":[0,21]}]},{"pos":[40047,40067],"content":"Intersect(Rectangle)","needQuote":true,"nodes":[{"content":"Intersect(Rectangle)","pos":[0,20]}]},{"pos":[41530,41561],"content":"Intersect(Rectangle, Rectangle)","needQuote":true,"nodes":[{"content":"Intersect(Rectangle, Rectangle)","pos":[0,31]}]},{"content":"\\n&lt;p&gt;A rectangle to intersect.","pos":[42699,42729],"source":"\\n<p>A rectangle to intersect."},{"content":"&lt;/p&gt;\\n","pos":[42730,42736],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A rectangle to intersect.","pos":[42807,42837],"source":"\\n<p>A rectangle to intersect."},{"content":"&lt;/p&gt;\\n","pos":[42838,42844],"source":" </p>\\n"},{"pos":[43486,43511],"content":"IntersectsWith(Rectangle)","needQuote":true,"nodes":[{"content":"IntersectsWith(Rectangle)","pos":[0,25]}]},{"content":"\\n&lt;p&gt;The rectangle to test.","pos":[44318,44345],"source":"\\n<p>The rectangle to test."},{"content":"&lt;/p&gt;\\n","pos":[44346,44352],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;This method returns &lt;strong&gt;true&lt;/strong&gt; if there is any intersection, otherwise &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[44413,44529],"source":"\\n<p>This method returns <strong>true</strong> if there is any intersection, otherwise <strong>false</strong>.</p>\\n"},{"pos":[44876,44889],"content":"Offset(Point)","needQuote":true,"nodes":[{"content":"Offset(Point)","pos":[0,13]}]},{"content":"\\n&lt;p&gt;Amount to offset the location.","pos":[45587,45622],"source":"\\n<p>Amount to offset the location."},{"content":"&lt;/p&gt;\\n","pos":[45623,45629],"source":" </p>\\n"},{"pos":[45979,45999],"content":"Offset(Int32, Int32)","needQuote":true,"nodes":[{"content":"Offset(Int32, Int32)","pos":[0,20]}]},{"content":"\\n&lt;p&gt;The horizontal offset.","pos":[46710,46737],"source":"\\n<p>The horizontal offset."},{"content":"&lt;/p&gt;\\n","pos":[46738,46744],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The vertical offset.","pos":[46803,46828],"source":"\\n<p>The vertical offset."},{"content":"&lt;/p&gt;\\n","pos":[46829,46835],"source":" </p>\\n"},{"pos":[47279,47309],"content":"Equality(Rectangle, Rectangle)","needQuote":true,"nodes":[{"content":"Equality(Rectangle, Rectangle)","pos":[0,30]}]},{"pos":[49687,49719],"content":"Inequality(Rectangle, Rectangle)","needQuote":true,"nodes":[{"content":"Inequality(Rectangle, Rectangle)","pos":[0,32]}]},{"pos":[52057,52074],"content":"Round(RectangleF)","needQuote":true,"nodes":[{"content":"Round(RectangleF)","pos":[0,17]}]},{"pos":[53726,53736],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[55130,55150],"content":"Truncate(RectangleF)","needQuote":true,"nodes":[{"content":"Truncate(RectangleF)","pos":[0,20]}]},{"pos":[56927,56954],"content":"Union(Rectangle, Rectangle)","needQuote":true,"nodes":[{"content":"Union(Rectangle, Rectangle)","pos":[0,27]}]},{"content":"\\n&lt;p&gt;A rectangle to union.","pos":[57962,57988],"source":"\\n<p>A rectangle to union."},{"content":"&lt;/p&gt;\\n","pos":[57989,57995],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A rectangle to union.","pos":[58066,58092],"source":"\\n<p>A rectangle to union."},{"content":"&lt;/p&gt;\\n","pos":[58093,58099],"source":" </p>\\n"},{"pos":[58605,58619],"content":"System.Drawing","needQuote":true,"nodes":[{"content":"System.Drawing","pos":[0,14]}]},{"pos":[58816,58838],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[58986,58992],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[59059,59060],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[59110,59116],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[59177,59178]},{"pos":[59233,59239],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[59299,59300],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[59397,59403],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[59470,59471],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[59521,59527],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[59588,59589]},{"pos":[59644,59650],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[59710,59711],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[59956,59987],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[60153,60168],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[60244,60245],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[60295,60301],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[60362,60363]},{"pos":[60418,60424],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[60484,60485],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[60591,60606],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[60682,60683],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[60733,60739],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[60800,60801]},{"pos":[60856,60862],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[60922,60923],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[61149,61158],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[61251,61258],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[61326,61327],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[61354,61355],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[61424,61431],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[61499,61500],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[61527,61528],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[61681,61687],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[61808,61814],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[61964,61973],"content":"Rectangle","needQuote":true,"nodes":[{"content":"Rectangle","pos":[0,9]}]},{"pos":[62158,62163],"content":"Point","needQuote":true,"nodes":[{"content":"Point","pos":[0,5]}]},{"pos":[62335,62339],"content":"Size","needQuote":true,"nodes":[{"content":"Size","pos":[0,4]}]},{"pos":[62493,62498],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[62641,62648],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[62816,62826],"content":"RectangleF","needQuote":true,"nodes":[{"content":"RectangleF","pos":[0,10]}]},{"pos":[63033,63047],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[63172,63178],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[63227,63228],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[63278,63284],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[63344,63345],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[63431,63437],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[63486,63487],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[63537,63543],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[63603,63604],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[63785,63794],"content":"ValueType","needQuote":true,"nodes":[{"content":"ValueType","pos":[0,9]}]},{"pos":[63973,63986],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[64093,64104],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[64158,64159],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[64186,64187],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[64263,64274],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[64328,64329],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[64356,64357],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[64546,64556],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[64657,64665],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[64716,64717],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[64744,64745],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[64818,64826],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[64877,64878],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[64905,64906],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[65067,65073],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"items:\n- uid: System.Drawing.Rectangle\n  commentId: T:System.Drawing.Rectangle\n  id: Rectangle\n  parent: System.Drawing\n  children:\n  - System.Drawing.Rectangle.#ctor(System.Drawing.Point,System.Drawing.Size)\n  - System.Drawing.Rectangle.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)\n  - System.Drawing.Rectangle.Bottom\n  - System.Drawing.Rectangle.Ceiling(System.Drawing.RectangleF)\n  - System.Drawing.Rectangle.Contains(System.Drawing.Point)\n  - System.Drawing.Rectangle.Contains(System.Drawing.Rectangle)\n  - System.Drawing.Rectangle.Contains(System.Int32,System.Int32)\n  - System.Drawing.Rectangle.Empty\n  - System.Drawing.Rectangle.Equals(System.Object)\n  - System.Drawing.Rectangle.FromLTRB(System.Int32,System.Int32,System.Int32,System.Int32)\n  - System.Drawing.Rectangle.GetHashCode\n  - System.Drawing.Rectangle.Height\n  - System.Drawing.Rectangle.Inflate(System.Drawing.Rectangle,System.Int32,System.Int32)\n  - System.Drawing.Rectangle.Inflate(System.Drawing.Size)\n  - System.Drawing.Rectangle.Inflate(System.Int32,System.Int32)\n  - System.Drawing.Rectangle.Intersect(System.Drawing.Rectangle)\n  - System.Drawing.Rectangle.Intersect(System.Drawing.Rectangle,System.Drawing.Rectangle)\n  - System.Drawing.Rectangle.IntersectsWith(System.Drawing.Rectangle)\n  - System.Drawing.Rectangle.IsEmpty\n  - System.Drawing.Rectangle.Left\n  - System.Drawing.Rectangle.Location\n  - System.Drawing.Rectangle.Offset(System.Drawing.Point)\n  - System.Drawing.Rectangle.Offset(System.Int32,System.Int32)\n  - System.Drawing.Rectangle.op_Equality(System.Drawing.Rectangle,System.Drawing.Rectangle)\n  - System.Drawing.Rectangle.op_Inequality(System.Drawing.Rectangle,System.Drawing.Rectangle)\n  - System.Drawing.Rectangle.Right\n  - System.Drawing.Rectangle.Round(System.Drawing.RectangleF)\n  - System.Drawing.Rectangle.Size\n  - System.Drawing.Rectangle.Top\n  - System.Drawing.Rectangle.ToString\n  - System.Drawing.Rectangle.Truncate(System.Drawing.RectangleF)\n  - System.Drawing.Rectangle.Union(System.Drawing.Rectangle,System.Drawing.Rectangle)\n  - System.Drawing.Rectangle.Width\n  - System.Drawing.Rectangle.X\n  - System.Drawing.Rectangle.Y\n  langs:\n  - csharp\n  - vb\n  name: Rectangle\n  fullName: System.Drawing.Rectangle\n  type: Struct\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Rectangle\n    path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs\n    startLine: 13\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Stores a set of four integers that represent the location and size of a rectangle</p>\\n\"\n  syntax:\n    content: public struct Rectangle\n    content.vb: Public Structure Rectangle\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  modifiers.csharp:\n  - public\n  - struct\n  modifiers.vb:\n  - Public\n  - Structure\n  nameWithType: Rectangle\n- uid: System.Drawing.Rectangle.Empty\n  commentId: F:System.Drawing.Rectangle.Empty\n  id: Empty\n  parent: System.Drawing.Rectangle\n  langs:\n  - csharp\n  - vb\n  name: Empty\n  fullName: System.Drawing.Rectangle.Empty\n  type: Field\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Empty\n    path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs\n    startLine: 15\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Represents a <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure with its properties left uninitialized.</p>\\n\"\n  syntax:\n    content: public static readonly Rectangle Empty\n    content.vb: Public Shared ReadOnly Empty As Rectangle\n    return:\n      type: System.Drawing.Rectangle\n  modifiers.csharp:\n  - public\n  - static\n  - readonly\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: Rectangle.Empty\n- uid: System.Drawing.Rectangle.#ctor(System.Drawing.Point,System.Drawing.Size)\n  commentId: M:System.Drawing.Rectangle.#ctor(System.Drawing.Point,System.Drawing.Size)\n  id: '#ctor(System.Drawing.Point,System.Drawing.Size)'\n  parent: System.Drawing.Rectangle\n  langs:\n  - csharp\n  - vb\n  name: Rectangle(Point, Size)\n  fullName: System.Drawing.Rectangle.Rectangle(System.Drawing.Point, System.Drawing.Size)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs\n    startLine: 42\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified location and size.</p>\\n\"\n  syntax:\n    content: public Rectangle(Point location, Size size)\n    content.vb: Public Sub New(location As Point, size As Size)\n    parameters:\n    - id: location\n      type: System.Drawing.Point\n      description: \"\\n<p>A <xref href=\\\"System.Drawing.Point\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents the upper-left corner of the rectangular region. </p>\\n\"\n    - id: size\n      type: System.Drawing.Size\n      description: \"\\n<p>A <xref href=\\\"System.Drawing.Size\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents the width and height of the rectangular region. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Rectangle.Rectangle(Point, Size)\n- uid: System.Drawing.Rectangle.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)\n  commentId: M:System.Drawing.Rectangle.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)\n  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32)'\n  parent: System.Drawing.Rectangle\n  langs:\n  - csharp\n  - vb\n  name: Rectangle(Int32, Int32, Int32, Int32)\n  fullName: System.Drawing.Rectangle.Rectangle(System.Int32, System.Int32, System.Int32, System.Int32)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs\n    startLine: 28\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified location and size.</p>\\n\"\n  syntax:\n    content: public Rectangle(int x, int y, int width, int height)\n    content.vb: Public Sub New(x As Integer, y As Integer, width As Integer, height As Integer)\n    parameters:\n    - id: x\n      type: System.Int32\n      description: \"\\n<p>The x-coordinate of the upper-left corner of the rectangle. </p>\\n\"\n    - id: y\n      type: System.Int32\n      description: \"\\n<p>The y-coordinate of the upper-left corner of the rectangle. </p>\\n\"\n    - id: width\n      type: System.Int32\n      description: \"\\n<p>The width of the rectangle. </p>\\n\"\n    - id: height\n      type: System.Int32\n      description: \"\\n<p>The height of the rectangle. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Rectangle.Rectangle(Int32, Int32, Int32, Int32)\n- uid: System.Drawing.Rectangle.Bottom\n  commentId: P:System.Drawing.Rectangle.Bottom\n  id: Bottom\n  parent: System.Drawing.Rectangle\n  langs:\n  - csharp\n  - vb\n  name: Bottom\n  fullName: System.Drawing.Rectangle.Bottom\n  type: Property\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Bottom\n    path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs\n    startLine: 209\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Gets the y-coordinate that is the sum of the <xref href=\\\"System.Drawing.Rectangle.Y\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and <xref href=\\\"System.Drawing.Rectangle.Height\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property values of this <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  syntax:\n    content: public int Bottom { get; }\n    content.vb: Public ReadOnly Property Bottom As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The y-coordinate that is the sum of <xref href=\\\"System.Drawing.Rectangle.Y\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and <xref href=\\\"System.Drawing.Rectangle.Height\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of this <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Rectangle.Bottom\n- uid: System.Drawing.Rectangle.Height\n  commentId: P:System.Drawing.Rectangle.Height\n  id: Height\n  parent: System.Drawing.Rectangle\n  langs:\n  - csharp\n  - vb\n  name: Height\n  fullName: System.Drawing.Rectangle.Height\n  type: Property\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Height\n    path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs\n    startLine: 149\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Gets or sets the height of this <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  syntax:\n    content: public int Height { get; set; }\n    content.vb: Public Property Height As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The height of this <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. The default is 0.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: Rectangle.Height\n- uid: System.Drawing.Rectangle.IsEmpty\n  commentId: P:System.Drawing.Rectangle.IsEmpty\n  id: IsEmpty\n  parent: System.Drawing.Rectangle\n  langs:\n  - csharp\n  - vb\n  name: IsEmpty\n  fullName: System.Drawing.Rectangle.IsEmpty\n  type: Property\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsEmpty\n    path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs\n    startLine: 223\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Tests whether all numeric properties of this <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> have values of zero.</p>\\n\"\n  syntax:\n    content: public bool IsEmpty { get; }\n    content.vb: Public ReadOnly Property IsEmpty As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>This property returns <strong>true</strong> if the <xref href=\\\"System.Drawing.Rectangle.Width\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.Drawing.Rectangle.Height\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.Drawing.Rectangle.X\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, and <xref href=\\\"System.Drawing.Rectangle.Y\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> properties of this <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> all have values of zero; otherwise, <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Rectangle.IsEmpty\n- uid: System.Drawing.Rectangle.Left\n  commentId: P:System.Drawing.Rectangle.Left\n  id: Left\n  parent: System.Drawing.Rectangle\n  langs:\n  - csharp\n  - vb\n  name: Left\n  fullName: System.Drawing.Rectangle.Left\n  type: Property\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Left\n    path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs\n    startLine: 167\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Gets the x-coordinate of the left edge of this <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  syntax:\n    content: public int Left { get; }\n    content.vb: Public ReadOnly Property Left As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The x-coordinate of the left edge of this <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Rectangle.Left\n- uid: System.Drawing.Rectangle.Location\n  commentId: P:System.Drawing.Rectangle.Location\n  id: Location\n  parent: System.Drawing.Rectangle\n  langs:\n  - csharp\n  - vb\n  name: Location\n  fullName: System.Drawing.Rectangle.Location\n  type: Property\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Location\n    path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs\n    startLine: 68\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Gets or sets the coordinates of the upper-left corner of this <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  syntax:\n    content: public Point Location { get; set; }\n    content.vb: Public Property Location As Point\n    parameters: []\n    return:\n      type: System.Drawing.Point\n      description: \"\\n<p>A <xref href=\\\"System.Drawing.Point\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents the upper-left corner of this <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: Rectangle.Location\n- uid: System.Drawing.Rectangle.Right\n  commentId: P:System.Drawing.Rectangle.Right\n  id: Right\n  parent: System.Drawing.Rectangle\n  langs:\n  - csharp\n  - vb\n  name: Right\n  fullName: System.Drawing.Rectangle.Right\n  type: Property\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Right\n    path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs\n    startLine: 195\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Gets the x-coordinate that is the sum of <xref href=\\\"System.Drawing.Rectangle.X\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and <xref href=\\\"System.Drawing.Rectangle.Width\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property values of this <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  syntax:\n    content: public int Right { get; }\n    content.vb: Public ReadOnly Property Right As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The x-coordinate that is the sum of <xref href=\\\"System.Drawing.Rectangle.X\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and <xref href=\\\"System.Drawing.Rectangle.Width\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of this <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Rectangle.Right\n- uid: System.Drawing.Rectangle.Size\n  commentId: P:System.Drawing.Rectangle.Size\n  id: Size\n  parent: System.Drawing.Rectangle\n  langs:\n  - csharp\n  - vb\n  name: Size\n  fullName: System.Drawing.Rectangle.Size\n  type: Property\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Size\n    path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs\n    startLine: 84\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Gets or sets the size of this <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public Size Size { get; set; }\n    content.vb: Public Property Size As Size\n    parameters: []\n    return:\n      type: System.Drawing.Size\n      description: \"\\n<p>A <xref href=\\\"System.Drawing.Size\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents the width and height of this <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: Rectangle.Size\n- uid: System.Drawing.Rectangle.Top\n  commentId: P:System.Drawing.Rectangle.Top\n  id: Top\n  parent: System.Drawing.Rectangle\n  langs:\n  - csharp\n  - vb\n  name: Top\n  fullName: System.Drawing.Rectangle.Top\n  type: Property\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Top\n    path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs\n    startLine: 181\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Gets the y-coordinate of the top edge of this <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  syntax:\n    content: public int Top { get; }\n    content.vb: Public ReadOnly Property Top As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The y-coordinate of the top edge of this <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Rectangle.Top\n- uid: System.Drawing.Rectangle.Width\n  commentId: P:System.Drawing.Rectangle.Width\n  id: Width\n  parent: System.Drawing.Rectangle\n  langs:\n  - csharp\n  - vb\n  name: Width\n  fullName: System.Drawing.Rectangle.Width\n  type: Property\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Width\n    path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs\n    startLine: 133\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Gets or sets the width of this <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  syntax:\n    content: public int Width { get; set; }\n    content.vb: Public Property Width As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The width of this <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. The default is 0.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: Rectangle.Width\n- uid: System.Drawing.Rectangle.X\n  commentId: P:System.Drawing.Rectangle.X\n  id: X\n  parent: System.Drawing.Rectangle\n  langs:\n  - csharp\n  - vb\n  name: X\n  fullName: System.Drawing.Rectangle.X\n  type: Property\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: X\n    path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs\n    startLine: 101\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Gets or sets the x-coordinate of the upper-left corner of this <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  syntax:\n    content: public int X { get; set; }\n    content.vb: Public Property X As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The x-coordinate of the upper-left corner of this <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. The default is 0.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: Rectangle.X\n- uid: System.Drawing.Rectangle.Y\n  commentId: P:System.Drawing.Rectangle.Y\n  id: Y\n  parent: System.Drawing.Rectangle\n  langs:\n  - csharp\n  - vb\n  name: Y\n  fullName: System.Drawing.Rectangle.Y\n  type: Property\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Y\n    path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs\n    startLine: 117\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Gets or sets the y-coordinate of the upper-left corner of this <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  syntax:\n    content: public int Y { get; set; }\n    content.vb: Public Property Y As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The y-coordinate of the upper-left corner of this <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. The default is 0.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: Rectangle.Y\n- uid: System.Drawing.Rectangle.Ceiling(System.Drawing.RectangleF)\n  commentId: M:System.Drawing.Rectangle.Ceiling(System.Drawing.RectangleF)\n  id: Ceiling(System.Drawing.RectangleF)\n  parent: System.Drawing.Rectangle\n  langs:\n  - csharp\n  - vb\n  name: Ceiling(RectangleF)\n  fullName: System.Drawing.Rectangle.Ceiling(System.Drawing.RectangleF)\n  type: Method\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Ceiling\n    path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs\n    startLine: 274\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Converts the specified <xref href=\\\"System.Drawing.RectangleF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure to a <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure by rounding the <xref href=\\\"System.Drawing.RectangleF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values to the next higher integer values.</p>\\n\"\n  syntax:\n    content: public static Rectangle Ceiling(RectangleF value)\n    content.vb: Public Shared Function Ceiling(value As RectangleF) As Rectangle\n    parameters:\n    - id: value\n      type: System.Drawing.RectangleF\n      description: \"\\n<p>The <xref href=\\\"System.Drawing.RectangleF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure to be converted. </p>\\n\"\n    return:\n      type: System.Drawing.Rectangle\n      description: \"\\n<p>Returns a <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Rectangle.Ceiling(RectangleF)\n- uid: System.Drawing.Rectangle.Contains(System.Drawing.Point)\n  commentId: M:System.Drawing.Rectangle.Contains(System.Drawing.Point)\n  id: Contains(System.Drawing.Point)\n  parent: System.Drawing.Rectangle\n  langs:\n  - csharp\n  - vb\n  name: Contains(Point)\n  fullName: System.Drawing.Rectangle.Contains(System.Drawing.Point)\n  type: Method\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Contains\n    path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs\n    startLine: 324\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Determines if the specified point is contained within this <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  syntax:\n    content: >-\n      [Pure]\n\n      public bool Contains(Point pt)\n    content.vb: >-\n      <Pure>\n\n      Public Function Contains(pt As Point) As Boolean\n    parameters:\n    - id: pt\n      type: System.Drawing.Point\n      description: \"\\n<p>The <xref href=\\\"System.Drawing.Point\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to test. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>This method returns <strong>true</strong> if the point represented by <em>pt</em> is contained within this <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure; otherwise <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Rectangle.Contains(Point)\n- uid: System.Drawing.Rectangle.Contains(System.Drawing.Rectangle)\n  commentId: M:System.Drawing.Rectangle.Contains(System.Drawing.Rectangle)\n  id: Contains(System.Drawing.Rectangle)\n  parent: System.Drawing.Rectangle\n  langs:\n  - csharp\n  - vb\n  name: Contains(Rectangle)\n  fullName: System.Drawing.Rectangle.Contains(System.Drawing.Rectangle)\n  type: Method\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Contains\n    path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs\n    startLine: 337\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Determines if the rectangular region represented by <em>rect</em> is entirely contained within this <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  syntax:\n    content: >-\n      [Pure]\n\n      public bool Contains(Rectangle rect)\n    content.vb: >-\n      <Pure>\n\n      Public Function Contains(rect As Rectangle) As Boolean\n    parameters:\n    - id: rect\n      type: System.Drawing.Rectangle\n      description: \"\\n<p>The <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to test. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>This method returns <strong>true</strong> if the rectangular region represented by <em>rect</em> is entirely contained within this <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure; otherwise <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Rectangle.Contains(Rectangle)\n- uid: System.Drawing.Rectangle.Contains(System.Int32,System.Int32)\n  commentId: M:System.Drawing.Rectangle.Contains(System.Int32,System.Int32)\n  id: Contains(System.Int32,System.Int32)\n  parent: System.Drawing.Rectangle\n  langs:\n  - csharp\n  - vb\n  name: Contains(Int32, Int32)\n  fullName: System.Drawing.Rectangle.Contains(System.Int32, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Contains\n    path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs\n    startLine: 312\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Determines if the specified point is contained within this <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  syntax:\n    content: >-\n      [Pure]\n\n      public bool Contains(int x, int y)\n    content.vb: >-\n      <Pure>\n\n      Public Function Contains(x As Integer, y As Integer) As Boolean\n    parameters:\n    - id: x\n      type: System.Int32\n      description: \"\\n<p>The x-coordinate of the point to test. </p>\\n\"\n    - id: y\n      type: System.Int32\n      description: \"\\n<p>The y-coordinate of the point to test. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>This method returns <strong>true</strong> if the point defined by <em>x</em> and <em>y</em> is contained within this <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure; otherwise <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Rectangle.Contains(Int32, Int32)\n- uid: System.Drawing.Rectangle.Equals(System.Object)\n  commentId: M:System.Drawing.Rectangle.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Drawing.Rectangle\n  langs:\n  - csharp\n  - vb\n  name: Equals(Object)\n  fullName: System.Drawing.Rectangle.Equals(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Equals\n    path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs\n    startLine: 237\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Tests whether <em>obj</em> is a <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure with the same location and size of this <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  syntax:\n    content: public override bool Equals(object obj)\n    content.vb: Public Overrides Function Equals(obj As Object) As Boolean\n    parameters:\n    - id: obj\n      type: System.Object\n      description: \"\\n<p>The <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to test. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>This method returns <strong>true</strong> if <em>obj</em> is a <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure and its <xref href=\\\"System.Drawing.Rectangle.X\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.Drawing.Rectangle.Y\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.Drawing.Rectangle.Width\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, and <xref href=\\\"System.Drawing.Rectangle.Height\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> properties are equal to the corresponding properties of this <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure; otherwise, <strong>false</strong>.</p>\\n\"\n  overridden: System.ValueType.Equals(System.Object)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: Rectangle.Equals(Object)\n- uid: System.Drawing.Rectangle.FromLTRB(System.Int32,System.Int32,System.Int32,System.Int32)\n  commentId: M:System.Drawing.Rectangle.FromLTRB(System.Int32,System.Int32,System.Int32,System.Int32)\n  id: FromLTRB(System.Int32,System.Int32,System.Int32,System.Int32)\n  parent: System.Drawing.Rectangle\n  langs:\n  - csharp\n  - vb\n  name: FromLTRB(Int32, Int32, Int32, Int32)\n  fullName: System.Drawing.Rectangle.FromLTRB(System.Int32, System.Int32, System.Int32, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: FromLTRB\n    path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs\n    startLine: 54\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Creates a <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure with the specified edge locations.</p>\\n\"\n  syntax:\n    content: public static Rectangle FromLTRB(int left, int top, int right, int bottom)\n    content.vb: Public Shared Function FromLTRB(left As Integer, top As Integer, right As Integer, bottom As Integer) As Rectangle\n    parameters:\n    - id: left\n      type: System.Int32\n      description: \"\\n<p>The x-coordinate of the upper-left corner of this <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    - id: top\n      type: System.Int32\n      description: \"\\n<p>The y-coordinate of the upper-left corner of this <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    - id: right\n      type: System.Int32\n      description: \"\\n<p>The x-coordinate of the lower-right corner of this <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    - id: bottom\n      type: System.Int32\n      description: \"\\n<p>The y-coordinate of the lower-right corner of this <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    return:\n      type: System.Drawing.Rectangle\n      description: \"\\n<p>The new <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that this method creates.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Rectangle.FromLTRB(Int32, Int32, Int32, Int32)\n- uid: System.Drawing.Rectangle.GetHashCode\n  commentId: M:System.Drawing.Rectangle.GetHashCode\n  id: GetHashCode\n  parent: System.Drawing.Rectangle\n  langs:\n  - csharp\n  - vb\n  name: GetHashCode()\n  fullName: System.Drawing.Rectangle.GetHashCode()\n  type: Method\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetHashCode\n    path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs\n    startLine: 344\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Returns the hash code for this <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. For information about the use of hash codes, see <xref href=\\\"System.Object.GetHashCode\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> .</p>\\n\"\n  syntax:\n    content: public override int GetHashCode()\n    content.vb: Public Overrides Function GetHashCode As Integer\n    return:\n      type: System.Int32\n      description: \"\\n<p>An integer that represents the hash code for this rectangle.</p>\\n\"\n  overridden: System.ValueType.GetHashCode\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: Rectangle.GetHashCode()\n- uid: System.Drawing.Rectangle.Inflate(System.Drawing.Rectangle,System.Int32,System.Int32)\n  commentId: M:System.Drawing.Rectangle.Inflate(System.Drawing.Rectangle,System.Int32,System.Int32)\n  id: Inflate(System.Drawing.Rectangle,System.Int32,System.Int32)\n  parent: System.Drawing.Rectangle\n  langs:\n  - csharp\n  - vb\n  name: Inflate(Rectangle, Int32, Int32)\n  fullName: System.Drawing.Rectangle.Inflate(System.Drawing.Rectangle, System.Int32, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Inflate\n    path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs\n    startLine: 378\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Creates and returns an enlarged copy of the specified <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. The copy is enlarged by the specified amount. The original <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure remains unmodified.</p>\\n\"\n  syntax:\n    content: public static Rectangle Inflate(Rectangle rect, int x, int y)\n    content.vb: Public Shared Function Inflate(rect As Rectangle, x As Integer, y As Integer) As Rectangle\n    parameters:\n    - id: rect\n      type: System.Drawing.Rectangle\n      description: \"\\n<p>The <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> with which to start. This rectangle is not modified. </p>\\n\"\n    - id: x\n      type: System.Int32\n      description: \"\\n<p>The amount to inflate this <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> horizontally. </p>\\n\"\n    - id: y\n      type: System.Int32\n      description: \"\\n<p>The amount to inflate this <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> vertically. </p>\\n\"\n    return:\n      type: System.Drawing.Rectangle\n      description: \"\\n<p>The enlarged <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Rectangle.Inflate(Rectangle, Int32, Int32)\n- uid: System.Drawing.Rectangle.Inflate(System.Drawing.Size)\n  commentId: M:System.Drawing.Rectangle.Inflate(System.Drawing.Size)\n  id: Inflate(System.Drawing.Size)\n  parent: System.Drawing.Rectangle\n  langs:\n  - csharp\n  - vb\n  name: Inflate(Size)\n  fullName: System.Drawing.Rectangle.Inflate(System.Drawing.Size)\n  type: Method\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Inflate\n    path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs\n    startLine: 367\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Enlarges this <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> by the specified amount.</p>\\n\"\n  syntax:\n    content: public void Inflate(Size size)\n    content.vb: Public Sub Inflate(size As Size)\n    parameters:\n    - id: size\n      type: System.Drawing.Size\n      description: \"\\n<p>The amount to inflate this rectangle. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Rectangle.Inflate(Size)\n- uid: System.Drawing.Rectangle.Inflate(System.Int32,System.Int32)\n  commentId: M:System.Drawing.Rectangle.Inflate(System.Int32,System.Int32)\n  id: Inflate(System.Int32,System.Int32)\n  parent: System.Drawing.Rectangle\n  langs:\n  - csharp\n  - vb\n  name: Inflate(Int32, Int32)\n  fullName: System.Drawing.Rectangle.Inflate(System.Int32, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Inflate\n    path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs\n    startLine: 356\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Enlarges this <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> by the specified amount.</p>\\n\"\n  syntax:\n    content: public void Inflate(int width, int height)\n    content.vb: Public Sub Inflate(width As Integer, height As Integer)\n    parameters:\n    - id: width\n      type: System.Int32\n      description: \"\\n<p>The amount to inflate this <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> horizontally. </p>\\n\"\n    - id: height\n      type: System.Int32\n      description: \"\\n<p>The amount to inflate this <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> vertically. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Rectangle.Inflate(Int32, Int32)\n- uid: System.Drawing.Rectangle.Intersect(System.Drawing.Rectangle)\n  commentId: M:System.Drawing.Rectangle.Intersect(System.Drawing.Rectangle)\n  id: Intersect(System.Drawing.Rectangle)\n  parent: System.Drawing.Rectangle\n  langs:\n  - csharp\n  - vb\n  name: Intersect(Rectangle)\n  fullName: System.Drawing.Rectangle.Intersect(System.Drawing.Rectangle)\n  type: Method\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Intersect\n    path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs\n    startLine: 387\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Replaces this <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> with the intersection of itself and the specified <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public void Intersect(Rectangle rect)\n    content.vb: Public Sub Intersect(rect As Rectangle)\n    parameters:\n    - id: rect\n      type: System.Drawing.Rectangle\n      description: \"\\n<p>The <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> with which to intersect. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Rectangle.Intersect(Rectangle)\n- uid: System.Drawing.Rectangle.Intersect(System.Drawing.Rectangle,System.Drawing.Rectangle)\n  commentId: M:System.Drawing.Rectangle.Intersect(System.Drawing.Rectangle,System.Drawing.Rectangle)\n  id: Intersect(System.Drawing.Rectangle,System.Drawing.Rectangle)\n  parent: System.Drawing.Rectangle\n  langs:\n  - csharp\n  - vb\n  name: Intersect(Rectangle, Rectangle)\n  fullName: System.Drawing.Rectangle.Intersect(System.Drawing.Rectangle, System.Drawing.Rectangle)\n  type: Method\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Intersect\n    path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs\n    startLine: 401\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Returns a third <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure that represents the intersection of two other <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structures. If there is no intersection, an empty <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is returned.</p>\\n\"\n  syntax:\n    content: public static Rectangle Intersect(Rectangle a, Rectangle b)\n    content.vb: Public Shared Function Intersect(a As Rectangle, b As Rectangle) As Rectangle\n    parameters:\n    - id: a\n      type: System.Drawing.Rectangle\n      description: \"\\n<p>A rectangle to intersect. </p>\\n\"\n    - id: b\n      type: System.Drawing.Rectangle\n      description: \"\\n<p>A rectangle to intersect. </p>\\n\"\n    return:\n      type: System.Drawing.Rectangle\n      description: \"\\n<p>A <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents the intersection of <em>a</em> and <em>b</em>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Rectangle.Intersect(Rectangle, Rectangle)\n- uid: System.Drawing.Rectangle.IntersectsWith(System.Drawing.Rectangle)\n  commentId: M:System.Drawing.Rectangle.IntersectsWith(System.Drawing.Rectangle)\n  id: IntersectsWith(System.Drawing.Rectangle)\n  parent: System.Drawing.Rectangle\n  langs:\n  - csharp\n  - vb\n  name: IntersectsWith(Rectangle)\n  fullName: System.Drawing.Rectangle.IntersectsWith(System.Drawing.Rectangle)\n  type: Method\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IntersectsWith\n    path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs\n    startLine: 419\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Determines if this rectangle intersects with <em>rect</em>.</p>\\n\"\n  syntax:\n    content: >-\n      [Pure]\n\n      public bool IntersectsWith(Rectangle rect)\n    content.vb: >-\n      <Pure>\n\n      Public Function IntersectsWith(rect As Rectangle) As Boolean\n    parameters:\n    - id: rect\n      type: System.Drawing.Rectangle\n      description: \"\\n<p>The rectangle to test. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>This method returns <strong>true</strong> if there is any intersection, otherwise <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Rectangle.IntersectsWith(Rectangle)\n- uid: System.Drawing.Rectangle.Offset(System.Drawing.Point)\n  commentId: M:System.Drawing.Rectangle.Offset(System.Drawing.Point)\n  id: Offset(System.Drawing.Point)\n  parent: System.Drawing.Rectangle\n  langs:\n  - csharp\n  - vb\n  name: Offset(Point)\n  fullName: System.Drawing.Rectangle.Offset(System.Drawing.Point)\n  type: Method\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Offset\n    path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs\n    startLine: 448\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Adjusts the location of this rectangle by the specified amount.</p>\\n\"\n  syntax:\n    content: public void Offset(Point pos)\n    content.vb: Public Sub Offset(pos As Point)\n    parameters:\n    - id: pos\n      type: System.Drawing.Point\n      description: \"\\n<p>Amount to offset the location. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Rectangle.Offset(Point)\n- uid: System.Drawing.Rectangle.Offset(System.Int32,System.Int32)\n  commentId: M:System.Drawing.Rectangle.Offset(System.Int32,System.Int32)\n  id: Offset(System.Int32,System.Int32)\n  parent: System.Drawing.Rectangle\n  langs:\n  - csharp\n  - vb\n  name: Offset(Int32, Int32)\n  fullName: System.Drawing.Rectangle.Offset(System.Int32, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Offset\n    path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs\n    startLine: 456\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Adjusts the location of this rectangle by the specified amount.</p>\\n\"\n  syntax:\n    content: public void Offset(int x, int y)\n    content.vb: Public Sub Offset(x As Integer, y As Integer)\n    parameters:\n    - id: x\n      type: System.Int32\n      description: \"\\n<p>The horizontal offset. </p>\\n\"\n    - id: y\n      type: System.Int32\n      description: \"\\n<p>The vertical offset. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Rectangle.Offset(Int32, Int32)\n- uid: System.Drawing.Rectangle.op_Equality(System.Drawing.Rectangle,System.Drawing.Rectangle)\n  commentId: M:System.Drawing.Rectangle.op_Equality(System.Drawing.Rectangle,System.Drawing.Rectangle)\n  id: op_Equality(System.Drawing.Rectangle,System.Drawing.Rectangle)\n  parent: System.Drawing.Rectangle\n  langs:\n  - csharp\n  - vb\n  name: Equality(Rectangle, Rectangle)\n  fullName: System.Drawing.Rectangle.Equality(System.Drawing.Rectangle, System.Drawing.Rectangle)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Equality\n    path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs\n    startLine: 253\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Tests whether two <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structures have equal location and size.</p>\\n\"\n  syntax:\n    content: public static bool operator ==(Rectangle left, Rectangle right)\n    content.vb: Public Shared Operator =(left As Rectangle, right As Rectangle) As Boolean\n    parameters:\n    - id: left\n      type: System.Drawing.Rectangle\n      description: \"\\n<p>The <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure that is to the left of the equality operator. </p>\\n\"\n    - id: right\n      type: System.Drawing.Rectangle\n      description: \"\\n<p>The <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure that is to the right of the equality operator. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>This operator returns <strong>true</strong> if the two <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structures have equal <xref href=\\\"System.Drawing.Rectangle.X\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.Drawing.Rectangle.Y\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.Drawing.Rectangle.Width\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, and <xref href=\\\"System.Drawing.Rectangle.Height\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> properties.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Rectangle.Equality(Rectangle, Rectangle)\n- uid: System.Drawing.Rectangle.op_Inequality(System.Drawing.Rectangle,System.Drawing.Rectangle)\n  commentId: M:System.Drawing.Rectangle.op_Inequality(System.Drawing.Rectangle,System.Drawing.Rectangle)\n  id: op_Inequality(System.Drawing.Rectangle,System.Drawing.Rectangle)\n  parent: System.Drawing.Rectangle\n  langs:\n  - csharp\n  - vb\n  name: Inequality(Rectangle, Rectangle)\n  fullName: System.Drawing.Rectangle.Inequality(System.Drawing.Rectangle, System.Drawing.Rectangle)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Inequality\n    path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs\n    startLine: 265\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Tests whether two <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structures differ in location or size.</p>\\n\"\n  syntax:\n    content: public static bool operator !=(Rectangle left, Rectangle right)\n    content.vb: Public Shared Operator <>(left As Rectangle, right As Rectangle) As Boolean\n    parameters:\n    - id: left\n      type: System.Drawing.Rectangle\n      description: \"\\n<p>The <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure that is to the left of the inequality operator. </p>\\n\"\n    - id: right\n      type: System.Drawing.Rectangle\n      description: \"\\n<p>The <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure that is to the right of the inequality operator. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>This operator returns <strong>true</strong> if any of the <xref href=\\\"System.Drawing.Rectangle.X\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.Drawing.Rectangle.Y\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.Drawing.Rectangle.Width\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.Drawing.Rectangle.Height\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> properties of the two <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structures are unequal; otherwise <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Rectangle.Inequality(Rectangle, Rectangle)\n- uid: System.Drawing.Rectangle.Round(System.Drawing.RectangleF)\n  commentId: M:System.Drawing.Rectangle.Round(System.Drawing.RectangleF)\n  id: Round(System.Drawing.RectangleF)\n  parent: System.Drawing.Rectangle\n  langs:\n  - csharp\n  - vb\n  name: Round(RectangleF)\n  fullName: System.Drawing.Rectangle.Round(System.Drawing.RectangleF)\n  type: Method\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Round\n    path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs\n    startLine: 298\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Converts the specified <xref href=\\\"System.Drawing.RectangleF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to a <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> by rounding the <xref href=\\\"System.Drawing.RectangleF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values to the nearest integer values.</p>\\n\"\n  syntax:\n    content: public static Rectangle Round(RectangleF value)\n    content.vb: Public Shared Function Round(value As RectangleF) As Rectangle\n    parameters:\n    - id: value\n      type: System.Drawing.RectangleF\n      description: \"\\n<p>The <xref href=\\\"System.Drawing.RectangleF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to be converted. </p>\\n\"\n    return:\n      type: System.Drawing.Rectangle\n      description: \"\\n<p>The rounded interger value of the <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Rectangle.Round(RectangleF)\n- uid: System.Drawing.Rectangle.ToString\n  commentId: M:System.Drawing.Rectangle.ToString\n  id: ToString\n  parent: System.Drawing.Rectangle\n  langs:\n  - csharp\n  - vb\n  name: ToString()\n  fullName: System.Drawing.Rectangle.ToString()\n  type: Method\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ToString\n    path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs\n    startLine: 468\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Converts the attributes of this <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to a human-readable string.</p>\\n\"\n  syntax:\n    content: public override string ToString()\n    content.vb: Public Overrides Function ToString As String\n    return:\n      type: System.String\n      description: \"\\n<p>A string that contains the position, width, and height of this <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure ¾ for example, {X=20, Y=20, Width=100, Height=50} </p>\\n\"\n  overridden: System.ValueType.ToString\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: Rectangle.ToString()\n- uid: System.Drawing.Rectangle.Truncate(System.Drawing.RectangleF)\n  commentId: M:System.Drawing.Rectangle.Truncate(System.Drawing.RectangleF)\n  id: Truncate(System.Drawing.RectangleF)\n  parent: System.Drawing.Rectangle\n  langs:\n  - csharp\n  - vb\n  name: Truncate(RectangleF)\n  fullName: System.Drawing.Rectangle.Truncate(System.Drawing.RectangleF)\n  type: Method\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Truncate\n    path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs\n    startLine: 286\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Converts the specified <xref href=\\\"System.Drawing.RectangleF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to a <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> by truncating the <xref href=\\\"System.Drawing.RectangleF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values.</p>\\n\"\n  syntax:\n    content: public static Rectangle Truncate(RectangleF value)\n    content.vb: Public Shared Function Truncate(value As RectangleF) As Rectangle\n    parameters:\n    - id: value\n      type: System.Drawing.RectangleF\n      description: \"\\n<p>The <xref href=\\\"System.Drawing.RectangleF\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to be converted. </p>\\n\"\n    return:\n      type: System.Drawing.Rectangle\n      description: \"\\n<p>The truncated value of the  <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Rectangle.Truncate(RectangleF)\n- uid: System.Drawing.Rectangle.Union(System.Drawing.Rectangle,System.Drawing.Rectangle)\n  commentId: M:System.Drawing.Rectangle.Union(System.Drawing.Rectangle,System.Drawing.Rectangle)\n  id: Union(System.Drawing.Rectangle,System.Drawing.Rectangle)\n  parent: System.Drawing.Rectangle\n  langs:\n  - csharp\n  - vb\n  name: Union(Rectangle, Rectangle)\n  fullName: System.Drawing.Rectangle.Union(System.Drawing.Rectangle, System.Drawing.Rectangle)\n  type: Method\n  source:\n    remote:\n      path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Union\n    path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs\n    startLine: 432\n  assemblies:\n  - System.Drawing.Primitives\n  namespace: System.Drawing\n  summary: \"\\n<p>Gets a <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure that contains the union of two <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structures.</p>\\n\"\n  syntax:\n    content: >-\n      [Pure]\n\n      public static Rectangle Union(Rectangle a, Rectangle b)\n    content.vb: >-\n      <Pure>\n\n      Public Shared Function Union(a As Rectangle, b As Rectangle) As Rectangle\n    parameters:\n    - id: a\n      type: System.Drawing.Rectangle\n      description: \"\\n<p>A rectangle to union. </p>\\n\"\n    - id: b\n      type: System.Drawing.Rectangle\n      description: \"\\n<p>A rectangle to union. </p>\\n\"\n    return:\n      type: System.Drawing.Rectangle\n      description: \"\\n<p>A <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure that bounds the union of the two <xref href=\\\"System.Drawing.Rectangle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structures.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Rectangle.Union(Rectangle, Rectangle)\nreferences:\n- uid: System.Drawing\n  isExternal: false\n  name: System.Drawing\n  fullName: System.Drawing\n  nameWithType: System.Drawing\n  commentId: N:System.Drawing\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Drawing.Rectangle\n  parent: System.Drawing\n  isExternal: false\n  name: Rectangle\n  fullName: System.Drawing.Rectangle\n  nameWithType: Rectangle\n  commentId: T:System.Drawing.Rectangle\n- uid: System.Drawing.Point\n  parent: System.Drawing\n  isExternal: false\n  name: Point\n  fullName: System.Drawing.Point\n  nameWithType: Point\n  commentId: T:System.Drawing.Point\n- uid: System.Drawing.Size\n  parent: System.Drawing\n  isExternal: false\n  name: Size\n  fullName: System.Drawing.Size\n  nameWithType: Size\n  commentId: T:System.Drawing.Size\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.Drawing.RectangleF\n  parent: System.Drawing\n  isExternal: false\n  name: RectangleF\n  fullName: System.Drawing.RectangleF\n  nameWithType: RectangleF\n  commentId: T:System.Drawing.RectangleF\n- uid: System.ValueType.Equals(System.Object)\n  parent: System.ValueType\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.ValueType.Equals(System.Object)\n  spec.csharp:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: ValueType.Equals(Object)\n  commentId: M:System.ValueType.Equals(System.Object)\n- uid: System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  fullName: System.ValueType\n  nameWithType: ValueType\n  commentId: T:System.ValueType\n- uid: System.ValueType.GetHashCode\n  parent: System.ValueType\n  isExternal: false\n  name: GetHashCode()\n  fullName: System.ValueType.GetHashCode()\n  spec.csharp:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ValueType.GetHashCode()\n  commentId: M:System.ValueType.GetHashCode\n- uid: System.ValueType.ToString\n  parent: System.ValueType\n  isExternal: false\n  name: ToString()\n  fullName: System.ValueType.ToString()\n  spec.csharp:\n  - uid: System.ValueType.ToString\n    name: ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.ToString\n    name: ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ValueType.ToString()\n  commentId: M:System.ValueType.ToString\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n"}