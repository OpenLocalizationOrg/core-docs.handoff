{"nodes":[{"pos":[343,364],"content":"MethodAccessException","needQuote":true,"nodes":[{"content":"MethodAccessException","pos":[0,21]}]},{"pos":[2266,2289],"content":"MethodAccessException()","needQuote":true,"nodes":[{"content":"MethodAccessException()","pos":[0,23]}]},{"pos":[3547,3576],"content":"MethodAccessException(String)","needQuote":true,"nodes":[{"content":"MethodAccessException(String)","pos":[0,29]}]},{"pos":[4873,4913],"content":"MethodAccessException(String, Exception)","needQuote":true,"nodes":[{"content":"MethodAccessException(String, Exception)","pos":[0,40]}]},{"content":"\\n&lt;p&gt;The error message that explains the reason for the exception.","pos":[5823,5889],"source":"\\n<p>The error message that explains the reason for the exception."},{"content":"&lt;/p&gt;\\n","pos":[5890,5896],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The exception that is the cause of the current exception.","pos":[5963,6025],"source":"\\n<p>The exception that is the cause of the current exception."},{"content":"If the &lt;em&gt;inner&lt;/em&gt; parameter is not a null reference (&lt;strong&gt;Nothing&lt;/strong&gt; in Visual Basic), the current exception is raised in a &lt;strong&gt;catch&lt;/strong&gt; block that handles the inner exception.","pos":[6026,6225],"source":" If the <em>inner</em> parameter is not a null reference (<strong>Nothing</strong> in Visual Basic), the current exception is raised in a <strong>catch</strong> block that handles the inner exception."},{"content":"&lt;/p&gt;\\n","pos":[6226,6232],"source":" </p>\\n"},{"pos":[6497,6503],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[6634,6640],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6788,6797],"content":"Exception","needQuote":true,"nodes":[{"content":"Exception","pos":[0,9]}]},{"pos":[6966,6987],"content":"MemberAccessException","needQuote":true,"nodes":[{"content":"MemberAccessException","pos":[0,21]}]},{"pos":[7195,7199],"content":"Data","needQuote":true,"nodes":[{"content":"Data","pos":[0,4]}]},{"pos":[7390,7398],"content":"HelpLink","needQuote":true,"nodes":[{"content":"HelpLink","pos":[0,8]}]},{"pos":[7600,7607],"content":"HResult","needQuote":true,"nodes":[{"content":"HResult","pos":[0,7]}]},{"pos":[7813,7827],"content":"InnerException","needQuote":true,"nodes":[{"content":"InnerException","pos":[0,14]}]},{"pos":[8047,8054],"content":"Message","needQuote":true,"nodes":[{"content":"Message","pos":[0,7]}]},{"pos":[8252,8258],"content":"Source","needQuote":true,"nodes":[{"content":"Source","pos":[0,6]}]},{"pos":[8457,8467],"content":"StackTrace","needQuote":true,"nodes":[{"content":"StackTrace","pos":[0,10]}]},{"pos":[8684,8702],"content":"GetBaseException()","needQuote":true,"nodes":[{"content":"GetBaseException()","pos":[0,18]}]},{"pos":[8819,8835],"content":"GetBaseException","needQuote":true,"nodes":[{"content":"GetBaseException","pos":[0,16]}]},{"pos":[8894,8895],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8922,8923],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9004,9020],"content":"GetBaseException","needQuote":true,"nodes":[{"content":"GetBaseException","pos":[0,16]}]},{"pos":[9079,9080],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9107,9108],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9307,9317],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[9418,9426],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[9477,9478],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9505,9506],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9579,9587],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[9638,9639],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9666,9667],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9856,9870],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[9989,9995],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[10062,10063],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10113,10119],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10179,10180],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10263,10269],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[10336,10337],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10387,10393],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10453,10454],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10668,10690],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[10838,10844],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[10911,10912],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10962,10968],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[11029,11030]},{"pos":[11085,11091],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11151,11152],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11249,11255],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[11322,11323],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11373,11379],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[11440,11441]},{"pos":[11496,11502],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11562,11563],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11808,11839],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[12005,12020],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[12096,12097],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12147,12153],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[12214,12215]},{"pos":[12270,12276],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12336,12337],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12443,12458],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[12534,12535],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12585,12591],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[12652,12653]},{"pos":[12708,12714],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12774,12775],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13005,13018],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[13119,13130],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[13202,13203],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13230,13231],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13304,13315],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[13387,13388],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13415,13416],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13591,13600],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[13693,13700],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[13768,13769],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13796,13797],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13866,13873],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[13941,13942],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13969,13970],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14145,14162],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[14271,14286],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[14362,14363],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14390,14391],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14468,14483],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[14559,14560],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14587,14588],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14757,14763],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"items:\n- uid: System.MethodAccessException\n  commentId: T:System.MethodAccessException\n  id: MethodAccessException\n  parent: System\n  children:\n  - System.MethodAccessException.#ctor\n  - System.MethodAccessException.#ctor(System.String)\n  - System.MethodAccessException.#ctor(System.String,System.Exception)\n  langs:\n  - csharp\n  - vb\n  name: MethodAccessException\n  fullName: System.MethodAccessException\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/MethodAccessException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: MethodAccessException\n    path: src/mscorlib/src/System/MethodAccessException.cs\n    startLine: 15\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>The exception that is thrown when there is an invalid attempt to access a method, such as accessing a private method from partially trusted code.</p>\\n\"\n  syntax:\n    content: >-\n      [ComVisible(true)]\n\n      [Serializable]\n\n      public class MethodAccessException : MemberAccessException, ISerializable, _Exception\n    content.vb: >-\n      <ComVisible(True)>\n\n      <Serializable>\n\n      Public Class MethodAccessException\n          Inherits MemberAccessException\n          Implements ISerializable, _Exception\n  seealso:\n  - type: System.Exception\n    commentId: T:System.Exception\n  inheritance:\n  - System.Object\n  - System.Exception\n  - System.MemberAccessException\n  inheritedMembers:\n  - System.Exception.Data\n  - System.Exception.HelpLink\n  - System.Exception.HResult\n  - System.Exception.InnerException\n  - System.Exception.Message\n  - System.Exception.Source\n  - System.Exception.StackTrace\n  - System.Exception.GetBaseException\n  - System.Exception.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: MethodAccessException\n- uid: System.MethodAccessException.#ctor\n  commentId: M:System.MethodAccessException.#ctor\n  id: '#ctor'\n  parent: System.MethodAccessException\n  langs:\n  - csharp\n  - vb\n  name: MethodAccessException()\n  fullName: System.MethodAccessException.MethodAccessException()\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/MethodAccessException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/MethodAccessException.cs\n    startLine: 17\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.MethodAccessException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class, setting the <xref href=\\\"System.Exception.Message\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property of the new instance to a system-supplied message that describes the error, such as \\\"Attempt to access the method failed.\\\" This message takes into account the current system culture.</p>\\n\"\n  syntax:\n    content: public MethodAccessException()\n    content.vb: Public Sub New\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: MethodAccessException.MethodAccessException()\n- uid: System.MethodAccessException.#ctor(System.String)\n  commentId: M:System.MethodAccessException.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.MethodAccessException\n  langs:\n  - csharp\n  - vb\n  name: MethodAccessException(String)\n  fullName: System.MethodAccessException.MethodAccessException(System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/MethodAccessException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/MethodAccessException.cs\n    startLine: 22\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.MethodAccessException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with a specified error message.</p>\\n\"\n  syntax:\n    content: public MethodAccessException(string message)\n    content.vb: Public Sub New(message As String)\n    parameters:\n    - id: message\n      type: System.String\n      description: \"\\n<p>A <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that describes the error. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: MethodAccessException.MethodAccessException(String)\n- uid: System.MethodAccessException.#ctor(System.String,System.Exception)\n  commentId: M:System.MethodAccessException.#ctor(System.String,System.Exception)\n  id: '#ctor(System.String,System.Exception)'\n  parent: System.MethodAccessException\n  langs:\n  - csharp\n  - vb\n  name: MethodAccessException(String, Exception)\n  fullName: System.MethodAccessException.MethodAccessException(System.String, System.Exception)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/MethodAccessException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/MethodAccessException.cs\n    startLine: 27\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.MethodAccessException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception.</p>\\n\"\n  syntax:\n    content: public MethodAccessException(string message, Exception inner)\n    content.vb: Public Sub New(message As String, inner As Exception)\n    parameters:\n    - id: message\n      type: System.String\n      description: \"\\n<p>The error message that explains the reason for the exception. </p>\\n\"\n    - id: inner\n      type: System.Exception\n      description: \"\\n<p>The exception that is the cause of the current exception. If the <em>inner</em> parameter is not a null reference (<strong>Nothing</strong> in Visual Basic), the current exception is raised in a <strong>catch</strong> block that handles the inner exception. </p>\\n\"\n  seealso:\n  - type: System.Exception\n    commentId: T:System.Exception\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: MethodAccessException.MethodAccessException(String, Exception)\nreferences:\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  fullName: System.Exception\n  nameWithType: Exception\n  commentId: T:System.Exception\n- uid: System.MemberAccessException\n  parent: System\n  isExternal: false\n  name: MemberAccessException\n  fullName: System.MemberAccessException\n  nameWithType: MemberAccessException\n  commentId: T:System.MemberAccessException\n- uid: System.Exception.Data\n  parent: System.Exception\n  isExternal: false\n  name: Data\n  fullName: System.Exception.Data\n  nameWithType: Exception.Data\n  commentId: P:System.Exception.Data\n- uid: System.Exception.HelpLink\n  parent: System.Exception\n  isExternal: false\n  name: HelpLink\n  fullName: System.Exception.HelpLink\n  nameWithType: Exception.HelpLink\n  commentId: P:System.Exception.HelpLink\n- uid: System.Exception.HResult\n  parent: System.Exception\n  isExternal: false\n  name: HResult\n  fullName: System.Exception.HResult\n  nameWithType: Exception.HResult\n  commentId: P:System.Exception.HResult\n- uid: System.Exception.InnerException\n  parent: System.Exception\n  isExternal: false\n  name: InnerException\n  fullName: System.Exception.InnerException\n  nameWithType: Exception.InnerException\n  commentId: P:System.Exception.InnerException\n- uid: System.Exception.Message\n  parent: System.Exception\n  isExternal: false\n  name: Message\n  fullName: System.Exception.Message\n  nameWithType: Exception.Message\n  commentId: P:System.Exception.Message\n- uid: System.Exception.Source\n  parent: System.Exception\n  isExternal: false\n  name: Source\n  fullName: System.Exception.Source\n  nameWithType: Exception.Source\n  commentId: P:System.Exception.Source\n- uid: System.Exception.StackTrace\n  parent: System.Exception\n  isExternal: false\n  name: StackTrace\n  fullName: System.Exception.StackTrace\n  nameWithType: Exception.StackTrace\n  commentId: P:System.Exception.StackTrace\n- uid: System.Exception.GetBaseException\n  parent: System.Exception\n  isExternal: false\n  name: GetBaseException()\n  fullName: System.Exception.GetBaseException()\n  spec.csharp:\n  - uid: System.Exception.GetBaseException\n    name: GetBaseException\n    fullName: System.Exception.GetBaseException\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Exception.GetBaseException\n    name: GetBaseException\n    fullName: System.Exception.GetBaseException\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Exception.GetBaseException()\n  commentId: M:System.Exception.GetBaseException\n- uid: System.Exception.ToString\n  parent: System.Exception\n  isExternal: false\n  name: ToString()\n  fullName: System.Exception.ToString()\n  spec.csharp:\n  - uid: System.Exception.ToString\n    name: ToString\n    fullName: System.Exception.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Exception.ToString\n    name: ToString\n    fullName: System.Exception.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Exception.ToString()\n  commentId: M:System.Exception.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n"}