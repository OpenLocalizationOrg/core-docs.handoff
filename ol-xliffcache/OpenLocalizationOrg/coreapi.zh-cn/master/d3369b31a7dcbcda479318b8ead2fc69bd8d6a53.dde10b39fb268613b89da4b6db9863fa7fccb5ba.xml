{"nodes":[{"pos":[782,796],"content":"SetIndexBinder","needQuote":true,"nodes":[{"content":"SetIndexBinder","pos":[0,14]}]},{"pos":[3110,3134],"content":"SetIndexBinder(CallInfo)","needQuote":true,"nodes":[{"content":"SetIndexBinder(CallInfo)","pos":[0,24]}]},{"content":"\\n&lt;p&gt;The signature of the arguments at the call site.&lt;/p&gt;\\n","pos":[3943,4002],"source":"\\n<p>The signature of the arguments at the call site.</p>\\n"},{"pos":[4314,4322],"content":"CallInfo","needQuote":true,"nodes":[{"content":"CallInfo","pos":[0,8]}]},{"content":"\\n&lt;p&gt;The signature of the arguments at the call site.&lt;/p&gt;\\n","pos":[5021,5080],"source":"\\n<p>The signature of the arguments at the call site.</p>\\n"},{"pos":[5397,5407],"content":"ReturnType","needQuote":true,"nodes":[{"content":"ReturnType","pos":[0,10]}]},{"pos":[6884,6928],"content":"Bind(DynamicMetaObject, DynamicMetaObject[])","needQuote":true,"nodes":[{"content":"Bind(DynamicMetaObject, DynamicMetaObject[])","pos":[0,44]}]},{"content":"\\n&lt;p&gt;The target of the dynamic set index operation.&lt;/p&gt;\\n","pos":[7844,7901],"source":"\\n<p>The target of the dynamic set index operation.</p>\\n"},{"content":"\\n&lt;p&gt;An array of arguments of the dynamic set index operation.&lt;/p&gt;\\n","pos":[7985,8053],"source":"\\n<p>An array of arguments of the dynamic set index operation.</p>\\n"},{"pos":[9374,9449],"content":"FallbackSetIndex(DynamicMetaObject, DynamicMetaObject[], DynamicMetaObject)","needQuote":true,"nodes":[{"content":"FallbackSetIndex(DynamicMetaObject, DynamicMetaObject[], DynamicMetaObject)","pos":[0,75]}]},{"content":"\\n&lt;p&gt;The target of the dynamic set index operation.&lt;/p&gt;\\n","pos":[10506,10563],"source":"\\n<p>The target of the dynamic set index operation.</p>\\n"},{"content":"\\n&lt;p&gt;The arguments of the dynamic set index operation.&lt;/p&gt;\\n","pos":[10650,10710],"source":"\\n<p>The arguments of the dynamic set index operation.</p>\\n"},{"content":"\\n&lt;p&gt;The value to set to the collection.&lt;/p&gt;\\n","pos":[10793,10839],"source":"\\n<p>The value to set to the collection.</p>\\n"},{"pos":[12214,12308],"content":"FallbackSetIndex(DynamicMetaObject, DynamicMetaObject[], DynamicMetaObject, DynamicMetaObject)","needQuote":true,"nodes":[{"content":"FallbackSetIndex(DynamicMetaObject, DynamicMetaObject[], DynamicMetaObject, DynamicMetaObject)","pos":[0,94]}]},{"content":"\\n&lt;p&gt;The target of the dynamic set index operation.&lt;/p&gt;\\n","pos":[13532,13589],"source":"\\n<p>The target of the dynamic set index operation.</p>\\n"},{"content":"\\n&lt;p&gt;The arguments of the dynamic set index operation.&lt;/p&gt;\\n","pos":[13676,13736],"source":"\\n<p>The arguments of the dynamic set index operation.</p>\\n"},{"content":"\\n&lt;p&gt;The value to set to the collection.&lt;/p&gt;\\n","pos":[13819,13865],"source":"\\n<p>The value to set to the collection.</p>\\n"},{"content":"\\n&lt;p&gt;The binding result to use if binding fails, or null.&lt;/p&gt;\\n","pos":[13958,14021],"source":"\\n<p>The binding result to use if binding fails, or null.</p>\\n"},{"pos":[14960,14974],"content":"System.Dynamic","needQuote":true,"nodes":[{"content":"System.Dynamic","pos":[0,14]}]},{"pos":[15129,15135],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15338,15352],"content":"CallSiteBinder","needQuote":true,"nodes":[{"content":"CallSiteBinder","pos":[0,14]}]},{"pos":[15604,15627],"content":"DynamicMetaObjectBinder","needQuote":true,"nodes":[{"content":"DynamicMetaObjectBinder","pos":[0,23]}]},{"pos":[16048,16116],"content":"Bind(Object[], ReadOnlyCollection<ParameterExpression>, LabelTarget)","needQuote":true,"nodes":[{"content":"Bind(Object[], ReadOnlyCollection&lt;ParameterExpression&gt;, LabelTarget)","pos":[0,68],"source":"Bind(Object[], ReadOnlyCollection<ParameterExpression>, LabelTarget)"}]},{"pos":[16844,16848],"content":"Bind","needQuote":true,"nodes":[{"content":"Bind","pos":[0,4]}]},{"pos":[16917,16918],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16968,16974],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":"[]","pos":[17035,17037]},{"content":",","pos":[17069,17070]},{"pos":[17163,17181],"content":"ReadOnlyCollection","needQuote":true,"nodes":[{"content":"ReadOnlyCollection","pos":[0,18]}]},{"pos":[17277,17278],"content":"<","needQuote":true,"nodes":[]},{"pos":[17358,17377],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":",","pos":[17500,17501]},{"pos":[17578,17589],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[17671,17672],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17911,17915],"content":"Bind","needQuote":true,"nodes":[{"content":"Bind","pos":[0,4]}]},{"pos":[17984,17985],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18035,18041],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18101,18103],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[18132,18133]},{"pos":[18226,18244],"content":"ReadOnlyCollection","needQuote":true,"nodes":[{"content":"ReadOnlyCollection","pos":[0,18]}]},{"content":"(Of","pos":[18341,18344]},{"pos":[18431,18450],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[18540,18541],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[18569,18570]},{"pos":[18647,18658],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[18740,18741],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19387,19432],"content":"Defer(DynamicMetaObject, DynamicMetaObject[])","needQuote":true,"nodes":[{"content":"Defer(DynamicMetaObject, DynamicMetaObject[])","pos":[0,45]}]},{"pos":[19895,19900],"content":"Defer","needQuote":true,"nodes":[{"content":"Defer","pos":[0,5]}]},{"pos":[19970,19971],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20040,20057],"content":"DynamicMetaObject","needQuote":true,"nodes":[{"content":"DynamicMetaObject","pos":[0,17]}]},{"content":",","pos":[20116,20117]},{"pos":[20191,20208],"content":"DynamicMetaObject","needQuote":true,"nodes":[{"content":"DynamicMetaObject","pos":[0,17]}]},{"content":"[]","pos":[20267,20269]},{"pos":[20300,20301],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20462,20467],"content":"Defer","needQuote":true,"nodes":[{"content":"Defer","pos":[0,5]}]},{"pos":[20537,20538],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20607,20624],"content":"DynamicMetaObject","needQuote":true,"nodes":[{"content":"DynamicMetaObject","pos":[0,17]}]},{"content":",","pos":[20683,20684]},{"pos":[20758,20775],"content":"DynamicMetaObject","needQuote":true,"nodes":[{"content":"DynamicMetaObject","pos":[0,17]}]},{"pos":[20833,20835],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[20863,20864],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21350,21376],"content":"Defer(DynamicMetaObject[])","needQuote":true,"nodes":[{"content":"Defer(DynamicMetaObject[])","pos":[0,26]}]},{"pos":[21719,21724],"content":"Defer","needQuote":true,"nodes":[{"content":"Defer","pos":[0,5]}]},{"pos":[21794,21795],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21864,21881],"content":"DynamicMetaObject","needQuote":true,"nodes":[{"content":"DynamicMetaObject","pos":[0,17]}]},{"content":"[]","pos":[21940,21942]},{"pos":[21973,21974],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22102,22107],"content":"Defer","needQuote":true,"nodes":[{"content":"Defer","pos":[0,5]}]},{"pos":[22177,22178],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22247,22264],"content":"DynamicMetaObject","needQuote":true,"nodes":[{"content":"DynamicMetaObject","pos":[0,17]}]},{"pos":[22322,22324],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[22352,22353],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22758,22783],"content":"GetUpdateExpression(Type)","needQuote":true,"nodes":[{"content":"GetUpdateExpression(Type)","pos":[0,25]}]},{"pos":[22974,22993],"content":"GetUpdateExpression","needQuote":true,"nodes":[{"content":"GetUpdateExpression","pos":[0,19]}]},{"pos":[23077,23078],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23126,23130],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[23188,23189],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23308,23327],"content":"GetUpdateExpression","needQuote":true,"nodes":[{"content":"GetUpdateExpression","pos":[0,19]}]},{"pos":[23411,23412],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23460,23464],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[23522,23523],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23844,23855],"content":"UpdateLabel","needQuote":true,"nodes":[{"content":"UpdateLabel","pos":[0,11]}]},{"pos":[24382,24420],"content":"BindDelegate<T>(CallSite<T>, Object[])","needQuote":true,"nodes":[{"content":"BindDelegate&lt;T&gt;(CallSite&lt;T&gt;, Object[])","pos":[0,38],"source":"BindDelegate<T>(CallSite<T>, Object[])"}]},{"pos":[24920,24935],"content":"BindDelegate<T>","needQuote":true,"nodes":[{"content":"BindDelegate&lt;T&gt;","pos":[0,15],"source":"BindDelegate<T>"}]},{"pos":[25023,25024],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25103,25111],"content":"CallSite","needQuote":true,"nodes":[{"content":"CallSite","pos":[0,8]}]},{"pos":[25177,25178],"content":"<","needQuote":true,"nodes":[]},{"pos":[25205,25206],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[25266,25267]},{"pos":[25322,25328],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":"[]","pos":[25389,25391]},{"pos":[25422,25423],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25596,25614],"content":"BindDelegate(Of T)","needQuote":true,"nodes":[{"content":"BindDelegate(Of T)","pos":[0,18]}]},{"pos":[25705,25706],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25785,25793],"content":"CallSite","needQuote":true,"nodes":[{"content":"CallSite","pos":[0,8]}]},{"content":"(Of","pos":[25860,25863]},{"pos":[25897,25898],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[25925,25926],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[25954,25955]},{"pos":[26010,26016],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[26076,26078],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[26106,26107],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26634,26651],"content":"CacheTarget<T>(T)","needQuote":true,"nodes":[{"content":"CacheTarget&lt;T&gt;(T)","pos":[0,17],"source":"CacheTarget<T>(T)"}]},{"pos":[26945,26959],"content":"CacheTarget<T>","needQuote":true,"nodes":[{"content":"CacheTarget&lt;T&gt;","pos":[0,14],"source":"CacheTarget<T>"}]},{"pos":[27046,27047],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27074,27075],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[27102,27103],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27217,27234],"content":"CacheTarget(Of T)","needQuote":true,"nodes":[{"content":"CacheTarget(Of T)","pos":[0,17]}]},{"pos":[27324,27325],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27352,27353],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[27380,27381],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27665,27675],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[27770,27778],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[27847,27848],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27875,27876],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27946,27954],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[28023,28024],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28051,28052],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28235,28249],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[28368,28374],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[28441,28442],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28492,28498],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[28558,28559],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28642,28648],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[28715,28716],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28766,28772],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[28832,28833],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29047,29069],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[29217,29223],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[29290,29291],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29341,29347],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[29408,29409]},{"pos":[29464,29470],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[29530,29531],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29628,29634],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[29701,29702],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29752,29758],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[29819,29820]},{"pos":[29875,29881],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[29941,29942],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30187,30218],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[30384,30399],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[30475,30476],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30526,30532],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[30593,30594]},{"pos":[30649,30655],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[30715,30716],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30822,30837],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[30913,30914],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30964,30970],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[31031,31032]},{"pos":[31087,31093],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[31153,31154],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31384,31397],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[31498,31509],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[31581,31582],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31609,31610],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31683,31694],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[31766,31767],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31794,31795],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31970,31979],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[32072,32079],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[32147,32148],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[32175,32176],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[32245,32252],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[32320,32321],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[32348,32349],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[32524,32541],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[32650,32665],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[32741,32742],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[32769,32770],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[32847,32862],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[32938,32939],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[32966,32967],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[33112,33118],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[33250,33281],"content":"System.Runtime.CompilerServices","needQuote":true,"nodes":[{"content":"System.Runtime.CompilerServices","pos":[0,31]}]},{"pos":[33581,33619],"content":"BindDelegate<T>(CallSite<T>, Object[])","needQuote":true,"nodes":[{"content":"BindDelegate&lt;T&gt;(CallSite&lt;T&gt;, Object[])","pos":[0,38],"source":"BindDelegate<T>(CallSite<T>, Object[])"}]},{"pos":[34119,34134],"content":"BindDelegate<T>","needQuote":true,"nodes":[{"content":"BindDelegate&lt;T&gt;","pos":[0,15],"source":"BindDelegate<T>"}]},{"pos":[34222,34223],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[34302,34310],"content":"CallSite","needQuote":true,"nodes":[{"content":"CallSite","pos":[0,8]}]},{"pos":[34376,34377],"content":"<","needQuote":true,"nodes":[]},{"pos":[34404,34405],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[34465,34466]},{"pos":[34521,34527],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":"[]","pos":[34588,34590]},{"pos":[34621,34622],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34795,34813],"content":"BindDelegate(Of T)","needQuote":true,"nodes":[{"content":"BindDelegate(Of T)","pos":[0,18]}]},{"pos":[34904,34905],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[34984,34992],"content":"CallSite","needQuote":true,"nodes":[{"content":"CallSite","pos":[0,8]}]},{"content":"(Of","pos":[35059,35062]},{"pos":[35096,35097],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[35124,35125],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[35153,35154]},{"pos":[35209,35215],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[35275,35277],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[35305,35306],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[35715,35732],"content":"CacheTarget<T>(T)","needQuote":true,"nodes":[{"content":"CacheTarget&lt;T&gt;(T)","pos":[0,17],"source":"CacheTarget<T>(T)"}]},{"pos":[36026,36040],"content":"CacheTarget<T>","needQuote":true,"nodes":[{"content":"CacheTarget&lt;T&gt;","pos":[0,14],"source":"CacheTarget<T>"}]},{"pos":[36127,36128],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[36155,36156],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[36183,36184],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[36298,36315],"content":"CacheTarget(Of T)","needQuote":true,"nodes":[{"content":"CacheTarget(Of T)","pos":[0,17]}]},{"pos":[36405,36406],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[36433,36434],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[36461,36462],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[36749,36757],"content":"CallInfo","needQuote":true,"nodes":[{"content":"CallInfo","pos":[0,8]}]},{"pos":[36992,37002],"content":"ReturnType","needQuote":true,"nodes":[{"content":"ReturnType","pos":[0,10]}]},{"pos":[37245,37249],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[37519,37563],"content":"Bind(DynamicMetaObject, DynamicMetaObject[])","needQuote":true,"nodes":[{"content":"Bind(DynamicMetaObject, DynamicMetaObject[])","pos":[0,44]}]},{"pos":[38022,38026],"content":"Bind","needQuote":true,"nodes":[{"content":"Bind","pos":[0,4]}]},{"pos":[38095,38096],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[38165,38182],"content":"DynamicMetaObject","needQuote":true,"nodes":[{"content":"DynamicMetaObject","pos":[0,17]}]},{"content":",","pos":[38241,38242]},{"pos":[38316,38333],"content":"DynamicMetaObject","needQuote":true,"nodes":[{"content":"DynamicMetaObject","pos":[0,17]}]},{"content":"[]","pos":[38392,38394]},{"pos":[38425,38426],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[38586,38590],"content":"Bind","needQuote":true,"nodes":[{"content":"Bind","pos":[0,4]}]},{"pos":[38659,38660],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[38729,38746],"content":"DynamicMetaObject","needQuote":true,"nodes":[{"content":"DynamicMetaObject","pos":[0,17]}]},{"content":",","pos":[38805,38806]},{"pos":[38880,38897],"content":"DynamicMetaObject","needQuote":true,"nodes":[{"content":"DynamicMetaObject","pos":[0,17]}]},{"pos":[38955,38957],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[38985,38986],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[39397,39414],"content":"DynamicMetaObject","needQuote":true,"nodes":[{"content":"DynamicMetaObject","pos":[0,17]}]},{"pos":[39592,39611],"content":"DynamicMetaObject[]","needQuote":true,"nodes":[{"content":"DynamicMetaObject[]","pos":[0,19]}]},{"pos":[39807,39824],"content":"DynamicMetaObject","needQuote":true,"nodes":[{"content":"DynamicMetaObject","pos":[0,17]}]},{"content":"[]","pos":[39883,39885]},{"pos":[39969,39986],"content":"DynamicMetaObject","needQuote":true,"nodes":[{"content":"DynamicMetaObject","pos":[0,17]}]},{"pos":[40044,40046],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]}],"content":"items:\n- uid: System.Dynamic.SetIndexBinder\n  commentId: T:System.Dynamic.SetIndexBinder\n  id: SetIndexBinder\n  parent: System.Dynamic\n  children:\n  - System.Dynamic.SetIndexBinder.#ctor(System.Dynamic.CallInfo)\n  - System.Dynamic.SetIndexBinder.Bind(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])\n  - System.Dynamic.SetIndexBinder.CallInfo\n  - System.Dynamic.SetIndexBinder.FallbackSetIndex(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[],System.Dynamic.DynamicMetaObject)\n  - System.Dynamic.SetIndexBinder.FallbackSetIndex(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[],System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject)\n  - System.Dynamic.SetIndexBinder.ReturnType\n  langs:\n  - csharp\n  - vb\n  name: SetIndexBinder\n  fullName: System.Dynamic.SetIndexBinder\n  type: Class\n  source:\n    remote:\n      path: src/System.Dynamic.Runtime/src/System/Dynamic/SetIndexBinder.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetIndexBinder\n    path: src/System.Dynamic.Runtime/src/System/Dynamic/SetIndexBinder.cs\n    startLine: 11\n  assemblies:\n  - System.Dynamic.Runtime\n  namespace: System.Dynamic\n  summary: \"\\n<p>Represents the dynamic set index operation at the call site, providing the binding semantic and the details about the operation.</p>\\n\"\n  syntax:\n    content: 'public abstract class SetIndexBinder : DynamicMetaObjectBinder'\n    content.vb: >-\n      Public MustInherit Class SetIndexBinder\n          Inherits DynamicMetaObjectBinder\n  inheritance:\n  - System.Object\n  - System.Runtime.CompilerServices.CallSiteBinder\n  - System.Dynamic.DynamicMetaObjectBinder\n  inheritedMembers:\n  - System.Dynamic.DynamicMetaObjectBinder.Bind(System.Object[],System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.LabelTarget)\n  - System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])\n  - System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject[])\n  - System.Dynamic.DynamicMetaObjectBinder.GetUpdateExpression(System.Type)\n  - System.Runtime.CompilerServices.CallSiteBinder.UpdateLabel\n  - System.Runtime.CompilerServices.CallSiteBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{{T}},System.Object[])\n  - System.Runtime.CompilerServices.CallSiteBinder.CacheTarget``1({T})\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - abstract\n  - class\n  modifiers.vb:\n  - Public\n  - MustInherit\n  - Class\n  nameWithType: SetIndexBinder\n- uid: System.Dynamic.SetIndexBinder.#ctor(System.Dynamic.CallInfo)\n  commentId: M:System.Dynamic.SetIndexBinder.#ctor(System.Dynamic.CallInfo)\n  id: '#ctor(System.Dynamic.CallInfo)'\n  parent: System.Dynamic.SetIndexBinder\n  langs:\n  - csharp\n  - vb\n  name: SetIndexBinder(CallInfo)\n  fullName: System.Dynamic.SetIndexBinder.SetIndexBinder(System.Dynamic.CallInfo)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Dynamic.Runtime/src/System/Dynamic/SetIndexBinder.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Dynamic.Runtime/src/System/Dynamic/SetIndexBinder.cs\n    startLine: 19\n  assemblies:\n  - System.Dynamic.Runtime\n  namespace: System.Dynamic\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Dynamic.SetIndexBinder\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: protected SetIndexBinder(CallInfo callInfo)\n    content.vb: Protected Sub New(callInfo As CallInfo)\n    parameters:\n    - id: callInfo\n      type: System.Dynamic.CallInfo\n      description: \"\\n<p>The signature of the arguments at the call site.</p>\\n\"\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: SetIndexBinder.SetIndexBinder(CallInfo)\n- uid: System.Dynamic.SetIndexBinder.CallInfo\n  commentId: P:System.Dynamic.SetIndexBinder.CallInfo\n  id: CallInfo\n  parent: System.Dynamic.SetIndexBinder\n  langs:\n  - csharp\n  - vb\n  name: CallInfo\n  fullName: System.Dynamic.SetIndexBinder.CallInfo\n  type: Property\n  source:\n    remote:\n      path: src/System.Dynamic.Runtime/src/System/Dynamic/SetIndexBinder.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CallInfo\n    path: src/System.Dynamic.Runtime/src/System/Dynamic/SetIndexBinder.cs\n    startLine: 36\n  assemblies:\n  - System.Dynamic.Runtime\n  namespace: System.Dynamic\n  summary: \"\\n<p>Gets the signature of the arguments at the call site.</p>\\n\"\n  syntax:\n    content: public CallInfo CallInfo { get; }\n    content.vb: Public ReadOnly Property CallInfo As CallInfo\n    parameters: []\n    return:\n      type: System.Dynamic.CallInfo\n      description: \"\\n<p>The signature of the arguments at the call site.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: SetIndexBinder.CallInfo\n- uid: System.Dynamic.SetIndexBinder.ReturnType\n  commentId: P:System.Dynamic.SetIndexBinder.ReturnType\n  id: ReturnType\n  parent: System.Dynamic.SetIndexBinder\n  langs:\n  - csharp\n  - vb\n  name: ReturnType\n  fullName: System.Dynamic.SetIndexBinder.ReturnType\n  type: Property\n  source:\n    remote:\n      path: src/System.Dynamic.Runtime/src/System/Dynamic/SetIndexBinder.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReturnType\n    path: src/System.Dynamic.Runtime/src/System/Dynamic/SetIndexBinder.cs\n    startLine: 28\n  assemblies:\n  - System.Dynamic.Runtime\n  namespace: System.Dynamic\n  summary: \"\\n<p>The result type of the operation.</p>\\n\"\n  syntax:\n    content: public override sealed Type ReturnType { get; }\n    content.vb: Public NotOverridable Overrides ReadOnly Property ReturnType As Type\n    parameters: []\n    return:\n      type: System.Type\n      description: \"\\n<p>The <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object representing the result type of the operation.</p>\\n\"\n  overridden: System.Dynamic.DynamicMetaObjectBinder.ReturnType\n  modifiers.csharp:\n  - public\n  - override\n  - sealed\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - NotOverridable\n  - ReadOnly\n  nameWithType: SetIndexBinder.ReturnType\n- uid: System.Dynamic.SetIndexBinder.Bind(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])\n  commentId: M:System.Dynamic.SetIndexBinder.Bind(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])\n  id: Bind(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])\n  parent: System.Dynamic.SetIndexBinder\n  langs:\n  - csharp\n  - vb\n  name: Bind(DynamicMetaObject, DynamicMetaObject[])\n  fullName: System.Dynamic.SetIndexBinder.Bind(System.Dynamic.DynamicMetaObject, System.Dynamic.DynamicMetaObject[])\n  type: Method\n  source:\n    remote:\n      path: src/System.Dynamic.Runtime/src/System/Dynamic/SetIndexBinder.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Bind\n    path: src/System.Dynamic.Runtime/src/System/Dynamic/SetIndexBinder.cs\n    startLine: 47\n  assemblies:\n  - System.Dynamic.Runtime\n  namespace: System.Dynamic\n  summary: \"\\n<p>Performs the binding of the dynamic set index operation.</p>\\n\"\n  syntax:\n    content: public override sealed DynamicMetaObject Bind(DynamicMetaObject target, DynamicMetaObject[] args)\n    content.vb: Public NotOverridable Overrides Function Bind(target As DynamicMetaObject, args As DynamicMetaObject()) As DynamicMetaObject\n    parameters:\n    - id: target\n      type: System.Dynamic.DynamicMetaObject\n      description: \"\\n<p>The target of the dynamic set index operation.</p>\\n\"\n    - id: args\n      type: System.Dynamic.DynamicMetaObject[]\n      description: \"\\n<p>An array of arguments of the dynamic set index operation.</p>\\n\"\n    return:\n      type: System.Dynamic.DynamicMetaObject\n      description: \"\\n<p>The <xref href=\\\"System.Dynamic.DynamicMetaObject\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> representing the result of the binding.</p>\\n\"\n  overridden: System.Dynamic.DynamicMetaObjectBinder.Bind(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])\n  modifiers.csharp:\n  - public\n  - override\n  - sealed\n  modifiers.vb:\n  - Public\n  - Overrides\n  - NotOverridable\n  fullName.vb: System.Dynamic.SetIndexBinder.Bind(System.Dynamic.DynamicMetaObject, System.Dynamic.DynamicMetaObject())\n  name.vb: Bind(DynamicMetaObject, DynamicMetaObject())\n  nameWithType: SetIndexBinder.Bind(DynamicMetaObject, DynamicMetaObject[])\n  nameWithType.vb: SetIndexBinder.Bind(DynamicMetaObject, DynamicMetaObject())\n- uid: System.Dynamic.SetIndexBinder.FallbackSetIndex(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[],System.Dynamic.DynamicMetaObject)\n  commentId: M:System.Dynamic.SetIndexBinder.FallbackSetIndex(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[],System.Dynamic.DynamicMetaObject)\n  id: FallbackSetIndex(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[],System.Dynamic.DynamicMetaObject)\n  parent: System.Dynamic.SetIndexBinder\n  langs:\n  - csharp\n  - vb\n  name: FallbackSetIndex(DynamicMetaObject, DynamicMetaObject[], DynamicMetaObject)\n  fullName: System.Dynamic.SetIndexBinder.FallbackSetIndex(System.Dynamic.DynamicMetaObject, System.Dynamic.DynamicMetaObject[], System.Dynamic.DynamicMetaObject)\n  type: Method\n  source:\n    remote:\n      path: src/System.Dynamic.Runtime/src/System/Dynamic/SetIndexBinder.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: FallbackSetIndex\n    path: src/System.Dynamic.Runtime/src/System/Dynamic/SetIndexBinder.cs\n    startLine: 78\n  assemblies:\n  - System.Dynamic.Runtime\n  namespace: System.Dynamic\n  summary: \"\\n<p>Performs the binding of the dynamic set index operation if the target dynamic object cannot bind.</p>\\n\"\n  syntax:\n    content: public DynamicMetaObject FallbackSetIndex(DynamicMetaObject target, DynamicMetaObject[] indexes, DynamicMetaObject value)\n    content.vb: Public Function FallbackSetIndex(target As DynamicMetaObject, indexes As DynamicMetaObject(), value As DynamicMetaObject) As DynamicMetaObject\n    parameters:\n    - id: target\n      type: System.Dynamic.DynamicMetaObject\n      description: \"\\n<p>The target of the dynamic set index operation.</p>\\n\"\n    - id: indexes\n      type: System.Dynamic.DynamicMetaObject[]\n      description: \"\\n<p>The arguments of the dynamic set index operation.</p>\\n\"\n    - id: value\n      type: System.Dynamic.DynamicMetaObject\n      description: \"\\n<p>The value to set to the collection.</p>\\n\"\n    return:\n      type: System.Dynamic.DynamicMetaObject\n      description: \"\\n<p>The <xref href=\\\"System.Dynamic.DynamicMetaObject\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> representing the result of the binding.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Dynamic.SetIndexBinder.FallbackSetIndex(System.Dynamic.DynamicMetaObject, System.Dynamic.DynamicMetaObject(), System.Dynamic.DynamicMetaObject)\n  name.vb: FallbackSetIndex(DynamicMetaObject, DynamicMetaObject(), DynamicMetaObject)\n  nameWithType: SetIndexBinder.FallbackSetIndex(DynamicMetaObject, DynamicMetaObject[], DynamicMetaObject)\n  nameWithType.vb: SetIndexBinder.FallbackSetIndex(DynamicMetaObject, DynamicMetaObject(), DynamicMetaObject)\n- uid: System.Dynamic.SetIndexBinder.FallbackSetIndex(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[],System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject)\n  commentId: M:System.Dynamic.SetIndexBinder.FallbackSetIndex(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[],System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject)\n  id: FallbackSetIndex(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[],System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject)\n  parent: System.Dynamic.SetIndexBinder\n  langs:\n  - csharp\n  - vb\n  name: FallbackSetIndex(DynamicMetaObject, DynamicMetaObject[], DynamicMetaObject, DynamicMetaObject)\n  fullName: System.Dynamic.SetIndexBinder.FallbackSetIndex(System.Dynamic.DynamicMetaObject, System.Dynamic.DynamicMetaObject[], System.Dynamic.DynamicMetaObject, System.Dynamic.DynamicMetaObject)\n  type: Method\n  source:\n    remote:\n      path: src/System.Dynamic.Runtime/src/System/Dynamic/SetIndexBinder.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: FallbackSetIndex\n    path: src/System.Dynamic.Runtime/src/System/Dynamic/SetIndexBinder.cs\n    startLine: 91\n  assemblies:\n  - System.Dynamic.Runtime\n  namespace: System.Dynamic\n  summary: \"\\n<p>When overridden in the derived class, performs the binding of the dynamic set index operation if the target dynamic object cannot bind.</p>\\n\"\n  syntax:\n    content: public abstract DynamicMetaObject FallbackSetIndex(DynamicMetaObject target, DynamicMetaObject[] indexes, DynamicMetaObject value, DynamicMetaObject errorSuggestion)\n    content.vb: Public MustOverride Function FallbackSetIndex(target As DynamicMetaObject, indexes As DynamicMetaObject(), value As DynamicMetaObject, errorSuggestion As DynamicMetaObject) As DynamicMetaObject\n    parameters:\n    - id: target\n      type: System.Dynamic.DynamicMetaObject\n      description: \"\\n<p>The target of the dynamic set index operation.</p>\\n\"\n    - id: indexes\n      type: System.Dynamic.DynamicMetaObject[]\n      description: \"\\n<p>The arguments of the dynamic set index operation.</p>\\n\"\n    - id: value\n      type: System.Dynamic.DynamicMetaObject\n      description: \"\\n<p>The value to set to the collection.</p>\\n\"\n    - id: errorSuggestion\n      type: System.Dynamic.DynamicMetaObject\n      description: \"\\n<p>The binding result to use if binding fails, or null.</p>\\n\"\n    return:\n      type: System.Dynamic.DynamicMetaObject\n      description: \"\\n<p>The <xref href=\\\"System.Dynamic.DynamicMetaObject\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> representing the result of the binding.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  modifiers.vb:\n  - Public\n  - MustOverride\n  fullName.vb: System.Dynamic.SetIndexBinder.FallbackSetIndex(System.Dynamic.DynamicMetaObject, System.Dynamic.DynamicMetaObject(), System.Dynamic.DynamicMetaObject, System.Dynamic.DynamicMetaObject)\n  name.vb: FallbackSetIndex(DynamicMetaObject, DynamicMetaObject(), DynamicMetaObject, DynamicMetaObject)\n  nameWithType: SetIndexBinder.FallbackSetIndex(DynamicMetaObject, DynamicMetaObject[], DynamicMetaObject, DynamicMetaObject)\n  nameWithType.vb: SetIndexBinder.FallbackSetIndex(DynamicMetaObject, DynamicMetaObject(), DynamicMetaObject, DynamicMetaObject)\nreferences:\n- uid: System.Dynamic\n  isExternal: false\n  name: System.Dynamic\n  fullName: System.Dynamic\n  nameWithType: System.Dynamic\n  commentId: N:System.Dynamic\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Runtime.CompilerServices.CallSiteBinder\n  parent: System.Runtime.CompilerServices\n  isExternal: false\n  name: CallSiteBinder\n  fullName: System.Runtime.CompilerServices.CallSiteBinder\n  nameWithType: CallSiteBinder\n  commentId: T:System.Runtime.CompilerServices.CallSiteBinder\n- uid: System.Dynamic.DynamicMetaObjectBinder\n  parent: System.Dynamic\n  isExternal: false\n  name: DynamicMetaObjectBinder\n  fullName: System.Dynamic.DynamicMetaObjectBinder\n  nameWithType: DynamicMetaObjectBinder\n  commentId: T:System.Dynamic.DynamicMetaObjectBinder\n- uid: System.Dynamic.DynamicMetaObjectBinder.Bind(System.Object[],System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.LabelTarget)\n  parent: System.Dynamic.DynamicMetaObjectBinder\n  isExternal: true\n  name: Bind(Object[], ReadOnlyCollection<ParameterExpression>, LabelTarget)\n  fullName: System.Dynamic.DynamicMetaObjectBinder.Bind(System.Object[], System.Collections.ObjectModel.ReadOnlyCollection<System.Linq.Expressions.ParameterExpression>, System.Linq.Expressions.LabelTarget)\n  fullname.vb: System.Dynamic.DynamicMetaObjectBinder.Bind(System.Object(), System.Collections.ObjectModel.ReadOnlyCollection(Of System.Linq.Expressions.ParameterExpression), System.Linq.Expressions.LabelTarget)\n  name.vb: Bind(Object(), ReadOnlyCollection(Of ParameterExpression), LabelTarget)\n  spec.csharp:\n  - uid: System.Dynamic.DynamicMetaObjectBinder.Bind(System.Object[],System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.LabelTarget)\n    name: Bind\n    fullName: System.Dynamic.DynamicMetaObjectBinder.Bind\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Dynamic.DynamicMetaObjectBinder.Bind(System.Object[],System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.LabelTarget)\n    name: Bind\n    fullName: System.Dynamic.DynamicMetaObjectBinder.Bind\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: DynamicMetaObjectBinder.Bind(Object[], ReadOnlyCollection<ParameterExpression>, LabelTarget)\n  nameWithType.vb: DynamicMetaObjectBinder.Bind(Object(), ReadOnlyCollection(Of ParameterExpression), LabelTarget)\n  commentId: M:System.Dynamic.DynamicMetaObjectBinder.Bind(System.Object[],System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.LabelTarget)\n- uid: System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])\n  parent: System.Dynamic.DynamicMetaObjectBinder\n  isExternal: false\n  name: Defer(DynamicMetaObject, DynamicMetaObject[])\n  fullName: System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject, System.Dynamic.DynamicMetaObject[])\n  fullname.vb: System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject, System.Dynamic.DynamicMetaObject())\n  name.vb: Defer(DynamicMetaObject, DynamicMetaObject())\n  spec.csharp:\n  - uid: System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])\n    name: Defer\n    fullName: System.Dynamic.DynamicMetaObjectBinder.Defer\n  - name: (\n    fullName: (\n  - uid: System.Dynamic.DynamicMetaObject\n    name: DynamicMetaObject\n    fullName: System.Dynamic.DynamicMetaObject\n  - name: ', '\n    fullName: ', '\n  - uid: System.Dynamic.DynamicMetaObject\n    name: DynamicMetaObject\n    fullName: System.Dynamic.DynamicMetaObject\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])\n    name: Defer\n    fullName: System.Dynamic.DynamicMetaObjectBinder.Defer\n  - name: (\n    fullName: (\n  - uid: System.Dynamic.DynamicMetaObject\n    name: DynamicMetaObject\n    fullName: System.Dynamic.DynamicMetaObject\n  - name: ', '\n    fullName: ', '\n  - uid: System.Dynamic.DynamicMetaObject\n    name: DynamicMetaObject\n    fullName: System.Dynamic.DynamicMetaObject\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: DynamicMetaObjectBinder.Defer(DynamicMetaObject, DynamicMetaObject[])\n  nameWithType.vb: DynamicMetaObjectBinder.Defer(DynamicMetaObject, DynamicMetaObject())\n  commentId: M:System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])\n- uid: System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject[])\n  parent: System.Dynamic.DynamicMetaObjectBinder\n  isExternal: false\n  name: Defer(DynamicMetaObject[])\n  fullName: System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject[])\n  fullname.vb: System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject())\n  name.vb: Defer(DynamicMetaObject())\n  spec.csharp:\n  - uid: System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject[])\n    name: Defer\n    fullName: System.Dynamic.DynamicMetaObjectBinder.Defer\n  - name: (\n    fullName: (\n  - uid: System.Dynamic.DynamicMetaObject\n    name: DynamicMetaObject\n    fullName: System.Dynamic.DynamicMetaObject\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject[])\n    name: Defer\n    fullName: System.Dynamic.DynamicMetaObjectBinder.Defer\n  - name: (\n    fullName: (\n  - uid: System.Dynamic.DynamicMetaObject\n    name: DynamicMetaObject\n    fullName: System.Dynamic.DynamicMetaObject\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: DynamicMetaObjectBinder.Defer(DynamicMetaObject[])\n  nameWithType.vb: DynamicMetaObjectBinder.Defer(DynamicMetaObject())\n  commentId: M:System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject[])\n- uid: System.Dynamic.DynamicMetaObjectBinder.GetUpdateExpression(System.Type)\n  parent: System.Dynamic.DynamicMetaObjectBinder\n  isExternal: true\n  name: GetUpdateExpression(Type)\n  fullName: System.Dynamic.DynamicMetaObjectBinder.GetUpdateExpression(System.Type)\n  spec.csharp:\n  - uid: System.Dynamic.DynamicMetaObjectBinder.GetUpdateExpression(System.Type)\n    name: GetUpdateExpression\n    fullName: System.Dynamic.DynamicMetaObjectBinder.GetUpdateExpression\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Dynamic.DynamicMetaObjectBinder.GetUpdateExpression(System.Type)\n    name: GetUpdateExpression\n    fullName: System.Dynamic.DynamicMetaObjectBinder.GetUpdateExpression\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: DynamicMetaObjectBinder.GetUpdateExpression(Type)\n  commentId: M:System.Dynamic.DynamicMetaObjectBinder.GetUpdateExpression(System.Type)\n- uid: System.Runtime.CompilerServices.CallSiteBinder.UpdateLabel\n  parent: System.Runtime.CompilerServices.CallSiteBinder\n  isExternal: false\n  name: UpdateLabel\n  fullName: System.Runtime.CompilerServices.CallSiteBinder.UpdateLabel\n  nameWithType: CallSiteBinder.UpdateLabel\n  commentId: P:System.Runtime.CompilerServices.CallSiteBinder.UpdateLabel\n- uid: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{{T}},System.Object[])\n  parent: System.Runtime.CompilerServices.CallSiteBinder\n  definition: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{``0},System.Object[])\n  name: BindDelegate<T>(CallSite<T>, Object[])\n  fullName: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate<T>(System.Runtime.CompilerServices.CallSite<T>, System.Object[])\n  fullname.vb: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate(Of T)(System.Runtime.CompilerServices.CallSite(Of T), System.Object())\n  name.vb: BindDelegate(Of T)(CallSite(Of T), Object())\n  spec.csharp:\n  - uid: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{``0},System.Object[])\n    name: BindDelegate<T>\n    fullName: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate<T>\n  - name: (\n    fullName: (\n  - uid: System.Runtime.CompilerServices.CallSite`1\n    name: CallSite\n    fullName: System.Runtime.CompilerServices.CallSite\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{``0},System.Object[])\n    name: BindDelegate(Of T)\n    fullName: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Runtime.CompilerServices.CallSite`1\n    name: CallSite\n    fullName: System.Runtime.CompilerServices.CallSite\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: CallSiteBinder.BindDelegate<T>(CallSite<T>, Object[])\n  nameWithType.vb: CallSiteBinder.BindDelegate(Of T)(CallSite(Of T), Object())\n  commentId: M:System.Runtime.CompilerServices.CallSiteBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{``0},System.Object[])\n- uid: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget``1({T})\n  parent: System.Runtime.CompilerServices.CallSiteBinder\n  definition: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget``1(``0)\n  name: CacheTarget<T>(T)\n  fullName: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget<T>(T)\n  fullname.vb: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget(Of T)(T)\n  name.vb: CacheTarget(Of T)(T)\n  spec.csharp:\n  - uid: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget``1(``0)\n    name: CacheTarget<T>\n    fullName: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget<T>\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget``1(``0)\n    name: CacheTarget(Of T)\n    fullName: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget(Of T)\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: CallSiteBinder.CacheTarget<T>(T)\n  nameWithType.vb: CallSiteBinder.CacheTarget(Of T)(T)\n  commentId: M:System.Runtime.CompilerServices.CallSiteBinder.CacheTarget``1(``0)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Runtime.CompilerServices\n  isExternal: false\n  name: System.Runtime.CompilerServices\n  fullName: System.Runtime.CompilerServices\n  nameWithType: System.Runtime.CompilerServices\n  commentId: N:System.Runtime.CompilerServices\n- uid: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{``0},System.Object[])\n  isExternal: true\n  name: BindDelegate<T>(CallSite<T>, Object[])\n  fullName: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate<T>(System.Runtime.CompilerServices.CallSite<T>, System.Object[])\n  fullname.vb: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate(Of T)(System.Runtime.CompilerServices.CallSite(Of T), System.Object())\n  name.vb: BindDelegate(Of T)(CallSite(Of T), Object())\n  spec.csharp:\n  - uid: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{``0},System.Object[])\n    name: BindDelegate<T>\n    fullName: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate<T>\n  - name: (\n    fullName: (\n  - uid: System.Runtime.CompilerServices.CallSite`1\n    name: CallSite\n    fullName: System.Runtime.CompilerServices.CallSite\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{``0},System.Object[])\n    name: BindDelegate(Of T)\n    fullName: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Runtime.CompilerServices.CallSite`1\n    name: CallSite\n    fullName: System.Runtime.CompilerServices.CallSite\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: CallSiteBinder.BindDelegate<T>(CallSite<T>, Object[])\n  nameWithType.vb: CallSiteBinder.BindDelegate(Of T)(CallSite(Of T), Object())\n  commentId: M:System.Runtime.CompilerServices.CallSiteBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{``0},System.Object[])\n- uid: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget``1(``0)\n  isExternal: false\n  name: CacheTarget<T>(T)\n  fullName: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget<T>(T)\n  fullname.vb: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget(Of T)(T)\n  name.vb: CacheTarget(Of T)(T)\n  spec.csharp:\n  - uid: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget``1(``0)\n    name: CacheTarget<T>\n    fullName: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget<T>\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget``1(``0)\n    name: CacheTarget(Of T)\n    fullName: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget(Of T)\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: CallSiteBinder.CacheTarget<T>(T)\n  nameWithType.vb: CallSiteBinder.CacheTarget(Of T)(T)\n  commentId: M:System.Runtime.CompilerServices.CallSiteBinder.CacheTarget``1(``0)\n- uid: System.Dynamic.CallInfo\n  parent: System.Dynamic\n  isExternal: false\n  name: CallInfo\n  fullName: System.Dynamic.CallInfo\n  nameWithType: CallInfo\n  commentId: T:System.Dynamic.CallInfo\n- uid: System.Dynamic.DynamicMetaObjectBinder.ReturnType\n  parent: System.Dynamic.DynamicMetaObjectBinder\n  isExternal: false\n  name: ReturnType\n  fullName: System.Dynamic.DynamicMetaObjectBinder.ReturnType\n  nameWithType: DynamicMetaObjectBinder.ReturnType\n  commentId: P:System.Dynamic.DynamicMetaObjectBinder.ReturnType\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  fullName: System.Type\n  nameWithType: Type\n  commentId: T:System.Type\n- uid: System.Dynamic.DynamicMetaObjectBinder.Bind(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])\n  parent: System.Dynamic.DynamicMetaObjectBinder\n  isExternal: false\n  name: Bind(DynamicMetaObject, DynamicMetaObject[])\n  fullName: System.Dynamic.DynamicMetaObjectBinder.Bind(System.Dynamic.DynamicMetaObject, System.Dynamic.DynamicMetaObject[])\n  fullname.vb: System.Dynamic.DynamicMetaObjectBinder.Bind(System.Dynamic.DynamicMetaObject, System.Dynamic.DynamicMetaObject())\n  name.vb: Bind(DynamicMetaObject, DynamicMetaObject())\n  spec.csharp:\n  - uid: System.Dynamic.DynamicMetaObjectBinder.Bind(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])\n    name: Bind\n    fullName: System.Dynamic.DynamicMetaObjectBinder.Bind\n  - name: (\n    fullName: (\n  - uid: System.Dynamic.DynamicMetaObject\n    name: DynamicMetaObject\n    fullName: System.Dynamic.DynamicMetaObject\n  - name: ', '\n    fullName: ', '\n  - uid: System.Dynamic.DynamicMetaObject\n    name: DynamicMetaObject\n    fullName: System.Dynamic.DynamicMetaObject\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Dynamic.DynamicMetaObjectBinder.Bind(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])\n    name: Bind\n    fullName: System.Dynamic.DynamicMetaObjectBinder.Bind\n  - name: (\n    fullName: (\n  - uid: System.Dynamic.DynamicMetaObject\n    name: DynamicMetaObject\n    fullName: System.Dynamic.DynamicMetaObject\n  - name: ', '\n    fullName: ', '\n  - uid: System.Dynamic.DynamicMetaObject\n    name: DynamicMetaObject\n    fullName: System.Dynamic.DynamicMetaObject\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: DynamicMetaObjectBinder.Bind(DynamicMetaObject, DynamicMetaObject[])\n  nameWithType.vb: DynamicMetaObjectBinder.Bind(DynamicMetaObject, DynamicMetaObject())\n  commentId: M:System.Dynamic.DynamicMetaObjectBinder.Bind(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])\n- uid: System.Dynamic.DynamicMetaObject\n  parent: System.Dynamic\n  isExternal: false\n  name: DynamicMetaObject\n  fullName: System.Dynamic.DynamicMetaObject\n  nameWithType: DynamicMetaObject\n  commentId: T:System.Dynamic.DynamicMetaObject\n- uid: System.Dynamic.DynamicMetaObject[]\n  name: DynamicMetaObject[]\n  fullName: System.Dynamic.DynamicMetaObject[]\n  fullname.vb: System.Dynamic.DynamicMetaObject()\n  name.vb: DynamicMetaObject()\n  spec.csharp:\n  - uid: System.Dynamic.DynamicMetaObject\n    name: DynamicMetaObject\n    fullName: System.Dynamic.DynamicMetaObject\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Dynamic.DynamicMetaObject\n    name: DynamicMetaObject\n    fullName: System.Dynamic.DynamicMetaObject\n  - name: ()\n    fullName: ()\n  nameWithType: DynamicMetaObject[]\n  nameWithType.vb: DynamicMetaObject()\n"}