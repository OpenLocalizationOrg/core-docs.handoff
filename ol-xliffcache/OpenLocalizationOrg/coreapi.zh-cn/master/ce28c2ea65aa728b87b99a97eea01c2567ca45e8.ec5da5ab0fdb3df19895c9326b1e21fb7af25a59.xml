{"nodes":[{"pos":[5582,5593],"content":"SqlMetaData","needQuote":true,"nodes":[{"content":"SqlMetaData","pos":[0,11]}]},{"pos":[7150,7180],"content":"SqlMetaData(String, SqlDbType)","needQuote":true,"nodes":[{"content":"SqlMetaData(String, SqlDbType)","pos":[0,30]}]},{"content":"\\n&lt;p&gt;The name of the column.&lt;/p&gt;\\n","pos":[8072,8106],"source":"\\n<p>The name of the column.</p>\\n"},{"content":"\\n&lt;p&gt;The SQL Server type of the parameter or column.&lt;/p&gt;\\n","pos":[8179,8237],"source":"\\n<p>The SQL Server type of the parameter or column.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;Name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[8356,8410],"source":"\\n<p>The <em>Name</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;A &lt;strong&gt;SqlDbType&lt;/strong&gt; that is not allowed was passed to the constructor as &lt;em&gt;dbType&lt;/em&gt;.&lt;/p&gt;\\n","pos":[8507,8616],"source":"\\n<p>A <strong>SqlDbType</strong> that is not allowed was passed to the constructor as <em>dbType</em>.</p>\\n"},{"pos":[9281,9347],"content":"SqlMetaData(String, SqlDbType, Boolean, Boolean, SortOrder, Int32)","needQuote":true,"nodes":[{"content":"SqlMetaData(String, SqlDbType, Boolean, Boolean, SortOrder, Int32)","pos":[0,66]}]},{"content":"\\n&lt;p&gt;The name of the column.&lt;/p&gt;\\n","pos":[10732,10766],"source":"\\n<p>The name of the column.</p>\\n"},{"content":"\\n&lt;p&gt;The SQL Server type of the parameter or column.&lt;/p&gt;\\n","pos":[10839,10897],"source":"\\n<p>The SQL Server type of the parameter or column.</p>\\n"},{"content":"\\n&lt;p&gt;Specifes whether this column should use the default server value.&lt;/p&gt;\\n","pos":[10973,11049],"source":"\\n<p>Specifes whether this column should use the default server value.</p>\\n"},{"content":"\\n&lt;p&gt;Specifies if the column in the table-valued parameter is unique.&lt;/p&gt;\\n","pos":[11120,11195],"source":"\\n<p>Specifies if the column in the table-valued parameter is unique.</p>\\n"},{"content":"\\n&lt;p&gt;Specifies the sort order for a column.&lt;/p&gt;\\n","pos":[11287,11336],"source":"\\n<p>Specifies the sort order for a column.</p>\\n"},{"content":"\\n&lt;p&gt;Specifies the ordinal of the sort column.&lt;/p&gt;\\n","pos":[11405,11457],"source":"\\n<p>Specifies the ordinal of the sort column.</p>\\n"},{"pos":[12005,12047],"content":"SqlMetaData(String, SqlDbType, Byte, Byte)","needQuote":true,"nodes":[{"content":"SqlMetaData(String, SqlDbType, Byte, Byte)","pos":[0,42]}]},{"content":"\\n&lt;p&gt;The name of the parameter or column.&lt;/p&gt;\\n","pos":[13046,13093],"source":"\\n<p>The name of the parameter or column.</p>\\n"},{"content":"\\n&lt;p&gt;The SQL Server type of the parameter or column.&lt;/p&gt;\\n","pos":[13166,13224],"source":"\\n<p>The SQL Server type of the parameter or column.</p>\\n"},{"content":"\\n&lt;p&gt;The precision of the parameter or column.&lt;/p&gt;\\n","pos":[13290,13342],"source":"\\n<p>The precision of the parameter or column.</p>\\n"},{"content":"\\n&lt;p&gt;The scale of the parameter or column.&lt;/p&gt;\\n","pos":[13404,13452],"source":"\\n<p>The scale of the parameter or column.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;Name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[13571,13619],"source":"\\n<p>The <em>Name</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[13620,13626],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A &lt;strong&gt;SqlDbType&lt;/strong&gt; that is not allowed was passed to the constructor as &lt;em&gt;dbType&lt;/em&gt;, or &lt;em&gt;scale&lt;/em&gt; was greater than &lt;em&gt;precision&lt;/em&gt;.","pos":[13723,13881],"source":"\\n<p>A <strong>SqlDbType</strong> that is not allowed was passed to the constructor as <em>dbType</em>, or <em>scale</em> was greater than <em>precision</em>."},{"content":"&lt;/p&gt;\\n","pos":[13882,13888],"source":" </p>\\n"},{"pos":[14637,14715],"content":"SqlMetaData(String, SqlDbType, Byte, Byte, Boolean, Boolean, SortOrder, Int32)","needQuote":true,"nodes":[{"content":"SqlMetaData(String, SqlDbType, Byte, Byte, Boolean, Boolean, SortOrder, Int32)","pos":[0,78]}]},{"content":"\\n&lt;p&gt;The name of the column.&lt;/p&gt;\\n","pos":[16212,16246],"source":"\\n<p>The name of the column.</p>\\n"},{"content":"\\n&lt;p&gt;The SQL Server type of the parameter or column.&lt;/p&gt;\\n","pos":[16319,16377],"source":"\\n<p>The SQL Server type of the parameter or column.</p>\\n"},{"content":"\\n&lt;p&gt;The precision of the parameter or column.&lt;/p&gt;\\n","pos":[16443,16495],"source":"\\n<p>The precision of the parameter or column.</p>\\n"},{"content":"\\n&lt;p&gt;The scale of the parameter or column.&lt;/p&gt;\\n","pos":[16557,16605],"source":"\\n<p>The scale of the parameter or column.</p>\\n"},{"content":"\\n&lt;p&gt;Specifes whether this column should use the default server value.&lt;/p&gt;\\n","pos":[16681,16757],"source":"\\n<p>Specifes whether this column should use the default server value.</p>\\n"},{"content":"\\n&lt;p&gt;Specifies if the column in the table-valued parameter is unique.&lt;/p&gt;\\n","pos":[16828,16903],"source":"\\n<p>Specifies if the column in the table-valued parameter is unique.</p>\\n"},{"content":"\\n&lt;p&gt;Specifies the sort order for a column.&lt;/p&gt;\\n","pos":[16995,17044],"source":"\\n<p>Specifies the sort order for a column.</p>\\n"},{"content":"\\n&lt;p&gt;Specifies the ordinal of the sort column.&lt;/p&gt;\\n","pos":[17113,17165],"source":"\\n<p>Specifies the ordinal of the sort column.</p>\\n"},{"pos":[17692,17729],"content":"SqlMetaData(String, SqlDbType, Int64)","needQuote":true,"nodes":[{"content":"SqlMetaData(String, SqlDbType, Int64)","pos":[0,37]}]},{"content":"\\n&lt;p&gt;The name of the column.&lt;/p&gt;\\n","pos":[18687,18721],"source":"\\n<p>The name of the column.</p>\\n"},{"content":"\\n&lt;p&gt;The SQL Server type of the parameter or column.&lt;/p&gt;\\n","pos":[18794,18852],"source":"\\n<p>The SQL Server type of the parameter or column.</p>\\n"},{"content":"\\n&lt;p&gt;The maximum length of the specified type.&lt;/p&gt;\\n","pos":[18919,18971],"source":"\\n<p>The maximum length of the specified type.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;Name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[19090,19138],"source":"\\n<p>The <em>Name</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[19139,19145],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A SqlDbType that is not allowed was passed to the constructor as &lt;em&gt;dbType&lt;/em&gt;.&lt;/p&gt;\\n","pos":[19242,19334],"source":"\\n<p>A SqlDbType that is not allowed was passed to the constructor as <em>dbType</em>.</p>\\n"},{"pos":[20045,20118],"content":"SqlMetaData(String, SqlDbType, Int64, Boolean, Boolean, SortOrder, Int32)","needQuote":true,"nodes":[{"content":"SqlMetaData(String, SqlDbType, Int64, Boolean, Boolean, SortOrder, Int32)","pos":[0,73]}]},{"content":"\\n&lt;p&gt;The name of the column.&lt;/p&gt;\\n","pos":[21574,21608],"source":"\\n<p>The name of the column.</p>\\n"},{"content":"\\n&lt;p&gt;The SQL Server type of the parameter or column.&lt;/p&gt;\\n","pos":[21681,21739],"source":"\\n<p>The SQL Server type of the parameter or column.</p>\\n"},{"content":"\\n&lt;p&gt;The maximum length of the specified type.&lt;/p&gt;\\n","pos":[21806,21858],"source":"\\n<p>The maximum length of the specified type.</p>\\n"},{"content":"\\n&lt;p&gt;Specifes whether this column should use the default server value.&lt;/p&gt;\\n","pos":[21934,22010],"source":"\\n<p>Specifes whether this column should use the default server value.</p>\\n"},{"content":"\\n&lt;p&gt;Specifies if the column in the table-valued parameter is unique.&lt;/p&gt;\\n","pos":[22081,22156],"source":"\\n<p>Specifies if the column in the table-valued parameter is unique.</p>\\n"},{"content":"\\n&lt;p&gt;Specifies the sort order for a column.&lt;/p&gt;\\n","pos":[22248,22297],"source":"\\n<p>Specifies the sort order for a column.</p>\\n"},{"content":"\\n&lt;p&gt;Specifies the ordinal of the sort column.&lt;/p&gt;\\n","pos":[22366,22418],"source":"\\n<p>Specifies the ordinal of the sort column.</p>\\n"},{"pos":[23204,23285],"content":"SqlMetaData(String, SqlDbType, Int64, Byte, Byte, Int64, SqlCompareOptions, Type)","needQuote":true,"nodes":[{"content":"SqlMetaData(String, SqlDbType, Int64, Byte, Byte, Int64, SqlCompareOptions, Type)","pos":[0,81]}]},{"content":"\\n&lt;p&gt;The name of the column.&lt;/p&gt;\\n","pos":[24617,24651],"source":"\\n<p>The name of the column.</p>\\n"},{"content":"\\n&lt;p&gt;The SQL Server type of the parameter or column.&lt;/p&gt;\\n","pos":[24724,24782],"source":"\\n<p>The SQL Server type of the parameter or column.</p>\\n"},{"content":"\\n&lt;p&gt;The maximum length of the specified type.&lt;/p&gt;\\n","pos":[24849,24901],"source":"\\n<p>The maximum length of the specified type.</p>\\n"},{"content":"\\n&lt;p&gt;The precision of the parameter or column.&lt;/p&gt;\\n","pos":[24967,25019],"source":"\\n<p>The precision of the parameter or column.</p>\\n"},{"content":"\\n&lt;p&gt;The scale of the parameter or column.&lt;/p&gt;\\n","pos":[25081,25129],"source":"\\n<p>The scale of the parameter or column.</p>\\n"},{"content":"\\n&lt;p&gt;The locale ID of the parameter or column.&lt;/p&gt;\\n","pos":[25193,25245],"source":"\\n<p>The locale ID of the parameter or column.</p>\\n"},{"content":"\\n&lt;p&gt;The comparison rules of the parameter or column.&lt;/p&gt;\\n","pos":[25343,25402],"source":"\\n<p>The comparison rules of the parameter or column.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;Name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[25710,25758],"source":"\\n<p>The <em>Name</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[25759,25765],"source":" </p>\\n"},{"pos":[27179,27296],"content":"SqlMetaData(String, SqlDbType, Int64, Byte, Byte, Int64, SqlCompareOptions, Type, Boolean, Boolean, SortOrder, Int32)","needQuote":true,"nodes":[{"content":"SqlMetaData(String, SqlDbType, Int64, Byte, Byte, Int64, SqlCompareOptions, Type, Boolean, Boolean, SortOrder, Int32)","pos":[0,117]}]},{"content":"\\n&lt;p&gt;The name of the column.&lt;/p&gt;\\n","pos":[29114,29148],"source":"\\n<p>The name of the column.</p>\\n"},{"content":"\\n&lt;p&gt;The SQL Server type of the parameter or column.&lt;/p&gt;\\n","pos":[29221,29279],"source":"\\n<p>The SQL Server type of the parameter or column.</p>\\n"},{"content":"\\n&lt;p&gt;The maximum length of the specified type.&lt;/p&gt;\\n","pos":[29346,29398],"source":"\\n<p>The maximum length of the specified type.</p>\\n"},{"content":"\\n&lt;p&gt;The precision of the parameter or column.&lt;/p&gt;\\n","pos":[29464,29516],"source":"\\n<p>The precision of the parameter or column.</p>\\n"},{"content":"\\n&lt;p&gt;The scale of the parameter or column.&lt;/p&gt;\\n","pos":[29578,29626],"source":"\\n<p>The scale of the parameter or column.</p>\\n"},{"content":"\\n&lt;p&gt;The locale ID of the parameter or column.&lt;/p&gt;\\n","pos":[29692,29744],"source":"\\n<p>The locale ID of the parameter or column.</p>\\n"},{"content":"\\n&lt;p&gt;The comparison rules of the parameter or column.&lt;/p&gt;\\n","pos":[29842,29901],"source":"\\n<p>The comparison rules of the parameter or column.</p>\\n"},{"content":"\\n&lt;p&gt;Specifes whether this column should use the default server value.&lt;/p&gt;\\n","pos":[30166,30242],"source":"\\n<p>Specifes whether this column should use the default server value.</p>\\n"},{"content":"\\n&lt;p&gt;Specifies if the column in the table-valued parameter is unique.&lt;/p&gt;\\n","pos":[30313,30388],"source":"\\n<p>Specifies if the column in the table-valued parameter is unique.</p>\\n"},{"content":"\\n&lt;p&gt;Specifies the sort order for a column.&lt;/p&gt;\\n","pos":[30480,30529],"source":"\\n<p>Specifies the sort order for a column.</p>\\n"},{"content":"\\n&lt;p&gt;Specifies the ordinal of the sort column.&lt;/p&gt;\\n","pos":[30598,30650],"source":"\\n<p>Specifies the ordinal of the sort column.</p>\\n"},{"pos":[31372,31435],"content":"SqlMetaData(String, SqlDbType, Int64, Int64, SqlCompareOptions)","needQuote":true,"nodes":[{"content":"SqlMetaData(String, SqlDbType, Int64, Int64, SqlCompareOptions)","pos":[0,63]}]},{"content":"\\n&lt;p&gt;The name of the parameter or column.&lt;/p&gt;\\n","pos":[32573,32620],"source":"\\n<p>The name of the parameter or column.</p>\\n"},{"content":"\\n&lt;p&gt;The SQL Server type of the parameter or column.&lt;/p&gt;\\n","pos":[32693,32751],"source":"\\n<p>The SQL Server type of the parameter or column.</p>\\n"},{"content":"\\n&lt;p&gt;The maximum length of the specified type.","pos":[32818,32864],"source":"\\n<p>The maximum length of the specified type."},{"content":"&lt;/p&gt;\\n","pos":[32865,32871],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The locale ID of the parameter or column.&lt;/p&gt;\\n","pos":[32935,32987],"source":"\\n<p>The locale ID of the parameter or column.</p>\\n"},{"content":"\\n&lt;p&gt;The comparison rules of the parameter or column.&lt;/p&gt;\\n","pos":[33085,33144],"source":"\\n<p>The comparison rules of the parameter or column.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;Name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[33263,33311],"source":"\\n<p>The <em>Name</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[33312,33318],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A SqlDbType that is not allowed was passed to the constructor as &lt;em&gt;dbType&lt;/em&gt;.&lt;/p&gt;\\n","pos":[33415,33507],"source":"\\n<p>A SqlDbType that is not allowed was passed to the constructor as <em>dbType</em>.</p>\\n"},{"pos":[34400,34499],"content":"SqlMetaData(String, SqlDbType, Int64, Int64, SqlCompareOptions, Boolean, Boolean, SortOrder, Int32)","needQuote":true,"nodes":[{"content":"SqlMetaData(String, SqlDbType, Int64, Int64, SqlCompareOptions, Boolean, Boolean, SortOrder, Int32)","pos":[0,99]}]},{"content":"\\n&lt;p&gt;The name of the column.&lt;/p&gt;\\n","pos":[36135,36169],"source":"\\n<p>The name of the column.</p>\\n"},{"content":"\\n&lt;p&gt;The SQL Server type of the parameter or column.&lt;/p&gt;\\n","pos":[36242,36300],"source":"\\n<p>The SQL Server type of the parameter or column.</p>\\n"},{"content":"\\n&lt;p&gt;The maximum length of the specified type.&lt;/p&gt;\\n","pos":[36367,36419],"source":"\\n<p>The maximum length of the specified type.</p>\\n"},{"content":"\\n&lt;p&gt;The locale ID of the parameter or column.&lt;/p&gt;\\n","pos":[36483,36535],"source":"\\n<p>The locale ID of the parameter or column.</p>\\n"},{"content":"\\n&lt;p&gt;The comparison rules of the parameter or column.&lt;/p&gt;\\n","pos":[36633,36692],"source":"\\n<p>The comparison rules of the parameter or column.</p>\\n"},{"content":"\\n&lt;p&gt;Specifes whether this column should use the default server value.&lt;/p&gt;\\n","pos":[36768,36844],"source":"\\n<p>Specifes whether this column should use the default server value.</p>\\n"},{"content":"\\n&lt;p&gt;Specifies if the column in the table-valued parameter is unique.&lt;/p&gt;\\n","pos":[36915,36990],"source":"\\n<p>Specifies if the column in the table-valued parameter is unique.</p>\\n"},{"content":"\\n&lt;p&gt;Specifies the sort order for a column.&lt;/p&gt;\\n","pos":[37082,37131],"source":"\\n<p>Specifies the sort order for a column.</p>\\n"},{"content":"\\n&lt;p&gt;Specifies the ordinal of the sort column.&lt;/p&gt;\\n","pos":[37200,37252],"source":"\\n<p>Specifies the ordinal of the sort column.</p>\\n"},{"pos":[37887,37941],"content":"SqlMetaData(String, SqlDbType, String, String, String)","needQuote":true,"nodes":[{"content":"SqlMetaData(String, SqlDbType, String, String, String)","pos":[0,54]}]},{"content":"\\n&lt;p&gt;The name of the column.&lt;/p&gt;\\n","pos":[39046,39080],"source":"\\n<p>The name of the column.</p>\\n"},{"content":"\\n&lt;p&gt;The SQL Server type of the parameter or column.&lt;/p&gt;\\n","pos":[39153,39211],"source":"\\n<p>The SQL Server type of the parameter or column.</p>\\n"},{"content":"\\n&lt;p&gt;The database name of the XML schema collection of a typed XML instance.&lt;/p&gt;\\n","pos":[39278,39360],"source":"\\n<p>The database name of the XML schema collection of a typed XML instance.</p>\\n"},{"content":"\\n&lt;p&gt;The relational schema name of the XML schema collection of a typed XML instance.&lt;/p&gt;\\n","pos":[39431,39522],"source":"\\n<p>The relational schema name of the XML schema collection of a typed XML instance.</p>\\n"},{"content":"\\n&lt;p&gt;The name of the XML schema collection of a typed XML instance.&lt;/p&gt;\\n","pos":[39591,39664],"source":"\\n<p>The name of the XML schema collection of a typed XML instance.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;Name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;, or &lt;em&gt;objectName&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt; when &lt;em&gt;database&lt;/em&gt; and &lt;em&gt;owningSchema&lt;/em&gt; are non-&lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[39783,39965],"source":"\\n<p>The <em>Name</em> is <strong>null</strong>, or <em>objectName</em> is <strong>null</strong> when <em>database</em> and <em>owningSchema</em> are non-<strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;A SqlDbType that is not allowed was passed to the constructor as &lt;em&gt;dbType&lt;/em&gt;.&lt;/p&gt;\\n","pos":[40062,40154],"source":"\\n<p>A SqlDbType that is not allowed was passed to the constructor as <em>dbType</em>.</p>\\n"},{"pos":[40969,41059],"content":"SqlMetaData(String, SqlDbType, String, String, String, Boolean, Boolean, SortOrder, Int32)","needQuote":true,"nodes":[{"content":"SqlMetaData(String, SqlDbType, String, String, String, Boolean, Boolean, SortOrder, Int32)","pos":[0,90]}]},{"content":"\\n&lt;p&gt;The name of the column.&lt;/p&gt;\\n","pos":[42656,42690],"source":"\\n<p>The name of the column.</p>\\n"},{"content":"\\n&lt;p&gt;The SQL Server type of the parameter or column.&lt;/p&gt;\\n","pos":[42763,42821],"source":"\\n<p>The SQL Server type of the parameter or column.</p>\\n"},{"content":"\\n&lt;p&gt;The database name of the XML schema collection of a typed XML instance.&lt;/p&gt;\\n","pos":[42888,42970],"source":"\\n<p>The database name of the XML schema collection of a typed XML instance.</p>\\n"},{"content":"\\n&lt;p&gt;The relational schema name of the XML schema collection of a typed XML instance.&lt;/p&gt;\\n","pos":[43041,43132],"source":"\\n<p>The relational schema name of the XML schema collection of a typed XML instance.</p>\\n"},{"content":"\\n&lt;p&gt;The name of the XML schema collection of a typed XML instance.&lt;/p&gt;\\n","pos":[43201,43274],"source":"\\n<p>The name of the XML schema collection of a typed XML instance.</p>\\n"},{"content":"\\n&lt;p&gt;Specifes whether this column should use the default server value.&lt;/p&gt;\\n","pos":[43350,43426],"source":"\\n<p>Specifes whether this column should use the default server value.</p>\\n"},{"content":"\\n&lt;p&gt;Specifies if the column in the table-valued parameter is unique.&lt;/p&gt;\\n","pos":[43497,43572],"source":"\\n<p>Specifies if the column in the table-valued parameter is unique.</p>\\n"},{"content":"\\n&lt;p&gt;Specifies the sort order for a column.&lt;/p&gt;\\n","pos":[43664,43713],"source":"\\n<p>Specifies the sort order for a column.</p>\\n"},{"content":"\\n&lt;p&gt;Specifies the ordinal of the sort column.&lt;/p&gt;\\n","pos":[43782,43834],"source":"\\n<p>Specifies the ordinal of the sort column.</p>\\n"},{"pos":[44248,44262],"content":"CompareOptions","needQuote":true,"nodes":[{"content":"CompareOptions","pos":[0,14]}]},{"pos":[45558,45569],"content":"IsUniqueKey","needQuote":true,"nodes":[{"content":"IsUniqueKey","pos":[0,11]}]},{"content":"\\n&lt;p&gt;A &lt;strong&gt;Boolean&lt;/strong&gt; value.&lt;/p&gt;\\n","pos":[46292,46336],"source":"\\n<p>A <strong>Boolean</strong> value.</p>\\n"},{"pos":[46674,46682],"content":"LocaleId","needQuote":true,"nodes":[{"content":"LocaleId","pos":[0,8]}]},{"pos":[47820,47823],"content":"Max","needQuote":true,"nodes":[{"content":"Max","pos":[0,3]}]},{"content":"\\n&lt;p&gt;The length of &lt;strong&gt;text&lt;/strong&gt;, &lt;strong&gt;ntext&lt;/strong&gt;, and &lt;strong&gt;image&lt;/strong&gt; data types.&lt;/p&gt;\\n","pos":[48564,48674],"source":"\\n<p>The length of <strong>text</strong>, <strong>ntext</strong>, and <strong>image</strong> data types.</p>\\n"},{"pos":[49029,49038],"content":"MaxLength","needQuote":true,"nodes":[{"content":"MaxLength","pos":[0,9]}]},{"pos":[50194,50198],"content":"Name","needQuote":true,"nodes":[{"content":"Name","pos":[0,4]}]},{"content":"\\n&lt;p&gt;The &lt;em&gt;Name&lt;/em&gt; specified in the constructor is longer than 128 characters.","pos":[51123,51205],"source":"\\n<p>The <em>Name</em> specified in the constructor is longer than 128 characters."},{"content":"&lt;/p&gt;\\n","pos":[51206,51212],"source":" </p>\\n"},{"pos":[51546,51555],"content":"Precision","needQuote":true,"nodes":[{"content":"Precision","pos":[0,9]}]},{"pos":[52702,52707],"content":"Scale","needQuote":true,"nodes":[{"content":"Scale","pos":[0,5]}]},{"content":"\\n&lt;p&gt;The scale of the column or parameter.&lt;/p&gt;\\n","pos":[53378,53426],"source":"\\n<p>The scale of the column or parameter.</p>\\n"},{"pos":[53761,53770],"content":"SortOrder","needQuote":true,"nodes":[{"content":"SortOrder","pos":[0,9]}]},{"pos":[54938,54949],"content":"SortOrdinal","needQuote":true,"nodes":[{"content":"SortOrdinal","pos":[0,11]}]},{"content":"\\n&lt;p&gt;The ordinal of the sort column.&lt;/p&gt;\\n","pos":[55644,55686],"source":"\\n<p>The ordinal of the sort column.</p>\\n"},{"pos":[56027,56036],"content":"SqlDbType","needQuote":true,"nodes":[{"content":"SqlDbType","pos":[0,9]}]},{"pos":[57219,57227],"content":"TypeName","needQuote":true,"nodes":[{"content":"TypeName","pos":[0,8]}]},{"pos":[58469,58485],"content":"UseServerDefault","needQuote":true,"nodes":[{"content":"UseServerDefault","pos":[0,16]}]},{"content":"\\n&lt;p&gt;A &lt;strong&gt;Boolean&lt;/strong&gt; value.&lt;/p&gt;\\n","pos":[59228,59272],"source":"\\n<p>A <strong>Boolean</strong> value.</p>\\n"},{"pos":[59672,59699],"content":"XmlSchemaCollectionDatabase","needQuote":true,"nodes":[{"content":"XmlSchemaCollectionDatabase","pos":[0,27]}]},{"pos":[61088,61111],"content":"XmlSchemaCollectionName","needQuote":true,"nodes":[{"content":"XmlSchemaCollectionName","pos":[0,23]}]},{"pos":[62444,62475],"content":"XmlSchemaCollectionOwningSchema","needQuote":true,"nodes":[{"content":"XmlSchemaCollectionOwningSchema","pos":[0,31]}]},{"pos":[63889,63904],"content":"Adjust(Boolean)","needQuote":true,"nodes":[{"content":"Adjust(Boolean)","pos":[0,15]}]},{"pos":[65715,65727],"content":"Adjust(Byte)","needQuote":true,"nodes":[{"content":"Adjust(Byte)","pos":[0,12]}]},{"pos":[67520,67534],"content":"Adjust(Byte[])","needQuote":true,"nodes":[{"content":"Adjust(Byte[])","pos":[0,14]}]},{"pos":[69512,69524],"content":"Adjust(Char)","needQuote":true,"nodes":[{"content":"Adjust(Char)","pos":[0,12]}]},{"pos":[71317,71331],"content":"Adjust(Char[])","needQuote":true,"nodes":[{"content":"Adjust(Char[])","pos":[0,14]}]},{"pos":[73363,73380],"content":"Adjust(SqlBinary)","needQuote":true,"nodes":[{"content":"Adjust(SqlBinary)","pos":[0,17]}]},{"pos":[75346,75364],"content":"Adjust(SqlBoolean)","needQuote":true,"nodes":[{"content":"Adjust(SqlBoolean)","pos":[0,18]}]},{"pos":[77331,77346],"content":"Adjust(SqlByte)","needQuote":true,"nodes":[{"content":"Adjust(SqlByte)","pos":[0,15]}]},{"pos":[79286,79302],"content":"Adjust(SqlBytes)","needQuote":true,"nodes":[{"content":"Adjust(SqlBytes)","pos":[0,16]}]},{"pos":[81253,81269],"content":"Adjust(SqlChars)","needQuote":true,"nodes":[{"content":"Adjust(SqlChars)","pos":[0,16]}]},{"pos":[83228,83247],"content":"Adjust(SqlDateTime)","needQuote":true,"nodes":[{"content":"Adjust(SqlDateTime)","pos":[0,19]}]},{"pos":[85233,85251],"content":"Adjust(SqlDecimal)","needQuote":true,"nodes":[{"content":"Adjust(SqlDecimal)","pos":[0,18]}]},{"pos":[87224,87241],"content":"Adjust(SqlDouble)","needQuote":true,"nodes":[{"content":"Adjust(SqlDouble)","pos":[0,17]}]},{"pos":[89198,89213],"content":"Adjust(SqlGuid)","needQuote":true,"nodes":[{"content":"Adjust(SqlGuid)","pos":[0,15]}]},{"pos":[91153,91169],"content":"Adjust(SqlInt16)","needQuote":true,"nodes":[{"content":"Adjust(SqlInt16)","pos":[0,16]}]},{"pos":[93119,93135],"content":"Adjust(SqlInt32)","needQuote":true,"nodes":[{"content":"Adjust(SqlInt32)","pos":[0,16]}]},{"pos":[95085,95101],"content":"Adjust(SqlInt64)","needQuote":true,"nodes":[{"content":"Adjust(SqlInt64)","pos":[0,16]}]},{"pos":[97051,97067],"content":"Adjust(SqlMoney)","needQuote":true,"nodes":[{"content":"Adjust(SqlMoney)","pos":[0,16]}]},{"pos":[99020,99037],"content":"Adjust(SqlSingle)","needQuote":true,"nodes":[{"content":"Adjust(SqlSingle)","pos":[0,17]}]},{"pos":[101000,101017],"content":"Adjust(SqlString)","needQuote":true,"nodes":[{"content":"Adjust(SqlString)","pos":[0,17]}]},{"pos":[102971,102985],"content":"Adjust(SqlXml)","needQuote":true,"nodes":[{"content":"Adjust(SqlXml)","pos":[0,14]}]},{"pos":[104874,104890],"content":"Adjust(DateTime)","needQuote":true,"nodes":[{"content":"Adjust(DateTime)","pos":[0,16]}]},{"pos":[106738,106760],"content":"Adjust(DateTimeOffset)","needQuote":true,"nodes":[{"content":"Adjust(DateTimeOffset)","pos":[0,22]}]},{"pos":[108673,108688],"content":"Adjust(Decimal)","needQuote":true,"nodes":[{"content":"Adjust(Decimal)","pos":[0,15]}]},{"pos":[110510,110524],"content":"Adjust(Double)","needQuote":true,"nodes":[{"content":"Adjust(Double)","pos":[0,14]}]},{"pos":[112330,112342],"content":"Adjust(Guid)","needQuote":true,"nodes":[{"content":"Adjust(Guid)","pos":[0,12]}]},{"pos":[114131,114144],"content":"Adjust(Int16)","needQuote":true,"nodes":[{"content":"Adjust(Int16)","pos":[0,13]}]},{"pos":[115943,115956],"content":"Adjust(Int32)","needQuote":true,"nodes":[{"content":"Adjust(Int32)","pos":[0,13]}]},{"pos":[117755,117768],"content":"Adjust(Int64)","needQuote":true,"nodes":[{"content":"Adjust(Int64)","pos":[0,13]}]},{"pos":[119566,119580],"content":"Adjust(Object)","needQuote":true,"nodes":[{"content":"Adjust(Object)","pos":[0,14]}]},{"pos":[121393,121407],"content":"Adjust(Single)","needQuote":true,"nodes":[{"content":"Adjust(Single)","pos":[0,14]}]},{"pos":[123217,123231],"content":"Adjust(String)","needQuote":true,"nodes":[{"content":"Adjust(String)","pos":[0,14]}]},{"pos":[125049,125065],"content":"Adjust(TimeSpan)","needQuote":true,"nodes":[{"content":"Adjust(TimeSpan)","pos":[0,16]}]},{"pos":[126981,127011],"content":"InferFromValue(Object, String)","needQuote":true,"nodes":[{"content":"InferFromValue(Object, String)","pos":[0,30]}]},{"content":"\\n&lt;p&gt;The object used from which the metadata is inferred.&lt;/p&gt;\\n","pos":[127952,128015],"source":"\\n<p>The object used from which the metadata is inferred.</p>\\n"},{"content":"\\n&lt;p&gt;The v&lt;em&gt;alue&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[128581,128630],"source":"\\n<p>The v<em>alue</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[128631,128637],"source":" </p>\\n"},{"pos":[128852,128878],"content":"Microsoft.SqlServer.Server","needQuote":true,"nodes":[{"content":"Microsoft.SqlServer.Server","pos":[0,26]}]},{"pos":[129069,129075],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[129235,129245],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[129340,129348],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[129417,129418],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[129445,129446],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[129516,129524],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[129593,129594],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[129621,129622],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[129805,129819],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[129938,129944],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[130011,130012],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[130062,130068],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[130128,130129],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[130212,130218],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[130285,130286],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[130336,130342],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[130402,130403],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[130617,130639],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[130787,130793],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[130860,130861],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[130911,130917],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[130978,130979]},{"pos":[131034,131040],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[131100,131101],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[131198,131204],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[131271,131272],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[131322,131328],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[131389,131390]},{"pos":[131445,131451],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[131511,131512],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[131757,131788],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[131954,131969],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[132045,132046],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[132096,132102],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[132163,132164]},{"pos":[132219,132225],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[132285,132286],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[132392,132407],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[132483,132484],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[132534,132540],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[132601,132602]},{"pos":[132657,132663],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[132723,132724],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[132954,132967],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[133068,133079],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[133151,133152],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[133179,133180],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[133253,133264],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[133336,133337],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[133364,133365],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[133540,133549],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[133642,133649],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[133717,133718],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[133745,133746],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[133815,133822],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[133890,133891],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[133918,133919],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[134094,134111],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[134220,134235],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[134311,134312],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[134339,134340],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[134417,134432],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[134508,134509],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[134536,134537],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[134682,134688],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[134819,134825],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[134983,134992],"content":"SqlDbType","needQuote":true,"nodes":[{"content":"SqlDbType","pos":[0,9]}]},{"pos":[135137,135148],"content":"System.Data","needQuote":true,"nodes":[{"content":"System.Data","pos":[0,11]}]},{"pos":[135295,135302],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[135483,135492],"content":"SortOrder","needQuote":true,"nodes":[{"content":"SortOrder","pos":[0,9]}]},{"pos":[135675,135680],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[135813,135834],"content":"System.Data.SqlClient","needQuote":true,"nodes":[{"content":"System.Data.SqlClient","pos":[0,21]}]},{"pos":[136008,136012],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[136150,136155],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[136336,136353],"content":"SqlCompareOptions","needQuote":true,"nodes":[{"content":"SqlCompareOptions","pos":[0,17]}]},{"pos":[136557,136561],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[136690,136710],"content":"System.Data.SqlTypes","needQuote":true,"nodes":[{"content":"System.Data.SqlTypes","pos":[0,20]}]},{"pos":[136846,136852],"content":"Byte[]","needQuote":true,"nodes":[{"content":"Byte[]","pos":[0,6]}]},{"pos":[136972,136976],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[137035,137037]},{"pos":[137100,137104],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[137162,137164],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[137295,137299],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[137401,137407],"content":"Char[]","needQuote":true,"nodes":[{"content":"Char[]","pos":[0,6]}]},{"pos":[137527,137531],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"content":"[]","pos":[137590,137592]},{"pos":[137655,137659],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[137717,137719],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[137883,137892],"content":"SqlBinary","needQuote":true,"nodes":[{"content":"SqlBinary","pos":[0,9]}]},{"pos":[138106,138116],"content":"SqlBoolean","needQuote":true,"nodes":[{"content":"SqlBoolean","pos":[0,10]}]},{"pos":[138330,138337],"content":"SqlByte","needQuote":true,"nodes":[{"content":"SqlByte","pos":[0,7]}]},{"pos":[138543,138551],"content":"SqlBytes","needQuote":true,"nodes":[{"content":"SqlBytes","pos":[0,8]}]},{"pos":[138760,138768],"content":"SqlChars","needQuote":true,"nodes":[{"content":"SqlChars","pos":[0,8]}]},{"pos":[138980,138991],"content":"SqlDateTime","needQuote":true,"nodes":[{"content":"SqlDateTime","pos":[0,11]}]},{"pos":[139211,139221],"content":"SqlDecimal","needQuote":true,"nodes":[{"content":"SqlDecimal","pos":[0,10]}]},{"pos":[139437,139446],"content":"SqlDouble","needQuote":true,"nodes":[{"content":"SqlDouble","pos":[0,9]}]},{"pos":[139657,139664],"content":"SqlGuid","needQuote":true,"nodes":[{"content":"SqlGuid","pos":[0,7]}]},{"pos":[139870,139878],"content":"SqlInt16","needQuote":true,"nodes":[{"content":"SqlInt16","pos":[0,8]}]},{"pos":[140087,140095],"content":"SqlInt32","needQuote":true,"nodes":[{"content":"SqlInt32","pos":[0,8]}]},{"pos":[140304,140312],"content":"SqlInt64","needQuote":true,"nodes":[{"content":"SqlInt64","pos":[0,8]}]},{"pos":[140521,140529],"content":"SqlMoney","needQuote":true,"nodes":[{"content":"SqlMoney","pos":[0,8]}]},{"pos":[140739,140748],"content":"SqlSingle","needQuote":true,"nodes":[{"content":"SqlSingle","pos":[0,9]}]},{"pos":[140961,140970],"content":"SqlString","needQuote":true,"nodes":[{"content":"SqlString","pos":[0,9]}]},{"pos":[141180,141186],"content":"SqlXml","needQuote":true,"nodes":[{"content":"SqlXml","pos":[0,6]}]},{"pos":[141361,141369],"content":"DateTime","needQuote":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[141528,141542],"content":"DateTimeOffset","needQuote":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[141712,141719],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[141867,141873],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[142016,142020],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[142158,142163],"content":"Int16","needQuote":true,"nodes":[{"content":"Int16","pos":[0,5]}]},{"pos":[142305,142311],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[142458,142466],"content":"TimeSpan","needQuote":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[142662,142673],"content":"SqlMetaData","needQuote":true,"nodes":[{"content":"SqlMetaData","pos":[0,11]}]},{"pos":[142871,142892],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[143093,143110],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]},{"pos":[143307,143332],"content":"InvalidOperationException","needQuote":true,"nodes":[{"content":"InvalidOperationException","pos":[0,25]}]}],"content":"items:\n- uid: Microsoft.SqlServer.Server.SqlMetaData\n  commentId: T:Microsoft.SqlServer.Server.SqlMetaData\n  id: SqlMetaData\n  parent: Microsoft.SqlServer.Server\n  children:\n  - Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType)\n  - Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)\n  - Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Byte,System.Byte)\n  - Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Byte,System.Byte,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)\n  - Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64)\n  - Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)\n  - Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Byte,System.Byte,System.Int64,System.Data.SqlTypes.SqlCompareOptions,System.Type)\n  - Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Byte,System.Byte,System.Int64,System.Data.SqlTypes.SqlCompareOptions,System.Type,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)\n  - Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Int64,System.Data.SqlTypes.SqlCompareOptions)\n  - Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Int64,System.Data.SqlTypes.SqlCompareOptions,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)\n  - Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.String,System.String,System.String)\n  - Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)\n  - Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Boolean)\n  - Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Byte)\n  - Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Byte[])\n  - Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Char)\n  - Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Char[])\n  - Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlBinary)\n  - Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlBoolean)\n  - Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlByte)\n  - Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlBytes)\n  - Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlChars)\n  - Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlDateTime)\n  - Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlDecimal)\n  - Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlDouble)\n  - Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlGuid)\n  - Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlInt16)\n  - Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlInt32)\n  - Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlInt64)\n  - Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlMoney)\n  - Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlSingle)\n  - Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlString)\n  - Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlXml)\n  - Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.DateTime)\n  - Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.DateTimeOffset)\n  - Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Decimal)\n  - Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Double)\n  - Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Guid)\n  - Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Int16)\n  - Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Int32)\n  - Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Int64)\n  - Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Object)\n  - Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Single)\n  - Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.String)\n  - Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.TimeSpan)\n  - Microsoft.SqlServer.Server.SqlMetaData.CompareOptions\n  - Microsoft.SqlServer.Server.SqlMetaData.InferFromValue(System.Object,System.String)\n  - Microsoft.SqlServer.Server.SqlMetaData.IsUniqueKey\n  - Microsoft.SqlServer.Server.SqlMetaData.LocaleId\n  - Microsoft.SqlServer.Server.SqlMetaData.Max\n  - Microsoft.SqlServer.Server.SqlMetaData.MaxLength\n  - Microsoft.SqlServer.Server.SqlMetaData.Name\n  - Microsoft.SqlServer.Server.SqlMetaData.Precision\n  - Microsoft.SqlServer.Server.SqlMetaData.Scale\n  - Microsoft.SqlServer.Server.SqlMetaData.SortOrder\n  - Microsoft.SqlServer.Server.SqlMetaData.SortOrdinal\n  - Microsoft.SqlServer.Server.SqlMetaData.SqlDbType\n  - Microsoft.SqlServer.Server.SqlMetaData.TypeName\n  - Microsoft.SqlServer.Server.SqlMetaData.UseServerDefault\n  - Microsoft.SqlServer.Server.SqlMetaData.XmlSchemaCollectionDatabase\n  - Microsoft.SqlServer.Server.SqlMetaData.XmlSchemaCollectionName\n  - Microsoft.SqlServer.Server.SqlMetaData.XmlSchemaCollectionOwningSchema\n  langs:\n  - csharp\n  - vb\n  name: SqlMetaData\n  fullName: Microsoft.SqlServer.Server.SqlMetaData\n  type: Class\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SqlMetaData\n    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n    startLine: 26\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Specifies and retrieves metadata information from parameters and columns of <xref href=\\\"Microsoft.SqlServer.Server.SqlDataRecord\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects. This class cannot be inherited.</p>\\n\"\n  syntax:\n    content: public sealed class SqlMetaData\n    content.vb: Public NotInheritable Class SqlMetaData\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: SqlMetaData\n- uid: Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType)\n  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType)\n  id: '#ctor(System.String,System.Data.SqlDbType)'\n  parent: Microsoft.SqlServer.Server.SqlMetaData\n  langs:\n  - csharp\n  - vb\n  name: SqlMetaData(String, SqlDbType)\n  fullName: Microsoft.SqlServer.Server.SqlMetaData.SqlMetaData(System.String, System.Data.SqlDbType)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n    startLine: 58\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified column name and type.</p>\\n\"\n  syntax:\n    content: public SqlMetaData(string name, SqlDbType dbType)\n    content.vb: Public Sub New(name As String, dbType As SqlDbType)\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the column.</p>\\n\"\n    - id: dbType\n      type: System.Data.SqlDbType\n      description: \"\\n<p>The SQL Server type of the parameter or column.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>Name</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>A <strong>SqlDbType</strong> that is not allowed was passed to the constructor as <em>dbType</em>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlMetaData.SqlMetaData(String, SqlDbType)\n- uid: Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)\n  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)\n  id: '#ctor(System.String,System.Data.SqlDbType,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)'\n  parent: Microsoft.SqlServer.Server.SqlMetaData\n  langs:\n  - csharp\n  - vb\n  name: SqlMetaData(String, SqlDbType, Boolean, Boolean, SortOrder, Int32)\n  fullName: Microsoft.SqlServer.Server.SqlMetaData.SqlMetaData(System.String, System.Data.SqlDbType, System.Boolean, System.Boolean, System.Data.SqlClient.SortOrder, System.Int32)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n    startLine: 65\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified column name, and default server. This form of the constructor supports table-valued parameters by allowing you to specify if the column is unique in the table-valued parameter, the sort order for the column, and the ordinal of the sort column.</p>\\n\"\n  syntax:\n    content: public SqlMetaData(string name, SqlDbType dbType, bool useServerDefault, bool isUniqueKey, SortOrder columnSortOrder, int sortOrdinal)\n    content.vb: Public Sub New(name As String, dbType As SqlDbType, useServerDefault As Boolean, isUniqueKey As Boolean, columnSortOrder As SortOrder, sortOrdinal As Integer)\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the column.</p>\\n\"\n    - id: dbType\n      type: System.Data.SqlDbType\n      description: \"\\n<p>The SQL Server type of the parameter or column.</p>\\n\"\n    - id: useServerDefault\n      type: System.Boolean\n      description: \"\\n<p>Specifes whether this column should use the default server value.</p>\\n\"\n    - id: isUniqueKey\n      type: System.Boolean\n      description: \"\\n<p>Specifies if the column in the table-valued parameter is unique.</p>\\n\"\n    - id: columnSortOrder\n      type: System.Data.SqlClient.SortOrder\n      description: \"\\n<p>Specifies the sort order for a column.</p>\\n\"\n    - id: sortOrdinal\n      type: System.Int32\n      description: \"\\n<p>Specifies the ordinal of the sort column.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlMetaData.SqlMetaData(String, SqlDbType, Boolean, Boolean, SortOrder, Int32)\n- uid: Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Byte,System.Byte)\n  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Byte,System.Byte)\n  id: '#ctor(System.String,System.Data.SqlDbType,System.Byte,System.Byte)'\n  parent: Microsoft.SqlServer.Server.SqlMetaData\n  langs:\n  - csharp\n  - vb\n  name: SqlMetaData(String, SqlDbType, Byte, Byte)\n  fullName: Microsoft.SqlServer.Server.SqlMetaData.SqlMetaData(System.String, System.Data.SqlDbType, System.Byte, System.Byte)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n    startLine: 91\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified column name, type, precision, and scale.</p>\\n\"\n  syntax:\n    content: public SqlMetaData(string name, SqlDbType dbType, byte precision, byte scale)\n    content.vb: Public Sub New(name As String, dbType As SqlDbType, precision As Byte, scale As Byte)\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the parameter or column.</p>\\n\"\n    - id: dbType\n      type: System.Data.SqlDbType\n      description: \"\\n<p>The SQL Server type of the parameter or column.</p>\\n\"\n    - id: precision\n      type: System.Byte\n      description: \"\\n<p>The precision of the parameter or column.</p>\\n\"\n    - id: scale\n      type: System.Byte\n      description: \"\\n<p>The scale of the parameter or column.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>Name</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>A <strong>SqlDbType</strong> that is not allowed was passed to the constructor as <em>dbType</em>, or <em>scale</em> was greater than <em>precision</em>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlMetaData.SqlMetaData(String, SqlDbType, Byte, Byte)\n- uid: Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Byte,System.Byte,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)\n  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Byte,System.Byte,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)\n  id: '#ctor(System.String,System.Data.SqlDbType,System.Byte,System.Byte,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)'\n  parent: Microsoft.SqlServer.Server.SqlMetaData\n  langs:\n  - csharp\n  - vb\n  name: SqlMetaData(String, SqlDbType, Byte, Byte, Boolean, Boolean, SortOrder, Int32)\n  fullName: Microsoft.SqlServer.Server.SqlMetaData.SqlMetaData(System.String, System.Data.SqlDbType, System.Byte, System.Byte, System.Boolean, System.Boolean, System.Data.SqlClient.SortOrder, System.Int32)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n    startLine: 98\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified column name, type, precision, scale, and server default. This form of the constructor supports table-valued parameters by allowing you to specify if the column is unique in the table-valued parameter, the sort order for the column, and the ordinal of the sort column.</p>\\n\"\n  syntax:\n    content: public SqlMetaData(string name, SqlDbType dbType, byte precision, byte scale, bool useServerDefault, bool isUniqueKey, SortOrder columnSortOrder, int sortOrdinal)\n    content.vb: Public Sub New(name As String, dbType As SqlDbType, precision As Byte, scale As Byte, useServerDefault As Boolean, isUniqueKey As Boolean, columnSortOrder As SortOrder, sortOrdinal As Integer)\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the column.</p>\\n\"\n    - id: dbType\n      type: System.Data.SqlDbType\n      description: \"\\n<p>The SQL Server type of the parameter or column.</p>\\n\"\n    - id: precision\n      type: System.Byte\n      description: \"\\n<p>The precision of the parameter or column.</p>\\n\"\n    - id: scale\n      type: System.Byte\n      description: \"\\n<p>The scale of the parameter or column.</p>\\n\"\n    - id: useServerDefault\n      type: System.Boolean\n      description: \"\\n<p>Specifes whether this column should use the default server value.</p>\\n\"\n    - id: isUniqueKey\n      type: System.Boolean\n      description: \"\\n<p>Specifies if the column in the table-valued parameter is unique.</p>\\n\"\n    - id: columnSortOrder\n      type: System.Data.SqlClient.SortOrder\n      description: \"\\n<p>Specifies the sort order for a column.</p>\\n\"\n    - id: sortOrdinal\n      type: System.Int32\n      description: \"\\n<p>Specifies the ordinal of the sort column.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlMetaData.SqlMetaData(String, SqlDbType, Byte, Byte, Boolean, Boolean, SortOrder, Int32)\n- uid: Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64)\n  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64)\n  id: '#ctor(System.String,System.Data.SqlDbType,System.Int64)'\n  parent: Microsoft.SqlServer.Server.SqlMetaData\n  langs:\n  - csharp\n  - vb\n  name: SqlMetaData(String, SqlDbType, Int64)\n  fullName: Microsoft.SqlServer.Server.SqlMetaData.SqlMetaData(System.String, System.Data.SqlDbType, System.Int64)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n    startLine: 74\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified column name, type, and maximum length.</p>\\n\"\n  syntax:\n    content: public SqlMetaData(string name, SqlDbType dbType, long maxLength)\n    content.vb: Public Sub New(name As String, dbType As SqlDbType, maxLength As Long)\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the column.</p>\\n\"\n    - id: dbType\n      type: System.Data.SqlDbType\n      description: \"\\n<p>The SQL Server type of the parameter or column.</p>\\n\"\n    - id: maxLength\n      type: System.Int64\n      description: \"\\n<p>The maximum length of the specified type.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>Name</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>A SqlDbType that is not allowed was passed to the constructor as <em>dbType</em>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlMetaData.SqlMetaData(String, SqlDbType, Int64)\n- uid: Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)\n  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)\n  id: '#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)'\n  parent: Microsoft.SqlServer.Server.SqlMetaData\n  langs:\n  - csharp\n  - vb\n  name: SqlMetaData(String, SqlDbType, Int64, Boolean, Boolean, SortOrder, Int32)\n  fullName: Microsoft.SqlServer.Server.SqlMetaData.SqlMetaData(System.String, System.Data.SqlDbType, System.Int64, System.Boolean, System.Boolean, System.Data.SqlClient.SortOrder, System.Int32)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n    startLine: 82\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified column name, type, maximum length, and server default. This form of the constructor supports table-valued parameters by allowing you to specify if the column is unique in the table-valued parameter, the sort order for the column, and the ordinal of the sort column.</p>\\n\"\n  syntax:\n    content: public SqlMetaData(string name, SqlDbType dbType, long maxLength, bool useServerDefault, bool isUniqueKey, SortOrder columnSortOrder, int sortOrdinal)\n    content.vb: Public Sub New(name As String, dbType As SqlDbType, maxLength As Long, useServerDefault As Boolean, isUniqueKey As Boolean, columnSortOrder As SortOrder, sortOrdinal As Integer)\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the column.</p>\\n\"\n    - id: dbType\n      type: System.Data.SqlDbType\n      description: \"\\n<p>The SQL Server type of the parameter or column.</p>\\n\"\n    - id: maxLength\n      type: System.Int64\n      description: \"\\n<p>The maximum length of the specified type.</p>\\n\"\n    - id: useServerDefault\n      type: System.Boolean\n      description: \"\\n<p>Specifes whether this column should use the default server value.</p>\\n\"\n    - id: isUniqueKey\n      type: System.Boolean\n      description: \"\\n<p>Specifies if the column in the table-valued parameter is unique.</p>\\n\"\n    - id: columnSortOrder\n      type: System.Data.SqlClient.SortOrder\n      description: \"\\n<p>Specifies the sort order for a column.</p>\\n\"\n    - id: sortOrdinal\n      type: System.Int32\n      description: \"\\n<p>Specifies the ordinal of the sort column.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlMetaData.SqlMetaData(String, SqlDbType, Int64, Boolean, Boolean, SortOrder, Int32)\n- uid: Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Byte,System.Byte,System.Int64,System.Data.SqlTypes.SqlCompareOptions,System.Type)\n  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Byte,System.Byte,System.Int64,System.Data.SqlTypes.SqlCompareOptions,System.Type)\n  id: '#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Byte,System.Byte,System.Int64,System.Data.SqlTypes.SqlCompareOptions,System.Type)'\n  parent: Microsoft.SqlServer.Server.SqlMetaData\n  langs:\n  - csharp\n  - vb\n  name: SqlMetaData(String, SqlDbType, Int64, Byte, Byte, Int64, SqlCompareOptions, Type)\n  fullName: Microsoft.SqlServer.Server.SqlMetaData.SqlMetaData(System.String, System.Data.SqlDbType, System.Int64, System.Byte, System.Byte, System.Int64, System.Data.SqlTypes.SqlCompareOptions, System.Type)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n    startLine: 132\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified column name, type, maximum length, precision, scale, locale ID, compare options, and user-defined type (UDT).</p>\\n\"\n  syntax:\n    content: public SqlMetaData(string name, SqlDbType dbType, long maxLength, byte precision, byte scale, long locale, SqlCompareOptions compareOptions, Type userDefinedType)\n    content.vb: Public Sub New(name As String, dbType As SqlDbType, maxLength As Long, precision As Byte, scale As Byte, locale As Long, compareOptions As SqlCompareOptions, userDefinedType As Type)\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the column.</p>\\n\"\n    - id: dbType\n      type: System.Data.SqlDbType\n      description: \"\\n<p>The SQL Server type of the parameter or column.</p>\\n\"\n    - id: maxLength\n      type: System.Int64\n      description: \"\\n<p>The maximum length of the specified type.</p>\\n\"\n    - id: precision\n      type: System.Byte\n      description: \"\\n<p>The precision of the parameter or column.</p>\\n\"\n    - id: scale\n      type: System.Byte\n      description: \"\\n<p>The scale of the parameter or column.</p>\\n\"\n    - id: locale\n      type: System.Int64\n      description: \"\\n<p>The locale ID of the parameter or column.</p>\\n\"\n    - id: compareOptions\n      type: System.Data.SqlTypes.SqlCompareOptions\n      description: \"\\n<p>The comparison rules of the parameter or column.</p>\\n\"\n    - id: userDefinedType\n      type: System.Type\n      description: \"\\n<p>A <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance that points to the UDT.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>Name</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>A <strong>SqlDbType</strong> that is not allowed was passed to the constructor as <em>dbType</em>, or <em>userDefinedType</em> points to a type that does not have <xref href=\\\"Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> declared.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlMetaData.SqlMetaData(String, SqlDbType, Int64, Byte, Byte, Int64, SqlCompareOptions, Type)\n- uid: Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Byte,System.Byte,System.Int64,System.Data.SqlTypes.SqlCompareOptions,System.Type,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)\n  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Byte,System.Byte,System.Int64,System.Data.SqlTypes.SqlCompareOptions,System.Type,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)\n  id: '#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Byte,System.Byte,System.Int64,System.Data.SqlTypes.SqlCompareOptions,System.Type,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)'\n  parent: Microsoft.SqlServer.Server.SqlMetaData\n  langs:\n  - csharp\n  - vb\n  name: SqlMetaData(String, SqlDbType, Int64, Byte, Byte, Int64, SqlCompareOptions, Type, Boolean, Boolean, SortOrder, Int32)\n  fullName: Microsoft.SqlServer.Server.SqlMetaData.SqlMetaData(System.String, System.Data.SqlDbType, System.Int64, System.Byte, System.Byte, System.Int64, System.Data.SqlTypes.SqlCompareOptions, System.Type, System.Boolean, System.Boolean, System.Data.SqlClient.SortOrder, System.Int32)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n    startLine: 142\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified column name, type, maximum length, precision, scale, locale ID, compare options, and user-defined type (UDT). This form of the constructor supports table-valued parameters by allowing you to specify if the column is unique in the table-valued parameter, the sort order for the column, and the ordinal of the sort column.</p>\\n\"\n  syntax:\n    content: public SqlMetaData(string name, SqlDbType dbType, long maxLength, byte precision, byte scale, long localeId, SqlCompareOptions compareOptions, Type userDefinedType, bool useServerDefault, bool isUniqueKey, SortOrder columnSortOrder, int sortOrdinal)\n    content.vb: Public Sub New(name As String, dbType As SqlDbType, maxLength As Long, precision As Byte, scale As Byte, localeId As Long, compareOptions As SqlCompareOptions, userDefinedType As Type, useServerDefault As Boolean, isUniqueKey As Boolean, columnSortOrder As SortOrder, sortOrdinal As Integer)\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the column.</p>\\n\"\n    - id: dbType\n      type: System.Data.SqlDbType\n      description: \"\\n<p>The SQL Server type of the parameter or column.</p>\\n\"\n    - id: maxLength\n      type: System.Int64\n      description: \"\\n<p>The maximum length of the specified type.</p>\\n\"\n    - id: precision\n      type: System.Byte\n      description: \"\\n<p>The precision of the parameter or column.</p>\\n\"\n    - id: scale\n      type: System.Byte\n      description: \"\\n<p>The scale of the parameter or column.</p>\\n\"\n    - id: localeId\n      type: System.Int64\n      description: \"\\n<p>The locale ID of the parameter or column.</p>\\n\"\n    - id: compareOptions\n      type: System.Data.SqlTypes.SqlCompareOptions\n      description: \"\\n<p>The comparison rules of the parameter or column.</p>\\n\"\n    - id: userDefinedType\n      type: System.Type\n      description: \"\\n<p>A <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance that points to the UDT.</p>\\n\"\n    - id: useServerDefault\n      type: System.Boolean\n      description: \"\\n<p>Specifes whether this column should use the default server value.</p>\\n\"\n    - id: isUniqueKey\n      type: System.Boolean\n      description: \"\\n<p>Specifies if the column in the table-valued parameter is unique.</p>\\n\"\n    - id: columnSortOrder\n      type: System.Data.SqlClient.SortOrder\n      description: \"\\n<p>Specifies the sort order for a column.</p>\\n\"\n    - id: sortOrdinal\n      type: System.Int32\n      description: \"\\n<p>Specifies the ordinal of the sort column.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlMetaData.SqlMetaData(String, SqlDbType, Int64, Byte, Byte, Int64, SqlCompareOptions, Type, Boolean, Boolean, SortOrder, Int32)\n- uid: Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Int64,System.Data.SqlTypes.SqlCompareOptions)\n  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Int64,System.Data.SqlTypes.SqlCompareOptions)\n  id: '#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Int64,System.Data.SqlTypes.SqlCompareOptions)'\n  parent: Microsoft.SqlServer.Server.SqlMetaData\n  langs:\n  - csharp\n  - vb\n  name: SqlMetaData(String, SqlDbType, Int64, Int64, SqlCompareOptions)\n  fullName: Microsoft.SqlServer.Server.SqlMetaData.SqlMetaData(System.String, System.Data.SqlDbType, System.Int64, System.Int64, System.Data.SqlTypes.SqlCompareOptions)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n    startLine: 106\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified column name, type, maximum length, locale, and compare options.</p>\\n\"\n  syntax:\n    content: public SqlMetaData(string name, SqlDbType dbType, long maxLength, long locale, SqlCompareOptions compareOptions)\n    content.vb: Public Sub New(name As String, dbType As SqlDbType, maxLength As Long, locale As Long, compareOptions As SqlCompareOptions)\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the parameter or column.</p>\\n\"\n    - id: dbType\n      type: System.Data.SqlDbType\n      description: \"\\n<p>The SQL Server type of the parameter or column.</p>\\n\"\n    - id: maxLength\n      type: System.Int64\n      description: \"\\n<p>The maximum length of the specified type. </p>\\n\"\n    - id: locale\n      type: System.Int64\n      description: \"\\n<p>The locale ID of the parameter or column.</p>\\n\"\n    - id: compareOptions\n      type: System.Data.SqlTypes.SqlCompareOptions\n      description: \"\\n<p>The comparison rules of the parameter or column.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>Name</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>A SqlDbType that is not allowed was passed to the constructor as <em>dbType</em>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlMetaData.SqlMetaData(String, SqlDbType, Int64, Int64, SqlCompareOptions)\n- uid: Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Int64,System.Data.SqlTypes.SqlCompareOptions,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)\n  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Int64,System.Data.SqlTypes.SqlCompareOptions,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)\n  id: '#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Int64,System.Data.SqlTypes.SqlCompareOptions,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)'\n  parent: Microsoft.SqlServer.Server.SqlMetaData\n  langs:\n  - csharp\n  - vb\n  name: SqlMetaData(String, SqlDbType, Int64, Int64, SqlCompareOptions, Boolean, Boolean, SortOrder, Int32)\n  fullName: Microsoft.SqlServer.Server.SqlMetaData.SqlMetaData(System.String, System.Data.SqlDbType, System.Int64, System.Int64, System.Data.SqlTypes.SqlCompareOptions, System.Boolean, System.Boolean, System.Data.SqlClient.SortOrder, System.Int32)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n    startLine: 114\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified column name, type, maximum length, locale, compare options, and server default. This form of the constructor supports table-valued parameters by allowing you to specify if the column is unique in the table-valued parameter, the sort order for the column, and the ordinal of the sort column.</p>\\n\"\n  syntax:\n    content: public SqlMetaData(string name, SqlDbType dbType, long maxLength, long locale, SqlCompareOptions compareOptions, bool useServerDefault, bool isUniqueKey, SortOrder columnSortOrder, int sortOrdinal)\n    content.vb: Public Sub New(name As String, dbType As SqlDbType, maxLength As Long, locale As Long, compareOptions As SqlCompareOptions, useServerDefault As Boolean, isUniqueKey As Boolean, columnSortOrder As SortOrder, sortOrdinal As Integer)\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the column.</p>\\n\"\n    - id: dbType\n      type: System.Data.SqlDbType\n      description: \"\\n<p>The SQL Server type of the parameter or column.</p>\\n\"\n    - id: maxLength\n      type: System.Int64\n      description: \"\\n<p>The maximum length of the specified type.</p>\\n\"\n    - id: locale\n      type: System.Int64\n      description: \"\\n<p>The locale ID of the parameter or column.</p>\\n\"\n    - id: compareOptions\n      type: System.Data.SqlTypes.SqlCompareOptions\n      description: \"\\n<p>The comparison rules of the parameter or column.</p>\\n\"\n    - id: useServerDefault\n      type: System.Boolean\n      description: \"\\n<p>Specifes whether this column should use the default server value.</p>\\n\"\n    - id: isUniqueKey\n      type: System.Boolean\n      description: \"\\n<p>Specifies if the column in the table-valued parameter is unique.</p>\\n\"\n    - id: columnSortOrder\n      type: System.Data.SqlClient.SortOrder\n      description: \"\\n<p>Specifies the sort order for a column.</p>\\n\"\n    - id: sortOrdinal\n      type: System.Int32\n      description: \"\\n<p>Specifies the ordinal of the sort column.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlMetaData.SqlMetaData(String, SqlDbType, Int64, Int64, SqlCompareOptions, Boolean, Boolean, SortOrder, Int32)\n- uid: Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.String,System.String,System.String)\n  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.String,System.String,System.String)\n  id: '#ctor(System.String,System.Data.SqlDbType,System.String,System.String,System.String)'\n  parent: Microsoft.SqlServer.Server.SqlMetaData\n  langs:\n  - csharp\n  - vb\n  name: SqlMetaData(String, SqlDbType, String, String, String)\n  fullName: Microsoft.SqlServer.Server.SqlMetaData.SqlMetaData(System.String, System.Data.SqlDbType, System.String, System.String, System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n    startLine: 199\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified column name, type, database name, owning schema, and object name.</p>\\n\"\n  syntax:\n    content: public SqlMetaData(string name, SqlDbType dbType, string database, string owningSchema, string objectName)\n    content.vb: Public Sub New(name As String, dbType As SqlDbType, database As String, owningSchema As String, objectName As String)\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the column.</p>\\n\"\n    - id: dbType\n      type: System.Data.SqlDbType\n      description: \"\\n<p>The SQL Server type of the parameter or column.</p>\\n\"\n    - id: database\n      type: System.String\n      description: \"\\n<p>The database name of the XML schema collection of a typed XML instance.</p>\\n\"\n    - id: owningSchema\n      type: System.String\n      description: \"\\n<p>The relational schema name of the XML schema collection of a typed XML instance.</p>\\n\"\n    - id: objectName\n      type: System.String\n      description: \"\\n<p>The name of the XML schema collection of a typed XML instance.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>Name</em> is <strong>null</strong>, or <em>objectName</em> is <strong>null</strong> when <em>database</em> and <em>owningSchema</em> are non-<strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>A SqlDbType that is not allowed was passed to the constructor as <em>dbType</em>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlMetaData.SqlMetaData(String, SqlDbType, String, String, String)\n- uid: Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)\n  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)\n  id: '#ctor(System.String,System.Data.SqlDbType,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)'\n  parent: Microsoft.SqlServer.Server.SqlMetaData\n  langs:\n  - csharp\n  - vb\n  name: SqlMetaData(String, SqlDbType, String, String, String, Boolean, Boolean, SortOrder, Int32)\n  fullName: Microsoft.SqlServer.Server.SqlMetaData.SqlMetaData(System.String, System.Data.SqlDbType, System.String, System.String, System.String, System.Boolean, System.Boolean, System.Data.SqlClient.SortOrder, System.Int32)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n    startLine: 123\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified column name, database name, owning schema, object name, and default server. This form of the constructor supports table-valued parameters by allowing you to specify if the column is unique in the table-valued parameter, the sort order for the column, and the ordinal of the sort column.</p>\\n\"\n  syntax:\n    content: public SqlMetaData(string name, SqlDbType dbType, string database, string owningSchema, string objectName, bool useServerDefault, bool isUniqueKey, SortOrder columnSortOrder, int sortOrdinal)\n    content.vb: Public Sub New(name As String, dbType As SqlDbType, database As String, owningSchema As String, objectName As String, useServerDefault As Boolean, isUniqueKey As Boolean, columnSortOrder As SortOrder, sortOrdinal As Integer)\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the column.</p>\\n\"\n    - id: dbType\n      type: System.Data.SqlDbType\n      description: \"\\n<p>The SQL Server type of the parameter or column.</p>\\n\"\n    - id: database\n      type: System.String\n      description: \"\\n<p>The database name of the XML schema collection of a typed XML instance.</p>\\n\"\n    - id: owningSchema\n      type: System.String\n      description: \"\\n<p>The relational schema name of the XML schema collection of a typed XML instance.</p>\\n\"\n    - id: objectName\n      type: System.String\n      description: \"\\n<p>The name of the XML schema collection of a typed XML instance.</p>\\n\"\n    - id: useServerDefault\n      type: System.Boolean\n      description: \"\\n<p>Specifes whether this column should use the default server value.</p>\\n\"\n    - id: isUniqueKey\n      type: System.Boolean\n      description: \"\\n<p>Specifies if the column in the table-valued parameter is unique.</p>\\n\"\n    - id: columnSortOrder\n      type: System.Data.SqlClient.SortOrder\n      description: \"\\n<p>Specifies the sort order for a column.</p>\\n\"\n    - id: sortOrdinal\n      type: System.Int32\n      description: \"\\n<p>Specifies the ordinal of the sort column.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlMetaData.SqlMetaData(String, SqlDbType, String, String, String, Boolean, Boolean, SortOrder, Int32)\n- uid: Microsoft.SqlServer.Server.SqlMetaData.CompareOptions\n  commentId: P:Microsoft.SqlServer.Server.SqlMetaData.CompareOptions\n  id: CompareOptions\n  parent: Microsoft.SqlServer.Server.SqlMetaData\n  langs:\n  - csharp\n  - vb\n  name: CompareOptions\n  fullName: Microsoft.SqlServer.Server.SqlMetaData.CompareOptions\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CompareOptions\n    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n    startLine: 260\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Gets the comparison rules used for the column or parameter.</p>\\n\"\n  syntax:\n    content: public SqlCompareOptions CompareOptions { get; }\n    content.vb: Public ReadOnly Property CompareOptions As SqlCompareOptions\n    parameters: []\n    return:\n      type: System.Data.SqlTypes.SqlCompareOptions\n      description: \"\\n<p>The comparison rules used for the column or parameter as a <xref href=\\\"System.Data.SqlTypes.SqlCompareOptions\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: SqlMetaData.CompareOptions\n- uid: Microsoft.SqlServer.Server.SqlMetaData.IsUniqueKey\n  commentId: P:Microsoft.SqlServer.Server.SqlMetaData.IsUniqueKey\n  id: IsUniqueKey\n  parent: Microsoft.SqlServer.Server.SqlMetaData\n  langs:\n  - csharp\n  - vb\n  name: IsUniqueKey\n  fullName: Microsoft.SqlServer.Server.SqlMetaData.IsUniqueKey\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsUniqueKey\n    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n    startLine: 269\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Indicates if the column in the table-valued parameter is unique.</p>\\n\"\n  syntax:\n    content: public bool IsUniqueKey { get; }\n    content.vb: Public ReadOnly Property IsUniqueKey As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>A <strong>Boolean</strong> value.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: SqlMetaData.IsUniqueKey\n- uid: Microsoft.SqlServer.Server.SqlMetaData.LocaleId\n  commentId: P:Microsoft.SqlServer.Server.SqlMetaData.LocaleId\n  id: LocaleId\n  parent: Microsoft.SqlServer.Server.SqlMetaData\n  langs:\n  - csharp\n  - vb\n  name: LocaleId\n  fullName: Microsoft.SqlServer.Server.SqlMetaData.LocaleId\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: LocaleId\n    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n    startLine: 277\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Gets the locale ID of the column or parameter.</p>\\n\"\n  syntax:\n    content: public long LocaleId { get; }\n    content.vb: Public ReadOnly Property LocaleId As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>The locale ID of the column or parameter as a <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: SqlMetaData.LocaleId\n- uid: Microsoft.SqlServer.Server.SqlMetaData.Max\n  commentId: P:Microsoft.SqlServer.Server.SqlMetaData.Max\n  id: Max\n  parent: Microsoft.SqlServer.Server.SqlMetaData\n  langs:\n  - csharp\n  - vb\n  name: Max\n  fullName: Microsoft.SqlServer.Server.SqlMetaData.Max\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Max\n    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n    startLine: 285\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Gets the length of <strong>text</strong>, <strong>ntext</strong>, and <strong>image</strong> data types. </p>\\n\"\n  syntax:\n    content: public static long Max { get; }\n    content.vb: Public Shared ReadOnly Property Max As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>The length of <strong>text</strong>, <strong>ntext</strong>, and <strong>image</strong> data types.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: SqlMetaData.Max\n- uid: Microsoft.SqlServer.Server.SqlMetaData.MaxLength\n  commentId: P:Microsoft.SqlServer.Server.SqlMetaData.MaxLength\n  id: MaxLength\n  parent: Microsoft.SqlServer.Server.SqlMetaData\n  langs:\n  - csharp\n  - vb\n  name: MaxLength\n  fullName: Microsoft.SqlServer.Server.SqlMetaData.MaxLength\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: MaxLength\n    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n    startLine: 293\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Gets the maximum length of the column or parameter.</p>\\n\"\n  syntax:\n    content: public long MaxLength { get; }\n    content.vb: Public ReadOnly Property MaxLength As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>The maximum length of the column or parameter as a <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: SqlMetaData.MaxLength\n- uid: Microsoft.SqlServer.Server.SqlMetaData.Name\n  commentId: P:Microsoft.SqlServer.Server.SqlMetaData.Name\n  id: Name\n  parent: Microsoft.SqlServer.Server.SqlMetaData\n  langs:\n  - csharp\n  - vb\n  name: Name\n  fullName: Microsoft.SqlServer.Server.SqlMetaData.Name\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Name\n    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n    startLine: 301\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Gets the name of the column or parameter.</p>\\n\"\n  syntax:\n    content: public string Name { get; }\n    content.vb: Public ReadOnly Property Name As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The name of the column or parameter as a <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The <em>Name</em> specified in the constructor is longer than 128 characters. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: SqlMetaData.Name\n- uid: Microsoft.SqlServer.Server.SqlMetaData.Precision\n  commentId: P:Microsoft.SqlServer.Server.SqlMetaData.Precision\n  id: Precision\n  parent: Microsoft.SqlServer.Server.SqlMetaData\n  langs:\n  - csharp\n  - vb\n  name: Precision\n  fullName: Microsoft.SqlServer.Server.SqlMetaData.Precision\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Precision\n    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n    startLine: 309\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Gets the precision of the column or parameter.</p>\\n\"\n  syntax:\n    content: public byte Precision { get; }\n    content.vb: Public ReadOnly Property Precision As Byte\n    parameters: []\n    return:\n      type: System.Byte\n      description: \"\\n<p>The precision of the column or parameter as a <xref href=\\\"System.Byte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: SqlMetaData.Precision\n- uid: Microsoft.SqlServer.Server.SqlMetaData.Scale\n  commentId: P:Microsoft.SqlServer.Server.SqlMetaData.Scale\n  id: Scale\n  parent: Microsoft.SqlServer.Server.SqlMetaData\n  langs:\n  - csharp\n  - vb\n  name: Scale\n  fullName: Microsoft.SqlServer.Server.SqlMetaData.Scale\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Scale\n    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n    startLine: 317\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Gets the scale of the column or parameter.</p>\\n\"\n  syntax:\n    content: public byte Scale { get; }\n    content.vb: Public ReadOnly Property Scale As Byte\n    parameters: []\n    return:\n      type: System.Byte\n      description: \"\\n<p>The scale of the column or parameter.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: SqlMetaData.Scale\n- uid: Microsoft.SqlServer.Server.SqlMetaData.SortOrder\n  commentId: P:Microsoft.SqlServer.Server.SqlMetaData.SortOrder\n  id: SortOrder\n  parent: Microsoft.SqlServer.Server.SqlMetaData\n  langs:\n  - csharp\n  - vb\n  name: SortOrder\n  fullName: Microsoft.SqlServer.Server.SqlMetaData.SortOrder\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SortOrder\n    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n    startLine: 325\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Returns the sort order for a column.</p>\\n\"\n  syntax:\n    content: public SortOrder SortOrder { get; }\n    content.vb: Public ReadOnly Property SortOrder As SortOrder\n    parameters: []\n    return:\n      type: System.Data.SqlClient.SortOrder\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlClient.SortOrder\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: SqlMetaData.SortOrder\n- uid: Microsoft.SqlServer.Server.SqlMetaData.SortOrdinal\n  commentId: P:Microsoft.SqlServer.Server.SqlMetaData.SortOrdinal\n  id: SortOrdinal\n  parent: Microsoft.SqlServer.Server.SqlMetaData\n  langs:\n  - csharp\n  - vb\n  name: SortOrdinal\n  fullName: Microsoft.SqlServer.Server.SqlMetaData.SortOrdinal\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SortOrdinal\n    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n    startLine: 333\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Returns the ordinal of the sort column.</p>\\n\"\n  syntax:\n    content: public int SortOrdinal { get; }\n    content.vb: Public ReadOnly Property SortOrdinal As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The ordinal of the sort column.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: SqlMetaData.SortOrdinal\n- uid: Microsoft.SqlServer.Server.SqlMetaData.SqlDbType\n  commentId: P:Microsoft.SqlServer.Server.SqlMetaData.SqlDbType\n  id: SqlDbType\n  parent: Microsoft.SqlServer.Server.SqlMetaData\n  langs:\n  - csharp\n  - vb\n  name: SqlDbType\n  fullName: Microsoft.SqlServer.Server.SqlMetaData.SqlDbType\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SqlDbType\n    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n    startLine: 341\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Gets the data type of the column or parameter.</p>\\n\"\n  syntax:\n    content: public SqlDbType SqlDbType { get; }\n    content.vb: Public ReadOnly Property SqlDbType As SqlDbType\n    parameters: []\n    return:\n      type: System.Data.SqlDbType\n      description: \"\\n<p>The data type of the column or parameter as a <xref href=\\\"System.Data.DbType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: SqlMetaData.SqlDbType\n- uid: Microsoft.SqlServer.Server.SqlMetaData.TypeName\n  commentId: P:Microsoft.SqlServer.Server.SqlMetaData.TypeName\n  id: TypeName\n  parent: Microsoft.SqlServer.Server.SqlMetaData\n  langs:\n  - csharp\n  - vb\n  name: TypeName\n  fullName: Microsoft.SqlServer.Server.SqlMetaData.TypeName\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: TypeName\n    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n    startLine: 350\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Gets the three-part name of the user-defined type (UDT) or the SQL Server type represented by the instance.</p>\\n\"\n  syntax:\n    content: public string TypeName { get; }\n    content.vb: Public ReadOnly Property TypeName As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The name of the UDT or SQL Server type as a <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: SqlMetaData.TypeName\n- uid: Microsoft.SqlServer.Server.SqlMetaData.UseServerDefault\n  commentId: P:Microsoft.SqlServer.Server.SqlMetaData.UseServerDefault\n  id: UseServerDefault\n  parent: Microsoft.SqlServer.Server.SqlMetaData\n  langs:\n  - csharp\n  - vb\n  name: UseServerDefault\n  fullName: Microsoft.SqlServer.Server.SqlMetaData.UseServerDefault\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: UseServerDefault\n    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n    startLine: 361\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Reports whether this column should use the default server value.</p>\\n\"\n  syntax:\n    content: public bool UseServerDefault { get; }\n    content.vb: Public ReadOnly Property UseServerDefault As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>A <strong>Boolean</strong> value.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: SqlMetaData.UseServerDefault\n- uid: Microsoft.SqlServer.Server.SqlMetaData.XmlSchemaCollectionDatabase\n  commentId: P:Microsoft.SqlServer.Server.SqlMetaData.XmlSchemaCollectionDatabase\n  id: XmlSchemaCollectionDatabase\n  parent: Microsoft.SqlServer.Server.SqlMetaData\n  langs:\n  - csharp\n  - vb\n  name: XmlSchemaCollectionDatabase\n  fullName: Microsoft.SqlServer.Server.SqlMetaData.XmlSchemaCollectionDatabase\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: XmlSchemaCollectionDatabase\n    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n    startLine: 369\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Gets the name of the database where the schema collection for this XML instance is located.</p>\\n\"\n  syntax:\n    content: public string XmlSchemaCollectionDatabase { get; }\n    content.vb: Public ReadOnly Property XmlSchemaCollectionDatabase As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The name of the database where the schema collection for this XML instance is located as a <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: SqlMetaData.XmlSchemaCollectionDatabase\n- uid: Microsoft.SqlServer.Server.SqlMetaData.XmlSchemaCollectionName\n  commentId: P:Microsoft.SqlServer.Server.SqlMetaData.XmlSchemaCollectionName\n  id: XmlSchemaCollectionName\n  parent: Microsoft.SqlServer.Server.SqlMetaData\n  langs:\n  - csharp\n  - vb\n  name: XmlSchemaCollectionName\n  fullName: Microsoft.SqlServer.Server.SqlMetaData.XmlSchemaCollectionName\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: XmlSchemaCollectionName\n    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n    startLine: 377\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Gets the name of the schema collection for this XML instance.</p>\\n\"\n  syntax:\n    content: public string XmlSchemaCollectionName { get; }\n    content.vb: Public ReadOnly Property XmlSchemaCollectionName As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The name of the schema collection for this XML instance as a <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: SqlMetaData.XmlSchemaCollectionName\n- uid: Microsoft.SqlServer.Server.SqlMetaData.XmlSchemaCollectionOwningSchema\n  commentId: P:Microsoft.SqlServer.Server.SqlMetaData.XmlSchemaCollectionOwningSchema\n  id: XmlSchemaCollectionOwningSchema\n  parent: Microsoft.SqlServer.Server.SqlMetaData\n  langs:\n  - csharp\n  - vb\n  name: XmlSchemaCollectionOwningSchema\n  fullName: Microsoft.SqlServer.Server.SqlMetaData.XmlSchemaCollectionOwningSchema\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: XmlSchemaCollectionOwningSchema\n    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n    startLine: 385\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Gets the owning relational schema where the schema collection for this XML instance is located.</p>\\n\"\n  syntax:\n    content: public string XmlSchemaCollectionOwningSchema { get; }\n    content.vb: Public ReadOnly Property XmlSchemaCollectionOwningSchema As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The owning relational schema where the schema collection for this XML instance is located as a <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: SqlMetaData.XmlSchemaCollectionOwningSchema\n- uid: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Boolean)\n  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Boolean)\n  id: Adjust(System.Boolean)\n  parent: Microsoft.SqlServer.Server.SqlMetaData\n  langs:\n  - csharp\n  - vb\n  name: Adjust(Boolean)\n  fullName: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Adjust\n    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n    startLine: 1356\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Validates the specified <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value against the metadata, and adjusts the value if necessary.</p>\\n\"\n  syntax:\n    content: public bool Adjust(bool value)\n    content.vb: Public Function Adjust(value As Boolean) As Boolean\n    parameters:\n    - id: value\n      type: System.Boolean\n      description: \"\\n<p>The value to validate against the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>The adjusted value as a <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>Value</em> does not match the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> type, or <em>value</em> could not be adjusted. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlMetaData.Adjust(Boolean)\n- uid: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Byte)\n  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Byte)\n  id: Adjust(System.Byte)\n  parent: Microsoft.SqlServer.Server.SqlMetaData\n  langs:\n  - csharp\n  - vb\n  name: Adjust(Byte)\n  fullName: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Byte)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Adjust\n    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n    startLine: 1363\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Validates the specified <xref href=\\\"System.Byte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value against the metadata, and adjusts the value if necessary.</p>\\n\"\n  syntax:\n    content: public byte Adjust(byte value)\n    content.vb: Public Function Adjust(value As Byte) As Byte\n    parameters:\n    - id: value\n      type: System.Byte\n      description: \"\\n<p>The value to validate against the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n    return:\n      type: System.Byte\n      description: \"\\n<p>The adjusted value as a <xref href=\\\"System.Byte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>Value</em> does not match the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> type, or <em>value</em> could not be adjusted. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlMetaData.Adjust(Byte)\n- uid: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Byte[])\n  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Byte[])\n  id: Adjust(System.Byte[])\n  parent: Microsoft.SqlServer.Server.SqlMetaData\n  langs:\n  - csharp\n  - vb\n  name: Adjust(Byte[])\n  fullName: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Byte[])\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Adjust\n    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n    startLine: 1370\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Validates the specified array of <xref href=\\\"System.Byte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values against the metadata, and adjusts the value if necessary.</p>\\n\"\n  syntax:\n    content: public byte[] Adjust(byte[] value)\n    content.vb: Public Function Adjust(value As Byte()) As Byte()\n    parameters:\n    - id: value\n      type: System.Byte[]\n      description: \"\\n<p>The value to validate against the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n    return:\n      type: System.Byte[]\n      description: \"\\n<p>The adjusted value as an array of <xref href=\\\"System.Byte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>Value</em> does not match the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> type, or <em>value</em> could not be adjusted. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Byte())\n  name.vb: Adjust(Byte())\n  nameWithType: SqlMetaData.Adjust(Byte[])\n  nameWithType.vb: SqlMetaData.Adjust(Byte())\n- uid: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Char)\n  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Char)\n  id: Adjust(System.Char)\n  parent: Microsoft.SqlServer.Server.SqlMetaData\n  langs:\n  - csharp\n  - vb\n  name: Adjust(Char)\n  fullName: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Char)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Adjust\n    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n    startLine: 1409\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Validates the specified <xref href=\\\"System.Char\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value against the metadata, and adjusts the value if necessary.</p>\\n\"\n  syntax:\n    content: public char Adjust(char value)\n    content.vb: Public Function Adjust(value As Char) As Char\n    parameters:\n    - id: value\n      type: System.Char\n      description: \"\\n<p>The value to validate against the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n    return:\n      type: System.Char\n      description: \"\\n<p>The adjusted value as a <xref href=\\\"System.Char\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>Value</em> does not match the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> type, or <em>value</em> could not be adjusted. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlMetaData.Adjust(Char)\n- uid: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Char[])\n  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Char[])\n  id: Adjust(System.Char[])\n  parent: Microsoft.SqlServer.Server.SqlMetaData\n  langs:\n  - csharp\n  - vb\n  name: Adjust(Char[])\n  fullName: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Char[])\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Adjust\n    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n    startLine: 1425\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Validates the specified array of <xref href=\\\"System.Char\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values against the metadata, and adjusts the value if necessary.</p>\\n\"\n  syntax:\n    content: public char[] Adjust(char[] value)\n    content.vb: Public Function Adjust(value As Char()) As Char()\n    parameters:\n    - id: value\n      type: System.Char[]\n      description: \"\\n<p>The value to validate against the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n    return:\n      type: System.Char[]\n      description: \"\\n<p>The adjusted value as an array <xref href=\\\"System.Char\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>Value</em> does not match the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> type, or <em>value</em> could not be adjusted. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Char())\n  name.vb: Adjust(Char())\n  nameWithType: SqlMetaData.Adjust(Char[])\n  nameWithType.vb: SqlMetaData.Adjust(Char())\n- uid: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlBinary)\n  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlBinary)\n  id: Adjust(System.Data.SqlTypes.SqlBinary)\n  parent: Microsoft.SqlServer.Server.SqlMetaData\n  langs:\n  - csharp\n  - vb\n  name: Adjust(SqlBinary)\n  fullName: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlBinary)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Adjust\n    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n    startLine: 932\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Validates the specified <xref href=\\\"System.Data.SqlTypes.SqlBinary\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value against the metadata, and adjusts the value if necessary.</p>\\n\"\n  syntax:\n    content: public SqlBinary Adjust(SqlBinary value)\n    content.vb: Public Function Adjust(value As SqlBinary) As SqlBinary\n    parameters:\n    - id: value\n      type: System.Data.SqlTypes.SqlBinary\n      description: \"\\n<p>The value to validate against the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlBinary\n      description: \"\\n<p>The adjusted value as a <xref href=\\\"System.Data.SqlTypes.SqlBinary\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>Value</em> does not match the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> type, or <em>value</em> could not be adjusted. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlMetaData.Adjust(SqlBinary)\n- uid: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlBoolean)\n  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlBoolean)\n  id: Adjust(System.Data.SqlTypes.SqlBoolean)\n  parent: Microsoft.SqlServer.Server.SqlMetaData\n  langs:\n  - csharp\n  - vb\n  name: Adjust(SqlBoolean)\n  fullName: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlBoolean)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Adjust\n    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n    startLine: 822\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Validates the specified <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value against the metadata, and adjusts the value if necessary.</p>\\n\"\n  syntax:\n    content: public SqlBoolean Adjust(SqlBoolean value)\n    content.vb: Public Function Adjust(value As SqlBoolean) As SqlBoolean\n    parameters:\n    - id: value\n      type: System.Data.SqlTypes.SqlBoolean\n      description: \"\\n<p>The value to validate against the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: \"\\n<p>The adjusted value as a <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>Value</em> does not match the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> type, or <em>value</em> could not be adjusted. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlMetaData.Adjust(SqlBoolean)\n- uid: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlByte)\n  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlByte)\n  id: Adjust(System.Data.SqlTypes.SqlByte)\n  parent: Microsoft.SqlServer.Server.SqlMetaData\n  langs:\n  - csharp\n  - vb\n  name: Adjust(SqlByte)\n  fullName: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlByte)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Adjust\n    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n    startLine: 829\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Validates the specified <xref href=\\\"System.Data.SqlTypes.SqlByte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value against the metadata, and adjusts the value if necessary.</p>\\n\"\n  syntax:\n    content: public SqlByte Adjust(SqlByte value)\n    content.vb: Public Function Adjust(value As SqlByte) As SqlByte\n    parameters:\n    - id: value\n      type: System.Data.SqlTypes.SqlByte\n      description: \"\\n<p>The value to validate against the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlByte\n      description: \"\\n<p>The adjusted value as a <xref href=\\\"System.Data.SqlTypes.SqlByte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>Value</em> does not match the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> type, or <em>value</em> could not be adjusted. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlMetaData.Adjust(SqlByte)\n- uid: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlBytes)\n  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlBytes)\n  id: Adjust(System.Data.SqlTypes.SqlBytes)\n  parent: Microsoft.SqlServer.Server.SqlMetaData\n  langs:\n  - csharp\n  - vb\n  name: Adjust(SqlBytes)\n  fullName: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlBytes)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Adjust\n    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n    startLine: 1026\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Validates the specified <xref href=\\\"System.Data.SqlTypes.SqlBytes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value against the metadata, and adjusts the value if necessary.</p>\\n\"\n  syntax:\n    content: public SqlBytes Adjust(SqlBytes value)\n    content.vb: Public Function Adjust(value As SqlBytes) As SqlBytes\n    parameters:\n    - id: value\n      type: System.Data.SqlTypes.SqlBytes\n      description: \"\\n<p>The value to validate against the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlBytes\n      description: \"\\n<p>The adjusted value as a <xref href=\\\"System.Data.SqlTypes.SqlBytes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>Value</em> does not match the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> type, or <em>value</em> could not be adjusted. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlMetaData.Adjust(SqlBytes)\n- uid: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlChars)\n  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlChars)\n  id: Adjust(System.Data.SqlTypes.SqlChars)\n  parent: Microsoft.SqlServer.Server.SqlMetaData\n  langs:\n  - csharp\n  - vb\n  name: Adjust(SqlChars)\n  fullName: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlChars)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Adjust\n    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n    startLine: 979\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Validates the specified <xref href=\\\"System.Data.SqlTypes.SqlChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value against the metadata, and adjusts the value if necessary.</p>\\n\"\n  syntax:\n    content: public SqlChars Adjust(SqlChars value)\n    content.vb: Public Function Adjust(value As SqlChars) As SqlChars\n    parameters:\n    - id: value\n      type: System.Data.SqlTypes.SqlChars\n      description: \"\\n<p>The value to validate against the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlChars\n      description: \"\\n<p>The adjusted value as a <xref href=\\\"System.Data.SqlTypes.SqlChars\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>Value</em> does not match the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> type, or <em>value</em> could not be adjusted. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlMetaData.Adjust(SqlChars)\n- uid: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlDateTime)\n  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlDateTime)\n  id: Adjust(System.Data.SqlTypes.SqlDateTime)\n  parent: Microsoft.SqlServer.Server.SqlMetaData\n  langs:\n  - csharp\n  - vb\n  name: Adjust(SqlDateTime)\n  fullName: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlDateTime)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Adjust\n    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n    startLine: 883\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Validates the specified <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value against the metadata, and adjusts the value if necessary.</p>\\n\"\n  syntax:\n    content: public SqlDateTime Adjust(SqlDateTime value)\n    content.vb: Public Function Adjust(value As SqlDateTime) As SqlDateTime\n    parameters:\n    - id: value\n      type: System.Data.SqlTypes.SqlDateTime\n      description: \"\\n<p>The value to validate against the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlDateTime\n      description: \"\\n<p>The adjusted value as a <xref href=\\\"System.Data.SqlTypes.SqlDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>Value</em> does not match the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> type, or <em>value</em> could not be adjusted. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlMetaData.Adjust(SqlDateTime)\n- uid: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlDecimal)\n  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlDecimal)\n  id: Adjust(System.Data.SqlTypes.SqlDecimal)\n  parent: Microsoft.SqlServer.Server.SqlMetaData\n  langs:\n  - csharp\n  - vb\n  name: Adjust(SqlDecimal)\n  fullName: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlDecimal)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Adjust\n    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n    startLine: 895\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Validates the specified <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value against the metadata, and adjusts the value if necessary.</p>\\n\"\n  syntax:\n    content: public SqlDecimal Adjust(SqlDecimal value)\n    content.vb: Public Function Adjust(value As SqlDecimal) As SqlDecimal\n    parameters:\n    - id: value\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>The value to validate against the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>The adjusted value as a <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>Value</em> does not match the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> type, or <em>value</em> could not be adjusted. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlMetaData.Adjust(SqlDecimal)\n- uid: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlDouble)\n  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlDouble)\n  id: Adjust(System.Data.SqlTypes.SqlDouble)\n  parent: Microsoft.SqlServer.Server.SqlMetaData\n  langs:\n  - csharp\n  - vb\n  name: Adjust(SqlDouble)\n  fullName: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlDouble)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Adjust\n    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n    startLine: 864\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Validates the specified <xref href=\\\"System.Data.SqlTypes.SqlDouble\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value against the metadata, and adjusts the value if necessary.</p>\\n\"\n  syntax:\n    content: public SqlDouble Adjust(SqlDouble value)\n    content.vb: Public Function Adjust(value As SqlDouble) As SqlDouble\n    parameters:\n    - id: value\n      type: System.Data.SqlTypes.SqlDouble\n      description: \"\\n<p>The value to validate against the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlDouble\n      description: \"\\n<p>The adjusted value as a <xref href=\\\"System.Data.SqlTypes.SqlDouble\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>Value</em> does not match the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> type, or <em>value</em> could not be adjusted. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlMetaData.Adjust(SqlDouble)\n- uid: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlGuid)\n  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlGuid)\n  id: Adjust(System.Data.SqlTypes.SqlGuid)\n  parent: Microsoft.SqlServer.Server.SqlMetaData\n  langs:\n  - csharp\n  - vb\n  name: Adjust(SqlGuid)\n  fullName: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlGuid)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Adjust\n    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n    startLine: 972\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Validates the specified <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value against the metadata, and adjusts the value if necessary.</p>\\n\"\n  syntax:\n    content: public SqlGuid Adjust(SqlGuid value)\n    content.vb: Public Function Adjust(value As SqlGuid) As SqlGuid\n    parameters:\n    - id: value\n      type: System.Data.SqlTypes.SqlGuid\n      description: \"\\n<p>The value to validate against the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlGuid\n      description: \"\\n<p>The adjusted value as a <xref href=\\\"System.Data.SqlTypes.SqlGuid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>Value</em> does not match the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> type, or <em>value</em> could not be adjusted. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlMetaData.Adjust(SqlGuid)\n- uid: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlInt16)\n  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlInt16)\n  id: Adjust(System.Data.SqlTypes.SqlInt16)\n  parent: Microsoft.SqlServer.Server.SqlMetaData\n  langs:\n  - csharp\n  - vb\n  name: Adjust(SqlInt16)\n  fullName: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlInt16)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Adjust\n    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n    startLine: 836\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Validates the specified <xref href=\\\"System.Data.SqlTypes.SqlInt16\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value against the metadata, and adjusts the value if necessary.</p>\\n\"\n  syntax:\n    content: public SqlInt16 Adjust(SqlInt16 value)\n    content.vb: Public Function Adjust(value As SqlInt16) As SqlInt16\n    parameters:\n    - id: value\n      type: System.Data.SqlTypes.SqlInt16\n      description: \"\\n<p>The value to validate against the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlInt16\n      description: \"\\n<p>The adjusted value as a <xref href=\\\"System.Data.SqlTypes.SqlInt16\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>Value</em> does not match the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> type, or <em>value</em> could not be adjusted. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlMetaData.Adjust(SqlInt16)\n- uid: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlInt32)\n  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlInt32)\n  id: Adjust(System.Data.SqlTypes.SqlInt32)\n  parent: Microsoft.SqlServer.Server.SqlMetaData\n  langs:\n  - csharp\n  - vb\n  name: Adjust(SqlInt32)\n  fullName: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlInt32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Adjust\n    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n    startLine: 843\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Validates the specified <xref href=\\\"System.Data.SqlTypes.SqlInt32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value against the metadata, and adjusts the value if necessary.</p>\\n\"\n  syntax:\n    content: public SqlInt32 Adjust(SqlInt32 value)\n    content.vb: Public Function Adjust(value As SqlInt32) As SqlInt32\n    parameters:\n    - id: value\n      type: System.Data.SqlTypes.SqlInt32\n      description: \"\\n<p>The value to validate against the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlInt32\n      description: \"\\n<p>The adjusted value as a <xref href=\\\"System.Data.SqlTypes.SqlInt32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>Value</em> does not match the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> type, or <em>value</em> could not be adjusted. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlMetaData.Adjust(SqlInt32)\n- uid: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlInt64)\n  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlInt64)\n  id: Adjust(System.Data.SqlTypes.SqlInt64)\n  parent: Microsoft.SqlServer.Server.SqlMetaData\n  langs:\n  - csharp\n  - vb\n  name: Adjust(SqlInt64)\n  fullName: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlInt64)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Adjust\n    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n    startLine: 850\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Validates the specified <xref href=\\\"System.Data.SqlTypes.SqlInt64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value against the metadata, and adjusts the value if necessary.</p>\\n\"\n  syntax:\n    content: public SqlInt64 Adjust(SqlInt64 value)\n    content.vb: Public Function Adjust(value As SqlInt64) As SqlInt64\n    parameters:\n    - id: value\n      type: System.Data.SqlTypes.SqlInt64\n      description: \"\\n<p>The value to validate against the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlInt64\n      description: \"\\n<p>The adjusted value as a <xref href=\\\"System.Data.SqlTypes.SqlInt64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>Value</em> does not match the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> type, or <em>value</em> could not be adjusted. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlMetaData.Adjust(SqlInt64)\n- uid: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlMoney)\n  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlMoney)\n  id: Adjust(System.Data.SqlTypes.SqlMoney)\n  parent: Microsoft.SqlServer.Server.SqlMetaData\n  langs:\n  - csharp\n  - vb\n  name: Adjust(SqlMoney)\n  fullName: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlMoney)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Adjust\n    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n    startLine: 871\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Validates the specified <xref href=\\\"System.Data.SqlTypes.SqlMoney\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value against the metadata, and adjusts the value if necessary.</p>\\n\"\n  syntax:\n    content: public SqlMoney Adjust(SqlMoney value)\n    content.vb: Public Function Adjust(value As SqlMoney) As SqlMoney\n    parameters:\n    - id: value\n      type: System.Data.SqlTypes.SqlMoney\n      description: \"\\n<p>The value to validate against the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlMoney\n      description: \"\\n<p>The adjusted value as a <xref href=\\\"System.Data.SqlTypes.SqlMoney\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>Value</em> does not match the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> type, or <em>value</em> could not be adjusted. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlMetaData.Adjust(SqlMoney)\n- uid: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlSingle)\n  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlSingle)\n  id: Adjust(System.Data.SqlTypes.SqlSingle)\n  parent: Microsoft.SqlServer.Server.SqlMetaData\n  langs:\n  - csharp\n  - vb\n  name: Adjust(SqlSingle)\n  fullName: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlSingle)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Adjust\n    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n    startLine: 857\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Validates the specified <xref href=\\\"System.Data.SqlTypes.SqlSingle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value against the metadata, and adjusts the value if necessary.</p>\\n\"\n  syntax:\n    content: public SqlSingle Adjust(SqlSingle value)\n    content.vb: Public Function Adjust(value As SqlSingle) As SqlSingle\n    parameters:\n    - id: value\n      type: System.Data.SqlTypes.SqlSingle\n      description: \"\\n<p>The value to validate against the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlSingle\n      description: \"\\n<p>The adjusted value as a <xref href=\\\"System.Data.SqlTypes.SqlSingle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>Value</em> does not match the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> type, or <em>value</em> could not be adjusted. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlMetaData.Adjust(SqlSingle)\n- uid: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlString)\n  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlString)\n  id: Adjust(System.Data.SqlTypes.SqlString)\n  parent: Microsoft.SqlServer.Server.SqlMetaData\n  langs:\n  - csharp\n  - vb\n  name: Adjust(SqlString)\n  fullName: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlString)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Adjust\n    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n    startLine: 902\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Validates the specified <xref href=\\\"System.Data.SqlTypes.SqlString\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value against the metadata, and adjusts the value if necessary.</p>\\n\"\n  syntax:\n    content: public SqlString Adjust(SqlString value)\n    content.vb: Public Function Adjust(value As SqlString) As SqlString\n    parameters:\n    - id: value\n      type: System.Data.SqlTypes.SqlString\n      description: \"\\n<p>The value to validate against the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlString\n      description: \"\\n<p>The adjusted value as a <xref href=\\\"System.Data.SqlTypes.SqlString\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>Value</em> does not match the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> type, or <em>value</em> could not be adjusted. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlMetaData.Adjust(SqlString)\n- uid: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlXml)\n  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlXml)\n  id: Adjust(System.Data.SqlTypes.SqlXml)\n  parent: Microsoft.SqlServer.Server.SqlMetaData\n  langs:\n  - csharp\n  - vb\n  name: Adjust(SqlXml)\n  fullName: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlXml)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Adjust\n    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n    startLine: 1071\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Validates the specified <xref href=\\\"System.Data.SqlTypes.SqlXml\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value against the metadata, and adjusts the value if necessary.</p>\\n\"\n  syntax:\n    content: public SqlXml Adjust(SqlXml value)\n    content.vb: Public Function Adjust(value As SqlXml) As SqlXml\n    parameters:\n    - id: value\n      type: System.Data.SqlTypes.SqlXml\n      description: \"\\n<p>The value to validate against the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlXml\n      description: \"\\n<p>The adjusted value as a <xref href=\\\"System.Data.SqlTypes.SqlXml\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>Value</em> does not match the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> type, or <em>value</em> could not be adjusted. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlMetaData.Adjust(SqlXml)\n- uid: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.DateTime)\n  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.DateTime)\n  id: Adjust(System.DateTime)\n  parent: Microsoft.SqlServer.Server.SqlMetaData\n  langs:\n  - csharp\n  - vb\n  name: Adjust(DateTime)\n  fullName: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.DateTime)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Adjust\n    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n    startLine: 794\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Validates the specified <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value against the metadata, and adjusts the value if necessary.</p>\\n\"\n  syntax:\n    content: public DateTime Adjust(DateTime value)\n    content.vb: Public Function Adjust(value As Date) As Date\n    parameters:\n    - id: value\n      type: System.DateTime\n      description: \"\\n<p>The value to validate against the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n    return:\n      type: System.DateTime\n      description: \"\\n<p>The adjusted value as a <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>Value</em> does not match the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> type, or <em>value</em> could not be adjusted. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlMetaData.Adjust(DateTime)\n- uid: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.DateTimeOffset)\n  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.DateTimeOffset)\n  id: Adjust(System.DateTimeOffset)\n  parent: Microsoft.SqlServer.Server.SqlMetaData\n  langs:\n  - csharp\n  - vb\n  name: Adjust(DateTimeOffset)\n  fullName: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.DateTimeOffset)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Adjust\n    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n    startLine: 1086\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Validates the specified <xref href=\\\"System.DateTimeOffset\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value against the metadata, and adjusts the value if necessary.</p>\\n\"\n  syntax:\n    content: public DateTimeOffset Adjust(DateTimeOffset value)\n    content.vb: Public Function Adjust(value As DateTimeOffset) As DateTimeOffset\n    parameters:\n    - id: value\n      type: System.DateTimeOffset\n      description: \"\\n<p>The value to validate against the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n    return:\n      type: System.DateTimeOffset\n      description: \"\\n<p>The adjusted value as an array of <xref href=\\\"System.DateTimeOffset\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>Value</em> does not match the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> type, or <em>value</em> could not be adjusted. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlMetaData.Adjust(DateTimeOffset)\n- uid: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Decimal)\n  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Decimal)\n  id: Adjust(System.Decimal)\n  parent: Microsoft.SqlServer.Server.SqlMetaData\n  langs:\n  - csharp\n  - vb\n  name: Adjust(Decimal)\n  fullName: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Decimal)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Adjust\n    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n    startLine: 773\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Validates the specified <xref href=\\\"System.Decimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value against the metadata, and adjusts the value if necessary.</p>\\n\"\n  syntax:\n    content: public decimal Adjust(decimal value)\n    content.vb: Public Function Adjust(value As Decimal) As Decimal\n    parameters:\n    - id: value\n      type: System.Decimal\n      description: \"\\n<p>The value to validate against the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n    return:\n      type: System.Decimal\n      description: \"\\n<p>The adjusted value as a <xref href=\\\"System.Decimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>Value</em> does not match the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> type, or <em>value</em> could not be adjusted. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlMetaData.Adjust(Decimal)\n- uid: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Double)\n  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Double)\n  id: Adjust(System.Double)\n  parent: Microsoft.SqlServer.Server.SqlMetaData\n  langs:\n  - csharp\n  - vb\n  name: Adjust(Double)\n  fullName: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Double)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Adjust\n    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n    startLine: 733\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Validates the specified <xref href=\\\"System.Double\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value against the metadata, and adjusts the value if necessary.</p>\\n\"\n  syntax:\n    content: public double Adjust(double value)\n    content.vb: Public Function Adjust(value As Double) As Double\n    parameters:\n    - id: value\n      type: System.Double\n      description: \"\\n<p>The value to validate against the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n    return:\n      type: System.Double\n      description: \"\\n<p>The adjusted value as a <xref href=\\\"System.Double\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>Value</em> does not match the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> type, or <em>value</em> could not be adjusted. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlMetaData.Adjust(Double)\n- uid: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Guid)\n  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Guid)\n  id: Adjust(System.Guid)\n  parent: Microsoft.SqlServer.Server.SqlMetaData\n  langs:\n  - csharp\n  - vb\n  name: Adjust(Guid)\n  fullName: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Guid)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Adjust\n    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n    startLine: 815\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Validates the specified <xref href=\\\"System.Guid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value against the metadata, and adjusts the value if necessary.</p>\\n\"\n  syntax:\n    content: public Guid Adjust(Guid value)\n    content.vb: Public Function Adjust(value As Guid) As Guid\n    parameters:\n    - id: value\n      type: System.Guid\n      description: \"\\n<p>The value to validate against the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n    return:\n      type: System.Guid\n      description: \"\\n<p>The adjusted value as a <xref href=\\\"System.Guid\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>Value</em> does not match the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> type, or <em>value</em> could not be adjusted. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlMetaData.Adjust(Guid)\n- uid: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Int16)\n  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Int16)\n  id: Adjust(System.Int16)\n  parent: Microsoft.SqlServer.Server.SqlMetaData\n  langs:\n  - csharp\n  - vb\n  name: Adjust(Int16)\n  fullName: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Int16)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Adjust\n    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n    startLine: 705\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Validates the specified <xref href=\\\"System.Int16\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value against the metadata, and adjusts the value if necessary.</p>\\n\"\n  syntax:\n    content: public short Adjust(short value)\n    content.vb: Public Function Adjust(value As Short) As Short\n    parameters:\n    - id: value\n      type: System.Int16\n      description: \"\\n<p>The value to validate against the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n    return:\n      type: System.Int16\n      description: \"\\n<p>The adjusted value as a <xref href=\\\"System.Int16\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>Value</em> does not match the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> type, or <em>value</em> could not be adjusted. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlMetaData.Adjust(Int16)\n- uid: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Int32)\n  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Int32)\n  id: Adjust(System.Int32)\n  parent: Microsoft.SqlServer.Server.SqlMetaData\n  langs:\n  - csharp\n  - vb\n  name: Adjust(Int32)\n  fullName: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Adjust\n    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n    startLine: 712\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Validates the specified <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value against the metadata, and adjusts the value if necessary.</p>\\n\"\n  syntax:\n    content: public int Adjust(int value)\n    content.vb: Public Function Adjust(value As Integer) As Integer\n    parameters:\n    - id: value\n      type: System.Int32\n      description: \"\\n<p>The value to validate against the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>The adjusted value as a <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>Value</em> does not match the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> type, or <em>value</em> could not be adjusted. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlMetaData.Adjust(Int32)\n- uid: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Int64)\n  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Int64)\n  id: Adjust(System.Int64)\n  parent: Microsoft.SqlServer.Server.SqlMetaData\n  langs:\n  - csharp\n  - vb\n  name: Adjust(Int64)\n  fullName: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Int64)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Adjust\n    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n    startLine: 719\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Validates the specified <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value against the metadata, and adjusts the value if necessary.</p>\\n\"\n  syntax:\n    content: public long Adjust(long value)\n    content.vb: Public Function Adjust(value As Long) As Long\n    parameters:\n    - id: value\n      type: System.Int64\n      description: \"\\n<p>The value to validate against the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n    return:\n      type: System.Int64\n      description: \"\\n<p>The adjusted value as a <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>Value</em> does not match the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> type, or <em>value</em> could not be adjusted. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlMetaData.Adjust(Int64)\n- uid: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Object)\n  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Object)\n  id: Adjust(System.Object)\n  parent: Microsoft.SqlServer.Server.SqlMetaData\n  langs:\n  - csharp\n  - vb\n  name: Adjust(Object)\n  fullName: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Adjust\n    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n    startLine: 1093\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Validates the specified <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value against the metadata, and adjusts the value if necessary.</p>\\n\"\n  syntax:\n    content: public object Adjust(object value)\n    content.vb: Public Function Adjust(value As Object) As Object\n    parameters:\n    - id: value\n      type: System.Object\n      description: \"\\n<p>The value to validate against the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n    return:\n      type: System.Object\n      description: \"\\n<p>The adjusted value as a <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>Value</em> does not match the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> type, or <em>value</em> could not be adjusted. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlMetaData.Adjust(Object)\n- uid: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Single)\n  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Single)\n  id: Adjust(System.Single)\n  parent: Microsoft.SqlServer.Server.SqlMetaData\n  langs:\n  - csharp\n  - vb\n  name: Adjust(Single)\n  fullName: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Single)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Adjust\n    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n    startLine: 726\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Validates the specified <xref href=\\\"System.Single\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value against the metadata, and adjusts the value if necessary.</p>\\n\"\n  syntax:\n    content: public float Adjust(float value)\n    content.vb: Public Function Adjust(value As Single) As Single\n    parameters:\n    - id: value\n      type: System.Single\n      description: \"\\n<p>The value to validate against the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n    return:\n      type: System.Single\n      description: \"\\n<p>The adjusted value as a <xref href=\\\"System.Single\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>Value</em> does not match the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> type, or <em>value</em> could not be adjusted. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlMetaData.Adjust(Single)\n- uid: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.String)\n  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.String)\n  id: Adjust(System.String)\n  parent: Microsoft.SqlServer.Server.SqlMetaData\n  langs:\n  - csharp\n  - vb\n  name: Adjust(String)\n  fullName: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Adjust\n    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n    startLine: 740\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Validates the specified <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value against the metadata, and adjusts the value if necessary.</p>\\n\"\n  syntax:\n    content: public string Adjust(string value)\n    content.vb: Public Function Adjust(value As String) As String\n    parameters:\n    - id: value\n      type: System.String\n      description: \"\\n<p>The value to validate against the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n    return:\n      type: System.String\n      description: \"\\n<p>The adjusted value as a <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>Value</em> does not match the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> type, or <em>value</em> could not be adjusted. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlMetaData.Adjust(String)\n- uid: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.TimeSpan)\n  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.TimeSpan)\n  id: Adjust(System.TimeSpan)\n  parent: Microsoft.SqlServer.Server.SqlMetaData\n  langs:\n  - csharp\n  - vb\n  name: Adjust(TimeSpan)\n  fullName: Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.TimeSpan)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Adjust\n    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n    startLine: 1078\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Validates the specified <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value against the metadata, and adjusts the value if necessary.</p>\\n\"\n  syntax:\n    content: public TimeSpan Adjust(TimeSpan value)\n    content.vb: Public Function Adjust(value As TimeSpan) As TimeSpan\n    parameters:\n    - id: value\n      type: System.TimeSpan\n      description: \"\\n<p>The value to validate against the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n    return:\n      type: System.TimeSpan\n      description: \"\\n<p>The adjusted value as an array of <xref href=\\\"System.TimeSpan\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>Value</em> does not match the <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> type, or <em>value</em> could not be adjusted. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlMetaData.Adjust(TimeSpan)\n- uid: Microsoft.SqlServer.Server.SqlMetaData.InferFromValue(System.Object,System.String)\n  commentId: M:Microsoft.SqlServer.Server.SqlMetaData.InferFromValue(System.Object,System.String)\n  id: InferFromValue(System.Object,System.String)\n  parent: Microsoft.SqlServer.Server.SqlMetaData\n  langs:\n  - csharp\n  - vb\n  name: InferFromValue(Object, String)\n  fullName: Microsoft.SqlServer.Server.SqlMetaData.InferFromValue(System.Object, System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: InferFromValue\n    path: src/System.Data.SqlClient/src/System/Data/Sql/SqlMetaData.cs\n    startLine: 1179\n  assemblies:\n  - System.Data.SqlClient\n  namespace: Microsoft.SqlServer.Server\n  summary: \"\\n<p>Infers the metadata from the specified object and returns it as a <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n  syntax:\n    content: public static SqlMetaData InferFromValue(object value, string name)\n    content.vb: Public Shared Function InferFromValue(value As Object, name As String) As SqlMetaData\n    parameters:\n    - id: value\n      type: System.Object\n      description: \"\\n<p>The object used from which the metadata is inferred.</p>\\n\"\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name assigned to the returned <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n    return:\n      type: Microsoft.SqlServer.Server.SqlMetaData\n      description: \"\\n<p>The inferred metadata as a <xref href=\\\"Microsoft.SqlServer.Server.SqlMetaData\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The v<em>alue</em> is <strong>null</strong>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: SqlMetaData.InferFromValue(Object, String)\nreferences:\n- uid: Microsoft.SqlServer.Server\n  isExternal: false\n  name: Microsoft.SqlServer.Server\n  fullName: Microsoft.SqlServer.Server\n  nameWithType: Microsoft.SqlServer.Server\n  commentId: N:Microsoft.SqlServer.Server\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.Data.SqlDbType\n  parent: System.Data\n  isExternal: false\n  name: SqlDbType\n  fullName: System.Data.SqlDbType\n  nameWithType: SqlDbType\n  commentId: T:System.Data.SqlDbType\n- uid: System.Data\n  isExternal: false\n  name: System.Data\n  fullName: System.Data\n  nameWithType: System.Data\n  commentId: N:System.Data\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.Data.SqlClient.SortOrder\n  parent: System.Data.SqlClient\n  isExternal: false\n  name: SortOrder\n  fullName: System.Data.SqlClient.SortOrder\n  nameWithType: SortOrder\n  commentId: T:System.Data.SqlClient.SortOrder\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.Data.SqlClient\n  isExternal: false\n  name: System.Data.SqlClient\n  fullName: System.Data.SqlClient\n  nameWithType: System.Data.SqlClient\n  commentId: N:System.Data.SqlClient\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  fullName: System.Byte\n  nameWithType: Byte\n  commentId: T:System.Byte\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  fullName: System.Int64\n  nameWithType: Int64\n  commentId: T:System.Int64\n- uid: System.Data.SqlTypes.SqlCompareOptions\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlCompareOptions\n  fullName: System.Data.SqlTypes.SqlCompareOptions\n  nameWithType: SqlCompareOptions\n  commentId: T:System.Data.SqlTypes.SqlCompareOptions\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  fullName: System.Type\n  nameWithType: Type\n  commentId: T:System.Type\n- uid: System.Data.SqlTypes\n  isExternal: false\n  name: System.Data.SqlTypes\n  fullName: System.Data.SqlTypes\n  nameWithType: System.Data.SqlTypes\n  commentId: N:System.Data.SqlTypes\n- uid: System.Byte[]\n  name: Byte[]\n  fullName: System.Byte[]\n  fullname.vb: System.Byte()\n  name.vb: Byte()\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: Byte[]\n  nameWithType.vb: Byte()\n- uid: System.Char\n  parent: System\n  isExternal: false\n  name: Char\n  fullName: System.Char\n  nameWithType: Char\n  commentId: T:System.Char\n- uid: System.Char[]\n  name: Char[]\n  fullName: System.Char[]\n  fullname.vb: System.Char()\n  name.vb: Char()\n  spec.csharp:\n  - uid: System.Char\n    name: Char\n    fullName: System.Char\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Char\n    name: Char\n    fullName: System.Char\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: Char[]\n  nameWithType.vb: Char()\n- uid: System.Data.SqlTypes.SqlBinary\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlBinary\n  fullName: System.Data.SqlTypes.SqlBinary\n  nameWithType: SqlBinary\n  commentId: T:System.Data.SqlTypes.SqlBinary\n- uid: System.Data.SqlTypes.SqlBoolean\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlBoolean\n  fullName: System.Data.SqlTypes.SqlBoolean\n  nameWithType: SqlBoolean\n  commentId: T:System.Data.SqlTypes.SqlBoolean\n- uid: System.Data.SqlTypes.SqlByte\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlByte\n  fullName: System.Data.SqlTypes.SqlByte\n  nameWithType: SqlByte\n  commentId: T:System.Data.SqlTypes.SqlByte\n- uid: System.Data.SqlTypes.SqlBytes\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlBytes\n  fullName: System.Data.SqlTypes.SqlBytes\n  nameWithType: SqlBytes\n  commentId: T:System.Data.SqlTypes.SqlBytes\n- uid: System.Data.SqlTypes.SqlChars\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlChars\n  fullName: System.Data.SqlTypes.SqlChars\n  nameWithType: SqlChars\n  commentId: T:System.Data.SqlTypes.SqlChars\n- uid: System.Data.SqlTypes.SqlDateTime\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlDateTime\n  fullName: System.Data.SqlTypes.SqlDateTime\n  nameWithType: SqlDateTime\n  commentId: T:System.Data.SqlTypes.SqlDateTime\n- uid: System.Data.SqlTypes.SqlDecimal\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlDecimal\n  fullName: System.Data.SqlTypes.SqlDecimal\n  nameWithType: SqlDecimal\n  commentId: T:System.Data.SqlTypes.SqlDecimal\n- uid: System.Data.SqlTypes.SqlDouble\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlDouble\n  fullName: System.Data.SqlTypes.SqlDouble\n  nameWithType: SqlDouble\n  commentId: T:System.Data.SqlTypes.SqlDouble\n- uid: System.Data.SqlTypes.SqlGuid\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlGuid\n  fullName: System.Data.SqlTypes.SqlGuid\n  nameWithType: SqlGuid\n  commentId: T:System.Data.SqlTypes.SqlGuid\n- uid: System.Data.SqlTypes.SqlInt16\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlInt16\n  fullName: System.Data.SqlTypes.SqlInt16\n  nameWithType: SqlInt16\n  commentId: T:System.Data.SqlTypes.SqlInt16\n- uid: System.Data.SqlTypes.SqlInt32\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlInt32\n  fullName: System.Data.SqlTypes.SqlInt32\n  nameWithType: SqlInt32\n  commentId: T:System.Data.SqlTypes.SqlInt32\n- uid: System.Data.SqlTypes.SqlInt64\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlInt64\n  fullName: System.Data.SqlTypes.SqlInt64\n  nameWithType: SqlInt64\n  commentId: T:System.Data.SqlTypes.SqlInt64\n- uid: System.Data.SqlTypes.SqlMoney\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlMoney\n  fullName: System.Data.SqlTypes.SqlMoney\n  nameWithType: SqlMoney\n  commentId: T:System.Data.SqlTypes.SqlMoney\n- uid: System.Data.SqlTypes.SqlSingle\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlSingle\n  fullName: System.Data.SqlTypes.SqlSingle\n  nameWithType: SqlSingle\n  commentId: T:System.Data.SqlTypes.SqlSingle\n- uid: System.Data.SqlTypes.SqlString\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlString\n  fullName: System.Data.SqlTypes.SqlString\n  nameWithType: SqlString\n  commentId: T:System.Data.SqlTypes.SqlString\n- uid: System.Data.SqlTypes.SqlXml\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlXml\n  fullName: System.Data.SqlTypes.SqlXml\n  nameWithType: SqlXml\n  commentId: T:System.Data.SqlTypes.SqlXml\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  fullName: System.DateTime\n  nameWithType: DateTime\n  commentId: T:System.DateTime\n- uid: System.DateTimeOffset\n  parent: System\n  isExternal: false\n  name: DateTimeOffset\n  fullName: System.DateTimeOffset\n  nameWithType: DateTimeOffset\n  commentId: T:System.DateTimeOffset\n- uid: System.Decimal\n  parent: System\n  isExternal: false\n  name: Decimal\n  fullName: System.Decimal\n  nameWithType: Decimal\n  commentId: T:System.Decimal\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  fullName: System.Double\n  nameWithType: Double\n  commentId: T:System.Double\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  fullName: System.Guid\n  nameWithType: Guid\n  commentId: T:System.Guid\n- uid: System.Int16\n  parent: System\n  isExternal: false\n  name: Int16\n  fullName: System.Int16\n  nameWithType: Int16\n  commentId: T:System.Int16\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  fullName: System.Single\n  nameWithType: Single\n  commentId: T:System.Single\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  fullName: System.TimeSpan\n  nameWithType: TimeSpan\n  commentId: T:System.TimeSpan\n- uid: Microsoft.SqlServer.Server.SqlMetaData\n  parent: Microsoft.SqlServer.Server\n  isExternal: false\n  name: SqlMetaData\n  fullName: Microsoft.SqlServer.Server.SqlMetaData\n  nameWithType: SqlMetaData\n  commentId: T:Microsoft.SqlServer.Server.SqlMetaData\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  fullName: System.InvalidOperationException\n  nameWithType: InvalidOperationException\n  commentId: T:System.InvalidOperationException\n"}