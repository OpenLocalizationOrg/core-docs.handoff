{"nodes":[{"pos":[334,350],"content":"TransportContext","needQuote":true,"nodes":[{"content":"TransportContext","pos":[0,16]}]},{"pos":[2105,2123],"content":"TransportContext()","needQuote":true,"nodes":[{"content":"TransportContext()","pos":[0,18]}]},{"pos":[3295,3332],"content":"GetChannelBinding(ChannelBindingKind)","needQuote":true,"nodes":[{"content":"GetChannelBinding(ChannelBindingKind)","pos":[0,37]}]},{"content":"\\n&lt;p&gt;The type of channel binding to retrieve.&lt;/p&gt;\\n","pos":[4213,4264],"source":"\\n<p>The type of channel binding to retrieve.</p>\\n"},{"pos":[5814,5824],"content":"System.Net","needQuote":true,"nodes":[{"content":"System.Net","pos":[0,10]}]},{"pos":[5967,5973],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6133,6143],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[6238,6246],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[6315,6316],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6343,6344],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6414,6422],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[6491,6492],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6519,6520],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6703,6717],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[6836,6842],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[6909,6910],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6960,6966],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7026,7027],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7110,7116],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[7183,7184],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7234,7240],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7300,7301],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7515,7537],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[7685,7691],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[7758,7759],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7809,7815],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[7876,7877]},{"pos":[7932,7938],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7998,7999],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8096,8102],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[8169,8170],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8220,8226],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[8287,8288]},{"pos":[8343,8349],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8409,8410],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8655,8686],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[8852,8867],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[8943,8944],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8994,9000],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[9061,9062]},{"pos":[9117,9123],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9183,9184],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9290,9305],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[9381,9382],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9432,9438],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[9499,9500]},{"pos":[9555,9561],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9621,9622],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9852,9865],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[9966,9977],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[10049,10050],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10077,10078],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10151,10162],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[10234,10235],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10262,10263],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10438,10447],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[10540,10547],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[10615,10616],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10643,10644],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10713,10720],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[10788,10789],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10816,10817],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10992,11009],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[11118,11133],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[11209,11210],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11237,11238],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11315,11330],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[11406,11407],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11434,11435],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11580,11586],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[11815,11833],"content":"ChannelBindingKind","needQuote":true,"nodes":[{"content":"ChannelBindingKind","pos":[0,18]}]},{"pos":[12194,12208],"content":"ChannelBinding","needQuote":true,"nodes":[{"content":"ChannelBinding","pos":[0,14]}]},{"pos":[12482,12531],"content":"System.Security.Authentication.ExtendedProtection","needQuote":true,"nodes":[{"content":"System.Security.Authentication.ExtendedProtection","pos":[0,49]}]},{"pos":[12806,12827],"content":"NotSupportedException","needQuote":true,"nodes":[{"content":"NotSupportedException","pos":[0,21]}]}],"content":"items:\n- uid: System.Net.TransportContext\n  commentId: T:System.Net.TransportContext\n  id: TransportContext\n  parent: System.Net\n  children:\n  - System.Net.TransportContext.#ctor\n  - System.Net.TransportContext.GetChannelBinding(System.Security.Authentication.ExtendedProtection.ChannelBindingKind)\n  langs:\n  - csharp\n  - vb\n  name: TransportContext\n  fullName: System.Net.TransportContext\n  type: Class\n  source:\n    remote:\n      path: src/System.Net.Primitives/ref/System.Net.Primitives.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: TransportContext\n    path: src/System.Net.Primitives/ref/System.Net.Primitives.cs\n    startLine: 251\n  assemblies:\n  - System.Net.Primitives\n  namespace: System.Net\n  summary: \"\\n<p>The <xref href=\\\"System.Net.TransportContext\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class provides additional context about the underlying transport layer.</p>\\n\"\n  syntax:\n    content: public abstract class TransportContext\n    content.vb: Public MustInherit Class TransportContext\n  seealso:\n  - type: System.Net.Security.SslStream.TransportContext\n    commentId: P:System.Net.Security.SslStream.TransportContext\n  - type: System.Security.Authentication.ExtendedProtection\n    commentId: N:System.Security.Authentication.ExtendedProtection\n  - type: System.Security.Authentication.ExtendedProtection.ChannelBinding\n    commentId: T:System.Security.Authentication.ExtendedProtection.ChannelBinding\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - abstract\n  - class\n  modifiers.vb:\n  - Public\n  - MustInherit\n  - Class\n  nameWithType: TransportContext\n- uid: System.Net.TransportContext.#ctor\n  commentId: M:System.Net.TransportContext.#ctor\n  id: '#ctor'\n  parent: System.Net.TransportContext\n  langs:\n  - csharp\n  - vb\n  name: TransportContext()\n  fullName: System.Net.TransportContext.TransportContext()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Net.Primitives/ref/System.Net.Primitives.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Net.Primitives/ref/System.Net.Primitives.cs\n    startLine: 253\n  assemblies:\n  - System.Net.Primitives\n  namespace: System.Net\n  summary: \"\\n<p>Creates a new instance of the <xref href=\\\"System.Net.TransportContext\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class</p>\\n\"\n  syntax:\n    content: protected TransportContext()\n    content.vb: Protected Sub New\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: TransportContext.TransportContext()\n- uid: System.Net.TransportContext.GetChannelBinding(System.Security.Authentication.ExtendedProtection.ChannelBindingKind)\n  commentId: M:System.Net.TransportContext.GetChannelBinding(System.Security.Authentication.ExtendedProtection.ChannelBindingKind)\n  id: GetChannelBinding(System.Security.Authentication.ExtendedProtection.ChannelBindingKind)\n  parent: System.Net.TransportContext\n  langs:\n  - csharp\n  - vb\n  name: GetChannelBinding(ChannelBindingKind)\n  fullName: System.Net.TransportContext.GetChannelBinding(System.Security.Authentication.ExtendedProtection.ChannelBindingKind)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Primitives/ref/System.Net.Primitives.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetChannelBinding\n    path: src/System.Net.Primitives/ref/System.Net.Primitives.cs\n    startLine: 254\n  assemblies:\n  - System.Net.Primitives\n  namespace: System.Net\n  summary: \"\\n<p>Retrieves the requested channel binding. </p>\\n\"\n  syntax:\n    content: public abstract ChannelBinding GetChannelBinding(ChannelBindingKind kind)\n    content.vb: Public MustOverride Function GetChannelBinding(kind As ChannelBindingKind) As ChannelBinding\n    parameters:\n    - id: kind\n      type: System.Security.Authentication.ExtendedProtection.ChannelBindingKind\n      description: \"\\n<p>The type of channel binding to retrieve.</p>\\n\"\n    return:\n      type: System.Security.Authentication.ExtendedProtection.ChannelBinding\n      description: \"\\n<p>The requested <xref href=\\\"System.Security.Authentication.ExtendedProtection.ChannelBinding\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, or <strong>null</strong> if the channel binding is not supported by the current transport or by the operating system.</p>\\n\"\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>\\n<em>kind</em> is must be <xref href=\\\"System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for use with the <xref href=\\\"System.Net.TransportContext\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> retrieved from the <xref href=\\\"System.Net.HttpListenerRequest.TransportContext\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property.</p>\\n\"\n  seealso:\n  - type: System.Net.Security.SslStream.TransportContext\n    commentId: P:System.Net.Security.SslStream.TransportContext\n  - type: System.Security.Authentication.ExtendedProtection\n    commentId: N:System.Security.Authentication.ExtendedProtection\n  - type: System.Security.Authentication.ExtendedProtection.ChannelBinding\n    commentId: T:System.Security.Authentication.ExtendedProtection.ChannelBinding\n  modifiers.csharp:\n  - public\n  - abstract\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: TransportContext.GetChannelBinding(ChannelBindingKind)\nreferences:\n- uid: System.Net\n  isExternal: false\n  name: System.Net\n  fullName: System.Net\n  commentId: N:System.Net\n  nameWithType: System.Net\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Security.Authentication.ExtendedProtection.ChannelBindingKind\n  parent: System.Security.Authentication.ExtendedProtection\n  isExternal: false\n  name: ChannelBindingKind\n  fullName: System.Security.Authentication.ExtendedProtection.ChannelBindingKind\n  commentId: T:System.Security.Authentication.ExtendedProtection.ChannelBindingKind\n  nameWithType: ChannelBindingKind\n- uid: System.Security.Authentication.ExtendedProtection.ChannelBinding\n  parent: System.Security.Authentication.ExtendedProtection\n  isExternal: false\n  name: ChannelBinding\n  fullName: System.Security.Authentication.ExtendedProtection.ChannelBinding\n  commentId: T:System.Security.Authentication.ExtendedProtection.ChannelBinding\n  nameWithType: ChannelBinding\n- uid: System.Security.Authentication.ExtendedProtection\n  isExternal: false\n  name: System.Security.Authentication.ExtendedProtection\n  fullName: System.Security.Authentication.ExtendedProtection\n  commentId: N:System.Security.Authentication.ExtendedProtection\n  nameWithType: System.Security.Authentication.ExtendedProtection\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  fullName: System.NotSupportedException\n  nameWithType: NotSupportedException\n  commentId: T:System.NotSupportedException\n"}