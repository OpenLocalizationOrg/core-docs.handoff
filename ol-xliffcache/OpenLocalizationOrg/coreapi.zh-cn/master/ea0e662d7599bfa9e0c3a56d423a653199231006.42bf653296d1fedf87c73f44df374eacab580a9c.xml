{"nodes":[{"pos":[1897,1912],"content":"PersianCalendar","needQuote":true,"nodes":[{"content":"PersianCalendar","pos":[0,15]}]},{"pos":[5430,5447],"content":"PersianCalendar()","needQuote":true,"nodes":[{"content":"PersianCalendar()","pos":[0,17]}]},{"pos":[6428,6432],"content":"Eras","needQuote":true,"nodes":[{"content":"Eras","pos":[0,4]}]},{"pos":[8226,8246],"content":"MaxSupportedDateTime","needQuote":true,"nodes":[{"content":"MaxSupportedDateTime","pos":[0,20]}]},{"pos":[9935,9955],"content":"MinSupportedDateTime","needQuote":true,"nodes":[{"content":"MinSupportedDateTime","pos":[0,20]}]},{"pos":[11633,11648],"content":"TwoDigitYearMax","needQuote":true,"nodes":[{"content":"TwoDigitYearMax","pos":[0,15]}]},{"content":"\\n&lt;p&gt;The last year of a 100-year range that can be represented by a 2-digit year.&lt;/p&gt;\\n","pos":[12418,12505],"source":"\\n<p>The last year of a 100-year range that can be represented by a 2-digit year.</p>\\n"},{"content":"\\n&lt;p&gt;This calendar is read-only.&lt;/p&gt;\\n","pos":[12692,12730],"source":"\\n<p>This calendar is read-only.</p>\\n"},{"content":"\\n&lt;p&gt;The value in a set operation is less than 100 or greater than 9378.&lt;/p&gt;\\n","pos":[12847,12925],"source":"\\n<p>The value in a set operation is less than 100 or greater than 9378.</p>\\n"},{"pos":[13552,13578],"content":"AddMonths(DateTime, Int32)","needQuote":true,"nodes":[{"content":"AddMonths(DateTime, Int32)","pos":[0,26]}]},{"content":"\\n&lt;p&gt;The positive or negative number of months to add.","pos":[14735,14789],"source":"\\n<p>The positive or negative number of months to add."},{"content":"&lt;/p&gt;\\n","pos":[14790,14796],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;months&lt;/em&gt; is less than -120,000 or greater than 120,000.","pos":[15559,15628],"source":"\\n<p>\\n<em>months</em> is less than -120,000 or greater than 120,000."},{"content":"&lt;/p&gt;\\n","pos":[15629,15635],"source":" </p>\\n"},{"pos":[16331,16356],"content":"AddYears(DateTime, Int32)","needQuote":true,"nodes":[{"content":"AddYears(DateTime, Int32)","pos":[0,25]}]},{"content":"\\n&lt;p&gt;The positive or negative number of years to add.","pos":[17504,17557],"source":"\\n<p>The positive or negative number of years to add."},{"content":"&lt;/p&gt;\\n","pos":[17558,17564],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;years&lt;/em&gt; is less than -10,000 or greater than 10,000.","pos":[18323,18389],"source":"\\n<p>\\n<em>years</em> is less than -10,000 or greater than 10,000."},{"content":"&lt;/p&gt;\\n","pos":[18390,18396],"source":" </p>\\n"},{"pos":[19069,19092],"content":"GetDayOfMonth(DateTime)","needQuote":true,"nodes":[{"content":"GetDayOfMonth(DateTime)","pos":[0,23]}]},{"pos":[21758,21780],"content":"GetDayOfWeek(DateTime)","needQuote":true,"nodes":[{"content":"GetDayOfWeek(DateTime)","pos":[0,22]}]},{"pos":[24131,24153],"content":"GetDayOfYear(DateTime)","needQuote":true,"nodes":[{"content":"GetDayOfYear(DateTime)","pos":[0,22]}]},{"pos":[27052,27087],"content":"GetDaysInMonth(Int32, Int32, Int32)","needQuote":true,"nodes":[{"content":"GetDaysInMonth(Int32, Int32, Int32)","pos":[0,35]}]},{"content":"\\n&lt;p&gt;An integer from 1 through 9378 that represents the year.","pos":[27951,28012],"source":"\\n<p>An integer from 1 through 9378 that represents the year."},{"content":"&lt;/p&gt;\\n","pos":[28013,28019],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An integer that represents the month, and ranges from 1 through 12 if &lt;em&gt;year&lt;/em&gt; is not 9378, or 1 through 10 if &lt;em&gt;year&lt;/em&gt; is 9378.&lt;/p&gt;\\n","pos":[28082,28231],"source":"\\n<p>An integer that represents the month, and ranges from 1 through 12 if <em>year</em> is not 9378, or 1 through 10 if <em>year</em> is 9378.</p>\\n"},{"content":"\\n&lt;p&gt;An integer from 0 through 1 that represents the era.","pos":[28292,28349],"source":"\\n<p>An integer from 0 through 1 that represents the era."},{"content":"&lt;/p&gt;\\n","pos":[28350,28356],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The number of days in the specified month of the specified year and era.&lt;/p&gt;\\n","pos":[28415,28498],"source":"\\n<p>The number of days in the specified month of the specified year and era.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;year&lt;/em&gt;, &lt;em&gt;month&lt;/em&gt;, or &lt;em&gt;era&lt;/em&gt; is outside the range supported by this calendar.","pos":[28728,28830],"source":"\\n<p>\\n<em>year</em>, <em>month</em>, or <em>era</em> is outside the range supported by this calendar."},{"content":"&lt;/p&gt;\\n","pos":[28831,28837],"source":" </p>\\n"},{"pos":[29680,29707],"content":"GetDaysInYear(Int32, Int32)","needQuote":true,"nodes":[{"content":"GetDaysInYear(Int32, Int32)","pos":[0,27]}]},{"content":"\\n&lt;p&gt;An integer from 1 through 9378 that represents the year.","pos":[30514,30575],"source":"\\n<p>An integer from 1 through 9378 that represents the year."},{"content":"&lt;/p&gt;\\n","pos":[30576,30582],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An integer from 0 through 1 that represents the era.","pos":[30643,30700],"source":"\\n<p>An integer from 0 through 1 that represents the era."},{"content":"&lt;/p&gt;\\n","pos":[30701,30707],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The number of days in the specified year and era.","pos":[30766,30820],"source":"\\n<p>The number of days in the specified year and era."},{"content":"The number of days is 365 in a common year or 366 in a leap year.&lt;/p&gt;\\n","pos":[30821,30892],"source":" The number of days is 365 in a common year or 366 in a leap year.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;year&lt;/em&gt; or &lt;em&gt;era&lt;/em&gt; is outside the range supported by this calendar.","pos":[31108,31193],"source":"\\n<p>\\n<em>year</em> or <em>era</em> is outside the range supported by this calendar."},{"content":"&lt;/p&gt;\\n","pos":[31194,31200],"source":" </p>\\n"},{"pos":[32012,32028],"content":"GetEra(DateTime)","needQuote":true,"nodes":[{"content":"GetEra(DateTime)","pos":[0,16]}]},{"pos":[34377,34403],"content":"GetLeapMonth(Int32, Int32)","needQuote":true,"nodes":[{"content":"GetLeapMonth(Int32, Int32)","pos":[0,26]}]},{"content":"\\n&lt;p&gt;An integer from 1 through 9378 that represents the year to convert.","pos":[35188,35260],"source":"\\n<p>An integer from 1 through 9378 that represents the year to convert."},{"content":"&lt;/p&gt;\\n","pos":[35261,35267],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An integer from 0 through 1 that represents the era.","pos":[35328,35385],"source":"\\n<p>An integer from 0 through 1 that represents the era."},{"content":"&lt;/p&gt;\\n","pos":[35386,35392],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The return value is always 0.&lt;/p&gt;\\n","pos":[35451,35491],"source":"\\n<p>The return value is always 0.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;year&lt;/em&gt; or &lt;em&gt;era&lt;/em&gt; is outside the range supported by this calendar.","pos":[35706,35791],"source":"\\n<p>\\n<em>year</em> or <em>era</em> is outside the range supported by this calendar."},{"content":"&lt;/p&gt;\\n","pos":[35792,35798],"source":" </p>\\n"},{"pos":[36206,36224],"content":"GetMonth(DateTime)","needQuote":true,"nodes":[{"content":"GetMonth(DateTime)","pos":[0,18]}]},{"pos":[38720,38749],"content":"GetMonthsInYear(Int32, Int32)","needQuote":true,"nodes":[{"content":"GetMonthsInYear(Int32, Int32)","pos":[0,29]}]},{"content":"\\n&lt;p&gt;An integer from 1 through 9378 that represents the year.","pos":[39566,39627],"source":"\\n<p>An integer from 1 through 9378 that represents the year."},{"content":"&lt;/p&gt;\\n","pos":[39628,39634],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An integer from 0 through 1 that represents the era.","pos":[39695,39752],"source":"\\n<p>An integer from 0 through 1 that represents the era."},{"content":"&lt;/p&gt;\\n","pos":[39753,39759],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;Returns 10 if the &lt;em&gt;year&lt;/em&gt; parameter is 9378; otherwise, always returns 12.&lt;/p&gt;\\n","pos":[39818,39909],"source":"\\n<p>Returns 10 if the <em>year</em> parameter is 9378; otherwise, always returns 12.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;year&lt;/em&gt; or &lt;em&gt;era&lt;/em&gt; is outside the range supported by this calendar.","pos":[40127,40212],"source":"\\n<p>\\n<em>year</em> or <em>era</em> is outside the range supported by this calendar."},{"content":"&lt;/p&gt;\\n","pos":[40213,40219],"source":" </p>\\n"},{"pos":[40791,40808],"content":"GetYear(DateTime)","needQuote":true,"nodes":[{"content":"GetYear(DateTime)","pos":[0,17]}]},{"pos":[43197,43234],"content":"IsLeapDay(Int32, Int32, Int32, Int32)","needQuote":true,"nodes":[{"content":"IsLeapDay(Int32, Int32, Int32, Int32)","pos":[0,37]}]},{"content":"\\n&lt;p&gt;An integer from 1 through 9378 that represents the year.","pos":[44090,44151],"source":"\\n<p>An integer from 1 through 9378 that represents the year."},{"content":"&lt;/p&gt;\\n","pos":[44152,44158],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An integer that represents the month and ranges from 1 through 12 if &lt;em&gt;year&lt;/em&gt; is not 9378, or 1 through 10 if &lt;em&gt;year&lt;/em&gt; is 9378.&lt;/p&gt;\\n","pos":[44221,44369],"source":"\\n<p>An integer that represents the month and ranges from 1 through 12 if <em>year</em> is not 9378, or 1 through 10 if <em>year</em> is 9378.</p>\\n"},{"content":"\\n&lt;p&gt;An integer from 1 through 31 that represents the day.","pos":[44430,44488],"source":"\\n<p>An integer from 1 through 31 that represents the day."},{"content":"&lt;/p&gt;\\n","pos":[44489,44495],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An integer from 0 through 1 that represents the era.","pos":[44556,44613],"source":"\\n<p>An integer from 0 through 1 that represents the era."},{"content":"&lt;/p&gt;\\n","pos":[44614,44620],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the specified day is a leap day; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[44681,44786],"source":"\\n<p>\\n<strong>true</strong> if the specified day is a leap day; otherwise, <strong>false</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;year&lt;/em&gt;, &lt;em&gt;month&lt;/em&gt;, &lt;em&gt;day&lt;/em&gt;, or &lt;em&gt;era&lt;/em&gt; is outside the range supported by this calendar.","pos":[45024,45140],"source":"\\n<p>\\n<em>year</em>, <em>month</em>, <em>day</em>, or <em>era</em> is outside the range supported by this calendar."},{"content":"&lt;/p&gt;\\n","pos":[45141,45147],"source":" </p>\\n"},{"pos":[46248,46280],"content":"IsLeapMonth(Int32, Int32, Int32)","needQuote":true,"nodes":[{"content":"IsLeapMonth(Int32, Int32, Int32)","pos":[0,32]}]},{"content":"\\n&lt;p&gt;An integer from 1 through 9378 that represents the year.","pos":[47138,47199],"source":"\\n<p>An integer from 1 through 9378 that represents the year."},{"content":"&lt;/p&gt;\\n","pos":[47200,47206],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An integer that represents the month and ranges from 1 through 12 if &lt;em&gt;year&lt;/em&gt; is not 9378, or 1 through 10 if &lt;em&gt;year&lt;/em&gt; is 9378.&lt;/p&gt;\\n","pos":[47269,47417],"source":"\\n<p>An integer that represents the month and ranges from 1 through 12 if <em>year</em> is not 9378, or 1 through 10 if <em>year</em> is 9378.</p>\\n"},{"content":"\\n&lt;p&gt;An integer from 0 through 1 that represents the era.","pos":[47478,47535],"source":"\\n<p>An integer from 0 through 1 that represents the era."},{"content":"&lt;/p&gt;\\n","pos":[47536,47542],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;year&lt;/em&gt;, &lt;em&gt;month&lt;/em&gt;, or &lt;em&gt;era&lt;/em&gt; is outside the range supported by this calendar.","pos":[48038,48140],"source":"\\n<p>\\n<em>year</em>, <em>month</em>, or <em>era</em> is outside the range supported by this calendar."},{"content":"&lt;/p&gt;\\n","pos":[48141,48147],"source":" </p>\\n"},{"pos":[49012,49036],"content":"IsLeapYear(Int32, Int32)","needQuote":true,"nodes":[{"content":"IsLeapYear(Int32, Int32)","pos":[0,24]}]},{"content":"\\n&lt;p&gt;An integer from 1 through 9378 that represents the year.","pos":[49836,49897],"source":"\\n<p>An integer from 1 through 9378 that represents the year."},{"content":"&lt;/p&gt;\\n","pos":[49898,49904],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An integer from 0 through 1 that represents the era.","pos":[49965,50022],"source":"\\n<p>An integer from 0 through 1 that represents the era."},{"content":"&lt;/p&gt;\\n","pos":[50023,50029],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the specified year is a leap year; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[50090,50197],"source":"\\n<p>\\n<strong>true</strong> if the specified year is a leap year; otherwise, <strong>false</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;year&lt;/em&gt; or &lt;em&gt;era&lt;/em&gt; is outside the range supported by this calendar.","pos":[50410,50495],"source":"\\n<p>\\n<em>year</em> or <em>era</em> is outside the range supported by this calendar."},{"content":"&lt;/p&gt;\\n","pos":[50496,50502],"source":" </p>\\n"},{"pos":[51855,51921],"content":"ToDateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32)","needQuote":true,"nodes":[{"content":"ToDateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32)","pos":[0,66]}]},{"content":"\\n&lt;p&gt;An integer from 1 through 9378 that represents the year.","pos":[53058,53119],"source":"\\n<p>An integer from 1 through 9378 that represents the year."},{"content":"&lt;/p&gt;\\n","pos":[53120,53126],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An integer from 1 through 12 that represents the month.","pos":[53189,53249],"source":"\\n<p>An integer from 1 through 12 that represents the month."},{"content":"&lt;/p&gt;\\n","pos":[53250,53256],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An integer from 1 through 31 that represents the day.","pos":[53317,53375],"source":"\\n<p>An integer from 1 through 31 that represents the day."},{"content":"&lt;/p&gt;\\n","pos":[53376,53382],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An integer from 0 through 23 that represents the hour.","pos":[53444,53503],"source":"\\n<p>An integer from 0 through 23 that represents the hour."},{"content":"&lt;/p&gt;\\n","pos":[53504,53510],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An integer from 0 through 59 that represents the minute.","pos":[53574,53635],"source":"\\n<p>An integer from 0 through 59 that represents the minute."},{"content":"&lt;/p&gt;\\n","pos":[53636,53642],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An integer from 0 through 59 that represents the second.","pos":[53706,53767],"source":"\\n<p>An integer from 0 through 59 that represents the second."},{"content":"&lt;/p&gt;\\n","pos":[53768,53774],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An integer from 0 through 999 that represents the millisecond.","pos":[53843,53910],"source":"\\n<p>An integer from 0 through 999 that represents the millisecond."},{"content":"&lt;/p&gt;\\n","pos":[53911,53917],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An integer from 0 through 1 that represents the era.","pos":[53978,54035],"source":"\\n<p>An integer from 0 through 1 that represents the era."},{"content":"&lt;/p&gt;\\n","pos":[54036,54042],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;year&lt;/em&gt;, &lt;em&gt;month&lt;/em&gt;, &lt;em&gt;day&lt;/em&gt;, &lt;em&gt;hour&lt;/em&gt;, &lt;em&gt;minute&lt;/em&gt;, &lt;em&gt;second&lt;/em&gt;, &lt;em&gt;millisecond&lt;/em&gt;, or &lt;em&gt;era&lt;/em&gt; is outside the range supported by this calendar.&lt;/p&gt;\\n","pos":[54553,54746],"source":"\\n<p>\\n<em>year</em>, <em>month</em>, <em>day</em>, <em>hour</em>, <em>minute</em>, <em>second</em>, <em>millisecond</em>, or <em>era</em> is outside the range supported by this calendar.</p>\\n"},{"pos":[56017,56039],"content":"ToFourDigitYear(Int32)","needQuote":true,"nodes":[{"content":"ToFourDigitYear(Int32)","pos":[0,22]}]},{"content":"\\n&lt;p&gt;An integer from 1 through 9378 that represents the year to convert.","pos":[56809,56881],"source":"\\n<p>An integer from 1 through 9378 that represents the year to convert."},{"content":"&lt;/p&gt;\\n","pos":[56882,56888],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An integer that contains the four-digit representation of &lt;em&gt;year&lt;/em&gt;.&lt;/p&gt;\\n","pos":[56947,57030],"source":"\\n<p>An integer that contains the four-digit representation of <em>year</em>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;year&lt;/em&gt; is less than 0 or greater than 9378.","pos":[57235,57292],"source":"\\n<p>\\n<em>year</em> is less than 0 or greater than 9378."},{"content":"&lt;/p&gt;\\n","pos":[57293,57299],"source":" </p>\\n"},{"pos":[57653,57673],"content":"System.Globalization","needQuote":true,"nodes":[{"content":"System.Globalization","pos":[0,20]}]},{"pos":[57846,57852],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[58027,58035],"content":"Calendar","needQuote":true,"nodes":[{"content":"Calendar","pos":[0,8]}]},{"pos":[58217,58227],"content":"ICloneable","needQuote":true,"nodes":[{"content":"ICloneable","pos":[0,10]}]},{"pos":[58433,58443],"content":"CurrentEra","needQuote":true,"nodes":[{"content":"CurrentEra","pos":[0,10]}]},{"pos":[58699,58706],"content":"Clone()","needQuote":true,"nodes":[{"content":"Clone()","pos":[0,7]}]},{"pos":[58827,58832],"content":"Clone","needQuote":true,"nodes":[{"content":"Clone","pos":[0,5]}]},{"pos":[58914,58915],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[58942,58943],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[59026,59031],"content":"Clone","needQuote":true,"nodes":[{"content":"Clone","pos":[0,5]}]},{"pos":[59113,59114],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[59141,59142],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[59387,59405],"content":"ReadOnly(Calendar)","needQuote":true,"nodes":[{"content":"ReadOnly(Calendar)","pos":[0,18]}]},{"pos":[59592,59600],"content":"ReadOnly","needQuote":true,"nodes":[{"content":"ReadOnly","pos":[0,8]}]},{"pos":[59685,59686],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[59752,59760],"content":"Calendar","needQuote":true,"nodes":[{"content":"Calendar","pos":[0,8]}]},{"pos":[59836,59837],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[59954,59962],"content":"ReadOnly","needQuote":true,"nodes":[{"content":"ReadOnly","pos":[0,8]}]},{"pos":[60047,60048],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[60114,60122],"content":"Calendar","needQuote":true,"nodes":[{"content":"Calendar","pos":[0,8]}]},{"pos":[60198,60199],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[60496,60529],"content":"AddMilliseconds(DateTime, Double)","needQuote":true,"nodes":[{"content":"AddMilliseconds(DateTime, Double)","pos":[0,33]}]},{"pos":[60731,60746],"content":"AddMilliseconds","needQuote":true,"nodes":[{"content":"AddMilliseconds","pos":[0,15]}]},{"pos":[60838,60839],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[60891,60899],"content":"DateTime","needQuote":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"content":",","pos":[60962,60963]},{"pos":[61018,61024],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[61084,61085],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[61209,61224],"content":"AddMilliseconds","needQuote":true,"nodes":[{"content":"AddMilliseconds","pos":[0,15]}]},{"pos":[61316,61317],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[61369,61377],"content":"DateTime","needQuote":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"content":",","pos":[61440,61441]},{"pos":[61496,61502],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[61562,61563],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[61873,61897],"content":"AddDays(DateTime, Int32)","needQuote":true,"nodes":[{"content":"AddDays(DateTime, Int32)","pos":[0,24]}]},{"pos":[62081,62088],"content":"AddDays","needQuote":true,"nodes":[{"content":"AddDays","pos":[0,7]}]},{"pos":[62172,62173],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[62225,62233],"content":"DateTime","needQuote":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"content":",","pos":[62296,62297]},{"pos":[62351,62356],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[62415,62416],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[62531,62538],"content":"AddDays","needQuote":true,"nodes":[{"content":"AddDays","pos":[0,7]}]},{"pos":[62622,62623],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[62675,62683],"content":"DateTime","needQuote":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"content":",","pos":[62746,62747]},{"pos":[62801,62806],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[62865,62866],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[63159,63184],"content":"AddHours(DateTime, Int32)","needQuote":true,"nodes":[{"content":"AddHours(DateTime, Int32)","pos":[0,25]}]},{"pos":[63370,63378],"content":"AddHours","needQuote":true,"nodes":[{"content":"AddHours","pos":[0,8]}]},{"pos":[63463,63464],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[63516,63524],"content":"DateTime","needQuote":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"content":",","pos":[63587,63588]},{"pos":[63642,63647],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[63706,63707],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[63823,63831],"content":"AddHours","needQuote":true,"nodes":[{"content":"AddHours","pos":[0,8]}]},{"pos":[63916,63917],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[63969,63977],"content":"DateTime","needQuote":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"content":",","pos":[64040,64041]},{"pos":[64095,64100],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[64159,64160],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[64457,64484],"content":"AddMinutes(DateTime, Int32)","needQuote":true,"nodes":[{"content":"AddMinutes(DateTime, Int32)","pos":[0,27]}]},{"pos":[64674,64684],"content":"AddMinutes","needQuote":true,"nodes":[{"content":"AddMinutes","pos":[0,10]}]},{"pos":[64771,64772],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[64824,64832],"content":"DateTime","needQuote":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"content":",","pos":[64895,64896]},{"pos":[64950,64955],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[65014,65015],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[65133,65143],"content":"AddMinutes","needQuote":true,"nodes":[{"content":"AddMinutes","pos":[0,10]}]},{"pos":[65230,65231],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[65283,65291],"content":"DateTime","needQuote":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"content":",","pos":[65354,65355]},{"pos":[65409,65414],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[65473,65474],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[65775,65802],"content":"AddSeconds(DateTime, Int32)","needQuote":true,"nodes":[{"content":"AddSeconds(DateTime, Int32)","pos":[0,27]}]},{"pos":[65992,66002],"content":"AddSeconds","needQuote":true,"nodes":[{"content":"AddSeconds","pos":[0,10]}]},{"pos":[66089,66090],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[66142,66150],"content":"DateTime","needQuote":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"content":",","pos":[66213,66214]},{"pos":[66268,66273],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[66332,66333],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[66451,66461],"content":"AddSeconds","needQuote":true,"nodes":[{"content":"AddSeconds","pos":[0,10]}]},{"pos":[66548,66549],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[66601,66609],"content":"DateTime","needQuote":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"content":",","pos":[66672,66673]},{"pos":[66727,66732],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[66791,66792],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[67091,67116],"content":"AddWeeks(DateTime, Int32)","needQuote":true,"nodes":[{"content":"AddWeeks(DateTime, Int32)","pos":[0,25]}]},{"pos":[67302,67310],"content":"AddWeeks","needQuote":true,"nodes":[{"content":"AddWeeks","pos":[0,8]}]},{"pos":[67395,67396],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[67448,67456],"content":"DateTime","needQuote":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"content":",","pos":[67519,67520]},{"pos":[67574,67579],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[67638,67639],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[67755,67763],"content":"AddWeeks","needQuote":true,"nodes":[{"content":"AddWeeks","pos":[0,8]}]},{"pos":[67848,67849],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[67901,67909],"content":"DateTime","needQuote":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"content":",","pos":[67972,67973]},{"pos":[68027,68032],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[68091,68092],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[68390,68418],"content":"GetDaysInMonth(Int32, Int32)","needQuote":true,"nodes":[{"content":"GetDaysInMonth(Int32, Int32)","pos":[0,28]}]},{"pos":[68610,68624],"content":"GetDaysInMonth","needQuote":true,"nodes":[{"content":"GetDaysInMonth","pos":[0,14]}]},{"pos":[68715,68716],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[68765,68770],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[68830,68831]},{"pos":[68885,68890],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[68949,68950],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[69069,69083],"content":"GetDaysInMonth","needQuote":true,"nodes":[{"content":"GetDaysInMonth","pos":[0,14]}]},{"pos":[69174,69175],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[69224,69229],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[69289,69290]},{"pos":[69344,69349],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[69408,69409],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[69699,69719],"content":"GetDaysInYear(Int32)","needQuote":true,"nodes":[{"content":"GetDaysInYear(Int32)","pos":[0,20]}]},{"pos":[69882,69895],"content":"GetDaysInYear","needQuote":true,"nodes":[{"content":"GetDaysInYear","pos":[0,13]}]},{"pos":[69985,69986],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[70035,70040],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[70099,70100],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[70205,70218],"content":"GetDaysInYear","needQuote":true,"nodes":[{"content":"GetDaysInYear","pos":[0,13]}]},{"pos":[70308,70309],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[70358,70363],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[70422,70423],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[70688,70705],"content":"GetHour(DateTime)","needQuote":true,"nodes":[{"content":"GetHour(DateTime)","pos":[0,17]}]},{"pos":[70862,70869],"content":"GetHour","needQuote":true,"nodes":[{"content":"GetHour","pos":[0,7]}]},{"pos":[70953,70954],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[71006,71014],"content":"DateTime","needQuote":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[71076,71077],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[71179,71186],"content":"GetHour","needQuote":true,"nodes":[{"content":"GetHour","pos":[0,7]}]},{"pos":[71270,71271],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[71323,71331],"content":"DateTime","needQuote":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[71393,71394],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[71661,71686],"content":"GetMilliseconds(DateTime)","needQuote":true,"nodes":[{"content":"GetMilliseconds(DateTime)","pos":[0,25]}]},{"pos":[71859,71874],"content":"GetMilliseconds","needQuote":true,"nodes":[{"content":"GetMilliseconds","pos":[0,15]}]},{"pos":[71966,71967],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[72019,72027],"content":"DateTime","needQuote":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[72089,72090],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[72200,72215],"content":"GetMilliseconds","needQuote":true,"nodes":[{"content":"GetMilliseconds","pos":[0,15]}]},{"pos":[72307,72308],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[72360,72368],"content":"DateTime","needQuote":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[72430,72431],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[72708,72727],"content":"GetMinute(DateTime)","needQuote":true,"nodes":[{"content":"GetMinute(DateTime)","pos":[0,19]}]},{"pos":[72888,72897],"content":"GetMinute","needQuote":true,"nodes":[{"content":"GetMinute","pos":[0,9]}]},{"pos":[72983,72984],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[73036,73044],"content":"DateTime","needQuote":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[73106,73107],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[73211,73220],"content":"GetMinute","needQuote":true,"nodes":[{"content":"GetMinute","pos":[0,9]}]},{"pos":[73306,73307],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[73359,73367],"content":"DateTime","needQuote":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[73429,73430],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[73698,73720],"content":"GetMonthsInYear(Int32)","needQuote":true,"nodes":[{"content":"GetMonthsInYear(Int32)","pos":[0,22]}]},{"pos":[73887,73902],"content":"GetMonthsInYear","needQuote":true,"nodes":[{"content":"GetMonthsInYear","pos":[0,15]}]},{"pos":[73994,73995],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[74044,74049],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[74108,74109],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[74216,74231],"content":"GetMonthsInYear","needQuote":true,"nodes":[{"content":"GetMonthsInYear","pos":[0,15]}]},{"pos":[74323,74324],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[74373,74378],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[74437,74438],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[74709,74728],"content":"GetSecond(DateTime)","needQuote":true,"nodes":[{"content":"GetSecond(DateTime)","pos":[0,19]}]},{"pos":[74889,74898],"content":"GetSecond","needQuote":true,"nodes":[{"content":"GetSecond","pos":[0,9]}]},{"pos":[74984,74985],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[75037,75045],"content":"DateTime","needQuote":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[75107,75108],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[75212,75221],"content":"GetSecond","needQuote":true,"nodes":[{"content":"GetSecond","pos":[0,9]}]},{"pos":[75307,75308],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[75360,75368],"content":"DateTime","needQuote":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[75430,75431],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[75755,75807],"content":"GetWeekOfYear(DateTime, CalendarWeekRule, DayOfWeek)","needQuote":true,"nodes":[{"content":"GetWeekOfYear(DateTime, CalendarWeekRule, DayOfWeek)","pos":[0,52]}]},{"pos":[76088,76101],"content":"GetWeekOfYear","needQuote":true,"nodes":[{"content":"GetWeekOfYear","pos":[0,13]}]},{"pos":[76191,76192],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[76244,76252],"content":"DateTime","needQuote":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"content":",","pos":[76315,76316]},{"pos":[76395,76411],"content":"CalendarWeekRule","needQuote":true,"nodes":[{"content":"CalendarWeekRule","pos":[0,16]}]},{"content":",","pos":[76496,76497]},{"pos":[76555,76564],"content":"DayOfWeek","needQuote":true,"nodes":[{"content":"DayOfWeek","pos":[0,9]}]},{"pos":[76627,76628],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[76791,76804],"content":"GetWeekOfYear","needQuote":true,"nodes":[{"content":"GetWeekOfYear","pos":[0,13]}]},{"pos":[76894,76895],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[76947,76955],"content":"DateTime","needQuote":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"content":",","pos":[77018,77019]},{"pos":[77098,77114],"content":"CalendarWeekRule","needQuote":true,"nodes":[{"content":"CalendarWeekRule","pos":[0,16]}]},{"content":",","pos":[77199,77200]},{"pos":[77258,77267],"content":"DayOfWeek","needQuote":true,"nodes":[{"content":"DayOfWeek","pos":[0,9]}]},{"pos":[77330,77331],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[77711,77741],"content":"IsLeapDay(Int32, Int32, Int32)","needQuote":true,"nodes":[{"content":"IsLeapDay(Int32, Int32, Int32)","pos":[0,30]}]},{"pos":[77950,77959],"content":"IsLeapDay","needQuote":true,"nodes":[{"content":"IsLeapDay","pos":[0,9]}]},{"pos":[78045,78046],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[78095,78100],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[78160,78161]},{"pos":[78215,78220],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[78280,78281]},{"pos":[78335,78340],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[78399,78400],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[78527,78536],"content":"IsLeapDay","needQuote":true,"nodes":[{"content":"IsLeapDay","pos":[0,9]}]},{"pos":[78622,78623],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[78672,78677],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[78737,78738]},{"pos":[78792,78797],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[78857,78858]},{"pos":[78912,78917],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[78976,78977],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[79288,79313],"content":"IsLeapMonth(Int32, Int32)","needQuote":true,"nodes":[{"content":"IsLeapMonth(Int32, Int32)","pos":[0,25]}]},{"pos":[79499,79510],"content":"IsLeapMonth","needQuote":true,"nodes":[{"content":"IsLeapMonth","pos":[0,11]}]},{"pos":[79598,79599],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[79648,79653],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[79713,79714]},{"pos":[79768,79773],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[79832,79833],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[79949,79960],"content":"IsLeapMonth","needQuote":true,"nodes":[{"content":"IsLeapMonth","pos":[0,11]}]},{"pos":[80048,80049],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[80098,80103],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[80163,80164]},{"pos":[80218,80223],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[80282,80283],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[80566,80585],"content":"GetLeapMonth(Int32)","needQuote":true,"nodes":[{"content":"GetLeapMonth(Int32)","pos":[0,19]}]},{"pos":[80746,80758],"content":"GetLeapMonth","needQuote":true,"nodes":[{"content":"GetLeapMonth","pos":[0,12]}]},{"pos":[80847,80848],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[80897,80902],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[80961,80962],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[81066,81078],"content":"GetLeapMonth","needQuote":true,"nodes":[{"content":"GetLeapMonth","pos":[0,12]}]},{"pos":[81167,81168],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[81217,81222],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[81281,81282],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[81545,81562],"content":"IsLeapYear(Int32)","needQuote":true,"nodes":[{"content":"IsLeapYear(Int32)","pos":[0,17]}]},{"pos":[81719,81729],"content":"IsLeapYear","needQuote":true,"nodes":[{"content":"IsLeapYear","pos":[0,10]}]},{"pos":[81816,81817],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[81866,81871],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[81930,81931],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[82033,82043],"content":"IsLeapYear","needQuote":true,"nodes":[{"content":"IsLeapYear","pos":[0,10]}]},{"pos":[82130,82131],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[82180,82185],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[82244,82245],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[82582,82641],"content":"ToDateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32)","needQuote":true,"nodes":[{"content":"ToDateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32)","pos":[0,59]}]},{"pos":[82960,82970],"content":"ToDateTime","needQuote":true,"nodes":[{"content":"ToDateTime","pos":[0,10]}]},{"pos":[83057,83058],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[83107,83112],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[83172,83173]},{"pos":[83227,83232],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[83292,83293]},{"pos":[83347,83352],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[83412,83413]},{"pos":[83467,83472],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[83532,83533]},{"pos":[83587,83592],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[83652,83653]},{"pos":[83707,83712],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[83772,83773]},{"pos":[83827,83832],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[83891,83892],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[84072,84082],"content":"ToDateTime","needQuote":true,"nodes":[{"content":"ToDateTime","pos":[0,10]}]},{"pos":[84169,84170],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[84219,84224],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[84284,84285]},{"pos":[84339,84344],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[84404,84405]},{"pos":[84459,84464],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[84524,84525]},{"pos":[84579,84584],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[84644,84645]},{"pos":[84699,84704],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[84764,84765]},{"pos":[84819,84824],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[84884,84885]},{"pos":[84939,84944],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[85003,85004],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[85372,85385],"content":"AlgorithmType","needQuote":true,"nodes":[{"content":"AlgorithmType","pos":[0,13]}]},{"pos":[85655,85665],"content":"IsReadOnly","needQuote":true,"nodes":[{"content":"IsReadOnly","pos":[0,10]}]},{"pos":[85948,85980],"content":"DaysInYearBeforeMinSupportedYear","needQuote":true,"nodes":[{"content":"DaysInYearBeforeMinSupportedYear","pos":[0,32]}]},{"pos":[86273,86283],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[86378,86386],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[86455,86456],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[86483,86484],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[86554,86562],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[86631,86632],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[86659,86660],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[86843,86857],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[86976,86982],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[87049,87050],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[87100,87106],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[87166,87167],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[87250,87256],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[87323,87324],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[87374,87380],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[87440,87441],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[87655,87677],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[87825,87831],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[87898,87899],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[87949,87955],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[88016,88017]},{"pos":[88072,88078],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[88138,88139],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[88236,88242],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[88309,88310],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[88360,88366],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[88427,88428]},{"pos":[88483,88489],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[88549,88550],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[88795,88826],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[88992,89007],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[89083,89084],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[89134,89140],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[89201,89202]},{"pos":[89257,89263],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[89323,89324],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[89430,89445],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[89521,89522],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[89572,89578],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[89639,89640]},{"pos":[89695,89701],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[89761,89762],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[89992,90005],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[90106,90117],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[90189,90190],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[90217,90218],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[90291,90302],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[90374,90375],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[90402,90403],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[90578,90587],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[90680,90687],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[90755,90756],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[90783,90784],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[90853,90860],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[90928,90929],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[90956,90957],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[91132,91149],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[91258,91273],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[91349,91350],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[91377,91378],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[91455,91470],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[91546,91547],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[91574,91575],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[91720,91726],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[91900,91904],"content":"Eras","needQuote":true,"nodes":[{"content":"Eras","pos":[0,4]}]},{"pos":[92062,92069],"content":"Int32[]","needQuote":true,"nodes":[{"content":"Int32[]","pos":[0,7]}]},{"pos":[92193,92198],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":"[]","pos":[92258,92260]},{"pos":[92324,92329],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[92388,92390],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[92584,92604],"content":"MaxSupportedDateTime","needQuote":true,"nodes":[{"content":"MaxSupportedDateTime","pos":[0,20]}]},{"pos":[92848,92856],"content":"DateTime","needQuote":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[93066,93086],"content":"MinSupportedDateTime","needQuote":true,"nodes":[{"content":"MinSupportedDateTime","pos":[0,20]}]},{"pos":[93382,93397],"content":"TwoDigitYearMax","needQuote":true,"nodes":[{"content":"TwoDigitYearMax","pos":[0,15]}]},{"pos":[93623,93628],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[93848,93874],"content":"AddMonths(DateTime, Int32)","needQuote":true,"nodes":[{"content":"AddMonths(DateTime, Int32)","pos":[0,26]}]},{"pos":[94062,94071],"content":"AddMonths","needQuote":true,"nodes":[{"content":"AddMonths","pos":[0,9]}]},{"pos":[94157,94158],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[94210,94218],"content":"DateTime","needQuote":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"content":",","pos":[94281,94282]},{"pos":[94336,94341],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[94400,94401],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[94518,94527],"content":"AddMonths","needQuote":true,"nodes":[{"content":"AddMonths","pos":[0,9]}]},{"pos":[94613,94614],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[94666,94674],"content":"DateTime","needQuote":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"content":",","pos":[94737,94738]},{"pos":[94792,94797],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[94856,94857],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[95154,95179],"content":"AddYears(DateTime, Int32)","needQuote":true,"nodes":[{"content":"AddYears(DateTime, Int32)","pos":[0,25]}]},{"pos":[95365,95373],"content":"AddYears","needQuote":true,"nodes":[{"content":"AddYears","pos":[0,8]}]},{"pos":[95458,95459],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[95511,95519],"content":"DateTime","needQuote":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"content":",","pos":[95582,95583]},{"pos":[95637,95642],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[95701,95702],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[95818,95826],"content":"AddYears","needQuote":true,"nodes":[{"content":"AddYears","pos":[0,8]}]},{"pos":[95911,95912],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[95964,95972],"content":"DateTime","needQuote":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"content":",","pos":[96035,96036]},{"pos":[96090,96095],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[96154,96155],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[96442,96465],"content":"GetDayOfMonth(DateTime)","needQuote":true,"nodes":[{"content":"GetDayOfMonth(DateTime)","pos":[0,23]}]},{"pos":[96634,96647],"content":"GetDayOfMonth","needQuote":true,"nodes":[{"content":"GetDayOfMonth","pos":[0,13]}]},{"pos":[96737,96738],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[96790,96798],"content":"DateTime","needQuote":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[96860,96861],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[96969,96982],"content":"GetDayOfMonth","needQuote":true,"nodes":[{"content":"GetDayOfMonth","pos":[0,13]}]},{"pos":[97072,97073],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[97125,97133],"content":"DateTime","needQuote":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[97195,97196],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[97472,97494],"content":"GetDayOfWeek(DateTime)","needQuote":true,"nodes":[{"content":"GetDayOfWeek(DateTime)","pos":[0,22]}]},{"pos":[97661,97673],"content":"GetDayOfWeek","needQuote":true,"nodes":[{"content":"GetDayOfWeek","pos":[0,12]}]},{"pos":[97762,97763],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[97815,97823],"content":"DateTime","needQuote":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[97885,97886],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[97993,98005],"content":"GetDayOfWeek","needQuote":true,"nodes":[{"content":"GetDayOfWeek","pos":[0,12]}]},{"pos":[98094,98095],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[98147,98155],"content":"DateTime","needQuote":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[98217,98218],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[98427,98436],"content":"DayOfWeek","needQuote":true,"nodes":[{"content":"DayOfWeek","pos":[0,9]}]},{"pos":[98658,98680],"content":"GetDayOfYear(DateTime)","needQuote":true,"nodes":[{"content":"GetDayOfYear(DateTime)","pos":[0,22]}]},{"pos":[98847,98859],"content":"GetDayOfYear","needQuote":true,"nodes":[{"content":"GetDayOfYear","pos":[0,12]}]},{"pos":[98948,98949],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[99001,99009],"content":"DateTime","needQuote":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[99071,99072],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[99179,99191],"content":"GetDayOfYear","needQuote":true,"nodes":[{"content":"GetDayOfYear","pos":[0,12]}]},{"pos":[99280,99281],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[99333,99341],"content":"DateTime","needQuote":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[99403,99404],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[99703,99738],"content":"GetDaysInMonth(Int32, Int32, Int32)","needQuote":true,"nodes":[{"content":"GetDaysInMonth(Int32, Int32, Int32)","pos":[0,35]}]},{"pos":[99957,99971],"content":"GetDaysInMonth","needQuote":true,"nodes":[{"content":"GetDaysInMonth","pos":[0,14]}]},{"pos":[100062,100063],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[100112,100117],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[100177,100178]},{"pos":[100232,100237],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[100297,100298]},{"pos":[100352,100357],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[100416,100417],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[100549,100563],"content":"GetDaysInMonth","needQuote":true,"nodes":[{"content":"GetDaysInMonth","pos":[0,14]}]},{"pos":[100654,100655],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[100704,100709],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[100769,100770]},{"pos":[100824,100829],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[100889,100890]},{"pos":[100944,100949],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[101008,101009],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[101332,101359],"content":"GetDaysInYear(Int32, Int32)","needQuote":true,"nodes":[{"content":"GetDaysInYear(Int32, Int32)","pos":[0,27]}]},{"pos":[101549,101562],"content":"GetDaysInYear","needQuote":true,"nodes":[{"content":"GetDaysInYear","pos":[0,13]}]},{"pos":[101652,101653],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[101702,101707],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[101767,101768]},{"pos":[101822,101827],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[101886,101887],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[102005,102018],"content":"GetDaysInYear","needQuote":true,"nodes":[{"content":"GetDaysInYear","pos":[0,13]}]},{"pos":[102108,102109],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[102158,102163],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[102223,102224]},{"pos":[102278,102283],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[102342,102343],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[102627,102643],"content":"GetEra(DateTime)","needQuote":true,"nodes":[{"content":"GetEra(DateTime)","pos":[0,16]}]},{"pos":[102798,102804],"content":"GetEra","needQuote":true,"nodes":[{"content":"GetEra","pos":[0,6]}]},{"pos":[102887,102888],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[102940,102948],"content":"DateTime","needQuote":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[103010,103011],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[103112,103118],"content":"GetEra","needQuote":true,"nodes":[{"content":"GetEra","pos":[0,6]}]},{"pos":[103201,103202],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[103254,103262],"content":"DateTime","needQuote":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[103324,103325],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[103597,103623],"content":"GetLeapMonth(Int32, Int32)","needQuote":true,"nodes":[{"content":"GetLeapMonth(Int32, Int32)","pos":[0,26]}]},{"pos":[103811,103823],"content":"GetLeapMonth","needQuote":true,"nodes":[{"content":"GetLeapMonth","pos":[0,12]}]},{"pos":[103912,103913],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[103962,103967],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[104027,104028]},{"pos":[104082,104087],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[104146,104147],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[104264,104276],"content":"GetLeapMonth","needQuote":true,"nodes":[{"content":"GetLeapMonth","pos":[0,12]}]},{"pos":[104365,104366],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[104415,104420],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[104480,104481]},{"pos":[104535,104540],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[104599,104600],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[104884,104902],"content":"GetMonth(DateTime)","needQuote":true,"nodes":[{"content":"GetMonth(DateTime)","pos":[0,18]}]},{"pos":[105061,105069],"content":"GetMonth","needQuote":true,"nodes":[{"content":"GetMonth","pos":[0,8]}]},{"pos":[105154,105155],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[105207,105215],"content":"DateTime","needQuote":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[105277,105278],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[105381,105389],"content":"GetMonth","needQuote":true,"nodes":[{"content":"GetMonth","pos":[0,8]}]},{"pos":[105474,105475],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[105527,105535],"content":"DateTime","needQuote":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[105597,105598],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[105877,105906],"content":"GetMonthsInYear(Int32, Int32)","needQuote":true,"nodes":[{"content":"GetMonthsInYear(Int32, Int32)","pos":[0,29]}]},{"pos":[106100,106115],"content":"GetMonthsInYear","needQuote":true,"nodes":[{"content":"GetMonthsInYear","pos":[0,15]}]},{"pos":[106207,106208],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[106257,106262],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[106322,106323]},{"pos":[106377,106382],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[106441,106442],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[106562,106577],"content":"GetMonthsInYear","needQuote":true,"nodes":[{"content":"GetMonthsInYear","pos":[0,15]}]},{"pos":[106669,106670],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[106719,106724],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[106784,106785]},{"pos":[106839,106844],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[106903,106904],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[107193,107210],"content":"GetYear(DateTime)","needQuote":true,"nodes":[{"content":"GetYear(DateTime)","pos":[0,17]}]},{"pos":[107367,107374],"content":"GetYear","needQuote":true,"nodes":[{"content":"GetYear","pos":[0,7]}]},{"pos":[107458,107459],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[107511,107519],"content":"DateTime","needQuote":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[107581,107582],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[107684,107691],"content":"GetYear","needQuote":true,"nodes":[{"content":"GetYear","pos":[0,7]}]},{"pos":[107775,107776],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[107828,107836],"content":"DateTime","needQuote":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[107898,107899],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[108196,108233],"content":"IsLeapDay(Int32, Int32, Int32, Int32)","needQuote":true,"nodes":[{"content":"IsLeapDay(Int32, Int32, Int32, Int32)","pos":[0,37]}]},{"pos":[108469,108478],"content":"IsLeapDay","needQuote":true,"nodes":[{"content":"IsLeapDay","pos":[0,9]}]},{"pos":[108564,108565],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[108614,108619],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[108679,108680]},{"pos":[108734,108739],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[108799,108800]},{"pos":[108854,108859],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[108919,108920]},{"pos":[108974,108979],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[109038,109039],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[109179,109188],"content":"IsLeapDay","needQuote":true,"nodes":[{"content":"IsLeapDay","pos":[0,9]}]},{"pos":[109274,109275],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[109324,109329],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[109389,109390]},{"pos":[109444,109449],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[109509,109510]},{"pos":[109564,109569],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[109629,109630]},{"pos":[109684,109689],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[109748,109749],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[110004,110011],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[110249,110281],"content":"IsLeapMonth(Int32, Int32, Int32)","needQuote":true,"nodes":[{"content":"IsLeapMonth(Int32, Int32, Int32)","pos":[0,32]}]},{"pos":[110494,110505],"content":"IsLeapMonth","needQuote":true,"nodes":[{"content":"IsLeapMonth","pos":[0,11]}]},{"pos":[110593,110594],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[110643,110648],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[110708,110709]},{"pos":[110763,110768],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[110828,110829]},{"pos":[110883,110888],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[110947,110948],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[111077,111088],"content":"IsLeapMonth","needQuote":true,"nodes":[{"content":"IsLeapMonth","pos":[0,11]}]},{"pos":[111176,111177],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[111226,111231],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[111291,111292]},{"pos":[111346,111351],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[111411,111412]},{"pos":[111466,111471],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[111530,111531],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[111845,111869],"content":"IsLeapYear(Int32, Int32)","needQuote":true,"nodes":[{"content":"IsLeapYear(Int32, Int32)","pos":[0,24]}]},{"pos":[112053,112063],"content":"IsLeapYear","needQuote":true,"nodes":[{"content":"IsLeapYear","pos":[0,10]}]},{"pos":[112150,112151],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[112200,112205],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[112265,112266]},{"pos":[112320,112325],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[112384,112385],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[112500,112510],"content":"IsLeapYear","needQuote":true,"nodes":[{"content":"IsLeapYear","pos":[0,10]}]},{"pos":[112597,112598],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[112647,112652],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[112712,112713]},{"pos":[112767,112772],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[112831,112832],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[113202,113268],"content":"ToDateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32)","needQuote":true,"nodes":[{"content":"ToDateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32)","pos":[0,66]}]},{"pos":[113614,113624],"content":"ToDateTime","needQuote":true,"nodes":[{"content":"ToDateTime","pos":[0,10]}]},{"pos":[113711,113712],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[113761,113766],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[113826,113827]},{"pos":[113881,113886],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[113946,113947]},{"pos":[114001,114006],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[114066,114067]},{"pos":[114121,114126],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[114186,114187]},{"pos":[114241,114246],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[114306,114307]},{"pos":[114361,114366],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[114426,114427]},{"pos":[114481,114486],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[114546,114547]},{"pos":[114601,114606],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[114665,114666],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[114859,114869],"content":"ToDateTime","needQuote":true,"nodes":[{"content":"ToDateTime","pos":[0,10]}]},{"pos":[114956,114957],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[115006,115011],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[115071,115072]},{"pos":[115126,115131],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[115191,115192]},{"pos":[115246,115251],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[115311,115312]},{"pos":[115366,115371],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[115431,115432]},{"pos":[115486,115491],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[115551,115552]},{"pos":[115606,115611],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[115671,115672]},{"pos":[115726,115731],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[115791,115792]},{"pos":[115846,115851],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[115910,115911],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[116315,116337],"content":"ToFourDigitYear(Int32)","needQuote":true,"nodes":[{"content":"ToFourDigitYear(Int32)","pos":[0,22]}]},{"pos":[116504,116519],"content":"ToFourDigitYear","needQuote":true,"nodes":[{"content":"ToFourDigitYear","pos":[0,15]}]},{"pos":[116611,116612],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[116661,116666],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[116725,116726],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[116833,116848],"content":"ToFourDigitYear","needQuote":true,"nodes":[{"content":"ToFourDigitYear","pos":[0,15]}]},{"pos":[116940,116941],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[116990,116995],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[117054,117055],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[117280,117305],"content":"InvalidOperationException","needQuote":true,"nodes":[{"content":"InvalidOperationException","pos":[0,25]}]},{"pos":[117511,117538],"content":"ArgumentOutOfRangeException","needQuote":true,"nodes":[{"content":"ArgumentOutOfRangeException","pos":[0,27]}]},{"pos":[117757,117774],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]}],"content":"items:\n- uid: System.Globalization.PersianCalendar\n  commentId: T:System.Globalization.PersianCalendar\n  id: PersianCalendar\n  parent: System.Globalization\n  children:\n  - System.Globalization.PersianCalendar.#ctor\n  - System.Globalization.PersianCalendar.AddMonths(System.DateTime,System.Int32)\n  - System.Globalization.PersianCalendar.AddYears(System.DateTime,System.Int32)\n  - System.Globalization.PersianCalendar.Eras\n  - System.Globalization.PersianCalendar.GetDayOfMonth(System.DateTime)\n  - System.Globalization.PersianCalendar.GetDayOfWeek(System.DateTime)\n  - System.Globalization.PersianCalendar.GetDayOfYear(System.DateTime)\n  - System.Globalization.PersianCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)\n  - System.Globalization.PersianCalendar.GetDaysInYear(System.Int32,System.Int32)\n  - System.Globalization.PersianCalendar.GetEra(System.DateTime)\n  - System.Globalization.PersianCalendar.GetLeapMonth(System.Int32,System.Int32)\n  - System.Globalization.PersianCalendar.GetMonth(System.DateTime)\n  - System.Globalization.PersianCalendar.GetMonthsInYear(System.Int32,System.Int32)\n  - System.Globalization.PersianCalendar.GetYear(System.DateTime)\n  - System.Globalization.PersianCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)\n  - System.Globalization.PersianCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)\n  - System.Globalization.PersianCalendar.IsLeapYear(System.Int32,System.Int32)\n  - System.Globalization.PersianCalendar.MaxSupportedDateTime\n  - System.Globalization.PersianCalendar.MinSupportedDateTime\n  - System.Globalization.PersianCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n  - System.Globalization.PersianCalendar.ToFourDigitYear(System.Int32)\n  - System.Globalization.PersianCalendar.TwoDigitYearMax\n  langs:\n  - csharp\n  - vb\n  name: PersianCalendar\n  fullName: System.Globalization.PersianCalendar\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/PersianCalendar.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: PersianCalendar\n    path: src/mscorlib/src/System/Globalization/PersianCalendar.cs\n    startLine: 25\n  assemblies:\n  - System.Globalization.Calendars\n  namespace: System.Globalization\n  summary: \"\\n<p>Represents the Persian calendar.</p>\\n\"\n  syntax:\n    content: >-\n      [Serializable]\n\n      public class PersianCalendar : Calendar, ICloneable\n    content.vb: >-\n      <Serializable>\n\n      Public Class PersianCalendar\n          Inherits Calendar\n          Implements ICloneable\n  seealso:\n  - type: System.Globalization.Calendar\n    commentId: T:System.Globalization.Calendar\n  - type: System.Globalization.CultureInfo.Calendar\n    commentId: P:System.Globalization.CultureInfo.Calendar\n  - type: System.Globalization.CultureInfo.OptionalCalendars\n    commentId: P:System.Globalization.CultureInfo.OptionalCalendars\n  inheritance:\n  - System.Object\n  - System.Globalization.Calendar\n  implements:\n  - System.ICloneable\n  inheritedMembers:\n  - System.Globalization.Calendar.CurrentEra\n  - System.Globalization.Calendar.Clone\n  - System.Globalization.Calendar.ReadOnly(System.Globalization.Calendar)\n  - System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)\n  - System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)\n  - System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)\n  - System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)\n  - System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)\n  - System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)\n  - System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)\n  - System.Globalization.Calendar.GetDaysInYear(System.Int32)\n  - System.Globalization.Calendar.GetHour(System.DateTime)\n  - System.Globalization.Calendar.GetMilliseconds(System.DateTime)\n  - System.Globalization.Calendar.GetMinute(System.DateTime)\n  - System.Globalization.Calendar.GetMonthsInYear(System.Int32)\n  - System.Globalization.Calendar.GetSecond(System.DateTime)\n  - System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)\n  - System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)\n  - System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)\n  - System.Globalization.Calendar.GetLeapMonth(System.Int32)\n  - System.Globalization.Calendar.IsLeapYear(System.Int32)\n  - System.Globalization.Calendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n  - System.Globalization.Calendar.AlgorithmType\n  - System.Globalization.Calendar.IsReadOnly\n  - System.Globalization.Calendar.DaysInYearBeforeMinSupportedYear\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: PersianCalendar\n- uid: System.Globalization.PersianCalendar.#ctor\n  commentId: M:System.Globalization.PersianCalendar.#ctor\n  id: '#ctor'\n  parent: System.Globalization.PersianCalendar\n  langs:\n  - csharp\n  - vb\n  name: PersianCalendar()\n  fullName: System.Globalization.PersianCalendar.PersianCalendar()\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/PersianCalendar.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Globalization/PersianCalendar.cs\n    startLine: 98\n  assemblies:\n  - System.Globalization.Calendars\n  namespace: System.Globalization\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Globalization.PersianCalendar\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class. </p>\\n\"\n  syntax:\n    content: public PersianCalendar()\n    content.vb: Public Sub New\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: PersianCalendar.PersianCalendar()\n- uid: System.Globalization.PersianCalendar.Eras\n  commentId: P:System.Globalization.PersianCalendar.Eras\n  id: Eras\n  parent: System.Globalization.PersianCalendar\n  langs:\n  - csharp\n  - vb\n  name: Eras\n  fullName: System.Globalization.PersianCalendar.Eras\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/PersianCalendar.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Eras\n    path: src/mscorlib/src/System/Globalization/PersianCalendar.cs\n    startLine: 407\n  assemblies:\n  - System.Globalization.Calendars\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets the list of eras in a <xref href=\\\"System.Globalization.PersianCalendar\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public override int[] Eras { get; }\n    content.vb: Public Overrides ReadOnly Property Eras As Integer()\n    parameters: []\n    return:\n      type: System.Int32[]\n      description: \"\\n<p>An array of integers that represents the eras in a <xref href=\\\"System.Globalization.PersianCalendar\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object. The array consists of a single element having a value of <xref href=\\\"System.Globalization.PersianCalendar.PersianEra\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  overridden: System.Globalization.Calendar.Eras\n  seealso:\n  - type: System.Globalization.Calendar.CurrentEra\n    commentId: F:System.Globalization.Calendar.CurrentEra\n  - type: System.Globalization.PersianCalendar.PersianEra\n    commentId: F:System.Globalization.PersianCalendar.PersianEra\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: PersianCalendar.Eras\n- uid: System.Globalization.PersianCalendar.MaxSupportedDateTime\n  commentId: P:System.Globalization.PersianCalendar.MaxSupportedDateTime\n  id: MaxSupportedDateTime\n  parent: System.Globalization.PersianCalendar\n  langs:\n  - csharp\n  - vb\n  name: MaxSupportedDateTime\n  fullName: System.Globalization.PersianCalendar.MaxSupportedDateTime\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/PersianCalendar.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: MaxSupportedDateTime\n    path: src/mscorlib/src/System/Globalization/PersianCalendar.cs\n    startLine: 78\n  assemblies:\n  - System.Globalization.Calendars\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets the latest date and time supported by the <xref href=\\\"System.Globalization.PersianCalendar\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public override DateTime MaxSupportedDateTime { get; }\n    content.vb: Public Overrides ReadOnly Property MaxSupportedDateTime As Date\n    parameters: []\n    return:\n      type: System.DateTime\n      description: \"\\n<p>The latest date and time supported by the <xref href=\\\"System.Globalization.PersianCalendar\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class. See the Remarks section for more information. </p>\\n\"\n  overridden: System.Globalization.Calendar.MaxSupportedDateTime\n  seealso:\n  - type: System.Globalization.PersianCalendar.MinSupportedDateTime\n    commentId: P:System.Globalization.PersianCalendar.MinSupportedDateTime\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: PersianCalendar.MaxSupportedDateTime\n- uid: System.Globalization.PersianCalendar.MinSupportedDateTime\n  commentId: P:System.Globalization.PersianCalendar.MinSupportedDateTime\n  id: MinSupportedDateTime\n  parent: System.Globalization.PersianCalendar\n  langs:\n  - csharp\n  - vb\n  name: MinSupportedDateTime\n  fullName: System.Globalization.PersianCalendar.MinSupportedDateTime\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/PersianCalendar.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: MinSupportedDateTime\n    path: src/mscorlib/src/System/Globalization/PersianCalendar.cs\n    startLine: 69\n  assemblies:\n  - System.Globalization.Calendars\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets the earliest date and time supported by the <xref href=\\\"System.Globalization.PersianCalendar\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public override DateTime MinSupportedDateTime { get; }\n    content.vb: Public Overrides ReadOnly Property MinSupportedDateTime As Date\n    parameters: []\n    return:\n      type: System.DateTime\n      description: \"\\n<p>The earliest date and time supported by the <xref href=\\\"System.Globalization.PersianCalendar\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class. See the Remarks section for more information. </p>\\n\"\n  overridden: System.Globalization.Calendar.MinSupportedDateTime\n  seealso:\n  - type: System.Globalization.PersianCalendar.MaxSupportedDateTime\n    commentId: P:System.Globalization.PersianCalendar.MaxSupportedDateTime\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: PersianCalendar.MinSupportedDateTime\n- uid: System.Globalization.PersianCalendar.TwoDigitYearMax\n  commentId: P:System.Globalization.PersianCalendar.TwoDigitYearMax\n  id: TwoDigitYearMax\n  parent: System.Globalization.PersianCalendar\n  langs:\n  - csharp\n  - vb\n  name: TwoDigitYearMax\n  fullName: System.Globalization.PersianCalendar.TwoDigitYearMax\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/PersianCalendar.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: TwoDigitYearMax\n    path: src/mscorlib/src/System/Globalization/PersianCalendar.cs\n    startLine: 527\n  assemblies:\n  - System.Globalization.Calendars\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets or sets the last year of a 100-year range that can be represented by a 2-digit year.</p>\\n\"\n  syntax:\n    content: public override int TwoDigitYearMax { get; set; }\n    content.vb: Public Overrides Property TwoDigitYearMax As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The last year of a 100-year range that can be represented by a 2-digit year.</p>\\n\"\n  overridden: System.Globalization.Calendar.TwoDigitYearMax\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>This calendar is read-only.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The value in a set operation is less than 100 or greater than 9378.</p>\\n\"\n  seealso:\n  - type: System.Globalization.PersianCalendar.ToFourDigitYear(System.Int32)\n    commentId: M:System.Globalization.PersianCalendar.ToFourDigitYear(System.Int32)\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: PersianCalendar.TwoDigitYearMax\n- uid: System.Globalization.PersianCalendar.AddMonths(System.DateTime,System.Int32)\n  commentId: M:System.Globalization.PersianCalendar.AddMonths(System.DateTime,System.Int32)\n  id: AddMonths(System.DateTime,System.Int32)\n  parent: System.Globalization.PersianCalendar\n  langs:\n  - csharp\n  - vb\n  name: AddMonths(DateTime, Int32)\n  fullName: System.Globalization.PersianCalendar.AddMonths(System.DateTime, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/PersianCalendar.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: AddMonths\n    path: src/mscorlib/src/System/Globalization/PersianCalendar.cs\n    startLine: 289\n  assemblies:\n  - System.Globalization.Calendars\n  namespace: System.Globalization\n  summary: \"\\n<p>Returns a <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that is offset the specified number of months from the specified <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public override DateTime AddMonths(DateTime time, int months)\n    content.vb: Public Overrides Function AddMonths(time As Date, months As Integer) As Date\n    parameters:\n    - id: time\n      type: System.DateTime\n      description: \"\\n<p>The <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to which to add months. </p>\\n\"\n    - id: months\n      type: System.Int32\n      description: \"\\n<p>The positive or negative number of months to add. </p>\\n\"\n    return:\n      type: System.DateTime\n      description: \"\\n<p>A <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that represents the date yielded by adding the number of months specified by the <em>months</em> parameter to the date specified by the <em>time</em> parameter.</p>\\n\"\n  overridden: System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The resulting <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is outside the supported range. </p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>months</em> is less than -120,000 or greater than 120,000. </p>\\n\"\n  seealso:\n  - type: System.DateTime\n    commentId: T:System.DateTime\n  - type: System.Globalization.PersianCalendar.AddYears(System.DateTime,System.Int32)\n    commentId: M:System.Globalization.PersianCalendar.AddYears(System.DateTime,System.Int32)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: PersianCalendar.AddMonths(DateTime, Int32)\n- uid: System.Globalization.PersianCalendar.AddYears(System.DateTime,System.Int32)\n  commentId: M:System.Globalization.PersianCalendar.AddYears(System.DateTime,System.Int32)\n  id: AddYears(System.DateTime,System.Int32)\n  parent: System.Globalization.PersianCalendar\n  langs:\n  - csharp\n  - vb\n  name: AddYears(DateTime, Int32)\n  fullName: System.Globalization.PersianCalendar.AddYears(System.DateTime, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/PersianCalendar.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: AddYears\n    path: src/mscorlib/src/System/Globalization/PersianCalendar.cs\n    startLine: 331\n  assemblies:\n  - System.Globalization.Calendars\n  namespace: System.Globalization\n  summary: \"\\n<p>Returns a <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that is offset the specified number of years from the specified <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public override DateTime AddYears(DateTime time, int years)\n    content.vb: Public Overrides Function AddYears(time As Date, years As Integer) As Date\n    parameters:\n    - id: time\n      type: System.DateTime\n      description: \"\\n<p>The <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to which to add years. </p>\\n\"\n    - id: years\n      type: System.Int32\n      description: \"\\n<p>The positive or negative number of years to add. </p>\\n\"\n    return:\n      type: System.DateTime\n      description: \"\\n<p>The <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that results from adding the specified number of years to the specified <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  overridden: System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The resulting <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is outside the supported range. </p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>years</em> is less than -10,000 or greater than 10,000. </p>\\n\"\n  seealso:\n  - type: System.DateTime\n    commentId: T:System.DateTime\n  - type: System.Globalization.PersianCalendar.AddMonths(System.DateTime,System.Int32)\n    commentId: M:System.Globalization.PersianCalendar.AddMonths(System.DateTime,System.Int32)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: PersianCalendar.AddYears(DateTime, Int32)\n- uid: System.Globalization.PersianCalendar.GetDayOfMonth(System.DateTime)\n  commentId: M:System.Globalization.PersianCalendar.GetDayOfMonth(System.DateTime)\n  id: GetDayOfMonth(System.DateTime)\n  parent: System.Globalization.PersianCalendar\n  langs:\n  - csharp\n  - vb\n  name: GetDayOfMonth(DateTime)\n  fullName: System.Globalization.PersianCalendar.GetDayOfMonth(System.DateTime)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/PersianCalendar.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetDayOfMonth\n    path: src/mscorlib/src/System/Globalization/PersianCalendar.cs\n    startLine: 340\n  assemblies:\n  - System.Globalization.Calendars\n  namespace: System.Globalization\n  summary: \"\\n<p>Returns the day of the month in the specified <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public override int GetDayOfMonth(DateTime time)\n    content.vb: Public Overrides Function GetDayOfMonth(time As Date) As Integer\n    parameters:\n    - id: time\n      type: System.DateTime\n      description: \"\\n<p>The <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to read. </p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>An integer from 1 through 31 that represents the day of the month in the specified <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  overridden: System.Globalization.Calendar.GetDayOfMonth(System.DateTime)\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The <em>time</em> parameter represents a date less than <xref href=\\\"System.Globalization.PersianCalendar.MinSupportedDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or greater than <xref href=\\\"System.Globalization.PersianCalendar.MaxSupportedDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  seealso:\n  - type: System.DateTime.Day\n    commentId: P:System.DateTime.Day\n  - type: System.Globalization.PersianCalendar.GetMonth(System.DateTime)\n    commentId: M:System.Globalization.PersianCalendar.GetMonth(System.DateTime)\n  - type: System.Globalization.PersianCalendar.GetDayOfYear(System.DateTime)\n    commentId: M:System.Globalization.PersianCalendar.GetDayOfYear(System.DateTime)\n  - type: System.Globalization.PersianCalendar.GetDayOfWeek(System.DateTime)\n    commentId: M:System.Globalization.PersianCalendar.GetDayOfWeek(System.DateTime)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: PersianCalendar.GetDayOfMonth(DateTime)\n- uid: System.Globalization.PersianCalendar.GetDayOfWeek(System.DateTime)\n  commentId: M:System.Globalization.PersianCalendar.GetDayOfWeek(System.DateTime)\n  id: GetDayOfWeek(System.DateTime)\n  parent: System.Globalization.PersianCalendar\n  langs:\n  - csharp\n  - vb\n  name: GetDayOfWeek(DateTime)\n  fullName: System.Globalization.PersianCalendar.GetDayOfWeek(System.DateTime)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/PersianCalendar.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetDayOfWeek\n    path: src/mscorlib/src/System/Globalization/PersianCalendar.cs\n    startLine: 351\n  assemblies:\n  - System.Globalization.Calendars\n  namespace: System.Globalization\n  summary: \"\\n<p>Returns the day of the week in the specified <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public override DayOfWeek GetDayOfWeek(DateTime time)\n    content.vb: Public Overrides Function GetDayOfWeek(time As Date) As DayOfWeek\n    parameters:\n    - id: time\n      type: System.DateTime\n      description: \"\\n<p>The <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to read. </p>\\n\"\n    return:\n      type: System.DayOfWeek\n      description: \"\\n<p>A <xref href=\\\"System.DayOfWeek\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that represents the day of the week in the specified <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  overridden: System.Globalization.Calendar.GetDayOfWeek(System.DateTime)\n  seealso:\n  - type: System.DateTime.DayOfWeek\n    commentId: P:System.DateTime.DayOfWeek\n  - type: System.DayOfWeek\n    commentId: T:System.DayOfWeek\n  - type: System.Globalization.PersianCalendar.GetMonth(System.DateTime)\n    commentId: M:System.Globalization.PersianCalendar.GetMonth(System.DateTime)\n  - type: System.Globalization.PersianCalendar.GetDayOfYear(System.DateTime)\n    commentId: M:System.Globalization.PersianCalendar.GetDayOfYear(System.DateTime)\n  - type: System.Globalization.PersianCalendar.GetDayOfMonth(System.DateTime)\n    commentId: M:System.Globalization.PersianCalendar.GetDayOfMonth(System.DateTime)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: PersianCalendar.GetDayOfWeek(DateTime)\n- uid: System.Globalization.PersianCalendar.GetDayOfYear(System.DateTime)\n  commentId: M:System.Globalization.PersianCalendar.GetDayOfYear(System.DateTime)\n  id: GetDayOfYear(System.DateTime)\n  parent: System.Globalization.PersianCalendar\n  langs:\n  - csharp\n  - vb\n  name: GetDayOfYear(DateTime)\n  fullName: System.Globalization.PersianCalendar.GetDayOfYear(System.DateTime)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/PersianCalendar.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetDayOfYear\n    path: src/mscorlib/src/System/Globalization/PersianCalendar.cs\n    startLine: 360\n  assemblies:\n  - System.Globalization.Calendars\n  namespace: System.Globalization\n  summary: \"\\n<p>Returns the day of the year in the specified <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public override int GetDayOfYear(DateTime time)\n    content.vb: Public Overrides Function GetDayOfYear(time As Date) As Integer\n    parameters:\n    - id: time\n      type: System.DateTime\n      description: \"\\n<p>The <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to read. </p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>An integer from 1 through 366 that represents the day of the year in the specified <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  overridden: System.Globalization.Calendar.GetDayOfYear(System.DateTime)\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The <em>time</em> parameter represents a date less than <xref href=\\\"System.Globalization.PersianCalendar.MinSupportedDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or greater than <xref href=\\\"System.Globalization.PersianCalendar.MaxSupportedDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  seealso:\n  - type: System.DateTime.DayOfYear\n    commentId: P:System.DateTime.DayOfYear\n  - type: System.Globalization.PersianCalendar.GetYear(System.DateTime)\n    commentId: M:System.Globalization.PersianCalendar.GetYear(System.DateTime)\n  - type: System.Globalization.PersianCalendar.GetMonth(System.DateTime)\n    commentId: M:System.Globalization.PersianCalendar.GetMonth(System.DateTime)\n  - type: System.Globalization.PersianCalendar.GetDayOfMonth(System.DateTime)\n    commentId: M:System.Globalization.PersianCalendar.GetDayOfMonth(System.DateTime)\n  - type: System.Globalization.PersianCalendar.GetDayOfWeek(System.DateTime)\n    commentId: M:System.Globalization.PersianCalendar.GetDayOfWeek(System.DateTime)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: PersianCalendar.GetDayOfYear(DateTime)\n- uid: System.Globalization.PersianCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)\n  commentId: M:System.Globalization.PersianCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)\n  id: GetDaysInMonth(System.Int32,System.Int32,System.Int32)\n  parent: System.Globalization.PersianCalendar\n  langs:\n  - csharp\n  - vb\n  name: GetDaysInMonth(Int32, Int32, Int32)\n  fullName: System.Globalization.PersianCalendar.GetDaysInMonth(System.Int32, System.Int32, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/PersianCalendar.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetDaysInMonth\n    path: src/mscorlib/src/System/Globalization/PersianCalendar.cs\n    startLine: 369\n  assemblies:\n  - System.Globalization.Calendars\n  namespace: System.Globalization\n  summary: \"\\n<p>Returns the number of days in the specified month of the specified year and era.</p>\\n\"\n  syntax:\n    content: public override int GetDaysInMonth(int year, int month, int era)\n    content.vb: Public Overrides Function GetDaysInMonth(year As Integer, month As Integer, era As Integer) As Integer\n    parameters:\n    - id: year\n      type: System.Int32\n      description: \"\\n<p>An integer from 1 through 9378 that represents the year. </p>\\n\"\n    - id: month\n      type: System.Int32\n      description: \"\\n<p>An integer that represents the month, and ranges from 1 through 12 if <em>year</em> is not 9378, or 1 through 10 if <em>year</em> is 9378.</p>\\n\"\n    - id: era\n      type: System.Int32\n      description: \"\\n<p>An integer from 0 through 1 that represents the era. </p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>The number of days in the specified month of the specified year and era.</p>\\n\"\n  overridden: System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>year</em>, <em>month</em>, or <em>era</em> is outside the range supported by this calendar. </p>\\n\"\n  seealso:\n  - type: System.Globalization.PersianCalendar.GetMonthsInYear(System.Int32,System.Int32)\n    commentId: M:System.Globalization.PersianCalendar.GetMonthsInYear(System.Int32,System.Int32)\n  - type: System.Globalization.PersianCalendar.GetDaysInYear(System.Int32,System.Int32)\n    commentId: M:System.Globalization.PersianCalendar.GetDaysInYear(System.Int32,System.Int32)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: PersianCalendar.GetDaysInMonth(Int32, Int32, Int32)\n- uid: System.Globalization.PersianCalendar.GetDaysInYear(System.Int32,System.Int32)\n  commentId: M:System.Globalization.PersianCalendar.GetDaysInYear(System.Int32,System.Int32)\n  id: GetDaysInYear(System.Int32,System.Int32)\n  parent: System.Globalization.PersianCalendar\n  langs:\n  - csharp\n  - vb\n  name: GetDaysInYear(Int32, Int32)\n  fullName: System.Globalization.PersianCalendar.GetDaysInYear(System.Int32, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/PersianCalendar.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetDaysInYear\n    path: src/mscorlib/src/System/Globalization/PersianCalendar.cs\n    startLine: 388\n  assemblies:\n  - System.Globalization.Calendars\n  namespace: System.Globalization\n  summary: \"\\n<p>Returns the number of days in the specified year of the specified era.</p>\\n\"\n  syntax:\n    content: public override int GetDaysInYear(int year, int era)\n    content.vb: Public Overrides Function GetDaysInYear(year As Integer, era As Integer) As Integer\n    parameters:\n    - id: year\n      type: System.Int32\n      description: \"\\n<p>An integer from 1 through 9378 that represents the year. </p>\\n\"\n    - id: era\n      type: System.Int32\n      description: \"\\n<p>An integer from 0 through 1 that represents the era. </p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>The number of days in the specified year and era. The number of days is 365 in a common year or 366 in a leap year.</p>\\n\"\n  overridden: System.Globalization.Calendar.GetDaysInYear(System.Int32,System.Int32)\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>year</em> or <em>era</em> is outside the range supported by this calendar. </p>\\n\"\n  seealso:\n  - type: System.Globalization.PersianCalendar.GetMonthsInYear(System.Int32,System.Int32)\n    commentId: M:System.Globalization.PersianCalendar.GetMonthsInYear(System.Int32,System.Int32)\n  - type: System.Globalization.PersianCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)\n    commentId: M:System.Globalization.PersianCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: PersianCalendar.GetDaysInYear(Int32, Int32)\n- uid: System.Globalization.PersianCalendar.GetEra(System.DateTime)\n  commentId: M:System.Globalization.PersianCalendar.GetEra(System.DateTime)\n  id: GetEra(System.DateTime)\n  parent: System.Globalization.PersianCalendar\n  langs:\n  - csharp\n  - vb\n  name: GetEra(DateTime)\n  fullName: System.Globalization.PersianCalendar.GetEra(System.DateTime)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/PersianCalendar.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetEra\n    path: src/mscorlib/src/System/Globalization/PersianCalendar.cs\n    startLine: 400\n  assemblies:\n  - System.Globalization.Calendars\n  namespace: System.Globalization\n  summary: \"\\n<p>Returns the era in the specified <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public override int GetEra(DateTime time)\n    content.vb: Public Overrides Function GetEra(time As Date) As Integer\n    parameters:\n    - id: time\n      type: System.DateTime\n      description: \"\\n<p>The <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to read. </p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>Always returns <xref href=\\\"System.Globalization.PersianCalendar.PersianEra\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  overridden: System.Globalization.Calendar.GetEra(System.DateTime)\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The <em>time</em> parameter represents a date less than <xref href=\\\"System.Globalization.PersianCalendar.MinSupportedDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or greater than <xref href=\\\"System.Globalization.PersianCalendar.MaxSupportedDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  seealso:\n  - type: System.DateTime\n    commentId: T:System.DateTime\n  - type: System.Globalization.PersianCalendar.PersianEra\n    commentId: F:System.Globalization.PersianCalendar.PersianEra\n  - type: System.Globalization.PersianCalendar.Eras\n    commentId: P:System.Globalization.PersianCalendar.Eras\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: PersianCalendar.GetEra(DateTime)\n- uid: System.Globalization.PersianCalendar.GetLeapMonth(System.Int32,System.Int32)\n  commentId: M:System.Globalization.PersianCalendar.GetLeapMonth(System.Int32,System.Int32)\n  id: GetLeapMonth(System.Int32,System.Int32)\n  parent: System.Globalization.PersianCalendar\n  langs:\n  - csharp\n  - vb\n  name: GetLeapMonth(Int32, Int32)\n  fullName: System.Globalization.PersianCalendar.GetLeapMonth(System.Int32, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/PersianCalendar.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetLeapMonth\n    path: src/mscorlib/src/System/Globalization/PersianCalendar.cs\n    startLine: 467\n  assemblies:\n  - System.Globalization.Calendars\n  namespace: System.Globalization\n  summary: \"\\n<p>Returns the leap month for a specified year and era.</p>\\n\"\n  syntax:\n    content: public override int GetLeapMonth(int year, int era)\n    content.vb: Public Overrides Function GetLeapMonth(year As Integer, era As Integer) As Integer\n    parameters:\n    - id: year\n      type: System.Int32\n      description: \"\\n<p>An integer from 1 through 9378 that represents the year to convert. </p>\\n\"\n    - id: era\n      type: System.Int32\n      description: \"\\n<p>An integer from 0 through 1 that represents the era. </p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>The return value is always 0.</p>\\n\"\n  overridden: System.Globalization.Calendar.GetLeapMonth(System.Int32,System.Int32)\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>year</em> or <em>era</em> is outside the range supported by this calendar. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: PersianCalendar.GetLeapMonth(Int32, Int32)\n- uid: System.Globalization.PersianCalendar.GetMonth(System.DateTime)\n  commentId: M:System.Globalization.PersianCalendar.GetMonth(System.DateTime)\n  id: GetMonth(System.DateTime)\n  parent: System.Globalization.PersianCalendar\n  langs:\n  - csharp\n  - vb\n  name: GetMonth(DateTime)\n  fullName: System.Globalization.PersianCalendar.GetMonth(System.DateTime)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/PersianCalendar.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetMonth\n    path: src/mscorlib/src/System/Globalization/PersianCalendar.cs\n    startLine: 418\n  assemblies:\n  - System.Globalization.Calendars\n  namespace: System.Globalization\n  summary: \"\\n<p>Returns the month in the specified <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public override int GetMonth(DateTime time)\n    content.vb: Public Overrides Function GetMonth(time As Date) As Integer\n    parameters:\n    - id: time\n      type: System.DateTime\n      description: \"\\n<p>The <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to read. </p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>An integer from 1 through 12 that represents the month in the specified <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  overridden: System.Globalization.Calendar.GetMonth(System.DateTime)\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The <em>time</em> parameter represents a date less than <xref href=\\\"System.Globalization.PersianCalendar.MinSupportedDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or greater than <xref href=\\\"System.Globalization.PersianCalendar.MaxSupportedDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  seealso:\n  - type: System.DateTime.Month\n    commentId: P:System.DateTime.Month\n  - type: System.Globalization.PersianCalendar.GetYear(System.DateTime)\n    commentId: M:System.Globalization.PersianCalendar.GetYear(System.DateTime)\n  - type: System.Globalization.PersianCalendar.GetDayOfMonth(System.DateTime)\n    commentId: M:System.Globalization.PersianCalendar.GetDayOfMonth(System.DateTime)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: PersianCalendar.GetMonth(DateTime)\n- uid: System.Globalization.PersianCalendar.GetMonthsInYear(System.Int32,System.Int32)\n  commentId: M:System.Globalization.PersianCalendar.GetMonthsInYear(System.Int32,System.Int32)\n  id: GetMonthsInYear(System.Int32,System.Int32)\n  parent: System.Globalization.PersianCalendar\n  langs:\n  - csharp\n  - vb\n  name: GetMonthsInYear(Int32, Int32)\n  fullName: System.Globalization.PersianCalendar.GetMonthsInYear(System.Int32, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/PersianCalendar.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetMonthsInYear\n    path: src/mscorlib/src/System/Globalization/PersianCalendar.cs\n    startLine: 425\n  assemblies:\n  - System.Globalization.Calendars\n  namespace: System.Globalization\n  summary: \"\\n<p>Returns the number of months in the specified year of the specified era.</p>\\n\"\n  syntax:\n    content: public override int GetMonthsInYear(int year, int era)\n    content.vb: Public Overrides Function GetMonthsInYear(year As Integer, era As Integer) As Integer\n    parameters:\n    - id: year\n      type: System.Int32\n      description: \"\\n<p>An integer from 1 through 9378 that represents the year. </p>\\n\"\n    - id: era\n      type: System.Int32\n      description: \"\\n<p>An integer from 0 through 1 that represents the era. </p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>Returns 10 if the <em>year</em> parameter is 9378; otherwise, always returns 12.</p>\\n\"\n  overridden: System.Globalization.Calendar.GetMonthsInYear(System.Int32,System.Int32)\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>year</em> or <em>era</em> is outside the range supported by this calendar. </p>\\n\"\n  seealso:\n  - type: System.Globalization.PersianCalendar.GetMonth(System.DateTime)\n    commentId: M:System.Globalization.PersianCalendar.GetMonth(System.DateTime)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: PersianCalendar.GetMonthsInYear(Int32, Int32)\n- uid: System.Globalization.PersianCalendar.GetYear(System.DateTime)\n  commentId: M:System.Globalization.PersianCalendar.GetYear(System.DateTime)\n  id: GetYear(System.DateTime)\n  parent: System.Globalization.PersianCalendar\n  langs:\n  - csharp\n  - vb\n  name: GetYear(DateTime)\n  fullName: System.Globalization.PersianCalendar.GetYear(System.DateTime)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/PersianCalendar.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetYear\n    path: src/mscorlib/src/System/Globalization/PersianCalendar.cs\n    startLine: 438\n  assemblies:\n  - System.Globalization.Calendars\n  namespace: System.Globalization\n  summary: \"\\n<p>Returns the year in the specified <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public override int GetYear(DateTime time)\n    content.vb: Public Overrides Function GetYear(time As Date) As Integer\n    parameters:\n    - id: time\n      type: System.DateTime\n      description: \"\\n<p>The <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to read. </p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>An integer from 1 through 9378 that represents the year in the specified <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  overridden: System.Globalization.Calendar.GetYear(System.DateTime)\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The <em>time</em> parameter represents a date less than <xref href=\\\"System.Globalization.PersianCalendar.MinSupportedDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or greater than <xref href=\\\"System.Globalization.PersianCalendar.MaxSupportedDateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  seealso:\n  - type: System.DateTime.Year\n    commentId: P:System.DateTime.Year\n  - type: System.Globalization.PersianCalendar.GetDayOfYear(System.DateTime)\n    commentId: M:System.Globalization.PersianCalendar.GetDayOfYear(System.DateTime)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: PersianCalendar.GetYear(DateTime)\n- uid: System.Globalization.PersianCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)\n  commentId: M:System.Globalization.PersianCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)\n  id: IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)\n  parent: System.Globalization.PersianCalendar\n  langs:\n  - csharp\n  - vb\n  name: IsLeapDay(Int32, Int32, Int32, Int32)\n  fullName: System.Globalization.PersianCalendar.IsLeapDay(System.Int32, System.Int32, System.Int32, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/PersianCalendar.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: IsLeapDay\n    path: src/mscorlib/src/System/Globalization/PersianCalendar.cs\n    startLine: 447\n  assemblies:\n  - System.Globalization.Calendars\n  namespace: System.Globalization\n  summary: \"\\n<p>Determines whether the specified date is a leap day.</p>\\n\"\n  syntax:\n    content: public override bool IsLeapDay(int year, int month, int day, int era)\n    content.vb: Public Overrides Function IsLeapDay(year As Integer, month As Integer, day As Integer, era As Integer) As Boolean\n    parameters:\n    - id: year\n      type: System.Int32\n      description: \"\\n<p>An integer from 1 through 9378 that represents the year. </p>\\n\"\n    - id: month\n      type: System.Int32\n      description: \"\\n<p>An integer that represents the month and ranges from 1 through 12 if <em>year</em> is not 9378, or 1 through 10 if <em>year</em> is 9378.</p>\\n\"\n    - id: day\n      type: System.Int32\n      description: \"\\n<p>An integer from 1 through 31 that represents the day. </p>\\n\"\n    - id: era\n      type: System.Int32\n      description: \"\\n<p>An integer from 0 through 1 that represents the era. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the specified day is a leap day; otherwise, <strong>false</strong>.</p>\\n\"\n  overridden: System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>year</em>, <em>month</em>, <em>day</em>, or <em>era</em> is outside the range supported by this calendar. </p>\\n\"\n  seealso:\n  - type: System.Globalization.PersianCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)\n    commentId: M:System.Globalization.PersianCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)\n  - type: System.Globalization.PersianCalendar.IsLeapYear(System.Int32,System.Int32)\n    commentId: M:System.Globalization.PersianCalendar.IsLeapYear(System.Int32,System.Int32)\n  - type: System.Globalization.PersianCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)\n    commentId: M:System.Globalization.PersianCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: PersianCalendar.IsLeapDay(Int32, Int32, Int32, Int32)\n- uid: System.Globalization.PersianCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)\n  commentId: M:System.Globalization.PersianCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)\n  id: IsLeapMonth(System.Int32,System.Int32,System.Int32)\n  parent: System.Globalization.PersianCalendar\n  langs:\n  - csharp\n  - vb\n  name: IsLeapMonth(Int32, Int32, Int32)\n  fullName: System.Globalization.PersianCalendar.IsLeapMonth(System.Int32, System.Int32, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/PersianCalendar.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: IsLeapMonth\n    path: src/mscorlib/src/System/Globalization/PersianCalendar.cs\n    startLine: 478\n  assemblies:\n  - System.Globalization.Calendars\n  namespace: System.Globalization\n  summary: \"\\n<p>Determines whether the specified month in the specified year and era is a leap month.</p>\\n\"\n  syntax:\n    content: public override bool IsLeapMonth(int year, int month, int era)\n    content.vb: Public Overrides Function IsLeapMonth(year As Integer, month As Integer, era As Integer) As Boolean\n    parameters:\n    - id: year\n      type: System.Int32\n      description: \"\\n<p>An integer from 1 through 9378 that represents the year. </p>\\n\"\n    - id: month\n      type: System.Int32\n      description: \"\\n<p>An integer that represents the month and ranges from 1 through 12 if <em>year</em> is not 9378, or 1 through 10 if <em>year</em> is 9378.</p>\\n\"\n    - id: era\n      type: System.Int32\n      description: \"\\n<p>An integer from 0 through 1 that represents the era. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>Always returns <strong>false</strong> because the <xref href=\\\"System.Globalization.PersianCalendar\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class does not support the notion of a leap month.</p>\\n\"\n  overridden: System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>year</em>, <em>month</em>, or <em>era</em> is outside the range supported by this calendar. </p>\\n\"\n  seealso:\n  - type: System.Globalization.PersianCalendar.IsLeapYear(System.Int32,System.Int32)\n    commentId: M:System.Globalization.PersianCalendar.IsLeapYear(System.Int32,System.Int32)\n  - type: System.Globalization.PersianCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)\n    commentId: M:System.Globalization.PersianCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: PersianCalendar.IsLeapMonth(Int32, Int32, Int32)\n- uid: System.Globalization.PersianCalendar.IsLeapYear(System.Int32,System.Int32)\n  commentId: M:System.Globalization.PersianCalendar.IsLeapYear(System.Int32,System.Int32)\n  id: IsLeapYear(System.Int32,System.Int32)\n  parent: System.Globalization.PersianCalendar\n  langs:\n  - csharp\n  - vb\n  name: IsLeapYear(Int32, Int32)\n  fullName: System.Globalization.PersianCalendar.IsLeapYear(System.Int32, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/PersianCalendar.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: IsLeapYear\n    path: src/mscorlib/src/System/Globalization/PersianCalendar.cs\n    startLine: 487\n  assemblies:\n  - System.Globalization.Calendars\n  namespace: System.Globalization\n  summary: \"\\n<p>Determines whether the specified year in the specified era is a leap year.</p>\\n\"\n  syntax:\n    content: public override bool IsLeapYear(int year, int era)\n    content.vb: Public Overrides Function IsLeapYear(year As Integer, era As Integer) As Boolean\n    parameters:\n    - id: year\n      type: System.Int32\n      description: \"\\n<p>An integer from 1 through 9378 that represents the year. </p>\\n\"\n    - id: era\n      type: System.Int32\n      description: \"\\n<p>An integer from 0 through 1 that represents the era. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the specified year is a leap year; otherwise, <strong>false</strong>.</p>\\n\"\n  overridden: System.Globalization.Calendar.IsLeapYear(System.Int32,System.Int32)\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>year</em> or <em>era</em> is outside the range supported by this calendar. </p>\\n\"\n  seealso:\n  - type: System.Globalization.PersianCalendar.PersianEra\n    commentId: F:System.Globalization.PersianCalendar.PersianEra\n  - type: System.Globalization.PersianCalendar.Eras\n    commentId: P:System.Globalization.PersianCalendar.Eras\n  - type: System.Globalization.PersianCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)\n    commentId: M:System.Globalization.PersianCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)\n  - type: System.Globalization.PersianCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)\n    commentId: M:System.Globalization.PersianCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: PersianCalendar.IsLeapYear(Int32, Int32)\n- uid: System.Globalization.PersianCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n  commentId: M:System.Globalization.PersianCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n  id: ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n  parent: System.Globalization.PersianCalendar\n  langs:\n  - csharp\n  - vb\n  name: ToDateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32)\n  fullName: System.Globalization.PersianCalendar.ToDateTime(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/PersianCalendar.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ToDateTime\n    path: src/mscorlib/src/System/Globalization/PersianCalendar.cs\n    startLine: 502\n  assemblies:\n  - System.Globalization.Calendars\n  namespace: System.Globalization\n  summary: \"\\n<p>Returns a <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that is set to the specified date, time, and era.</p>\\n\"\n  syntax:\n    content: public override DateTime ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era)\n    content.vb: Public Overrides Function ToDateTime(year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, millisecond As Integer, era As Integer) As Date\n    parameters:\n    - id: year\n      type: System.Int32\n      description: \"\\n<p>An integer from 1 through 9378 that represents the year. </p>\\n\"\n    - id: month\n      type: System.Int32\n      description: \"\\n<p>An integer from 1 through 12 that represents the month. </p>\\n\"\n    - id: day\n      type: System.Int32\n      description: \"\\n<p>An integer from 1 through 31 that represents the day. </p>\\n\"\n    - id: hour\n      type: System.Int32\n      description: \"\\n<p>An integer from 0 through 23 that represents the hour. </p>\\n\"\n    - id: minute\n      type: System.Int32\n      description: \"\\n<p>An integer from 0 through 59 that represents the minute. </p>\\n\"\n    - id: second\n      type: System.Int32\n      description: \"\\n<p>An integer from 0 through 59 that represents the second. </p>\\n\"\n    - id: millisecond\n      type: System.Int32\n      description: \"\\n<p>An integer from 0 through 999 that represents the millisecond. </p>\\n\"\n    - id: era\n      type: System.Int32\n      description: \"\\n<p>An integer from 0 through 1 that represents the era. </p>\\n\"\n    return:\n      type: System.DateTime\n      description: \"\\n<p>A <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that is set to the specified date and time in the current era.</p>\\n\"\n  overridden: System.Globalization.Calendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>year</em>, <em>month</em>, <em>day</em>, <em>hour</em>, <em>minute</em>, <em>second</em>, <em>millisecond</em>, or <em>era</em> is outside the range supported by this calendar.</p>\\n\"\n  seealso:\n  - type: System.DateTime\n    commentId: T:System.DateTime\n  - type: System.Globalization.Calendar.CurrentEra\n    commentId: F:System.Globalization.Calendar.CurrentEra\n  - type: System.Globalization.PersianCalendar.PersianEra\n    commentId: F:System.Globalization.PersianCalendar.PersianEra\n  - type: System.Globalization.PersianCalendar.Eras\n    commentId: P:System.Globalization.PersianCalendar.Eras\n  - type: System.Globalization.PersianCalendar.GetMonthsInYear(System.Int32,System.Int32)\n    commentId: M:System.Globalization.PersianCalendar.GetMonthsInYear(System.Int32,System.Int32)\n  - type: System.Globalization.PersianCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)\n    commentId: M:System.Globalization.PersianCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: PersianCalendar.ToDateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32)\n- uid: System.Globalization.PersianCalendar.ToFourDigitYear(System.Int32)\n  commentId: M:System.Globalization.PersianCalendar.ToFourDigitYear(System.Int32)\n  id: ToFourDigitYear(System.Int32)\n  parent: System.Globalization.PersianCalendar\n  langs:\n  - csharp\n  - vb\n  name: ToFourDigitYear(Int32)\n  fullName: System.Globalization.PersianCalendar.ToFourDigitYear(System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/PersianCalendar.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ToFourDigitYear\n    path: src/mscorlib/src/System/Globalization/PersianCalendar.cs\n    startLine: 553\n  assemblies:\n  - System.Globalization.Calendars\n  namespace: System.Globalization\n  summary: \"\\n<p>Converts the specified year to a four-digit year representation.</p>\\n\"\n  syntax:\n    content: public override int ToFourDigitYear(int year)\n    content.vb: Public Overrides Function ToFourDigitYear(year As Integer) As Integer\n    parameters:\n    - id: year\n      type: System.Int32\n      description: \"\\n<p>An integer from 1 through 9378 that represents the year to convert. </p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>An integer that contains the four-digit representation of <em>year</em>.</p>\\n\"\n  overridden: System.Globalization.Calendar.ToFourDigitYear(System.Int32)\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>year</em> is less than 0 or greater than 9378. </p>\\n\"\n  seealso:\n  - type: System.Globalization.PersianCalendar.TwoDigitYearMax\n    commentId: P:System.Globalization.PersianCalendar.TwoDigitYearMax\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: PersianCalendar.ToFourDigitYear(Int32)\nreferences:\n- uid: System.Globalization\n  isExternal: false\n  name: System.Globalization\n  fullName: System.Globalization\n  nameWithType: System.Globalization\n  commentId: N:System.Globalization\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Globalization.Calendar\n  parent: System.Globalization\n  isExternal: false\n  name: Calendar\n  fullName: System.Globalization.Calendar\n  nameWithType: Calendar\n  commentId: T:System.Globalization.Calendar\n- uid: System.ICloneable\n  parent: System\n  isExternal: true\n  name: ICloneable\n  fullName: System.ICloneable\n  nameWithType: ICloneable\n  commentId: T:System.ICloneable\n- uid: System.Globalization.Calendar.CurrentEra\n  parent: System.Globalization.Calendar\n  isExternal: true\n  name: CurrentEra\n  fullName: System.Globalization.Calendar.CurrentEra\n  nameWithType: Calendar.CurrentEra\n  commentId: F:System.Globalization.Calendar.CurrentEra\n- uid: System.Globalization.Calendar.Clone\n  parent: System.Globalization.Calendar\n  isExternal: true\n  name: Clone()\n  fullName: System.Globalization.Calendar.Clone()\n  spec.csharp:\n  - uid: System.Globalization.Calendar.Clone\n    name: Clone\n    fullName: System.Globalization.Calendar.Clone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Globalization.Calendar.Clone\n    name: Clone\n    fullName: System.Globalization.Calendar.Clone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Calendar.Clone()\n  commentId: M:System.Globalization.Calendar.Clone\n- uid: System.Globalization.Calendar.ReadOnly(System.Globalization.Calendar)\n  parent: System.Globalization.Calendar\n  isExternal: true\n  name: ReadOnly(Calendar)\n  fullName: System.Globalization.Calendar.ReadOnly(System.Globalization.Calendar)\n  spec.csharp:\n  - uid: System.Globalization.Calendar.ReadOnly(System.Globalization.Calendar)\n    name: ReadOnly\n    fullName: System.Globalization.Calendar.ReadOnly\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Globalization.Calendar\n    name: Calendar\n    fullName: System.Globalization.Calendar\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Globalization.Calendar.ReadOnly(System.Globalization.Calendar)\n    name: ReadOnly\n    fullName: System.Globalization.Calendar.ReadOnly\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Globalization.Calendar\n    name: Calendar\n    fullName: System.Globalization.Calendar\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Calendar.ReadOnly(Calendar)\n  commentId: M:System.Globalization.Calendar.ReadOnly(System.Globalization.Calendar)\n- uid: System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)\n  parent: System.Globalization.Calendar\n  isExternal: true\n  name: AddMilliseconds(DateTime, Double)\n  fullName: System.Globalization.Calendar.AddMilliseconds(System.DateTime, System.Double)\n  spec.csharp:\n  - uid: System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)\n    name: AddMilliseconds\n    fullName: System.Globalization.Calendar.AddMilliseconds\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.DateTime\n    name: DateTime\n    fullName: System.DateTime\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)\n    name: AddMilliseconds\n    fullName: System.Globalization.Calendar.AddMilliseconds\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.DateTime\n    name: DateTime\n    fullName: System.DateTime\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Calendar.AddMilliseconds(DateTime, Double)\n  commentId: M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)\n- uid: System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)\n  parent: System.Globalization.Calendar\n  isExternal: true\n  name: AddDays(DateTime, Int32)\n  fullName: System.Globalization.Calendar.AddDays(System.DateTime, System.Int32)\n  spec.csharp:\n  - uid: System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)\n    name: AddDays\n    fullName: System.Globalization.Calendar.AddDays\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.DateTime\n    name: DateTime\n    fullName: System.DateTime\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)\n    name: AddDays\n    fullName: System.Globalization.Calendar.AddDays\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.DateTime\n    name: DateTime\n    fullName: System.DateTime\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Calendar.AddDays(DateTime, Int32)\n  commentId: M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)\n- uid: System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)\n  parent: System.Globalization.Calendar\n  isExternal: true\n  name: AddHours(DateTime, Int32)\n  fullName: System.Globalization.Calendar.AddHours(System.DateTime, System.Int32)\n  spec.csharp:\n  - uid: System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)\n    name: AddHours\n    fullName: System.Globalization.Calendar.AddHours\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.DateTime\n    name: DateTime\n    fullName: System.DateTime\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)\n    name: AddHours\n    fullName: System.Globalization.Calendar.AddHours\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.DateTime\n    name: DateTime\n    fullName: System.DateTime\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Calendar.AddHours(DateTime, Int32)\n  commentId: M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)\n- uid: System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)\n  parent: System.Globalization.Calendar\n  isExternal: true\n  name: AddMinutes(DateTime, Int32)\n  fullName: System.Globalization.Calendar.AddMinutes(System.DateTime, System.Int32)\n  spec.csharp:\n  - uid: System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)\n    name: AddMinutes\n    fullName: System.Globalization.Calendar.AddMinutes\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.DateTime\n    name: DateTime\n    fullName: System.DateTime\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)\n    name: AddMinutes\n    fullName: System.Globalization.Calendar.AddMinutes\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.DateTime\n    name: DateTime\n    fullName: System.DateTime\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Calendar.AddMinutes(DateTime, Int32)\n  commentId: M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)\n- uid: System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)\n  parent: System.Globalization.Calendar\n  isExternal: true\n  name: AddSeconds(DateTime, Int32)\n  fullName: System.Globalization.Calendar.AddSeconds(System.DateTime, System.Int32)\n  spec.csharp:\n  - uid: System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)\n    name: AddSeconds\n    fullName: System.Globalization.Calendar.AddSeconds\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.DateTime\n    name: DateTime\n    fullName: System.DateTime\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)\n    name: AddSeconds\n    fullName: System.Globalization.Calendar.AddSeconds\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.DateTime\n    name: DateTime\n    fullName: System.DateTime\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Calendar.AddSeconds(DateTime, Int32)\n  commentId: M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)\n- uid: System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)\n  parent: System.Globalization.Calendar\n  isExternal: true\n  name: AddWeeks(DateTime, Int32)\n  fullName: System.Globalization.Calendar.AddWeeks(System.DateTime, System.Int32)\n  spec.csharp:\n  - uid: System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)\n    name: AddWeeks\n    fullName: System.Globalization.Calendar.AddWeeks\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.DateTime\n    name: DateTime\n    fullName: System.DateTime\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)\n    name: AddWeeks\n    fullName: System.Globalization.Calendar.AddWeeks\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.DateTime\n    name: DateTime\n    fullName: System.DateTime\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Calendar.AddWeeks(DateTime, Int32)\n  commentId: M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)\n- uid: System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)\n  parent: System.Globalization.Calendar\n  isExternal: true\n  name: GetDaysInMonth(Int32, Int32)\n  fullName: System.Globalization.Calendar.GetDaysInMonth(System.Int32, System.Int32)\n  spec.csharp:\n  - uid: System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)\n    name: GetDaysInMonth\n    fullName: System.Globalization.Calendar.GetDaysInMonth\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)\n    name: GetDaysInMonth\n    fullName: System.Globalization.Calendar.GetDaysInMonth\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Calendar.GetDaysInMonth(Int32, Int32)\n  commentId: M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)\n- uid: System.Globalization.Calendar.GetDaysInYear(System.Int32)\n  parent: System.Globalization.Calendar\n  isExternal: true\n  name: GetDaysInYear(Int32)\n  fullName: System.Globalization.Calendar.GetDaysInYear(System.Int32)\n  spec.csharp:\n  - uid: System.Globalization.Calendar.GetDaysInYear(System.Int32)\n    name: GetDaysInYear\n    fullName: System.Globalization.Calendar.GetDaysInYear\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Globalization.Calendar.GetDaysInYear(System.Int32)\n    name: GetDaysInYear\n    fullName: System.Globalization.Calendar.GetDaysInYear\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Calendar.GetDaysInYear(Int32)\n  commentId: M:System.Globalization.Calendar.GetDaysInYear(System.Int32)\n- uid: System.Globalization.Calendar.GetHour(System.DateTime)\n  parent: System.Globalization.Calendar\n  isExternal: true\n  name: GetHour(DateTime)\n  fullName: System.Globalization.Calendar.GetHour(System.DateTime)\n  spec.csharp:\n  - uid: System.Globalization.Calendar.GetHour(System.DateTime)\n    name: GetHour\n    fullName: System.Globalization.Calendar.GetHour\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.DateTime\n    name: DateTime\n    fullName: System.DateTime\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Globalization.Calendar.GetHour(System.DateTime)\n    name: GetHour\n    fullName: System.Globalization.Calendar.GetHour\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.DateTime\n    name: DateTime\n    fullName: System.DateTime\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Calendar.GetHour(DateTime)\n  commentId: M:System.Globalization.Calendar.GetHour(System.DateTime)\n- uid: System.Globalization.Calendar.GetMilliseconds(System.DateTime)\n  parent: System.Globalization.Calendar\n  isExternal: true\n  name: GetMilliseconds(DateTime)\n  fullName: System.Globalization.Calendar.GetMilliseconds(System.DateTime)\n  spec.csharp:\n  - uid: System.Globalization.Calendar.GetMilliseconds(System.DateTime)\n    name: GetMilliseconds\n    fullName: System.Globalization.Calendar.GetMilliseconds\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.DateTime\n    name: DateTime\n    fullName: System.DateTime\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Globalization.Calendar.GetMilliseconds(System.DateTime)\n    name: GetMilliseconds\n    fullName: System.Globalization.Calendar.GetMilliseconds\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.DateTime\n    name: DateTime\n    fullName: System.DateTime\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Calendar.GetMilliseconds(DateTime)\n  commentId: M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)\n- uid: System.Globalization.Calendar.GetMinute(System.DateTime)\n  parent: System.Globalization.Calendar\n  isExternal: true\n  name: GetMinute(DateTime)\n  fullName: System.Globalization.Calendar.GetMinute(System.DateTime)\n  spec.csharp:\n  - uid: System.Globalization.Calendar.GetMinute(System.DateTime)\n    name: GetMinute\n    fullName: System.Globalization.Calendar.GetMinute\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.DateTime\n    name: DateTime\n    fullName: System.DateTime\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Globalization.Calendar.GetMinute(System.DateTime)\n    name: GetMinute\n    fullName: System.Globalization.Calendar.GetMinute\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.DateTime\n    name: DateTime\n    fullName: System.DateTime\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Calendar.GetMinute(DateTime)\n  commentId: M:System.Globalization.Calendar.GetMinute(System.DateTime)\n- uid: System.Globalization.Calendar.GetMonthsInYear(System.Int32)\n  parent: System.Globalization.Calendar\n  isExternal: true\n  name: GetMonthsInYear(Int32)\n  fullName: System.Globalization.Calendar.GetMonthsInYear(System.Int32)\n  spec.csharp:\n  - uid: System.Globalization.Calendar.GetMonthsInYear(System.Int32)\n    name: GetMonthsInYear\n    fullName: System.Globalization.Calendar.GetMonthsInYear\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Globalization.Calendar.GetMonthsInYear(System.Int32)\n    name: GetMonthsInYear\n    fullName: System.Globalization.Calendar.GetMonthsInYear\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Calendar.GetMonthsInYear(Int32)\n  commentId: M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)\n- uid: System.Globalization.Calendar.GetSecond(System.DateTime)\n  parent: System.Globalization.Calendar\n  isExternal: true\n  name: GetSecond(DateTime)\n  fullName: System.Globalization.Calendar.GetSecond(System.DateTime)\n  spec.csharp:\n  - uid: System.Globalization.Calendar.GetSecond(System.DateTime)\n    name: GetSecond\n    fullName: System.Globalization.Calendar.GetSecond\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.DateTime\n    name: DateTime\n    fullName: System.DateTime\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Globalization.Calendar.GetSecond(System.DateTime)\n    name: GetSecond\n    fullName: System.Globalization.Calendar.GetSecond\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.DateTime\n    name: DateTime\n    fullName: System.DateTime\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Calendar.GetSecond(DateTime)\n  commentId: M:System.Globalization.Calendar.GetSecond(System.DateTime)\n- uid: System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)\n  parent: System.Globalization.Calendar\n  isExternal: true\n  name: GetWeekOfYear(DateTime, CalendarWeekRule, DayOfWeek)\n  fullName: System.Globalization.Calendar.GetWeekOfYear(System.DateTime, System.Globalization.CalendarWeekRule, System.DayOfWeek)\n  spec.csharp:\n  - uid: System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)\n    name: GetWeekOfYear\n    fullName: System.Globalization.Calendar.GetWeekOfYear\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.DateTime\n    name: DateTime\n    fullName: System.DateTime\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Globalization.CalendarWeekRule\n    name: CalendarWeekRule\n    fullName: System.Globalization.CalendarWeekRule\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.DayOfWeek\n    name: DayOfWeek\n    fullName: System.DayOfWeek\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)\n    name: GetWeekOfYear\n    fullName: System.Globalization.Calendar.GetWeekOfYear\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.DateTime\n    name: DateTime\n    fullName: System.DateTime\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Globalization.CalendarWeekRule\n    name: CalendarWeekRule\n    fullName: System.Globalization.CalendarWeekRule\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.DayOfWeek\n    name: DayOfWeek\n    fullName: System.DayOfWeek\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Calendar.GetWeekOfYear(DateTime, CalendarWeekRule, DayOfWeek)\n  commentId: M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)\n- uid: System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)\n  parent: System.Globalization.Calendar\n  isExternal: true\n  name: IsLeapDay(Int32, Int32, Int32)\n  fullName: System.Globalization.Calendar.IsLeapDay(System.Int32, System.Int32, System.Int32)\n  spec.csharp:\n  - uid: System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)\n    name: IsLeapDay\n    fullName: System.Globalization.Calendar.IsLeapDay\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)\n    name: IsLeapDay\n    fullName: System.Globalization.Calendar.IsLeapDay\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Calendar.IsLeapDay(Int32, Int32, Int32)\n  commentId: M:System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)\n- uid: System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)\n  parent: System.Globalization.Calendar\n  isExternal: true\n  name: IsLeapMonth(Int32, Int32)\n  fullName: System.Globalization.Calendar.IsLeapMonth(System.Int32, System.Int32)\n  spec.csharp:\n  - uid: System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)\n    name: IsLeapMonth\n    fullName: System.Globalization.Calendar.IsLeapMonth\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)\n    name: IsLeapMonth\n    fullName: System.Globalization.Calendar.IsLeapMonth\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Calendar.IsLeapMonth(Int32, Int32)\n  commentId: M:System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)\n- uid: System.Globalization.Calendar.GetLeapMonth(System.Int32)\n  parent: System.Globalization.Calendar\n  isExternal: true\n  name: GetLeapMonth(Int32)\n  fullName: System.Globalization.Calendar.GetLeapMonth(System.Int32)\n  spec.csharp:\n  - uid: System.Globalization.Calendar.GetLeapMonth(System.Int32)\n    name: GetLeapMonth\n    fullName: System.Globalization.Calendar.GetLeapMonth\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Globalization.Calendar.GetLeapMonth(System.Int32)\n    name: GetLeapMonth\n    fullName: System.Globalization.Calendar.GetLeapMonth\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Calendar.GetLeapMonth(Int32)\n  commentId: M:System.Globalization.Calendar.GetLeapMonth(System.Int32)\n- uid: System.Globalization.Calendar.IsLeapYear(System.Int32)\n  parent: System.Globalization.Calendar\n  isExternal: true\n  name: IsLeapYear(Int32)\n  fullName: System.Globalization.Calendar.IsLeapYear(System.Int32)\n  spec.csharp:\n  - uid: System.Globalization.Calendar.IsLeapYear(System.Int32)\n    name: IsLeapYear\n    fullName: System.Globalization.Calendar.IsLeapYear\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Globalization.Calendar.IsLeapYear(System.Int32)\n    name: IsLeapYear\n    fullName: System.Globalization.Calendar.IsLeapYear\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Calendar.IsLeapYear(Int32)\n  commentId: M:System.Globalization.Calendar.IsLeapYear(System.Int32)\n- uid: System.Globalization.Calendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n  parent: System.Globalization.Calendar\n  isExternal: true\n  name: ToDateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32)\n  fullName: System.Globalization.Calendar.ToDateTime(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)\n  spec.csharp:\n  - uid: System.Globalization.Calendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n    name: ToDateTime\n    fullName: System.Globalization.Calendar.ToDateTime\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Globalization.Calendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n    name: ToDateTime\n    fullName: System.Globalization.Calendar.ToDateTime\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Calendar.ToDateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32)\n  commentId: M:System.Globalization.Calendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n- uid: System.Globalization.Calendar.AlgorithmType\n  parent: System.Globalization.Calendar\n  isExternal: true\n  name: AlgorithmType\n  fullName: System.Globalization.Calendar.AlgorithmType\n  nameWithType: Calendar.AlgorithmType\n  commentId: P:System.Globalization.Calendar.AlgorithmType\n- uid: System.Globalization.Calendar.IsReadOnly\n  parent: System.Globalization.Calendar\n  isExternal: true\n  name: IsReadOnly\n  fullName: System.Globalization.Calendar.IsReadOnly\n  nameWithType: Calendar.IsReadOnly\n  commentId: P:System.Globalization.Calendar.IsReadOnly\n- uid: System.Globalization.Calendar.DaysInYearBeforeMinSupportedYear\n  parent: System.Globalization.Calendar\n  isExternal: true\n  name: DaysInYearBeforeMinSupportedYear\n  fullName: System.Globalization.Calendar.DaysInYearBeforeMinSupportedYear\n  nameWithType: Calendar.DaysInYearBeforeMinSupportedYear\n  commentId: P:System.Globalization.Calendar.DaysInYearBeforeMinSupportedYear\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Globalization.Calendar.Eras\n  parent: System.Globalization.Calendar\n  isExternal: true\n  name: Eras\n  fullName: System.Globalization.Calendar.Eras\n  nameWithType: Calendar.Eras\n  commentId: P:System.Globalization.Calendar.Eras\n- uid: System.Int32[]\n  name: Int32[]\n  fullName: System.Int32[]\n  fullname.vb: System.Int32()\n  name.vb: Int32()\n  spec.csharp:\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: Int32[]\n  nameWithType.vb: Int32()\n- uid: System.Globalization.Calendar.MaxSupportedDateTime\n  parent: System.Globalization.Calendar\n  isExternal: true\n  name: MaxSupportedDateTime\n  fullName: System.Globalization.Calendar.MaxSupportedDateTime\n  nameWithType: Calendar.MaxSupportedDateTime\n  commentId: P:System.Globalization.Calendar.MaxSupportedDateTime\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  fullName: System.DateTime\n  nameWithType: DateTime\n  commentId: T:System.DateTime\n- uid: System.Globalization.Calendar.MinSupportedDateTime\n  parent: System.Globalization.Calendar\n  isExternal: true\n  name: MinSupportedDateTime\n  fullName: System.Globalization.Calendar.MinSupportedDateTime\n  nameWithType: Calendar.MinSupportedDateTime\n  commentId: P:System.Globalization.Calendar.MinSupportedDateTime\n- uid: System.Globalization.Calendar.TwoDigitYearMax\n  parent: System.Globalization.Calendar\n  isExternal: true\n  name: TwoDigitYearMax\n  fullName: System.Globalization.Calendar.TwoDigitYearMax\n  nameWithType: Calendar.TwoDigitYearMax\n  commentId: P:System.Globalization.Calendar.TwoDigitYearMax\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)\n  parent: System.Globalization.Calendar\n  isExternal: true\n  name: AddMonths(DateTime, Int32)\n  fullName: System.Globalization.Calendar.AddMonths(System.DateTime, System.Int32)\n  spec.csharp:\n  - uid: System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)\n    name: AddMonths\n    fullName: System.Globalization.Calendar.AddMonths\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.DateTime\n    name: DateTime\n    fullName: System.DateTime\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)\n    name: AddMonths\n    fullName: System.Globalization.Calendar.AddMonths\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.DateTime\n    name: DateTime\n    fullName: System.DateTime\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Calendar.AddMonths(DateTime, Int32)\n  commentId: M:System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)\n- uid: System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)\n  parent: System.Globalization.Calendar\n  isExternal: true\n  name: AddYears(DateTime, Int32)\n  fullName: System.Globalization.Calendar.AddYears(System.DateTime, System.Int32)\n  spec.csharp:\n  - uid: System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)\n    name: AddYears\n    fullName: System.Globalization.Calendar.AddYears\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.DateTime\n    name: DateTime\n    fullName: System.DateTime\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)\n    name: AddYears\n    fullName: System.Globalization.Calendar.AddYears\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.DateTime\n    name: DateTime\n    fullName: System.DateTime\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Calendar.AddYears(DateTime, Int32)\n  commentId: M:System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)\n- uid: System.Globalization.Calendar.GetDayOfMonth(System.DateTime)\n  parent: System.Globalization.Calendar\n  isExternal: true\n  name: GetDayOfMonth(DateTime)\n  fullName: System.Globalization.Calendar.GetDayOfMonth(System.DateTime)\n  spec.csharp:\n  - uid: System.Globalization.Calendar.GetDayOfMonth(System.DateTime)\n    name: GetDayOfMonth\n    fullName: System.Globalization.Calendar.GetDayOfMonth\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.DateTime\n    name: DateTime\n    fullName: System.DateTime\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Globalization.Calendar.GetDayOfMonth(System.DateTime)\n    name: GetDayOfMonth\n    fullName: System.Globalization.Calendar.GetDayOfMonth\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.DateTime\n    name: DateTime\n    fullName: System.DateTime\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Calendar.GetDayOfMonth(DateTime)\n  commentId: M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)\n- uid: System.Globalization.Calendar.GetDayOfWeek(System.DateTime)\n  parent: System.Globalization.Calendar\n  isExternal: true\n  name: GetDayOfWeek(DateTime)\n  fullName: System.Globalization.Calendar.GetDayOfWeek(System.DateTime)\n  spec.csharp:\n  - uid: System.Globalization.Calendar.GetDayOfWeek(System.DateTime)\n    name: GetDayOfWeek\n    fullName: System.Globalization.Calendar.GetDayOfWeek\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.DateTime\n    name: DateTime\n    fullName: System.DateTime\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Globalization.Calendar.GetDayOfWeek(System.DateTime)\n    name: GetDayOfWeek\n    fullName: System.Globalization.Calendar.GetDayOfWeek\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.DateTime\n    name: DateTime\n    fullName: System.DateTime\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Calendar.GetDayOfWeek(DateTime)\n  commentId: M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)\n- uid: System.DayOfWeek\n  parent: System\n  isExternal: false\n  name: DayOfWeek\n  fullName: System.DayOfWeek\n  nameWithType: DayOfWeek\n  commentId: T:System.DayOfWeek\n- uid: System.Globalization.Calendar.GetDayOfYear(System.DateTime)\n  parent: System.Globalization.Calendar\n  isExternal: true\n  name: GetDayOfYear(DateTime)\n  fullName: System.Globalization.Calendar.GetDayOfYear(System.DateTime)\n  spec.csharp:\n  - uid: System.Globalization.Calendar.GetDayOfYear(System.DateTime)\n    name: GetDayOfYear\n    fullName: System.Globalization.Calendar.GetDayOfYear\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.DateTime\n    name: DateTime\n    fullName: System.DateTime\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Globalization.Calendar.GetDayOfYear(System.DateTime)\n    name: GetDayOfYear\n    fullName: System.Globalization.Calendar.GetDayOfYear\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.DateTime\n    name: DateTime\n    fullName: System.DateTime\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Calendar.GetDayOfYear(DateTime)\n  commentId: M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)\n- uid: System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)\n  parent: System.Globalization.Calendar\n  isExternal: true\n  name: GetDaysInMonth(Int32, Int32, Int32)\n  fullName: System.Globalization.Calendar.GetDaysInMonth(System.Int32, System.Int32, System.Int32)\n  spec.csharp:\n  - uid: System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)\n    name: GetDaysInMonth\n    fullName: System.Globalization.Calendar.GetDaysInMonth\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)\n    name: GetDaysInMonth\n    fullName: System.Globalization.Calendar.GetDaysInMonth\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Calendar.GetDaysInMonth(Int32, Int32, Int32)\n  commentId: M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)\n- uid: System.Globalization.Calendar.GetDaysInYear(System.Int32,System.Int32)\n  parent: System.Globalization.Calendar\n  isExternal: true\n  name: GetDaysInYear(Int32, Int32)\n  fullName: System.Globalization.Calendar.GetDaysInYear(System.Int32, System.Int32)\n  spec.csharp:\n  - uid: System.Globalization.Calendar.GetDaysInYear(System.Int32,System.Int32)\n    name: GetDaysInYear\n    fullName: System.Globalization.Calendar.GetDaysInYear\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Globalization.Calendar.GetDaysInYear(System.Int32,System.Int32)\n    name: GetDaysInYear\n    fullName: System.Globalization.Calendar.GetDaysInYear\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Calendar.GetDaysInYear(Int32, Int32)\n  commentId: M:System.Globalization.Calendar.GetDaysInYear(System.Int32,System.Int32)\n- uid: System.Globalization.Calendar.GetEra(System.DateTime)\n  parent: System.Globalization.Calendar\n  isExternal: true\n  name: GetEra(DateTime)\n  fullName: System.Globalization.Calendar.GetEra(System.DateTime)\n  spec.csharp:\n  - uid: System.Globalization.Calendar.GetEra(System.DateTime)\n    name: GetEra\n    fullName: System.Globalization.Calendar.GetEra\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.DateTime\n    name: DateTime\n    fullName: System.DateTime\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Globalization.Calendar.GetEra(System.DateTime)\n    name: GetEra\n    fullName: System.Globalization.Calendar.GetEra\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.DateTime\n    name: DateTime\n    fullName: System.DateTime\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Calendar.GetEra(DateTime)\n  commentId: M:System.Globalization.Calendar.GetEra(System.DateTime)\n- uid: System.Globalization.Calendar.GetLeapMonth(System.Int32,System.Int32)\n  parent: System.Globalization.Calendar\n  isExternal: true\n  name: GetLeapMonth(Int32, Int32)\n  fullName: System.Globalization.Calendar.GetLeapMonth(System.Int32, System.Int32)\n  spec.csharp:\n  - uid: System.Globalization.Calendar.GetLeapMonth(System.Int32,System.Int32)\n    name: GetLeapMonth\n    fullName: System.Globalization.Calendar.GetLeapMonth\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Globalization.Calendar.GetLeapMonth(System.Int32,System.Int32)\n    name: GetLeapMonth\n    fullName: System.Globalization.Calendar.GetLeapMonth\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Calendar.GetLeapMonth(Int32, Int32)\n  commentId: M:System.Globalization.Calendar.GetLeapMonth(System.Int32,System.Int32)\n- uid: System.Globalization.Calendar.GetMonth(System.DateTime)\n  parent: System.Globalization.Calendar\n  isExternal: true\n  name: GetMonth(DateTime)\n  fullName: System.Globalization.Calendar.GetMonth(System.DateTime)\n  spec.csharp:\n  - uid: System.Globalization.Calendar.GetMonth(System.DateTime)\n    name: GetMonth\n    fullName: System.Globalization.Calendar.GetMonth\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.DateTime\n    name: DateTime\n    fullName: System.DateTime\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Globalization.Calendar.GetMonth(System.DateTime)\n    name: GetMonth\n    fullName: System.Globalization.Calendar.GetMonth\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.DateTime\n    name: DateTime\n    fullName: System.DateTime\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Calendar.GetMonth(DateTime)\n  commentId: M:System.Globalization.Calendar.GetMonth(System.DateTime)\n- uid: System.Globalization.Calendar.GetMonthsInYear(System.Int32,System.Int32)\n  parent: System.Globalization.Calendar\n  isExternal: true\n  name: GetMonthsInYear(Int32, Int32)\n  fullName: System.Globalization.Calendar.GetMonthsInYear(System.Int32, System.Int32)\n  spec.csharp:\n  - uid: System.Globalization.Calendar.GetMonthsInYear(System.Int32,System.Int32)\n    name: GetMonthsInYear\n    fullName: System.Globalization.Calendar.GetMonthsInYear\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Globalization.Calendar.GetMonthsInYear(System.Int32,System.Int32)\n    name: GetMonthsInYear\n    fullName: System.Globalization.Calendar.GetMonthsInYear\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Calendar.GetMonthsInYear(Int32, Int32)\n  commentId: M:System.Globalization.Calendar.GetMonthsInYear(System.Int32,System.Int32)\n- uid: System.Globalization.Calendar.GetYear(System.DateTime)\n  parent: System.Globalization.Calendar\n  isExternal: true\n  name: GetYear(DateTime)\n  fullName: System.Globalization.Calendar.GetYear(System.DateTime)\n  spec.csharp:\n  - uid: System.Globalization.Calendar.GetYear(System.DateTime)\n    name: GetYear\n    fullName: System.Globalization.Calendar.GetYear\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.DateTime\n    name: DateTime\n    fullName: System.DateTime\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Globalization.Calendar.GetYear(System.DateTime)\n    name: GetYear\n    fullName: System.Globalization.Calendar.GetYear\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.DateTime\n    name: DateTime\n    fullName: System.DateTime\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Calendar.GetYear(DateTime)\n  commentId: M:System.Globalization.Calendar.GetYear(System.DateTime)\n- uid: System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)\n  parent: System.Globalization.Calendar\n  isExternal: true\n  name: IsLeapDay(Int32, Int32, Int32, Int32)\n  fullName: System.Globalization.Calendar.IsLeapDay(System.Int32, System.Int32, System.Int32, System.Int32)\n  spec.csharp:\n  - uid: System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)\n    name: IsLeapDay\n    fullName: System.Globalization.Calendar.IsLeapDay\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)\n    name: IsLeapDay\n    fullName: System.Globalization.Calendar.IsLeapDay\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Calendar.IsLeapDay(Int32, Int32, Int32, Int32)\n  commentId: M:System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)\n  parent: System.Globalization.Calendar\n  isExternal: true\n  name: IsLeapMonth(Int32, Int32, Int32)\n  fullName: System.Globalization.Calendar.IsLeapMonth(System.Int32, System.Int32, System.Int32)\n  spec.csharp:\n  - uid: System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)\n    name: IsLeapMonth\n    fullName: System.Globalization.Calendar.IsLeapMonth\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)\n    name: IsLeapMonth\n    fullName: System.Globalization.Calendar.IsLeapMonth\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Calendar.IsLeapMonth(Int32, Int32, Int32)\n  commentId: M:System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)\n- uid: System.Globalization.Calendar.IsLeapYear(System.Int32,System.Int32)\n  parent: System.Globalization.Calendar\n  isExternal: true\n  name: IsLeapYear(Int32, Int32)\n  fullName: System.Globalization.Calendar.IsLeapYear(System.Int32, System.Int32)\n  spec.csharp:\n  - uid: System.Globalization.Calendar.IsLeapYear(System.Int32,System.Int32)\n    name: IsLeapYear\n    fullName: System.Globalization.Calendar.IsLeapYear\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Globalization.Calendar.IsLeapYear(System.Int32,System.Int32)\n    name: IsLeapYear\n    fullName: System.Globalization.Calendar.IsLeapYear\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Calendar.IsLeapYear(Int32, Int32)\n  commentId: M:System.Globalization.Calendar.IsLeapYear(System.Int32,System.Int32)\n- uid: System.Globalization.Calendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n  parent: System.Globalization.Calendar\n  isExternal: true\n  name: ToDateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32)\n  fullName: System.Globalization.Calendar.ToDateTime(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)\n  spec.csharp:\n  - uid: System.Globalization.Calendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n    name: ToDateTime\n    fullName: System.Globalization.Calendar.ToDateTime\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Globalization.Calendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n    name: ToDateTime\n    fullName: System.Globalization.Calendar.ToDateTime\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Calendar.ToDateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32)\n  commentId: M:System.Globalization.Calendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n- uid: System.Globalization.Calendar.ToFourDigitYear(System.Int32)\n  parent: System.Globalization.Calendar\n  isExternal: true\n  name: ToFourDigitYear(Int32)\n  fullName: System.Globalization.Calendar.ToFourDigitYear(System.Int32)\n  spec.csharp:\n  - uid: System.Globalization.Calendar.ToFourDigitYear(System.Int32)\n    name: ToFourDigitYear\n    fullName: System.Globalization.Calendar.ToFourDigitYear\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Globalization.Calendar.ToFourDigitYear(System.Int32)\n    name: ToFourDigitYear\n    fullName: System.Globalization.Calendar.ToFourDigitYear\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Calendar.ToFourDigitYear(Int32)\n  commentId: M:System.Globalization.Calendar.ToFourDigitYear(System.Int32)\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  fullName: System.InvalidOperationException\n  nameWithType: InvalidOperationException\n  commentId: T:System.InvalidOperationException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  commentId: T:System.ArgumentOutOfRangeException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n"}