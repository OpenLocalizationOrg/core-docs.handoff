{"nodes":[{"pos":[2245,2261],"content":"NumberFormatInfo","needQuote":true,"nodes":[{"content":"NumberFormatInfo","pos":[0,16]}]},{"pos":[3986,4004],"content":"NumberFormatInfo()","needQuote":true,"nodes":[{"content":"NumberFormatInfo()","pos":[0,18]}]},{"pos":[5086,5107],"content":"CurrencyDecimalDigits","needQuote":true,"nodes":[{"content":"CurrencyDecimalDigits","pos":[0,21]}]},{"content":"\\n&lt;p&gt;The property is being set to a value that is less than 0 or greater than 99.","pos":[6185,6266],"source":"\\n<p>The property is being set to a value that is less than 0 or greater than 99."},{"content":"&lt;/p&gt;\\n","pos":[6267,6273],"source":" </p>\\n"},{"pos":[8120,8144],"content":"CurrencyDecimalSeparator","needQuote":true,"nodes":[{"content":"CurrencyDecimalSeparator","pos":[0,24]}]},{"content":"\\n&lt;p&gt;The property is being set to &lt;strong&gt;null&lt;/strong&gt;.","pos":[9243,9299],"source":"\\n<p>The property is being set to <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[9300,9306],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The property is being set to an empty string.&lt;/p&gt;\\n","pos":[9680,9736],"source":"\\n<p>The property is being set to an empty string.</p>\\n"},{"pos":[11309,11331],"content":"CurrencyGroupSeparator","needQuote":true,"nodes":[{"content":"CurrencyGroupSeparator","pos":[0,22]}]},{"content":"\\n&lt;p&gt;The property is being set to &lt;strong&gt;null&lt;/strong&gt;.","pos":[12476,12532],"source":"\\n<p>The property is being set to <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[12533,12539],"source":" </p>\\n"},{"pos":[14371,14389],"content":"CurrencyGroupSizes","needQuote":true,"nodes":[{"content":"CurrencyGroupSizes","pos":[0,18]}]},{"content":"\\n&lt;p&gt;The property is being set to &lt;strong&gt;null&lt;/strong&gt;.","pos":[15564,15620],"source":"\\n<p>The property is being set to <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[15621,15627],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The property is being set and the array contains an entry that is less than 0 or greater than 9.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;The property is being set and the array contains an entry, other than the last entry, that is set to 0.","pos":[15724,15951],"source":"\\n<p>The property is being set and the array contains an entry that is less than 0 or greater than 9.</p>\\n<p>-or- </p>\\n<p>The property is being set and the array contains an entry, other than the last entry, that is set to 0."},{"content":"&lt;/p&gt;\\n","pos":[15952,15958],"source":" </p>\\n"},{"pos":[17793,17816],"content":"CurrencyNegativePattern","needQuote":true,"nodes":[{"content":"CurrencyNegativePattern","pos":[0,23]}]},{"content":"\\n&lt;p&gt;The property is being set to a value that is less than 0 or greater than 15.","pos":[19075,19156],"source":"\\n<p>The property is being set to a value that is less than 0 or greater than 15."},{"content":"&lt;/p&gt;\\n","pos":[19157,19163],"source":" </p>\\n"},{"pos":[21013,21036],"content":"CurrencyPositivePattern","needQuote":true,"nodes":[{"content":"CurrencyPositivePattern","pos":[0,23]}]},{"content":"\\n&lt;p&gt;The property is being set to a value that is less than 0 or greater than 3.","pos":[22293,22373],"source":"\\n<p>The property is being set to a value that is less than 0 or greater than 3."},{"content":"&lt;/p&gt;\\n","pos":[22374,22380],"source":" </p>\\n"},{"pos":[24056,24070],"content":"CurrencySymbol","needQuote":true,"nodes":[{"content":"CurrencySymbol","pos":[0,14]}]},{"content":"\\n&lt;p&gt;The property is being set to &lt;strong&gt;null&lt;/strong&gt;.","pos":[25088,25144],"source":"\\n<p>The property is being set to <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[25145,25151],"source":" </p>\\n"},{"pos":[27065,27076],"content":"CurrentInfo","needQuote":true,"nodes":[{"content":"CurrentInfo","pos":[0,11]}]},{"pos":[28708,28721],"content":"InvariantInfo","needQuote":true,"nodes":[{"content":"InvariantInfo","pos":[0,13]}]},{"content":"\\n&lt;p&gt;A read-only  object that is culture-independent (invariant).&lt;/p&gt;\\n","pos":[29595,29666],"source":"\\n<p>A read-only  object that is culture-independent (invariant).</p>\\n"},{"pos":[30036,30046],"content":"IsReadOnly","needQuote":true,"nodes":[{"content":"IsReadOnly","pos":[0,10]}]},{"pos":[31587,31596],"content":"NaNSymbol","needQuote":true,"nodes":[{"content":"NaNSymbol","pos":[0,9]}]},{"content":"\\n&lt;p&gt;The property is being set to &lt;strong&gt;null&lt;/strong&gt;.","pos":[32635,32691],"source":"\\n<p>The property is being set to <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[32692,32698],"source":" </p>\\n"},{"pos":[33659,33681],"content":"NegativeInfinitySymbol","needQuote":true,"nodes":[{"content":"NegativeInfinitySymbol","pos":[0,22]}]},{"content":"\\n&lt;p&gt;The property is being set to &lt;strong&gt;null&lt;/strong&gt;.","pos":[34746,34802],"source":"\\n<p>The property is being set to <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[34803,34809],"source":" </p>\\n"},{"pos":[35727,35739],"content":"NegativeSign","needQuote":true,"nodes":[{"content":"NegativeSign","pos":[0,12]}]},{"content":"\\n&lt;p&gt;The property is being set to &lt;strong&gt;null&lt;/strong&gt;.","pos":[36792,36848],"source":"\\n<p>The property is being set to <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[36849,36855],"source":" </p>\\n"},{"pos":[37641,37660],"content":"NumberDecimalDigits","needQuote":true,"nodes":[{"content":"NumberDecimalDigits","pos":[0,19]}]},{"content":"\\n&lt;p&gt;The property is being set to a value that is less than 0 or greater than 99.","pos":[38728,38809],"source":"\\n<p>The property is being set to a value that is less than 0 or greater than 99."},{"content":"&lt;/p&gt;\\n","pos":[38810,38816],"source":" </p>\\n"},{"pos":[40482,40504],"content":"NumberDecimalSeparator","needQuote":true,"nodes":[{"content":"NumberDecimalSeparator","pos":[0,22]}]},{"content":"\\n&lt;p&gt;The property is being set to &lt;strong&gt;null&lt;/strong&gt;.","pos":[41593,41649],"source":"\\n<p>The property is being set to <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[41650,41656],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The property is being set to an empty string.&lt;/p&gt;\\n","pos":[42030,42086],"source":"\\n<p>The property is being set to an empty string.</p>\\n"},{"pos":[43478,43498],"content":"NumberGroupSeparator","needQuote":true,"nodes":[{"content":"NumberGroupSeparator","pos":[0,20]}]},{"content":"\\n&lt;p&gt;The property is being set to &lt;strong&gt;null&lt;/strong&gt;.","pos":[44633,44689],"source":"\\n<p>The property is being set to <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[44690,44696],"source":" </p>\\n"},{"pos":[46347,46363],"content":"NumberGroupSizes","needQuote":true,"nodes":[{"content":"NumberGroupSizes","pos":[0,16]}]},{"content":"\\n&lt;p&gt;The property is being set to &lt;strong&gt;null&lt;/strong&gt;.","pos":[47528,47584],"source":"\\n<p>The property is being set to <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[47585,47591],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The property is being set and the array contains an entry that is less than 0 or greater than 9.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;The property is being set and the array contains an entry, other than the last entry, that is set to 0.","pos":[47688,47915],"source":"\\n<p>The property is being set and the array contains an entry that is less than 0 or greater than 9.</p>\\n<p>-or- </p>\\n<p>The property is being set and the array contains an entry, other than the last entry, that is set to 0."},{"content":"&lt;/p&gt;\\n","pos":[47916,47922],"source":" </p>\\n"},{"pos":[49576,49597],"content":"NumberNegativePattern","needQuote":true,"nodes":[{"content":"NumberNegativePattern","pos":[0,21]}]},{"content":"\\n&lt;p&gt;The format pattern for negative numeric values.","pos":[50336,50388],"source":"\\n<p>The format pattern for negative numeric values."},{"content":"&lt;/p&gt;\\n","pos":[50389,50395],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The property is being set to a value that is less than 0 or greater than 4.","pos":[50526,50606],"source":"\\n<p>The property is being set to a value that is less than 0 or greater than 4."},{"content":"&lt;/p&gt;\\n","pos":[50607,50613],"source":" </p>\\n"},{"pos":[52279,52299],"content":"PercentDecimalDigits","needQuote":true,"nodes":[{"content":"PercentDecimalDigits","pos":[0,20]}]},{"content":"\\n&lt;p&gt;The property is being set to a value that is less than 0 or greater than 99.","pos":[53372,53453],"source":"\\n<p>The property is being set to a value that is less than 0 or greater than 99."},{"content":"&lt;/p&gt;\\n","pos":[53454,53460],"source":" </p>\\n"},{"pos":[55293,55316],"content":"PercentDecimalSeparator","needQuote":true,"nodes":[{"content":"PercentDecimalSeparator","pos":[0,23]}]},{"content":"\\n&lt;p&gt;The property is being set to &lt;strong&gt;null&lt;/strong&gt;.","pos":[56410,56466],"source":"\\n<p>The property is being set to <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[56467,56473],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The property is being set to an empty string.&lt;/p&gt;\\n","pos":[56847,56903],"source":"\\n<p>The property is being set to an empty string.</p>\\n"},{"pos":[58462,58483],"content":"PercentGroupSeparator","needQuote":true,"nodes":[{"content":"PercentGroupSeparator","pos":[0,21]}]},{"content":"\\n&lt;p&gt;The property is being set to &lt;strong&gt;null&lt;/strong&gt;.","pos":[59623,59679],"source":"\\n<p>The property is being set to <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[59680,59686],"source":" </p>\\n"},{"pos":[61504,61521],"content":"PercentGroupSizes","needQuote":true,"nodes":[{"content":"PercentGroupSizes","pos":[0,17]}]},{"content":"\\n&lt;p&gt;The property is being set to &lt;strong&gt;null&lt;/strong&gt;.","pos":[62691,62747],"source":"\\n<p>The property is being set to <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[62748,62754],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The property is being set and the array contains an entry that is less than 0 or greater than 9.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;The property is being set and the array contains an entry, other than the last entry, that is set to 0.","pos":[62851,63078],"source":"\\n<p>The property is being set and the array contains an entry that is less than 0 or greater than 9.</p>\\n<p>-or- </p>\\n<p>The property is being set and the array contains an entry, other than the last entry, that is set to 0."},{"content":"&lt;/p&gt;\\n","pos":[63079,63085],"source":" </p>\\n"},{"pos":[64906,64928],"content":"PercentNegativePattern","needQuote":true,"nodes":[{"content":"PercentNegativePattern","pos":[0,22]}]},{"content":"\\n&lt;p&gt;The property is being set to a value that is less than 0 or greater than 11.","pos":[66180,66261],"source":"\\n<p>The property is being set to a value that is less than 0 or greater than 11."},{"content":"&lt;/p&gt;\\n","pos":[66262,66268],"source":" </p>\\n"},{"pos":[68104,68126],"content":"PercentPositivePattern","needQuote":true,"nodes":[{"content":"PercentPositivePattern","pos":[0,22]}]},{"content":"\\n&lt;p&gt;The property is being set to a value that is less than 0 or greater than 3.","pos":[69377,69457],"source":"\\n<p>The property is being set to a value that is less than 0 or greater than 3."},{"content":"&lt;/p&gt;\\n","pos":[69458,69464],"source":" </p>\\n"},{"pos":[71126,71139],"content":"PercentSymbol","needQuote":true,"nodes":[{"content":"PercentSymbol","pos":[0,13]}]},{"content":"\\n&lt;p&gt;The property is being set to &lt;strong&gt;null&lt;/strong&gt;.","pos":[72150,72206],"source":"\\n<p>The property is being set to <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[72207,72213],"source":" </p>\\n"},{"pos":[74125,74139],"content":"PerMilleSymbol","needQuote":true,"nodes":[{"content":"PerMilleSymbol","pos":[0,14]}]},{"content":"\\n&lt;p&gt;The property is being set to &lt;strong&gt;null&lt;/strong&gt;.","pos":[75197,75253],"source":"\\n<p>The property is being set to <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[75254,75260],"source":" </p>\\n"},{"pos":[76315,76337],"content":"PositiveInfinitySymbol","needQuote":true,"nodes":[{"content":"PositiveInfinitySymbol","pos":[0,22]}]},{"content":"\\n&lt;p&gt;The property is being set to &lt;strong&gt;null&lt;/strong&gt;.","pos":[77401,77457],"source":"\\n<p>The property is being set to <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[77458,77464],"source":" </p>\\n"},{"pos":[78382,78394],"content":"PositiveSign","needQuote":true,"nodes":[{"content":"PositiveSign","pos":[0,12]}]},{"content":"\\n&lt;p&gt;In a set operation, the value to be assigned is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[79447,79528],"source":"\\n<p>In a set operation, the value to be assigned is <strong>null</strong>.</p>\\n"},{"pos":[80272,80279],"content":"Clone()","needQuote":true,"nodes":[{"content":"Clone()","pos":[0,7]}]},{"pos":[81847,81862],"content":"GetFormat(Type)","needQuote":true,"nodes":[{"content":"GetFormat(Type)","pos":[0,15]}]},{"pos":[83817,83845],"content":"GetInstance(IFormatProvider)","needQuote":true,"nodes":[{"content":"GetInstance(IFormatProvider)","pos":[0,28]}]},{"pos":[86081,86107],"content":"ReadOnly(NumberFormatInfo)","needQuote":true,"nodes":[{"content":"ReadOnly(NumberFormatInfo)","pos":[0,26]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;nfi&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[87464,87509],"source":"\\n<p>\\n<em>nfi</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[87510,87516],"source":" </p>\\n"},{"pos":[87862,87882],"content":"System.Globalization","needQuote":true,"nodes":[{"content":"System.Globalization","pos":[0,20]}]},{"pos":[88055,88061],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[88215,88230],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[88417,88427],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[88522,88530],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[88599,88600],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[88627,88628],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[88698,88706],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[88775,88776],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[88803,88804],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[88987,89001],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[89120,89126],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[89193,89194],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[89244,89250],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[89310,89311],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[89394,89400],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[89467,89468],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[89518,89524],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[89584,89585],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[89799,89821],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[89969,89975],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[90042,90043],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[90093,90099],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[90160,90161]},{"pos":[90216,90222],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[90282,90283],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[90380,90386],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[90453,90454],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[90504,90510],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[90571,90572]},{"pos":[90627,90633],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[90693,90694],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[90939,90970],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[91136,91151],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[91227,91228],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[91278,91284],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[91345,91346]},{"pos":[91401,91407],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[91467,91468],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[91574,91589],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[91665,91666],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[91716,91722],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[91783,91784]},{"pos":[91839,91845],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[91905,91906],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[92136,92149],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[92250,92261],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[92333,92334],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[92361,92362],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[92435,92446],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[92518,92519],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[92546,92547],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[92722,92731],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[92824,92831],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[92899,92900],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[92927,92928],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[92997,93004],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[93072,93073],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[93100,93101],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[93276,93293],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[93402,93417],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[93493,93494],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[93521,93522],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[93599,93614],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[93690,93691],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[93718,93719],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[93864,93870],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[94000,94005],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[94147,94153],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[94262,94269],"content":"Int32[]","needQuote":true,"nodes":[{"content":"Int32[]","pos":[0,7]}]},{"pos":[94393,94398],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":"[]","pos":[94458,94460]},{"pos":[94524,94529],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[94588,94590],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[94763,94779],"content":"NumberFormatInfo","needQuote":true,"nodes":[{"content":"NumberFormatInfo","pos":[0,16]}]},{"pos":[94983,94990],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[95185,95200],"content":"GetFormat(Type)","needQuote":true,"nodes":[{"content":"GetFormat(Type)","pos":[0,15]}]},{"pos":[95339,95348],"content":"GetFormat","needQuote":true,"nodes":[{"content":"GetFormat","pos":[0,9]}]},{"pos":[95427,95428],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[95476,95480],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[95538,95539],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[95632,95641],"content":"GetFormat","needQuote":true,"nodes":[{"content":"GetFormat","pos":[0,9]}]},{"pos":[95720,95721],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[95769,95773],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[95831,95832],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[96022,96026],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[96169,96196],"content":"ArgumentOutOfRangeException","needQuote":true,"nodes":[{"content":"ArgumentOutOfRangeException","pos":[0,27]}]},{"pos":[96423,96448],"content":"InvalidOperationException","needQuote":true,"nodes":[{"content":"InvalidOperationException","pos":[0,25]}]},{"pos":[96648,96669],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[96870,96887],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]}],"content":"items:\n- uid: System.Globalization.NumberFormatInfo\n  commentId: T:System.Globalization.NumberFormatInfo\n  id: NumberFormatInfo\n  parent: System.Globalization\n  children:\n  - System.Globalization.NumberFormatInfo.#ctor\n  - System.Globalization.NumberFormatInfo.Clone\n  - System.Globalization.NumberFormatInfo.CurrencyDecimalDigits\n  - System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator\n  - System.Globalization.NumberFormatInfo.CurrencyGroupSeparator\n  - System.Globalization.NumberFormatInfo.CurrencyGroupSizes\n  - System.Globalization.NumberFormatInfo.CurrencyNegativePattern\n  - System.Globalization.NumberFormatInfo.CurrencyPositivePattern\n  - System.Globalization.NumberFormatInfo.CurrencySymbol\n  - System.Globalization.NumberFormatInfo.CurrentInfo\n  - System.Globalization.NumberFormatInfo.GetFormat(System.Type)\n  - System.Globalization.NumberFormatInfo.GetInstance(System.IFormatProvider)\n  - System.Globalization.NumberFormatInfo.InvariantInfo\n  - System.Globalization.NumberFormatInfo.IsReadOnly\n  - System.Globalization.NumberFormatInfo.NaNSymbol\n  - System.Globalization.NumberFormatInfo.NegativeInfinitySymbol\n  - System.Globalization.NumberFormatInfo.NegativeSign\n  - System.Globalization.NumberFormatInfo.NumberDecimalDigits\n  - System.Globalization.NumberFormatInfo.NumberDecimalSeparator\n  - System.Globalization.NumberFormatInfo.NumberGroupSeparator\n  - System.Globalization.NumberFormatInfo.NumberGroupSizes\n  - System.Globalization.NumberFormatInfo.NumberNegativePattern\n  - System.Globalization.NumberFormatInfo.PercentDecimalDigits\n  - System.Globalization.NumberFormatInfo.PercentDecimalSeparator\n  - System.Globalization.NumberFormatInfo.PercentGroupSeparator\n  - System.Globalization.NumberFormatInfo.PercentGroupSizes\n  - System.Globalization.NumberFormatInfo.PercentNegativePattern\n  - System.Globalization.NumberFormatInfo.PercentPositivePattern\n  - System.Globalization.NumberFormatInfo.PercentSymbol\n  - System.Globalization.NumberFormatInfo.PerMilleSymbol\n  - System.Globalization.NumberFormatInfo.PositiveInfinitySymbol\n  - System.Globalization.NumberFormatInfo.PositiveSign\n  - System.Globalization.NumberFormatInfo.ReadOnly(System.Globalization.NumberFormatInfo)\n  langs:\n  - csharp\n  - vb\n  name: NumberFormatInfo\n  fullName: System.Globalization.NumberFormatInfo\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: NumberFormatInfo\n    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs\n    startLine: 42\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Provides culture-specific information for formatting and parsing numeric values. </p>\\n\"\n  syntax:\n    content: >-\n      [Serializable]\n\n      [ComVisible(true)]\n\n      public sealed class NumberFormatInfo : ICloneable, IFormatProvider\n    content.vb: >-\n      <Serializable>\n\n      <ComVisible(True)>\n\n      Public NotInheritable Class NumberFormatInfo\n          Implements ICloneable, IFormatProvider\n  seealso:\n  - type: System.Globalization.CultureInfo\n    commentId: T:System.Globalization.CultureInfo\n  - type: System.IFormatProvider\n    commentId: T:System.IFormatProvider\n  inheritance:\n  - System.Object\n  implements:\n  - System.IFormatProvider\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: NumberFormatInfo\n- uid: System.Globalization.NumberFormatInfo.#ctor\n  commentId: M:System.Globalization.NumberFormatInfo.#ctor\n  id: '#ctor'\n  parent: System.Globalization.NumberFormatInfo\n  langs:\n  - csharp\n  - vb\n  name: NumberFormatInfo()\n  fullName: System.Globalization.NumberFormatInfo.NumberFormatInfo()\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs\n    startLine: 109\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Initializes a new writable instance of the <xref href=\\\"System.Globalization.NumberFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class that is culture-independent (invariant).</p>\\n\"\n  syntax:\n    content: public NumberFormatInfo()\n    content.vb: Public Sub New\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: NumberFormatInfo.NumberFormatInfo()\n- uid: System.Globalization.NumberFormatInfo.CurrencyDecimalDigits\n  commentId: P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits\n  id: CurrencyDecimalDigits\n  parent: System.Globalization.NumberFormatInfo\n  langs:\n  - csharp\n  - vb\n  name: CurrencyDecimalDigits\n  fullName: System.Globalization.NumberFormatInfo.CurrencyDecimalDigits\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: CurrencyDecimalDigits\n    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs\n    startLine: 319\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets or sets the number of decimal places to use in currency values.</p>\\n\"\n  syntax:\n    content: public int CurrencyDecimalDigits { get; set; }\n    content.vb: Public Property CurrencyDecimalDigits As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The number of decimal places to use in currency values. The default for <xref href=\\\"System.Globalization.NumberFormatInfo.InvariantInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is 2.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The property is being set to a value that is less than 0 or greater than 99. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The property is being set and the <xref href=\\\"System.Globalization.NumberFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is read-only. </p>\\n\"\n  seealso:\n  - type: System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator\n    commentId: P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator\n  - type: System.Globalization.NumberFormatInfo.CurrencyGroupSeparator\n    commentId: P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator\n  - type: System.Globalization.NumberFormatInfo.CurrencyGroupSizes\n    commentId: P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes\n  - type: System.Globalization.NumberFormatInfo.CurrencySymbol\n    commentId: P:System.Globalization.NumberFormatInfo.CurrencySymbol\n  - type: System.Globalization.NumberFormatInfo.CurrencyNegativePattern\n    commentId: P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern\n  - type: System.Globalization.NumberFormatInfo.CurrencyPositivePattern\n    commentId: P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern\n  - type: System.Globalization.NumberFormatInfo.NumberDecimalDigits\n    commentId: P:System.Globalization.NumberFormatInfo.NumberDecimalDigits\n  - type: System.Globalization.NumberFormatInfo.PercentDecimalDigits\n    commentId: P:System.Globalization.NumberFormatInfo.PercentDecimalDigits\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: NumberFormatInfo.CurrencyDecimalDigits\n- uid: System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator\n  commentId: P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator\n  id: CurrencyDecimalSeparator\n  parent: System.Globalization.NumberFormatInfo\n  langs:\n  - csharp\n  - vb\n  name: CurrencyDecimalSeparator\n  fullName: System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: CurrencyDecimalSeparator\n    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs\n    startLine: 338\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets or sets the string to use as the decimal separator in currency values.</p>\\n\"\n  syntax:\n    content: public string CurrencyDecimalSeparator { get; set; }\n    content.vb: Public Property CurrencyDecimalSeparator As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The string to use as the decimal separator in currency values. The default for <xref href=\\\"System.Globalization.NumberFormatInfo.InvariantInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is \\\".\\\".</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The property is being set to <strong>null</strong>. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The property is being set and the <xref href=\\\"System.Globalization.NumberFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is read-only. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The property is being set to an empty string.</p>\\n\"\n  seealso:\n  - type: System.Globalization.NumberFormatInfo.CurrencyDecimalDigits\n    commentId: P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits\n  - type: System.Globalization.NumberFormatInfo.CurrencyGroupSeparator\n    commentId: P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator\n  - type: System.Globalization.NumberFormatInfo.CurrencyGroupSizes\n    commentId: P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes\n  - type: System.Globalization.NumberFormatInfo.CurrencySymbol\n    commentId: P:System.Globalization.NumberFormatInfo.CurrencySymbol\n  - type: System.Globalization.NumberFormatInfo.CurrencyNegativePattern\n    commentId: P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern\n  - type: System.Globalization.NumberFormatInfo.CurrencyPositivePattern\n    commentId: P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern\n  - type: System.Globalization.NumberFormatInfo.NumberDecimalSeparator\n    commentId: P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator\n  - type: System.Globalization.NumberFormatInfo.PercentDecimalSeparator\n    commentId: P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: NumberFormatInfo.CurrencyDecimalSeparator\n- uid: System.Globalization.NumberFormatInfo.CurrencyGroupSeparator\n  commentId: P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator\n  id: CurrencyGroupSeparator\n  parent: System.Globalization.NumberFormatInfo\n  langs:\n  - csharp\n  - vb\n  name: CurrencyGroupSeparator\n  fullName: System.Globalization.NumberFormatInfo.CurrencyGroupSeparator\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: CurrencyGroupSeparator\n    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs\n    startLine: 437\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets or sets the string that separates groups of digits to the left of the decimal in currency values.</p>\\n\"\n  syntax:\n    content: public string CurrencyGroupSeparator { get; set; }\n    content.vb: Public Property CurrencyGroupSeparator As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The string that separates groups of digits to the left of the decimal in currency values. The default for <xref href=\\\"System.Globalization.NumberFormatInfo.InvariantInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is \\\",\\\".</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The property is being set to <strong>null</strong>. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The property is being set and the <xref href=\\\"System.Globalization.NumberFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is read-only. </p>\\n\"\n  seealso:\n  - type: System.Globalization.NumberFormatInfo.CurrencyDecimalDigits\n    commentId: P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits\n  - type: System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator\n    commentId: P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator\n  - type: System.Globalization.NumberFormatInfo.CurrencyGroupSizes\n    commentId: P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes\n  - type: System.Globalization.NumberFormatInfo.CurrencySymbol\n    commentId: P:System.Globalization.NumberFormatInfo.CurrencySymbol\n  - type: System.Globalization.NumberFormatInfo.CurrencyNegativePattern\n    commentId: P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern\n  - type: System.Globalization.NumberFormatInfo.CurrencyPositivePattern\n    commentId: P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern\n  - type: System.Globalization.NumberFormatInfo.NumberGroupSeparator\n    commentId: P:System.Globalization.NumberFormatInfo.NumberGroupSeparator\n  - type: System.Globalization.NumberFormatInfo.PercentGroupSeparator\n    commentId: P:System.Globalization.NumberFormatInfo.PercentGroupSeparator\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: NumberFormatInfo.CurrencyGroupSeparator\n- uid: System.Globalization.NumberFormatInfo.CurrencyGroupSizes\n  commentId: P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes\n  id: CurrencyGroupSizes\n  parent: System.Globalization.NumberFormatInfo\n  langs:\n  - csharp\n  - vb\n  name: CurrencyGroupSizes\n  fullName: System.Globalization.NumberFormatInfo.CurrencyGroupSizes\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: CurrencyGroupSizes\n    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs\n    startLine: 378\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets or sets the number of digits in each group to the left of the decimal in currency values.</p>\\n\"\n  syntax:\n    content: public int[] CurrencyGroupSizes { get; set; }\n    content.vb: Public Property CurrencyGroupSizes As Integer()\n    parameters: []\n    return:\n      type: System.Int32[]\n      description: \"\\n<p>The number of digits in each group to the left of the decimal in currency values. The default for <xref href=\\\"System.Globalization.NumberFormatInfo.InvariantInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is a one-dimensional array with only one element, which is set to 3.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The property is being set to <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The property is being set and the array contains an entry that is less than 0 or greater than 9.</p>\\n<p>-or- </p>\\n<p>The property is being set and the array contains an entry, other than the last entry, that is set to 0. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The property is being set and the <xref href=\\\"System.Globalization.NumberFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is read-only. </p>\\n\"\n  seealso:\n  - type: System.Globalization.NumberFormatInfo.CurrencyDecimalDigits\n    commentId: P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits\n  - type: System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator\n    commentId: P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator\n  - type: System.Globalization.NumberFormatInfo.CurrencyGroupSeparator\n    commentId: P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator\n  - type: System.Globalization.NumberFormatInfo.CurrencySymbol\n    commentId: P:System.Globalization.NumberFormatInfo.CurrencySymbol\n  - type: System.Globalization.NumberFormatInfo.CurrencyNegativePattern\n    commentId: P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern\n  - type: System.Globalization.NumberFormatInfo.CurrencyPositivePattern\n    commentId: P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern\n  - type: System.Globalization.NumberFormatInfo.NumberGroupSizes\n    commentId: P:System.Globalization.NumberFormatInfo.NumberGroupSizes\n  - type: System.Globalization.NumberFormatInfo.PercentGroupSizes\n    commentId: P:System.Globalization.NumberFormatInfo.PercentGroupSizes\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: NumberFormatInfo.CurrencyGroupSizes\n- uid: System.Globalization.NumberFormatInfo.CurrencyNegativePattern\n  commentId: P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern\n  id: CurrencyNegativePattern\n  parent: System.Globalization.NumberFormatInfo\n  langs:\n  - csharp\n  - vb\n  name: CurrencyNegativePattern\n  fullName: System.Globalization.NumberFormatInfo.CurrencyNegativePattern\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: CurrencyNegativePattern\n    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs\n    startLine: 494\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets or sets the format pattern for negative currency values.</p>\\n\"\n  syntax:\n    content: public int CurrencyNegativePattern { get; set; }\n    content.vb: Public Property CurrencyNegativePattern As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The format pattern for negative currency values. The default for <xref href=\\\"System.Globalization.NumberFormatInfo.InvariantInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is 0, which represents \\\"($n)\\\", where \\\"$\\\" is the <xref href=\\\"System.Globalization.NumberFormatInfo.CurrencySymbol\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and <em>n</em> is a number.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The property is being set to a value that is less than 0 or greater than 15. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The property is being set and the <xref href=\\\"System.Globalization.NumberFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is read-only. </p>\\n\"\n  seealso:\n  - type: System.Globalization.NumberFormatInfo.CurrencyDecimalDigits\n    commentId: P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits\n  - type: System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator\n    commentId: P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator\n  - type: System.Globalization.NumberFormatInfo.CurrencyGroupSeparator\n    commentId: P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator\n  - type: System.Globalization.NumberFormatInfo.CurrencyGroupSizes\n    commentId: P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes\n  - type: System.Globalization.NumberFormatInfo.CurrencySymbol\n    commentId: P:System.Globalization.NumberFormatInfo.CurrencySymbol\n  - type: System.Globalization.NumberFormatInfo.CurrencyPositivePattern\n    commentId: P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern\n  - type: System.Globalization.NumberFormatInfo.NumberNegativePattern\n    commentId: P:System.Globalization.NumberFormatInfo.NumberNegativePattern\n  - type: System.Globalization.NumberFormatInfo.PercentNegativePattern\n    commentId: P:System.Globalization.NumberFormatInfo.PercentNegativePattern\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: NumberFormatInfo.CurrencyNegativePattern\n- uid: System.Globalization.NumberFormatInfo.CurrencyPositivePattern\n  commentId: P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern\n  id: CurrencyPositivePattern\n  parent: System.Globalization.NumberFormatInfo\n  langs:\n  - csharp\n  - vb\n  name: CurrencyPositivePattern\n  fullName: System.Globalization.NumberFormatInfo.CurrencyPositivePattern\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: CurrencyPositivePattern\n    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs\n    startLine: 648\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets or sets the format pattern for positive currency values.</p>\\n\"\n  syntax:\n    content: public int CurrencyPositivePattern { get; set; }\n    content.vb: Public Property CurrencyPositivePattern As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The format pattern for positive currency values. The default for <xref href=\\\"System.Globalization.NumberFormatInfo.InvariantInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is 0, which represents \\\"$n\\\", where \\\"$\\\" is the <xref href=\\\"System.Globalization.NumberFormatInfo.CurrencySymbol\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and <em>n</em> is a number.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The property is being set to a value that is less than 0 or greater than 3. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The property is being set and the <xref href=\\\"System.Globalization.NumberFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is read-only. </p>\\n\"\n  seealso:\n  - type: System.Globalization.NumberFormatInfo.CurrencyDecimalDigits\n    commentId: P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits\n  - type: System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator\n    commentId: P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator\n  - type: System.Globalization.NumberFormatInfo.CurrencyGroupSeparator\n    commentId: P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator\n  - type: System.Globalization.NumberFormatInfo.CurrencyGroupSizes\n    commentId: P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes\n  - type: System.Globalization.NumberFormatInfo.CurrencySymbol\n    commentId: P:System.Globalization.NumberFormatInfo.CurrencySymbol\n  - type: System.Globalization.NumberFormatInfo.CurrencyNegativePattern\n    commentId: P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern\n  - type: System.Globalization.NumberFormatInfo.PercentPositivePattern\n    commentId: P:System.Globalization.NumberFormatInfo.PercentPositivePattern\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: NumberFormatInfo.CurrencyPositivePattern\n- uid: System.Globalization.NumberFormatInfo.CurrencySymbol\n  commentId: P:System.Globalization.NumberFormatInfo.CurrencySymbol\n  id: CurrencySymbol\n  parent: System.Globalization.NumberFormatInfo\n  langs:\n  - csharp\n  - vb\n  name: CurrencySymbol\n  fullName: System.Globalization.NumberFormatInfo.CurrencySymbol\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: CurrencySymbol\n    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs\n    startLine: 447\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets or sets the string to use as the currency symbol.</p>\\n\"\n  syntax:\n    content: public string CurrencySymbol { get; set; }\n    content.vb: Public Property CurrencySymbol As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The string to use as the currency symbol. The default for <xref href=\\\"System.Globalization.NumberFormatInfo.InvariantInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is \\\"¤\\\". </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The property is being set to <strong>null</strong>. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The property is being set and the <xref href=\\\"System.Globalization.NumberFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is read-only. </p>\\n\"\n  seealso:\n  - type: System.Globalization.NumberFormatInfo.CurrencyDecimalDigits\n    commentId: P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits\n  - type: System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator\n    commentId: P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator\n  - type: System.Globalization.NumberFormatInfo.CurrencyGroupSeparator\n    commentId: P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator\n  - type: System.Globalization.NumberFormatInfo.CurrencyGroupSizes\n    commentId: P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes\n  - type: System.Globalization.NumberFormatInfo.CurrencyNegativePattern\n    commentId: P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern\n  - type: System.Globalization.NumberFormatInfo.CurrencyPositivePattern\n    commentId: P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern\n  - type: System.Globalization.NumberFormatInfo.NaNSymbol\n    commentId: P:System.Globalization.NumberFormatInfo.NaNSymbol\n  - type: System.Globalization.NumberFormatInfo.PercentSymbol\n    commentId: P:System.Globalization.NumberFormatInfo.PercentSymbol\n  - type: System.Globalization.NumberFormatInfo.PerMilleSymbol\n    commentId: P:System.Globalization.NumberFormatInfo.PerMilleSymbol\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: NumberFormatInfo.CurrencySymbol\n- uid: System.Globalization.NumberFormatInfo.CurrentInfo\n  commentId: P:System.Globalization.NumberFormatInfo.CurrentInfo\n  id: CurrentInfo\n  parent: System.Globalization.NumberFormatInfo\n  langs:\n  - csharp\n  - vb\n  name: CurrentInfo\n  fullName: System.Globalization.NumberFormatInfo.CurrentInfo\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: CurrentInfo\n    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs\n    startLine: 463\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets a read-only <xref href=\\\"System.Globalization.NumberFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that formats values based on the current culture.</p>\\n\"\n  syntax:\n    content: public static NumberFormatInfo CurrentInfo { get; }\n    content.vb: Public Shared ReadOnly Property CurrentInfo As NumberFormatInfo\n    parameters: []\n    return:\n      type: System.Globalization.NumberFormatInfo\n      description: \"\\n<p>A read-only <xref href=\\\"System.Globalization.NumberFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> based on the culture of the current thread.</p>\\n\"\n  seealso:\n  - type: System.Globalization.CultureInfo\n    commentId: T:System.Globalization.CultureInfo\n  - type: System.Globalization.CultureInfo.NumberFormat\n    commentId: P:System.Globalization.CultureInfo.NumberFormat\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: NumberFormatInfo.CurrentInfo\n- uid: System.Globalization.NumberFormatInfo.InvariantInfo\n  commentId: P:System.Globalization.NumberFormatInfo.InvariantInfo\n  id: InvariantInfo\n  parent: System.Globalization.NumberFormatInfo\n  langs:\n  - csharp\n  - vb\n  name: InvariantInfo\n  fullName: System.Globalization.NumberFormatInfo.InvariantInfo\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: InvariantInfo\n    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs\n    startLine: 269\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets a read-only <xref href=\\\"System.Globalization.NumberFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that is culture-independent (invariant).</p>\\n\"\n  syntax:\n    content: public static NumberFormatInfo InvariantInfo { get; }\n    content.vb: Public Shared ReadOnly Property InvariantInfo As NumberFormatInfo\n    parameters: []\n    return:\n      type: System.Globalization.NumberFormatInfo\n      description: \"\\n<p>A read-only  object that is culture-independent (invariant).</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: NumberFormatInfo.InvariantInfo\n- uid: System.Globalization.NumberFormatInfo.IsReadOnly\n  commentId: P:System.Globalization.NumberFormatInfo.IsReadOnly\n  id: IsReadOnly\n  parent: System.Globalization.NumberFormatInfo\n  langs:\n  - csharp\n  - vb\n  name: IsReadOnly\n  fullName: System.Globalization.NumberFormatInfo.IsReadOnly\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: IsReadOnly\n    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs\n    startLine: 348\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets a value that indicates whether this <xref href=\\\"System.Globalization.NumberFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is read-only.</p>\\n\"\n  syntax:\n    content: public bool IsReadOnly { get; }\n    content.vb: Public ReadOnly Property IsReadOnly As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the <xref href=\\\"System.Globalization.NumberFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is read-only; otherwise, <strong>false</strong>.</p>\\n\"\n  seealso:\n  - type: System.Globalization.NumberFormatInfo.ReadOnly(System.Globalization.NumberFormatInfo)\n    commentId: M:System.Globalization.NumberFormatInfo.ReadOnly(System.Globalization.NumberFormatInfo)\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: NumberFormatInfo.IsReadOnly\n- uid: System.Globalization.NumberFormatInfo.NaNSymbol\n  commentId: P:System.Globalization.NumberFormatInfo.NaNSymbol\n  id: NaNSymbol\n  parent: System.Globalization.NumberFormatInfo\n  langs:\n  - csharp\n  - vb\n  name: NaNSymbol\n  fullName: System.Globalization.NumberFormatInfo.NaNSymbol\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: NaNSymbol\n    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs\n    startLine: 477\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets or sets the string that represents the IEEE NaN (not a number) value.</p>\\n\"\n  syntax:\n    content: public string NaNSymbol { get; set; }\n    content.vb: Public Property NaNSymbol As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The string that represents the IEEE NaN (not a number) value. The default for <xref href=\\\"System.Globalization.NumberFormatInfo.InvariantInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is \\\"NaN\\\".</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The property is being set to <strong>null</strong>. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The property is being set and the <xref href=\\\"System.Globalization.NumberFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is read-only. </p>\\n\"\n  seealso:\n  - type: System.Globalization.NumberFormatInfo.PositiveInfinitySymbol\n    commentId: P:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol\n  - type: System.Globalization.NumberFormatInfo.NegativeInfinitySymbol\n    commentId: P:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: NumberFormatInfo.NaNSymbol\n- uid: System.Globalization.NumberFormatInfo.NegativeInfinitySymbol\n  commentId: P:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol\n  id: NegativeInfinitySymbol\n  parent: System.Globalization.NumberFormatInfo\n  langs:\n  - csharp\n  - vb\n  name: NegativeInfinitySymbol\n  fullName: System.Globalization.NumberFormatInfo.NegativeInfinitySymbol\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: NegativeInfinitySymbol\n    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs\n    startLine: 579\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets or sets the string that represents negative infinity.</p>\\n\"\n  syntax:\n    content: public string NegativeInfinitySymbol { get; set; }\n    content.vb: Public Property NegativeInfinitySymbol As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The string that represents negative infinity. The default for <xref href=\\\"System.Globalization.NumberFormatInfo.InvariantInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is \\\"-Infinity\\\".</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The property is being set to <strong>null</strong>. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The property is being set and the <xref href=\\\"System.Globalization.NumberFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is read-only. </p>\\n\"\n  seealso:\n  - type: System.Globalization.NumberFormatInfo.PositiveInfinitySymbol\n    commentId: P:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol\n  - type: System.Globalization.NumberFormatInfo.NaNSymbol\n    commentId: P:System.Globalization.NumberFormatInfo.NaNSymbol\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: NumberFormatInfo.NegativeInfinitySymbol\n- uid: System.Globalization.NumberFormatInfo.NegativeSign\n  commentId: P:System.Globalization.NumberFormatInfo.NegativeSign\n  id: NegativeSign\n  parent: System.Globalization.NumberFormatInfo\n  langs:\n  - csharp\n  - vb\n  name: NegativeSign\n  fullName: System.Globalization.NumberFormatInfo.NegativeSign\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: NegativeSign\n    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs\n    startLine: 595\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets or sets the string that denotes that the associated number is negative.</p>\\n\"\n  syntax:\n    content: public string NegativeSign { get; set; }\n    content.vb: Public Property NegativeSign As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The string that denotes that the associated number is negative. The default for <xref href=\\\"System.Globalization.NumberFormatInfo.InvariantInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is \\\"-\\\".</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The property is being set to <strong>null</strong>. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The property is being set and the <xref href=\\\"System.Globalization.NumberFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is read-only. </p>\\n\"\n  seealso:\n  - type: System.Globalization.NumberFormatInfo.PositiveSign\n    commentId: P:System.Globalization.NumberFormatInfo.PositiveSign\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: NumberFormatInfo.NegativeSign\n- uid: System.Globalization.NumberFormatInfo.NumberDecimalDigits\n  commentId: P:System.Globalization.NumberFormatInfo.NumberDecimalDigits\n  id: NumberDecimalDigits\n  parent: System.Globalization.NumberFormatInfo\n  langs:\n  - csharp\n  - vb\n  name: NumberDecimalDigits\n  fullName: System.Globalization.NumberFormatInfo.NumberDecimalDigits\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: NumberDecimalDigits\n    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs\n    startLine: 609\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets or sets the number of decimal places to use in numeric values.</p>\\n\"\n  syntax:\n    content: public int NumberDecimalDigits { get; set; }\n    content.vb: Public Property NumberDecimalDigits As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The number of decimal places to use in numeric values. The default for <xref href=\\\"System.Globalization.NumberFormatInfo.InvariantInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is 2.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The property is being set to a value that is less than 0 or greater than 99. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The property is being set and the <xref href=\\\"System.Globalization.NumberFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is read-only. </p>\\n\"\n  seealso:\n  - type: System.Globalization.NumberFormatInfo.NumberDecimalSeparator\n    commentId: P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator\n  - type: System.Globalization.NumberFormatInfo.NumberGroupSeparator\n    commentId: P:System.Globalization.NumberFormatInfo.NumberGroupSeparator\n  - type: System.Globalization.NumberFormatInfo.NumberGroupSizes\n    commentId: P:System.Globalization.NumberFormatInfo.NumberGroupSizes\n  - type: System.Globalization.NumberFormatInfo.NaNSymbol\n    commentId: P:System.Globalization.NumberFormatInfo.NaNSymbol\n  - type: System.Globalization.NumberFormatInfo.NumberNegativePattern\n    commentId: P:System.Globalization.NumberFormatInfo.NumberNegativePattern\n  - type: System.Globalization.NumberFormatInfo.CurrencyDecimalDigits\n    commentId: P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits\n  - type: System.Globalization.NumberFormatInfo.PercentDecimalDigits\n    commentId: P:System.Globalization.NumberFormatInfo.PercentDecimalDigits\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: NumberFormatInfo.NumberDecimalDigits\n- uid: System.Globalization.NumberFormatInfo.NumberDecimalSeparator\n  commentId: P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator\n  id: NumberDecimalSeparator\n  parent: System.Globalization.NumberFormatInfo\n  langs:\n  - csharp\n  - vb\n  name: NumberDecimalSeparator\n  fullName: System.Globalization.NumberFormatInfo.NumberDecimalSeparator\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: NumberDecimalSeparator\n    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs\n    startLine: 628\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets or sets the string to use as the decimal separator in numeric values.</p>\\n\"\n  syntax:\n    content: public string NumberDecimalSeparator { get; set; }\n    content.vb: Public Property NumberDecimalSeparator As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The string to use as the decimal separator in numeric values. The default for <xref href=\\\"System.Globalization.NumberFormatInfo.InvariantInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is \\\".\\\".</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The property is being set to <strong>null</strong>. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The property is being set and the <xref href=\\\"System.Globalization.NumberFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is read-only. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The property is being set to an empty string.</p>\\n\"\n  seealso:\n  - type: System.Globalization.NumberFormatInfo.NumberDecimalDigits\n    commentId: P:System.Globalization.NumberFormatInfo.NumberDecimalDigits\n  - type: System.Globalization.NumberFormatInfo.NumberGroupSeparator\n    commentId: P:System.Globalization.NumberFormatInfo.NumberGroupSeparator\n  - type: System.Globalization.NumberFormatInfo.NumberGroupSizes\n    commentId: P:System.Globalization.NumberFormatInfo.NumberGroupSizes\n  - type: System.Globalization.NumberFormatInfo.NaNSymbol\n    commentId: P:System.Globalization.NumberFormatInfo.NaNSymbol\n  - type: System.Globalization.NumberFormatInfo.NumberNegativePattern\n    commentId: P:System.Globalization.NumberFormatInfo.NumberNegativePattern\n  - type: System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator\n    commentId: P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator\n  - type: System.Globalization.NumberFormatInfo.PercentDecimalSeparator\n    commentId: P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: NumberFormatInfo.NumberDecimalSeparator\n- uid: System.Globalization.NumberFormatInfo.NumberGroupSeparator\n  commentId: P:System.Globalization.NumberFormatInfo.NumberGroupSeparator\n  id: NumberGroupSeparator\n  parent: System.Globalization.NumberFormatInfo\n  langs:\n  - csharp\n  - vb\n  name: NumberGroupSeparator\n  fullName: System.Globalization.NumberFormatInfo.NumberGroupSeparator\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: NumberGroupSeparator\n    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs\n    startLine: 638\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets or sets the string that separates groups of digits to the left of the decimal in numeric values.</p>\\n\"\n  syntax:\n    content: public string NumberGroupSeparator { get; set; }\n    content.vb: Public Property NumberGroupSeparator As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The string that separates groups of digits to the left of the decimal in numeric values. The default for <xref href=\\\"System.Globalization.NumberFormatInfo.InvariantInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is \\\",\\\".</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The property is being set to <strong>null</strong>. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The property is being set and the <xref href=\\\"System.Globalization.NumberFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is read-only. </p>\\n\"\n  seealso:\n  - type: System.Globalization.NumberFormatInfo.NumberDecimalDigits\n    commentId: P:System.Globalization.NumberFormatInfo.NumberDecimalDigits\n  - type: System.Globalization.NumberFormatInfo.NumberDecimalSeparator\n    commentId: P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator\n  - type: System.Globalization.NumberFormatInfo.NumberGroupSizes\n    commentId: P:System.Globalization.NumberFormatInfo.NumberGroupSizes\n  - type: System.Globalization.NumberFormatInfo.NaNSymbol\n    commentId: P:System.Globalization.NumberFormatInfo.NaNSymbol\n  - type: System.Globalization.NumberFormatInfo.NumberNegativePattern\n    commentId: P:System.Globalization.NumberFormatInfo.NumberNegativePattern\n  - type: System.Globalization.NumberFormatInfo.CurrencyGroupSeparator\n    commentId: P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator\n  - type: System.Globalization.NumberFormatInfo.PercentGroupSeparator\n    commentId: P:System.Globalization.NumberFormatInfo.PercentGroupSeparator\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: NumberFormatInfo.NumberGroupSeparator\n- uid: System.Globalization.NumberFormatInfo.NumberGroupSizes\n  commentId: P:System.Globalization.NumberFormatInfo.NumberGroupSizes\n  id: NumberGroupSizes\n  parent: System.Globalization.NumberFormatInfo\n  langs:\n  - csharp\n  - vb\n  name: NumberGroupSizes\n  fullName: System.Globalization.NumberFormatInfo.NumberGroupSizes\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: NumberGroupSizes\n    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs\n    startLine: 399\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets or sets the number of digits in each group to the left of the decimal in numeric values.</p>\\n\"\n  syntax:\n    content: public int[] NumberGroupSizes { get; set; }\n    content.vb: Public Property NumberGroupSizes As Integer()\n    parameters: []\n    return:\n      type: System.Int32[]\n      description: \"\\n<p>The number of digits in each group to the left of the decimal in numeric values. The default for <xref href=\\\"System.Globalization.NumberFormatInfo.InvariantInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is a one-dimensional array with only one element, which is set to 3.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The property is being set to <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The property is being set and the array contains an entry that is less than 0 or greater than 9.</p>\\n<p>-or- </p>\\n<p>The property is being set and the array contains an entry, other than the last entry, that is set to 0. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The property is being set and the <xref href=\\\"System.Globalization.NumberFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is read-only. </p>\\n\"\n  seealso:\n  - type: System.Globalization.NumberFormatInfo.NumberDecimalDigits\n    commentId: P:System.Globalization.NumberFormatInfo.NumberDecimalDigits\n  - type: System.Globalization.NumberFormatInfo.NumberDecimalSeparator\n    commentId: P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator\n  - type: System.Globalization.NumberFormatInfo.NumberGroupSeparator\n    commentId: P:System.Globalization.NumberFormatInfo.NumberGroupSeparator\n  - type: System.Globalization.NumberFormatInfo.NaNSymbol\n    commentId: P:System.Globalization.NumberFormatInfo.NaNSymbol\n  - type: System.Globalization.NumberFormatInfo.NumberNegativePattern\n    commentId: P:System.Globalization.NumberFormatInfo.NumberNegativePattern\n  - type: System.Globalization.NumberFormatInfo.CurrencyGroupSizes\n    commentId: P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes\n  - type: System.Globalization.NumberFormatInfo.PercentGroupSizes\n    commentId: P:System.Globalization.NumberFormatInfo.PercentGroupSizes\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: NumberFormatInfo.NumberGroupSizes\n- uid: System.Globalization.NumberFormatInfo.NumberNegativePattern\n  commentId: P:System.Globalization.NumberFormatInfo.NumberNegativePattern\n  id: NumberNegativePattern\n  parent: System.Globalization.NumberFormatInfo\n  langs:\n  - csharp\n  - vb\n  name: NumberNegativePattern\n  fullName: System.Globalization.NumberFormatInfo.NumberNegativePattern\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: NumberNegativePattern\n    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs\n    startLine: 513\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets or sets the format pattern for negative numeric values.</p>\\n\"\n  syntax:\n    content: public int NumberNegativePattern { get; set; }\n    content.vb: Public Property NumberNegativePattern As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The format pattern for negative numeric values. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The property is being set to a value that is less than 0 or greater than 4. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The property is being set and the <xref href=\\\"System.Globalization.NumberFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is read-only. </p>\\n\"\n  seealso:\n  - type: System.Globalization.NumberFormatInfo.NumberDecimalDigits\n    commentId: P:System.Globalization.NumberFormatInfo.NumberDecimalDigits\n  - type: System.Globalization.NumberFormatInfo.NumberDecimalSeparator\n    commentId: P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator\n  - type: System.Globalization.NumberFormatInfo.NumberGroupSeparator\n    commentId: P:System.Globalization.NumberFormatInfo.NumberGroupSeparator\n  - type: System.Globalization.NumberFormatInfo.NumberGroupSizes\n    commentId: P:System.Globalization.NumberFormatInfo.NumberGroupSizes\n  - type: System.Globalization.NumberFormatInfo.NaNSymbol\n    commentId: P:System.Globalization.NumberFormatInfo.NaNSymbol\n  - type: System.Globalization.NumberFormatInfo.CurrencyNegativePattern\n    commentId: P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern\n  - type: System.Globalization.NumberFormatInfo.PercentNegativePattern\n    commentId: P:System.Globalization.NumberFormatInfo.PercentNegativePattern\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: NumberFormatInfo.NumberNegativePattern\n- uid: System.Globalization.NumberFormatInfo.PercentDecimalDigits\n  commentId: P:System.Globalization.NumberFormatInfo.PercentDecimalDigits\n  id: PercentDecimalDigits\n  parent: System.Globalization.NumberFormatInfo\n  langs:\n  - csharp\n  - vb\n  name: PercentDecimalDigits\n  fullName: System.Globalization.NumberFormatInfo.PercentDecimalDigits\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: PercentDecimalDigits\n    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs\n    startLine: 697\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets or sets the number of decimal places to use in percent values. </p>\\n\"\n  syntax:\n    content: public int PercentDecimalDigits { get; set; }\n    content.vb: Public Property PercentDecimalDigits As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The number of decimal places to use in percent values. The default for <xref href=\\\"System.Globalization.NumberFormatInfo.InvariantInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is 2.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The property is being set to a value that is less than 0 or greater than 99. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The property is being set and the <xref href=\\\"System.Globalization.NumberFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is read-only. </p>\\n\"\n  seealso:\n  - type: System.Globalization.NumberFormatInfo.PercentDecimalSeparator\n    commentId: P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator\n  - type: System.Globalization.NumberFormatInfo.PercentGroupSeparator\n    commentId: P:System.Globalization.NumberFormatInfo.PercentGroupSeparator\n  - type: System.Globalization.NumberFormatInfo.PercentGroupSizes\n    commentId: P:System.Globalization.NumberFormatInfo.PercentGroupSizes\n  - type: System.Globalization.NumberFormatInfo.PercentSymbol\n    commentId: P:System.Globalization.NumberFormatInfo.PercentSymbol\n  - type: System.Globalization.NumberFormatInfo.PercentNegativePattern\n    commentId: P:System.Globalization.NumberFormatInfo.PercentNegativePattern\n  - type: System.Globalization.NumberFormatInfo.PercentPositivePattern\n    commentId: P:System.Globalization.NumberFormatInfo.PercentPositivePattern\n  - type: System.Globalization.NumberFormatInfo.CurrencyDecimalDigits\n    commentId: P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits\n  - type: System.Globalization.NumberFormatInfo.NumberDecimalDigits\n    commentId: P:System.Globalization.NumberFormatInfo.NumberDecimalDigits\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: NumberFormatInfo.PercentDecimalDigits\n- uid: System.Globalization.NumberFormatInfo.PercentDecimalSeparator\n  commentId: P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator\n  id: PercentDecimalSeparator\n  parent: System.Globalization.NumberFormatInfo\n  langs:\n  - csharp\n  - vb\n  name: PercentDecimalSeparator\n  fullName: System.Globalization.NumberFormatInfo.PercentDecimalSeparator\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: PercentDecimalSeparator\n    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs\n    startLine: 716\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets or sets the string to use as the decimal separator in percent values. </p>\\n\"\n  syntax:\n    content: public string PercentDecimalSeparator { get; set; }\n    content.vb: Public Property PercentDecimalSeparator As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The string to use as the decimal separator in percent values. The default for <xref href=\\\"System.Globalization.NumberFormatInfo.InvariantInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is \\\".\\\".</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The property is being set to <strong>null</strong>. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The property is being set and the <xref href=\\\"System.Globalization.NumberFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is read-only. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The property is being set to an empty string.</p>\\n\"\n  seealso:\n  - type: System.Globalization.NumberFormatInfo.PercentDecimalDigits\n    commentId: P:System.Globalization.NumberFormatInfo.PercentDecimalDigits\n  - type: System.Globalization.NumberFormatInfo.PercentGroupSeparator\n    commentId: P:System.Globalization.NumberFormatInfo.PercentGroupSeparator\n  - type: System.Globalization.NumberFormatInfo.PercentGroupSizes\n    commentId: P:System.Globalization.NumberFormatInfo.PercentGroupSizes\n  - type: System.Globalization.NumberFormatInfo.PercentSymbol\n    commentId: P:System.Globalization.NumberFormatInfo.PercentSymbol\n  - type: System.Globalization.NumberFormatInfo.PercentNegativePattern\n    commentId: P:System.Globalization.NumberFormatInfo.PercentNegativePattern\n  - type: System.Globalization.NumberFormatInfo.PercentPositivePattern\n    commentId: P:System.Globalization.NumberFormatInfo.PercentPositivePattern\n  - type: System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator\n    commentId: P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator\n  - type: System.Globalization.NumberFormatInfo.NumberDecimalSeparator\n    commentId: P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: NumberFormatInfo.PercentDecimalSeparator\n- uid: System.Globalization.NumberFormatInfo.PercentGroupSeparator\n  commentId: P:System.Globalization.NumberFormatInfo.PercentGroupSeparator\n  id: PercentGroupSeparator\n  parent: System.Globalization.NumberFormatInfo\n  langs:\n  - csharp\n  - vb\n  name: PercentGroupSeparator\n  fullName: System.Globalization.NumberFormatInfo.PercentGroupSeparator\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: PercentGroupSeparator\n    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs\n    startLine: 726\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets or sets the string that separates groups of digits to the left of the decimal in percent values. </p>\\n\"\n  syntax:\n    content: public string PercentGroupSeparator { get; set; }\n    content.vb: Public Property PercentGroupSeparator As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The string that separates groups of digits to the left of the decimal in percent values. The default for <xref href=\\\"System.Globalization.NumberFormatInfo.InvariantInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is \\\",\\\".</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The property is being set to <strong>null</strong>. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The property is being set and the <xref href=\\\"System.Globalization.NumberFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is read-only. </p>\\n\"\n  seealso:\n  - type: System.Globalization.NumberFormatInfo.PercentDecimalDigits\n    commentId: P:System.Globalization.NumberFormatInfo.PercentDecimalDigits\n  - type: System.Globalization.NumberFormatInfo.PercentDecimalSeparator\n    commentId: P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator\n  - type: System.Globalization.NumberFormatInfo.PercentGroupSizes\n    commentId: P:System.Globalization.NumberFormatInfo.PercentGroupSizes\n  - type: System.Globalization.NumberFormatInfo.PercentSymbol\n    commentId: P:System.Globalization.NumberFormatInfo.PercentSymbol\n  - type: System.Globalization.NumberFormatInfo.PercentNegativePattern\n    commentId: P:System.Globalization.NumberFormatInfo.PercentNegativePattern\n  - type: System.Globalization.NumberFormatInfo.PercentPositivePattern\n    commentId: P:System.Globalization.NumberFormatInfo.PercentPositivePattern\n  - type: System.Globalization.NumberFormatInfo.CurrencyGroupSeparator\n    commentId: P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator\n  - type: System.Globalization.NumberFormatInfo.NumberGroupSeparator\n    commentId: P:System.Globalization.NumberFormatInfo.NumberGroupSeparator\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: NumberFormatInfo.PercentGroupSeparator\n- uid: System.Globalization.NumberFormatInfo.PercentGroupSizes\n  commentId: P:System.Globalization.NumberFormatInfo.PercentGroupSizes\n  id: PercentGroupSizes\n  parent: System.Globalization.NumberFormatInfo\n  langs:\n  - csharp\n  - vb\n  name: PercentGroupSizes\n  fullName: System.Globalization.NumberFormatInfo.PercentGroupSizes\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: PercentGroupSizes\n    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs\n    startLine: 418\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets or sets the number of digits in each group to the left of the decimal in percent values. </p>\\n\"\n  syntax:\n    content: public int[] PercentGroupSizes { get; set; }\n    content.vb: Public Property PercentGroupSizes As Integer()\n    parameters: []\n    return:\n      type: System.Int32[]\n      description: \"\\n<p>The number of digits in each group to the left of the decimal in percent values. The default for <xref href=\\\"System.Globalization.NumberFormatInfo.InvariantInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is a one-dimensional array with only one element, which is set to 3.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The property is being set to <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The property is being set and the array contains an entry that is less than 0 or greater than 9.</p>\\n<p>-or- </p>\\n<p>The property is being set and the array contains an entry, other than the last entry, that is set to 0. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The property is being set and the <xref href=\\\"System.Globalization.NumberFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is read-only. </p>\\n\"\n  seealso:\n  - type: System.Globalization.NumberFormatInfo.PercentDecimalDigits\n    commentId: P:System.Globalization.NumberFormatInfo.PercentDecimalDigits\n  - type: System.Globalization.NumberFormatInfo.PercentDecimalSeparator\n    commentId: P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator\n  - type: System.Globalization.NumberFormatInfo.PercentGroupSeparator\n    commentId: P:System.Globalization.NumberFormatInfo.PercentGroupSeparator\n  - type: System.Globalization.NumberFormatInfo.PercentSymbol\n    commentId: P:System.Globalization.NumberFormatInfo.PercentSymbol\n  - type: System.Globalization.NumberFormatInfo.PercentNegativePattern\n    commentId: P:System.Globalization.NumberFormatInfo.PercentNegativePattern\n  - type: System.Globalization.NumberFormatInfo.PercentPositivePattern\n    commentId: P:System.Globalization.NumberFormatInfo.PercentPositivePattern\n  - type: System.Globalization.NumberFormatInfo.CurrencyGroupSizes\n    commentId: P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes\n  - type: System.Globalization.NumberFormatInfo.NumberGroupSizes\n    commentId: P:System.Globalization.NumberFormatInfo.NumberGroupSizes\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: NumberFormatInfo.PercentGroupSizes\n- uid: System.Globalization.NumberFormatInfo.PercentNegativePattern\n  commentId: P:System.Globalization.NumberFormatInfo.PercentNegativePattern\n  id: PercentNegativePattern\n  parent: System.Globalization.NumberFormatInfo\n  langs:\n  - csharp\n  - vb\n  name: PercentNegativePattern\n  fullName: System.Globalization.NumberFormatInfo.PercentNegativePattern\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: PercentNegativePattern\n    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs\n    startLine: 557\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets or sets the format pattern for negative percent values.</p>\\n\"\n  syntax:\n    content: public int PercentNegativePattern { get; set; }\n    content.vb: Public Property PercentNegativePattern As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The format pattern for negative percent values. The default for <xref href=\\\"System.Globalization.NumberFormatInfo.InvariantInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is 0, which represents \\\"-n %\\\", where \\\"%\\\" is the <xref href=\\\"System.Globalization.NumberFormatInfo.PercentSymbol\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and <em>n</em> is a number.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The property is being set to a value that is less than 0 or greater than 11. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The property is being set and the <xref href=\\\"System.Globalization.NumberFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is read-only. </p>\\n\"\n  seealso:\n  - type: System.Globalization.NumberFormatInfo.PercentDecimalDigits\n    commentId: P:System.Globalization.NumberFormatInfo.PercentDecimalDigits\n  - type: System.Globalization.NumberFormatInfo.PercentDecimalSeparator\n    commentId: P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator\n  - type: System.Globalization.NumberFormatInfo.PercentGroupSeparator\n    commentId: P:System.Globalization.NumberFormatInfo.PercentGroupSeparator\n  - type: System.Globalization.NumberFormatInfo.PercentGroupSizes\n    commentId: P:System.Globalization.NumberFormatInfo.PercentGroupSizes\n  - type: System.Globalization.NumberFormatInfo.PercentSymbol\n    commentId: P:System.Globalization.NumberFormatInfo.PercentSymbol\n  - type: System.Globalization.NumberFormatInfo.PercentPositivePattern\n    commentId: P:System.Globalization.NumberFormatInfo.PercentPositivePattern\n  - type: System.Globalization.NumberFormatInfo.CurrencyNegativePattern\n    commentId: P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern\n  - type: System.Globalization.NumberFormatInfo.NumberNegativePattern\n    commentId: P:System.Globalization.NumberFormatInfo.NumberNegativePattern\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: NumberFormatInfo.PercentNegativePattern\n- uid: System.Globalization.NumberFormatInfo.PercentPositivePattern\n  commentId: P:System.Globalization.NumberFormatInfo.PercentPositivePattern\n  id: PercentPositivePattern\n  parent: System.Globalization.NumberFormatInfo\n  langs:\n  - csharp\n  - vb\n  name: PercentPositivePattern\n  fullName: System.Globalization.NumberFormatInfo.PercentPositivePattern\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: PercentPositivePattern\n    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs\n    startLine: 535\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets or sets the format pattern for positive percent values.</p>\\n\"\n  syntax:\n    content: public int PercentPositivePattern { get; set; }\n    content.vb: Public Property PercentPositivePattern As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The format pattern for positive percent values. The default for <xref href=\\\"System.Globalization.NumberFormatInfo.InvariantInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is 0, which represents \\\"n %\\\", where \\\"%\\\" is the <xref href=\\\"System.Globalization.NumberFormatInfo.PercentSymbol\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and <em>n</em> is a number.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The property is being set to a value that is less than 0 or greater than 3. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The property is being set and the <xref href=\\\"System.Globalization.NumberFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is read-only. </p>\\n\"\n  seealso:\n  - type: System.Globalization.NumberFormatInfo.PercentDecimalDigits\n    commentId: P:System.Globalization.NumberFormatInfo.PercentDecimalDigits\n  - type: System.Globalization.NumberFormatInfo.PercentDecimalSeparator\n    commentId: P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator\n  - type: System.Globalization.NumberFormatInfo.PercentGroupSeparator\n    commentId: P:System.Globalization.NumberFormatInfo.PercentGroupSeparator\n  - type: System.Globalization.NumberFormatInfo.PercentGroupSizes\n    commentId: P:System.Globalization.NumberFormatInfo.PercentGroupSizes\n  - type: System.Globalization.NumberFormatInfo.PercentSymbol\n    commentId: P:System.Globalization.NumberFormatInfo.PercentSymbol\n  - type: System.Globalization.NumberFormatInfo.PercentNegativePattern\n    commentId: P:System.Globalization.NumberFormatInfo.PercentNegativePattern\n  - type: System.Globalization.NumberFormatInfo.CurrencyPositivePattern\n    commentId: P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: NumberFormatInfo.PercentPositivePattern\n- uid: System.Globalization.NumberFormatInfo.PercentSymbol\n  commentId: P:System.Globalization.NumberFormatInfo.PercentSymbol\n  id: PercentSymbol\n  parent: System.Globalization.NumberFormatInfo\n  langs:\n  - csharp\n  - vb\n  name: PercentSymbol\n  fullName: System.Globalization.NumberFormatInfo.PercentSymbol\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: PercentSymbol\n    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs\n    startLine: 736\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets or sets the string to use as the percent symbol.</p>\\n\"\n  syntax:\n    content: public string PercentSymbol { get; set; }\n    content.vb: Public Property PercentSymbol As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The string to use as the percent symbol. The default for <xref href=\\\"System.Globalization.NumberFormatInfo.InvariantInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is \\\"%\\\".</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The property is being set to <strong>null</strong>. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The property is being set and the <xref href=\\\"System.Globalization.NumberFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is read-only. </p>\\n\"\n  seealso:\n  - type: System.Globalization.NumberFormatInfo.PercentDecimalDigits\n    commentId: P:System.Globalization.NumberFormatInfo.PercentDecimalDigits\n  - type: System.Globalization.NumberFormatInfo.PercentDecimalSeparator\n    commentId: P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator\n  - type: System.Globalization.NumberFormatInfo.PercentGroupSeparator\n    commentId: P:System.Globalization.NumberFormatInfo.PercentGroupSeparator\n  - type: System.Globalization.NumberFormatInfo.PercentGroupSizes\n    commentId: P:System.Globalization.NumberFormatInfo.PercentGroupSizes\n  - type: System.Globalization.NumberFormatInfo.PercentNegativePattern\n    commentId: P:System.Globalization.NumberFormatInfo.PercentNegativePattern\n  - type: System.Globalization.NumberFormatInfo.PercentPositivePattern\n    commentId: P:System.Globalization.NumberFormatInfo.PercentPositivePattern\n  - type: System.Globalization.NumberFormatInfo.CurrencySymbol\n    commentId: P:System.Globalization.NumberFormatInfo.CurrencySymbol\n  - type: System.Globalization.NumberFormatInfo.NaNSymbol\n    commentId: P:System.Globalization.NumberFormatInfo.NaNSymbol\n  - type: System.Globalization.NumberFormatInfo.PerMilleSymbol\n    commentId: P:System.Globalization.NumberFormatInfo.PerMilleSymbol\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: NumberFormatInfo.PercentSymbol\n- uid: System.Globalization.NumberFormatInfo.PerMilleSymbol\n  commentId: P:System.Globalization.NumberFormatInfo.PerMilleSymbol\n  id: PerMilleSymbol\n  parent: System.Globalization.NumberFormatInfo\n  langs:\n  - csharp\n  - vb\n  name: PerMilleSymbol\n  fullName: System.Globalization.NumberFormatInfo.PerMilleSymbol\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: PerMilleSymbol\n    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs\n    startLine: 752\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets or sets the string to use as the per mille symbol.</p>\\n\"\n  syntax:\n    content: public string PerMilleSymbol { get; set; }\n    content.vb: Public Property PerMilleSymbol As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The string to use as the per mille symbol. The default for <xref href=\\\"System.Globalization.NumberFormatInfo.InvariantInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is \\\"‰\\\", which is the Unicode character U+2030.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The property is being set to <strong>null</strong>. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The property is being set and the <xref href=\\\"System.Globalization.NumberFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is read-only. </p>\\n\"\n  seealso:\n  - type: System.Globalization.NumberFormatInfo.CurrencySymbol\n    commentId: P:System.Globalization.NumberFormatInfo.CurrencySymbol\n  - type: System.Globalization.NumberFormatInfo.NaNSymbol\n    commentId: P:System.Globalization.NumberFormatInfo.NaNSymbol\n  - type: System.Globalization.NumberFormatInfo.PercentSymbol\n    commentId: P:System.Globalization.NumberFormatInfo.PercentSymbol\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: NumberFormatInfo.PerMilleSymbol\n- uid: System.Globalization.NumberFormatInfo.PositiveInfinitySymbol\n  commentId: P:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol\n  id: PositiveInfinitySymbol\n  parent: System.Globalization.NumberFormatInfo\n  langs:\n  - csharp\n  - vb\n  name: PositiveInfinitySymbol\n  fullName: System.Globalization.NumberFormatInfo.PositiveInfinitySymbol\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: PositiveInfinitySymbol\n    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs\n    startLine: 667\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets or sets the string that represents positive infinity.</p>\\n\"\n  syntax:\n    content: public string PositiveInfinitySymbol { get; set; }\n    content.vb: Public Property PositiveInfinitySymbol As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The string that represents positive infinity. The default for <xref href=\\\"System.Globalization.NumberFormatInfo.InvariantInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is \\\"Infinity\\\".</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The property is being set to <strong>null</strong>. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The property is being set and the <xref href=\\\"System.Globalization.NumberFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is read-only. </p>\\n\"\n  seealso:\n  - type: System.Globalization.NumberFormatInfo.NegativeInfinitySymbol\n    commentId: P:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol\n  - type: System.Globalization.NumberFormatInfo.NaNSymbol\n    commentId: P:System.Globalization.NumberFormatInfo.NaNSymbol\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: NumberFormatInfo.PositiveInfinitySymbol\n- uid: System.Globalization.NumberFormatInfo.PositiveSign\n  commentId: P:System.Globalization.NumberFormatInfo.PositiveSign\n  id: PositiveSign\n  parent: System.Globalization.NumberFormatInfo\n  langs:\n  - csharp\n  - vb\n  name: PositiveSign\n  fullName: System.Globalization.NumberFormatInfo.PositiveSign\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: PositiveSign\n    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs\n    startLine: 683\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets or sets the string that denotes that the associated number is positive.</p>\\n\"\n  syntax:\n    content: public string PositiveSign { get; set; }\n    content.vb: Public Property PositiveSign As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The string that denotes that the associated number is positive. The default for <xref href=\\\"System.Globalization.NumberFormatInfo.InvariantInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is \\\"+\\\".</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>In a set operation, the value to be assigned is <strong>null</strong>.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The property is being set and the <xref href=\\\"System.Globalization.NumberFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is read-only. </p>\\n\"\n  seealso:\n  - type: System.Globalization.NumberFormatInfo.NegativeSign\n    commentId: P:System.Globalization.NumberFormatInfo.NegativeSign\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: NumberFormatInfo.PositiveSign\n- uid: System.Globalization.NumberFormatInfo.Clone\n  commentId: M:System.Globalization.NumberFormatInfo.Clone\n  id: Clone\n  parent: System.Globalization.NumberFormatInfo\n  langs:\n  - csharp\n  - vb\n  name: Clone()\n  fullName: System.Globalization.NumberFormatInfo.Clone()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Clone\n    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs\n    startLine: 312\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Creates a shallow copy of the <xref href=\\\"System.Globalization.NumberFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public object Clone()\n    content.vb: Public Function Clone As Object\n    return:\n      type: System.Object\n      description: \"\\n<p>A new object copied from the original <xref href=\\\"System.Globalization.NumberFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  seealso:\n  - type: System.Globalization.NumberFormatInfo.IsReadOnly\n    commentId: P:System.Globalization.NumberFormatInfo.IsReadOnly\n  - type: System.Globalization.NumberFormatInfo.ReadOnly(System.Globalization.NumberFormatInfo)\n    commentId: M:System.Globalization.NumberFormatInfo.ReadOnly(System.Globalization.NumberFormatInfo)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: NumberFormatInfo.Clone()\n- uid: System.Globalization.NumberFormatInfo.GetFormat(System.Type)\n  commentId: M:System.Globalization.NumberFormatInfo.GetFormat(System.Type)\n  id: GetFormat(System.Type)\n  parent: System.Globalization.NumberFormatInfo\n  langs:\n  - csharp\n  - vb\n  name: GetFormat(Type)\n  fullName: System.Globalization.NumberFormatInfo.GetFormat(System.Type)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetFormat\n    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs\n    startLine: 792\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets an object of the specified type that provides a number formatting service.</p>\\n\"\n  syntax:\n    content: public object GetFormat(Type formatType)\n    content.vb: Public Function GetFormat(formatType As Type) As Object\n    parameters:\n    - id: formatType\n      type: System.Type\n      description: \"\\n<p>The <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the required formatting service. </p>\\n\"\n    return:\n      type: System.Object\n      description: \"\\n<p>The current <xref href=\\\"System.Globalization.NumberFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, if <em>formatType</em> is the same as the type of the current <xref href=\\\"System.Globalization.NumberFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>; otherwise, <strong>null</strong>.</p>\\n\"\n  seealso:\n  - type: System.IFormatProvider\n    commentId: T:System.IFormatProvider\n  - type: System.Globalization.DateTimeFormatInfo.GetFormat(System.Type)\n    commentId: M:System.Globalization.DateTimeFormatInfo.GetFormat(System.Type)\n  implements:\n  - System.IFormatProvider.GetFormat(System.Type)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: NumberFormatInfo.GetFormat(Type)\n- uid: System.Globalization.NumberFormatInfo.GetInstance(System.IFormatProvider)\n  commentId: M:System.Globalization.NumberFormatInfo.GetInstance(System.IFormatProvider)\n  id: GetInstance(System.IFormatProvider)\n  parent: System.Globalization.NumberFormatInfo\n  langs:\n  - csharp\n  - vb\n  name: GetInstance(IFormatProvider)\n  fullName: System.Globalization.NumberFormatInfo.GetInstance(System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetInstance\n    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs\n    startLine: 283\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets the <xref href=\\\"System.Globalization.NumberFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> associated with the specified <xref href=\\\"System.IFormatProvider\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public static NumberFormatInfo GetInstance(IFormatProvider formatProvider)\n    content.vb: Public Shared Function GetInstance(formatProvider As IFormatProvider) As NumberFormatInfo\n    parameters:\n    - id: formatProvider\n      type: System.IFormatProvider\n      description: \"\\n<p>The <xref href=\\\"System.IFormatProvider\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> used to get the <xref href=\\\"System.Globalization.NumberFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or- </p>\\n<p>\\n<strong>null</strong> to get <xref href=\\\"System.Globalization.NumberFormatInfo.CurrentInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n    return:\n      type: System.Globalization.NumberFormatInfo\n      description: \"\\n<p>The <xref href=\\\"System.Globalization.NumberFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> associated with the specified <xref href=\\\"System.IFormatProvider\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  seealso:\n  - type: System.IFormatProvider\n    commentId: T:System.IFormatProvider\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: NumberFormatInfo.GetInstance(IFormatProvider)\n- uid: System.Globalization.NumberFormatInfo.ReadOnly(System.Globalization.NumberFormatInfo)\n  commentId: M:System.Globalization.NumberFormatInfo.ReadOnly(System.Globalization.NumberFormatInfo)\n  id: ReadOnly(System.Globalization.NumberFormatInfo)\n  parent: System.Globalization.NumberFormatInfo\n  langs:\n  - csharp\n  - vb\n  name: ReadOnly(NumberFormatInfo)\n  fullName: System.Globalization.NumberFormatInfo.ReadOnly(System.Globalization.NumberFormatInfo)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ReadOnly\n    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs\n    startLine: 796\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Returns a read-only <xref href=\\\"System.Globalization.NumberFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> wrapper.</p>\\n\"\n  syntax:\n    content: public static NumberFormatInfo ReadOnly(NumberFormatInfo nfi)\n    content.vb: Public Shared Function ReadOnly(nfi As NumberFormatInfo) As NumberFormatInfo\n    parameters:\n    - id: nfi\n      type: System.Globalization.NumberFormatInfo\n      description: \"\\n<p>The <xref href=\\\"System.Globalization.NumberFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to wrap. </p>\\n\"\n    return:\n      type: System.Globalization.NumberFormatInfo\n      description: \"\\n<p>A read-only <xref href=\\\"System.Globalization.NumberFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> wrapper around <em>nfi</em>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>nfi</em> is <strong>null</strong>. </p>\\n\"\n  seealso:\n  - type: System.Globalization.NumberFormatInfo.IsReadOnly\n    commentId: P:System.Globalization.NumberFormatInfo.IsReadOnly\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: NumberFormatInfo.ReadOnly(NumberFormatInfo)\nreferences:\n- uid: System.Globalization\n  isExternal: false\n  name: System.Globalization\n  fullName: System.Globalization\n  nameWithType: System.Globalization\n  commentId: N:System.Globalization\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.IFormatProvider\n  parent: System\n  isExternal: false\n  name: IFormatProvider\n  fullName: System.IFormatProvider\n  nameWithType: IFormatProvider\n  commentId: T:System.IFormatProvider\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.Int32[]\n  name: Int32[]\n  fullName: System.Int32[]\n  fullname.vb: System.Int32()\n  name.vb: Int32()\n  spec.csharp:\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: Int32[]\n  nameWithType.vb: Int32()\n- uid: System.Globalization.NumberFormatInfo\n  parent: System.Globalization\n  isExternal: false\n  name: NumberFormatInfo\n  fullName: System.Globalization.NumberFormatInfo\n  nameWithType: NumberFormatInfo\n  commentId: T:System.Globalization.NumberFormatInfo\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.IFormatProvider.GetFormat(System.Type)\n  parent: System.IFormatProvider\n  isExternal: true\n  name: GetFormat(Type)\n  fullName: System.IFormatProvider.GetFormat(System.Type)\n  spec.csharp:\n  - uid: System.IFormatProvider.GetFormat(System.Type)\n    name: GetFormat\n    fullName: System.IFormatProvider.GetFormat\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IFormatProvider.GetFormat(System.Type)\n    name: GetFormat\n    fullName: System.IFormatProvider.GetFormat\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: IFormatProvider.GetFormat(Type)\n  commentId: M:System.IFormatProvider.GetFormat(System.Type)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  fullName: System.Type\n  nameWithType: Type\n  commentId: T:System.Type\n- uid: System.ArgumentOutOfRangeException\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  commentId: T:System.ArgumentOutOfRangeException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  fullName: System.InvalidOperationException\n  nameWithType: InvalidOperationException\n  commentId: T:System.InvalidOperationException\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n"}