{"nodes":[{"pos":[890,930],"content":"Tuple<T1, T2, T3, T4, T5, T6, T7, TRest>","needQuote":true,"nodes":[{"content":"Tuple&lt;T1, T2, T3, T4, T5, T6, T7, TRest&gt;","pos":[0,40],"source":"Tuple<T1, T2, T3, T4, T5, T6, T7, TRest>"}]},{"content":"\\n&lt;p&gt;The type of the tuple's first component.&lt;/p&gt;\\n","pos":[1762,1813],"source":"\\n<p>The type of the tuple's first component.</p>\\n"},{"content":"\\n&lt;p&gt;The type of the tuple's second component.&lt;/p&gt;\\n","pos":[1848,1900],"source":"\\n<p>The type of the tuple's second component.</p>\\n"},{"content":"\\n&lt;p&gt;The type of the tuple's third component.&lt;/p&gt;\\n","pos":[1935,1986],"source":"\\n<p>The type of the tuple's third component.</p>\\n"},{"content":"\\n&lt;p&gt;The type of the tuple's fourth component.&lt;/p&gt;\\n","pos":[2021,2073],"source":"\\n<p>The type of the tuple's fourth component.</p>\\n"},{"content":"\\n&lt;p&gt;The type of the tuple's fifth component.&lt;/p&gt;\\n","pos":[2108,2159],"source":"\\n<p>The type of the tuple's fifth component.</p>\\n"},{"content":"\\n&lt;p&gt;The type of the tuple's sixth component.&lt;/p&gt;\\n","pos":[2194,2245],"source":"\\n<p>The type of the tuple's sixth component.</p>\\n"},{"content":"\\n&lt;p&gt;The type of the tuple's seventh component.&lt;/p&gt;\\n","pos":[2280,2333],"source":"\\n<p>The type of the tuple's seventh component.</p>\\n"},{"content":"\\n&lt;p&gt;Any generic &lt;strong&gt;Tuple&lt;/strong&gt; object that defines the types of the tuple's remaining components.&lt;/p&gt;\\n","pos":[2371,2483],"source":"\\n<p>Any generic <strong>Tuple</strong> object that defines the types of the tuple's remaining components.</p>\\n"},{"pos":[3836,3876],"content":"Tuple(T1, T2, T3, T4, T5, T6, T7, TRest)","needQuote":true,"nodes":[{"content":"Tuple(T1, T2, T3, T4, T5, T6, T7, TRest)","pos":[0,40]}]},{"content":"\\n&lt;p&gt;The value of the tuple's first component.&lt;/p&gt;\\n","pos":[4731,4783],"source":"\\n<p>The value of the tuple's first component.</p>\\n"},{"content":"\\n&lt;p&gt;The value of the tuple's second component.&lt;/p&gt;\\n","pos":[4840,4893],"source":"\\n<p>The value of the tuple's second component.</p>\\n"},{"content":"\\n&lt;p&gt;The value of the tuple's third component.&lt;/p&gt;\\n","pos":[4950,5002],"source":"\\n<p>The value of the tuple's third component.</p>\\n"},{"content":"\\n&lt;p&gt;The value of the tuple's fourth component&lt;/p&gt;\\n","pos":[5059,5111],"source":"\\n<p>The value of the tuple's fourth component</p>\\n"},{"content":"\\n&lt;p&gt;The value of the tuple's fifth component.&lt;/p&gt;\\n","pos":[5168,5220],"source":"\\n<p>The value of the tuple's fifth component.</p>\\n"},{"content":"\\n&lt;p&gt;The value of the tuple's sixth component.&lt;/p&gt;\\n","pos":[5277,5329],"source":"\\n<p>The value of the tuple's sixth component.</p>\\n"},{"content":"\\n&lt;p&gt;The value of the tuple's seventh component.&lt;/p&gt;\\n","pos":[5386,5440],"source":"\\n<p>The value of the tuple's seventh component.</p>\\n"},{"content":"\\n&lt;p&gt;Any generic &lt;strong&gt;Tuple&lt;/strong&gt; object that contains the values of the tuple's remaining components.&lt;/p&gt;\\n","pos":[5499,5613],"source":"\\n<p>Any generic <strong>Tuple</strong> object that contains the values of the tuple's remaining components.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;rest&lt;/em&gt; is not a generic &lt;strong&gt;Tuple&lt;/strong&gt; object.&lt;/p&gt;\\n","pos":[5724,5798],"source":"\\n<p>\\n<em>rest</em> is not a generic <strong>Tuple</strong> object.</p>\\n"},{"pos":[6453,6458],"content":"Item1","needQuote":true,"nodes":[{"content":"Item1","pos":[0,5]}]},{"pos":[7692,7697],"content":"Item2","needQuote":true,"nodes":[{"content":"Item2","pos":[0,5]}]},{"pos":[8933,8938],"content":"Item3","needQuote":true,"nodes":[{"content":"Item3","pos":[0,5]}]},{"pos":[10172,10177],"content":"Item4","needQuote":true,"nodes":[{"content":"Item4","pos":[0,5]}]},{"pos":[11413,11418],"content":"Item5","needQuote":true,"nodes":[{"content":"Item5","pos":[0,5]}]},{"pos":[12652,12657],"content":"Item6","needQuote":true,"nodes":[{"content":"Item6","pos":[0,5]}]},{"pos":[13891,13896],"content":"Item7","needQuote":true,"nodes":[{"content":"Item7","pos":[0,5]}]},{"pos":[15131,15135],"content":"Rest","needQuote":true,"nodes":[{"content":"Rest","pos":[0,4]}]},{"pos":[16416,16430],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"content":"\\n&lt;p&gt;The object to compare with this instance.&lt;/p&gt;\\n","pos":[17199,17251],"source":"\\n<p>The object to compare with this instance.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the current instance is equal to the specified object; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[17312,17439],"source":"\\n<p>\\n<strong>true</strong> if the current instance is equal to the specified object; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[17968,17981],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"content":"\\n&lt;p&gt;A 32-bit signed integer hash code.&lt;/p&gt;\\n","pos":[18671,18716],"source":"\\n<p>A 32-bit signed integer hash code.</p>\\n"},{"pos":[19488,19538],"content":"IStructuralComparable.CompareTo(Object, IComparer)","needQuote":true,"nodes":[{"content":"IStructuralComparable.CompareTo(Object, IComparer)","pos":[0,50]}]},{"content":"\\n&lt;p&gt;An object to compare with the current instance.&lt;/p&gt;\\n","pos":[20692,20750],"source":"\\n<p>An object to compare with the current instance.</p>\\n"},{"content":"\\n&lt;p&gt;An object that provides custom rules for comparison.&lt;/p&gt;\\n","pos":[20832,20895],"source":"\\n<p>An object that provides custom rules for comparison.</p>\\n"},{"content":"\\n&lt;p&gt;A signed integer that indicates the relative position of this instance and &lt;em&gt;other&lt;/em&gt; in the sort order, as shown in the following table.&lt;/p&gt;\\n&lt;p&gt;Value&lt;/p&gt;\\n&lt;p&gt;Description&lt;/p&gt;\\n&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;\\n&lt;p&gt;A negative integer&lt;/p&gt;\\n&lt;/td&gt;&lt;td&gt;\\n&lt;p&gt;This instance precedes &lt;em&gt;other&lt;/em&gt;.&lt;/p&gt;\\n&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;\\n&lt;p&gt;Zero&lt;/p&gt;\\n&lt;/td&gt;&lt;td&gt;\\n&lt;p&gt;This instance and &lt;em&gt;other&lt;/em&gt; have the same position in the sort order.&lt;/p&gt;\\n&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;\\n&lt;p&gt;A positive integer&lt;/p&gt;\\n&lt;/td&gt;&lt;td&gt;\\n&lt;p&gt;This instance follows &lt;em&gt;other&lt;/em&gt;.&lt;/p&gt;\\n&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\\n","pos":[20954,21508],"source":"\\n<p>A signed integer that indicates the relative position of this instance and <em>other</em> in the sort order, as shown in the following table.</p>\\n<p>Value</p>\\n<p>Description</p>\\n<table><tbody><tr><td>\\n<p>A negative integer</p>\\n</td><td>\\n<p>This instance precedes <em>other</em>.</p>\\n</td></tr><tr><td>\\n<p>Zero</p>\\n</td><td>\\n<p>This instance and <em>other</em> have the same position in the sort order.</p>\\n</td></tr><tr><td>\\n<p>A positive integer</p>\\n</td><td>\\n<p>This instance follows <em>other</em>.</p>\\n</td></tr></tbody></table>\\n"},{"pos":[22766,22820],"content":"IStructuralEquatable.Equals(Object, IEqualityComparer)","needQuote":true,"nodes":[{"content":"IStructuralEquatable.Equals(Object, IEqualityComparer)","pos":[0,54]}]},{"content":"\\n&lt;p&gt;The object to compare with this instance.&lt;/p&gt;\\n","pos":[23878,23930],"source":"\\n<p>The object to compare with this instance.</p>\\n"},{"content":"\\n&lt;p&gt;An object that defines the method to use to evaluate whether the two objects are equal.&lt;/p&gt;\\n","pos":[24020,24118],"source":"\\n<p>An object that defines the method to use to evaluate whether the two objects are equal.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the current instance is equal to the specified object; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[24179,24306],"source":"\\n<p>\\n<strong>true</strong> if the current instance is equal to the specified object; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[25327,25378],"content":"IStructuralEquatable.GetHashCode(IEqualityComparer)","needQuote":true,"nodes":[{"content":"IStructuralEquatable.GetHashCode(IEqualityComparer)","pos":[0,51]}]},{"content":"\\n&lt;p&gt;A 32-bit signed integer hash code.&lt;/p&gt;\\n","pos":[26740,26785],"source":"\\n<p>A 32-bit signed integer hash code.</p>\\n"},{"pos":[27640,27669],"content":"IComparable.CompareTo(Object)","needQuote":true,"nodes":[{"content":"IComparable.CompareTo(Object)","pos":[0,29]}]},{"content":"\\n&lt;p&gt;An object to compare with the current instance.&lt;/p&gt;\\n","pos":[28628,28686],"source":"\\n<p>An object to compare with the current instance.</p>\\n"},{"content":"\\n&lt;p&gt;A signed integer that indicates the relative position of this instance and &lt;em&gt;obj&lt;/em&gt; in the sort order, as shown in the following table.&lt;/p&gt;\\n&lt;p&gt;Value&lt;/p&gt;\\n&lt;p&gt;Description&lt;/p&gt;\\n&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;\\n&lt;p&gt;A negative integer&lt;/p&gt;\\n&lt;/td&gt;&lt;td&gt;\\n&lt;p&gt;This instance precedes &lt;em&gt;obj&lt;/em&gt;.&lt;/p&gt;\\n&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;\\n&lt;p&gt;Zero&lt;/p&gt;\\n&lt;/td&gt;&lt;td&gt;\\n&lt;p&gt;This instance and &lt;em&gt;obj&lt;/em&gt; have the same position in the sort order.&lt;/p&gt;\\n&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;\\n&lt;p&gt;A positive integer&lt;/p&gt;\\n&lt;/td&gt;&lt;td&gt;\\n&lt;p&gt;This instance follows &lt;em&gt;obj&lt;/em&gt;.&lt;/p&gt;\\n&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\\n","pos":[28745,29291],"source":"\\n<p>A signed integer that indicates the relative position of this instance and <em>obj</em> in the sort order, as shown in the following table.</p>\\n<p>Value</p>\\n<p>Description</p>\\n<table><tbody><tr><td>\\n<p>A negative integer</p>\\n</td><td>\\n<p>This instance precedes <em>obj</em>.</p>\\n</td></tr><tr><td>\\n<p>Zero</p>\\n</td><td>\\n<p>This instance and <em>obj</em> have the same position in the sort order.</p>\\n</td></tr><tr><td>\\n<p>A positive integer</p>\\n</td><td>\\n<p>This instance follows <em>obj</em>.</p>\\n</td></tr></tbody></table>\\n"},{"pos":[30073,30083],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[31300,31306],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[31437,31443],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[31627,31648],"content":"IStructuralComparable","needQuote":true,"nodes":[{"content":"IStructuralComparable","pos":[0,21]}]},{"pos":[31900,31920],"content":"IStructuralEquatable","needQuote":true,"nodes":[{"content":"IStructuralEquatable","pos":[0,20]}]},{"pos":[32136,32147],"content":"IComparable","needQuote":true,"nodes":[{"content":"IComparable","pos":[0,11]}]},{"pos":[32349,32371],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[32519,32525],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[32592,32593],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[32643,32649],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[32710,32711]},{"pos":[32766,32772],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[32832,32833],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[32930,32936],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[33003,33004],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[33054,33060],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[33121,33122]},{"pos":[33177,33183],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[33243,33244],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[33489,33520],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[33686,33701],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[33777,33778],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[33828,33834],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[33895,33896]},{"pos":[33951,33957],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[34017,34018],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34124,34139],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[34215,34216],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[34266,34272],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[34333,34334]},{"pos":[34389,34395],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[34455,34456],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34682,34691],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[34784,34791],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[34859,34860],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[34887,34888],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34957,34964],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[35032,35033],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[35060,35061],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[35236,35253],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[35362,35377],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[35453,35454],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[35481,35482],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[35559,35574],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[35650,35651],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[35678,35679],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[35836,35854],"content":"System.Collections","needQuote":true,"nodes":[{"content":"System.Collections","pos":[0,18]}]},{"pos":[35994,35996],"content":"T1","needQuote":true,"nodes":[{"content":"T1","pos":[0,2]}]},{"pos":[36090,36092],"content":"T2","needQuote":true,"nodes":[{"content":"T2","pos":[0,2]}]},{"pos":[36186,36188],"content":"T3","needQuote":true,"nodes":[{"content":"T3","pos":[0,2]}]},{"pos":[36282,36284],"content":"T4","needQuote":true,"nodes":[{"content":"T4","pos":[0,2]}]},{"pos":[36378,36380],"content":"T5","needQuote":true,"nodes":[{"content":"T5","pos":[0,2]}]},{"pos":[36474,36476],"content":"T6","needQuote":true,"nodes":[{"content":"T6","pos":[0,2]}]},{"pos":[36570,36572],"content":"T7","needQuote":true,"nodes":[{"content":"T7","pos":[0,2]}]},{"pos":[36672,36677],"content":"TRest","needQuote":true,"nodes":[{"content":"TRest","pos":[0,5]}]},{"pos":[36779,36781],"content":"T1","needQuote":true,"nodes":[{"content":"T1","pos":[0,2]}]},{"pos":[36854,36856],"content":"T2","needQuote":true,"nodes":[{"content":"T2","pos":[0,2]}]},{"pos":[36929,36931],"content":"T3","needQuote":true,"nodes":[{"content":"T3","pos":[0,2]}]},{"pos":[37004,37006],"content":"T4","needQuote":true,"nodes":[{"content":"T4","pos":[0,2]}]},{"pos":[37079,37081],"content":"T5","needQuote":true,"nodes":[{"content":"T5","pos":[0,2]}]},{"pos":[37154,37156],"content":"T6","needQuote":true,"nodes":[{"content":"T6","pos":[0,2]}]},{"pos":[37229,37231],"content":"T7","needQuote":true,"nodes":[{"content":"T7","pos":[0,2]}]},{"pos":[37307,37312],"content":"TRest","needQuote":true,"nodes":[{"content":"TRest","pos":[0,5]}]},{"pos":[37447,37461],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[37580,37586],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[37653,37654],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[37704,37710],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[37770,37771],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[37854,37860],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[37927,37928],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[37978,37984],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[38044,38045],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[38218,38225],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[38391,38404],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[38505,38516],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[38588,38589],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[38616,38617],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[38690,38701],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[38773,38774],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[38801,38802],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[38962,38967],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[39223,39251],"content":"CompareTo(Object, IComparer)","needQuote":true,"nodes":[{"content":"CompareTo(Object, IComparer)","pos":[0,28]}]},{"pos":[39489,39498],"content":"CompareTo","needQuote":true,"nodes":[{"content":"CompareTo","pos":[0,9]}]},{"pos":[39574,39575],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[39625,39631],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[39692,39693]},{"pos":[39763,39772],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"pos":[39826,39827],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[39969,39978],"content":"CompareTo","needQuote":true,"nodes":[{"content":"CompareTo","pos":[0,9]}]},{"pos":[40054,40055],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[40105,40111],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[40172,40173]},{"pos":[40243,40252],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"pos":[40306,40307],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[40594,40603],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"pos":[40898,40931],"content":"Equals(Object, IEqualityComparer)","needQuote":true,"nodes":[{"content":"Equals(Object, IEqualityComparer)","pos":[0,33]}]},{"pos":[41177,41183],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[41255,41256],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[41306,41312],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[41373,41374]},{"pos":[41452,41469],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[41531,41532],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[41678,41684],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[41756,41757],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[41807,41813],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[41874,41875]},{"pos":[41953,41970],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[42032,42033],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[42336,42353],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[42664,42694],"content":"GetHashCode(IEqualityComparer)","needQuote":true,"nodes":[{"content":"GetHashCode(IEqualityComparer)","pos":[0,30]}]},{"pos":[42921,42932],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[43009,43010],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[43083,43100],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[43162,43163],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[43300,43311],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[43388,43389],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[43462,43479],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[43541,43542],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[43839,43856],"content":"CompareTo(Object)","needQuote":true,"nodes":[{"content":"CompareTo(Object)","pos":[0,17]}]},{"pos":[43991,44000],"content":"CompareTo","needQuote":true,"nodes":[{"content":"CompareTo","pos":[0,9]}]},{"pos":[44054,44055],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[44105,44111],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[44171,44172],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[44263,44272],"content":"CompareTo","needQuote":true,"nodes":[{"content":"CompareTo","pos":[0,9]}]},{"pos":[44326,44327],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[44377,44383],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[44443,44444],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[44647,44657],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[44752,44760],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[44829,44830],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[44857,44858],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[44928,44936],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[45005,45006],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[45033,45034],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[45189,45195],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[45351,45368],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]}],"content":"items:\n- uid: System.Tuple`8\n  commentId: T:System.Tuple`8\n  id: Tuple`8\n  parent: System\n  children:\n  - System.Tuple`8.#ctor(`0,`1,`2,`3,`4,`5,`6,`7)\n  - System.Tuple`8.Equals(System.Object)\n  - System.Tuple`8.GetHashCode\n  - System.Tuple`8.Item1\n  - System.Tuple`8.Item2\n  - System.Tuple`8.Item3\n  - System.Tuple`8.Item4\n  - System.Tuple`8.Item5\n  - System.Tuple`8.Item6\n  - System.Tuple`8.Item7\n  - System.Tuple`8.Rest\n  - System.Tuple`8.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)\n  - System.Tuple`8.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)\n  - System.Tuple`8.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)\n  - System.Tuple`8.System#IComparable#CompareTo(System.Object)\n  - System.Tuple`8.ToString\n  langs:\n  - csharp\n  - vb\n  name: Tuple<T1, T2, T3, T4, T5, T6, T7, TRest>\n  fullName: System.Tuple<T1, T2, T3, T4, T5, T6, T7, TRest>\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/Tuple.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Tuple\n    path: src/mscorlib/src/System/Tuple.cs\n    startLine: 796\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Represents an n-tuple, where n is 8 or greater.</p>\\n\"\n  syntax:\n    content: >-\n      [Serializable]\n\n      public class Tuple<T1, T2, T3, T4, T5, T6, T7, TRest> : IStructuralEquatable, IStructuralComparable, IComparable, ITuple\n    content.vb: >-\n      <Serializable>\n\n      Public Class Tuple(Of T1, T2, T3, T4, T5, T6, T7, TRest)\n          Implements IStructuralEquatable, IStructuralComparable, IComparable, ITuple\n    typeParameters:\n    - id: T1\n      description: \"\\n<p>The type of the tuple's first component.</p>\\n\"\n    - id: T2\n      description: \"\\n<p>The type of the tuple's second component.</p>\\n\"\n    - id: T3\n      description: \"\\n<p>The type of the tuple's third component.</p>\\n\"\n    - id: T4\n      description: \"\\n<p>The type of the tuple's fourth component.</p>\\n\"\n    - id: T5\n      description: \"\\n<p>The type of the tuple's fifth component.</p>\\n\"\n    - id: T6\n      description: \"\\n<p>The type of the tuple's sixth component.</p>\\n\"\n    - id: T7\n      description: \"\\n<p>The type of the tuple's seventh component.</p>\\n\"\n    - id: TRest\n      description: \"\\n<p>Any generic <strong>Tuple</strong> object that defines the types of the tuple's remaining components.</p>\\n\"\n  seealso:\n  - type: System.Tuple\n    commentId: T:System.Tuple\n  - type: System.Tuple`1\n    commentId: T:System.Tuple`1\n  - type: System.Tuple`2\n    commentId: T:System.Tuple`2\n  - type: System.Tuple`3\n    commentId: T:System.Tuple`3\n  - type: System.Tuple`4\n    commentId: T:System.Tuple`4\n  - type: System.Tuple`5\n    commentId: T:System.Tuple`5\n  - type: System.Tuple`6\n    commentId: T:System.Tuple`6\n  - type: System.Tuple`7\n    commentId: T:System.Tuple`7\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.IStructuralComparable\n  - System.Collections.IStructuralEquatable\n  - System.IComparable\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  fullName.vb: System.Tuple(Of T1, T2, T3, T4, T5, T6, T7, TRest)\n  name.vb: Tuple(Of T1, T2, T3, T4, T5, T6, T7, TRest)\n  nameWithType: Tuple<T1, T2, T3, T4, T5, T6, T7, TRest>\n  nameWithType.vb: Tuple(Of T1, T2, T3, T4, T5, T6, T7, TRest)\n- uid: System.Tuple`8.#ctor(`0,`1,`2,`3,`4,`5,`6,`7)\n  commentId: M:System.Tuple`8.#ctor(`0,`1,`2,`3,`4,`5,`6,`7)\n  id: '#ctor(`0,`1,`2,`3,`4,`5,`6,`7)'\n  parent: System.Tuple`8\n  langs:\n  - csharp\n  - vb\n  name: Tuple(T1, T2, T3, T4, T5, T6, T7, TRest)\n  fullName: System.Tuple<T1, T2, T3, T4, T5, T6, T7, TRest>.Tuple(T1, T2, T3, T4, T5, T6, T7, TRest)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Tuple.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Tuple.cs\n    startLine: 817\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Tuple`8\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public Tuple(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7, TRest rest)\n    content.vb: Public Sub New(item1 As T1, item2 As T2, item3 As T3, item4 As T4, item5 As T5, item6 As T6, item7 As T7, rest As TRest)\n    parameters:\n    - id: item1\n      type: '{T1}'\n      description: \"\\n<p>The value of the tuple's first component.</p>\\n\"\n    - id: item2\n      type: '{T2}'\n      description: \"\\n<p>The value of the tuple's second component.</p>\\n\"\n    - id: item3\n      type: '{T3}'\n      description: \"\\n<p>The value of the tuple's third component.</p>\\n\"\n    - id: item4\n      type: '{T4}'\n      description: \"\\n<p>The value of the tuple's fourth component</p>\\n\"\n    - id: item5\n      type: '{T5}'\n      description: \"\\n<p>The value of the tuple's fifth component.</p>\\n\"\n    - id: item6\n      type: '{T6}'\n      description: \"\\n<p>The value of the tuple's sixth component.</p>\\n\"\n    - id: item7\n      type: '{T7}'\n      description: \"\\n<p>The value of the tuple's seventh component.</p>\\n\"\n    - id: rest\n      type: '{TRest}'\n      description: \"\\n<p>Any generic <strong>Tuple</strong> object that contains the values of the tuple's remaining components.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>rest</em> is not a generic <strong>Tuple</strong> object.</p>\\n\"\n  seealso:\n  - type: System.Tuple.Create``8(``0,``1,``2,``3,``4,``5,``6,``7)\n    commentId: M:System.Tuple.Create``8(``0,``1,``2,``3,``4,``5,``6,``7)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Tuple(Of T1, T2, T3, T4, T5, T6, T7, TRest).Tuple(T1, T2, T3, T4, T5, T6, T7, TRest)\n  nameWithType: Tuple<T1, T2, T3, T4, T5, T6, T7, TRest>.Tuple(T1, T2, T3, T4, T5, T6, T7, TRest)\n  nameWithType.vb: Tuple(Of T1, T2, T3, T4, T5, T6, T7, TRest).Tuple(T1, T2, T3, T4, T5, T6, T7, TRest)\n- uid: System.Tuple`8.Item1\n  commentId: P:System.Tuple`8.Item1\n  id: Item1\n  parent: System.Tuple`8\n  langs:\n  - csharp\n  - vb\n  name: Item1\n  fullName: System.Tuple<T1, T2, T3, T4, T5, T6, T7, TRest>.Item1\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Tuple.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Item1\n    path: src/mscorlib/src/System/Tuple.cs\n    startLine: 808\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Gets the value of the current <xref href=\\\"System.Tuple`8\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object's first component.</p>\\n\"\n  syntax:\n    content: public T1 Item1 { get; }\n    content.vb: Public ReadOnly Property Item1 As T1\n    parameters: []\n    return:\n      type: '{T1}'\n      description: \"\\n<p>The value of the current <xref href=\\\"System.Tuple`8\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object's first component.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  fullName.vb: System.Tuple(Of T1, T2, T3, T4, T5, T6, T7, TRest).Item1\n  nameWithType: Tuple<T1, T2, T3, T4, T5, T6, T7, TRest>.Item1\n  nameWithType.vb: Tuple(Of T1, T2, T3, T4, T5, T6, T7, TRest).Item1\n- uid: System.Tuple`8.Item2\n  commentId: P:System.Tuple`8.Item2\n  id: Item2\n  parent: System.Tuple`8\n  langs:\n  - csharp\n  - vb\n  name: Item2\n  fullName: System.Tuple<T1, T2, T3, T4, T5, T6, T7, TRest>.Item2\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Tuple.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Item2\n    path: src/mscorlib/src/System/Tuple.cs\n    startLine: 809\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Gets the value of the current <xref href=\\\"System.Tuple`8\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object's second component.</p>\\n\"\n  syntax:\n    content: public T2 Item2 { get; }\n    content.vb: Public ReadOnly Property Item2 As T2\n    parameters: []\n    return:\n      type: '{T2}'\n      description: \"\\n<p>The value of the current <xref href=\\\"System.Tuple`8\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object's second component.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  fullName.vb: System.Tuple(Of T1, T2, T3, T4, T5, T6, T7, TRest).Item2\n  nameWithType: Tuple<T1, T2, T3, T4, T5, T6, T7, TRest>.Item2\n  nameWithType.vb: Tuple(Of T1, T2, T3, T4, T5, T6, T7, TRest).Item2\n- uid: System.Tuple`8.Item3\n  commentId: P:System.Tuple`8.Item3\n  id: Item3\n  parent: System.Tuple`8\n  langs:\n  - csharp\n  - vb\n  name: Item3\n  fullName: System.Tuple<T1, T2, T3, T4, T5, T6, T7, TRest>.Item3\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Tuple.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Item3\n    path: src/mscorlib/src/System/Tuple.cs\n    startLine: 810\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Gets the value of the current <xref href=\\\"System.Tuple`8\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object's third component.</p>\\n\"\n  syntax:\n    content: public T3 Item3 { get; }\n    content.vb: Public ReadOnly Property Item3 As T3\n    parameters: []\n    return:\n      type: '{T3}'\n      description: \"\\n<p>The value of the current <xref href=\\\"System.Tuple`8\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object's third component.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  fullName.vb: System.Tuple(Of T1, T2, T3, T4, T5, T6, T7, TRest).Item3\n  nameWithType: Tuple<T1, T2, T3, T4, T5, T6, T7, TRest>.Item3\n  nameWithType.vb: Tuple(Of T1, T2, T3, T4, T5, T6, T7, TRest).Item3\n- uid: System.Tuple`8.Item4\n  commentId: P:System.Tuple`8.Item4\n  id: Item4\n  parent: System.Tuple`8\n  langs:\n  - csharp\n  - vb\n  name: Item4\n  fullName: System.Tuple<T1, T2, T3, T4, T5, T6, T7, TRest>.Item4\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Tuple.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Item4\n    path: src/mscorlib/src/System/Tuple.cs\n    startLine: 811\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Gets the value of the current <xref href=\\\"System.Tuple`8\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object's fourth component.</p>\\n\"\n  syntax:\n    content: public T4 Item4 { get; }\n    content.vb: Public ReadOnly Property Item4 As T4\n    parameters: []\n    return:\n      type: '{T4}'\n      description: \"\\n<p>The value of the current <xref href=\\\"System.Tuple`8\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object's fourth component.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  fullName.vb: System.Tuple(Of T1, T2, T3, T4, T5, T6, T7, TRest).Item4\n  nameWithType: Tuple<T1, T2, T3, T4, T5, T6, T7, TRest>.Item4\n  nameWithType.vb: Tuple(Of T1, T2, T3, T4, T5, T6, T7, TRest).Item4\n- uid: System.Tuple`8.Item5\n  commentId: P:System.Tuple`8.Item5\n  id: Item5\n  parent: System.Tuple`8\n  langs:\n  - csharp\n  - vb\n  name: Item5\n  fullName: System.Tuple<T1, T2, T3, T4, T5, T6, T7, TRest>.Item5\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Tuple.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Item5\n    path: src/mscorlib/src/System/Tuple.cs\n    startLine: 812\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Gets the value of the current <xref href=\\\"System.Tuple`8\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object's fifth component.</p>\\n\"\n  syntax:\n    content: public T5 Item5 { get; }\n    content.vb: Public ReadOnly Property Item5 As T5\n    parameters: []\n    return:\n      type: '{T5}'\n      description: \"\\n<p>The value of the current <xref href=\\\"System.Tuple`8\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object's fifth component.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  fullName.vb: System.Tuple(Of T1, T2, T3, T4, T5, T6, T7, TRest).Item5\n  nameWithType: Tuple<T1, T2, T3, T4, T5, T6, T7, TRest>.Item5\n  nameWithType.vb: Tuple(Of T1, T2, T3, T4, T5, T6, T7, TRest).Item5\n- uid: System.Tuple`8.Item6\n  commentId: P:System.Tuple`8.Item6\n  id: Item6\n  parent: System.Tuple`8\n  langs:\n  - csharp\n  - vb\n  name: Item6\n  fullName: System.Tuple<T1, T2, T3, T4, T5, T6, T7, TRest>.Item6\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Tuple.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Item6\n    path: src/mscorlib/src/System/Tuple.cs\n    startLine: 813\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Gets the value of the current <xref href=\\\"System.Tuple`8\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object's sixth component.</p>\\n\"\n  syntax:\n    content: public T6 Item6 { get; }\n    content.vb: Public ReadOnly Property Item6 As T6\n    parameters: []\n    return:\n      type: '{T6}'\n      description: \"\\n<p>The value of the current <xref href=\\\"System.Tuple`8\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object's sixth component.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  fullName.vb: System.Tuple(Of T1, T2, T3, T4, T5, T6, T7, TRest).Item6\n  nameWithType: Tuple<T1, T2, T3, T4, T5, T6, T7, TRest>.Item6\n  nameWithType.vb: Tuple(Of T1, T2, T3, T4, T5, T6, T7, TRest).Item6\n- uid: System.Tuple`8.Item7\n  commentId: P:System.Tuple`8.Item7\n  id: Item7\n  parent: System.Tuple`8\n  langs:\n  - csharp\n  - vb\n  name: Item7\n  fullName: System.Tuple<T1, T2, T3, T4, T5, T6, T7, TRest>.Item7\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Tuple.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Item7\n    path: src/mscorlib/src/System/Tuple.cs\n    startLine: 814\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Gets the value of the current <xref href=\\\"System.Tuple`8\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object's seventh component.</p>\\n\"\n  syntax:\n    content: public T7 Item7 { get; }\n    content.vb: Public ReadOnly Property Item7 As T7\n    parameters: []\n    return:\n      type: '{T7}'\n      description: \"\\n<p>The value of the current <xref href=\\\"System.Tuple`8\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object's seventh component.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  fullName.vb: System.Tuple(Of T1, T2, T3, T4, T5, T6, T7, TRest).Item7\n  nameWithType: Tuple<T1, T2, T3, T4, T5, T6, T7, TRest>.Item7\n  nameWithType.vb: Tuple(Of T1, T2, T3, T4, T5, T6, T7, TRest).Item7\n- uid: System.Tuple`8.Rest\n  commentId: P:System.Tuple`8.Rest\n  id: Rest\n  parent: System.Tuple`8\n  langs:\n  - csharp\n  - vb\n  name: Rest\n  fullName: System.Tuple<T1, T2, T3, T4, T5, T6, T7, TRest>.Rest\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Tuple.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Rest\n    path: src/mscorlib/src/System/Tuple.cs\n    startLine: 815\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Gets the current <xref href=\\\"System.Tuple`8\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object's remaining components.</p>\\n\"\n  syntax:\n    content: public TRest Rest { get; }\n    content.vb: Public ReadOnly Property Rest As TRest\n    parameters: []\n    return:\n      type: '{TRest}'\n      description: \"\\n<p>The value of the current <xref href=\\\"System.Tuple`8\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object's remaining components.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  fullName.vb: System.Tuple(Of T1, T2, T3, T4, T5, T6, T7, TRest).Rest\n  nameWithType: Tuple<T1, T2, T3, T4, T5, T6, T7, TRest>.Rest\n  nameWithType.vb: Tuple(Of T1, T2, T3, T4, T5, T6, T7, TRest).Rest\n- uid: System.Tuple`8.Equals(System.Object)\n  commentId: M:System.Tuple`8.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Tuple`8\n  langs:\n  - csharp\n  - vb\n  name: Equals(Object)\n  fullName: System.Tuple<T1, T2, T3, T4, T5, T6, T7, TRest>.Equals(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Tuple.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Equals\n    path: src/mscorlib/src/System/Tuple.cs\n    startLine: 832\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Returns a value that indicates whether the current <xref href=\\\"System.Tuple`8\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is equal to a specified object.</p>\\n\"\n  syntax:\n    content: public override bool Equals(object obj)\n    content.vb: Public Overrides Function Equals(obj As Object) As Boolean\n    parameters:\n    - id: obj\n      type: System.Object\n      description: \"\\n<p>The object to compare with this instance.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the current instance is equal to the specified object; otherwise, <strong>false</strong>.</p>\\n\"\n  overridden: System.Object.Equals(System.Object)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  fullName.vb: System.Tuple(Of T1, T2, T3, T4, T5, T6, T7, TRest).Equals(System.Object)\n  nameWithType: Tuple<T1, T2, T3, T4, T5, T6, T7, TRest>.Equals(Object)\n  nameWithType.vb: Tuple(Of T1, T2, T3, T4, T5, T6, T7, TRest).Equals(Object)\n- uid: System.Tuple`8.GetHashCode\n  commentId: M:System.Tuple`8.GetHashCode\n  id: GetHashCode\n  parent: System.Tuple`8\n  langs:\n  - csharp\n  - vb\n  name: GetHashCode()\n  fullName: System.Tuple<T1, T2, T3, T4, T5, T6, T7, TRest>.GetHashCode()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Tuple.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetHashCode\n    path: src/mscorlib/src/System/Tuple.cs\n    startLine: 894\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Calculates the hash code for the current <xref href=\\\"System.Tuple`8\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public override int GetHashCode()\n    content.vb: Public Overrides Function GetHashCode As Integer\n    return:\n      type: System.Int32\n      description: \"\\n<p>A 32-bit signed integer hash code.</p>\\n\"\n  overridden: System.Object.GetHashCode\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  fullName.vb: System.Tuple(Of T1, T2, T3, T4, T5, T6, T7, TRest).GetHashCode()\n  nameWithType: Tuple<T1, T2, T3, T4, T5, T6, T7, TRest>.GetHashCode()\n  nameWithType.vb: Tuple(Of T1, T2, T3, T4, T5, T6, T7, TRest).GetHashCode()\n- uid: System.Tuple`8.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)\n  commentId: M:System.Tuple`8.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)\n  id: System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)\n  isEii: true\n  parent: System.Tuple`8\n  langs:\n  - csharp\n  - vb\n  name: IStructuralComparable.CompareTo(Object, IComparer)\n  fullName: System.Tuple<T1, T2, T3, T4, T5, T6, T7, TRest>.System.Collections.IStructuralComparable.CompareTo(System.Object, System.Collections.IComparer)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Tuple.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.Collections.IStructuralComparable.CompareTo\n    path: src/mscorlib/src/System/Tuple.cs\n    startLine: 852\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Compares the current <xref href=\\\"System.Tuple`8\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object to a specified object by using a specified comparer and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</p>\\n\"\n  syntax:\n    content: int IStructuralComparable.CompareTo(object other, IComparer comparer)\n    content.vb: Function System.Collections.IStructuralComparable.CompareTo(other As Object, comparer As IComparer) As Integer Implements IStructuralComparable.CompareTo\n    parameters:\n    - id: other\n      type: System.Object\n      description: \"\\n<p>An object to compare with the current instance.</p>\\n\"\n    - id: comparer\n      type: System.Collections.IComparer\n      description: \"\\n<p>An object that provides custom rules for comparison.</p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>A signed integer that indicates the relative position of this instance and <em>other</em> in the sort order, as shown in the following table.</p>\\n<p>Value</p>\\n<p>Description</p>\\n<table><tbody><tr><td>\\n<p>A negative integer</p>\\n</td><td>\\n<p>This instance precedes <em>other</em>.</p>\\n</td></tr><tr><td>\\n<p>Zero</p>\\n</td><td>\\n<p>This instance and <em>other</em> have the same position in the sort order.</p>\\n</td></tr><tr><td>\\n<p>A positive integer</p>\\n</td><td>\\n<p>This instance follows <em>other</em>.</p>\\n</td></tr></tbody></table>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>other</em> is not a <xref href=\\\"System.Tuple`8\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  implements:\n  - System.Collections.IStructuralComparable.CompareTo(System.Object,System.Collections.IComparer)\n  fullName.vb: System.Tuple(Of T1, T2, T3, T4, T5, T6, T7, TRest).System.Collections.IStructuralComparable.CompareTo(System.Object, System.Collections.IComparer)\n  name.vb: System.Collections.IStructuralComparable.CompareTo(Object, IComparer)\n  nameWithType: Tuple<T1, T2, T3, T4, T5, T6, T7, TRest>.IStructuralComparable.CompareTo(Object, IComparer)\n  nameWithType.vb: Tuple(Of T1, T2, T3, T4, T5, T6, T7, TRest).System.Collections.IStructuralComparable.CompareTo(Object, IComparer)\n- uid: System.Tuple`8.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)\n  commentId: M:System.Tuple`8.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)\n  id: System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)\n  isEii: true\n  parent: System.Tuple`8\n  langs:\n  - csharp\n  - vb\n  name: IStructuralEquatable.Equals(Object, IEqualityComparer)\n  fullName: System.Tuple<T1, T2, T3, T4, T5, T6, T7, TRest>.System.Collections.IStructuralEquatable.Equals(System.Object, System.Collections.IEqualityComparer)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Tuple.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.Collections.IStructuralEquatable.Equals\n    path: src/mscorlib/src/System/Tuple.cs\n    startLine: 836\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Returns a value that indicates whether the current <xref href=\\\"System.Tuple`8\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is equal to a specified object based on a specified comparison method.</p>\\n\"\n  syntax:\n    content: bool IStructuralEquatable.Equals(object other, IEqualityComparer comparer)\n    content.vb: Function System.Collections.IStructuralEquatable.Equals(other As Object, comparer As IEqualityComparer) As Boolean Implements IStructuralEquatable.Equals\n    parameters:\n    - id: other\n      type: System.Object\n      description: \"\\n<p>The object to compare with this instance.</p>\\n\"\n    - id: comparer\n      type: System.Collections.IEqualityComparer\n      description: \"\\n<p>An object that defines the method to use to evaluate whether the two objects are equal.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the current instance is equal to the specified object; otherwise, <strong>false</strong>.</p>\\n\"\n  implements:\n  - System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)\n  fullName.vb: System.Tuple(Of T1, T2, T3, T4, T5, T6, T7, TRest).System.Collections.IStructuralEquatable.Equals(System.Object, System.Collections.IEqualityComparer)\n  name.vb: System.Collections.IStructuralEquatable.Equals(Object, IEqualityComparer)\n  nameWithType: Tuple<T1, T2, T3, T4, T5, T6, T7, TRest>.IStructuralEquatable.Equals(Object, IEqualityComparer)\n  nameWithType.vb: Tuple(Of T1, T2, T3, T4, T5, T6, T7, TRest).System.Collections.IStructuralEquatable.Equals(Object, IEqualityComparer)\n- uid: System.Tuple`8.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)\n  commentId: M:System.Tuple`8.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)\n  id: System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)\n  isEii: true\n  parent: System.Tuple`8\n  langs:\n  - csharp\n  - vb\n  name: IStructuralEquatable.GetHashCode(IEqualityComparer)\n  fullName: System.Tuple<T1, T2, T3, T4, T5, T6, T7, TRest>.System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Tuple.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.Collections.IStructuralEquatable.GetHashCode\n    path: src/mscorlib/src/System/Tuple.cs\n    startLine: 898\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Calculates the hash code for the current <xref href=\\\"System.Tuple`8\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object by using a specified computation method.</p>\\n\"\n  syntax:\n    content: int IStructuralEquatable.GetHashCode(IEqualityComparer comparer)\n    content.vb: Function System.Collections.IStructuralEquatable.GetHashCode(comparer As IEqualityComparer) As Integer Implements IStructuralEquatable.GetHashCode\n    parameters:\n    - id: comparer\n      type: System.Collections.IEqualityComparer\n      description: \"\\n<p>An object whose <xref href=\\\"System.Collections.IEqualityComparer.GetHashCode(System.Object)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>  method calculates the hash code of the current <xref href=\\\"System.Tuple`8\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>A 32-bit signed integer hash code.</p>\\n\"\n  implements:\n  - System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)\n  fullName.vb: System.Tuple(Of T1, T2, T3, T4, T5, T6, T7, TRest).System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)\n  name.vb: System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)\n  nameWithType: Tuple<T1, T2, T3, T4, T5, T6, T7, TRest>.IStructuralEquatable.GetHashCode(IEqualityComparer)\n  nameWithType.vb: Tuple(Of T1, T2, T3, T4, T5, T6, T7, TRest).System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)\n- uid: System.Tuple`8.System#IComparable#CompareTo(System.Object)\n  commentId: M:System.Tuple`8.System#IComparable#CompareTo(System.Object)\n  id: System#IComparable#CompareTo(System.Object)\n  isEii: true\n  parent: System.Tuple`8\n  langs:\n  - csharp\n  - vb\n  name: IComparable.CompareTo(Object)\n  fullName: System.Tuple<T1, T2, T3, T4, T5, T6, T7, TRest>.System.IComparable.CompareTo(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Tuple.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.IComparable.CompareTo\n    path: src/mscorlib/src/System/Tuple.cs\n    startLine: 848\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Compares the current <xref href=\\\"System.Tuple`8\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object to a specified object and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</p>\\n\"\n  syntax:\n    content: int IComparable.CompareTo(object obj)\n    content.vb: Function System.IComparable.CompareTo(obj As Object) As Integer Implements IComparable.CompareTo\n    parameters:\n    - id: obj\n      type: System.Object\n      description: \"\\n<p>An object to compare with the current instance.</p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>A signed integer that indicates the relative position of this instance and <em>obj</em> in the sort order, as shown in the following table.</p>\\n<p>Value</p>\\n<p>Description</p>\\n<table><tbody><tr><td>\\n<p>A negative integer</p>\\n</td><td>\\n<p>This instance precedes <em>obj</em>.</p>\\n</td></tr><tr><td>\\n<p>Zero</p>\\n</td><td>\\n<p>This instance and <em>obj</em> have the same position in the sort order.</p>\\n</td></tr><tr><td>\\n<p>A positive integer</p>\\n</td><td>\\n<p>This instance follows <em>obj</em>.</p>\\n</td></tr></tbody></table>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>obj</em> is not a <xref href=\\\"System.Tuple`8\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  implements:\n  - System.IComparable.CompareTo(System.Object)\n  fullName.vb: System.Tuple(Of T1, T2, T3, T4, T5, T6, T7, TRest).System.IComparable.CompareTo(System.Object)\n  name.vb: System.IComparable.CompareTo(Object)\n  nameWithType: Tuple<T1, T2, T3, T4, T5, T6, T7, TRest>.IComparable.CompareTo(Object)\n  nameWithType.vb: Tuple(Of T1, T2, T3, T4, T5, T6, T7, TRest).System.IComparable.CompareTo(Object)\n- uid: System.Tuple`8.ToString\n  commentId: M:System.Tuple`8.ToString\n  id: ToString\n  parent: System.Tuple`8\n  langs:\n  - csharp\n  - vb\n  name: ToString()\n  fullName: System.Tuple<T1, T2, T3, T4, T5, T6, T7, TRest>.ToString()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Tuple.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ToString\n    path: src/mscorlib/src/System/Tuple.cs\n    startLine: 928\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Returns a string that represents the value of this <xref href=\\\"System.Tuple`8\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n  syntax:\n    content: public override string ToString()\n    content.vb: Public Overrides Function ToString As String\n    return:\n      type: System.String\n      description: \"\\n<p>The string representation of this <xref href=\\\"System.Tuple`8\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  overridden: System.Object.ToString\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  fullName.vb: System.Tuple(Of T1, T2, T3, T4, T5, T6, T7, TRest).ToString()\n  nameWithType: Tuple<T1, T2, T3, T4, T5, T6, T7, TRest>.ToString()\n  nameWithType.vb: Tuple(Of T1, T2, T3, T4, T5, T6, T7, TRest).ToString()\nreferences:\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Collections.IStructuralComparable\n  parent: System.Collections\n  isExternal: false\n  name: IStructuralComparable\n  fullName: System.Collections.IStructuralComparable\n  nameWithType: IStructuralComparable\n  commentId: T:System.Collections.IStructuralComparable\n- uid: System.Collections.IStructuralEquatable\n  parent: System.Collections\n  isExternal: false\n  name: IStructuralEquatable\n  fullName: System.Collections.IStructuralEquatable\n  nameWithType: IStructuralEquatable\n  commentId: T:System.Collections.IStructuralEquatable\n- uid: System.IComparable\n  parent: System\n  isExternal: false\n  name: IComparable\n  fullName: System.IComparable\n  nameWithType: IComparable\n  commentId: T:System.IComparable\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System.Collections\n  isExternal: false\n  name: System.Collections\n  fullName: System.Collections\n  nameWithType: System.Collections\n  commentId: N:System.Collections\n- uid: '{T1}'\n  definition: T1\n  name: T1\n  fullName: T1\n  nameWithType: T1\n  commentId: '!:T1'\n- uid: '{T2}'\n  definition: T2\n  name: T2\n  fullName: T2\n  nameWithType: T2\n  commentId: '!:T2'\n- uid: '{T3}'\n  definition: T3\n  name: T3\n  fullName: T3\n  nameWithType: T3\n  commentId: '!:T3'\n- uid: '{T4}'\n  definition: T4\n  name: T4\n  fullName: T4\n  nameWithType: T4\n  commentId: '!:T4'\n- uid: '{T5}'\n  definition: T5\n  name: T5\n  fullName: T5\n  nameWithType: T5\n  commentId: '!:T5'\n- uid: '{T6}'\n  definition: T6\n  name: T6\n  fullName: T6\n  nameWithType: T6\n  commentId: '!:T6'\n- uid: '{T7}'\n  definition: T7\n  name: T7\n  fullName: T7\n  nameWithType: T7\n  commentId: '!:T7'\n- uid: '{TRest}'\n  definition: TRest\n  name: TRest\n  fullName: TRest\n  nameWithType: TRest\n  commentId: '!:TRest'\n- uid: T1\n  isExternal: false\n  name: T1\n  fullName: T1\n  nameWithType: T1\n- uid: T2\n  isExternal: false\n  name: T2\n  fullName: T2\n  nameWithType: T2\n- uid: T3\n  isExternal: false\n  name: T3\n  fullName: T3\n  nameWithType: T3\n- uid: T4\n  isExternal: false\n  name: T4\n  fullName: T4\n  nameWithType: T4\n- uid: T5\n  isExternal: false\n  name: T5\n  fullName: T5\n  nameWithType: T5\n- uid: T6\n  isExternal: false\n  name: T6\n  fullName: T6\n  nameWithType: T6\n- uid: T7\n  isExternal: false\n  name: T7\n  fullName: T7\n  nameWithType: T7\n- uid: TRest\n  isExternal: false\n  name: TRest\n  fullName: TRest\n  nameWithType: TRest\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.Collections.IStructuralComparable.CompareTo(System.Object,System.Collections.IComparer)\n  parent: System.Collections.IStructuralComparable\n  isExternal: true\n  name: CompareTo(Object, IComparer)\n  fullName: System.Collections.IStructuralComparable.CompareTo(System.Object, System.Collections.IComparer)\n  spec.csharp:\n  - uid: System.Collections.IStructuralComparable.CompareTo(System.Object,System.Collections.IComparer)\n    name: CompareTo\n    fullName: System.Collections.IStructuralComparable.CompareTo\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.IComparer\n    name: IComparer\n    fullName: System.Collections.IComparer\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.IStructuralComparable.CompareTo(System.Object,System.Collections.IComparer)\n    name: CompareTo\n    fullName: System.Collections.IStructuralComparable.CompareTo\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.IComparer\n    name: IComparer\n    fullName: System.Collections.IComparer\n  - name: )\n    fullName: )\n  nameWithType: IStructuralComparable.CompareTo(Object, IComparer)\n  commentId: M:System.Collections.IStructuralComparable.CompareTo(System.Object,System.Collections.IComparer)\n- uid: System.Collections.IComparer\n  parent: System.Collections\n  isExternal: false\n  name: IComparer\n  fullName: System.Collections.IComparer\n  nameWithType: IComparer\n  commentId: T:System.Collections.IComparer\n- uid: System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)\n  parent: System.Collections.IStructuralEquatable\n  isExternal: true\n  name: Equals(Object, IEqualityComparer)\n  fullName: System.Collections.IStructuralEquatable.Equals(System.Object, System.Collections.IEqualityComparer)\n  spec.csharp:\n  - uid: System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)\n    name: Equals\n    fullName: System.Collections.IStructuralEquatable.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.IEqualityComparer\n    name: IEqualityComparer\n    fullName: System.Collections.IEqualityComparer\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)\n    name: Equals\n    fullName: System.Collections.IStructuralEquatable.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.IEqualityComparer\n    name: IEqualityComparer\n    fullName: System.Collections.IEqualityComparer\n  - name: )\n    fullName: )\n  nameWithType: IStructuralEquatable.Equals(Object, IEqualityComparer)\n  commentId: M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)\n- uid: System.Collections.IEqualityComparer\n  parent: System.Collections\n  isExternal: false\n  name: IEqualityComparer\n  fullName: System.Collections.IEqualityComparer\n  nameWithType: IEqualityComparer\n  commentId: T:System.Collections.IEqualityComparer\n- uid: System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)\n  parent: System.Collections.IStructuralEquatable\n  isExternal: false\n  name: GetHashCode(IEqualityComparer)\n  fullName: System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)\n  spec.csharp:\n  - uid: System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)\n    name: GetHashCode\n    fullName: System.Collections.IStructuralEquatable.GetHashCode\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEqualityComparer\n    name: IEqualityComparer\n    fullName: System.Collections.IEqualityComparer\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)\n    name: GetHashCode\n    fullName: System.Collections.IStructuralEquatable.GetHashCode\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEqualityComparer\n    name: IEqualityComparer\n    fullName: System.Collections.IEqualityComparer\n  - name: )\n    fullName: )\n  nameWithType: IStructuralEquatable.GetHashCode(IEqualityComparer)\n  commentId: M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)\n- uid: System.IComparable.CompareTo(System.Object)\n  parent: System.IComparable\n  isExternal: true\n  name: CompareTo(Object)\n  fullName: System.IComparable.CompareTo(System.Object)\n  spec.csharp:\n  - uid: System.IComparable.CompareTo(System.Object)\n    name: CompareTo\n    fullName: System.IComparable.CompareTo\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IComparable.CompareTo(System.Object)\n    name: CompareTo\n    fullName: System.IComparable.CompareTo\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: IComparable.CompareTo(Object)\n  commentId: M:System.IComparable.CompareTo(System.Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n"}