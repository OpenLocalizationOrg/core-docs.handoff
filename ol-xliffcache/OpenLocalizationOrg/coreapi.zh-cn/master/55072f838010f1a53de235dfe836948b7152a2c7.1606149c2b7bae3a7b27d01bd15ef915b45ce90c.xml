{"nodes":[{"pos":[489,495],"content":"SqlXml","needQuote":true,"nodes":[{"content":"SqlXml","pos":[0,6]}]},{"pos":[1814,1822],"content":"SqlXml()","needQuote":true,"nodes":[{"content":"SqlXml()","pos":[0,8]}]},{"pos":[2761,2775],"content":"SqlXml(Stream)","needQuote":true,"nodes":[{"content":"SqlXml(Stream)","pos":[0,14]}]},{"pos":[4329,4350],"content":"SqlXml(Xml.XmlReader)","needQuote":true,"nodes":[{"content":"SqlXml(Xml.XmlReader)","pos":[0,21]}]},{"pos":[5771,5777],"content":"IsNull","needQuote":true,"nodes":[{"content":"IsNull","pos":[0,6]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if &lt;strong&gt;Value&lt;/strong&gt; is null.","pos":[6543,6606],"source":"\\n<p>\\n<strong>true</strong> if <strong>Value</strong> is null."},{"content":"Otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[6607,6647],"source":" Otherwise, <strong>false</strong>.</p>\\n"},{"pos":[8155,8160],"content":"Value","needQuote":true,"nodes":[{"content":"Value","pos":[0,5]}]},{"content":"\\n&lt;p&gt;The string representation of the XML content.&lt;/p&gt;\\n","pos":[8933,8989],"source":"\\n<p>The string representation of the XML content.</p>\\n"},{"pos":[9295,9309],"content":"CreateReader()","needQuote":true,"nodes":[{"content":"CreateReader()","pos":[0,14]}]},{"pos":[10979,10999],"content":"System.Data.SqlTypes","needQuote":true,"nodes":[{"content":"System.Data.SqlTypes","pos":[0,20]}]},{"pos":[11172,11178],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11354,11363],"content":"INullable","needQuote":true,"nodes":[{"content":"INullable","pos":[0,9]}]},{"pos":[11560,11570],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[11665,11673],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[11742,11743],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11770,11771],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11841,11849],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[11918,11919],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11946,11947],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12130,12144],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[12263,12269],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[12336,12337],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12387,12393],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12453,12454],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12537,12543],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[12610,12611],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12661,12667],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12727,12728],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12942,12964],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[13112,13118],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[13185,13186],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13236,13242],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[13303,13304]},{"pos":[13359,13365],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13425,13426],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13523,13529],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[13596,13597],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13647,13653],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[13714,13715]},{"pos":[13770,13776],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13836,13837],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14082,14113],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[14279,14294],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[14370,14371],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14421,14427],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[14488,14489]},{"pos":[14544,14550],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14610,14611],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14717,14732],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[14808,14809],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14859,14865],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[14926,14927]},{"pos":[14982,14988],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15048,15049],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15279,15292],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[15393,15404],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[15476,15477],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15504,15505],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15578,15589],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[15661,15662],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15689,15690],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15865,15874],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[15967,15974],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[16042,16043],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16070,16071],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16140,16147],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[16215,16216],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16243,16244],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16419,16436],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[16545,16560],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[16636,16637],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16664,16665],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16742,16757],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[16833,16834],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16861,16862],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17007,17013],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[17150,17156],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[17286,17295],"content":"System.IO","needQuote":true,"nodes":[{"content":"System.IO","pos":[0,9]}]},{"pos":[17446,17455],"content":"XmlReader","needQuote":true,"nodes":[{"content":"XmlReader","pos":[0,9]}]},{"pos":[17597,17607],"content":"System.Xml","needQuote":true,"nodes":[{"content":"System.Xml","pos":[0,10]}]},{"pos":[17798,17804],"content":"IsNull","needQuote":true,"nodes":[{"content":"IsNull","pos":[0,6]}]},{"pos":[18008,18015],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[18191,18197],"content":"SqlXml","needQuote":true,"nodes":[{"content":"SqlXml","pos":[0,6]}]},{"pos":[18370,18376],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[18533,18554],"content":"SqlNullValueException","needQuote":true,"nodes":[{"content":"SqlNullValueException","pos":[0,21]}]}],"content":"items:\n- uid: System.Data.SqlTypes.SqlXml\n  commentId: T:System.Data.SqlTypes.SqlXml\n  id: SqlXml\n  parent: System.Data.SqlTypes\n  children:\n  - System.Data.SqlTypes.SqlXml.#ctor\n  - System.Data.SqlTypes.SqlXml.#ctor(System.IO.Stream)\n  - System.Data.SqlTypes.SqlXml.#ctor(System.Xml.XmlReader)\n  - System.Data.SqlTypes.SqlXml.CreateReader\n  - System.Data.SqlTypes.SqlXml.IsNull\n  - System.Data.SqlTypes.SqlXml.Null\n  - System.Data.SqlTypes.SqlXml.Value\n  langs:\n  - csharp\n  - vb\n  name: SqlXml\n  fullName: System.Data.SqlTypes.SqlXml\n  type: Class\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SqlXml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SqlXml\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SqlXml.cs\n    startLine: 17\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Represents XML data stored in or retrieved from a server.</p>\\n\"\n  syntax:\n    content: 'public sealed class SqlXml : INullable'\n    content.vb: >-\n      Public NotInheritable Class SqlXml\n          Implements INullable\n  inheritance:\n  - System.Object\n  implements:\n  - System.Data.SqlTypes.INullable\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: SqlXml\n- uid: System.Data.SqlTypes.SqlXml.#ctor\n  commentId: M:System.Data.SqlTypes.SqlXml.#ctor\n  id: '#ctor'\n  parent: System.Data.SqlTypes.SqlXml\n  langs:\n  - csharp\n  - vb\n  name: SqlXml()\n  fullName: System.Data.SqlTypes.SqlXml.SqlXml()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SqlXml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SqlXml.cs\n    startLine: 27\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Creates a new <xref href=\\\"System.Data.SqlTypes.SqlXml\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n  syntax:\n    content: public SqlXml()\n    content.vb: Public Sub New\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlXml.SqlXml()\n- uid: System.Data.SqlTypes.SqlXml.#ctor(System.IO.Stream)\n  commentId: M:System.Data.SqlTypes.SqlXml.#ctor(System.IO.Stream)\n  id: '#ctor(System.IO.Stream)'\n  parent: System.Data.SqlTypes.SqlXml\n  langs:\n  - csharp\n  - vb\n  name: SqlXml(Stream)\n  fullName: System.Data.SqlTypes.SqlXml.SqlXml(System.IO.Stream)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SqlXml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SqlXml.cs\n    startLine: 54\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Creates a new <xref href=\\\"System.Data.SqlTypes.SqlXml\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance, supplying the XML value from the supplied <xref href=\\\"System.IO.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>-derived instance.</p>\\n\"\n  syntax:\n    content: public SqlXml(Stream value)\n    content.vb: Public Sub New(value As Stream)\n    parameters:\n    - id: value\n      type: System.IO.Stream\n      description: \"\\n<p>A <xref href=\\\"System.IO.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>-derived instance (such as <xref href=\\\"System.IO.FileStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>) from which to load the <xref href=\\\"System.Data.SqlTypes.SqlXml\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance's Xml content.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlXml.SqlXml(Stream)\n- uid: System.Data.SqlTypes.SqlXml.#ctor(System.Xml.XmlReader)\n  commentId: M:System.Data.SqlTypes.SqlXml.#ctor(System.Xml.XmlReader)\n  id: '#ctor(System.Xml.XmlReader)'\n  parent: System.Data.SqlTypes.SqlXml\n  langs:\n  - csharp\n  - vb\n  name: SqlXml(Xml.XmlReader)\n  fullName: System.Data.SqlTypes.SqlXml.SqlXml(System.Xml.XmlReader)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs\n    startLine: 1468\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Creates a new <xref href=\\\"System.Data.SqlTypes.SqlXml\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance and associates it with the content of the supplied <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public SqlXml(Xml.XmlReader value)\n    content.vb: Public Sub New(value As Xml.XmlReader)\n    parameters:\n    - id: value\n      type: System.Xml.XmlReader\n      description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>-derived class instance to be used as the value of the new <xref href=\\\"System.Data.SqlTypes.SqlXml\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlXml.SqlXml(Xml.XmlReader)\n- uid: System.Data.SqlTypes.SqlXml.IsNull\n  commentId: P:System.Data.SqlTypes.SqlXml.IsNull\n  id: IsNull\n  parent: System.Data.SqlTypes.SqlXml\n  langs:\n  - csharp\n  - vb\n  name: IsNull\n  fullName: System.Data.SqlTypes.SqlXml.IsNull\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SqlXml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsNull\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SqlXml.cs\n    startLine: 110\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Indicates whether this instance represents a null <xref href=\\\"System.Data.SqlTypes.SqlXml\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  syntax:\n    content: public bool IsNull { get; }\n    content.vb: Public ReadOnly Property IsNull As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if <strong>Value</strong> is null. Otherwise, <strong>false</strong>.</p>\\n\"\n  implements:\n  - System.Data.SqlTypes.INullable.IsNull\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: SqlXml.IsNull\n- uid: System.Data.SqlTypes.SqlXml.Null\n  commentId: P:System.Data.SqlTypes.SqlXml.Null\n  parent: System.Data.SqlTypes.SqlXml\n  langs:\n  - csharp\n  - vb\n  fullName: System.Data.SqlTypes.SqlXml.Null\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SqlXml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SqlXml.cs\n    startLine: 143\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Represents a null instance of the <xref href=\\\"System.Data.SqlTypes.SqlXml\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> type.</p>\\n\"\n  syntax:\n    content: public static SqlXml Null { get; }\n    content.vb: Public Shared ReadOnly Property Null As SqlXml\n    parameters: []\n    return:\n      type: System.Data.SqlTypes.SqlXml\n      description: \"\\n<p>A null instance of the <xref href=\\\"System.Data.SqlTypes.SqlXml\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> type.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: SqlXml.Null\n- uid: System.Data.SqlTypes.SqlXml.Value\n  commentId: P:System.Data.SqlTypes.SqlXml.Value\n  id: Value\n  parent: System.Data.SqlTypes.SqlXml\n  langs:\n  - csharp\n  - vb\n  name: Value\n  fullName: System.Data.SqlTypes.SqlXml.Value\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SqlXml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Value\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SqlXml.cs\n    startLine: 115\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Gets the string representation of the XML content of this <xref href=\\\"System.Data.SqlTypes.SqlXml\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n  syntax:\n    content: public string Value { get; }\n    content.vb: Public ReadOnly Property Value As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The string representation of the XML content.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: SqlXml.Value\n- uid: System.Data.SqlTypes.SqlXml.CreateReader\n  commentId: M:System.Data.SqlTypes.SqlXml.CreateReader\n  id: CreateReader\n  parent: System.Data.SqlTypes.SqlXml\n  langs:\n  - csharp\n  - vb\n  name: CreateReader()\n  fullName: System.Data.SqlTypes.SqlXml.CreateReader()\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SqlXml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CreateReader\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SqlXml.cs\n    startLine: 70\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Gets the value of the XML content of this <xref href=\\\"System.Data.SqlTypes.SqlXml\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> as a <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public XmlReader CreateReader()\n    content.vb: Public Function CreateReader As XmlReader\n    return:\n      type: XmlReader\n      description: \"\\n<p>A <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>-derived instance that contains the XML content. The actual type may vary (for example, the return value might be <xref href=\\\"System.Xml.XmlTextReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>) depending on how the information is represented internally, on the server.</p>\\n\"\n  exceptions:\n  - type: System.Data.SqlTypes.SqlNullValueException\n    commentId: T:System.Data.SqlTypes.SqlNullValueException\n    description: \"\\n<p>Attempt was made to access this property on a null instance of <xref href=\\\"System.Data.SqlTypes.SqlXml\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlXml.CreateReader()\nreferences:\n- uid: System.Data.SqlTypes\n  isExternal: false\n  name: System.Data.SqlTypes\n  fullName: System.Data.SqlTypes\n  nameWithType: System.Data.SqlTypes\n  commentId: N:System.Data.SqlTypes\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Data.SqlTypes.INullable\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: INullable\n  fullName: System.Data.SqlTypes.INullable\n  nameWithType: INullable\n  commentId: T:System.Data.SqlTypes.INullable\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  fullName: System.IO.Stream\n  nameWithType: Stream\n  commentId: T:System.IO.Stream\n- uid: System.IO\n  isExternal: false\n  name: System.IO\n  fullName: System.IO\n  nameWithType: System.IO\n  commentId: N:System.IO\n- uid: System.Xml.XmlReader\n  parent: System.Xml\n  isExternal: false\n  name: XmlReader\n  fullName: System.Xml.XmlReader\n  nameWithType: XmlReader\n  commentId: T:System.Xml.XmlReader\n- uid: System.Xml\n  isExternal: false\n  name: System.Xml\n  fullName: System.Xml\n  nameWithType: System.Xml\n  commentId: N:System.Xml\n- uid: System.Data.SqlTypes.INullable.IsNull\n  parent: System.Data.SqlTypes.INullable\n  isExternal: false\n  name: IsNull\n  fullName: System.Data.SqlTypes.INullable.IsNull\n  nameWithType: INullable.IsNull\n  commentId: P:System.Data.SqlTypes.INullable.IsNull\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.Data.SqlTypes.SqlXml\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlXml\n  fullName: System.Data.SqlTypes.SqlXml\n  nameWithType: SqlXml\n  commentId: T:System.Data.SqlTypes.SqlXml\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.Data.SqlTypes.SqlNullValueException\n  isExternal: false\n  name: SqlNullValueException\n  fullName: System.Data.SqlTypes.SqlNullValueException\n  nameWithType: SqlNullValueException\n  commentId: T:System.Data.SqlTypes.SqlNullValueException\n"}