{"nodes":[{"pos":[248,276],"content":"CollectionChangeEventHandler","needQuote":true,"nodes":[{"content":"CollectionChangeEventHandler","pos":[0,28]}]},{"content":"\\n&lt;p&gt;The source of the event.","pos":[1374,1403],"source":"\\n<p>The source of the event."},{"content":"&lt;/p&gt;\\n","pos":[1404,1410],"source":" </p>\\n"},{"pos":[2206,2227],"content":"System.ComponentModel","needQuote":true,"nodes":[{"content":"System.ComponentModel","pos":[0,21]}]},{"pos":[2575,2590],"content":"GetMethodInfo()","needQuote":true,"nodes":[{"content":"GetMethodInfo()","pos":[0,15]}]},{"pos":[2759,2772],"content":"GetMethodInfo","needQuote":true,"nodes":[{"content":"GetMethodInfo","pos":[0,13]}]},{"pos":[2857,2858],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[2885,2886],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[2993,3006],"content":"GetMethodInfo","needQuote":true,"nodes":[{"content":"GetMethodInfo","pos":[0,13]}]},{"pos":[3091,3092],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[3119,3120],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[3355,3361],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[3555,3580],"content":"CollectionChangeEventArgs","needQuote":true,"nodes":[{"content":"CollectionChangeEventArgs","pos":[0,25]}]},{"pos":[3857,3880],"content":"GetMethodInfo(Delegate)","needQuote":true,"nodes":[{"content":"GetMethodInfo(Delegate)","pos":[0,23]}]},{"pos":[4081,4094],"content":"GetMethodInfo","needQuote":true,"nodes":[{"content":"GetMethodInfo","pos":[0,13]}]},{"pos":[4179,4180],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[4232,4240],"content":"Delegate","needQuote":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[4302,4303],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[4427,4440],"content":"GetMethodInfo","needQuote":true,"nodes":[{"content":"GetMethodInfo","pos":[0,13]}]},{"pos":[4525,4526],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[4578,4586],"content":"Delegate","needQuote":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[4648,4649],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[4935,4962],"content":"RuntimeReflectionExtensions","needQuote":true,"nodes":[{"content":"RuntimeReflectionExtensions","pos":[0,27]}]},{"pos":[5168,5174],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[5292,5309],"content":"System.Reflection","needQuote":true,"nodes":[{"content":"System.Reflection","pos":[0,17]}]}],"content":"items:\n- uid: System.ComponentModel.CollectionChangeEventHandler\n  commentId: T:System.ComponentModel.CollectionChangeEventHandler\n  id: CollectionChangeEventHandler\n  parent: System.ComponentModel\n  children: []\n  langs:\n  - csharp\n  - vb\n  name: CollectionChangeEventHandler\n  fullName: System.ComponentModel.CollectionChangeEventHandler\n  type: Delegate\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CollectionChangeEventHandler.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CollectionChangeEventHandler\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CollectionChangeEventHandler.cs\n    startLine: 12\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Represents the method that handles the <xref href=\\\"System.Data.DataColumnCollection.CollectionChanged\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> event raised when adding elements to or removing elements from a collection.</p>\\n\"\n  syntax:\n    content: public delegate void CollectionChangeEventHandler(object sender, CollectionChangeEventArgs e);\n    content.vb: Public Delegate Sub CollectionChangeEventHandler(sender As Object, e As CollectionChangeEventArgs)\n    parameters:\n    - id: sender\n      type: System.Object\n      description: \"\\n<p>The source of the event. </p>\\n\"\n    - id: e\n      type: System.ComponentModel.CollectionChangeEventArgs\n      description: \"\\n<p>A <xref href=\\\"System.ComponentModel.CollectionChangeEventArgs\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the event data. </p>\\n\"\n  seealso:\n  - type: System.ComponentModel.CollectionChangeEventArgs\n    commentId: T:System.ComponentModel.CollectionChangeEventArgs\n  - type: System.ComponentModel.CollectionChangeAction\n    commentId: T:System.ComponentModel.CollectionChangeAction\n  modifiers.csharp:\n  - public\n  - delegate\n  modifiers.vb:\n  - Public\n  - Delegate\n  nameWithType: CollectionChangeEventHandler\n  extensionMethods:\n  - System.Delegate.System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\nreferences:\n- uid: System.ComponentModel\n  isExternal: false\n  name: System.ComponentModel\n  fullName: System.ComponentModel\n  nameWithType: System.ComponentModel\n  commentId: N:System.ComponentModel\n- uid: System.Delegate.System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n  parent: System.Reflection.RuntimeReflectionExtensions\n  definition: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  name: GetMethodInfo()\n  fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo()\n  spec.csharp:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n    name: GetMethodInfo\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n    name: GetMethodInfo\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: RuntimeReflectionExtensions.GetMethodInfo()\n  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.ComponentModel.CollectionChangeEventArgs\n  parent: System.ComponentModel\n  isExternal: false\n  name: CollectionChangeEventArgs\n  fullName: System.ComponentModel.CollectionChangeEventArgs\n  nameWithType: CollectionChangeEventArgs\n  commentId: T:System.ComponentModel.CollectionChangeEventArgs\n- uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  isExternal: true\n  name: GetMethodInfo(Delegate)\n  fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  spec.csharp:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n    name: GetMethodInfo\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n  - name: (\n    fullName: (\n  - uid: System.Delegate\n    name: Delegate\n    fullName: System.Delegate\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n    name: GetMethodInfo\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n  - name: (\n    fullName: (\n  - uid: System.Delegate\n    name: Delegate\n    fullName: System.Delegate\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: RuntimeReflectionExtensions.GetMethodInfo(Delegate)\n  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n- uid: System.Reflection.RuntimeReflectionExtensions\n  parent: System.Reflection\n  isExternal: false\n  name: RuntimeReflectionExtensions\n  fullName: System.Reflection.RuntimeReflectionExtensions\n  nameWithType: RuntimeReflectionExtensions\n  commentId: T:System.Reflection.RuntimeReflectionExtensions\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Reflection\n  isExternal: false\n  name: System.Reflection\n  fullName: System.Reflection\n  nameWithType: System.Reflection\n  commentId: N:System.Reflection\n"}