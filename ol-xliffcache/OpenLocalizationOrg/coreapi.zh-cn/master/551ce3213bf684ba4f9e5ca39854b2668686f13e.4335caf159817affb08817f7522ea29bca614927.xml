{"nodes":[{"pos":[727,752],"content":"XmlDictionaryReaderQuotas","needQuote":true,"nodes":[{"content":"XmlDictionaryReaderQuotas","pos":[0,25]}]},{"pos":[2117,2144],"content":"XmlDictionaryReaderQuotas()","needQuote":true,"nodes":[{"content":"XmlDictionaryReaderQuotas()","pos":[0,27]}]},{"pos":[3094,3097],"content":"Max","needQuote":true,"nodes":[{"content":"Max","pos":[0,3]}]},{"pos":[4503,4517],"content":"MaxArrayLength","needQuote":true,"nodes":[{"content":"MaxArrayLength","pos":[0,14]}]},{"content":"\\n&lt;p&gt;The maximum allowed array length.","pos":[5253,5291],"source":"\\n<p>The maximum allowed array length."},{"content":"The default is 16384.&lt;/p&gt;\\n","pos":[5292,5319],"source":" The default is 16384.</p>\\n"},{"content":"\\n&lt;p&gt;Trying to &lt;strong&gt;set&lt;/strong&gt; the value, but quota values are read-only for this instance.&lt;/p&gt;\\n","pos":[5446,5548],"source":"\\n<p>Trying to <strong>set</strong> the value, but quota values are read-only for this instance.</p>\\n"},{"content":"\\n&lt;p&gt;Trying to &lt;strong&gt;set&lt;/strong&gt; the value to less than zero.&lt;/p&gt;\\n","pos":[5645,5715],"source":"\\n<p>Trying to <strong>set</strong> the value to less than zero.</p>\\n"},{"pos":[6080,6095],"content":"MaxBytesPerRead","needQuote":true,"nodes":[{"content":"MaxBytesPerRead","pos":[0,15]}]},{"content":"\\n&lt;p&gt;The maximum allowed bytes returned for each read.","pos":[6851,6905],"source":"\\n<p>The maximum allowed bytes returned for each read."},{"content":"The default is 4096.&lt;/p&gt;\\n","pos":[6906,6932],"source":" The default is 4096.</p>\\n"},{"content":"\\n&lt;p&gt;Trying to &lt;strong&gt;set&lt;/strong&gt; the value, but quota values are read-only for this instance.&lt;/p&gt;\\n","pos":[7059,7161],"source":"\\n<p>Trying to <strong>set</strong> the value, but quota values are read-only for this instance.</p>\\n"},{"content":"\\n&lt;p&gt;Trying to &lt;strong&gt;set&lt;/strong&gt; the value to less than zero.&lt;/p&gt;\\n","pos":[7258,7328],"source":"\\n<p>Trying to <strong>set</strong> the value to less than zero.</p>\\n"},{"pos":[7673,7681],"content":"MaxDepth","needQuote":true,"nodes":[{"content":"MaxDepth","pos":[0,8]}]},{"content":"\\n&lt;p&gt;The maximum nested node depth.","pos":[8390,8425],"source":"\\n<p>The maximum nested node depth."},{"content":"The default is 32;&lt;/p&gt;\\n","pos":[8426,8450],"source":" The default is 32;</p>\\n"},{"content":"\\n&lt;p&gt;Trying to &lt;strong&gt;set&lt;/strong&gt; the value and quota values are read-only for this instance.&lt;/p&gt;\\n","pos":[8577,8678],"source":"\\n<p>Trying to <strong>set</strong> the value and quota values are read-only for this instance.</p>\\n"},{"content":"\\n&lt;p&gt;Trying to &lt;strong&gt;set&lt;/strong&gt; the value is less than zero.&lt;/p&gt;\\n","pos":[8775,8845],"source":"\\n<p>Trying to <strong>set</strong> the value is less than zero.</p>\\n"},{"pos":[9222,9243],"content":"MaxNameTableCharCount","needQuote":true,"nodes":[{"content":"MaxNameTableCharCount","pos":[0,21]}]},{"content":"\\n&lt;p&gt;The maximum characters allowed in a table name.","pos":[10021,10073],"source":"\\n<p>The maximum characters allowed in a table name."},{"content":"The default is 16384.&lt;/p&gt;\\n","pos":[10074,10101],"source":" The default is 16384.</p>\\n"},{"content":"\\n&lt;p&gt;Trying to &lt;strong&gt;set&lt;/strong&gt; the value, but quota values are read-only for this instance.&lt;/p&gt;\\n","pos":[10228,10330],"source":"\\n<p>Trying to <strong>set</strong> the value, but quota values are read-only for this instance.</p>\\n"},{"content":"\\n&lt;p&gt;Trying to &lt;strong&gt;set&lt;/strong&gt; the value to less than zero.&lt;/p&gt;\\n","pos":[10427,10497],"source":"\\n<p>Trying to <strong>set</strong> the value to less than zero.</p>\\n"},{"pos":[10890,10912],"content":"MaxStringContentLength","needQuote":true,"nodes":[{"content":"MaxStringContentLength","pos":[0,22]}]},{"content":"\\n&lt;p&gt;The maximum string length returned by the reader.","pos":[11696,11750],"source":"\\n<p>The maximum string length returned by the reader."},{"content":"The default is 8192.&lt;/p&gt;\\n","pos":[11751,11777],"source":" The default is 8192.</p>\\n"},{"content":"\\n&lt;p&gt;Trying to &lt;strong&gt;set&lt;/strong&gt; the value, but quota values are read-only for this instance.&lt;/p&gt;\\n","pos":[11904,12006],"source":"\\n<p>Trying to <strong>set</strong> the value, but quota values are read-only for this instance.</p>\\n"},{"content":"\\n&lt;p&gt;Trying to &lt;strong&gt;set&lt;/strong&gt; the value to less than zero.&lt;/p&gt;\\n","pos":[12103,12173],"source":"\\n<p>Trying to <strong>set</strong> the value to less than zero.</p>\\n"},{"pos":[12543,12557],"content":"ModifiedQuotas","needQuote":true,"nodes":[{"content":"ModifiedQuotas","pos":[0,14]}]},{"pos":[14049,14082],"content":"CopyTo(XmlDictionaryReaderQuotas)","needQuote":true,"nodes":[{"content":"CopyTo(XmlDictionaryReaderQuotas)","pos":[0,33]}]},{"content":"\\n&lt;p&gt;Trying to &lt;strong&gt;set&lt;/strong&gt; the value, but quota values are read-only for the passed in instance.&lt;/p&gt;\\n","pos":[15204,15315],"source":"\\n<p>Trying to <strong>set</strong> the value, but quota values are read-only for the passed in instance.</p>\\n"},{"content":"\\n&lt;p&gt;Passed in target&lt;em&gt; quotas&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[15420,15489],"source":"\\n<p>Passed in target<em> quotas</em> is <strong>null</strong>.</p>\\n"},{"pos":[15683,15693],"content":"System.Xml","needQuote":true,"nodes":[{"content":"System.Xml","pos":[0,10]}]},{"pos":[15836,15842],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16002,16012],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[16107,16115],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[16184,16185],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16212,16213],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16283,16291],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[16360,16361],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16388,16389],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16572,16586],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[16705,16711],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[16778,16779],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16829,16835],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16895,16896],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16979,16985],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[17052,17053],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17103,17109],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17169,17170],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17384,17406],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[17554,17560],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[17627,17628],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17678,17684],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[17745,17746]},{"pos":[17801,17807],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17867,17868],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17965,17971],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[18038,18039],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18089,18095],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[18156,18157]},{"pos":[18212,18218],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18278,18279],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18524,18555],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[18721,18736],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[18812,18813],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18863,18869],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[18930,18931]},{"pos":[18986,18992],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[19052,19053],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19159,19174],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[19250,19251],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19301,19307],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[19368,19369]},{"pos":[19424,19430],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[19490,19491],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19721,19734],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[19835,19846],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[19918,19919],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19946,19947],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20020,20031],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[20103,20104],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20131,20132],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20307,20316],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[20409,20416],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[20484,20485],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20512,20513],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20582,20589],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[20657,20658],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20685,20686],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20861,20878],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[20987,21002],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[21078,21079],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21106,21107],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21184,21199],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[21275,21276],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21303,21304],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21449,21455],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[21613,21638],"content":"XmlDictionaryReaderQuotas","needQuote":true,"nodes":[{"content":"XmlDictionaryReaderQuotas","pos":[0,25]}]},{"pos":[21847,21852],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[22025,22054],"content":"XmlDictionaryReaderQuotaTypes","needQuote":true,"nodes":[{"content":"XmlDictionaryReaderQuotaTypes","pos":[0,29]}]},{"pos":[22295,22320],"content":"InvalidOperationException","needQuote":true,"nodes":[{"content":"InvalidOperationException","pos":[0,25]}]},{"pos":[22533,22550],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]},{"pos":[22726,22747],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]}],"content":"items:\n- uid: System.Xml.XmlDictionaryReaderQuotas\n  commentId: T:System.Xml.XmlDictionaryReaderQuotas\n  id: XmlDictionaryReaderQuotas\n  parent: System.Xml\n  children:\n  - System.Xml.XmlDictionaryReaderQuotas.#ctor\n  - System.Xml.XmlDictionaryReaderQuotas.CopyTo(System.Xml.XmlDictionaryReaderQuotas)\n  - System.Xml.XmlDictionaryReaderQuotas.Max\n  - System.Xml.XmlDictionaryReaderQuotas.MaxArrayLength\n  - System.Xml.XmlDictionaryReaderQuotas.MaxBytesPerRead\n  - System.Xml.XmlDictionaryReaderQuotas.MaxDepth\n  - System.Xml.XmlDictionaryReaderQuotas.MaxNameTableCharCount\n  - System.Xml.XmlDictionaryReaderQuotas.MaxStringContentLength\n  - System.Xml.XmlDictionaryReaderQuotas.ModifiedQuotas\n  langs:\n  - csharp\n  - vb\n  name: XmlDictionaryReaderQuotas\n  fullName: System.Xml.XmlDictionaryReaderQuotas\n  type: Class\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: XmlDictionaryReaderQuotas\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 245\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Xml\n  summary: \"\\n<p>Contains configurable quota values for XmlDictionaryReaders.</p>\\n\"\n  syntax:\n    content: public sealed class XmlDictionaryReaderQuotas\n    content.vb: Public NotInheritable Class XmlDictionaryReaderQuotas\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: XmlDictionaryReaderQuotas\n- uid: System.Xml.XmlDictionaryReaderQuotas.#ctor\n  commentId: M:System.Xml.XmlDictionaryReaderQuotas.#ctor\n  id: '#ctor'\n  parent: System.Xml.XmlDictionaryReaderQuotas\n  langs:\n  - csharp\n  - vb\n  name: XmlDictionaryReaderQuotas()\n  fullName: System.Xml.XmlDictionaryReaderQuotas.XmlDictionaryReaderQuotas()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 247\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Xml\n  summary: \"\\n<p>Creates a new instance of this class. </p>\\n\"\n  syntax:\n    content: public XmlDictionaryReaderQuotas()\n    content.vb: Public Sub New\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XmlDictionaryReaderQuotas.XmlDictionaryReaderQuotas()\n- uid: System.Xml.XmlDictionaryReaderQuotas.Max\n  commentId: P:System.Xml.XmlDictionaryReaderQuotas.Max\n  id: Max\n  parent: System.Xml.XmlDictionaryReaderQuotas\n  langs:\n  - csharp\n  - vb\n  name: Max\n  fullName: System.Xml.XmlDictionaryReaderQuotas.Max\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Max\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 248\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Xml\n  summary: \"\\n<p>Gets an instance of this class with all properties set to maximum values.</p>\\n\"\n  syntax:\n    content: public static XmlDictionaryReaderQuotas Max { get; }\n    content.vb: Public Shared ReadOnly Property Max As XmlDictionaryReaderQuotas\n    parameters: []\n    return:\n      type: System.Xml.XmlDictionaryReaderQuotas\n      description: \"\\n<p>An instance of <xref href=\\\"System.Xml.XmlDictionaryReaderQuotas\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> with properties set to <xref href=\\\"System.Int32.MaxValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: XmlDictionaryReaderQuotas.Max\n- uid: System.Xml.XmlDictionaryReaderQuotas.MaxArrayLength\n  commentId: P:System.Xml.XmlDictionaryReaderQuotas.MaxArrayLength\n  id: MaxArrayLength\n  parent: System.Xml.XmlDictionaryReaderQuotas\n  langs:\n  - csharp\n  - vb\n  name: MaxArrayLength\n  fullName: System.Xml.XmlDictionaryReaderQuotas.MaxArrayLength\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: MaxArrayLength\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 249\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Xml\n  summary: \"\\n<p>Gets and sets the maximum allowed array length.</p>\\n\"\n  syntax:\n    content: public int MaxArrayLength { get; set; }\n    content.vb: Public Property MaxArrayLength As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The maximum allowed array length. The default is 16384.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>Trying to <strong>set</strong> the value, but quota values are read-only for this instance.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>Trying to <strong>set</strong> the value to less than zero.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: XmlDictionaryReaderQuotas.MaxArrayLength\n- uid: System.Xml.XmlDictionaryReaderQuotas.MaxBytesPerRead\n  commentId: P:System.Xml.XmlDictionaryReaderQuotas.MaxBytesPerRead\n  id: MaxBytesPerRead\n  parent: System.Xml.XmlDictionaryReaderQuotas\n  langs:\n  - csharp\n  - vb\n  name: MaxBytesPerRead\n  fullName: System.Xml.XmlDictionaryReaderQuotas.MaxBytesPerRead\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: MaxBytesPerRead\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 251\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Xml\n  summary: \"\\n<p>Gets and sets the maximum allowed bytes returned for each read.</p>\\n\"\n  syntax:\n    content: public int MaxBytesPerRead { get; set; }\n    content.vb: Public Property MaxBytesPerRead As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The maximum allowed bytes returned for each read. The default is 4096.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>Trying to <strong>set</strong> the value, but quota values are read-only for this instance.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>Trying to <strong>set</strong> the value to less than zero.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: XmlDictionaryReaderQuotas.MaxBytesPerRead\n- uid: System.Xml.XmlDictionaryReaderQuotas.MaxDepth\n  commentId: P:System.Xml.XmlDictionaryReaderQuotas.MaxDepth\n  id: MaxDepth\n  parent: System.Xml.XmlDictionaryReaderQuotas\n  langs:\n  - csharp\n  - vb\n  name: MaxDepth\n  fullName: System.Xml.XmlDictionaryReaderQuotas.MaxDepth\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: MaxDepth\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 253\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Xml\n  summary: \"\\n<p>Gets and sets the maximum nested node depth.</p>\\n\"\n  syntax:\n    content: public int MaxDepth { get; set; }\n    content.vb: Public Property MaxDepth As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The maximum nested node depth. The default is 32;</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>Trying to <strong>set</strong> the value and quota values are read-only for this instance.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>Trying to <strong>set</strong> the value is less than zero.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: XmlDictionaryReaderQuotas.MaxDepth\n- uid: System.Xml.XmlDictionaryReaderQuotas.MaxNameTableCharCount\n  commentId: P:System.Xml.XmlDictionaryReaderQuotas.MaxNameTableCharCount\n  id: MaxNameTableCharCount\n  parent: System.Xml.XmlDictionaryReaderQuotas\n  langs:\n  - csharp\n  - vb\n  name: MaxNameTableCharCount\n  fullName: System.Xml.XmlDictionaryReaderQuotas.MaxNameTableCharCount\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: MaxNameTableCharCount\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 255\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Xml\n  summary: \"\\n<p>Gets and sets the maximum characters allowed in a table name.</p>\\n\"\n  syntax:\n    content: public int MaxNameTableCharCount { get; set; }\n    content.vb: Public Property MaxNameTableCharCount As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The maximum characters allowed in a table name. The default is 16384.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>Trying to <strong>set</strong> the value, but quota values are read-only for this instance.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>Trying to <strong>set</strong> the value to less than zero.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: XmlDictionaryReaderQuotas.MaxNameTableCharCount\n- uid: System.Xml.XmlDictionaryReaderQuotas.MaxStringContentLength\n  commentId: P:System.Xml.XmlDictionaryReaderQuotas.MaxStringContentLength\n  id: MaxStringContentLength\n  parent: System.Xml.XmlDictionaryReaderQuotas\n  langs:\n  - csharp\n  - vb\n  name: MaxStringContentLength\n  fullName: System.Xml.XmlDictionaryReaderQuotas.MaxStringContentLength\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: MaxStringContentLength\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 257\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Xml\n  summary: \"\\n<p>Gets and sets the maximum string length returned by the reader.</p>\\n\"\n  syntax:\n    content: public int MaxStringContentLength { get; set; }\n    content.vb: Public Property MaxStringContentLength As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The maximum string length returned by the reader. The default is 8192.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>Trying to <strong>set</strong> the value, but quota values are read-only for this instance.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>Trying to <strong>set</strong> the value to less than zero.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: XmlDictionaryReaderQuotas.MaxStringContentLength\n- uid: System.Xml.XmlDictionaryReaderQuotas.ModifiedQuotas\n  commentId: P:System.Xml.XmlDictionaryReaderQuotas.ModifiedQuotas\n  id: ModifiedQuotas\n  parent: System.Xml.XmlDictionaryReaderQuotas\n  langs:\n  - csharp\n  - vb\n  name: ModifiedQuotas\n  fullName: System.Xml.XmlDictionaryReaderQuotas.ModifiedQuotas\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ModifiedQuotas\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 259\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Xml\n  summary: \"\\n<p>Gets the modified quotas for the <xref href=\\\"System.Xml.XmlDictionaryReaderQuotas\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public XmlDictionaryReaderQuotaTypes ModifiedQuotas { get; }\n    content.vb: Public ReadOnly Property ModifiedQuotas As XmlDictionaryReaderQuotaTypes\n    parameters: []\n    return:\n      type: System.Xml.XmlDictionaryReaderQuotaTypes\n      description: \"\\n<p>The modified quotas for the <xref href=\\\"System.Xml.XmlDictionaryReaderQuotas\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: XmlDictionaryReaderQuotas.ModifiedQuotas\n- uid: System.Xml.XmlDictionaryReaderQuotas.CopyTo(System.Xml.XmlDictionaryReaderQuotas)\n  commentId: M:System.Xml.XmlDictionaryReaderQuotas.CopyTo(System.Xml.XmlDictionaryReaderQuotas)\n  id: CopyTo(System.Xml.XmlDictionaryReaderQuotas)\n  parent: System.Xml.XmlDictionaryReaderQuotas\n  langs:\n  - csharp\n  - vb\n  name: CopyTo(XmlDictionaryReaderQuotas)\n  fullName: System.Xml.XmlDictionaryReaderQuotas.CopyTo(System.Xml.XmlDictionaryReaderQuotas)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CopyTo\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 260\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Xml\n  summary: \"\\n<p>Sets the properties on a passed-in quotas instance, based on the values in this instance.</p>\\n\"\n  syntax:\n    content: public void CopyTo(XmlDictionaryReaderQuotas quotas)\n    content.vb: Public Sub CopyTo(quotas As XmlDictionaryReaderQuotas)\n    parameters:\n    - id: quotas\n      type: System.Xml.XmlDictionaryReaderQuotas\n      description: \"\\n<p>The <xref href=\\\"System.Xml.XmlDictionaryReaderQuotas\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance to which to copy values.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>Trying to <strong>set</strong> the value, but quota values are read-only for the passed in instance.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>Passed in target<em> quotas</em> is <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XmlDictionaryReaderQuotas.CopyTo(XmlDictionaryReaderQuotas)\nreferences:\n- uid: System.Xml\n  isExternal: false\n  name: System.Xml\n  fullName: System.Xml\n  commentId: N:System.Xml\n  nameWithType: System.Xml\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Xml.XmlDictionaryReaderQuotas\n  parent: System.Xml\n  isExternal: false\n  name: XmlDictionaryReaderQuotas\n  fullName: System.Xml.XmlDictionaryReaderQuotas\n  commentId: T:System.Xml.XmlDictionaryReaderQuotas\n  nameWithType: XmlDictionaryReaderQuotas\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  commentId: T:System.Int32\n  nameWithType: Int32\n- uid: System.Xml.XmlDictionaryReaderQuotaTypes\n  parent: System.Xml\n  isExternal: false\n  name: XmlDictionaryReaderQuotaTypes\n  fullName: System.Xml.XmlDictionaryReaderQuotaTypes\n  commentId: T:System.Xml.XmlDictionaryReaderQuotaTypes\n  nameWithType: XmlDictionaryReaderQuotaTypes\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  fullName: System.InvalidOperationException\n  nameWithType: InvalidOperationException\n  commentId: T:System.InvalidOperationException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n"}