{"nodes":[{"pos":[374,399],"content":"PropertyChangingEventArgs","needQuote":true,"nodes":[{"content":"PropertyChangingEventArgs","pos":[0,25]}]},{"pos":[1934,1967],"content":"PropertyChangingEventArgs(String)","needQuote":true,"nodes":[{"content":"PropertyChangingEventArgs(String)","pos":[0,33]}]},{"content":"\\n&lt;p&gt;The name of the property whose value is changing.&lt;/p&gt;\\n","pos":[2797,2857],"source":"\\n<p>The name of the property whose value is changing.</p>\\n"},{"pos":[3249,3261],"content":"PropertyName","needQuote":true,"nodes":[{"content":"PropertyName","pos":[0,12]}]},{"content":"\\n&lt;p&gt;The name of the property whose value is changing.&lt;/p&gt;\\n","pos":[3975,4035],"source":"\\n<p>The name of the property whose value is changing.</p>\\n"},{"pos":[4268,4289],"content":"System.ComponentModel","needQuote":true,"nodes":[{"content":"System.ComponentModel","pos":[0,21]}]},{"pos":[4465,4471],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[4619,4628],"content":"EventArgs","needQuote":true,"nodes":[{"content":"EventArgs","pos":[0,9]}]},{"pos":[4800,4805],"content":"Empty","needQuote":true,"nodes":[{"content":"Empty","pos":[0,5]}]},{"pos":[4992,5002],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[5097,5105],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[5174,5175],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[5202,5203],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[5273,5281],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[5350,5351],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[5378,5379],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[5562,5576],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[5695,5701],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[5768,5769],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[5819,5825],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[5885,5886],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[5969,5975],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[6042,6043],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6093,6099],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6159,6160],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6374,6396],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[6544,6550],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[6617,6618],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6668,6674],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[6735,6736]},{"pos":[6791,6797],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6857,6858],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6955,6961],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[7028,7029],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7079,7085],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[7146,7147]},{"pos":[7202,7208],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7268,7269],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7514,7545],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[7711,7726],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[7802,7803],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7853,7859],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[7920,7921]},{"pos":[7976,7982],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8042,8043],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8149,8164],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[8240,8241],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8291,8297],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[8358,8359]},{"pos":[8414,8420],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8480,8481],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8711,8724],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[8825,8836],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[8908,8909],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8936,8937],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9010,9021],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[9093,9094],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9121,9122],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9297,9306],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[9399,9406],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[9474,9475],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9502,9503],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9572,9579],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[9647,9648],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9675,9676],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9851,9868],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[9977,9992],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[10068,10069],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10096,10097],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10174,10189],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[10265,10266],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10293,10294],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10439,10445],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[10576,10582],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"items:\n- uid: System.ComponentModel.PropertyChangingEventArgs\n  commentId: T:System.ComponentModel.PropertyChangingEventArgs\n  id: PropertyChangingEventArgs\n  parent: System.ComponentModel\n  children:\n  - System.ComponentModel.PropertyChangingEventArgs.#ctor(System.String)\n  - System.ComponentModel.PropertyChangingEventArgs.PropertyName\n  langs:\n  - csharp\n  - vb\n  name: PropertyChangingEventArgs\n  fullName: System.ComponentModel.PropertyChangingEventArgs\n  type: Class\n  source:\n    remote:\n      path: src/System.ObjectModel/ref/System.ObjectModel.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: PropertyChangingEventArgs\n    path: src/System.ObjectModel/ref/System.ObjectModel.cs\n    startLine: 189\n  assemblies:\n  - System.ObjectModel\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Provides data for the <xref href=\\\"System.ComponentModel.INotifyPropertyChanging.PropertyChanging\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> event. </p>\\n\"\n  syntax:\n    content: 'public class PropertyChangingEventArgs : EventArgs'\n    content.vb: >-\n      Public Class PropertyChangingEventArgs\n          Inherits EventArgs\n  inheritance:\n  - System.Object\n  - System.EventArgs\n  inheritedMembers:\n  - System.EventArgs.Empty\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: PropertyChangingEventArgs\n- uid: System.ComponentModel.PropertyChangingEventArgs.#ctor(System.String)\n  commentId: M:System.ComponentModel.PropertyChangingEventArgs.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.ComponentModel.PropertyChangingEventArgs\n  langs:\n  - csharp\n  - vb\n  name: PropertyChangingEventArgs(String)\n  fullName: System.ComponentModel.PropertyChangingEventArgs.PropertyChangingEventArgs(System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.ObjectModel/ref/System.ObjectModel.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.ObjectModel/ref/System.ObjectModel.cs\n    startLine: 191\n  assemblies:\n  - System.ObjectModel\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.ComponentModel.PropertyChangingEventArgs\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class. </p>\\n\"\n  syntax:\n    content: public PropertyChangingEventArgs(string propertyName)\n    content.vb: Public Sub New(propertyName As String)\n    parameters:\n    - id: propertyName\n      type: System.String\n      description: \"\\n<p>The name of the property whose value is changing.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: PropertyChangingEventArgs.PropertyChangingEventArgs(String)\n- uid: System.ComponentModel.PropertyChangingEventArgs.PropertyName\n  commentId: P:System.ComponentModel.PropertyChangingEventArgs.PropertyName\n  id: PropertyName\n  parent: System.ComponentModel.PropertyChangingEventArgs\n  langs:\n  - csharp\n  - vb\n  name: PropertyName\n  fullName: System.ComponentModel.PropertyChangingEventArgs.PropertyName\n  type: Property\n  source:\n    remote:\n      path: src/System.ObjectModel/ref/System.ObjectModel.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: PropertyName\n    path: src/System.ObjectModel/ref/System.ObjectModel.cs\n    startLine: 192\n  assemblies:\n  - System.ObjectModel\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Gets the name of the property whose value is changing.</p>\\n\"\n  syntax:\n    content: public virtual string PropertyName { get; }\n    content.vb: Public Overridable ReadOnly Property PropertyName As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The name of the property whose value is changing.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  nameWithType: PropertyChangingEventArgs.PropertyName\nreferences:\n- uid: System.ComponentModel\n  isExternal: false\n  name: System.ComponentModel\n  fullName: System.ComponentModel\n  commentId: N:System.ComponentModel\n  nameWithType: System.ComponentModel\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.EventArgs\n  parent: System\n  isExternal: false\n  name: EventArgs\n  fullName: System.EventArgs\n  commentId: T:System.EventArgs\n  nameWithType: EventArgs\n- uid: System.EventArgs.Empty\n  parent: System.EventArgs\n  isExternal: true\n  name: Empty\n  fullName: System.EventArgs.Empty\n  commentId: F:System.EventArgs.Empty\n  nameWithType: EventArgs.Empty\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n"}