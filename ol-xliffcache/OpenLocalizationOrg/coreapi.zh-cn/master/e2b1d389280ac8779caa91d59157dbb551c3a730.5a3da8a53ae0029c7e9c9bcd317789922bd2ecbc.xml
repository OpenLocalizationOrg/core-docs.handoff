{"nodes":[{"pos":[482,506],"content":"DecoderExceptionFallback","needQuote":true,"nodes":[{"content":"DecoderExceptionFallback","pos":[0,24]}]},{"pos":[2185,2211],"content":"DecoderExceptionFallback()","needQuote":true,"nodes":[{"content":"DecoderExceptionFallback()","pos":[0,26]}]},{"pos":[3233,3245],"content":"MaxCharCount","needQuote":true,"nodes":[{"content":"MaxCharCount","pos":[0,12]}]},{"content":"\\n&lt;p&gt;The return value is always zero.&lt;/p&gt;\\n","pos":[3961,4004],"source":"\\n<p>The return value is always zero.</p>\\n"},{"pos":[4468,4490],"content":"CreateFallbackBuffer()","needQuote":true,"nodes":[{"content":"CreateFallbackBuffer()","pos":[0,22]}]},{"content":"\\n&lt;p&gt;A decoder fallback buffer that throws an exception when it cannot decode a byte sequence.&lt;/p&gt;\\n","pos":[5309,5409],"source":"\\n<p>A decoder fallback buffer that throws an exception when it cannot decode a byte sequence.</p>\\n"},{"pos":[5873,5887],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[7562,7575],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"content":"\\n&lt;p&gt;The return value is always the same arbitrary value, and has no special significance.","pos":[8231,8321],"source":"\\n<p>The return value is always the same arbitrary value, and has no special significance."},{"content":"&lt;/p&gt;\\n","pos":[8322,8328],"source":" </p>\\n"},{"pos":[8569,8580],"content":"System.Text","needQuote":true,"nodes":[{"content":"System.Text","pos":[0,11]}]},{"pos":[8726,8732],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8896,8911],"content":"DecoderFallback","needQuote":true,"nodes":[{"content":"DecoderFallback","pos":[0,15]}]},{"pos":[9146,9163],"content":"ExceptionFallback","needQuote":true,"nodes":[{"content":"ExceptionFallback","pos":[0,17]}]},{"pos":[9454,9473],"content":"ReplacementFallback","needQuote":true,"nodes":[{"content":"ReplacementFallback","pos":[0,19]}]},{"pos":[9730,9740],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[9835,9843],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[9912,9913],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9940,9941],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10011,10019],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[10088,10089],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10116,10117],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10314,10336],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[10484,10490],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[10557,10558],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10608,10614],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[10675,10676]},{"pos":[10731,10737],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10797,10798],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10895,10901],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[10968,10969],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11019,11025],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[11086,11087]},{"pos":[11142,11148],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11208,11209],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11454,11485],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[11651,11666],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[11742,11743],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11793,11799],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[11860,11861]},{"pos":[11916,11922],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11982,11983],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12089,12104],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[12180,12181],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12231,12237],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[12298,12299]},{"pos":[12354,12360],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12420,12421],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12647,12656],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[12749,12756],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[12824,12825],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12852,12853],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12922,12929],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[12997,12998],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13025,13026],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13201,13218],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[13327,13342],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[13418,13419],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13446,13447],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13524,13539],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[13615,13616],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13643,13644],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13789,13795],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[13974,13986],"content":"MaxCharCount","needQuote":true,"nodes":[{"content":"MaxCharCount","pos":[0,12]}]},{"pos":[14206,14211],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[14409,14431],"content":"CreateFallbackBuffer()","needQuote":true,"nodes":[{"content":"CreateFallbackBuffer()","pos":[0,22]}]},{"pos":[14578,14598],"content":"CreateFallbackBuffer","needQuote":true,"nodes":[{"content":"CreateFallbackBuffer","pos":[0,20]}]},{"pos":[14672,14673],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14700,14701],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14797,14817],"content":"CreateFallbackBuffer","needQuote":true,"nodes":[{"content":"CreateFallbackBuffer","pos":[0,20]}]},{"pos":[14891,14892],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14919,14920],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15147,15168],"content":"DecoderFallbackBuffer","needQuote":true,"nodes":[{"content":"DecoderFallbackBuffer","pos":[0,21]}]},{"pos":[15396,15410],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[15529,15535],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[15602,15603],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15653,15659],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15719,15720],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15803,15809],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[15876,15877],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15927,15933],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15993,15994],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16167,16174],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[16340,16353],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[16454,16465],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[16537,16538],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16565,16566],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16639,16650],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[16722,16723],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16750,16751],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]}],"content":"items:\n- uid: System.Text.DecoderExceptionFallback\n  commentId: T:System.Text.DecoderExceptionFallback\n  id: DecoderExceptionFallback\n  parent: System.Text\n  children:\n  - System.Text.DecoderExceptionFallback.#ctor\n  - System.Text.DecoderExceptionFallback.CreateFallbackBuffer\n  - System.Text.DecoderExceptionFallback.Equals(System.Object)\n  - System.Text.DecoderExceptionFallback.GetHashCode\n  - System.Text.DecoderExceptionFallback.MaxCharCount\n  langs:\n  - csharp\n  - vb\n  name: DecoderExceptionFallback\n  fullName: System.Text.DecoderExceptionFallback\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/Text/DecoderExceptionFallback.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DecoderExceptionFallback\n    path: src/mscorlib/src/System/Text/DecoderExceptionFallback.cs\n    startLine: 10\n  assemblies:\n  - System.Text.Encoding\n  namespace: System.Text\n  summary: \"\\n<p>Provides a failure-handling mechanism, called a fallback, for an encoded input byte sequence that cannot be converted to an input character. The fallback throws an exception instead of decoding the input byte sequence. This class cannot be inherited.</p>\\n\"\n  syntax:\n    content: >-\n      [Serializable]\n\n      public sealed class DecoderExceptionFallback : DecoderFallback\n    content.vb: >-\n      <Serializable>\n\n      Public NotInheritable Class DecoderExceptionFallback\n          Inherits DecoderFallback\n  inheritance:\n  - System.Object\n  - System.Text.DecoderFallback\n  inheritedMembers:\n  - System.Text.DecoderFallback.ExceptionFallback\n  - System.Text.DecoderFallback.ReplacementFallback\n  - System.Object.ToString\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: DecoderExceptionFallback\n- uid: System.Text.DecoderExceptionFallback.#ctor\n  commentId: M:System.Text.DecoderExceptionFallback.#ctor\n  id: '#ctor'\n  parent: System.Text.DecoderExceptionFallback\n  langs:\n  - csharp\n  - vb\n  name: DecoderExceptionFallback()\n  fullName: System.Text.DecoderExceptionFallback.DecoderExceptionFallback()\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Text/DecoderExceptionFallback.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Text/DecoderExceptionFallback.cs\n    startLine: 14\n  assemblies:\n  - System.Text.Encoding\n  namespace: System.Text\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Text.DecoderExceptionFallback\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class. </p>\\n\"\n  syntax:\n    content: public DecoderExceptionFallback()\n    content.vb: Public Sub New\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: DecoderExceptionFallback.DecoderExceptionFallback()\n- uid: System.Text.DecoderExceptionFallback.MaxCharCount\n  commentId: P:System.Text.DecoderExceptionFallback.MaxCharCount\n  id: MaxCharCount\n  parent: System.Text.DecoderExceptionFallback\n  langs:\n  - csharp\n  - vb\n  name: MaxCharCount\n  fullName: System.Text.DecoderExceptionFallback.MaxCharCount\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Text/DecoderExceptionFallback.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: MaxCharCount\n    path: src/mscorlib/src/System/Text/DecoderExceptionFallback.cs\n    startLine: 24\n  assemblies:\n  - System.Text.Encoding\n  namespace: System.Text\n  summary: \"\\n<p>Gets the maximum number of characters this instance can return.</p>\\n\"\n  syntax:\n    content: public override int MaxCharCount { get; }\n    content.vb: Public Overrides ReadOnly Property MaxCharCount As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The return value is always zero.</p>\\n\"\n  overridden: System.Text.DecoderFallback.MaxCharCount\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: DecoderExceptionFallback.MaxCharCount\n- uid: System.Text.DecoderExceptionFallback.CreateFallbackBuffer\n  commentId: M:System.Text.DecoderExceptionFallback.CreateFallbackBuffer\n  id: CreateFallbackBuffer\n  parent: System.Text.DecoderExceptionFallback\n  langs:\n  - csharp\n  - vb\n  name: CreateFallbackBuffer()\n  fullName: System.Text.DecoderExceptionFallback.CreateFallbackBuffer()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Text/DecoderExceptionFallback.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: CreateFallbackBuffer\n    path: src/mscorlib/src/System/Text/DecoderExceptionFallback.cs\n    startLine: 18\n  assemblies:\n  - System.Text.Encoding\n  namespace: System.Text\n  summary: \"\\n<p>Returns a decoder fallback buffer that throws an exception if it cannot convert a sequence of bytes to a character. </p>\\n\"\n  syntax:\n    content: public override DecoderFallbackBuffer CreateFallbackBuffer()\n    content.vb: Public Overrides Function CreateFallbackBuffer As DecoderFallbackBuffer\n    return:\n      type: System.Text.DecoderFallbackBuffer\n      description: \"\\n<p>A decoder fallback buffer that throws an exception when it cannot decode a byte sequence.</p>\\n\"\n  overridden: System.Text.DecoderFallback.CreateFallbackBuffer\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: DecoderExceptionFallback.CreateFallbackBuffer()\n- uid: System.Text.DecoderExceptionFallback.Equals(System.Object)\n  commentId: M:System.Text.DecoderExceptionFallback.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Text.DecoderExceptionFallback\n  langs:\n  - csharp\n  - vb\n  name: Equals(Object)\n  fullName: System.Text.DecoderExceptionFallback.Equals(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Text/DecoderExceptionFallback.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Equals\n    path: src/mscorlib/src/System/Text/DecoderExceptionFallback.cs\n    startLine: 32\n  assemblies:\n  - System.Text.Encoding\n  namespace: System.Text\n  summary: \"\\n<p>Indicates whether the current <xref href=\\\"System.Text.DecoderExceptionFallback\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object and a specified object are equal.</p>\\n\"\n  syntax:\n    content: public override bool Equals(object value)\n    content.vb: Public Overrides Function Equals(value As Object) As Boolean\n    parameters:\n    - id: value\n      type: System.Object\n      description: \"\\n<p>An object that derives from the <xref href=\\\"System.Text.DecoderExceptionFallback\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if <em>value</em> is not <strong>null</strong> and is a <xref href=\\\"System.Text.DecoderExceptionFallback\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object; otherwise, <strong>false</strong>.</p>\\n\"\n  overridden: System.Object.Equals(System.Object)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: DecoderExceptionFallback.Equals(Object)\n- uid: System.Text.DecoderExceptionFallback.GetHashCode\n  commentId: M:System.Text.DecoderExceptionFallback.GetHashCode\n  id: GetHashCode\n  parent: System.Text.DecoderExceptionFallback\n  langs:\n  - csharp\n  - vb\n  name: GetHashCode()\n  fullName: System.Text.DecoderExceptionFallback.GetHashCode()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Text/DecoderExceptionFallback.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetHashCode\n    path: src/mscorlib/src/System/Text/DecoderExceptionFallback.cs\n    startLine: 42\n  assemblies:\n  - System.Text.Encoding\n  namespace: System.Text\n  summary: \"\\n<p>Retrieves the hash code for this instance.</p>\\n\"\n  syntax:\n    content: public override int GetHashCode()\n    content.vb: Public Overrides Function GetHashCode As Integer\n    return:\n      type: System.Int32\n      description: \"\\n<p>The return value is always the same arbitrary value, and has no special significance. </p>\\n\"\n  overridden: System.Object.GetHashCode\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: DecoderExceptionFallback.GetHashCode()\nreferences:\n- uid: System.Text\n  isExternal: false\n  name: System.Text\n  fullName: System.Text\n  nameWithType: System.Text\n  commentId: N:System.Text\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Text.DecoderFallback\n  parent: System.Text\n  isExternal: false\n  name: DecoderFallback\n  fullName: System.Text.DecoderFallback\n  nameWithType: DecoderFallback\n  commentId: T:System.Text.DecoderFallback\n- uid: System.Text.DecoderFallback.ExceptionFallback\n  parent: System.Text.DecoderFallback\n  isExternal: false\n  name: ExceptionFallback\n  fullName: System.Text.DecoderFallback.ExceptionFallback\n  nameWithType: DecoderFallback.ExceptionFallback\n  commentId: P:System.Text.DecoderFallback.ExceptionFallback\n- uid: System.Text.DecoderFallback.ReplacementFallback\n  parent: System.Text.DecoderFallback\n  isExternal: false\n  name: ReplacementFallback\n  fullName: System.Text.DecoderFallback.ReplacementFallback\n  nameWithType: DecoderFallback.ReplacementFallback\n  commentId: P:System.Text.DecoderFallback.ReplacementFallback\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Text.DecoderFallback.MaxCharCount\n  parent: System.Text.DecoderFallback\n  isExternal: false\n  name: MaxCharCount\n  fullName: System.Text.DecoderFallback.MaxCharCount\n  nameWithType: DecoderFallback.MaxCharCount\n  commentId: P:System.Text.DecoderFallback.MaxCharCount\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.Text.DecoderFallback.CreateFallbackBuffer\n  parent: System.Text.DecoderFallback\n  isExternal: false\n  name: CreateFallbackBuffer()\n  fullName: System.Text.DecoderFallback.CreateFallbackBuffer()\n  spec.csharp:\n  - uid: System.Text.DecoderFallback.CreateFallbackBuffer\n    name: CreateFallbackBuffer\n    fullName: System.Text.DecoderFallback.CreateFallbackBuffer\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Text.DecoderFallback.CreateFallbackBuffer\n    name: CreateFallbackBuffer\n    fullName: System.Text.DecoderFallback.CreateFallbackBuffer\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: DecoderFallback.CreateFallbackBuffer()\n  commentId: M:System.Text.DecoderFallback.CreateFallbackBuffer\n- uid: System.Text.DecoderFallbackBuffer\n  parent: System.Text\n  isExternal: false\n  name: DecoderFallbackBuffer\n  fullName: System.Text.DecoderFallbackBuffer\n  nameWithType: DecoderFallbackBuffer\n  commentId: T:System.Text.DecoderFallbackBuffer\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n"}