{"nodes":[{"pos":[2150,2156],"content":"UInt64","needQuote":true,"nodes":[{"content":"UInt64","pos":[0,6]}]},{"pos":[4131,4139],"content":"MaxValue","needQuote":true,"nodes":[{"content":"MaxValue","pos":[0,8]}]},{"pos":[5146,5154],"content":"MinValue","needQuote":true,"nodes":[{"content":"MinValue","pos":[0,8]}]},{"pos":[6172,6189],"content":"CompareTo(UInt64)","needQuote":true,"nodes":[{"content":"CompareTo(UInt64)","pos":[0,17]}]},{"content":"\\n&lt;p&gt;An unsigned integer to compare.","pos":[6870,6906],"source":"\\n<p>An unsigned integer to compare."},{"content":"&lt;/p&gt;\\n","pos":[6907,6913],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A signed number indicating the relative values of this instance and &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\\n&lt;p&gt;Return Value &lt;/p&gt;\\n&lt;p&gt;Description &lt;/p&gt;\\n&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;\\n&lt;p&gt;Less than zero &lt;/p&gt;\\n&lt;/td&gt;&lt;td&gt;\\n&lt;p&gt;This instance is less than &lt;em&gt;value&lt;/em&gt;.","pos":[6972,7213],"source":"\\n<p>A signed number indicating the relative values of this instance and <em>value</em>.</p>\\n<p>Return Value </p>\\n<p>Description </p>\\n<table><tbody><tr><td>\\n<p>Less than zero </p>\\n</td><td>\\n<p>This instance is less than <em>value</em>."},{"content":"&lt;/p&gt;\\n&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;\\n&lt;p&gt;Zero &lt;/p&gt;\\n&lt;/td&gt;&lt;td&gt;\\n&lt;p&gt;This instance is equal to &lt;em&gt;value&lt;/em&gt;.","pos":[7214,7309],"source":" </p>\\n</td></tr><tr><td>\\n<p>Zero </p>\\n</td><td>\\n<p>This instance is equal to <em>value</em>."},{"content":"&lt;/p&gt;\\n&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;\\n&lt;p&gt;Greater than zero &lt;/p&gt;\\n&lt;/td&gt;&lt;td&gt;\\n&lt;p&gt;This instance is greater than &lt;em&gt;value&lt;/em&gt;.","pos":[7310,7422],"source":" </p>\\n</td></tr><tr><td>\\n<p>Greater than zero </p>\\n</td><td>\\n<p>This instance is greater than <em>value</em>."},{"content":"&lt;/p&gt;\\n&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\\n","pos":[7423,7457],"source":" </p>\\n</td></tr></tbody></table>\\n"},{"pos":[7926,7940],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"content":"\\n&lt;p&gt;An object to compare to this instance.","pos":[8592,8635],"source":"\\n<p>An object to compare to this instance."},{"content":"&lt;/p&gt;\\n","pos":[8636,8642],"source":" </p>\\n"},{"pos":[9394,9408],"content":"Equals(UInt64)","needQuote":true,"nodes":[{"content":"Equals(UInt64)","pos":[0,14]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if &lt;em&gt;obj&lt;/em&gt; has the same value as this instance; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[10360,10482],"source":"\\n<p>\\n<strong>true</strong> if <em>obj</em> has the same value as this instance; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[10804,10817],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"content":"\\n&lt;p&gt;A 32-bit signed integer hash code.&lt;/p&gt;\\n","pos":[11391,11436],"source":"\\n<p>A 32-bit signed integer hash code.</p>\\n"},{"pos":[11781,11794],"content":"Parse(String)","needQuote":true,"nodes":[{"content":"Parse(String)","pos":[0,13]}]},{"content":"\\n&lt;p&gt;A string that represents the number to convert.","pos":[12516,12568],"source":"\\n<p>A string that represents the number to convert."},{"content":"&lt;/p&gt;\\n","pos":[12569,12575],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A 64-bit unsigned integer equivalent to the number contained in &lt;em&gt;s&lt;/em&gt;.&lt;/p&gt;\\n","pos":[12635,12721],"source":"\\n<p>A 64-bit unsigned integer equivalent to the number contained in <em>s</em>.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;s&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.","pos":[12840,12895],"source":"\\n<p>The <em>s</em> parameter is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[12896,12902],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;s&lt;/em&gt; parameter is not in the correct format.","pos":[12995,13054],"source":"\\n<p>The <em>s</em> parameter is not in the correct format."},{"content":"&lt;/p&gt;\\n","pos":[13055,13061],"source":" </p>\\n"},{"pos":[14065,14092],"content":"Parse(String, NumberStyles)","needQuote":true,"nodes":[{"content":"Parse(String, NumberStyles)","pos":[0,27]}]},{"content":"\\n&lt;p&gt;A string that represents the number to convert.","pos":[14913,14965],"source":"\\n<p>A string that represents the number to convert."},{"content":"The string is interpreted by using the style specified by the &lt;em&gt;style&lt;/em&gt; parameter.","pos":[14966,15053],"source":" The string is interpreted by using the style specified by the <em>style</em> parameter."},{"content":"&lt;/p&gt;\\n","pos":[15054,15060],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A 64-bit unsigned integer equivalent to the number specified in &lt;em&gt;s&lt;/em&gt;.&lt;/p&gt;\\n","pos":[15446,15532],"source":"\\n<p>A 64-bit unsigned integer equivalent to the number specified in <em>s</em>.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;s&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.","pos":[15651,15706],"source":"\\n<p>The <em>s</em> parameter is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[15707,15713],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;s&lt;/em&gt; parameter is not in a format compliant with &lt;em&gt;style&lt;/em&gt;.","pos":[16331,16410],"source":"\\n<p>The <em>s</em> parameter is not in a format compliant with <em>style</em>."},{"content":"&lt;/p&gt;\\n","pos":[16411,16417],"source":" </p>\\n"},{"pos":[17823,17867],"content":"Parse(String, NumberStyles, IFormatProvider)","needQuote":true,"nodes":[{"content":"Parse(String, NumberStyles, IFormatProvider)","pos":[0,44]}]},{"content":"\\n&lt;p&gt;A string that represents the number to convert.","pos":[18795,18847],"source":"\\n<p>A string that represents the number to convert."},{"content":"The string is interpreted by using the style specified by the &lt;em&gt;style&lt;/em&gt; parameter.&lt;/p&gt;\\n","pos":[18848,18941],"source":" The string is interpreted by using the style specified by the <em>style</em> parameter.</p>\\n"},{"content":"\\n&lt;p&gt;An object that supplies culture-specific formatting information about &lt;em&gt;s&lt;/em&gt;.","pos":[19357,19443],"source":"\\n<p>An object that supplies culture-specific formatting information about <em>s</em>."},{"content":"&lt;/p&gt;\\n","pos":[19444,19450],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A 64-bit unsigned integer equivalent to the number specified in &lt;em&gt;s&lt;/em&gt;.&lt;/p&gt;\\n","pos":[19510,19596],"source":"\\n<p>A 64-bit unsigned integer equivalent to the number specified in <em>s</em>.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;s&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.","pos":[19715,19770],"source":"\\n<p>The <em>s</em> parameter is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[19771,19777],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;s&lt;/em&gt; parameter is not in a format compliant with &lt;em&gt;style&lt;/em&gt;.","pos":[20395,20474],"source":"\\n<p>The <em>s</em> parameter is not in a format compliant with <em>style</em>."},{"content":"&lt;/p&gt;\\n","pos":[20475,20481],"source":" </p>\\n"},{"pos":[21555,21585],"content":"Parse(String, IFormatProvider)","needQuote":true,"nodes":[{"content":"Parse(String, IFormatProvider)","pos":[0,30]}]},{"content":"\\n&lt;p&gt;A string that represents the number to convert.","pos":[22425,22477],"source":"\\n<p>A string that represents the number to convert."},{"content":"&lt;/p&gt;\\n","pos":[22478,22484],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An object that supplies culture-specific formatting information about &lt;em&gt;s&lt;/em&gt;.","pos":[22560,22646],"source":"\\n<p>An object that supplies culture-specific formatting information about <em>s</em>."},{"content":"&lt;/p&gt;\\n","pos":[22647,22653],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A 64-bit unsigned integer equivalent to the number specified in &lt;em&gt;s&lt;/em&gt;.&lt;/p&gt;\\n","pos":[22713,22799],"source":"\\n<p>A 64-bit unsigned integer equivalent to the number specified in <em>s</em>.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;s&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.","pos":[22918,22973],"source":"\\n<p>The <em>s</em> parameter is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[22974,22980],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;s&lt;/em&gt; parameter is not in the correct style.","pos":[23073,23131],"source":"\\n<p>The <em>s</em> parameter is not in the correct style."},{"content":"&lt;/p&gt;\\n","pos":[23132,23138],"source":" </p>\\n"},{"pos":[24387,24416],"content":"IComparable.CompareTo(Object)","needQuote":true,"nodes":[{"content":"IComparable.CompareTo(Object)","pos":[0,29]}]},{"pos":[25532,25558],"content":"IConvertible.GetTypeCode()","needQuote":true,"nodes":[{"content":"IConvertible.GetTypeCode()","pos":[0,26]}]},{"pos":[26643,26682],"content":"IConvertible.ToBoolean(IFormatProvider)","needQuote":true,"nodes":[{"content":"IConvertible.ToBoolean(IFormatProvider)","pos":[0,39]}]},{"content":"\\n&lt;p&gt;This parameter is ignored.&lt;/p&gt;\\n","pos":[27545,27582],"source":"\\n<p>This parameter is ignored.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the value of the current instance is not zero; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[27643,27762],"source":"\\n<p>\\n<strong>true</strong> if the value of the current instance is not zero; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[28312,28348],"content":"IConvertible.ToByte(IFormatProvider)","needQuote":true,"nodes":[{"content":"IConvertible.ToByte(IFormatProvider)","pos":[0,36]}]},{"content":"\\n&lt;p&gt;This parameter is ignored.&lt;/p&gt;\\n","pos":[29190,29227],"source":"\\n<p>This parameter is ignored.</p>\\n"},{"pos":[29956,29992],"content":"IConvertible.ToChar(IFormatProvider)","needQuote":true,"nodes":[{"content":"IConvertible.ToChar(IFormatProvider)","pos":[0,36]}]},{"content":"\\n&lt;p&gt;This parameter is ignored.&lt;/p&gt;\\n","pos":[30834,30871],"source":"\\n<p>This parameter is ignored.</p>\\n"},{"pos":[31612,31652],"content":"IConvertible.ToDateTime(IFormatProvider)","needQuote":true,"nodes":[{"content":"IConvertible.ToDateTime(IFormatProvider)","pos":[0,40]}]},{"content":"\\n&lt;p&gt;This parameter is ignored.&lt;/p&gt;\\n","pos":[32530,32567],"source":"\\n<p>This parameter is ignored.</p>\\n"},{"content":"\\n&lt;p&gt;This conversion is not supported.","pos":[32629,32667],"source":"\\n<p>This conversion is not supported."},{"content":"No value is returned.&lt;/p&gt;\\n","pos":[32668,32695],"source":" No value is returned.</p>\\n"},{"content":"\\n&lt;p&gt;In all cases.&lt;/p&gt;\\n","pos":[32812,32836],"source":"\\n<p>In all cases.</p>\\n"},{"pos":[33399,33438],"content":"IConvertible.ToDecimal(IFormatProvider)","needQuote":true,"nodes":[{"content":"IConvertible.ToDecimal(IFormatProvider)","pos":[0,39]}]},{"content":"\\n&lt;p&gt;This parameter is ignored.&lt;/p&gt;\\n","pos":[34304,34341],"source":"\\n<p>This parameter is ignored.</p>\\n"},{"pos":[35094,35132],"content":"IConvertible.ToDouble(IFormatProvider)","needQuote":true,"nodes":[{"content":"IConvertible.ToDouble(IFormatProvider)","pos":[0,38]}]},{"content":"\\n&lt;p&gt;This parameter is ignored.&lt;/p&gt;\\n","pos":[35990,36027],"source":"\\n<p>This parameter is ignored.</p>\\n"},{"pos":[36771,36808],"content":"IConvertible.ToInt16(IFormatProvider)","needQuote":true,"nodes":[{"content":"IConvertible.ToInt16(IFormatProvider)","pos":[0,37]}]},{"content":"\\n&lt;p&gt;This parameter is ignored.&lt;/p&gt;\\n","pos":[37658,37695],"source":"\\n<p>This parameter is ignored.</p>\\n"},{"pos":[38434,38471],"content":"IConvertible.ToInt32(IFormatProvider)","needQuote":true,"nodes":[{"content":"IConvertible.ToInt32(IFormatProvider)","pos":[0,37]}]},{"content":"\\n&lt;p&gt;This parameter is ignored.&lt;/p&gt;\\n","pos":[39321,39358],"source":"\\n<p>This parameter is ignored.</p>\\n"},{"pos":[40097,40134],"content":"IConvertible.ToInt64(IFormatProvider)","needQuote":true,"nodes":[{"content":"IConvertible.ToInt64(IFormatProvider)","pos":[0,37]}]},{"content":"\\n&lt;p&gt;This parameter is ignored.&lt;/p&gt;\\n","pos":[40982,41019],"source":"\\n<p>This parameter is ignored.</p>\\n"},{"pos":[41758,41795],"content":"IConvertible.ToSByte(IFormatProvider)","needQuote":true,"nodes":[{"content":"IConvertible.ToSByte(IFormatProvider)","pos":[0,37]}]},{"content":"\\n&lt;p&gt;This parameter is ignored.&lt;/p&gt;\\n","pos":[42645,42682],"source":"\\n<p>This parameter is ignored.</p>\\n"},{"pos":[43424,43462],"content":"IConvertible.ToSingle(IFormatProvider)","needQuote":true,"nodes":[{"content":"IConvertible.ToSingle(IFormatProvider)","pos":[0,38]}]},{"content":"\\n&lt;p&gt;This parameter is ignored.&lt;/p&gt;\\n","pos":[44319,44356],"source":"\\n<p>This parameter is ignored.</p>\\n"},{"pos":[45133,45175],"content":"IConvertible.ToType(Type, IFormatProvider)","needQuote":true,"nodes":[{"content":"IConvertible.ToType(Type, IFormatProvider)","pos":[0,42]}]},{"content":"\\n&lt;p&gt;The value of the current instance, converted to &lt;em&gt;type&lt;/em&gt;.&lt;/p&gt;\\n","pos":[46494,46567],"source":"\\n<p>The value of the current instance, converted to <em>type</em>.</p>\\n"},{"pos":[47141,47179],"content":"IConvertible.ToUInt16(IFormatProvider)","needQuote":true,"nodes":[{"content":"IConvertible.ToUInt16(IFormatProvider)","pos":[0,38]}]},{"content":"\\n&lt;p&gt;This parameter is ignored.&lt;/p&gt;\\n","pos":[48037,48074],"source":"\\n<p>This parameter is ignored.</p>\\n"},{"pos":[48821,48859],"content":"IConvertible.ToUInt32(IFormatProvider)","needQuote":true,"nodes":[{"content":"IConvertible.ToUInt32(IFormatProvider)","pos":[0,38]}]},{"content":"\\n&lt;p&gt;This parameter is ignored.&lt;/p&gt;\\n","pos":[49717,49754],"source":"\\n<p>This parameter is ignored.</p>\\n"},{"pos":[50501,50539],"content":"IConvertible.ToUInt64(IFormatProvider)","needQuote":true,"nodes":[{"content":"IConvertible.ToUInt64(IFormatProvider)","pos":[0,38]}]},{"content":"\\n&lt;p&gt;This parameter is ignored.&lt;/p&gt;\\n","pos":[51395,51432],"source":"\\n<p>This parameter is ignored.</p>\\n"},{"content":"\\n&lt;p&gt;The value of the current instance, unchanged.&lt;/p&gt;\\n","pos":[51492,51548],"source":"\\n<p>The value of the current instance, unchanged.</p>\\n"},{"pos":[51954,51964],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"content":"\\n&lt;p&gt;The string representation of the value of this instance, consisting of a sequence of digits ranging from 0 to 9, without a sign or leading zeroes.&lt;/p&gt;\\n","pos":[52651,52808],"source":"\\n<p>The string representation of the value of this instance, consisting of a sequence of digits ranging from 0 to 9, without a sign or leading zeroes.</p>\\n"},{"pos":[53291,53316],"content":"ToString(IFormatProvider)","needQuote":true,"nodes":[{"content":"ToString(IFormatProvider)","pos":[0,25]}]},{"content":"\\n&lt;p&gt;An object that supplies culture-specific formatting information.","pos":[54147,54216],"source":"\\n<p>An object that supplies culture-specific formatting information."},{"content":"&lt;/p&gt;\\n","pos":[54217,54223],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The string representation of the value of this instance, consisting of a sequence of digits ranging from 0 to 9, without a sign or leading zeros.","pos":[54283,54433],"source":"\\n<p>The string representation of the value of this instance, consisting of a sequence of digits ranging from 0 to 9, without a sign or leading zeros."},{"content":"&lt;/p&gt;\\n","pos":[54435,54441],"source":"  </p>\\n"},{"pos":[54916,54932],"content":"ToString(String)","needQuote":true,"nodes":[{"content":"ToString(String)","pos":[0,16]}]},{"content":"\\n&lt;p&gt;A numeric format string.&lt;/p&gt;\\n","pos":[55692,55727],"source":"\\n<p>A numeric format string.</p>\\n"},{"content":"\\n&lt;p&gt;The string representation of the value of this instance as specified by &lt;em&gt;format&lt;/em&gt;.&lt;/p&gt;\\n","pos":[55787,55886],"source":"\\n<p>The string representation of the value of this instance as specified by <em>format</em>.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;format&lt;/em&gt; parameter is invalid.","pos":[55993,56039],"source":"\\n<p>The <em>format</em> parameter is invalid."},{"content":"&lt;/p&gt;\\n","pos":[56040,56046],"source":" </p>\\n"},{"pos":[56510,56543],"content":"ToString(String, IFormatProvider)","needQuote":true,"nodes":[{"content":"ToString(String, IFormatProvider)","pos":[0,33]}]},{"content":"\\n&lt;p&gt;A numeric format string.&lt;/p&gt;\\n","pos":[57422,57457],"source":"\\n<p>A numeric format string.</p>\\n"},{"content":"\\n&lt;p&gt;An object that supplies culture-specific formatting information about this instance.","pos":[57533,57622],"source":"\\n<p>An object that supplies culture-specific formatting information about this instance."},{"content":"&lt;/p&gt;\\n","pos":[57623,57629],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The string representation of the value of this instance as specified by &lt;em&gt;format&lt;/em&gt; and &lt;em&gt;provider&lt;/em&gt;.&lt;/p&gt;\\n","pos":[57689,57810],"source":"\\n<p>The string representation of the value of this instance as specified by <em>format</em> and <em>provider</em>.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;format&lt;/em&gt; parameter is invalid.","pos":[57917,57963],"source":"\\n<p>The <em>format</em> parameter is invalid."},{"content":"&lt;/p&gt;\\n","pos":[57964,57970],"source":" </p>\\n"},{"pos":[58683,58742],"content":"TryParse(String, NumberStyles, IFormatProvider, out UInt64)","needQuote":true,"nodes":[{"content":"TryParse(String, NumberStyles, IFormatProvider, out UInt64)","pos":[0,59]}]},{"content":"\\n&lt;p&gt;A string that represents the number to convert.","pos":[59820,59872],"source":"\\n<p>A string that represents the number to convert."},{"content":"The string is interpreted by using the style specified by the &lt;em&gt;style&lt;/em&gt; parameter.&lt;/p&gt;\\n","pos":[59873,59966],"source":" The string is interpreted by using the style specified by the <em>style</em> parameter.</p>\\n"},{"content":"\\n&lt;p&gt;An object that supplies culture-specific formatting information about &lt;em&gt;s&lt;/em&gt;.","pos":[60364,60450],"source":"\\n<p>An object that supplies culture-specific formatting information about <em>s</em>."},{"content":"&lt;/p&gt;\\n","pos":[60451,60457],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if &lt;em&gt;s&lt;/em&gt; was converted successfully; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[61312,61423],"source":"\\n<p>\\n<strong>true</strong> if <em>s</em> was converted successfully; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[63106,63134],"content":"TryParse(String, out UInt64)","needQuote":true,"nodes":[{"content":"TryParse(String, out UInt64)","pos":[0,28]}]},{"content":"\\n&lt;p&gt;A string that represents the number to convert.","pos":[64006,64058],"source":"\\n<p>A string that represents the number to convert."},{"content":"&lt;/p&gt;\\n","pos":[64059,64065],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if &lt;em&gt;s&lt;/em&gt; was converted successfully; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[64908,65019],"source":"\\n<p>\\n<strong>true</strong> if <em>s</em> was converted successfully; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[65736,65742],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[65878,65889],"content":"IComparable","needQuote":true,"nodes":[{"content":"IComparable","pos":[0,11]}]},{"pos":[66084,66103],"content":"IComparable<UInt64>","needQuote":true,"nodes":[{"content":"IComparable&lt;UInt64&gt;","pos":[0,19],"source":"IComparable<UInt64>"}]},{"pos":[66291,66302],"content":"IComparable","needQuote":true,"nodes":[{"content":"IComparable","pos":[0,11]}]},{"pos":[66346,66347],"content":"<","needQuote":true,"nodes":[]},{"pos":[66397,66403],"content":"UInt64","needQuote":true,"nodes":[{"content":"UInt64","pos":[0,6]}]},{"pos":[66536,66547],"content":"IComparable","needQuote":true,"nodes":[{"content":"IComparable","pos":[0,11]}]},{"content":"(Of","pos":[66592,66595]},{"pos":[66652,66658],"content":"UInt64","needQuote":true,"nodes":[{"content":"UInt64","pos":[0,6]}]},{"pos":[66718,66719],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[66935,66947],"content":"IConvertible","needQuote":true,"nodes":[{"content":"IConvertible","pos":[0,12]}]},{"pos":[67143,67161],"content":"IEquatable<UInt64>","needQuote":true,"nodes":[{"content":"IEquatable&lt;UInt64&gt;","pos":[0,18],"source":"IEquatable<UInt64>"}]},{"pos":[67345,67355],"content":"IEquatable","needQuote":true,"nodes":[{"content":"IEquatable","pos":[0,10]}]},{"pos":[67398,67399],"content":"<","needQuote":true,"nodes":[]},{"pos":[67449,67455],"content":"UInt64","needQuote":true,"nodes":[{"content":"UInt64","pos":[0,6]}]},{"pos":[67587,67597],"content":"IEquatable","needQuote":true,"nodes":[{"content":"IEquatable","pos":[0,10]}]},{"content":"(Of","pos":[67641,67644]},{"pos":[67701,67707],"content":"UInt64","needQuote":true,"nodes":[{"content":"UInt64","pos":[0,6]}]},{"pos":[67767,67768],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[67981,67993],"content":"IFormattable","needQuote":true,"nodes":[{"content":"IFormattable","pos":[0,12]}]},{"pos":[68198,68220],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[68368,68374],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[68441,68442],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[68492,68498],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[68559,68560]},{"pos":[68615,68621],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[68681,68682],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[68779,68785],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[68852,68853],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[68903,68909],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[68970,68971]},{"pos":[69026,69032],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[69092,69093],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[69338,69369],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[69535,69550],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[69626,69627],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[69677,69683],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[69744,69745]},{"pos":[69800,69806],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[69866,69867],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[69973,69988],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[70064,70065],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[70115,70121],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[70182,70183]},{"pos":[70238,70244],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[70304,70305],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[70531,70540],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[70633,70640],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[70708,70709],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[70736,70737],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[70806,70813],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[70881,70882],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[70909,70910],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[71053,71067],"content":"IComparable<T>","needQuote":true,"nodes":[{"content":"IComparable&lt;T&gt;","pos":[0,14],"source":"IComparable<T>"}]},{"pos":[71226,71237],"content":"IComparable","needQuote":true,"nodes":[{"content":"IComparable","pos":[0,11]}]},{"pos":[71281,71282],"content":"<","needQuote":true,"nodes":[]},{"pos":[71309,71310],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[71410,71421],"content":"IComparable","needQuote":true,"nodes":[{"content":"IComparable","pos":[0,11]}]},{"content":"(Of","pos":[71466,71469]},{"pos":[71503,71504],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[71531,71532],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[71708,71721],"content":"IEquatable<T>","needQuote":true,"nodes":[{"content":"IEquatable&lt;T&gt;","pos":[0,13],"source":"IEquatable<T>"}]},{"pos":[71876,71886],"content":"IEquatable","needQuote":true,"nodes":[{"content":"IEquatable","pos":[0,10]}]},{"pos":[71929,71930],"content":"<","needQuote":true,"nodes":[]},{"pos":[71957,71958],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[72057,72067],"content":"IEquatable","needQuote":true,"nodes":[{"content":"IEquatable","pos":[0,10]}]},{"content":"(Of","pos":[72111,72114]},{"pos":[72148,72149],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[72176,72177],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[72361,72367],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[72512,72518],"content":"UInt64","needQuote":true,"nodes":[{"content":"UInt64","pos":[0,6]}]},{"pos":[72764,72781],"content":"CompareTo(UInt64)","needQuote":true,"nodes":[{"content":"CompareTo(UInt64)","pos":[0,17]}]},{"pos":[72999,73008],"content":"CompareTo","needQuote":true,"nodes":[{"content":"CompareTo","pos":[0,9]}]},{"pos":[73077,73078],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[73128,73134],"content":"UInt64","needQuote":true,"nodes":[{"content":"UInt64","pos":[0,6]}]},{"pos":[73194,73195],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[73277,73286],"content":"CompareTo","needQuote":true,"nodes":[{"content":"CompareTo","pos":[0,9]}]},{"pos":[73358,73359],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[73409,73415],"content":"UInt64","needQuote":true,"nodes":[{"content":"UInt64","pos":[0,6]}]},{"pos":[73475,73476],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[73746,73751],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[73897,73909],"content":"CompareTo(T)","needQuote":true,"nodes":[{"content":"CompareTo(T)","pos":[0,12]}]},{"pos":[74079,74088],"content":"CompareTo","needQuote":true,"nodes":[{"content":"CompareTo","pos":[0,9]}]},{"pos":[74145,74146],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[74173,74174],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[74201,74202],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[74284,74293],"content":"CompareTo","needQuote":true,"nodes":[{"content":"CompareTo","pos":[0,9]}]},{"pos":[74353,74354],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[74381,74382],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[74409,74410],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[74671,74685],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[74810,74816],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[74865,74866],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[74916,74922],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[74982,74983],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[75069,75075],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[75124,75125],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[75175,75181],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[75241,75242],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[75421,75428],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[75579,75588],"content":"ValueType","needQuote":true,"nodes":[{"content":"ValueType","pos":[0,9]}]},{"pos":[75834,75848],"content":"Equals(UInt64)","needQuote":true,"nodes":[{"content":"Equals(UInt64)","pos":[0,14]}]},{"pos":[76054,76060],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[76125,76126],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[76176,76182],"content":"UInt64","needQuote":true,"nodes":[{"content":"UInt64","pos":[0,6]}]},{"pos":[76242,76243],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[76321,76327],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[76395,76396],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[76446,76452],"content":"UInt64","needQuote":true,"nodes":[{"content":"UInt64","pos":[0,6]}]},{"pos":[76512,76513],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[76772,76781],"content":"Equals(T)","needQuote":true,"nodes":[{"content":"Equals(T)","pos":[0,9]}]},{"pos":[76939,76945],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[76998,76999],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[77026,77027],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[77054,77055],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[77133,77139],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[77195,77196],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[77223,77224],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[77251,77252],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[77492,77505],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[77612,77623],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[77677,77678],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[77705,77706],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[77782,77793],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[77847,77848],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[77875,77876],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[78043,78049],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[78228,78240],"content":"NumberStyles","needQuote":true,"nodes":[{"content":"NumberStyles","pos":[0,12]}]},{"pos":[78421,78441],"content":"System.Globalization","needQuote":true,"nodes":[{"content":"System.Globalization","pos":[0,20]}]},{"pos":[78623,78638],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[78851,78868],"content":"CompareTo(Object)","needQuote":true,"nodes":[{"content":"CompareTo(Object)","pos":[0,17]}]},{"pos":[79003,79012],"content":"CompareTo","needQuote":true,"nodes":[{"content":"CompareTo","pos":[0,9]}]},{"pos":[79066,79067],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[79117,79123],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[79183,79184],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[79275,79284],"content":"CompareTo","needQuote":true,"nodes":[{"content":"CompareTo","pos":[0,9]}]},{"pos":[79338,79339],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[79389,79395],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[79455,79456],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[79675,79688],"content":"GetTypeCode()","needQuote":true,"nodes":[{"content":"GetTypeCode()","pos":[0,13]}]},{"pos":[79801,79812],"content":"GetTypeCode","needQuote":true,"nodes":[{"content":"GetTypeCode","pos":[0,11]}]},{"pos":[79869,79870],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[79897,79898],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[79977,79988],"content":"GetTypeCode","needQuote":true,"nodes":[{"content":"GetTypeCode","pos":[0,11]}]},{"pos":[80045,80046],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[80073,80074],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[80249,80257],"content":"TypeCode","needQuote":true,"nodes":[{"content":"TypeCode","pos":[0,8]}]},{"pos":[80461,80487],"content":"ToBoolean(IFormatProvider)","needQuote":true,"nodes":[{"content":"ToBoolean(IFormatProvider)","pos":[0,26]}]},{"pos":[80642,80651],"content":"ToBoolean","needQuote":true,"nodes":[{"content":"ToBoolean","pos":[0,9]}]},{"pos":[80706,80707],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[80766,80781],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[80829,80830],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[80931,80940],"content":"ToBoolean","needQuote":true,"nodes":[{"content":"ToBoolean","pos":[0,9]}]},{"pos":[80995,80996],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[81055,81070],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[81118,81119],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[81377,81400],"content":"ToByte(IFormatProvider)","needQuote":true,"nodes":[{"content":"ToByte(IFormatProvider)","pos":[0,23]}]},{"pos":[81549,81555],"content":"ToByte","needQuote":true,"nodes":[{"content":"ToByte","pos":[0,6]}]},{"pos":[81607,81608],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[81667,81682],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[81730,81731],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[81829,81835],"content":"ToByte","needQuote":true,"nodes":[{"content":"ToByte","pos":[0,6]}]},{"pos":[81887,81888],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[81947,81962],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[82010,82011],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[82211,82215],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[82404,82427],"content":"ToChar(IFormatProvider)","needQuote":true,"nodes":[{"content":"ToChar(IFormatProvider)","pos":[0,23]}]},{"pos":[82576,82582],"content":"ToChar","needQuote":true,"nodes":[{"content":"ToChar","pos":[0,6]}]},{"pos":[82634,82635],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[82694,82709],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[82757,82758],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[82856,82862],"content":"ToChar","needQuote":true,"nodes":[{"content":"ToChar","pos":[0,6]}]},{"pos":[82914,82915],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[82974,82989],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[83037,83038],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[83238,83242],"content":"Char","needQuote":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[83435,83462],"content":"ToDateTime(IFormatProvider)","needQuote":true,"nodes":[{"content":"ToDateTime(IFormatProvider)","pos":[0,27]}]},{"pos":[83619,83629],"content":"ToDateTime","needQuote":true,"nodes":[{"content":"ToDateTime","pos":[0,10]}]},{"pos":[83685,83686],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[83745,83760],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[83808,83809],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[83911,83921],"content":"ToDateTime","needQuote":true,"nodes":[{"content":"ToDateTime","pos":[0,10]}]},{"pos":[83977,83978],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[84037,84052],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[84100,84101],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[84313,84321],"content":"DateTime","needQuote":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[84525,84551],"content":"ToDecimal(IFormatProvider)","needQuote":true,"nodes":[{"content":"ToDecimal(IFormatProvider)","pos":[0,26]}]},{"pos":[84706,84715],"content":"ToDecimal","needQuote":true,"nodes":[{"content":"ToDecimal","pos":[0,9]}]},{"pos":[84770,84771],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[84830,84845],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[84893,84894],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[84995,85004],"content":"ToDecimal","needQuote":true,"nodes":[{"content":"ToDecimal","pos":[0,9]}]},{"pos":[85059,85060],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[85119,85134],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[85182,85183],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[85392,85399],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[85599,85624],"content":"ToDouble(IFormatProvider)","needQuote":true,"nodes":[{"content":"ToDouble(IFormatProvider)","pos":[0,25]}]},{"pos":[85777,85785],"content":"ToDouble","needQuote":true,"nodes":[{"content":"ToDouble","pos":[0,8]}]},{"pos":[85839,85840],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[85899,85914],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[85962,85963],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[86063,86071],"content":"ToDouble","needQuote":true,"nodes":[{"content":"ToDouble","pos":[0,8]}]},{"pos":[86125,86126],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[86185,86200],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[86248,86249],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[86455,86461],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[86657,86681],"content":"ToInt16(IFormatProvider)","needQuote":true,"nodes":[{"content":"ToInt16(IFormatProvider)","pos":[0,24]}]},{"pos":[86832,86839],"content":"ToInt16","needQuote":true,"nodes":[{"content":"ToInt16","pos":[0,7]}]},{"pos":[86892,86893],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[86952,86967],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[87015,87016],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[87115,87122],"content":"ToInt16","needQuote":true,"nodes":[{"content":"ToInt16","pos":[0,7]}]},{"pos":[87175,87176],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[87235,87250],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[87298,87299],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[87502,87507],"content":"Int16","needQuote":true,"nodes":[{"content":"Int16","pos":[0,5]}]},{"pos":[87700,87724],"content":"ToInt32(IFormatProvider)","needQuote":true,"nodes":[{"content":"ToInt32(IFormatProvider)","pos":[0,24]}]},{"pos":[87875,87882],"content":"ToInt32","needQuote":true,"nodes":[{"content":"ToInt32","pos":[0,7]}]},{"pos":[87935,87936],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[87995,88010],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[88058,88059],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[88158,88165],"content":"ToInt32","needQuote":true,"nodes":[{"content":"ToInt32","pos":[0,7]}]},{"pos":[88218,88219],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[88278,88293],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[88341,88342],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[88597,88621],"content":"ToInt64(IFormatProvider)","needQuote":true,"nodes":[{"content":"ToInt64(IFormatProvider)","pos":[0,24]}]},{"pos":[88772,88779],"content":"ToInt64","needQuote":true,"nodes":[{"content":"ToInt64","pos":[0,7]}]},{"pos":[88832,88833],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[88892,88907],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[88955,88956],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[89055,89062],"content":"ToInt64","needQuote":true,"nodes":[{"content":"ToInt64","pos":[0,7]}]},{"pos":[89115,89116],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[89175,89190],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[89238,89239],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[89442,89447],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[89640,89664],"content":"ToSByte(IFormatProvider)","needQuote":true,"nodes":[{"content":"ToSByte(IFormatProvider)","pos":[0,24]}]},{"pos":[89815,89822],"content":"ToSByte","needQuote":true,"nodes":[{"content":"ToSByte","pos":[0,7]}]},{"pos":[89875,89876],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[89935,89950],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[89998,89999],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[90098,90105],"content":"ToSByte","needQuote":true,"nodes":[{"content":"ToSByte","pos":[0,7]}]},{"pos":[90158,90159],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[90218,90233],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[90281,90282],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[90485,90490],"content":"SByte","needQuote":true,"nodes":[{"content":"SByte","pos":[0,5]}]},{"pos":[90684,90709],"content":"ToSingle(IFormatProvider)","needQuote":true,"nodes":[{"content":"ToSingle(IFormatProvider)","pos":[0,25]}]},{"pos":[90862,90870],"content":"ToSingle","needQuote":true,"nodes":[{"content":"ToSingle","pos":[0,8]}]},{"pos":[90924,90925],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[90984,90999],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[91047,91048],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[91148,91156],"content":"ToSingle","needQuote":true,"nodes":[{"content":"ToSingle","pos":[0,8]}]},{"pos":[91210,91211],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[91270,91285],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[91333,91334],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[91540,91546],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[91753,91782],"content":"ToType(Type, IFormatProvider)","needQuote":true,"nodes":[{"content":"ToType(Type, IFormatProvider)","pos":[0,29]}]},{"pos":[91956,91962],"content":"ToType","needQuote":true,"nodes":[{"content":"ToType","pos":[0,6]}]},{"pos":[92014,92015],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[92063,92067],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[92105,92106]},{"pos":[92170,92185],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[92233,92234],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[92344,92350],"content":"ToType","needQuote":true,"nodes":[{"content":"ToType","pos":[0,6]}]},{"pos":[92402,92403],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[92451,92455],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[92493,92494]},{"pos":[92558,92573],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[92621,92622],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[92840,92844],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[93035,93060],"content":"ToUInt16(IFormatProvider)","needQuote":true,"nodes":[{"content":"ToUInt16(IFormatProvider)","pos":[0,25]}]},{"pos":[93213,93221],"content":"ToUInt16","needQuote":true,"nodes":[{"content":"ToUInt16","pos":[0,8]}]},{"pos":[93275,93276],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[93335,93350],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[93398,93399],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[93499,93507],"content":"ToUInt16","needQuote":true,"nodes":[{"content":"ToUInt16","pos":[0,8]}]},{"pos":[93561,93562],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[93621,93636],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[93684,93685],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[93891,93897],"content":"UInt16","needQuote":true,"nodes":[{"content":"UInt16","pos":[0,6]}]},{"pos":[94094,94119],"content":"ToUInt32(IFormatProvider)","needQuote":true,"nodes":[{"content":"ToUInt32(IFormatProvider)","pos":[0,25]}]},{"pos":[94272,94280],"content":"ToUInt32","needQuote":true,"nodes":[{"content":"ToUInt32","pos":[0,8]}]},{"pos":[94334,94335],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[94394,94409],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[94457,94458],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[94558,94566],"content":"ToUInt32","needQuote":true,"nodes":[{"content":"ToUInt32","pos":[0,8]}]},{"pos":[94620,94621],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[94680,94695],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[94743,94744],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[94950,94956],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[95153,95178],"content":"ToUInt64(IFormatProvider)","needQuote":true,"nodes":[{"content":"ToUInt64(IFormatProvider)","pos":[0,25]}]},{"pos":[95331,95339],"content":"ToUInt64","needQuote":true,"nodes":[{"content":"ToUInt64","pos":[0,8]}]},{"pos":[95393,95394],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[95453,95468],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[95516,95517],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[95617,95625],"content":"ToUInt64","needQuote":true,"nodes":[{"content":"ToUInt64","pos":[0,8]}]},{"pos":[95679,95680],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[95739,95754],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[95802,95803],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[96031,96041],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[96142,96150],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[96201,96202],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[96229,96230],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[96303,96311],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[96362,96363],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[96390,96391],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[96604,96629],"content":"ToString(IFormatProvider)","needQuote":true,"nodes":[{"content":"ToString(IFormatProvider)","pos":[0,25]}]},{"pos":[96782,96790],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[96844,96845],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[96904,96919],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[96967,96968],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[97068,97076],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[97130,97131],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[97190,97205],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[97253,97254],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[97525,97558],"content":"ToString(String, IFormatProvider)","needQuote":true,"nodes":[{"content":"ToString(String, IFormatProvider)","pos":[0,33]}]},{"pos":[97740,97748],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[97802,97803],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[97853,97859],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[97920,97921]},{"pos":[97985,98000],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[98048,98049],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[98163,98171],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[98225,98226],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[98276,98282],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[98343,98344]},{"pos":[98408,98423],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[98471,98472],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[98698,98719],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[98918,98933],"content":"FormatException","needQuote":true,"nodes":[{"content":"FormatException","pos":[0,15]}]},{"pos":[99099,99116],"content":"OverflowException","needQuote":true,"nodes":[{"content":"OverflowException","pos":[0,17]}]},{"pos":[99305,99322],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]},{"pos":[99497,99517],"content":"InvalidCastException","needQuote":true,"nodes":[{"content":"InvalidCastException","pos":[0,20]}]}],"content":"items:\n- uid: System.UInt64\n  commentId: T:System.UInt64\n  id: UInt64\n  parent: System\n  children:\n  - System.UInt64.CompareTo(System.UInt64)\n  - System.UInt64.Equals(System.Object)\n  - System.UInt64.Equals(System.UInt64)\n  - System.UInt64.GetHashCode\n  - System.UInt64.MaxValue\n  - System.UInt64.MinValue\n  - System.UInt64.Parse(System.String)\n  - System.UInt64.Parse(System.String,System.Globalization.NumberStyles)\n  - System.UInt64.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)\n  - System.UInt64.Parse(System.String,System.IFormatProvider)\n  - System.UInt64.System#IComparable#CompareTo(System.Object)\n  - System.UInt64.System#IConvertible#GetTypeCode\n  - System.UInt64.System#IConvertible#ToBoolean(System.IFormatProvider)\n  - System.UInt64.System#IConvertible#ToByte(System.IFormatProvider)\n  - System.UInt64.System#IConvertible#ToChar(System.IFormatProvider)\n  - System.UInt64.System#IConvertible#ToDateTime(System.IFormatProvider)\n  - System.UInt64.System#IConvertible#ToDecimal(System.IFormatProvider)\n  - System.UInt64.System#IConvertible#ToDouble(System.IFormatProvider)\n  - System.UInt64.System#IConvertible#ToInt16(System.IFormatProvider)\n  - System.UInt64.System#IConvertible#ToInt32(System.IFormatProvider)\n  - System.UInt64.System#IConvertible#ToInt64(System.IFormatProvider)\n  - System.UInt64.System#IConvertible#ToSByte(System.IFormatProvider)\n  - System.UInt64.System#IConvertible#ToSingle(System.IFormatProvider)\n  - System.UInt64.System#IConvertible#ToType(System.Type,System.IFormatProvider)\n  - System.UInt64.System#IConvertible#ToUInt16(System.IFormatProvider)\n  - System.UInt64.System#IConvertible#ToUInt32(System.IFormatProvider)\n  - System.UInt64.System#IConvertible#ToUInt64(System.IFormatProvider)\n  - System.UInt64.ToString\n  - System.UInt64.ToString(System.IFormatProvider)\n  - System.UInt64.ToString(System.String)\n  - System.UInt64.ToString(System.String,System.IFormatProvider)\n  - System.UInt64.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt64@)\n  - System.UInt64.TryParse(System.String,System.UInt64@)\n  langs:\n  - csharp\n  - vb\n  name: UInt64\n  fullName: System.UInt64\n  type: Struct\n  source:\n    remote:\n      path: src/mscorlib/src/System/UInt64.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: UInt64\n    path: src/mscorlib/src/System/UInt64.cs\n    startLine: 19\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Represents a 64-bit unsigned integer.</p>\\n\"\n  syntax:\n    content: >-\n      [Serializable]\n\n      [CLSCompliant(false)]\n\n      [StructLayout(LayoutKind.Sequential)]\n\n      [ComVisible(true)]\n\n      public struct UInt64 : IComparable, IFormattable, IConvertible, IComparable<ulong>, IEquatable<ulong>\n    content.vb: >-\n      <Serializable>\n\n      <CLSCompliant(False)>\n\n      <StructLayout(LayoutKind.Sequential)>\n\n      <ComVisible(True)>\n\n      Public Structure UInt64\n          Implements IComparable, IFormattable, IConvertible, IComparable(Of ULong), IEquatable(Of ULong)\n  seealso:\n  - type: System.Int64\n    commentId: T:System.Int64\n  implements:\n  - System.IComparable\n  - System.IComparable{System.UInt64}\n  - System.IConvertible\n  - System.IEquatable{System.UInt64}\n  - System.IFormattable\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  attributes:\n  - type: System.CLSCompliantAttribute\n    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)\n    arguments:\n    - type: System.Boolean\n      value: false\n  - type: System.Runtime.InteropServices.StructLayoutAttribute\n    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)\n    arguments:\n    - type: System.Runtime.InteropServices.LayoutKind\n      value: 0\n  modifiers.csharp:\n  - public\n  - struct\n  modifiers.vb:\n  - Public\n  - Structure\n  nameWithType: UInt64\n- uid: System.UInt64.MaxValue\n  commentId: F:System.UInt64.MaxValue\n  id: MaxValue\n  parent: System.UInt64\n  langs:\n  - csharp\n  - vb\n  name: MaxValue\n  fullName: System.UInt64.MaxValue\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/UInt64.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: MaxValue\n    path: src/mscorlib/src/System/UInt64.cs\n    startLine: 27\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Represents the largest possible value of <xref href=\\\"System.UInt64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. This field is constant.</p>\\n\"\n  syntax:\n    content: public const ulong MaxValue = 18446744073709551615UL\n    content.vb: Public Const MaxValue As ULong = 18446744073709551615UL\n    return:\n      type: System.UInt64\n  seealso:\n  - type: System.UInt64.MinValue\n    commentId: F:System.UInt64.MinValue\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: UInt64.MaxValue\n- uid: System.UInt64.MinValue\n  commentId: F:System.UInt64.MinValue\n  id: MinValue\n  parent: System.UInt64\n  langs:\n  - csharp\n  - vb\n  name: MinValue\n  fullName: System.UInt64.MinValue\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/UInt64.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: MinValue\n    path: src/mscorlib/src/System/UInt64.cs\n    startLine: 28\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Represents the smallest possible value of <xref href=\\\"System.UInt64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. This field is constant.</p>\\n\"\n  syntax:\n    content: public const ulong MinValue = 0UL\n    content.vb: Public Const MinValue As ULong = 0UL\n    return:\n      type: System.UInt64\n  seealso:\n  - type: System.UInt64.MaxValue\n    commentId: F:System.UInt64.MaxValue\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: UInt64.MinValue\n- uid: System.UInt64.CompareTo(System.UInt64)\n  commentId: M:System.UInt64.CompareTo(System.UInt64)\n  id: CompareTo(System.UInt64)\n  parent: System.UInt64\n  langs:\n  - csharp\n  - vb\n  name: CompareTo(UInt64)\n  fullName: System.UInt64.CompareTo(System.UInt64)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/UInt64.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: CompareTo\n    path: src/mscorlib/src/System/UInt64.cs\n    startLine: 51\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Compares this instance to a specified 64-bit unsigned integer and returns an indication of their relative values.</p>\\n\"\n  syntax:\n    content: public int CompareTo(ulong value)\n    content.vb: Public Function CompareTo(value As ULong) As Integer\n    parameters:\n    - id: value\n      type: System.UInt64\n      description: \"\\n<p>An unsigned integer to compare. </p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>A signed number indicating the relative values of this instance and <em>value</em>.</p>\\n<p>Return Value </p>\\n<p>Description </p>\\n<table><tbody><tr><td>\\n<p>Less than zero </p>\\n</td><td>\\n<p>This instance is less than <em>value</em>. </p>\\n</td></tr><tr><td>\\n<p>Zero </p>\\n</td><td>\\n<p>This instance is equal to <em>value</em>. </p>\\n</td></tr><tr><td>\\n<p>Greater than zero </p>\\n</td><td>\\n<p>This instance is greater than <em>value</em>. </p>\\n</td></tr></tbody></table>\\n\"\n  seealso:\n  - type: System.UInt64.Equals(System.Object)\n    commentId: M:System.UInt64.Equals(System.Object)\n  implements:\n  - System.IComparable{System.UInt64}.CompareTo(System.UInt64)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: UInt64.CompareTo(UInt64)\n- uid: System.UInt64.Equals(System.Object)\n  commentId: M:System.UInt64.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.UInt64\n  langs:\n  - csharp\n  - vb\n  name: Equals(Object)\n  fullName: System.UInt64.Equals(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/UInt64.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Equals\n    path: src/mscorlib/src/System/UInt64.cs\n    startLine: 59\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Returns a value indicating whether this instance is equal to a specified object.</p>\\n\"\n  syntax:\n    content: public override bool Equals(object obj)\n    content.vb: Public Overrides Function Equals(obj As Object) As Boolean\n    parameters:\n    - id: obj\n      type: System.Object\n      description: \"\\n<p>An object to compare to this instance. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if <em>obj</em> is an instance of <xref href=\\\"System.UInt64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and equals the value of this instance; otherwise, <strong>false</strong>.</p>\\n\"\n  overridden: System.ValueType.Equals(System.Object)\n  seealso:\n  - type: System.UInt64.CompareTo(System.Object)\n    commentId: M:System.UInt64.CompareTo(System.Object)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: UInt64.Equals(Object)\n- uid: System.UInt64.Equals(System.UInt64)\n  commentId: M:System.UInt64.Equals(System.UInt64)\n  id: Equals(System.UInt64)\n  parent: System.UInt64\n  langs:\n  - csharp\n  - vb\n  name: Equals(UInt64)\n  fullName: System.UInt64.Equals(System.UInt64)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/UInt64.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Equals\n    path: src/mscorlib/src/System/UInt64.cs\n    startLine: 66\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Returns a value indicating whether this instance is equal to a specified <xref href=\\\"System.UInt64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  syntax:\n    content: >-\n      [NonVersionable]\n\n      public bool Equals(ulong obj)\n    content.vb: >-\n      <NonVersionable>\n\n      Public Function Equals(obj As ULong) As Boolean\n    parameters:\n    - id: obj\n      type: System.UInt64\n      description: \"\\n<p>A <xref href=\\\"System.UInt64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value to compare to this instance.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if <em>obj</em> has the same value as this instance; otherwise, <strong>false</strong>.</p>\\n\"\n  implements:\n  - System.IEquatable{System.UInt64}.Equals(System.UInt64)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: UInt64.Equals(UInt64)\n- uid: System.UInt64.GetHashCode\n  commentId: M:System.UInt64.GetHashCode\n  id: GetHashCode\n  parent: System.UInt64\n  langs:\n  - csharp\n  - vb\n  name: GetHashCode()\n  fullName: System.UInt64.GetHashCode()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/UInt64.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetHashCode\n    path: src/mscorlib/src/System/UInt64.cs\n    startLine: 73\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Returns the hash code for this instance.</p>\\n\"\n  syntax:\n    content: public override int GetHashCode()\n    content.vb: Public Overrides Function GetHashCode As Integer\n    return:\n      type: System.Int32\n      description: \"\\n<p>A 32-bit signed integer hash code.</p>\\n\"\n  overridden: System.ValueType.GetHashCode\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: UInt64.GetHashCode()\n- uid: System.UInt64.Parse(System.String)\n  commentId: M:System.UInt64.Parse(System.String)\n  id: Parse(System.String)\n  parent: System.UInt64\n  langs:\n  - csharp\n  - vb\n  name: Parse(String)\n  fullName: System.UInt64.Parse(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/UInt64.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Parse\n    path: src/mscorlib/src/System/UInt64.cs\n    startLine: 101\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Converts the string representation of a number to its 64-bit unsigned integer equivalent.</p>\\n\"\n  syntax:\n    content: >-\n      [CLSCompliant(false)]\n\n      public static ulong Parse(string s)\n    content.vb: >-\n      <CLSCompliant(False)>\n\n      Public Shared Function Parse(s As String) As ULong\n    parameters:\n    - id: s\n      type: System.String\n      description: \"\\n<p>A string that represents the number to convert. </p>\\n\"\n    return:\n      type: System.UInt64\n      description: \"\\n<p>A 64-bit unsigned integer equivalent to the number contained in <em>s</em>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>s</em> parameter is <strong>null</strong>. </p>\\n\"\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>The <em>s</em> parameter is not in the correct format. </p>\\n\"\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: \"\\n<p>The <em>s</em> parameter represents a number less than <xref href=\\\"System.UInt64.MinValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or greater than <xref href=\\\"System.UInt64.MaxValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  seealso:\n  - type: System.UInt64.ToString\n    commentId: M:System.UInt64.ToString\n  attributes:\n  - type: System.CLSCompliantAttribute\n    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)\n    arguments:\n    - type: System.Boolean\n      value: false\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: UInt64.Parse(String)\n- uid: System.UInt64.Parse(System.String,System.Globalization.NumberStyles)\n  commentId: M:System.UInt64.Parse(System.String,System.Globalization.NumberStyles)\n  id: Parse(System.String,System.Globalization.NumberStyles)\n  parent: System.UInt64\n  langs:\n  - csharp\n  - vb\n  name: Parse(String, NumberStyles)\n  fullName: System.UInt64.Parse(System.String, System.Globalization.NumberStyles)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/UInt64.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Parse\n    path: src/mscorlib/src/System/UInt64.cs\n    startLine: 106\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Converts the string representation of a number in a specified style to its 64-bit unsigned integer equivalent.</p>\\n\"\n  syntax:\n    content: >-\n      [CLSCompliant(false)]\n\n      public static ulong Parse(string s, NumberStyles style)\n    content.vb: >-\n      <CLSCompliant(False)>\n\n      Public Shared Function Parse(s As String, style As NumberStyles) As ULong\n    parameters:\n    - id: s\n      type: System.String\n      description: \"\\n<p>A string that represents the number to convert. The string is interpreted by using the style specified by the <em>style</em> parameter. </p>\\n\"\n    - id: style\n      type: System.Globalization.NumberStyles\n      description: \"\\n<p>A bitwise combination of the enumeration values that specifies the permitted format of <em>s</em>. A typical value to specify is <xref href=\\\"System.Globalization.NumberStyles.Integer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    return:\n      type: System.UInt64\n      description: \"\\n<p>A 64-bit unsigned integer equivalent to the number specified in <em>s</em>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>s</em> parameter is <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>style</em> is not a <xref href=\\\"System.Globalization.NumberStyles\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value. </p>\\n<p>-or-</p>\\n<p>\\n<em>style</em> is not a combination of <xref href=\\\"System.Globalization.NumberStyles.AllowHexSpecifier\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and <xref href=\\\"System.Globalization.NumberStyles.HexNumber\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values.</p>\\n\"\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>The <em>s</em> parameter is not in a format compliant with <em>style</em>. </p>\\n\"\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: \"\\n<p>The <em>s</em> parameter represents a number less than <xref href=\\\"System.UInt64.MinValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or greater than <xref href=\\\"System.UInt64.MaxValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n<p>-or-</p>\\n<p>\\n<em>s</em> includes non-zero, fractional digits.</p>\\n\"\n  seealso:\n  - type: System.UInt64.ToString\n    commentId: M:System.UInt64.ToString\n  - type: System.UInt64.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt64@)\n    commentId: M:System.UInt64.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt64@)\n  attributes:\n  - type: System.CLSCompliantAttribute\n    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)\n    arguments:\n    - type: System.Boolean\n      value: false\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: UInt64.Parse(String, NumberStyles)\n- uid: System.UInt64.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)\n  commentId: M:System.UInt64.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)\n  id: Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)\n  parent: System.UInt64\n  langs:\n  - csharp\n  - vb\n  name: Parse(String, NumberStyles, IFormatProvider)\n  fullName: System.UInt64.Parse(System.String, System.Globalization.NumberStyles, System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/UInt64.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Parse\n    path: src/mscorlib/src/System/UInt64.cs\n    startLine: 117\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Converts the string representation of a number in a specified style and culture-specific format to its 64-bit unsigned integer equivalent.</p>\\n\"\n  syntax:\n    content: >-\n      [CLSCompliant(false)]\n\n      public static ulong Parse(string s, NumberStyles style, IFormatProvider provider)\n    content.vb: >-\n      <CLSCompliant(False)>\n\n      Public Shared Function Parse(s As String, style As NumberStyles, provider As IFormatProvider) As ULong\n    parameters:\n    - id: s\n      type: System.String\n      description: \"\\n<p>A string that represents the number to convert. The string is interpreted by using the style specified by the <em>style</em> parameter.</p>\\n\"\n    - id: style\n      type: System.Globalization.NumberStyles\n      description: \"\\n<p>A bitwise combination of enumeration values that indicates the style elements that can be present in <em>s</em>. A typical value to specify is <xref href=\\\"System.Globalization.NumberStyles.Integer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>An object that supplies culture-specific formatting information about <em>s</em>. </p>\\n\"\n    return:\n      type: System.UInt64\n      description: \"\\n<p>A 64-bit unsigned integer equivalent to the number specified in <em>s</em>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>s</em> parameter is <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>style</em> is not a <xref href=\\\"System.Globalization.NumberStyles\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value. </p>\\n<p>-or-</p>\\n<p>\\n<em>style</em> is not a combination of <xref href=\\\"System.Globalization.NumberStyles.AllowHexSpecifier\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and <xref href=\\\"System.Globalization.NumberStyles.HexNumber\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values.</p>\\n\"\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>The <em>s</em> parameter is not in a format compliant with <em>style</em>. </p>\\n\"\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: \"\\n<p>The <em>s</em> parameter represents a number less than <xref href=\\\"System.UInt64.MinValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or greater than <xref href=\\\"System.UInt64.MaxValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n<p>-or-</p>\\n<p>\\n<em>s</em> includes non-zero, fractional digits.</p>\\n\"\n  seealso:\n  - type: System.UInt64.ToString\n    commentId: M:System.UInt64.ToString\n  attributes:\n  - type: System.CLSCompliantAttribute\n    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)\n    arguments:\n    - type: System.Boolean\n      value: false\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: UInt64.Parse(String, NumberStyles, IFormatProvider)\n- uid: System.UInt64.Parse(System.String,System.IFormatProvider)\n  commentId: M:System.UInt64.Parse(System.String,System.IFormatProvider)\n  id: Parse(System.String,System.IFormatProvider)\n  parent: System.UInt64\n  langs:\n  - csharp\n  - vb\n  name: Parse(String, IFormatProvider)\n  fullName: System.UInt64.Parse(System.String, System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/UInt64.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Parse\n    path: src/mscorlib/src/System/UInt64.cs\n    startLine: 112\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Converts the string representation of a number in a specified culture-specific format to its 64-bit unsigned integer equivalent.</p>\\n\"\n  syntax:\n    content: >-\n      [CLSCompliant(false)]\n\n      public static ulong Parse(string s, IFormatProvider provider)\n    content.vb: >-\n      <CLSCompliant(False)>\n\n      Public Shared Function Parse(s As String, provider As IFormatProvider) As ULong\n    parameters:\n    - id: s\n      type: System.String\n      description: \"\\n<p>A string that represents the number to convert. </p>\\n\"\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>An object that supplies culture-specific formatting information about <em>s</em>. </p>\\n\"\n    return:\n      type: System.UInt64\n      description: \"\\n<p>A 64-bit unsigned integer equivalent to the number specified in <em>s</em>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>s</em> parameter is <strong>null</strong>. </p>\\n\"\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>The <em>s</em> parameter is not in the correct style. </p>\\n\"\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: \"\\n<p>The <em>s</em> parameter represents a number less than <xref href=\\\"System.UInt64.MinValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or greater than <xref href=\\\"System.UInt64.MaxValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  seealso:\n  - type: System.UInt64.ToString\n    commentId: M:System.UInt64.ToString\n  - type: System.UInt64.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt64@)\n    commentId: M:System.UInt64.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt64@)\n  attributes:\n  - type: System.CLSCompliantAttribute\n    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)\n    arguments:\n    - type: System.Boolean\n      value: false\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: UInt64.Parse(String, IFormatProvider)\n- uid: System.UInt64.System#IComparable#CompareTo(System.Object)\n  commentId: M:System.UInt64.System#IComparable#CompareTo(System.Object)\n  id: System#IComparable#CompareTo(System.Object)\n  isEii: true\n  parent: System.UInt64\n  langs:\n  - csharp\n  - vb\n  name: IComparable.CompareTo(Object)\n  fullName: System.UInt64.System.IComparable.CompareTo(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime/ref/System.Runtime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.IComparable.CompareTo\n    path: src/System.Runtime/ref/System.Runtime.cs\n    startLine: 2064\n  assemblies:\n  - System.Runtime\n  namespace: System\n  syntax:\n    content: int IComparable.CompareTo(object value)\n    content.vb: Function System.IComparable.CompareTo(value As Object) As Integer Implements IComparable.CompareTo\n    parameters:\n    - id: value\n      type: System.Object\n    return:\n      type: System.Int32\n  implements:\n  - System.IComparable.CompareTo(System.Object)\n  name.vb: System.IComparable.CompareTo(Object)\n  nameWithType: UInt64.IComparable.CompareTo(Object)\n  nameWithType.vb: UInt64.System.IComparable.CompareTo(Object)\n- uid: System.UInt64.System#IConvertible#GetTypeCode\n  commentId: M:System.UInt64.System#IConvertible#GetTypeCode\n  id: System#IConvertible#GetTypeCode\n  isEii: true\n  parent: System.UInt64\n  langs:\n  - csharp\n  - vb\n  name: IConvertible.GetTypeCode()\n  fullName: System.UInt64.System.IConvertible.GetTypeCode()\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime/ref/System.Runtime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.IConvertible.GetTypeCode\n    path: src/System.Runtime/ref/System.Runtime.cs\n    startLine: 2065\n  assemblies:\n  - System.Runtime\n  namespace: System\n  syntax:\n    content: TypeCode IConvertible.GetTypeCode()\n    content.vb: Function System.IConvertible.GetTypeCode As TypeCode Implements IConvertible.GetTypeCode\n    return:\n      type: System.TypeCode\n  implements:\n  - System.IConvertible.GetTypeCode\n  name.vb: System.IConvertible.GetTypeCode()\n  nameWithType: UInt64.IConvertible.GetTypeCode()\n  nameWithType.vb: UInt64.System.IConvertible.GetTypeCode()\n- uid: System.UInt64.System#IConvertible#ToBoolean(System.IFormatProvider)\n  commentId: M:System.UInt64.System#IConvertible#ToBoolean(System.IFormatProvider)\n  id: System#IConvertible#ToBoolean(System.IFormatProvider)\n  isEii: true\n  parent: System.UInt64\n  langs:\n  - csharp\n  - vb\n  name: IConvertible.ToBoolean(IFormatProvider)\n  fullName: System.UInt64.System.IConvertible.ToBoolean(System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/UInt64.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.IConvertible.ToBoolean\n    path: src/mscorlib/src/System/UInt64.cs\n    startLine: 143\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>For a description of this member, see <xref href=\\\"System.IConvertible.ToBoolean(System.IFormatProvider)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  syntax:\n    content: bool IConvertible.ToBoolean(IFormatProvider provider)\n    content.vb: Function System.IConvertible.ToBoolean(provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>This parameter is ignored.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the value of the current instance is not zero; otherwise, <strong>false</strong>.</p>\\n\"\n  implements:\n  - System.IConvertible.ToBoolean(System.IFormatProvider)\n  name.vb: System.IConvertible.ToBoolean(IFormatProvider)\n  nameWithType: UInt64.IConvertible.ToBoolean(IFormatProvider)\n  nameWithType.vb: UInt64.System.IConvertible.ToBoolean(IFormatProvider)\n- uid: System.UInt64.System#IConvertible#ToByte(System.IFormatProvider)\n  commentId: M:System.UInt64.System#IConvertible#ToByte(System.IFormatProvider)\n  id: System#IConvertible#ToByte(System.IFormatProvider)\n  isEii: true\n  parent: System.UInt64\n  langs:\n  - csharp\n  - vb\n  name: IConvertible.ToByte(IFormatProvider)\n  fullName: System.UInt64.System.IConvertible.ToByte(System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/UInt64.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.IConvertible.ToByte\n    path: src/mscorlib/src/System/UInt64.cs\n    startLine: 158\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>For a description of this member, see <xref href=\\\"System.IConvertible.ToByte(System.IFormatProvider)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  syntax:\n    content: byte IConvertible.ToByte(IFormatProvider provider)\n    content.vb: Function System.IConvertible.ToByte(provider As IFormatProvider) As Byte Implements IConvertible.ToByte\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>This parameter is ignored.</p>\\n\"\n    return:\n      type: System.Byte\n      description: \"\\n<p>The value of the current instance, converted to a <xref href=\\\"System.Byte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  implements:\n  - System.IConvertible.ToByte(System.IFormatProvider)\n  name.vb: System.IConvertible.ToByte(IFormatProvider)\n  nameWithType: UInt64.IConvertible.ToByte(IFormatProvider)\n  nameWithType.vb: UInt64.System.IConvertible.ToByte(IFormatProvider)\n- uid: System.UInt64.System#IConvertible#ToChar(System.IFormatProvider)\n  commentId: M:System.UInt64.System#IConvertible#ToChar(System.IFormatProvider)\n  id: System#IConvertible#ToChar(System.IFormatProvider)\n  isEii: true\n  parent: System.UInt64\n  langs:\n  - csharp\n  - vb\n  name: IConvertible.ToChar(IFormatProvider)\n  fullName: System.UInt64.System.IConvertible.ToChar(System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/UInt64.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.IConvertible.ToChar\n    path: src/mscorlib/src/System/UInt64.cs\n    startLine: 148\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>For a description of this member, see <xref href=\\\"System.IConvertible.ToChar(System.IFormatProvider)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  syntax:\n    content: char IConvertible.ToChar(IFormatProvider provider)\n    content.vb: Function System.IConvertible.ToChar(provider As IFormatProvider) As Char Implements IConvertible.ToChar\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>This parameter is ignored.</p>\\n\"\n    return:\n      type: System.Char\n      description: \"\\n<p>The value of the current instance, converted to a <xref href=\\\"System.Char\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  implements:\n  - System.IConvertible.ToChar(System.IFormatProvider)\n  name.vb: System.IConvertible.ToChar(IFormatProvider)\n  nameWithType: UInt64.IConvertible.ToChar(IFormatProvider)\n  nameWithType.vb: UInt64.System.IConvertible.ToChar(IFormatProvider)\n- uid: System.UInt64.System#IConvertible#ToDateTime(System.IFormatProvider)\n  commentId: M:System.UInt64.System#IConvertible#ToDateTime(System.IFormatProvider)\n  id: System#IConvertible#ToDateTime(System.IFormatProvider)\n  isEii: true\n  parent: System.UInt64\n  langs:\n  - csharp\n  - vb\n  name: IConvertible.ToDateTime(IFormatProvider)\n  fullName: System.UInt64.System.IConvertible.ToDateTime(System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/UInt64.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.IConvertible.ToDateTime\n    path: src/mscorlib/src/System/UInt64.cs\n    startLine: 208\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>This conversion is not supported. Attempting to use this method throws an <xref href=\\\"System.InvalidCastException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: DateTime IConvertible.ToDateTime(IFormatProvider provider)\n    content.vb: Function System.IConvertible.ToDateTime(provider As IFormatProvider) As Date Implements IConvertible.ToDateTime\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>This parameter is ignored.</p>\\n\"\n    return:\n      type: System.DateTime\n      description: \"\\n<p>This conversion is not supported. No value is returned.</p>\\n\"\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>In all cases.</p>\\n\"\n  implements:\n  - System.IConvertible.ToDateTime(System.IFormatProvider)\n  name.vb: System.IConvertible.ToDateTime(IFormatProvider)\n  nameWithType: UInt64.IConvertible.ToDateTime(IFormatProvider)\n  nameWithType.vb: UInt64.System.IConvertible.ToDateTime(IFormatProvider)\n- uid: System.UInt64.System#IConvertible#ToDecimal(System.IFormatProvider)\n  commentId: M:System.UInt64.System#IConvertible#ToDecimal(System.IFormatProvider)\n  id: System#IConvertible#ToDecimal(System.IFormatProvider)\n  isEii: true\n  parent: System.UInt64\n  langs:\n  - csharp\n  - vb\n  name: IConvertible.ToDecimal(IFormatProvider)\n  fullName: System.UInt64.System.IConvertible.ToDecimal(System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/UInt64.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.IConvertible.ToDecimal\n    path: src/mscorlib/src/System/UInt64.cs\n    startLine: 203\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>For a description of this member, see <xref href=\\\"System.IConvertible.ToDecimal(System.IFormatProvider)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  syntax:\n    content: decimal IConvertible.ToDecimal(IFormatProvider provider)\n    content.vb: Function System.IConvertible.ToDecimal(provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>This parameter is ignored.</p>\\n\"\n    return:\n      type: System.Decimal\n      description: \"\\n<p>The value of the current instance, converted to a <xref href=\\\"System.Decimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  implements:\n  - System.IConvertible.ToDecimal(System.IFormatProvider)\n  name.vb: System.IConvertible.ToDecimal(IFormatProvider)\n  nameWithType: UInt64.IConvertible.ToDecimal(IFormatProvider)\n  nameWithType.vb: UInt64.System.IConvertible.ToDecimal(IFormatProvider)\n- uid: System.UInt64.System#IConvertible#ToDouble(System.IFormatProvider)\n  commentId: M:System.UInt64.System#IConvertible#ToDouble(System.IFormatProvider)\n  id: System#IConvertible#ToDouble(System.IFormatProvider)\n  isEii: true\n  parent: System.UInt64\n  langs:\n  - csharp\n  - vb\n  name: IConvertible.ToDouble(IFormatProvider)\n  fullName: System.UInt64.System.IConvertible.ToDouble(System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/UInt64.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.IConvertible.ToDouble\n    path: src/mscorlib/src/System/UInt64.cs\n    startLine: 198\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>For a description of this member, see <xref href=\\\"System.IConvertible.ToDouble(System.IFormatProvider)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  syntax:\n    content: double IConvertible.ToDouble(IFormatProvider provider)\n    content.vb: Function System.IConvertible.ToDouble(provider As IFormatProvider) As Double Implements IConvertible.ToDouble\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>This parameter is ignored.</p>\\n\"\n    return:\n      type: System.Double\n      description: \"\\n<p>The value of the current instance, converted to a <xref href=\\\"System.Double\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  implements:\n  - System.IConvertible.ToDouble(System.IFormatProvider)\n  name.vb: System.IConvertible.ToDouble(IFormatProvider)\n  nameWithType: UInt64.IConvertible.ToDouble(IFormatProvider)\n  nameWithType.vb: UInt64.System.IConvertible.ToDouble(IFormatProvider)\n- uid: System.UInt64.System#IConvertible#ToInt16(System.IFormatProvider)\n  commentId: M:System.UInt64.System#IConvertible#ToInt16(System.IFormatProvider)\n  id: System#IConvertible#ToInt16(System.IFormatProvider)\n  isEii: true\n  parent: System.UInt64\n  langs:\n  - csharp\n  - vb\n  name: IConvertible.ToInt16(IFormatProvider)\n  fullName: System.UInt64.System.IConvertible.ToInt16(System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/UInt64.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.IConvertible.ToInt16\n    path: src/mscorlib/src/System/UInt64.cs\n    startLine: 163\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>For a description of this member, see <xref href=\\\"System.IConvertible.ToInt16(System.IFormatProvider)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  syntax:\n    content: short IConvertible.ToInt16(IFormatProvider provider)\n    content.vb: Function System.IConvertible.ToInt16(provider As IFormatProvider) As Short Implements IConvertible.ToInt16\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>This parameter is ignored.</p>\\n\"\n    return:\n      type: System.Int16\n      description: \"\\n<p>The value of the current instance, converted to an <xref href=\\\"System.Int16\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  implements:\n  - System.IConvertible.ToInt16(System.IFormatProvider)\n  name.vb: System.IConvertible.ToInt16(IFormatProvider)\n  nameWithType: UInt64.IConvertible.ToInt16(IFormatProvider)\n  nameWithType.vb: UInt64.System.IConvertible.ToInt16(IFormatProvider)\n- uid: System.UInt64.System#IConvertible#ToInt32(System.IFormatProvider)\n  commentId: M:System.UInt64.System#IConvertible#ToInt32(System.IFormatProvider)\n  id: System#IConvertible#ToInt32(System.IFormatProvider)\n  isEii: true\n  parent: System.UInt64\n  langs:\n  - csharp\n  - vb\n  name: IConvertible.ToInt32(IFormatProvider)\n  fullName: System.UInt64.System.IConvertible.ToInt32(System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/UInt64.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.IConvertible.ToInt32\n    path: src/mscorlib/src/System/UInt64.cs\n    startLine: 173\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>For a description of this member, see <xref href=\\\"System.IConvertible.ToInt32(System.IFormatProvider)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  syntax:\n    content: int IConvertible.ToInt32(IFormatProvider provider)\n    content.vb: Function System.IConvertible.ToInt32(provider As IFormatProvider) As Integer Implements IConvertible.ToInt32\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>This parameter is ignored.</p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>The value of the current instance, converted to an <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  implements:\n  - System.IConvertible.ToInt32(System.IFormatProvider)\n  name.vb: System.IConvertible.ToInt32(IFormatProvider)\n  nameWithType: UInt64.IConvertible.ToInt32(IFormatProvider)\n  nameWithType.vb: UInt64.System.IConvertible.ToInt32(IFormatProvider)\n- uid: System.UInt64.System#IConvertible#ToInt64(System.IFormatProvider)\n  commentId: M:System.UInt64.System#IConvertible#ToInt64(System.IFormatProvider)\n  id: System#IConvertible#ToInt64(System.IFormatProvider)\n  isEii: true\n  parent: System.UInt64\n  langs:\n  - csharp\n  - vb\n  name: IConvertible.ToInt64(IFormatProvider)\n  fullName: System.UInt64.System.IConvertible.ToInt64(System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/UInt64.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.IConvertible.ToInt64\n    path: src/mscorlib/src/System/UInt64.cs\n    startLine: 183\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>For a description of this member, see <xref href=\\\"System.IConvertible.ToInt64(System.IFormatProvider)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  syntax:\n    content: long IConvertible.ToInt64(IFormatProvider provider)\n    content.vb: Function System.IConvertible.ToInt64(provider As IFormatProvider) As Long Implements IConvertible.ToInt64\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>This parameter is ignored.</p>\\n\"\n    return:\n      type: System.Int64\n      description: \"\\n<p>The value of the current instance, converted to an <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  implements:\n  - System.IConvertible.ToInt64(System.IFormatProvider)\n  name.vb: System.IConvertible.ToInt64(IFormatProvider)\n  nameWithType: UInt64.IConvertible.ToInt64(IFormatProvider)\n  nameWithType.vb: UInt64.System.IConvertible.ToInt64(IFormatProvider)\n- uid: System.UInt64.System#IConvertible#ToSByte(System.IFormatProvider)\n  commentId: M:System.UInt64.System#IConvertible#ToSByte(System.IFormatProvider)\n  id: System#IConvertible#ToSByte(System.IFormatProvider)\n  isEii: true\n  parent: System.UInt64\n  langs:\n  - csharp\n  - vb\n  name: IConvertible.ToSByte(IFormatProvider)\n  fullName: System.UInt64.System.IConvertible.ToSByte(System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/UInt64.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.IConvertible.ToSByte\n    path: src/mscorlib/src/System/UInt64.cs\n    startLine: 153\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>For a description of this member, see <xref href=\\\"System.IConvertible.ToSByte(System.IFormatProvider)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  syntax:\n    content: sbyte IConvertible.ToSByte(IFormatProvider provider)\n    content.vb: Function System.IConvertible.ToSByte(provider As IFormatProvider) As SByte Implements IConvertible.ToSByte\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>This parameter is ignored.</p>\\n\"\n    return:\n      type: System.SByte\n      description: \"\\n<p>The value of the current instance, converted to an <xref href=\\\"System.SByte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  implements:\n  - System.IConvertible.ToSByte(System.IFormatProvider)\n  name.vb: System.IConvertible.ToSByte(IFormatProvider)\n  nameWithType: UInt64.IConvertible.ToSByte(IFormatProvider)\n  nameWithType.vb: UInt64.System.IConvertible.ToSByte(IFormatProvider)\n- uid: System.UInt64.System#IConvertible#ToSingle(System.IFormatProvider)\n  commentId: M:System.UInt64.System#IConvertible#ToSingle(System.IFormatProvider)\n  id: System#IConvertible#ToSingle(System.IFormatProvider)\n  isEii: true\n  parent: System.UInt64\n  langs:\n  - csharp\n  - vb\n  name: IConvertible.ToSingle(IFormatProvider)\n  fullName: System.UInt64.System.IConvertible.ToSingle(System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/UInt64.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.IConvertible.ToSingle\n    path: src/mscorlib/src/System/UInt64.cs\n    startLine: 193\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>For a description of this member, see <xref href=\\\"System.IConvertible.ToSingle(System.IFormatProvider)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  syntax:\n    content: float IConvertible.ToSingle(IFormatProvider provider)\n    content.vb: Function System.IConvertible.ToSingle(provider As IFormatProvider) As Single Implements IConvertible.ToSingle\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>This parameter is ignored.</p>\\n\"\n    return:\n      type: System.Single\n      description: \"\\n<p>The value of the current instance, converted to a <xref href=\\\"System.Single\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  implements:\n  - System.IConvertible.ToSingle(System.IFormatProvider)\n  name.vb: System.IConvertible.ToSingle(IFormatProvider)\n  nameWithType: UInt64.IConvertible.ToSingle(IFormatProvider)\n  nameWithType.vb: UInt64.System.IConvertible.ToSingle(IFormatProvider)\n- uid: System.UInt64.System#IConvertible#ToType(System.Type,System.IFormatProvider)\n  commentId: M:System.UInt64.System#IConvertible#ToType(System.Type,System.IFormatProvider)\n  id: System#IConvertible#ToType(System.Type,System.IFormatProvider)\n  isEii: true\n  parent: System.UInt64\n  langs:\n  - csharp\n  - vb\n  name: IConvertible.ToType(Type, IFormatProvider)\n  fullName: System.UInt64.System.IConvertible.ToType(System.Type, System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/UInt64.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.IConvertible.ToType\n    path: src/mscorlib/src/System/UInt64.cs\n    startLine: 213\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>For a description of this member, see <xref href=\\\"System.IConvertible.ToType(System.Type,System.IFormatProvider)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  syntax:\n    content: object IConvertible.ToType(Type type, IFormatProvider provider)\n    content.vb: Function System.IConvertible.ToType(type As Type, provider As IFormatProvider) As Object Implements IConvertible.ToType\n    parameters:\n    - id: type\n      type: System.Type\n      description: \"\\n<p>The type to which to convert this <xref href=\\\"System.UInt64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>An <xref href=\\\"System.IFormatProvider\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> implementation that supplies information about the format of the returned value.</p>\\n\"\n    return:\n      type: System.Object\n      description: \"\\n<p>The value of the current instance, converted to <em>type</em>.</p>\\n\"\n  implements:\n  - System.IConvertible.ToType(System.Type,System.IFormatProvider)\n  name.vb: System.IConvertible.ToType(Type, IFormatProvider)\n  nameWithType: UInt64.IConvertible.ToType(Type, IFormatProvider)\n  nameWithType.vb: UInt64.System.IConvertible.ToType(Type, IFormatProvider)\n- uid: System.UInt64.System#IConvertible#ToUInt16(System.IFormatProvider)\n  commentId: M:System.UInt64.System#IConvertible#ToUInt16(System.IFormatProvider)\n  id: System#IConvertible#ToUInt16(System.IFormatProvider)\n  isEii: true\n  parent: System.UInt64\n  langs:\n  - csharp\n  - vb\n  name: IConvertible.ToUInt16(IFormatProvider)\n  fullName: System.UInt64.System.IConvertible.ToUInt16(System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/UInt64.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.IConvertible.ToUInt16\n    path: src/mscorlib/src/System/UInt64.cs\n    startLine: 168\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>For a description of this member, see <xref href=\\\"System.IConvertible.ToUInt16(System.IFormatProvider)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  syntax:\n    content: ushort IConvertible.ToUInt16(IFormatProvider provider)\n    content.vb: Function System.IConvertible.ToUInt16(provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>This parameter is ignored.</p>\\n\"\n    return:\n      type: System.UInt16\n      description: \"\\n<p>The value of the current instance, converted to a <xref href=\\\"System.UInt16\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  implements:\n  - System.IConvertible.ToUInt16(System.IFormatProvider)\n  name.vb: System.IConvertible.ToUInt16(IFormatProvider)\n  nameWithType: UInt64.IConvertible.ToUInt16(IFormatProvider)\n  nameWithType.vb: UInt64.System.IConvertible.ToUInt16(IFormatProvider)\n- uid: System.UInt64.System#IConvertible#ToUInt32(System.IFormatProvider)\n  commentId: M:System.UInt64.System#IConvertible#ToUInt32(System.IFormatProvider)\n  id: System#IConvertible#ToUInt32(System.IFormatProvider)\n  isEii: true\n  parent: System.UInt64\n  langs:\n  - csharp\n  - vb\n  name: IConvertible.ToUInt32(IFormatProvider)\n  fullName: System.UInt64.System.IConvertible.ToUInt32(System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/UInt64.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.IConvertible.ToUInt32\n    path: src/mscorlib/src/System/UInt64.cs\n    startLine: 178\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>For a description of this member, see <xref href=\\\"System.IConvertible.ToUInt32(System.IFormatProvider)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  syntax:\n    content: uint IConvertible.ToUInt32(IFormatProvider provider)\n    content.vb: Function System.IConvertible.ToUInt32(provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>This parameter is ignored.</p>\\n\"\n    return:\n      type: System.UInt32\n      description: \"\\n<p>The value of the current instance, converted to a <xref href=\\\"System.UInt32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  implements:\n  - System.IConvertible.ToUInt32(System.IFormatProvider)\n  name.vb: System.IConvertible.ToUInt32(IFormatProvider)\n  nameWithType: UInt64.IConvertible.ToUInt32(IFormatProvider)\n  nameWithType.vb: UInt64.System.IConvertible.ToUInt32(IFormatProvider)\n- uid: System.UInt64.System#IConvertible#ToUInt64(System.IFormatProvider)\n  commentId: M:System.UInt64.System#IConvertible#ToUInt64(System.IFormatProvider)\n  id: System#IConvertible#ToUInt64(System.IFormatProvider)\n  isEii: true\n  parent: System.UInt64\n  langs:\n  - csharp\n  - vb\n  name: IConvertible.ToUInt64(IFormatProvider)\n  fullName: System.UInt64.System.IConvertible.ToUInt64(System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/UInt64.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.IConvertible.ToUInt64\n    path: src/mscorlib/src/System/UInt64.cs\n    startLine: 188\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>For a description of this member, see <xref href=\\\"System.IConvertible.ToUInt64(System.IFormatProvider)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  syntax:\n    content: ulong IConvertible.ToUInt64(IFormatProvider provider)\n    content.vb: Function System.IConvertible.ToUInt64(provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>This parameter is ignored.</p>\\n\"\n    return:\n      type: System.UInt64\n      description: \"\\n<p>The value of the current instance, unchanged.</p>\\n\"\n  implements:\n  - System.IConvertible.ToUInt64(System.IFormatProvider)\n  name.vb: System.IConvertible.ToUInt64(IFormatProvider)\n  nameWithType: UInt64.IConvertible.ToUInt64(IFormatProvider)\n  nameWithType.vb: UInt64.System.IConvertible.ToUInt64(IFormatProvider)\n- uid: System.UInt64.ToString\n  commentId: M:System.UInt64.ToString\n  id: ToString\n  parent: System.UInt64\n  langs:\n  - csharp\n  - vb\n  name: ToString()\n  fullName: System.UInt64.ToString()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/UInt64.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ToString\n    path: src/mscorlib/src/System/UInt64.cs\n    startLine: 77\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Converts the numeric value of this instance to its equivalent string representation.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public override string ToString()\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Overrides Function ToString As String\n    return:\n      type: System.String\n      description: \"\\n<p>The string representation of the value of this instance, consisting of a sequence of digits ranging from 0 to 9, without a sign or leading zeroes.</p>\\n\"\n  overridden: System.ValueType.ToString\n  seealso:\n  - type: System.UInt64.Parse(System.String)\n    commentId: M:System.UInt64.Parse(System.String)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: UInt64.ToString()\n- uid: System.UInt64.ToString(System.IFormatProvider)\n  commentId: M:System.UInt64.ToString(System.IFormatProvider)\n  id: ToString(System.IFormatProvider)\n  parent: System.UInt64\n  langs:\n  - csharp\n  - vb\n  name: ToString(IFormatProvider)\n  fullName: System.UInt64.ToString(System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/UInt64.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ToString\n    path: src/mscorlib/src/System/UInt64.cs\n    startLine: 83\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public string ToString(IFormatProvider provider)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Function ToString(provider As IFormatProvider) As String\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>An object that supplies culture-specific formatting information. </p>\\n\"\n    return:\n      type: System.String\n      description: \"\\n<p>The string representation of the value of this instance, consisting of a sequence of digits ranging from 0 to 9, without a sign or leading zeros.  </p>\\n\"\n  seealso:\n  - type: System.UInt64.Parse(System.String)\n    commentId: M:System.UInt64.Parse(System.String)\n  implements:\n  - System.IConvertible.ToString(System.IFormatProvider)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: UInt64.ToString(IFormatProvider)\n- uid: System.UInt64.ToString(System.String)\n  commentId: M:System.UInt64.ToString(System.String)\n  id: ToString(System.String)\n  parent: System.UInt64\n  langs:\n  - csharp\n  - vb\n  name: ToString(String)\n  fullName: System.UInt64.ToString(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/UInt64.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ToString\n    path: src/mscorlib/src/System/UInt64.cs\n    startLine: 89\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Converts the numeric value of this instance to its equivalent string representation using the specified format.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public string ToString(string format)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Function ToString(format As String) As String\n    parameters:\n    - id: format\n      type: System.String\n      description: \"\\n<p>A numeric format string.</p>\\n\"\n    return:\n      type: System.String\n      description: \"\\n<p>The string representation of the value of this instance as specified by <em>format</em>.</p>\\n\"\n  exceptions:\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>The <em>format</em> parameter is invalid. </p>\\n\"\n  seealso:\n  - type: System.UInt64.Parse(System.String)\n    commentId: M:System.UInt64.Parse(System.String)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: UInt64.ToString(String)\n- uid: System.UInt64.ToString(System.String,System.IFormatProvider)\n  commentId: M:System.UInt64.ToString(System.String,System.IFormatProvider)\n  id: ToString(System.String,System.IFormatProvider)\n  parent: System.UInt64\n  langs:\n  - csharp\n  - vb\n  name: ToString(String, IFormatProvider)\n  fullName: System.UInt64.ToString(System.String, System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/UInt64.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ToString\n    path: src/mscorlib/src/System/UInt64.cs\n    startLine: 95\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific format information.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public string ToString(string format, IFormatProvider provider)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Function ToString(format As String, provider As IFormatProvider) As String\n    parameters:\n    - id: format\n      type: System.String\n      description: \"\\n<p>A numeric format string.</p>\\n\"\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>An object that supplies culture-specific formatting information about this instance. </p>\\n\"\n    return:\n      type: System.String\n      description: \"\\n<p>The string representation of the value of this instance as specified by <em>format</em> and <em>provider</em>.</p>\\n\"\n  exceptions:\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>The <em>format</em> parameter is invalid. </p>\\n\"\n  seealso:\n  - type: System.UInt64.Parse(System.String)\n    commentId: M:System.UInt64.Parse(System.String)\n  implements:\n  - System.IFormattable.ToString(System.String,System.IFormatProvider)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: UInt64.ToString(String, IFormatProvider)\n- uid: System.UInt64.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt64@)\n  commentId: M:System.UInt64.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt64@)\n  id: TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt64@)\n  parent: System.UInt64\n  langs:\n  - csharp\n  - vb\n  name: TryParse(String, NumberStyles, IFormatProvider, out UInt64)\n  fullName: System.UInt64.TryParse(System.String, System.Globalization.NumberStyles, System.IFormatProvider, out System.UInt64)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/UInt64.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: TryParse\n    path: src/mscorlib/src/System/UInt64.cs\n    startLine: 128\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Tries to convert the string representation of a number in a specified style and culture-specific format to its 64-bit unsigned integer equivalent. A return value indicates whether the conversion succeeded or failed.</p>\\n\"\n  syntax:\n    content: >-\n      [CLSCompliant(false)]\n\n      public static bool TryParse(string s, NumberStyles style, IFormatProvider provider, out ulong result)\n    content.vb: >-\n      <CLSCompliant(False)>\n\n      Public Shared Function TryParse(s As String, style As NumberStyles, provider As IFormatProvider, ByRef result As ULong) As Boolean\n    parameters:\n    - id: s\n      type: System.String\n      description: \"\\n<p>A string that represents the number to convert. The string is interpreted by using the style specified by the <em>style</em> parameter.</p>\\n\"\n    - id: style\n      type: System.Globalization.NumberStyles\n      description: \"\\n<p>A bitwise combination of enumeration values that indicates the permitted format of <em>s</em>. A typical value to specify is <xref href=\\\"System.Globalization.NumberStyles.Integer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>An object that supplies culture-specific formatting information about <em>s</em>. </p>\\n\"\n    - id: result\n      type: System.UInt64\n      description: \"\\n<p>When this method returns, contains the 64-bit unsigned integer value equivalent to the number contained in <em>s</em>, if the conversion succeeded, or zero if the conversion failed. The conversion fails if the <em>s</em> parameter is <strong>null</strong>  or <xref href=\\\"System.String.Empty\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, is not in a format compliant with <em>style</em>, or represents a number less than <xref href=\\\"System.UInt64.MinValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or greater than <xref href=\\\"System.UInt64.MaxValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. This parameter is passed uninitialized; any value originally supplied in <em>result</em> will be overwritten.  </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if <em>s</em> was converted successfully; otherwise, <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>style</em> is not a <xref href=\\\"System.Globalization.NumberStyles\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value. </p>\\n<p>-or-</p>\\n<p>\\n<em>style</em> is not a combination of <xref href=\\\"System.Globalization.NumberStyles.AllowHexSpecifier\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and <xref href=\\\"System.Globalization.NumberStyles.HexNumber\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values.</p>\\n\"\n  seealso:\n  - type: System.UInt64.Parse(System.String)\n    commentId: M:System.UInt64.Parse(System.String)\n  - type: System.UInt64.Parse(System.String)\n    commentId: M:System.UInt64.Parse(System.String)\n  - type: System.UInt64.ToString\n    commentId: M:System.UInt64.ToString\n  attributes:\n  - type: System.CLSCompliantAttribute\n    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)\n    arguments:\n    - type: System.Boolean\n      value: false\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.UInt64.TryParse(System.String, System.Globalization.NumberStyles, System.IFormatProvider, ByRef System.UInt64)\n  name.vb: TryParse(String, NumberStyles, IFormatProvider, ByRef UInt64)\n  nameWithType: UInt64.TryParse(String, NumberStyles, IFormatProvider, out UInt64)\n  nameWithType.vb: UInt64.TryParse(String, NumberStyles, IFormatProvider, ByRef UInt64)\n- uid: System.UInt64.TryParse(System.String,System.UInt64@)\n  commentId: M:System.UInt64.TryParse(System.String,System.UInt64@)\n  id: TryParse(System.String,System.UInt64@)\n  parent: System.UInt64\n  langs:\n  - csharp\n  - vb\n  name: TryParse(String, out UInt64)\n  fullName: System.UInt64.TryParse(System.String, out System.UInt64)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/UInt64.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: TryParse\n    path: src/mscorlib/src/System/UInt64.cs\n    startLine: 123\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Tries to convert the string representation of a number to its 64-bit unsigned integer equivalent. A return value indicates whether the conversion succeeded or failed.</p>\\n\"\n  syntax:\n    content: >-\n      [CLSCompliant(false)]\n\n      public static bool TryParse(string s, out ulong result)\n    content.vb: >-\n      <CLSCompliant(False)>\n\n      Public Shared Function TryParse(s As String, ByRef result As ULong) As Boolean\n    parameters:\n    - id: s\n      type: System.String\n      description: \"\\n<p>A string that represents the number to convert. </p>\\n\"\n    - id: result\n      type: System.UInt64\n      description: \"\\n<p>When this method returns, contains the 64-bit unsigned integer value that is equivalent to the number contained in <em>s</em>, if the conversion succeeded, or zero if the conversion failed. The conversion fails if the <em>s</em> parameter is <strong>null</strong>  or <xref href=\\\"System.String.Empty\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, is not of the correct format, or represents a number less than <xref href=\\\"System.UInt64.MinValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or greater than <xref href=\\\"System.UInt64.MaxValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. This parameter is passed uninitialized; any value originally supplied in <em>result</em> will be overwritten.  </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if <em>s</em> was converted successfully; otherwise, <strong>false</strong>.</p>\\n\"\n  seealso:\n  - type: System.UInt64.Parse(System.String)\n    commentId: M:System.UInt64.Parse(System.String)\n  - type: System.UInt64.ToString\n    commentId: M:System.UInt64.ToString\n  attributes:\n  - type: System.CLSCompliantAttribute\n    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)\n    arguments:\n    - type: System.Boolean\n      value: false\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.UInt64.TryParse(System.String, ByRef System.UInt64)\n  name.vb: TryParse(String, ByRef UInt64)\n  nameWithType: UInt64.TryParse(String, out UInt64)\n  nameWithType.vb: UInt64.TryParse(String, ByRef UInt64)\nreferences:\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.IComparable\n  parent: System\n  isExternal: false\n  name: IComparable\n  fullName: System.IComparable\n  nameWithType: IComparable\n  commentId: T:System.IComparable\n- uid: System.IComparable{System.UInt64}\n  parent: System\n  definition: System.IComparable`1\n  name: IComparable<UInt64>\n  fullName: System.IComparable<System.UInt64>\n  fullname.vb: System.IComparable(Of System.UInt64)\n  name.vb: IComparable(Of UInt64)\n  spec.csharp:\n  - uid: System.IComparable`1\n    name: IComparable\n    fullName: System.IComparable\n  - name: <\n    fullName: <\n  - uid: System.UInt64\n    name: UInt64\n    fullName: System.UInt64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.IComparable`1\n    name: IComparable\n    fullName: System.IComparable\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.UInt64\n    name: UInt64\n    fullName: System.UInt64\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: IComparable<UInt64>\n  nameWithType.vb: IComparable(Of UInt64)\n  commentId: T:System.IComparable{System.UInt64}\n- uid: System.IConvertible\n  parent: System\n  isExternal: false\n  name: IConvertible\n  fullName: System.IConvertible\n  nameWithType: IConvertible\n  commentId: T:System.IConvertible\n- uid: System.IEquatable{System.UInt64}\n  parent: System\n  definition: System.IEquatable`1\n  name: IEquatable<UInt64>\n  fullName: System.IEquatable<System.UInt64>\n  fullname.vb: System.IEquatable(Of System.UInt64)\n  name.vb: IEquatable(Of UInt64)\n  spec.csharp:\n  - uid: System.IEquatable`1\n    name: IEquatable\n    fullName: System.IEquatable\n  - name: <\n    fullName: <\n  - uid: System.UInt64\n    name: UInt64\n    fullName: System.UInt64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.IEquatable`1\n    name: IEquatable\n    fullName: System.IEquatable\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.UInt64\n    name: UInt64\n    fullName: System.UInt64\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: IEquatable<UInt64>\n  nameWithType.vb: IEquatable(Of UInt64)\n  commentId: T:System.IEquatable{System.UInt64}\n- uid: System.IFormattable\n  parent: System\n  isExternal: false\n  name: IFormattable\n  fullName: System.IFormattable\n  nameWithType: IFormattable\n  commentId: T:System.IFormattable\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.IComparable`1\n  isExternal: false\n  name: IComparable<T>\n  fullName: System.IComparable<T>\n  fullname.vb: System.IComparable(Of T)\n  name.vb: IComparable(Of T)\n  spec.csharp:\n  - uid: System.IComparable`1\n    name: IComparable\n    fullName: System.IComparable\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.IComparable`1\n    name: IComparable\n    fullName: System.IComparable\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: IComparable<T>\n  nameWithType.vb: IComparable(Of T)\n  commentId: T:System.IComparable`1\n- uid: System.IEquatable`1\n  isExternal: false\n  name: IEquatable<T>\n  fullName: System.IEquatable<T>\n  fullname.vb: System.IEquatable(Of T)\n  name.vb: IEquatable(Of T)\n  spec.csharp:\n  - uid: System.IEquatable`1\n    name: IEquatable\n    fullName: System.IEquatable\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.IEquatable`1\n    name: IEquatable\n    fullName: System.IEquatable\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: IEquatable<T>\n  nameWithType.vb: IEquatable(Of T)\n  commentId: T:System.IEquatable`1\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.UInt64\n  parent: System\n  isExternal: false\n  name: UInt64\n  fullName: System.UInt64\n  nameWithType: UInt64\n  commentId: T:System.UInt64\n- uid: System.IComparable{System.UInt64}.CompareTo(System.UInt64)\n  parent: System.IComparable{System.UInt64}\n  definition: System.IComparable`1.CompareTo(`0)\n  name: CompareTo(UInt64)\n  fullName: System.IComparable<System.UInt64>.CompareTo(System.UInt64)\n  fullname.vb: System.IComparable(Of System.UInt64).CompareTo(System.UInt64)\n  spec.csharp:\n  - uid: System.IComparable`1.CompareTo(`0)\n    name: CompareTo\n    fullName: System.IComparable<System.UInt64>.CompareTo\n  - name: (\n    fullName: (\n  - uid: System.UInt64\n    name: UInt64\n    fullName: System.UInt64\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IComparable`1.CompareTo(`0)\n    name: CompareTo\n    fullName: System.IComparable(Of System.UInt64).CompareTo\n  - name: (\n    fullName: (\n  - uid: System.UInt64\n    name: UInt64\n    fullName: System.UInt64\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: IComparable<UInt64>.CompareTo(UInt64)\n  nameWithType.vb: IComparable(Of UInt64).CompareTo(UInt64)\n  commentId: M:System.IComparable{System.UInt64}.CompareTo(System.UInt64)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.IComparable`1.CompareTo(`0)\n  isExternal: false\n  name: CompareTo(T)\n  fullName: System.IComparable<T>.CompareTo(T)\n  fullname.vb: System.IComparable(Of T).CompareTo(T)\n  spec.csharp:\n  - uid: System.IComparable`1.CompareTo(`0)\n    name: CompareTo\n    fullName: System.IComparable<T>.CompareTo\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IComparable`1.CompareTo(`0)\n    name: CompareTo\n    fullName: System.IComparable(Of T).CompareTo\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: IComparable<T>.CompareTo(T)\n  nameWithType.vb: IComparable(Of T).CompareTo(T)\n  commentId: M:System.IComparable`1.CompareTo(`0)\n- uid: System.ValueType.Equals(System.Object)\n  parent: System.ValueType\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.ValueType.Equals(System.Object)\n  spec.csharp:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: ValueType.Equals(Object)\n  commentId: M:System.ValueType.Equals(System.Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  fullName: System.ValueType\n  nameWithType: ValueType\n  commentId: T:System.ValueType\n- uid: System.IEquatable{System.UInt64}.Equals(System.UInt64)\n  parent: System.IEquatable{System.UInt64}\n  definition: System.IEquatable`1.Equals(`0)\n  name: Equals(UInt64)\n  fullName: System.IEquatable<System.UInt64>.Equals(System.UInt64)\n  fullname.vb: System.IEquatable(Of System.UInt64).Equals(System.UInt64)\n  spec.csharp:\n  - uid: System.IEquatable`1.Equals(`0)\n    name: Equals\n    fullName: System.IEquatable<System.UInt64>.Equals\n  - name: (\n    fullName: (\n  - uid: System.UInt64\n    name: UInt64\n    fullName: System.UInt64\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IEquatable`1.Equals(`0)\n    name: Equals\n    fullName: System.IEquatable(Of System.UInt64).Equals\n  - name: (\n    fullName: (\n  - uid: System.UInt64\n    name: UInt64\n    fullName: System.UInt64\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: IEquatable<UInt64>.Equals(UInt64)\n  nameWithType.vb: IEquatable(Of UInt64).Equals(UInt64)\n  commentId: M:System.IEquatable{System.UInt64}.Equals(System.UInt64)\n- uid: System.IEquatable`1.Equals(`0)\n  isExternal: false\n  name: Equals(T)\n  fullName: System.IEquatable<T>.Equals(T)\n  fullname.vb: System.IEquatable(Of T).Equals(T)\n  spec.csharp:\n  - uid: System.IEquatable`1.Equals(`0)\n    name: Equals\n    fullName: System.IEquatable<T>.Equals\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IEquatable`1.Equals(`0)\n    name: Equals\n    fullName: System.IEquatable(Of T).Equals\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: IEquatable<T>.Equals(T)\n  nameWithType.vb: IEquatable(Of T).Equals(T)\n  commentId: M:System.IEquatable`1.Equals(`0)\n- uid: System.ValueType.GetHashCode\n  parent: System.ValueType\n  isExternal: false\n  name: GetHashCode()\n  fullName: System.ValueType.GetHashCode()\n  spec.csharp:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ValueType.GetHashCode()\n  commentId: M:System.ValueType.GetHashCode\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.Globalization.NumberStyles\n  parent: System.Globalization\n  isExternal: false\n  name: NumberStyles\n  fullName: System.Globalization.NumberStyles\n  nameWithType: NumberStyles\n  commentId: T:System.Globalization.NumberStyles\n- uid: System.Globalization\n  isExternal: false\n  name: System.Globalization\n  fullName: System.Globalization\n  nameWithType: System.Globalization\n  commentId: N:System.Globalization\n- uid: System.IFormatProvider\n  parent: System\n  isExternal: false\n  name: IFormatProvider\n  fullName: System.IFormatProvider\n  nameWithType: IFormatProvider\n  commentId: T:System.IFormatProvider\n- uid: System.IComparable.CompareTo(System.Object)\n  parent: System.IComparable\n  isExternal: true\n  name: CompareTo(Object)\n  fullName: System.IComparable.CompareTo(System.Object)\n  spec.csharp:\n  - uid: System.IComparable.CompareTo(System.Object)\n    name: CompareTo\n    fullName: System.IComparable.CompareTo\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IComparable.CompareTo(System.Object)\n    name: CompareTo\n    fullName: System.IComparable.CompareTo\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: IComparable.CompareTo(Object)\n  commentId: M:System.IComparable.CompareTo(System.Object)\n- uid: System.IConvertible.GetTypeCode\n  parent: System.IConvertible\n  isExternal: false\n  name: GetTypeCode()\n  fullName: System.IConvertible.GetTypeCode()\n  spec.csharp:\n  - uid: System.IConvertible.GetTypeCode\n    name: GetTypeCode\n    fullName: System.IConvertible.GetTypeCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IConvertible.GetTypeCode\n    name: GetTypeCode\n    fullName: System.IConvertible.GetTypeCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: IConvertible.GetTypeCode()\n  commentId: M:System.IConvertible.GetTypeCode\n- uid: System.TypeCode\n  parent: System\n  isExternal: false\n  name: TypeCode\n  fullName: System.TypeCode\n  nameWithType: TypeCode\n  commentId: T:System.TypeCode\n- uid: System.IConvertible.ToBoolean(System.IFormatProvider)\n  parent: System.IConvertible\n  isExternal: false\n  name: ToBoolean(IFormatProvider)\n  fullName: System.IConvertible.ToBoolean(System.IFormatProvider)\n  spec.csharp:\n  - uid: System.IConvertible.ToBoolean(System.IFormatProvider)\n    name: ToBoolean\n    fullName: System.IConvertible.ToBoolean\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IConvertible.ToBoolean(System.IFormatProvider)\n    name: ToBoolean\n    fullName: System.IConvertible.ToBoolean\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  nameWithType: IConvertible.ToBoolean(IFormatProvider)\n  commentId: M:System.IConvertible.ToBoolean(System.IFormatProvider)\n- uid: System.IConvertible.ToByte(System.IFormatProvider)\n  parent: System.IConvertible\n  isExternal: false\n  name: ToByte(IFormatProvider)\n  fullName: System.IConvertible.ToByte(System.IFormatProvider)\n  spec.csharp:\n  - uid: System.IConvertible.ToByte(System.IFormatProvider)\n    name: ToByte\n    fullName: System.IConvertible.ToByte\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IConvertible.ToByte(System.IFormatProvider)\n    name: ToByte\n    fullName: System.IConvertible.ToByte\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  nameWithType: IConvertible.ToByte(IFormatProvider)\n  commentId: M:System.IConvertible.ToByte(System.IFormatProvider)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  fullName: System.Byte\n  nameWithType: Byte\n  commentId: T:System.Byte\n- uid: System.IConvertible.ToChar(System.IFormatProvider)\n  parent: System.IConvertible\n  isExternal: false\n  name: ToChar(IFormatProvider)\n  fullName: System.IConvertible.ToChar(System.IFormatProvider)\n  spec.csharp:\n  - uid: System.IConvertible.ToChar(System.IFormatProvider)\n    name: ToChar\n    fullName: System.IConvertible.ToChar\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IConvertible.ToChar(System.IFormatProvider)\n    name: ToChar\n    fullName: System.IConvertible.ToChar\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  nameWithType: IConvertible.ToChar(IFormatProvider)\n  commentId: M:System.IConvertible.ToChar(System.IFormatProvider)\n- uid: System.Char\n  parent: System\n  isExternal: false\n  name: Char\n  fullName: System.Char\n  nameWithType: Char\n  commentId: T:System.Char\n- uid: System.IConvertible.ToDateTime(System.IFormatProvider)\n  parent: System.IConvertible\n  isExternal: false\n  name: ToDateTime(IFormatProvider)\n  fullName: System.IConvertible.ToDateTime(System.IFormatProvider)\n  spec.csharp:\n  - uid: System.IConvertible.ToDateTime(System.IFormatProvider)\n    name: ToDateTime\n    fullName: System.IConvertible.ToDateTime\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IConvertible.ToDateTime(System.IFormatProvider)\n    name: ToDateTime\n    fullName: System.IConvertible.ToDateTime\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  nameWithType: IConvertible.ToDateTime(IFormatProvider)\n  commentId: M:System.IConvertible.ToDateTime(System.IFormatProvider)\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  fullName: System.DateTime\n  nameWithType: DateTime\n  commentId: T:System.DateTime\n- uid: System.IConvertible.ToDecimal(System.IFormatProvider)\n  parent: System.IConvertible\n  isExternal: false\n  name: ToDecimal(IFormatProvider)\n  fullName: System.IConvertible.ToDecimal(System.IFormatProvider)\n  spec.csharp:\n  - uid: System.IConvertible.ToDecimal(System.IFormatProvider)\n    name: ToDecimal\n    fullName: System.IConvertible.ToDecimal\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IConvertible.ToDecimal(System.IFormatProvider)\n    name: ToDecimal\n    fullName: System.IConvertible.ToDecimal\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  nameWithType: IConvertible.ToDecimal(IFormatProvider)\n  commentId: M:System.IConvertible.ToDecimal(System.IFormatProvider)\n- uid: System.Decimal\n  parent: System\n  isExternal: false\n  name: Decimal\n  fullName: System.Decimal\n  nameWithType: Decimal\n  commentId: T:System.Decimal\n- uid: System.IConvertible.ToDouble(System.IFormatProvider)\n  parent: System.IConvertible\n  isExternal: false\n  name: ToDouble(IFormatProvider)\n  fullName: System.IConvertible.ToDouble(System.IFormatProvider)\n  spec.csharp:\n  - uid: System.IConvertible.ToDouble(System.IFormatProvider)\n    name: ToDouble\n    fullName: System.IConvertible.ToDouble\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IConvertible.ToDouble(System.IFormatProvider)\n    name: ToDouble\n    fullName: System.IConvertible.ToDouble\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  nameWithType: IConvertible.ToDouble(IFormatProvider)\n  commentId: M:System.IConvertible.ToDouble(System.IFormatProvider)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  fullName: System.Double\n  nameWithType: Double\n  commentId: T:System.Double\n- uid: System.IConvertible.ToInt16(System.IFormatProvider)\n  parent: System.IConvertible\n  isExternal: false\n  name: ToInt16(IFormatProvider)\n  fullName: System.IConvertible.ToInt16(System.IFormatProvider)\n  spec.csharp:\n  - uid: System.IConvertible.ToInt16(System.IFormatProvider)\n    name: ToInt16\n    fullName: System.IConvertible.ToInt16\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IConvertible.ToInt16(System.IFormatProvider)\n    name: ToInt16\n    fullName: System.IConvertible.ToInt16\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  nameWithType: IConvertible.ToInt16(IFormatProvider)\n  commentId: M:System.IConvertible.ToInt16(System.IFormatProvider)\n- uid: System.Int16\n  parent: System\n  isExternal: false\n  name: Int16\n  fullName: System.Int16\n  nameWithType: Int16\n  commentId: T:System.Int16\n- uid: System.IConvertible.ToInt32(System.IFormatProvider)\n  parent: System.IConvertible\n  isExternal: false\n  name: ToInt32(IFormatProvider)\n  fullName: System.IConvertible.ToInt32(System.IFormatProvider)\n  spec.csharp:\n  - uid: System.IConvertible.ToInt32(System.IFormatProvider)\n    name: ToInt32\n    fullName: System.IConvertible.ToInt32\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IConvertible.ToInt32(System.IFormatProvider)\n    name: ToInt32\n    fullName: System.IConvertible.ToInt32\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  nameWithType: IConvertible.ToInt32(IFormatProvider)\n  commentId: M:System.IConvertible.ToInt32(System.IFormatProvider)\n- uid: System.IConvertible.ToInt64(System.IFormatProvider)\n  parent: System.IConvertible\n  isExternal: false\n  name: ToInt64(IFormatProvider)\n  fullName: System.IConvertible.ToInt64(System.IFormatProvider)\n  spec.csharp:\n  - uid: System.IConvertible.ToInt64(System.IFormatProvider)\n    name: ToInt64\n    fullName: System.IConvertible.ToInt64\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IConvertible.ToInt64(System.IFormatProvider)\n    name: ToInt64\n    fullName: System.IConvertible.ToInt64\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  nameWithType: IConvertible.ToInt64(IFormatProvider)\n  commentId: M:System.IConvertible.ToInt64(System.IFormatProvider)\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  fullName: System.Int64\n  nameWithType: Int64\n  commentId: T:System.Int64\n- uid: System.IConvertible.ToSByte(System.IFormatProvider)\n  parent: System.IConvertible\n  isExternal: false\n  name: ToSByte(IFormatProvider)\n  fullName: System.IConvertible.ToSByte(System.IFormatProvider)\n  spec.csharp:\n  - uid: System.IConvertible.ToSByte(System.IFormatProvider)\n    name: ToSByte\n    fullName: System.IConvertible.ToSByte\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IConvertible.ToSByte(System.IFormatProvider)\n    name: ToSByte\n    fullName: System.IConvertible.ToSByte\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  nameWithType: IConvertible.ToSByte(IFormatProvider)\n  commentId: M:System.IConvertible.ToSByte(System.IFormatProvider)\n- uid: System.SByte\n  parent: System\n  isExternal: false\n  name: SByte\n  fullName: System.SByte\n  nameWithType: SByte\n  commentId: T:System.SByte\n- uid: System.IConvertible.ToSingle(System.IFormatProvider)\n  parent: System.IConvertible\n  isExternal: false\n  name: ToSingle(IFormatProvider)\n  fullName: System.IConvertible.ToSingle(System.IFormatProvider)\n  spec.csharp:\n  - uid: System.IConvertible.ToSingle(System.IFormatProvider)\n    name: ToSingle\n    fullName: System.IConvertible.ToSingle\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IConvertible.ToSingle(System.IFormatProvider)\n    name: ToSingle\n    fullName: System.IConvertible.ToSingle\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  nameWithType: IConvertible.ToSingle(IFormatProvider)\n  commentId: M:System.IConvertible.ToSingle(System.IFormatProvider)\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  fullName: System.Single\n  nameWithType: Single\n  commentId: T:System.Single\n- uid: System.IConvertible.ToType(System.Type,System.IFormatProvider)\n  parent: System.IConvertible\n  isExternal: false\n  name: ToType(Type, IFormatProvider)\n  fullName: System.IConvertible.ToType(System.Type, System.IFormatProvider)\n  spec.csharp:\n  - uid: System.IConvertible.ToType(System.Type,System.IFormatProvider)\n    name: ToType\n    fullName: System.IConvertible.ToType\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n  - name: ', '\n    fullName: ', '\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IConvertible.ToType(System.Type,System.IFormatProvider)\n    name: ToType\n    fullName: System.IConvertible.ToType\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n  - name: ', '\n    fullName: ', '\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  nameWithType: IConvertible.ToType(Type, IFormatProvider)\n  commentId: M:System.IConvertible.ToType(System.Type,System.IFormatProvider)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  fullName: System.Type\n  nameWithType: Type\n  commentId: T:System.Type\n- uid: System.IConvertible.ToUInt16(System.IFormatProvider)\n  parent: System.IConvertible\n  isExternal: false\n  name: ToUInt16(IFormatProvider)\n  fullName: System.IConvertible.ToUInt16(System.IFormatProvider)\n  spec.csharp:\n  - uid: System.IConvertible.ToUInt16(System.IFormatProvider)\n    name: ToUInt16\n    fullName: System.IConvertible.ToUInt16\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IConvertible.ToUInt16(System.IFormatProvider)\n    name: ToUInt16\n    fullName: System.IConvertible.ToUInt16\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  nameWithType: IConvertible.ToUInt16(IFormatProvider)\n  commentId: M:System.IConvertible.ToUInt16(System.IFormatProvider)\n- uid: System.UInt16\n  parent: System\n  isExternal: false\n  name: UInt16\n  fullName: System.UInt16\n  nameWithType: UInt16\n  commentId: T:System.UInt16\n- uid: System.IConvertible.ToUInt32(System.IFormatProvider)\n  parent: System.IConvertible\n  isExternal: false\n  name: ToUInt32(IFormatProvider)\n  fullName: System.IConvertible.ToUInt32(System.IFormatProvider)\n  spec.csharp:\n  - uid: System.IConvertible.ToUInt32(System.IFormatProvider)\n    name: ToUInt32\n    fullName: System.IConvertible.ToUInt32\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IConvertible.ToUInt32(System.IFormatProvider)\n    name: ToUInt32\n    fullName: System.IConvertible.ToUInt32\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  nameWithType: IConvertible.ToUInt32(IFormatProvider)\n  commentId: M:System.IConvertible.ToUInt32(System.IFormatProvider)\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  fullName: System.UInt32\n  nameWithType: UInt32\n  commentId: T:System.UInt32\n- uid: System.IConvertible.ToUInt64(System.IFormatProvider)\n  parent: System.IConvertible\n  isExternal: false\n  name: ToUInt64(IFormatProvider)\n  fullName: System.IConvertible.ToUInt64(System.IFormatProvider)\n  spec.csharp:\n  - uid: System.IConvertible.ToUInt64(System.IFormatProvider)\n    name: ToUInt64\n    fullName: System.IConvertible.ToUInt64\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IConvertible.ToUInt64(System.IFormatProvider)\n    name: ToUInt64\n    fullName: System.IConvertible.ToUInt64\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  nameWithType: IConvertible.ToUInt64(IFormatProvider)\n  commentId: M:System.IConvertible.ToUInt64(System.IFormatProvider)\n- uid: System.ValueType.ToString\n  parent: System.ValueType\n  isExternal: false\n  name: ToString()\n  fullName: System.ValueType.ToString()\n  spec.csharp:\n  - uid: System.ValueType.ToString\n    name: ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.ToString\n    name: ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ValueType.ToString()\n  commentId: M:System.ValueType.ToString\n- uid: System.IConvertible.ToString(System.IFormatProvider)\n  parent: System.IConvertible\n  isExternal: false\n  name: ToString(IFormatProvider)\n  fullName: System.IConvertible.ToString(System.IFormatProvider)\n  spec.csharp:\n  - uid: System.IConvertible.ToString(System.IFormatProvider)\n    name: ToString\n    fullName: System.IConvertible.ToString\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IConvertible.ToString(System.IFormatProvider)\n    name: ToString\n    fullName: System.IConvertible.ToString\n  - name: (\n    fullName: (\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  nameWithType: IConvertible.ToString(IFormatProvider)\n  commentId: M:System.IConvertible.ToString(System.IFormatProvider)\n- uid: System.IFormattable.ToString(System.String,System.IFormatProvider)\n  parent: System.IFormattable\n  isExternal: true\n  name: ToString(String, IFormatProvider)\n  fullName: System.IFormattable.ToString(System.String, System.IFormatProvider)\n  spec.csharp:\n  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)\n    name: ToString\n    fullName: System.IFormattable.ToString\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)\n    name: ToString\n    fullName: System.IFormattable.ToString\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IFormatProvider\n    name: IFormatProvider\n    fullName: System.IFormatProvider\n  - name: )\n    fullName: )\n  nameWithType: IFormattable.ToString(String, IFormatProvider)\n  commentId: M:System.IFormattable.ToString(System.String,System.IFormatProvider)\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.FormatException\n  parent: System\n  isExternal: false\n  name: FormatException\n  fullName: System.FormatException\n  nameWithType: FormatException\n  commentId: T:System.FormatException\n- uid: System.OverflowException\n  isExternal: false\n  name: OverflowException\n  fullName: System.OverflowException\n  nameWithType: OverflowException\n  commentId: T:System.OverflowException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n- uid: System.InvalidCastException\n  isExternal: false\n  name: InvalidCastException\n  fullName: System.InvalidCastException\n  nameWithType: InvalidCastException\n  commentId: T:System.InvalidCastException\n"}