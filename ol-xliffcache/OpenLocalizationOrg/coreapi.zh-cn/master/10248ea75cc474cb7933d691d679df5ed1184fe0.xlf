<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-56a7a5e" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">10248ea75cc474cb7933d691d679df5ed1184fe0</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Microsoft.VisualBasic.CompilerServices.NewLateBinding.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">214124c6bfd4869b7ba96801f17ca967fc0430b0</xliffext:olskeletonhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>NewLateBinding</source>
          <target state="new">NewLateBinding</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>LateCall(Object, Type, String, Object[], String[], Type[], Boolean[], Boolean)</source>
          <target state="new">LateCall(Object, Type, String, Object[], String[], Type[], Boolean[], Boolean)</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An instance of the call object exposing the property or method.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;An instance of the call object exposing the property or method.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the call object.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The type of the call object.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The name of the property or method on the call object.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The name of the property or method on the call object.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An array containing the arguments to be passed to the property or method being called.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;An array containing the arguments to be passed to the property or method being called.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An array of argument names.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;An array of argument names.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An array of argument types; used only for generic calls to pass argument types.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;An array of argument types; used only for generic calls to pass argument types.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An array of &lt;strong&gt;Boolean&lt;/strong&gt; values that the late binder uses to communicate back to the call site which arguments match &lt;strong&gt;ByRef&lt;/strong&gt; parameters.</source>
          <target state="new">\n&lt;p&gt;An array of &lt;strong&gt;Boolean&lt;/strong&gt; values that the late binder uses to communicate back to the call site which arguments match &lt;strong&gt;ByRef&lt;/strong&gt; parameters.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Each &lt;strong&gt;True&lt;/strong&gt; value indicates that the arguments matched and should be copied out after the call to &lt;strong&gt;LateCall&lt;/strong&gt; is complete.&lt;/p&gt;\n</source>
          <target state="new">Each &lt;strong&gt;True&lt;/strong&gt; value indicates that the arguments matched and should be copied out after the call to &lt;strong&gt;LateCall&lt;/strong&gt; is complete.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A &lt;strong&gt;Boolean&lt;/strong&gt; value indicating whether or not the return value can be ignored.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;A &lt;strong&gt;Boolean&lt;/strong&gt; value indicating whether or not the return value can be ignored.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An instance of the call object.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;An instance of the call object.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>LateGet(Object, Type, String, Object[], String[], Type[], Boolean[])</source>
          <target state="new">LateGet(Object, Type, String, Object[], String[], Type[], Boolean[])</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An instance of the call object exposing the property or method.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;An instance of the call object exposing the property or method.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the call object.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The type of the call object.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The name of the property or method on the call object.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The name of the property or method on the call object.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An array containing the arguments to be passed to the property or method being called.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;An array containing the arguments to be passed to the property or method being called.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An array of argument names.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;An array of argument names.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An array of argument types; used only for generic calls to pass argument types.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;An array of argument types; used only for generic calls to pass argument types.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An array of &lt;strong&gt;Boolean&lt;/strong&gt; values that the late binder uses to communicate back to the call site which arguments match &lt;strong&gt;ByRef&lt;/strong&gt; parameters.</source>
          <target state="new">\n&lt;p&gt;An array of &lt;strong&gt;Boolean&lt;/strong&gt; values that the late binder uses to communicate back to the call site which arguments match &lt;strong&gt;ByRef&lt;/strong&gt; parameters.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Each &lt;strong&gt;True&lt;/strong&gt; value indicates that the arguments matched and should be copied out after the call to &lt;strong&gt;LateCall&lt;/strong&gt; is complete.&lt;/p&gt;\n</source>
          <target state="new">Each &lt;strong&gt;True&lt;/strong&gt; value indicates that the arguments matched and should be copied out after the call to &lt;strong&gt;LateCall&lt;/strong&gt; is complete.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An instance of the call object.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;An instance of the call object.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>LateIndexGet(Object, Object[], String[])</source>
          <target state="new">LateIndexGet(Object, Object[], String[])</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An instance of the call object exposing the property or method.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;An instance of the call object exposing the property or method.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An array containing the arguments to be passed to the property or method being called.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;An array containing the arguments to be passed to the property or method being called.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An array of argument names.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;An array of argument names.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An instance of the call object.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;An instance of the call object.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>LateIndexSet(Object, Object[], String[])</source>
          <target state="new">LateIndexSet(Object, Object[], String[])</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An instance of the call object exposing the property or method.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;An instance of the call object exposing the property or method.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An array containing the arguments to be passed to the property or method being called.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;An array containing the arguments to be passed to the property or method being called.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An array of argument names.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;An array of argument names.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>LateIndexSetComplex(Object, Object[], String[], Boolean, Boolean)</source>
          <target state="new">LateIndexSetComplex(Object, Object[], String[], Boolean, Boolean)</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An instance of the call object exposing the property or method.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;An instance of the call object exposing the property or method.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An array containing the arguments to be passed to the property or method being called.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;An array containing the arguments to be passed to the property or method being called.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An array of argument names.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;An array of argument names.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A &lt;strong&gt;Boolean&lt;/strong&gt; value used to determine whether the set operation will work.</source>
          <target state="new">\n&lt;p&gt;A &lt;strong&gt;Boolean&lt;/strong&gt; value used to determine whether the set operation will work.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Set to &lt;strong&gt;True&lt;/strong&gt; when you believe that an intermediate value has been set in the property or field; otherwise &lt;strong&gt;False&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">Set to &lt;strong&gt;True&lt;/strong&gt; when you believe that an intermediate value has been set in the property or field; otherwise &lt;strong&gt;False&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A &lt;strong&gt;Boolean&lt;/strong&gt; value that specifies when the base reference of the late reference is an &lt;strong&gt;RValue&lt;/strong&gt;.</source>
          <target state="new">\n&lt;p&gt;A &lt;strong&gt;Boolean&lt;/strong&gt; value that specifies when the base reference of the late reference is an &lt;strong&gt;RValue&lt;/strong&gt;.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Set to &lt;strong&gt;True&lt;/strong&gt; when the base reference of the late reference is an &lt;strong&gt;RValue&lt;/strong&gt;; this allows you to generate a run-time exception for late assignments to fields of &lt;strong&gt;RValues&lt;/strong&gt; of value types.</source>
          <target state="new">Set to &lt;strong&gt;True&lt;/strong&gt; when the base reference of the late reference is an &lt;strong&gt;RValue&lt;/strong&gt;; this allows you to generate a run-time exception for late assignments to fields of &lt;strong&gt;RValues&lt;/strong&gt; of value types.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Otherwise, set to &lt;strong&gt;False&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">Otherwise, set to &lt;strong&gt;False&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>LateSet(Object, Type, String, Object[], String[], Type[])</source>
          <target state="new">LateSet(Object, Type, String, Object[], String[], Type[])</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An instance of the call object exposing the property or method.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;An instance of the call object exposing the property or method.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the call object.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The type of the call object.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The name of the property or method on the call object.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The name of the property or method on the call object.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An array containing the arguments to be passed to the property or method being called.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;An array containing the arguments to be passed to the property or method being called.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An array of argument names.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;An array of argument names.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An array of argument types; used only for generic calls to pass argument types.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;An array of argument types; used only for generic calls to pass argument types.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>LateSet(Object, Type, String, Object[], String[], Type[], Boolean, Boolean, CallType)</source>
          <target state="new">LateSet(Object, Type, String, Object[], String[], Type[], Boolean, Boolean, CallType)</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An instance of the call object exposing the property or method.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;An instance of the call object exposing the property or method.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the call object.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The type of the call object.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The name of the property or method on the call object.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The name of the property or method on the call object.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An array containing the arguments to be passed to the property or method being called.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;An array containing the arguments to be passed to the property or method being called.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An array of argument names.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;An array of argument names.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An array of argument types; used only for generic calls to pass argument types.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;An array of argument types; used only for generic calls to pass argument types.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A &lt;strong&gt;Boolean&lt;/strong&gt; value used to determine whether the set operation will work.</source>
          <target state="new">\n&lt;p&gt;A &lt;strong&gt;Boolean&lt;/strong&gt; value used to determine whether the set operation will work.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Set to &lt;strong&gt;True&lt;/strong&gt; when you believe that an intermediate value has been set in the property or field; otherwise &lt;strong&gt;False&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">Set to &lt;strong&gt;True&lt;/strong&gt; when you believe that an intermediate value has been set in the property or field; otherwise &lt;strong&gt;False&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A &lt;strong&gt;Boolean&lt;/strong&gt; value that specifies when the base reference of the late reference is an &lt;strong&gt;RValue&lt;/strong&gt;.</source>
          <target state="new">\n&lt;p&gt;A &lt;strong&gt;Boolean&lt;/strong&gt; value that specifies when the base reference of the late reference is an &lt;strong&gt;RValue&lt;/strong&gt;.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Set to &lt;strong&gt;True&lt;/strong&gt; when the base reference of the late reference is an &lt;strong&gt;RValue&lt;/strong&gt;; this allows you to generate a run-time exception for late assignments to fields of &lt;strong&gt;RValues&lt;/strong&gt; of value types.</source>
          <target state="new">Set to &lt;strong&gt;True&lt;/strong&gt; when the base reference of the late reference is an &lt;strong&gt;RValue&lt;/strong&gt;; this allows you to generate a run-time exception for late assignments to fields of &lt;strong&gt;RValues&lt;/strong&gt; of value types.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Otherwise, set to &lt;strong&gt;False&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">Otherwise, set to &lt;strong&gt;False&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>LateSetComplex(Object, Type, String, Object[], String[], Type[], Boolean, Boolean)</source>
          <target state="new">LateSetComplex(Object, Type, String, Object[], String[], Type[], Boolean, Boolean)</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An instance of the call object exposing the property or method.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;An instance of the call object exposing the property or method.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the call object.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The type of the call object.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The name of the property or method on the call object.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The name of the property or method on the call object.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An array containing the arguments to be passed to the property or method being called.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;An array containing the arguments to be passed to the property or method being called.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An array of argument names.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;An array of argument names.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An array of argument types; used only for generic calls to pass argument types.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;An array of argument types; used only for generic calls to pass argument types.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A &lt;strong&gt;Boolean&lt;/strong&gt; value used to determine whether the set operation will work.</source>
          <target state="new">\n&lt;p&gt;A &lt;strong&gt;Boolean&lt;/strong&gt; value used to determine whether the set operation will work.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Set to &lt;strong&gt;True&lt;/strong&gt; when you believe that an intermediate value has been set in the property or field; otherwise &lt;strong&gt;False&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">Set to &lt;strong&gt;True&lt;/strong&gt; when you believe that an intermediate value has been set in the property or field; otherwise &lt;strong&gt;False&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A &lt;strong&gt;Boolean&lt;/strong&gt; value that specifies when the base reference of the late reference is an &lt;strong&gt;RValue&lt;/strong&gt;.</source>
          <target state="new">\n&lt;p&gt;A &lt;strong&gt;Boolean&lt;/strong&gt; value that specifies when the base reference of the late reference is an &lt;strong&gt;RValue&lt;/strong&gt;.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Set to &lt;strong&gt;True&lt;/strong&gt; when the base reference of the late reference is an &lt;strong&gt;RValue&lt;/strong&gt;; this allows you to generate a run-time exception for late assignments to fields of &lt;strong&gt;RValues&lt;/strong&gt; of value types.</source>
          <target state="new">Set to &lt;strong&gt;True&lt;/strong&gt; when the base reference of the late reference is an &lt;strong&gt;RValue&lt;/strong&gt;; this allows you to generate a run-time exception for late assignments to fields of &lt;strong&gt;RValues&lt;/strong&gt; of value types.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Otherwise, set to &lt;strong&gt;False&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">Otherwise, set to &lt;strong&gt;False&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Microsoft.VisualBasic.CompilerServices</source>
          <target state="new">Microsoft.VisualBasic.CompilerServices</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>ToString()</source>
          <target state="new">ToString()</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>ToString</source>
          <target state="new">ToString</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>ToString</source>
          <target state="new">ToString</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Equals(Object)</source>
          <target state="new">Equals(Object)</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Equals</source>
          <target state="new">Equals</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Equals</source>
          <target state="new">Equals</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Equals(Object, Object)</source>
          <target state="new">Equals(Object, Object)</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Equals</source>
          <target state="new">Equals</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="new">,</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Equals</source>
          <target state="new">Equals</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="new">,</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>ReferenceEquals(Object, Object)</source>
          <target state="new">ReferenceEquals(Object, Object)</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>ReferenceEquals</source>
          <target state="new">ReferenceEquals</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="new">,</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>ReferenceEquals</source>
          <target state="new">ReferenceEquals</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="new">,</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>GetHashCode()</source>
          <target state="new">GetHashCode()</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>GetHashCode</source>
          <target state="new">GetHashCode</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>GetHashCode</source>
          <target state="new">GetHashCode</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>GetType()</source>
          <target state="new">GetType()</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>GetType</source>
          <target state="new">GetType</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>GetType</source>
          <target state="new">GetType</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>MemberwiseClone()</source>
          <target state="new">MemberwiseClone()</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>MemberwiseClone</source>
          <target state="new">MemberwiseClone</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>MemberwiseClone</source>
          <target state="new">MemberwiseClone</target>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>System</source>
          <target state="new">System</target>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="new">Type</target>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>String</source>
          <target state="new">String</target>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Object[]</source>
          <target state="new">Object[]</target>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>[]</source>
          <target state="new">[]</target>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>()</source>
          <target state="new">()</target>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>String[]</source>
          <target state="new">String[]</target>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>String</source>
          <target state="new">String</target>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>[]</source>
          <target state="new">[]</target>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>String</source>
          <target state="new">String</target>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>()</source>
          <target state="new">()</target>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Type[]</source>
          <target state="new">Type[]</target>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="new">Type</target>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>[]</source>
          <target state="new">[]</target>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="new">Type</target>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>()</source>
          <target state="new">()</target>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Boolean[]</source>
          <target state="new">Boolean[]</target>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Boolean</source>
          <target state="new">Boolean</target>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>[]</source>
          <target state="new">[]</target>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Boolean</source>
          <target state="new">Boolean</target>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>()</source>
          <target state="new">()</target>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Boolean</source>
          <target state="new">Boolean</target>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>CallType</source>
          <target state="new">CallType</target>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Microsoft.VisualBasic</source>
          <target state="new">Microsoft.VisualBasic</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>