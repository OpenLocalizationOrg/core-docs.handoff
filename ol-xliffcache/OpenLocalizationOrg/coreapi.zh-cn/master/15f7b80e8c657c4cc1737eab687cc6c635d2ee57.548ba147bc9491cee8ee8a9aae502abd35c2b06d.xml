{"nodes":[{"pos":[525,541],"content":"X509ChainElement","needQuote":true,"nodes":[{"content":"X509ChainElement","pos":[0,16]}]},{"pos":[2018,2029],"content":"Certificate","needQuote":true,"nodes":[{"content":"Certificate","pos":[0,11]}]},{"pos":[3554,3572],"content":"ChainElementStatus","needQuote":true,"nodes":[{"content":"ChainElementStatus","pos":[0,18]}]},{"pos":[5132,5143],"content":"Information","needQuote":true,"nodes":[{"content":"Information","pos":[0,11]}]},{"content":"\\n&lt;p&gt;A string representing the &lt;strong&gt;pwszExtendedErrorInfo&lt;/strong&gt; member of the unmanaged &lt;strong&gt;CERT_CHAIN_ELEMENT&lt;/strong&gt; structure in the Crypto API.&lt;/p&gt;\\n","pos":[6033,6197],"source":"\\n<p>A string representing the <strong>pwszExtendedErrorInfo</strong> member of the unmanaged <strong>CERT_CHAIN_ELEMENT</strong> structure in the Crypto API.</p>\\n"},{"pos":[6416,6461],"content":"System.Security.Cryptography.X509Certificates","needQuote":true,"nodes":[{"content":"System.Security.Cryptography.X509Certificates","pos":[0,45]}]},{"pos":[6709,6715],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6875,6885],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[6980,6988],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[7057,7058],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7085,7086],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7156,7164],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[7233,7234],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7261,7262],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7445,7459],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[7578,7584],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[7651,7652],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7702,7708],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7768,7769],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7852,7858],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[7925,7926],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7976,7982],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8042,8043],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8257,8279],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[8427,8433],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[8500,8501],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8551,8557],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[8618,8619]},{"pos":[8674,8680],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8740,8741],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8838,8844],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[8911,8912],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8962,8968],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[9029,9030]},{"pos":[9085,9091],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9151,9152],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9397,9428],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[9594,9609],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[9685,9686],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9736,9742],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[9803,9804]},{"pos":[9859,9865],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9925,9926],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10032,10047],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[10123,10124],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10174,10180],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[10241,10242]},{"pos":[10297,10303],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10363,10364],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10594,10607],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[10708,10719],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[10791,10792],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10819,10820],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10893,10904],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[10976,10977],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11004,11005],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11180,11189],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[11282,11289],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[11357,11358],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11385,11386],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11455,11462],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[11530,11531],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11558,11559],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11734,11751],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[11860,11875],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[11951,11952],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11979,11980],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12057,12072],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[12148,12149],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12176,12177],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12322,12328],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[12547,12563],"content":"X509Certificate2","needQuote":true,"nodes":[{"content":"X509Certificate2","pos":[0,16]}]},{"pos":[12829,12846],"content":"X509ChainStatus[]","needQuote":true,"nodes":[{"content":"X509ChainStatus[]","pos":[0,17]}]},{"pos":[13127,13142],"content":"X509ChainStatus","needQuote":true,"nodes":[{"content":"X509ChainStatus","pos":[0,15]}]},{"content":"[]","pos":[13230,13232]},{"pos":[13345,13360],"content":"X509ChainStatus","needQuote":true,"nodes":[{"content":"X509ChainStatus","pos":[0,15]}]},{"pos":[13447,13449],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[13604,13610],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"items:\n- uid: System.Security.Cryptography.X509Certificates.X509ChainElement\n  commentId: T:System.Security.Cryptography.X509Certificates.X509ChainElement\n  id: X509ChainElement\n  parent: System.Security.Cryptography.X509Certificates\n  children:\n  - System.Security.Cryptography.X509Certificates.X509ChainElement.Certificate\n  - System.Security.Cryptography.X509Certificates.X509ChainElement.ChainElementStatus\n  - System.Security.Cryptography.X509Certificates.X509ChainElement.Information\n  langs:\n  - csharp\n  - vb\n  name: X509ChainElement\n  fullName: System.Security.Cryptography.X509Certificates.X509ChainElement\n  type: Class\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: X509ChainElement\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 228\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Represents an element of an X.509 chain.</p>\\n\"\n  syntax:\n    content: public class X509ChainElement\n    content.vb: Public Class X509ChainElement\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: X509ChainElement\n- uid: System.Security.Cryptography.X509Certificates.X509ChainElement.Certificate\n  commentId: P:System.Security.Cryptography.X509Certificates.X509ChainElement.Certificate\n  id: Certificate\n  parent: System.Security.Cryptography.X509Certificates.X509ChainElement\n  langs:\n  - csharp\n  - vb\n  name: Certificate\n  fullName: System.Security.Cryptography.X509Certificates.X509ChainElement.Certificate\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Certificate\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 231\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Gets the X.509 certificate at a particular chain element.</p>\\n\"\n  syntax:\n    content: public X509Certificate2 Certificate { get; }\n    content.vb: Public ReadOnly Property Certificate As X509Certificate2\n    parameters: []\n    return:\n      type: System.Security.Cryptography.X509Certificates.X509Certificate2\n      description: \"\\n<p>An <xref href=\\\"System.Security.Cryptography.X509Certificates.X509Certificate2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: X509ChainElement.Certificate\n- uid: System.Security.Cryptography.X509Certificates.X509ChainElement.ChainElementStatus\n  commentId: P:System.Security.Cryptography.X509Certificates.X509ChainElement.ChainElementStatus\n  id: ChainElementStatus\n  parent: System.Security.Cryptography.X509Certificates.X509ChainElement\n  langs:\n  - csharp\n  - vb\n  name: ChainElementStatus\n  fullName: System.Security.Cryptography.X509Certificates.X509ChainElement.ChainElementStatus\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ChainElementStatus\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 232\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Gets the error status of the current X.509 certificate in a chain.</p>\\n\"\n  syntax:\n    content: public X509ChainStatus[] ChainElementStatus { get; }\n    content.vb: Public ReadOnly Property ChainElementStatus As X509ChainStatus()\n    parameters: []\n    return:\n      type: System.Security.Cryptography.X509Certificates.X509ChainStatus[]\n      description: \"\\n<p>An array of <xref href=\\\"System.Security.Cryptography.X509Certificates.X509ChainStatus\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: X509ChainElement.ChainElementStatus\n- uid: System.Security.Cryptography.X509Certificates.X509ChainElement.Information\n  commentId: P:System.Security.Cryptography.X509Certificates.X509ChainElement.Information\n  id: Information\n  parent: System.Security.Cryptography.X509Certificates.X509ChainElement\n  langs:\n  - csharp\n  - vb\n  name: Information\n  fullName: System.Security.Cryptography.X509Certificates.X509ChainElement.Information\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Information\n    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs\n    startLine: 233\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: \"\\n<p>Gets additional error information from an unmanaged certificate chain structure.</p>\\n\"\n  syntax:\n    content: public string Information { get; }\n    content.vb: Public ReadOnly Property Information As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>A string representing the <strong>pwszExtendedErrorInfo</strong> member of the unmanaged <strong>CERT_CHAIN_ELEMENT</strong> structure in the Crypto API.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: X509ChainElement.Information\nreferences:\n- uid: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: System.Security.Cryptography.X509Certificates\n  fullName: System.Security.Cryptography.X509Certificates\n  commentId: N:System.Security.Cryptography.X509Certificates\n  nameWithType: System.Security.Cryptography.X509Certificates\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate2\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509Certificate2\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2\n  commentId: T:System.Security.Cryptography.X509Certificates.X509Certificate2\n  nameWithType: X509Certificate2\n- uid: System.Security.Cryptography.X509Certificates.X509ChainStatus[]\n  name: X509ChainStatus[]\n  fullName: System.Security.Cryptography.X509Certificates.X509ChainStatus[]\n  fullname.vb: System.Security.Cryptography.X509Certificates.X509ChainStatus()\n  name.vb: X509ChainStatus()\n  spec.csharp:\n  - uid: System.Security.Cryptography.X509Certificates.X509ChainStatus\n    name: X509ChainStatus\n    fullName: System.Security.Cryptography.X509Certificates.X509ChainStatus\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Security.Cryptography.X509Certificates.X509ChainStatus\n    name: X509ChainStatus\n    fullName: System.Security.Cryptography.X509Certificates.X509ChainStatus\n  - name: ()\n    fullName: ()\n  nameWithType: X509ChainStatus[]\n  nameWithType.vb: X509ChainStatus()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n"}