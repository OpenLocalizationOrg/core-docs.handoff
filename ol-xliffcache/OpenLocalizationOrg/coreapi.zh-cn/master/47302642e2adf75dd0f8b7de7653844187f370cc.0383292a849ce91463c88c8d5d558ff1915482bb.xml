{"nodes":[{"pos":[1063,1075],"content":"NumberStyles","needQuote":true,"nodes":[{"content":"NumberStyles","pos":[0,12]}]},{"pos":[2471,2490],"content":"AllowCurrencySymbol","needQuote":true,"nodes":[{"content":"AllowCurrencySymbol","pos":[0,19]}]},{"pos":[3627,3644],"content":"AllowDecimalPoint","needQuote":true,"nodes":[{"content":"AllowDecimalPoint","pos":[0,17]}]},{"pos":[5257,5270],"content":"AllowExponent","needQuote":true,"nodes":[{"content":"AllowExponent","pos":[0,13]}]},{"pos":[7029,7046],"content":"AllowHexSpecifier","needQuote":true,"nodes":[{"content":"AllowHexSpecifier","pos":[0,17]}]},{"pos":[9052,9068],"content":"AllowLeadingSign","needQuote":true,"nodes":[{"content":"AllowLeadingSign","pos":[0,16]}]},{"pos":[10307,10324],"content":"AllowLeadingWhite","needQuote":true,"nodes":[{"content":"AllowLeadingWhite","pos":[0,17]}]},{"pos":[11598,11614],"content":"AllowParentheses","needQuote":true,"nodes":[{"content":"AllowParentheses","pos":[0,16]}]},{"pos":[12669,12683],"content":"AllowThousands","needQuote":true,"nodes":[{"content":"AllowThousands","pos":[0,14]}]},{"pos":[14735,14752],"content":"AllowTrailingSign","needQuote":true,"nodes":[{"content":"AllowTrailingSign","pos":[0,17]}]},{"pos":[16000,16018],"content":"AllowTrailingWhite","needQuote":true,"nodes":[{"content":"AllowTrailingWhite","pos":[0,18]}]},{"pos":[17258,17261],"content":"Any","needQuote":true,"nodes":[{"content":"Any","pos":[0,3]}]},{"pos":[18263,18271],"content":"Currency","needQuote":true,"nodes":[{"content":"Currency","pos":[0,8]}]},{"pos":[19396,19401],"content":"Float","needQuote":true,"nodes":[{"content":"Float","pos":[0,5]}]},{"pos":[20859,20868],"content":"HexNumber","needQuote":true,"nodes":[{"content":"HexNumber","pos":[0,9]}]},{"pos":[22115,22122],"content":"Integer","needQuote":true,"nodes":[{"content":"Integer","pos":[0,7]}]},{"pos":[23349,23353],"content":"None","needQuote":true,"nodes":[{"content":"None","pos":[0,4]}]},{"pos":[24391,24397],"content":"Number","needQuote":true,"nodes":[{"content":"Number","pos":[0,6]}]},{"pos":[25836,25856],"content":"System.Globalization","needQuote":true,"nodes":[{"content":"System.Globalization","pos":[0,20]}]},{"pos":[26063,26075],"content":"NumberStyles","needQuote":true,"nodes":[{"content":"NumberStyles","pos":[0,12]}]}],"content":"items:\n- uid: System.Globalization.NumberStyles\n  commentId: T:System.Globalization.NumberStyles\n  id: NumberStyles\n  parent: System.Globalization\n  children:\n  - System.Globalization.NumberStyles.AllowCurrencySymbol\n  - System.Globalization.NumberStyles.AllowDecimalPoint\n  - System.Globalization.NumberStyles.AllowExponent\n  - System.Globalization.NumberStyles.AllowHexSpecifier\n  - System.Globalization.NumberStyles.AllowLeadingSign\n  - System.Globalization.NumberStyles.AllowLeadingWhite\n  - System.Globalization.NumberStyles.AllowParentheses\n  - System.Globalization.NumberStyles.AllowThousands\n  - System.Globalization.NumberStyles.AllowTrailingSign\n  - System.Globalization.NumberStyles.AllowTrailingWhite\n  - System.Globalization.NumberStyles.Any\n  - System.Globalization.NumberStyles.Currency\n  - System.Globalization.NumberStyles.Float\n  - System.Globalization.NumberStyles.HexNumber\n  - System.Globalization.NumberStyles.Integer\n  - System.Globalization.NumberStyles.None\n  - System.Globalization.NumberStyles.Number\n  langs:\n  - csharp\n  - vb\n  name: NumberStyles\n  fullName: System.Globalization.NumberStyles\n  type: Enum\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/NumberStyles.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: NumberStyles\n    path: src/mscorlib/src/System/Globalization/NumberStyles.cs\n    startLine: 16\n  assemblies:\n  - System.Runtime\n  namespace: System.Globalization\n  summary: \"\\n<p>Determines the styles permitted in numeric string arguments that are passed to the <strong>Parse</strong> and <strong>TryParse</strong> methods of the integral and floating-point numeric types.</p>\\n\"\n  syntax:\n    content: >-\n      [Serializable]\n\n      [Flags]\n\n      [ComVisible(true)]\n\n      public enum NumberStyles\n    content.vb: >-\n      <Serializable>\n\n      <Flags>\n\n      <ComVisible(True)>\n\n      Public Enum NumberStyles\n  seealso:\n  - type: System.Globalization.NumberFormatInfo\n    commentId: T:System.Globalization.NumberFormatInfo\n  attributes:\n  - type: System.FlagsAttribute\n    ctor: System.FlagsAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  - enum\n  modifiers.vb:\n  - Public\n  - Enum\n  nameWithType: NumberStyles\n- uid: System.Globalization.NumberStyles.AllowCurrencySymbol\n  commentId: F:System.Globalization.NumberStyles.AllowCurrencySymbol\n  id: AllowCurrencySymbol\n  parent: System.Globalization.NumberStyles\n  langs:\n  - csharp\n  - vb\n  name: AllowCurrencySymbol\n  fullName: System.Globalization.NumberStyles.AllowCurrencySymbol\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/NumberStyles.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: AllowCurrencySymbol\n    path: src/mscorlib/src/System/Globalization/NumberStyles.cs\n    startLine: 43\n  assemblies:\n  - System.Runtime\n  namespace: System.Globalization\n  summary: \"\\n<p>Indicates that the numeric string can contain a currency symbol. Valid currency symbols are determined by the <xref href=\\\"System.Globalization.NumberFormatInfo.CurrencySymbol\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property.</p>\\n\"\n  syntax:\n    content: AllowCurrencySymbol = 256\n    return:\n      type: System.Globalization.NumberStyles\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: NumberStyles.AllowCurrencySymbol\n- uid: System.Globalization.NumberStyles.AllowDecimalPoint\n  commentId: F:System.Globalization.NumberStyles.AllowDecimalPoint\n  id: AllowDecimalPoint\n  parent: System.Globalization.NumberStyles\n  langs:\n  - csharp\n  - vb\n  name: AllowDecimalPoint\n  fullName: System.Globalization.NumberStyles.AllowDecimalPoint\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/NumberStyles.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: AllowDecimalPoint\n    path: src/mscorlib/src/System/Globalization/NumberStyles.cs\n    startLine: 37\n  assemblies:\n  - System.Runtime\n  namespace: System.Globalization\n  summary: \"\\n<p>Indicates that the numeric string can have a decimal point. If the <xref href=\\\"System.Globalization.NumberStyles\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value includes the <xref href=\\\"System.Globalization.NumberStyles.AllowCurrencySymbol\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> flag and the parsed string includes a currency symbol, the decimal separator character is determined by the <xref href=\\\"System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property. Otherwise, the decimal separator character is determined by the <xref href=\\\"System.Globalization.NumberFormatInfo.NumberDecimalSeparator\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property.</p>\\n\"\n  syntax:\n    content: AllowDecimalPoint = 32\n    return:\n      type: System.Globalization.NumberStyles\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: NumberStyles.AllowDecimalPoint\n- uid: System.Globalization.NumberStyles.AllowExponent\n  commentId: F:System.Globalization.NumberStyles.AllowExponent\n  id: AllowExponent\n  parent: System.Globalization.NumberStyles\n  langs:\n  - csharp\n  - vb\n  name: AllowExponent\n  fullName: System.Globalization.NumberStyles.AllowExponent\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/NumberStyles.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: AllowExponent\n    path: src/mscorlib/src/System/Globalization/NumberStyles.cs\n    startLine: 41\n  assemblies:\n  - System.Runtime\n  namespace: System.Globalization\n  summary: \"\\n<p>Indicates that the numeric string can be in exponential notation. The <xref href=\\\"System.Globalization.NumberStyles.AllowExponent\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> flag allows the parsed string to contain an exponent that begins with the \\\"E\\\" or \\\"e\\\" character and that is followed by an optional positive or negative sign and an integer. In other words, it successfully parses strings in the form nnnExx, nnnE+xx, and nnnE-xx. It does not allow a decimal separator or sign in the significand or mantissa; to allow these elements in the string to be parsed, use the <xref href=\\\"System.Globalization.NumberStyles.AllowDecimalPoint\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and <xref href=\\\"System.Globalization.NumberStyles.AllowLeadingSign\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> flags, or use a composite style that includes these individual flags.</p>\\n\"\n  syntax:\n    content: AllowExponent = 128\n    return:\n      type: System.Globalization.NumberStyles\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: NumberStyles.AllowExponent\n- uid: System.Globalization.NumberStyles.AllowHexSpecifier\n  commentId: F:System.Globalization.NumberStyles.AllowHexSpecifier\n  id: AllowHexSpecifier\n  parent: System.Globalization.NumberStyles\n  langs:\n  - csharp\n  - vb\n  name: AllowHexSpecifier\n  fullName: System.Globalization.NumberStyles.AllowHexSpecifier\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/NumberStyles.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: AllowHexSpecifier\n    path: src/mscorlib/src/System/Globalization/NumberStyles.cs\n    startLine: 45\n  assemblies:\n  - System.Runtime\n  namespace: System.Globalization\n  summary: \"\\n<p>Indicates that the numeric string represents a hexadecimal value. Valid hexadecimal values include the numeric digits 0-9 and the hexadecimal digits A-F and a-f. Strings that are parsed using this style cannot be prefixed with \\\"0x\\\" or \\\"&h\\\". A string that is parsed with the <xref href=\\\"System.Globalization.NumberStyles.AllowHexSpecifier\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> style will always be interpreted as a hexadecimal value. The only flags that can be combined with <xref href=\\\"System.Globalization.NumberStyles.AllowHexSpecifier\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> are <xref href=\\\"System.Globalization.NumberStyles.AllowLeadingWhite\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and <xref href=\\\"System.Globalization.NumberStyles.AllowTrailingWhite\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. The <xref href=\\\"System.Globalization.NumberStyles\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> enumeration includes a composite style, <xref href=\\\"System.Globalization.NumberStyles.HexNumber\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, that consists of these three flags.</p>\\n\"\n  syntax:\n    content: AllowHexSpecifier = 512\n    return:\n      type: System.Globalization.NumberStyles\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: NumberStyles.AllowHexSpecifier\n- uid: System.Globalization.NumberStyles.AllowLeadingSign\n  commentId: F:System.Globalization.NumberStyles.AllowLeadingSign\n  id: AllowLeadingSign\n  parent: System.Globalization.NumberStyles\n  langs:\n  - csharp\n  - vb\n  name: AllowLeadingSign\n  fullName: System.Globalization.NumberStyles.AllowLeadingSign\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/NumberStyles.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: AllowLeadingSign\n    path: src/mscorlib/src/System/Globalization/NumberStyles.cs\n    startLine: 30\n  assemblies:\n  - System.Runtime\n  namespace: System.Globalization\n  summary: \"\\n<p>Indicates that the numeric string can have a leading sign. Valid leading sign characters are determined by the <xref href=\\\"System.Globalization.NumberFormatInfo.PositiveSign\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and <xref href=\\\"System.Globalization.NumberFormatInfo.NegativeSign\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> properties.</p>\\n\"\n  syntax:\n    content: AllowLeadingSign = 4\n    return:\n      type: System.Globalization.NumberStyles\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: NumberStyles.AllowLeadingSign\n- uid: System.Globalization.NumberStyles.AllowLeadingWhite\n  commentId: F:System.Globalization.NumberStyles.AllowLeadingWhite\n  id: AllowLeadingWhite\n  parent: System.Globalization.NumberStyles\n  langs:\n  - csharp\n  - vb\n  name: AllowLeadingWhite\n  fullName: System.Globalization.NumberStyles.AllowLeadingWhite\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/NumberStyles.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: AllowLeadingWhite\n    path: src/mscorlib/src/System/Globalization/NumberStyles.cs\n    startLine: 26\n  assemblies:\n  - System.Runtime\n  namespace: System.Globalization\n  summary: \"\\n<p>Indicates that leading white-space characters can be present in the parsed string. Valid white-space characters have the Unicode values U+0009, U+000A, U+000B, U+000C, U+000D, and U+0020. Note that this is a subset of the characters for which the <xref href=\\\"System.Char.IsWhiteSpace(System.Char)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method returns <strong>true</strong>.</p>\\n\"\n  syntax:\n    content: AllowLeadingWhite = 1\n    return:\n      type: System.Globalization.NumberStyles\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: NumberStyles.AllowLeadingWhite\n- uid: System.Globalization.NumberStyles.AllowParentheses\n  commentId: F:System.Globalization.NumberStyles.AllowParentheses\n  id: AllowParentheses\n  parent: System.Globalization.NumberStyles\n  langs:\n  - csharp\n  - vb\n  name: AllowParentheses\n  fullName: System.Globalization.NumberStyles.AllowParentheses\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/NumberStyles.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: AllowParentheses\n    path: src/mscorlib/src/System/Globalization/NumberStyles.cs\n    startLine: 35\n  assemblies:\n  - System.Runtime\n  namespace: System.Globalization\n  summary: \"\\n<p>Indicates that the numeric string can have one pair of parentheses enclosing the number. The parentheses indicate that the string to be parsed represents a negative number.</p>\\n\"\n  syntax:\n    content: AllowParentheses = 16\n    return:\n      type: System.Globalization.NumberStyles\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: NumberStyles.AllowParentheses\n- uid: System.Globalization.NumberStyles.AllowThousands\n  commentId: F:System.Globalization.NumberStyles.AllowThousands\n  id: AllowThousands\n  parent: System.Globalization.NumberStyles\n  langs:\n  - csharp\n  - vb\n  name: AllowThousands\n  fullName: System.Globalization.NumberStyles.AllowThousands\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/NumberStyles.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: AllowThousands\n    path: src/mscorlib/src/System/Globalization/NumberStyles.cs\n    startLine: 39\n  assemblies:\n  - System.Runtime\n  namespace: System.Globalization\n  summary: \"\\n<p>Indicates that the numeric string can have group separators, such as symbols that separate hundreds from thousands. If the <xref href=\\\"System.Globalization.NumberStyles\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value includes the <xref href=\\\"System.Globalization.NumberStyles.AllowCurrencySymbol\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> flag and the string to be parsed includes a currency symbol, the valid group separator character is determined by the <xref href=\\\"System.Globalization.NumberFormatInfo.CurrencyGroupSeparator\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property,  and the number of digits in each group is determined by the <xref href=\\\"System.Globalization.NumberFormatInfo.CurrencyGroupSizes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property. Otherwise, the valid group separator character is determined by the <xref href=\\\"System.Globalization.NumberFormatInfo.NumberGroupSeparator\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property, and the number of digits in each group is determined by the <xref href=\\\"System.Globalization.NumberFormatInfo.NumberGroupSizes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property.</p>\\n\"\n  syntax:\n    content: AllowThousands = 64\n    return:\n      type: System.Globalization.NumberStyles\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: NumberStyles.AllowThousands\n- uid: System.Globalization.NumberStyles.AllowTrailingSign\n  commentId: F:System.Globalization.NumberStyles.AllowTrailingSign\n  id: AllowTrailingSign\n  parent: System.Globalization.NumberStyles\n  langs:\n  - csharp\n  - vb\n  name: AllowTrailingSign\n  fullName: System.Globalization.NumberStyles.AllowTrailingSign\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/NumberStyles.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: AllowTrailingSign\n    path: src/mscorlib/src/System/Globalization/NumberStyles.cs\n    startLine: 33\n  assemblies:\n  - System.Runtime\n  namespace: System.Globalization\n  summary: \"\\n<p>Indicates that the numeric string can have a trailing sign. Valid trailing sign characters are determined by the <xref href=\\\"System.Globalization.NumberFormatInfo.PositiveSign\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and <xref href=\\\"System.Globalization.NumberFormatInfo.NegativeSign\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> properties.</p>\\n\"\n  syntax:\n    content: AllowTrailingSign = 8\n    return:\n      type: System.Globalization.NumberStyles\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: NumberStyles.AllowTrailingSign\n- uid: System.Globalization.NumberStyles.AllowTrailingWhite\n  commentId: F:System.Globalization.NumberStyles.AllowTrailingWhite\n  id: AllowTrailingWhite\n  parent: System.Globalization.NumberStyles\n  langs:\n  - csharp\n  - vb\n  name: AllowTrailingWhite\n  fullName: System.Globalization.NumberStyles.AllowTrailingWhite\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/NumberStyles.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: AllowTrailingWhite\n    path: src/mscorlib/src/System/Globalization/NumberStyles.cs\n    startLine: 28\n  assemblies:\n  - System.Runtime\n  namespace: System.Globalization\n  summary: \"\\n<p>Indicates that trailing white-space characters can be present in the parsed string. Valid white-space characters have the Unicode values U+0009, U+000A, U+000B, U+000C, U+000D, and U+0020. Note that this is a subset of the characters for which the <xref href=\\\"System.Char.IsWhiteSpace(System.Char)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method returns <strong>true</strong>.</p>\\n\"\n  syntax:\n    content: AllowTrailingWhite = 2\n    return:\n      type: System.Globalization.NumberStyles\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: NumberStyles.AllowTrailingWhite\n- uid: System.Globalization.NumberStyles.Any\n  commentId: F:System.Globalization.NumberStyles.Any\n  id: Any\n  parent: System.Globalization.NumberStyles\n  langs:\n  - csharp\n  - vb\n  name: Any\n  fullName: System.Globalization.NumberStyles.Any\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/NumberStyles.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Any\n    path: src/mscorlib/src/System/Globalization/NumberStyles.cs\n    startLine: 62\n  assemblies:\n  - System.Runtime\n  namespace: System.Globalization\n  summary: \"\\n<p>Indicates that all styles except <xref href=\\\"System.Globalization.NumberStyles.AllowHexSpecifier\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> are used. This is a composite number style.</p>\\n\"\n  syntax:\n    content: Any = 511\n    return:\n      type: System.Globalization.NumberStyles\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: NumberStyles.Any\n- uid: System.Globalization.NumberStyles.Currency\n  commentId: F:System.Globalization.NumberStyles.Currency\n  id: Currency\n  parent: System.Globalization.NumberStyles\n  langs:\n  - csharp\n  - vb\n  name: Currency\n  fullName: System.Globalization.NumberStyles.Currency\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/NumberStyles.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Currency\n    path: src/mscorlib/src/System/Globalization/NumberStyles.cs\n    startLine: 59\n  assemblies:\n  - System.Runtime\n  namespace: System.Globalization\n  summary: \"\\n<p>Indicates that all styles except <xref href=\\\"System.Globalization.NumberStyles.AllowExponent\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and <xref href=\\\"System.Globalization.NumberStyles.AllowHexSpecifier\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> are used. This is a composite number style.</p>\\n\"\n  syntax:\n    content: Currency = 383\n    return:\n      type: System.Globalization.NumberStyles\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: NumberStyles.Currency\n- uid: System.Globalization.NumberStyles.Float\n  commentId: F:System.Globalization.NumberStyles.Float\n  id: Float\n  parent: System.Globalization.NumberStyles\n  langs:\n  - csharp\n  - vb\n  name: Float\n  fullName: System.Globalization.NumberStyles.Float\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/NumberStyles.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Float\n    path: src/mscorlib/src/System/Globalization/NumberStyles.cs\n    startLine: 56\n  assemblies:\n  - System.Runtime\n  namespace: System.Globalization\n  summary: \"\\n<p>Indicates that the <xref href=\\\"System.Globalization.NumberStyles.AllowLeadingWhite\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.Globalization.NumberStyles.AllowTrailingWhite\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.Globalization.NumberStyles.AllowLeadingSign\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.Globalization.NumberStyles.AllowDecimalPoint\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, and <xref href=\\\"System.Globalization.NumberStyles.AllowExponent\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> styles are used. This is a composite number style.</p>\\n\"\n  syntax:\n    content: Float = 167\n    return:\n      type: System.Globalization.NumberStyles\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: NumberStyles.Float\n- uid: System.Globalization.NumberStyles.HexNumber\n  commentId: F:System.Globalization.NumberStyles.HexNumber\n  id: HexNumber\n  parent: System.Globalization.NumberStyles\n  langs:\n  - csharp\n  - vb\n  name: HexNumber\n  fullName: System.Globalization.NumberStyles.HexNumber\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/NumberStyles.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: HexNumber\n    path: src/mscorlib/src/System/Globalization/NumberStyles.cs\n    startLine: 51\n  assemblies:\n  - System.Runtime\n  namespace: System.Globalization\n  summary: \"\\n<p>Indicates that the <xref href=\\\"System.Globalization.NumberStyles.AllowLeadingWhite\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.Globalization.NumberStyles.AllowTrailingWhite\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, and <xref href=\\\"System.Globalization.NumberStyles.AllowHexSpecifier\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> styles are used. This is a composite number style.</p>\\n\"\n  syntax:\n    content: HexNumber = 515\n    return:\n      type: System.Globalization.NumberStyles\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: NumberStyles.HexNumber\n- uid: System.Globalization.NumberStyles.Integer\n  commentId: F:System.Globalization.NumberStyles.Integer\n  id: Integer\n  parent: System.Globalization.NumberStyles\n  langs:\n  - csharp\n  - vb\n  name: Integer\n  fullName: System.Globalization.NumberStyles.Integer\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/NumberStyles.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Integer\n    path: src/mscorlib/src/System/Globalization/NumberStyles.cs\n    startLine: 49\n  assemblies:\n  - System.Runtime\n  namespace: System.Globalization\n  summary: \"\\n<p>Indicates that the <xref href=\\\"System.Globalization.NumberStyles.AllowLeadingWhite\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.Globalization.NumberStyles.AllowTrailingWhite\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, and <xref href=\\\"System.Globalization.NumberStyles.AllowLeadingSign\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> styles are used. This is a composite number style.</p>\\n\"\n  syntax:\n    content: Integer = 7\n    return:\n      type: System.Globalization.NumberStyles\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: NumberStyles.Integer\n- uid: System.Globalization.NumberStyles.None\n  commentId: F:System.Globalization.NumberStyles.None\n  id: None\n  parent: System.Globalization.NumberStyles\n  langs:\n  - csharp\n  - vb\n  name: None\n  fullName: System.Globalization.NumberStyles.None\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/NumberStyles.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: None\n    path: src/mscorlib/src/System/Globalization/NumberStyles.cs\n    startLine: 24\n  assemblies:\n  - System.Runtime\n  namespace: System.Globalization\n  summary: \"\\n<p>Indicates that no style elements, such as leading or trailing white space, thousands separators, or a decimal separator, can be present in the parsed string. The string to be parsed must consist of integral decimal digits only. </p>\\n\"\n  syntax:\n    content: None = 0\n    return:\n      type: System.Globalization.NumberStyles\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: NumberStyles.None\n- uid: System.Globalization.NumberStyles.Number\n  commentId: F:System.Globalization.NumberStyles.Number\n  id: Number\n  parent: System.Globalization.NumberStyles\n  langs:\n  - csharp\n  - vb\n  name: Number\n  fullName: System.Globalization.NumberStyles.Number\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/NumberStyles.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Number\n    path: src/mscorlib/src/System/Globalization/NumberStyles.cs\n    startLine: 53\n  assemblies:\n  - System.Runtime\n  namespace: System.Globalization\n  summary: \"\\n<p>Indicates that the <xref href=\\\"System.Globalization.NumberStyles.AllowLeadingWhite\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.Globalization.NumberStyles.AllowTrailingWhite\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.Globalization.NumberStyles.AllowLeadingSign\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.Globalization.NumberStyles.AllowTrailingSign\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.Globalization.NumberStyles.AllowDecimalPoint\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, and <xref href=\\\"System.Globalization.NumberStyles.AllowThousands\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> styles are used. This is a composite number style.</p>\\n\"\n  syntax:\n    content: Number = 111\n    return:\n      type: System.Globalization.NumberStyles\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: NumberStyles.Number\nreferences:\n- uid: System.Globalization\n  isExternal: false\n  name: System.Globalization\n  fullName: System.Globalization\n  nameWithType: System.Globalization\n  commentId: N:System.Globalization\n- uid: System.Globalization.NumberStyles\n  parent: System.Globalization\n  isExternal: false\n  name: NumberStyles\n  fullName: System.Globalization.NumberStyles\n  nameWithType: NumberStyles\n  commentId: T:System.Globalization.NumberStyles\n"}