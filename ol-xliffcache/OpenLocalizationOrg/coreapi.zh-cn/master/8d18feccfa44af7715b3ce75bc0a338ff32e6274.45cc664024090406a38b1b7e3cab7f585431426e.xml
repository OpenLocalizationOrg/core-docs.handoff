{"nodes":[{"pos":[362,386],"content":"FormattableStringFactory","needQuote":true,"nodes":[{"content":"FormattableStringFactory","pos":[0,24]}]},{"pos":[1991,2015],"content":"Create(String, Object[])","needQuote":true,"nodes":[{"content":"Create(String, Object[])","pos":[0,24]}]},{"content":"\\n&lt;p&gt;A composite format string.","pos":[3000,3031],"source":"\\n<p>A composite format string."},{"content":"&lt;/p&gt;\\n","pos":[3032,3038],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The arguments whose string representations are to be inserted in the result string.","pos":[3108,3196],"source":"\\n<p>The arguments whose string representations are to be inserted in the result string."},{"content":"&lt;/p&gt;\\n","pos":[3197,3203],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The object that represents the composite format string and its arguments.","pos":[3274,3352],"source":"\\n<p>The object that represents the composite format string and its arguments."},{"content":"&lt;/p&gt;\\n","pos":[3353,3359],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;format&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[3478,3526],"source":"\\n<p>\\n<em>format</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;arguments&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[3527,3595],"source":" </p>\\n<p>-or-</p>\\n<p>\\n<em>arguments</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[3596,3602],"source":" </p>\\n"},{"pos":[4045,4076],"content":"System.Runtime.CompilerServices","needQuote":true,"nodes":[{"content":"System.Runtime.CompilerServices","pos":[0,31]}]},{"pos":[4282,4288],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[4448,4458],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[4553,4561],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[4630,4631],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[4658,4659],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[4729,4737],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[4806,4807],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[4834,4835],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[5018,5032],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[5151,5157],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[5224,5225],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[5275,5281],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[5341,5342],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[5425,5431],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[5498,5499],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[5549,5555],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[5615,5616],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[5830,5852],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[6000,6006],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[6073,6074],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6124,6130],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[6191,6192]},{"pos":[6247,6253],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6313,6314],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6411,6417],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[6484,6485],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6535,6541],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[6602,6603]},{"pos":[6658,6664],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6724,6725],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6970,7001],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[7167,7182],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[7258,7259],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7309,7315],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[7376,7377]},{"pos":[7432,7438],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7498,7499],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7605,7620],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[7696,7697],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7747,7753],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[7814,7815]},{"pos":[7870,7876],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7936,7937],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8167,8180],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[8281,8292],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[8364,8365],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8392,8393],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8466,8477],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[8549,8550],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8577,8578],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8753,8762],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[8855,8862],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[8930,8931],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8958,8959],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9028,9035],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[9103,9104],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9131,9132],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9307,9324],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[9433,9448],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[9524,9525],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9552,9553],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9630,9645],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[9721,9722],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9749,9750],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9895,9901],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[10032,10038],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[10148,10156],"content":"Object[]","needQuote":true,"nodes":[{"content":"Object[]","pos":[0,8]}]},{"pos":[10284,10290],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":"[]","pos":[10351,10353]},{"pos":[10418,10424],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10484,10486],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[10634,10651],"content":"FormattableString","needQuote":true,"nodes":[{"content":"FormattableString","pos":[0,17]}]},{"pos":[10827,10848],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]}],"content":"items:\n- uid: System.Runtime.CompilerServices.FormattableStringFactory\n  commentId: T:System.Runtime.CompilerServices.FormattableStringFactory\n  id: FormattableStringFactory\n  parent: System.Runtime.CompilerServices\n  children:\n  - System.Runtime.CompilerServices.FormattableStringFactory.Create(System.String,System.Object[])\n  langs:\n  - csharp\n  - vb\n  name: FormattableStringFactory\n  fullName: System.Runtime.CompilerServices.FormattableStringFactory\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/CompilerServices/FormattableStringFactory.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: FormattableStringFactory\n    path: src/mscorlib/src/System/Runtime/CompilerServices/FormattableStringFactory.cs\n    startLine: 18\n  assemblies:\n  - System.Runtime\n  namespace: System.Runtime.CompilerServices\n  summary: \"\\n<p>Provides a static method to create a <xref href=\\\"System.FormattableString\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object from a composite format string and its arguments. </p>\\n\"\n  syntax:\n    content: public class FormattableStringFactory\n    content.vb: Public Class FormattableStringFactory\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: FormattableStringFactory\n- uid: System.Runtime.CompilerServices.FormattableStringFactory.Create(System.String,System.Object[])\n  commentId: M:System.Runtime.CompilerServices.FormattableStringFactory.Create(System.String,System.Object[])\n  id: Create(System.String,System.Object[])\n  parent: System.Runtime.CompilerServices.FormattableStringFactory\n  langs:\n  - csharp\n  - vb\n  name: Create(String, Object[])\n  fullName: System.Runtime.CompilerServices.FormattableStringFactory.Create(System.String, System.Object[])\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/CompilerServices/FormattableStringFactory.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Create\n    path: src/mscorlib/src/System/Runtime/CompilerServices/FormattableStringFactory.cs\n    startLine: 24\n  assemblies:\n  - System.Runtime\n  namespace: System.Runtime.CompilerServices\n  summary: \"\\n<p>Creates a <xref href=\\\"System.FormattableString\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance from a composite format string and its arguments. </p>\\n\"\n  syntax:\n    content: public static FormattableString Create(string format, params object[] arguments)\n    content.vb: Public Shared Function Create(format As String, ParamArray arguments As Object()) As FormattableString\n    parameters:\n    - id: format\n      type: System.String\n      description: \"\\n<p>A composite format string. </p>\\n\"\n    - id: arguments\n      type: System.Object[]\n      description: \"\\n<p>The arguments whose string representations are to be inserted in the result string. </p>\\n\"\n    return:\n      type: System.FormattableString\n      description: \"\\n<p>The object that represents the composite format string and its arguments. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>format</em> is <strong>null</strong>. </p>\\n<p>-or-</p>\\n<p>\\n<em>arguments</em> is <strong>null</strong>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Runtime.CompilerServices.FormattableStringFactory.Create(System.String, System.Object())\n  name.vb: Create(String, Object())\n  nameWithType: FormattableStringFactory.Create(String, Object[])\n  nameWithType.vb: FormattableStringFactory.Create(String, Object())\nreferences:\n- uid: System.Runtime.CompilerServices\n  isExternal: false\n  name: System.Runtime.CompilerServices\n  fullName: System.Runtime.CompilerServices\n  nameWithType: System.Runtime.CompilerServices\n  commentId: N:System.Runtime.CompilerServices\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.Object[]\n  name: Object[]\n  fullName: System.Object[]\n  fullname.vb: System.Object()\n  name.vb: Object()\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: Object[]\n  nameWithType.vb: Object()\n- uid: System.FormattableString\n  parent: System\n  isExternal: false\n  name: FormattableString\n  fullName: System.FormattableString\n  nameWithType: FormattableString\n  commentId: T:System.FormattableString\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n"}