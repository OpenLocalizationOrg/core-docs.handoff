{"nodes":[{"pos":[562,573],"content":"FlowControl","needQuote":true,"nodes":[{"content":"FlowControl","pos":[0,11]}]},{"pos":[1565,1571],"content":"Branch","needQuote":true,"nodes":[{"content":"Branch","pos":[0,6]}]},{"pos":[2427,2432],"content":"Break","needQuote":true,"nodes":[{"content":"Break","pos":[0,5]}]},{"pos":[3280,3284],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[4148,4159],"content":"Cond_Branch","needQuote":true,"nodes":[{"content":"Cond_Branch","pos":[0,11]}]},{"pos":[5044,5048],"content":"Meta","needQuote":true,"nodes":[{"content":"Meta","pos":[0,4]}]},{"pos":[6138,6142],"content":"Next","needQuote":true,"nodes":[{"content":"Next","pos":[0,4]}]},{"pos":[6997,7003],"content":"Return","needQuote":true,"nodes":[{"content":"Return","pos":[0,6]}]},{"pos":[7859,7864],"content":"Throw","needQuote":true,"nodes":[{"content":"Throw","pos":[0,5]}]},{"pos":[8599,8621],"content":"System.Reflection.Emit","needQuote":true,"nodes":[{"content":"System.Reflection.Emit","pos":[0,22]}]},{"pos":[8837,8848],"content":"FlowControl","needQuote":true,"nodes":[{"content":"FlowControl","pos":[0,11]}]}],"content":"items:\n- uid: System.Reflection.Emit.FlowControl\n  commentId: T:System.Reflection.Emit.FlowControl\n  id: FlowControl\n  parent: System.Reflection.Emit\n  children:\n  - System.Reflection.Emit.FlowControl.Branch\n  - System.Reflection.Emit.FlowControl.Break\n  - System.Reflection.Emit.FlowControl.Call\n  - System.Reflection.Emit.FlowControl.Cond_Branch\n  - System.Reflection.Emit.FlowControl.Meta\n  - System.Reflection.Emit.FlowControl.Next\n  - System.Reflection.Emit.FlowControl.Return\n  - System.Reflection.Emit.FlowControl.Throw\n  langs:\n  - csharp\n  - vb\n  name: FlowControl\n  fullName: System.Reflection.Emit.FlowControl\n  type: Enum\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/FlowControl.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: FlowControl\n    path: src/mscorlib/src/System/Reflection/Emit/FlowControl.cs\n    startLine: 17\n  assemblies:\n  - System.Reflection.Primitives\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Describes how an instruction alters the flow of control.</p>\\n\"\n  syntax:\n    content: >-\n      [Serializable]\n\n      [ComVisible(true)]\n\n      public enum FlowControl\n    content.vb: >-\n      <Serializable>\n\n      <ComVisible(True)>\n\n      Public Enum FlowControl\n  modifiers.csharp:\n  - public\n  - enum\n  modifiers.vb:\n  - Public\n  - Enum\n  nameWithType: FlowControl\n- uid: System.Reflection.Emit.FlowControl.Branch\n  commentId: F:System.Reflection.Emit.FlowControl.Branch\n  id: Branch\n  parent: System.Reflection.Emit.FlowControl\n  langs:\n  - csharp\n  - vb\n  name: Branch\n  fullName: System.Reflection.Emit.FlowControl.Branch\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/FlowControl.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Branch\n    path: src/mscorlib/src/System/Reflection/Emit/FlowControl.cs\n    startLine: 22\n  assemblies:\n  - System.Reflection.Primitives\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Branch instruction.</p>\\n\"\n  syntax:\n    content: Branch = 0\n    return:\n      type: System.Reflection.Emit.FlowControl\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: FlowControl.Branch\n- uid: System.Reflection.Emit.FlowControl.Break\n  commentId: F:System.Reflection.Emit.FlowControl.Break\n  id: Break\n  parent: System.Reflection.Emit.FlowControl\n  langs:\n  - csharp\n  - vb\n  name: Break\n  fullName: System.Reflection.Emit.FlowControl.Break\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/FlowControl.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Break\n    path: src/mscorlib/src/System/Reflection/Emit/FlowControl.cs\n    startLine: 23\n  assemblies:\n  - System.Reflection.Primitives\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Break instruction.</p>\\n\"\n  syntax:\n    content: Break = 1\n    return:\n      type: System.Reflection.Emit.FlowControl\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: FlowControl.Break\n- uid: System.Reflection.Emit.FlowControl.Call\n  commentId: F:System.Reflection.Emit.FlowControl.Call\n  id: Call\n  parent: System.Reflection.Emit.FlowControl\n  langs:\n  - csharp\n  - vb\n  name: Call\n  fullName: System.Reflection.Emit.FlowControl.Call\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/FlowControl.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Call\n    path: src/mscorlib/src/System/Reflection/Emit/FlowControl.cs\n    startLine: 24\n  assemblies:\n  - System.Reflection.Primitives\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Call instruction.</p>\\n\"\n  syntax:\n    content: Call = 2\n    return:\n      type: System.Reflection.Emit.FlowControl\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: FlowControl.Call\n- uid: System.Reflection.Emit.FlowControl.Cond_Branch\n  commentId: F:System.Reflection.Emit.FlowControl.Cond_Branch\n  id: Cond_Branch\n  parent: System.Reflection.Emit.FlowControl\n  langs:\n  - csharp\n  - vb\n  name: Cond_Branch\n  fullName: System.Reflection.Emit.FlowControl.Cond_Branch\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/FlowControl.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Cond_Branch\n    path: src/mscorlib/src/System/Reflection/Emit/FlowControl.cs\n    startLine: 25\n  assemblies:\n  - System.Reflection.Primitives\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Conditional branch instruction.</p>\\n\"\n  syntax:\n    content: Cond_Branch = 3\n    return:\n      type: System.Reflection.Emit.FlowControl\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: FlowControl.Cond_Branch\n- uid: System.Reflection.Emit.FlowControl.Meta\n  commentId: F:System.Reflection.Emit.FlowControl.Meta\n  id: Meta\n  parent: System.Reflection.Emit.FlowControl\n  langs:\n  - csharp\n  - vb\n  name: Meta\n  fullName: System.Reflection.Emit.FlowControl.Meta\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/FlowControl.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Meta\n    path: src/mscorlib/src/System/Reflection/Emit/FlowControl.cs\n    startLine: 26\n  assemblies:\n  - System.Reflection.Primitives\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Provides information about a subsequent instruction. For example, the <strong>Unaligned</strong> instruction of <strong>Reflection.Emit.Opcodes</strong> has <strong>FlowControl.Meta</strong> and specifies that the subsequent pointer instruction might be unaligned.</p>\\n\"\n  syntax:\n    content: Meta = 4\n    return:\n      type: System.Reflection.Emit.FlowControl\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: FlowControl.Meta\n- uid: System.Reflection.Emit.FlowControl.Next\n  commentId: F:System.Reflection.Emit.FlowControl.Next\n  id: Next\n  parent: System.Reflection.Emit.FlowControl\n  langs:\n  - csharp\n  - vb\n  name: Next\n  fullName: System.Reflection.Emit.FlowControl.Next\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/FlowControl.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Next\n    path: src/mscorlib/src/System/Reflection/Emit/FlowControl.cs\n    startLine: 27\n  assemblies:\n  - System.Reflection.Primitives\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Normal flow of control.</p>\\n\"\n  syntax:\n    content: Next = 5\n    return:\n      type: System.Reflection.Emit.FlowControl\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: FlowControl.Next\n- uid: System.Reflection.Emit.FlowControl.Return\n  commentId: F:System.Reflection.Emit.FlowControl.Return\n  id: Return\n  parent: System.Reflection.Emit.FlowControl\n  langs:\n  - csharp\n  - vb\n  name: Return\n  fullName: System.Reflection.Emit.FlowControl.Return\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/FlowControl.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Return\n    path: src/mscorlib/src/System/Reflection/Emit/FlowControl.cs\n    startLine: 33\n  assemblies:\n  - System.Reflection.Primitives\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Return instruction.</p>\\n\"\n  syntax:\n    content: Return = 7\n    return:\n      type: System.Reflection.Emit.FlowControl\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: FlowControl.Return\n- uid: System.Reflection.Emit.FlowControl.Throw\n  commentId: F:System.Reflection.Emit.FlowControl.Throw\n  id: Throw\n  parent: System.Reflection.Emit.FlowControl\n  langs:\n  - csharp\n  - vb\n  name: Throw\n  fullName: System.Reflection.Emit.FlowControl.Throw\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/FlowControl.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Throw\n    path: src/mscorlib/src/System/Reflection/Emit/FlowControl.cs\n    startLine: 34\n  assemblies:\n  - System.Reflection.Primitives\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Exception throw instruction.</p>\\n\"\n  syntax:\n    content: Throw = 8\n    return:\n      type: System.Reflection.Emit.FlowControl\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: FlowControl.Throw\nreferences:\n- uid: System.Reflection.Emit\n  isExternal: false\n  name: System.Reflection.Emit\n  fullName: System.Reflection.Emit\n  nameWithType: System.Reflection.Emit\n  commentId: N:System.Reflection.Emit\n- uid: System.Reflection.Emit.FlowControl\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: FlowControl\n  fullName: System.Reflection.Emit.FlowControl\n  nameWithType: FlowControl\n  commentId: T:System.Reflection.Emit.FlowControl\n"}