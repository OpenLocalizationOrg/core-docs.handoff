{"nodes":[{"pos":[394,412],"content":"PipesAclExtensions","needQuote":true,"nodes":[{"content":"PipesAclExtensions","pos":[0,18]}]},{"pos":[1734,1762],"content":"GetAccessControl(PipeStream)","needQuote":true,"nodes":[{"content":"GetAccessControl(PipeStream)","pos":[0,28]}]},{"pos":[3366,3408],"content":"SetAccessControl(PipeStream, PipeSecurity)","needQuote":true,"nodes":[{"content":"SetAccessControl(PipeStream, PipeSecurity)","pos":[0,42]}]},{"pos":[4763,4778],"content":"System.IO.Pipes","needQuote":true,"nodes":[{"content":"System.IO.Pipes","pos":[0,15]}]},{"pos":[4934,4940],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[5109,5119],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[5248,5256],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[5359,5360],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[5407,5408],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[5498,5506],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[5609,5610],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[5657,5658],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[5840,5854],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[6011,6017],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[6116,6117],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6187,6193],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6278,6279],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6382,6388],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[6487,6488],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6558,6564],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6649,6650],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6860,6882],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[7076,7082],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[7181,7182],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7252,7258],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[7344,7345]},{"pos":[7423,7429],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7514,7515],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7632,7638],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[7737,7738],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7808,7814],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[7900,7901]},{"pos":[7979,7985],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8070,8071],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8299,8330],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[8551,8566],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[8683,8684],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8754,8760],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[8846,8847]},{"pos":[8925,8931],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9016,9017],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9143,9158],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[9275,9276],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9346,9352],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[9438,9439]},{"pos":[9517,9523],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9608,9609],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9771,9784],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[9922,9933],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[10042,10043],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10090,10091],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10184,10195],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[10304,10305],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10352,10353],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10507,10516],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[10642,10649],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[10750,10751],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10798,10799],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10888,10895],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[10996,10997],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11044,11045],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11215,11232],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[11382,11397],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[11514,11515],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11562,11563],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11660,11675],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[11792,11793],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11840,11841],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11942,11948],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[12121,12131],"content":"PipeStream","needQuote":true,"nodes":[{"content":"PipeStream","pos":[0,10]}]},{"pos":[12332,12344],"content":"PipeSecurity","needQuote":true,"nodes":[{"content":"PipeSecurity","pos":[0,12]}]}],"content":"items:\n- uid: System.IO.Pipes.PipesAclExtensions\n  commentId: T:System.IO.Pipes.PipesAclExtensions\n  id: PipesAclExtensions\n  parent: System.IO.Pipes\n  children:\n  - System.IO.Pipes.PipesAclExtensions.GetAccessControl(System.IO.Pipes.PipeStream)\n  - System.IO.Pipes.PipesAclExtensions.SetAccessControl(System.IO.Pipes.PipeStream,System.IO.Pipes.PipeSecurity)\n  langs:\n  - csharp\n  - vb\n  name: PipesAclExtensions\n  nameWithType: PipesAclExtensions\n  fullName: System.IO.Pipes.PipesAclExtensions\n  type: Class\n  source:\n    remote:\n      path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: PipesAclExtensions\n    path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n    startLine: 42\n  assemblies:\n  - System.IO.Pipes.AccessControl\n  namespace: System.IO.Pipes\n  syntax:\n    content: public class PipesAclExtensions\n    content.vb: Public Class PipesAclExtensions\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n- uid: System.IO.Pipes.PipesAclExtensions.GetAccessControl(System.IO.Pipes.PipeStream)\n  commentId: M:System.IO.Pipes.PipesAclExtensions.GetAccessControl(System.IO.Pipes.PipeStream)\n  id: GetAccessControl(System.IO.Pipes.PipeStream)\n  isExtensionMethod: true\n  parent: System.IO.Pipes.PipesAclExtensions\n  langs:\n  - csharp\n  - vb\n  name: GetAccessControl(PipeStream)\n  nameWithType: PipesAclExtensions.GetAccessControl(PipeStream)\n  fullName: System.IO.Pipes.PipesAclExtensions.GetAccessControl(System.IO.Pipes.PipeStream)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetAccessControl\n    path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n    startLine: 43\n  assemblies:\n  - System.IO.Pipes.AccessControl\n  namespace: System.IO.Pipes\n  syntax:\n    content: >-\n      [SecurityCritical]\n\n      public static PipeSecurity GetAccessControl(this PipeStream stream)\n    content.vb: >-\n      <SecurityCritical>\n\n      <ExtensionAttribute>\n\n      Public Shared Function GetAccessControl(stream As PipeStream) As PipeSecurity\n    parameters:\n    - id: stream\n      type: System.IO.Pipes.PipeStream\n    return:\n      type: System.IO.Pipes.PipeSecurity\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n    ctor: System.Security.SecurityCriticalAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n- uid: System.IO.Pipes.PipesAclExtensions.SetAccessControl(System.IO.Pipes.PipeStream,System.IO.Pipes.PipeSecurity)\n  commentId: M:System.IO.Pipes.PipesAclExtensions.SetAccessControl(System.IO.Pipes.PipeStream,System.IO.Pipes.PipeSecurity)\n  id: SetAccessControl(System.IO.Pipes.PipeStream,System.IO.Pipes.PipeSecurity)\n  isExtensionMethod: true\n  parent: System.IO.Pipes.PipesAclExtensions\n  langs:\n  - csharp\n  - vb\n  name: SetAccessControl(PipeStream, PipeSecurity)\n  nameWithType: PipesAclExtensions.SetAccessControl(PipeStream, PipeSecurity)\n  fullName: System.IO.Pipes.PipesAclExtensions.SetAccessControl(System.IO.Pipes.PipeStream, System.IO.Pipes.PipeSecurity)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetAccessControl\n    path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n    startLine: 45\n  assemblies:\n  - System.IO.Pipes.AccessControl\n  namespace: System.IO.Pipes\n  syntax:\n    content: >-\n      [SecurityCritical]\n\n      public static void SetAccessControl(this PipeStream stream, PipeSecurity pipeSecurity)\n    content.vb: >-\n      <SecurityCritical>\n\n      <ExtensionAttribute>\n\n      Public Shared Sub SetAccessControl(stream As PipeStream, pipeSecurity As PipeSecurity)\n    parameters:\n    - id: stream\n      type: System.IO.Pipes.PipeStream\n    - id: pipeSecurity\n      type: System.IO.Pipes.PipeSecurity\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n    ctor: System.Security.SecurityCriticalAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\nreferences:\n- uid: System.IO.Pipes\n  commentId: N:System.IO.Pipes\n  isExternal: false\n  name: System.IO.Pipes\n  nameWithType: System.IO.Pipes\n  fullName: System.IO.Pipes\n- uid: System.Object\n  commentId: T:System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Object.ToString\n  commentId: M:System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    nameWithType: Object.ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    nameWithType: Object.ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.Equals(System.Object)\n  commentId: M:System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    nameWithType: Object.Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    nameWithType: Object.Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.Equals(System.Object,System.Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    nameWithType: Object.Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    nameWithType: Object.Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    nameWithType: Object.ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    nameWithType: Object.ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.GetHashCode\n  commentId: M:System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    nameWithType: Object.GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    nameWithType: Object.GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.GetType\n  commentId: M:System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    nameWithType: Object.GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    nameWithType: Object.GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.MemberwiseClone\n  commentId: M:System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    nameWithType: Object.MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    nameWithType: Object.MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System\n  commentId: N:System\n  isExternal: false\n  name: System\n  nameWithType: System\n  fullName: System\n- uid: System.IO.Pipes.PipeStream\n  commentId: T:System.IO.Pipes.PipeStream\n  parent: System.IO.Pipes\n  isExternal: false\n  name: PipeStream\n  nameWithType: PipeStream\n  fullName: System.IO.Pipes.PipeStream\n- uid: System.IO.Pipes.PipeSecurity\n  commentId: T:System.IO.Pipes.PipeSecurity\n  parent: System.IO.Pipes\n  isExternal: false\n  name: PipeSecurity\n  nameWithType: PipeSecurity\n  fullName: System.IO.Pipes.PipeSecurity\n"}