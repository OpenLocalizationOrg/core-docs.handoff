{"nodes":[{"pos":[1036,1054],"content":"InvokeMemberBinder","needQuote":true,"nodes":[{"content":"InvokeMemberBinder","pos":[0,18]}]},{"pos":[3499,3544],"content":"InvokeMemberBinder(String, Boolean, CallInfo)","needQuote":true,"nodes":[{"content":"InvokeMemberBinder(String, Boolean, CallInfo)","pos":[0,45]}]},{"content":"\\n&lt;p&gt;The name of the member to invoke.&lt;/p&gt;\\n","pos":[4463,4507],"source":"\\n<p>The name of the member to invoke.</p>\\n"},{"content":"\\n&lt;p&gt;true if the name should be matched ignoring case; false otherwise.&lt;/p&gt;\\n","pos":[4577,4654],"source":"\\n<p>true if the name should be matched ignoring case; false otherwise.</p>\\n"},{"content":"\\n&lt;p&gt;The signature of the arguments at the call site.&lt;/p&gt;\\n","pos":[4731,4790],"source":"\\n<p>The signature of the arguments at the call site.</p>\\n"},{"pos":[5139,5147],"content":"CallInfo","needQuote":true,"nodes":[{"content":"CallInfo","pos":[0,8]}]},{"content":"\\n&lt;p&gt;The signature of the arguments at the call site.&lt;/p&gt;\\n","pos":[5858,5917],"source":"\\n<p>The signature of the arguments at the call site.</p>\\n"},{"pos":[6250,6260],"content":"IgnoreCase","needQuote":true,"nodes":[{"content":"IgnoreCase","pos":[0,10]}]},{"content":"\\n&lt;p&gt;True if the case is ignored, otherwise false.&lt;/p&gt;\\n","pos":[7005,7061],"source":"\\n<p>True if the case is ignored, otherwise false.</p>\\n"},{"pos":[7378,7382],"content":"Name","needQuote":true,"nodes":[{"content":"Name","pos":[0,4]}]},{"content":"\\n&lt;p&gt;The name of the member to invoke.&lt;/p&gt;\\n","pos":[8048,8092],"source":"\\n<p>The name of the member to invoke.</p>\\n"},{"pos":[8421,8431],"content":"ReturnType","needQuote":true,"nodes":[{"content":"ReturnType","pos":[0,10]}]},{"pos":[9936,9980],"content":"Bind(DynamicMetaObject, DynamicMetaObject[])","needQuote":true,"nodes":[{"content":"Bind(DynamicMetaObject, DynamicMetaObject[])","pos":[0,44]}]},{"content":"\\n&lt;p&gt;The target of the dynamic invoke member operation.&lt;/p&gt;\\n","pos":[10912,10973],"source":"\\n<p>The target of the dynamic invoke member operation.</p>\\n"},{"content":"\\n&lt;p&gt;An array of arguments of the dynamic invoke member operation.&lt;/p&gt;\\n","pos":[11057,11129],"source":"\\n<p>An array of arguments of the dynamic invoke member operation.</p>\\n"},{"pos":[12468,12541],"content":"FallbackInvoke(DynamicMetaObject, DynamicMetaObject[], DynamicMetaObject)","needQuote":true,"nodes":[{"content":"FallbackInvoke(DynamicMetaObject, DynamicMetaObject[], DynamicMetaObject)","pos":[0,73]}]},{"content":"\\n&lt;p&gt;The target of the dynamic invoke operation.&lt;/p&gt;\\n","pos":[13674,13728],"source":"\\n<p>The target of the dynamic invoke operation.</p>\\n"},{"content":"\\n&lt;p&gt;The arguments of the dynamic invoke operation.&lt;/p&gt;\\n","pos":[13812,13869],"source":"\\n<p>The arguments of the dynamic invoke operation.</p>\\n"},{"content":"\\n&lt;p&gt;The binding result to use if binding fails, or null.&lt;/p&gt;\\n","pos":[13962,14025],"source":"\\n<p>The binding result to use if binding fails, or null.</p>\\n"},{"pos":[15260,15320],"content":"FallbackInvokeMember(DynamicMetaObject, DynamicMetaObject[])","needQuote":true,"nodes":[{"content":"FallbackInvokeMember(DynamicMetaObject, DynamicMetaObject[])","pos":[0,60]}]},{"content":"\\n&lt;p&gt;The target of the dynamic invoke member operation.&lt;/p&gt;\\n","pos":[16317,16378],"source":"\\n<p>The target of the dynamic invoke member operation.</p>\\n"},{"content":"\\n&lt;p&gt;The arguments of the dynamic invoke member operation.&lt;/p&gt;\\n","pos":[16462,16526],"source":"\\n<p>The arguments of the dynamic invoke member operation.</p>\\n"},{"pos":[17763,17842],"content":"FallbackInvokeMember(DynamicMetaObject, DynamicMetaObject[], DynamicMetaObject)","needQuote":true,"nodes":[{"content":"FallbackInvokeMember(DynamicMetaObject, DynamicMetaObject[], DynamicMetaObject)","pos":[0,79]}]},{"content":"\\n&lt;p&gt;The target of the dynamic invoke member operation.&lt;/p&gt;\\n","pos":[19006,19067],"source":"\\n<p>The target of the dynamic invoke member operation.</p>\\n"},{"content":"\\n&lt;p&gt;The arguments of the dynamic invoke member operation.&lt;/p&gt;\\n","pos":[19151,19215],"source":"\\n<p>The arguments of the dynamic invoke member operation.</p>\\n"},{"content":"\\n&lt;p&gt;The binding result to use if binding fails, or null.&lt;/p&gt;\\n","pos":[19308,19371],"source":"\\n<p>The binding result to use if binding fails, or null.</p>\\n"},{"pos":[20247,20261],"content":"System.Dynamic","needQuote":true,"nodes":[{"content":"System.Dynamic","pos":[0,14]}]},{"pos":[20416,20422],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[20625,20639],"content":"CallSiteBinder","needQuote":true,"nodes":[{"content":"CallSiteBinder","pos":[0,14]}]},{"pos":[20891,20914],"content":"DynamicMetaObjectBinder","needQuote":true,"nodes":[{"content":"DynamicMetaObjectBinder","pos":[0,23]}]},{"pos":[21335,21403],"content":"Bind(Object[], ReadOnlyCollection<ParameterExpression>, LabelTarget)","needQuote":true,"nodes":[{"content":"Bind(Object[], ReadOnlyCollection&lt;ParameterExpression&gt;, LabelTarget)","pos":[0,68],"source":"Bind(Object[], ReadOnlyCollection<ParameterExpression>, LabelTarget)"}]},{"pos":[22131,22135],"content":"Bind","needQuote":true,"nodes":[{"content":"Bind","pos":[0,4]}]},{"pos":[22204,22205],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22255,22261],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":"[]","pos":[22322,22324]},{"content":",","pos":[22356,22357]},{"pos":[22450,22468],"content":"ReadOnlyCollection","needQuote":true,"nodes":[{"content":"ReadOnlyCollection","pos":[0,18]}]},{"pos":[22564,22565],"content":"<","needQuote":true,"nodes":[]},{"pos":[22645,22664],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":",","pos":[22787,22788]},{"pos":[22865,22876],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[22958,22959],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23198,23202],"content":"Bind","needQuote":true,"nodes":[{"content":"Bind","pos":[0,4]}]},{"pos":[23271,23272],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23322,23328],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[23388,23390],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[23419,23420]},{"pos":[23513,23531],"content":"ReadOnlyCollection","needQuote":true,"nodes":[{"content":"ReadOnlyCollection","pos":[0,18]}]},{"content":"(Of","pos":[23628,23631]},{"pos":[23718,23737],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[23827,23828],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[23856,23857]},{"pos":[23934,23945],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[24027,24028],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24674,24719],"content":"Defer(DynamicMetaObject, DynamicMetaObject[])","needQuote":true,"nodes":[{"content":"Defer(DynamicMetaObject, DynamicMetaObject[])","pos":[0,45]}]},{"pos":[25182,25187],"content":"Defer","needQuote":true,"nodes":[{"content":"Defer","pos":[0,5]}]},{"pos":[25257,25258],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25327,25344],"content":"DynamicMetaObject","needQuote":true,"nodes":[{"content":"DynamicMetaObject","pos":[0,17]}]},{"content":",","pos":[25403,25404]},{"pos":[25478,25495],"content":"DynamicMetaObject","needQuote":true,"nodes":[{"content":"DynamicMetaObject","pos":[0,17]}]},{"content":"[]","pos":[25554,25556]},{"pos":[25587,25588],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25749,25754],"content":"Defer","needQuote":true,"nodes":[{"content":"Defer","pos":[0,5]}]},{"pos":[25824,25825],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25894,25911],"content":"DynamicMetaObject","needQuote":true,"nodes":[{"content":"DynamicMetaObject","pos":[0,17]}]},{"content":",","pos":[25970,25971]},{"pos":[26045,26062],"content":"DynamicMetaObject","needQuote":true,"nodes":[{"content":"DynamicMetaObject","pos":[0,17]}]},{"pos":[26120,26122],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[26150,26151],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26637,26663],"content":"Defer(DynamicMetaObject[])","needQuote":true,"nodes":[{"content":"Defer(DynamicMetaObject[])","pos":[0,26]}]},{"pos":[27006,27011],"content":"Defer","needQuote":true,"nodes":[{"content":"Defer","pos":[0,5]}]},{"pos":[27081,27082],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27151,27168],"content":"DynamicMetaObject","needQuote":true,"nodes":[{"content":"DynamicMetaObject","pos":[0,17]}]},{"content":"[]","pos":[27227,27229]},{"pos":[27260,27261],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27389,27394],"content":"Defer","needQuote":true,"nodes":[{"content":"Defer","pos":[0,5]}]},{"pos":[27464,27465],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27534,27551],"content":"DynamicMetaObject","needQuote":true,"nodes":[{"content":"DynamicMetaObject","pos":[0,17]}]},{"pos":[27609,27611],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[27639,27640],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28045,28070],"content":"GetUpdateExpression(Type)","needQuote":true,"nodes":[{"content":"GetUpdateExpression(Type)","pos":[0,25]}]},{"pos":[28261,28280],"content":"GetUpdateExpression","needQuote":true,"nodes":[{"content":"GetUpdateExpression","pos":[0,19]}]},{"pos":[28364,28365],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28413,28417],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[28475,28476],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28595,28614],"content":"GetUpdateExpression","needQuote":true,"nodes":[{"content":"GetUpdateExpression","pos":[0,19]}]},{"pos":[28698,28699],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28747,28751],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[28809,28810],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29131,29142],"content":"UpdateLabel","needQuote":true,"nodes":[{"content":"UpdateLabel","pos":[0,11]}]},{"pos":[29669,29707],"content":"BindDelegate<T>(CallSite<T>, Object[])","needQuote":true,"nodes":[{"content":"BindDelegate&lt;T&gt;(CallSite&lt;T&gt;, Object[])","pos":[0,38],"source":"BindDelegate<T>(CallSite<T>, Object[])"}]},{"pos":[30207,30222],"content":"BindDelegate<T>","needQuote":true,"nodes":[{"content":"BindDelegate&lt;T&gt;","pos":[0,15],"source":"BindDelegate<T>"}]},{"pos":[30310,30311],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30390,30398],"content":"CallSite","needQuote":true,"nodes":[{"content":"CallSite","pos":[0,8]}]},{"pos":[30464,30465],"content":"<","needQuote":true,"nodes":[]},{"pos":[30492,30493],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[30553,30554]},{"pos":[30609,30615],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":"[]","pos":[30676,30678]},{"pos":[30709,30710],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30883,30901],"content":"BindDelegate(Of T)","needQuote":true,"nodes":[{"content":"BindDelegate(Of T)","pos":[0,18]}]},{"pos":[30992,30993],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31072,31080],"content":"CallSite","needQuote":true,"nodes":[{"content":"CallSite","pos":[0,8]}]},{"content":"(Of","pos":[31147,31150]},{"pos":[31184,31185],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[31212,31213],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[31241,31242]},{"pos":[31297,31303],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[31363,31365],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[31393,31394],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31921,31938],"content":"CacheTarget<T>(T)","needQuote":true,"nodes":[{"content":"CacheTarget&lt;T&gt;(T)","pos":[0,17],"source":"CacheTarget<T>(T)"}]},{"pos":[32232,32246],"content":"CacheTarget<T>","needQuote":true,"nodes":[{"content":"CacheTarget&lt;T&gt;","pos":[0,14],"source":"CacheTarget<T>"}]},{"pos":[32333,32334],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[32361,32362],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[32389,32390],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[32504,32521],"content":"CacheTarget(Of T)","needQuote":true,"nodes":[{"content":"CacheTarget(Of T)","pos":[0,17]}]},{"pos":[32611,32612],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[32639,32640],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[32667,32668],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[32952,32962],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[33057,33065],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[33134,33135],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[33162,33163],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[33233,33241],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[33310,33311],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[33338,33339],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[33522,33536],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[33655,33661],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[33728,33729],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[33779,33785],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[33845,33846],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[33929,33935],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[34002,34003],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[34053,34059],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[34119,34120],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34334,34356],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[34504,34510],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[34577,34578],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[34628,34634],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[34695,34696]},{"pos":[34751,34757],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[34817,34818],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34915,34921],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[34988,34989],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[35039,35045],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[35106,35107]},{"pos":[35162,35168],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[35228,35229],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[35474,35505],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[35671,35686],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[35762,35763],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[35813,35819],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[35880,35881]},{"pos":[35936,35942],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[36002,36003],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[36109,36124],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[36200,36201],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[36251,36257],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[36318,36319]},{"pos":[36374,36380],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[36440,36441],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[36671,36684],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[36785,36796],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[36868,36869],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[36896,36897],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[36970,36981],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[37053,37054],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[37081,37082],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[37257,37266],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[37359,37366],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[37434,37435],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[37462,37463],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[37532,37539],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[37607,37608],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[37635,37636],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[37811,37828],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[37937,37952],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[38028,38029],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[38056,38057],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[38134,38149],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[38225,38226],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[38253,38254],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[38399,38405],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[38537,38568],"content":"System.Runtime.CompilerServices","needQuote":true,"nodes":[{"content":"System.Runtime.CompilerServices","pos":[0,31]}]},{"pos":[38868,38906],"content":"BindDelegate<T>(CallSite<T>, Object[])","needQuote":true,"nodes":[{"content":"BindDelegate&lt;T&gt;(CallSite&lt;T&gt;, Object[])","pos":[0,38],"source":"BindDelegate<T>(CallSite<T>, Object[])"}]},{"pos":[39406,39421],"content":"BindDelegate<T>","needQuote":true,"nodes":[{"content":"BindDelegate&lt;T&gt;","pos":[0,15],"source":"BindDelegate<T>"}]},{"pos":[39509,39510],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[39589,39597],"content":"CallSite","needQuote":true,"nodes":[{"content":"CallSite","pos":[0,8]}]},{"pos":[39663,39664],"content":"<","needQuote":true,"nodes":[]},{"pos":[39691,39692],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":",","pos":[39752,39753]},{"pos":[39808,39814],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":"[]","pos":[39875,39877]},{"pos":[39908,39909],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[40082,40100],"content":"BindDelegate(Of T)","needQuote":true,"nodes":[{"content":"BindDelegate(Of T)","pos":[0,18]}]},{"pos":[40191,40192],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[40271,40279],"content":"CallSite","needQuote":true,"nodes":[{"content":"CallSite","pos":[0,8]}]},{"content":"(Of","pos":[40346,40349]},{"pos":[40383,40384],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[40411,40412],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[40440,40441]},{"pos":[40496,40502],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[40562,40564],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[40592,40593],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[41002,41019],"content":"CacheTarget<T>(T)","needQuote":true,"nodes":[{"content":"CacheTarget&lt;T&gt;(T)","pos":[0,17],"source":"CacheTarget<T>(T)"}]},{"pos":[41313,41327],"content":"CacheTarget<T>","needQuote":true,"nodes":[{"content":"CacheTarget&lt;T&gt;","pos":[0,14],"source":"CacheTarget<T>"}]},{"pos":[41414,41415],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[41442,41443],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[41470,41471],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[41585,41602],"content":"CacheTarget(Of T)","needQuote":true,"nodes":[{"content":"CacheTarget(Of T)","pos":[0,17]}]},{"pos":[41692,41693],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[41720,41721],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[41748,41749],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[42018,42024],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[42170,42177],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[42343,42351],"content":"CallInfo","needQuote":true,"nodes":[{"content":"CallInfo","pos":[0,8]}]},{"pos":[42586,42596],"content":"ReturnType","needQuote":true,"nodes":[{"content":"ReturnType","pos":[0,10]}]},{"pos":[42839,42843],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[43113,43157],"content":"Bind(DynamicMetaObject, DynamicMetaObject[])","needQuote":true,"nodes":[{"content":"Bind(DynamicMetaObject, DynamicMetaObject[])","pos":[0,44]}]},{"pos":[43616,43620],"content":"Bind","needQuote":true,"nodes":[{"content":"Bind","pos":[0,4]}]},{"pos":[43689,43690],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[43759,43776],"content":"DynamicMetaObject","needQuote":true,"nodes":[{"content":"DynamicMetaObject","pos":[0,17]}]},{"content":",","pos":[43835,43836]},{"pos":[43910,43927],"content":"DynamicMetaObject","needQuote":true,"nodes":[{"content":"DynamicMetaObject","pos":[0,17]}]},{"content":"[]","pos":[43986,43988]},{"pos":[44019,44020],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[44180,44184],"content":"Bind","needQuote":true,"nodes":[{"content":"Bind","pos":[0,4]}]},{"pos":[44253,44254],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[44323,44340],"content":"DynamicMetaObject","needQuote":true,"nodes":[{"content":"DynamicMetaObject","pos":[0,17]}]},{"content":",","pos":[44399,44400]},{"pos":[44474,44491],"content":"DynamicMetaObject","needQuote":true,"nodes":[{"content":"DynamicMetaObject","pos":[0,17]}]},{"pos":[44549,44551],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[44579,44580],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[44991,45008],"content":"DynamicMetaObject","needQuote":true,"nodes":[{"content":"DynamicMetaObject","pos":[0,17]}]},{"pos":[45186,45205],"content":"DynamicMetaObject[]","needQuote":true,"nodes":[{"content":"DynamicMetaObject[]","pos":[0,19]}]},{"pos":[45401,45418],"content":"DynamicMetaObject","needQuote":true,"nodes":[{"content":"DynamicMetaObject","pos":[0,17]}]},{"content":"[]","pos":[45477,45479]},{"pos":[45563,45580],"content":"DynamicMetaObject","needQuote":true,"nodes":[{"content":"DynamicMetaObject","pos":[0,17]}]},{"pos":[45638,45640],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]}],"content":"items:\n- uid: System.Dynamic.InvokeMemberBinder\n  commentId: T:System.Dynamic.InvokeMemberBinder\n  id: InvokeMemberBinder\n  parent: System.Dynamic\n  children:\n  - System.Dynamic.InvokeMemberBinder.#ctor(System.String,System.Boolean,System.Dynamic.CallInfo)\n  - System.Dynamic.InvokeMemberBinder.Bind(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])\n  - System.Dynamic.InvokeMemberBinder.CallInfo\n  - System.Dynamic.InvokeMemberBinder.FallbackInvoke(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[],System.Dynamic.DynamicMetaObject)\n  - System.Dynamic.InvokeMemberBinder.FallbackInvokeMember(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])\n  - System.Dynamic.InvokeMemberBinder.FallbackInvokeMember(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[],System.Dynamic.DynamicMetaObject)\n  - System.Dynamic.InvokeMemberBinder.IgnoreCase\n  - System.Dynamic.InvokeMemberBinder.Name\n  - System.Dynamic.InvokeMemberBinder.ReturnType\n  langs:\n  - csharp\n  - vb\n  name: InvokeMemberBinder\n  fullName: System.Dynamic.InvokeMemberBinder\n  type: Class\n  source:\n    remote:\n      path: src/System.Dynamic.Runtime/src/System/Dynamic/InvokeMemberBinder.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: InvokeMemberBinder\n    path: src/System.Dynamic.Runtime/src/System/Dynamic/InvokeMemberBinder.cs\n    startLine: 12\n  assemblies:\n  - System.Dynamic.Runtime\n  namespace: System.Dynamic\n  summary: \"\\n<p>Represents the invoke member dynamic operation at the call site, providing the binding semantic and the details about the operation.</p>\\n\"\n  syntax:\n    content: 'public abstract class InvokeMemberBinder : DynamicMetaObjectBinder'\n    content.vb: >-\n      Public MustInherit Class InvokeMemberBinder\n          Inherits DynamicMetaObjectBinder\n  inheritance:\n  - System.Object\n  - System.Runtime.CompilerServices.CallSiteBinder\n  - System.Dynamic.DynamicMetaObjectBinder\n  inheritedMembers:\n  - System.Dynamic.DynamicMetaObjectBinder.Bind(System.Object[],System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.LabelTarget)\n  - System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])\n  - System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject[])\n  - System.Dynamic.DynamicMetaObjectBinder.GetUpdateExpression(System.Type)\n  - System.Runtime.CompilerServices.CallSiteBinder.UpdateLabel\n  - System.Runtime.CompilerServices.CallSiteBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{{T}},System.Object[])\n  - System.Runtime.CompilerServices.CallSiteBinder.CacheTarget``1({T})\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - abstract\n  - class\n  modifiers.vb:\n  - Public\n  - MustInherit\n  - Class\n  nameWithType: InvokeMemberBinder\n- uid: System.Dynamic.InvokeMemberBinder.#ctor(System.String,System.Boolean,System.Dynamic.CallInfo)\n  commentId: M:System.Dynamic.InvokeMemberBinder.#ctor(System.String,System.Boolean,System.Dynamic.CallInfo)\n  id: '#ctor(System.String,System.Boolean,System.Dynamic.CallInfo)'\n  parent: System.Dynamic.InvokeMemberBinder\n  langs:\n  - csharp\n  - vb\n  name: InvokeMemberBinder(String, Boolean, CallInfo)\n  fullName: System.Dynamic.InvokeMemberBinder.InvokeMemberBinder(System.String, System.Boolean, System.Dynamic.CallInfo)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Dynamic.Runtime/src/System/Dynamic/InvokeMemberBinder.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Dynamic.Runtime/src/System/Dynamic/InvokeMemberBinder.cs\n    startLine: 24\n  assemblies:\n  - System.Dynamic.Runtime\n  namespace: System.Dynamic\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Dynamic.InvokeMemberBinder\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: protected InvokeMemberBinder(string name, bool ignoreCase, CallInfo callInfo)\n    content.vb: Protected Sub New(name As String, ignoreCase As Boolean, callInfo As CallInfo)\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the member to invoke.</p>\\n\"\n    - id: ignoreCase\n      type: System.Boolean\n      description: \"\\n<p>true if the name should be matched ignoring case; false otherwise.</p>\\n\"\n    - id: callInfo\n      type: System.Dynamic.CallInfo\n      description: \"\\n<p>The signature of the arguments at the call site.</p>\\n\"\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: InvokeMemberBinder.InvokeMemberBinder(String, Boolean, CallInfo)\n- uid: System.Dynamic.InvokeMemberBinder.CallInfo\n  commentId: P:System.Dynamic.InvokeMemberBinder.CallInfo\n  id: CallInfo\n  parent: System.Dynamic.InvokeMemberBinder\n  langs:\n  - csharp\n  - vb\n  name: CallInfo\n  fullName: System.Dynamic.InvokeMemberBinder.CallInfo\n  type: Property\n  source:\n    remote:\n      path: src/System.Dynamic.Runtime/src/System/Dynamic/InvokeMemberBinder.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CallInfo\n    path: src/System.Dynamic.Runtime/src/System/Dynamic/InvokeMemberBinder.cs\n    startLine: 67\n  assemblies:\n  - System.Dynamic.Runtime\n  namespace: System.Dynamic\n  summary: \"\\n<p>Gets the signature of the arguments at the call site.</p>\\n\"\n  syntax:\n    content: public CallInfo CallInfo { get; }\n    content.vb: Public ReadOnly Property CallInfo As CallInfo\n    parameters: []\n    return:\n      type: System.Dynamic.CallInfo\n      description: \"\\n<p>The signature of the arguments at the call site.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: InvokeMemberBinder.CallInfo\n- uid: System.Dynamic.InvokeMemberBinder.IgnoreCase\n  commentId: P:System.Dynamic.InvokeMemberBinder.IgnoreCase\n  id: IgnoreCase\n  parent: System.Dynamic.InvokeMemberBinder\n  langs:\n  - csharp\n  - vb\n  name: IgnoreCase\n  fullName: System.Dynamic.InvokeMemberBinder.IgnoreCase\n  type: Property\n  source:\n    remote:\n      path: src/System.Dynamic.Runtime/src/System/Dynamic/InvokeMemberBinder.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IgnoreCase\n    path: src/System.Dynamic.Runtime/src/System/Dynamic/InvokeMemberBinder.cs\n    startLine: 56\n  assemblies:\n  - System.Dynamic.Runtime\n  namespace: System.Dynamic\n  summary: \"\\n<p>Gets the value indicating if the string comparison should ignore the case of the member name.</p>\\n\"\n  syntax:\n    content: public bool IgnoreCase { get; }\n    content.vb: Public ReadOnly Property IgnoreCase As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>True if the case is ignored, otherwise false.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: InvokeMemberBinder.IgnoreCase\n- uid: System.Dynamic.InvokeMemberBinder.Name\n  commentId: P:System.Dynamic.InvokeMemberBinder.Name\n  id: Name\n  parent: System.Dynamic.InvokeMemberBinder\n  langs:\n  - csharp\n  - vb\n  name: Name\n  fullName: System.Dynamic.InvokeMemberBinder.Name\n  type: Property\n  source:\n    remote:\n      path: src/System.Dynamic.Runtime/src/System/Dynamic/InvokeMemberBinder.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Name\n    path: src/System.Dynamic.Runtime/src/System/Dynamic/InvokeMemberBinder.cs\n    startLine: 45\n  assemblies:\n  - System.Dynamic.Runtime\n  namespace: System.Dynamic\n  summary: \"\\n<p>Gets the name of the member to invoke.</p>\\n\"\n  syntax:\n    content: public string Name { get; }\n    content.vb: Public ReadOnly Property Name As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The name of the member to invoke.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: InvokeMemberBinder.Name\n- uid: System.Dynamic.InvokeMemberBinder.ReturnType\n  commentId: P:System.Dynamic.InvokeMemberBinder.ReturnType\n  id: ReturnType\n  parent: System.Dynamic.InvokeMemberBinder\n  langs:\n  - csharp\n  - vb\n  name: ReturnType\n  fullName: System.Dynamic.InvokeMemberBinder.ReturnType\n  type: Property\n  source:\n    remote:\n      path: src/System.Dynamic.Runtime/src/System/Dynamic/InvokeMemberBinder.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReturnType\n    path: src/System.Dynamic.Runtime/src/System/Dynamic/InvokeMemberBinder.cs\n    startLine: 37\n  assemblies:\n  - System.Dynamic.Runtime\n  namespace: System.Dynamic\n  summary: \"\\n<p>The result type of the operation.</p>\\n\"\n  syntax:\n    content: public override sealed Type ReturnType { get; }\n    content.vb: Public NotOverridable Overrides ReadOnly Property ReturnType As Type\n    parameters: []\n    return:\n      type: System.Type\n      description: \"\\n<p>The <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object representing the result type of the operation.</p>\\n\"\n  overridden: System.Dynamic.DynamicMetaObjectBinder.ReturnType\n  modifiers.csharp:\n  - public\n  - override\n  - sealed\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - NotOverridable\n  - ReadOnly\n  nameWithType: InvokeMemberBinder.ReturnType\n- uid: System.Dynamic.InvokeMemberBinder.Bind(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])\n  commentId: M:System.Dynamic.InvokeMemberBinder.Bind(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])\n  id: Bind(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])\n  parent: System.Dynamic.InvokeMemberBinder\n  langs:\n  - csharp\n  - vb\n  name: Bind(DynamicMetaObject, DynamicMetaObject[])\n  fullName: System.Dynamic.InvokeMemberBinder.Bind(System.Dynamic.DynamicMetaObject, System.Dynamic.DynamicMetaObject[])\n  type: Method\n  source:\n    remote:\n      path: src/System.Dynamic.Runtime/src/System/Dynamic/InvokeMemberBinder.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Bind\n    path: src/System.Dynamic.Runtime/src/System/Dynamic/InvokeMemberBinder.cs\n    startLine: 78\n  assemblies:\n  - System.Dynamic.Runtime\n  namespace: System.Dynamic\n  summary: \"\\n<p>Performs the binding of the dynamic invoke member operation.</p>\\n\"\n  syntax:\n    content: public override sealed DynamicMetaObject Bind(DynamicMetaObject target, DynamicMetaObject[] args)\n    content.vb: Public NotOverridable Overrides Function Bind(target As DynamicMetaObject, args As DynamicMetaObject()) As DynamicMetaObject\n    parameters:\n    - id: target\n      type: System.Dynamic.DynamicMetaObject\n      description: \"\\n<p>The target of the dynamic invoke member operation.</p>\\n\"\n    - id: args\n      type: System.Dynamic.DynamicMetaObject[]\n      description: \"\\n<p>An array of arguments of the dynamic invoke member operation.</p>\\n\"\n    return:\n      type: System.Dynamic.DynamicMetaObject\n      description: \"\\n<p>The <xref href=\\\"System.Dynamic.DynamicMetaObject\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> representing the result of the binding.</p>\\n\"\n  overridden: System.Dynamic.DynamicMetaObjectBinder.Bind(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])\n  modifiers.csharp:\n  - public\n  - override\n  - sealed\n  modifiers.vb:\n  - Public\n  - Overrides\n  - NotOverridable\n  fullName.vb: System.Dynamic.InvokeMemberBinder.Bind(System.Dynamic.DynamicMetaObject, System.Dynamic.DynamicMetaObject())\n  name.vb: Bind(DynamicMetaObject, DynamicMetaObject())\n  nameWithType: InvokeMemberBinder.Bind(DynamicMetaObject, DynamicMetaObject[])\n  nameWithType.vb: InvokeMemberBinder.Bind(DynamicMetaObject, DynamicMetaObject())\n- uid: System.Dynamic.InvokeMemberBinder.FallbackInvoke(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[],System.Dynamic.DynamicMetaObject)\n  commentId: M:System.Dynamic.InvokeMemberBinder.FallbackInvoke(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[],System.Dynamic.DynamicMetaObject)\n  id: FallbackInvoke(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[],System.Dynamic.DynamicMetaObject)\n  parent: System.Dynamic.InvokeMemberBinder\n  langs:\n  - csharp\n  - vb\n  name: FallbackInvoke(DynamicMetaObject, DynamicMetaObject[], DynamicMetaObject)\n  fullName: System.Dynamic.InvokeMemberBinder.FallbackInvoke(System.Dynamic.DynamicMetaObject, System.Dynamic.DynamicMetaObject[], System.Dynamic.DynamicMetaObject)\n  type: Method\n  source:\n    remote:\n      path: src/System.Dynamic.Runtime/src/System/Dynamic/InvokeMemberBinder.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: FallbackInvoke\n    path: src/System.Dynamic.Runtime/src/System/Dynamic/InvokeMemberBinder.cs\n    startLine: 127\n  assemblies:\n  - System.Dynamic.Runtime\n  namespace: System.Dynamic\n  summary: \"\\n<p>When overridden in the derived class, performs the binding of the dynamic invoke operation if the target dynamic object cannot bind.</p>\\n\"\n  syntax:\n    content: public abstract DynamicMetaObject FallbackInvoke(DynamicMetaObject target, DynamicMetaObject[] args, DynamicMetaObject errorSuggestion)\n    content.vb: Public MustOverride Function FallbackInvoke(target As DynamicMetaObject, args As DynamicMetaObject(), errorSuggestion As DynamicMetaObject) As DynamicMetaObject\n    parameters:\n    - id: target\n      type: System.Dynamic.DynamicMetaObject\n      description: \"\\n<p>The target of the dynamic invoke operation.</p>\\n\"\n    - id: args\n      type: System.Dynamic.DynamicMetaObject[]\n      description: \"\\n<p>The arguments of the dynamic invoke operation.</p>\\n\"\n    - id: errorSuggestion\n      type: System.Dynamic.DynamicMetaObject\n      description: \"\\n<p>The binding result to use if binding fails, or null.</p>\\n\"\n    return:\n      type: System.Dynamic.DynamicMetaObject\n      description: \"\\n<p>The <xref href=\\\"System.Dynamic.DynamicMetaObject\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> representing the result of the binding.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  modifiers.vb:\n  - Public\n  - MustOverride\n  fullName.vb: System.Dynamic.InvokeMemberBinder.FallbackInvoke(System.Dynamic.DynamicMetaObject, System.Dynamic.DynamicMetaObject(), System.Dynamic.DynamicMetaObject)\n  name.vb: FallbackInvoke(DynamicMetaObject, DynamicMetaObject(), DynamicMetaObject)\n  nameWithType: InvokeMemberBinder.FallbackInvoke(DynamicMetaObject, DynamicMetaObject[], DynamicMetaObject)\n  nameWithType.vb: InvokeMemberBinder.FallbackInvoke(DynamicMetaObject, DynamicMetaObject(), DynamicMetaObject)\n- uid: System.Dynamic.InvokeMemberBinder.FallbackInvokeMember(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])\n  commentId: M:System.Dynamic.InvokeMemberBinder.FallbackInvokeMember(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])\n  id: FallbackInvokeMember(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])\n  parent: System.Dynamic.InvokeMemberBinder\n  langs:\n  - csharp\n  - vb\n  name: FallbackInvokeMember(DynamicMetaObject, DynamicMetaObject[])\n  fullName: System.Dynamic.InvokeMemberBinder.FallbackInvokeMember(System.Dynamic.DynamicMetaObject, System.Dynamic.DynamicMetaObject[])\n  type: Method\n  source:\n    remote:\n      path: src/System.Dynamic.Runtime/src/System/Dynamic/InvokeMemberBinder.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: FallbackInvokeMember\n    path: src/System.Dynamic.Runtime/src/System/Dynamic/InvokeMemberBinder.cs\n    startLine: 101\n  assemblies:\n  - System.Dynamic.Runtime\n  namespace: System.Dynamic\n  summary: \"\\n<p>Performs the binding of the dynamic invoke member operation if the target dynamic object cannot bind.</p>\\n\"\n  syntax:\n    content: public DynamicMetaObject FallbackInvokeMember(DynamicMetaObject target, DynamicMetaObject[] args)\n    content.vb: Public Function FallbackInvokeMember(target As DynamicMetaObject, args As DynamicMetaObject()) As DynamicMetaObject\n    parameters:\n    - id: target\n      type: System.Dynamic.DynamicMetaObject\n      description: \"\\n<p>The target of the dynamic invoke member operation.</p>\\n\"\n    - id: args\n      type: System.Dynamic.DynamicMetaObject[]\n      description: \"\\n<p>The arguments of the dynamic invoke member operation.</p>\\n\"\n    return:\n      type: System.Dynamic.DynamicMetaObject\n      description: \"\\n<p>The <xref href=\\\"System.Dynamic.DynamicMetaObject\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> representing the result of the binding.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Dynamic.InvokeMemberBinder.FallbackInvokeMember(System.Dynamic.DynamicMetaObject, System.Dynamic.DynamicMetaObject())\n  name.vb: FallbackInvokeMember(DynamicMetaObject, DynamicMetaObject())\n  nameWithType: InvokeMemberBinder.FallbackInvokeMember(DynamicMetaObject, DynamicMetaObject[])\n  nameWithType.vb: InvokeMemberBinder.FallbackInvokeMember(DynamicMetaObject, DynamicMetaObject())\n- uid: System.Dynamic.InvokeMemberBinder.FallbackInvokeMember(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[],System.Dynamic.DynamicMetaObject)\n  commentId: M:System.Dynamic.InvokeMemberBinder.FallbackInvokeMember(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[],System.Dynamic.DynamicMetaObject)\n  id: FallbackInvokeMember(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[],System.Dynamic.DynamicMetaObject)\n  parent: System.Dynamic.InvokeMemberBinder\n  langs:\n  - csharp\n  - vb\n  name: FallbackInvokeMember(DynamicMetaObject, DynamicMetaObject[], DynamicMetaObject)\n  fullName: System.Dynamic.InvokeMemberBinder.FallbackInvokeMember(System.Dynamic.DynamicMetaObject, System.Dynamic.DynamicMetaObject[], System.Dynamic.DynamicMetaObject)\n  type: Method\n  source:\n    remote:\n      path: src/System.Dynamic.Runtime/src/System/Dynamic/InvokeMemberBinder.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: FallbackInvokeMember\n    path: src/System.Dynamic.Runtime/src/System/Dynamic/InvokeMemberBinder.cs\n    startLine: 113\n  assemblies:\n  - System.Dynamic.Runtime\n  namespace: System.Dynamic\n  summary: \"\\n<p>When overridden in the derived class, performs the binding of the dynamic invoke member operation if the target dynamic object cannot bind.</p>\\n\"\n  syntax:\n    content: public abstract DynamicMetaObject FallbackInvokeMember(DynamicMetaObject target, DynamicMetaObject[] args, DynamicMetaObject errorSuggestion)\n    content.vb: Public MustOverride Function FallbackInvokeMember(target As DynamicMetaObject, args As DynamicMetaObject(), errorSuggestion As DynamicMetaObject) As DynamicMetaObject\n    parameters:\n    - id: target\n      type: System.Dynamic.DynamicMetaObject\n      description: \"\\n<p>The target of the dynamic invoke member operation.</p>\\n\"\n    - id: args\n      type: System.Dynamic.DynamicMetaObject[]\n      description: \"\\n<p>The arguments of the dynamic invoke member operation.</p>\\n\"\n    - id: errorSuggestion\n      type: System.Dynamic.DynamicMetaObject\n      description: \"\\n<p>The binding result to use if binding fails, or null.</p>\\n\"\n    return:\n      type: System.Dynamic.DynamicMetaObject\n      description: \"\\n<p>The <xref href=\\\"System.Dynamic.DynamicMetaObject\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> representing the result of the binding.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  modifiers.vb:\n  - Public\n  - MustOverride\n  fullName.vb: System.Dynamic.InvokeMemberBinder.FallbackInvokeMember(System.Dynamic.DynamicMetaObject, System.Dynamic.DynamicMetaObject(), System.Dynamic.DynamicMetaObject)\n  name.vb: FallbackInvokeMember(DynamicMetaObject, DynamicMetaObject(), DynamicMetaObject)\n  nameWithType: InvokeMemberBinder.FallbackInvokeMember(DynamicMetaObject, DynamicMetaObject[], DynamicMetaObject)\n  nameWithType.vb: InvokeMemberBinder.FallbackInvokeMember(DynamicMetaObject, DynamicMetaObject(), DynamicMetaObject)\nreferences:\n- uid: System.Dynamic\n  isExternal: false\n  name: System.Dynamic\n  fullName: System.Dynamic\n  nameWithType: System.Dynamic\n  commentId: N:System.Dynamic\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Runtime.CompilerServices.CallSiteBinder\n  parent: System.Runtime.CompilerServices\n  isExternal: false\n  name: CallSiteBinder\n  fullName: System.Runtime.CompilerServices.CallSiteBinder\n  nameWithType: CallSiteBinder\n  commentId: T:System.Runtime.CompilerServices.CallSiteBinder\n- uid: System.Dynamic.DynamicMetaObjectBinder\n  parent: System.Dynamic\n  isExternal: false\n  name: DynamicMetaObjectBinder\n  fullName: System.Dynamic.DynamicMetaObjectBinder\n  nameWithType: DynamicMetaObjectBinder\n  commentId: T:System.Dynamic.DynamicMetaObjectBinder\n- uid: System.Dynamic.DynamicMetaObjectBinder.Bind(System.Object[],System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.LabelTarget)\n  parent: System.Dynamic.DynamicMetaObjectBinder\n  isExternal: true\n  name: Bind(Object[], ReadOnlyCollection<ParameterExpression>, LabelTarget)\n  fullName: System.Dynamic.DynamicMetaObjectBinder.Bind(System.Object[], System.Collections.ObjectModel.ReadOnlyCollection<System.Linq.Expressions.ParameterExpression>, System.Linq.Expressions.LabelTarget)\n  fullname.vb: System.Dynamic.DynamicMetaObjectBinder.Bind(System.Object(), System.Collections.ObjectModel.ReadOnlyCollection(Of System.Linq.Expressions.ParameterExpression), System.Linq.Expressions.LabelTarget)\n  name.vb: Bind(Object(), ReadOnlyCollection(Of ParameterExpression), LabelTarget)\n  spec.csharp:\n  - uid: System.Dynamic.DynamicMetaObjectBinder.Bind(System.Object[],System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.LabelTarget)\n    name: Bind\n    fullName: System.Dynamic.DynamicMetaObjectBinder.Bind\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Dynamic.DynamicMetaObjectBinder.Bind(System.Object[],System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.LabelTarget)\n    name: Bind\n    fullName: System.Dynamic.DynamicMetaObjectBinder.Bind\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: DynamicMetaObjectBinder.Bind(Object[], ReadOnlyCollection<ParameterExpression>, LabelTarget)\n  nameWithType.vb: DynamicMetaObjectBinder.Bind(Object(), ReadOnlyCollection(Of ParameterExpression), LabelTarget)\n  commentId: M:System.Dynamic.DynamicMetaObjectBinder.Bind(System.Object[],System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.LabelTarget)\n- uid: System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])\n  parent: System.Dynamic.DynamicMetaObjectBinder\n  isExternal: false\n  name: Defer(DynamicMetaObject, DynamicMetaObject[])\n  fullName: System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject, System.Dynamic.DynamicMetaObject[])\n  fullname.vb: System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject, System.Dynamic.DynamicMetaObject())\n  name.vb: Defer(DynamicMetaObject, DynamicMetaObject())\n  spec.csharp:\n  - uid: System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])\n    name: Defer\n    fullName: System.Dynamic.DynamicMetaObjectBinder.Defer\n  - name: (\n    fullName: (\n  - uid: System.Dynamic.DynamicMetaObject\n    name: DynamicMetaObject\n    fullName: System.Dynamic.DynamicMetaObject\n  - name: ', '\n    fullName: ', '\n  - uid: System.Dynamic.DynamicMetaObject\n    name: DynamicMetaObject\n    fullName: System.Dynamic.DynamicMetaObject\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])\n    name: Defer\n    fullName: System.Dynamic.DynamicMetaObjectBinder.Defer\n  - name: (\n    fullName: (\n  - uid: System.Dynamic.DynamicMetaObject\n    name: DynamicMetaObject\n    fullName: System.Dynamic.DynamicMetaObject\n  - name: ', '\n    fullName: ', '\n  - uid: System.Dynamic.DynamicMetaObject\n    name: DynamicMetaObject\n    fullName: System.Dynamic.DynamicMetaObject\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: DynamicMetaObjectBinder.Defer(DynamicMetaObject, DynamicMetaObject[])\n  nameWithType.vb: DynamicMetaObjectBinder.Defer(DynamicMetaObject, DynamicMetaObject())\n  commentId: M:System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])\n- uid: System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject[])\n  parent: System.Dynamic.DynamicMetaObjectBinder\n  isExternal: false\n  name: Defer(DynamicMetaObject[])\n  fullName: System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject[])\n  fullname.vb: System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject())\n  name.vb: Defer(DynamicMetaObject())\n  spec.csharp:\n  - uid: System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject[])\n    name: Defer\n    fullName: System.Dynamic.DynamicMetaObjectBinder.Defer\n  - name: (\n    fullName: (\n  - uid: System.Dynamic.DynamicMetaObject\n    name: DynamicMetaObject\n    fullName: System.Dynamic.DynamicMetaObject\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject[])\n    name: Defer\n    fullName: System.Dynamic.DynamicMetaObjectBinder.Defer\n  - name: (\n    fullName: (\n  - uid: System.Dynamic.DynamicMetaObject\n    name: DynamicMetaObject\n    fullName: System.Dynamic.DynamicMetaObject\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: DynamicMetaObjectBinder.Defer(DynamicMetaObject[])\n  nameWithType.vb: DynamicMetaObjectBinder.Defer(DynamicMetaObject())\n  commentId: M:System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject[])\n- uid: System.Dynamic.DynamicMetaObjectBinder.GetUpdateExpression(System.Type)\n  parent: System.Dynamic.DynamicMetaObjectBinder\n  isExternal: true\n  name: GetUpdateExpression(Type)\n  fullName: System.Dynamic.DynamicMetaObjectBinder.GetUpdateExpression(System.Type)\n  spec.csharp:\n  - uid: System.Dynamic.DynamicMetaObjectBinder.GetUpdateExpression(System.Type)\n    name: GetUpdateExpression\n    fullName: System.Dynamic.DynamicMetaObjectBinder.GetUpdateExpression\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Dynamic.DynamicMetaObjectBinder.GetUpdateExpression(System.Type)\n    name: GetUpdateExpression\n    fullName: System.Dynamic.DynamicMetaObjectBinder.GetUpdateExpression\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: DynamicMetaObjectBinder.GetUpdateExpression(Type)\n  commentId: M:System.Dynamic.DynamicMetaObjectBinder.GetUpdateExpression(System.Type)\n- uid: System.Runtime.CompilerServices.CallSiteBinder.UpdateLabel\n  parent: System.Runtime.CompilerServices.CallSiteBinder\n  isExternal: false\n  name: UpdateLabel\n  fullName: System.Runtime.CompilerServices.CallSiteBinder.UpdateLabel\n  nameWithType: CallSiteBinder.UpdateLabel\n  commentId: P:System.Runtime.CompilerServices.CallSiteBinder.UpdateLabel\n- uid: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{{T}},System.Object[])\n  parent: System.Runtime.CompilerServices.CallSiteBinder\n  definition: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{``0},System.Object[])\n  name: BindDelegate<T>(CallSite<T>, Object[])\n  fullName: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate<T>(System.Runtime.CompilerServices.CallSite<T>, System.Object[])\n  fullname.vb: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate(Of T)(System.Runtime.CompilerServices.CallSite(Of T), System.Object())\n  name.vb: BindDelegate(Of T)(CallSite(Of T), Object())\n  spec.csharp:\n  - uid: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{``0},System.Object[])\n    name: BindDelegate<T>\n    fullName: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate<T>\n  - name: (\n    fullName: (\n  - uid: System.Runtime.CompilerServices.CallSite`1\n    name: CallSite\n    fullName: System.Runtime.CompilerServices.CallSite\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{``0},System.Object[])\n    name: BindDelegate(Of T)\n    fullName: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Runtime.CompilerServices.CallSite`1\n    name: CallSite\n    fullName: System.Runtime.CompilerServices.CallSite\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: CallSiteBinder.BindDelegate<T>(CallSite<T>, Object[])\n  nameWithType.vb: CallSiteBinder.BindDelegate(Of T)(CallSite(Of T), Object())\n  commentId: M:System.Runtime.CompilerServices.CallSiteBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{``0},System.Object[])\n- uid: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget``1({T})\n  parent: System.Runtime.CompilerServices.CallSiteBinder\n  definition: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget``1(``0)\n  name: CacheTarget<T>(T)\n  fullName: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget<T>(T)\n  fullname.vb: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget(Of T)(T)\n  name.vb: CacheTarget(Of T)(T)\n  spec.csharp:\n  - uid: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget``1(``0)\n    name: CacheTarget<T>\n    fullName: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget<T>\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget``1(``0)\n    name: CacheTarget(Of T)\n    fullName: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget(Of T)\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: CallSiteBinder.CacheTarget<T>(T)\n  nameWithType.vb: CallSiteBinder.CacheTarget(Of T)(T)\n  commentId: M:System.Runtime.CompilerServices.CallSiteBinder.CacheTarget``1(``0)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Runtime.CompilerServices\n  isExternal: false\n  name: System.Runtime.CompilerServices\n  fullName: System.Runtime.CompilerServices\n  nameWithType: System.Runtime.CompilerServices\n  commentId: N:System.Runtime.CompilerServices\n- uid: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{``0},System.Object[])\n  isExternal: true\n  name: BindDelegate<T>(CallSite<T>, Object[])\n  fullName: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate<T>(System.Runtime.CompilerServices.CallSite<T>, System.Object[])\n  fullname.vb: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate(Of T)(System.Runtime.CompilerServices.CallSite(Of T), System.Object())\n  name.vb: BindDelegate(Of T)(CallSite(Of T), Object())\n  spec.csharp:\n  - uid: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{``0},System.Object[])\n    name: BindDelegate<T>\n    fullName: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate<T>\n  - name: (\n    fullName: (\n  - uid: System.Runtime.CompilerServices.CallSite`1\n    name: CallSite\n    fullName: System.Runtime.CompilerServices.CallSite\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{``0},System.Object[])\n    name: BindDelegate(Of T)\n    fullName: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Runtime.CompilerServices.CallSite`1\n    name: CallSite\n    fullName: System.Runtime.CompilerServices.CallSite\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: CallSiteBinder.BindDelegate<T>(CallSite<T>, Object[])\n  nameWithType.vb: CallSiteBinder.BindDelegate(Of T)(CallSite(Of T), Object())\n  commentId: M:System.Runtime.CompilerServices.CallSiteBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{``0},System.Object[])\n- uid: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget``1(``0)\n  isExternal: false\n  name: CacheTarget<T>(T)\n  fullName: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget<T>(T)\n  fullname.vb: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget(Of T)(T)\n  name.vb: CacheTarget(Of T)(T)\n  spec.csharp:\n  - uid: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget``1(``0)\n    name: CacheTarget<T>\n    fullName: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget<T>\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget``1(``0)\n    name: CacheTarget(Of T)\n    fullName: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget(Of T)\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: CallSiteBinder.CacheTarget<T>(T)\n  nameWithType.vb: CallSiteBinder.CacheTarget(Of T)(T)\n  commentId: M:System.Runtime.CompilerServices.CallSiteBinder.CacheTarget``1(``0)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.Dynamic.CallInfo\n  parent: System.Dynamic\n  isExternal: false\n  name: CallInfo\n  fullName: System.Dynamic.CallInfo\n  nameWithType: CallInfo\n  commentId: T:System.Dynamic.CallInfo\n- uid: System.Dynamic.DynamicMetaObjectBinder.ReturnType\n  parent: System.Dynamic.DynamicMetaObjectBinder\n  isExternal: false\n  name: ReturnType\n  fullName: System.Dynamic.DynamicMetaObjectBinder.ReturnType\n  nameWithType: DynamicMetaObjectBinder.ReturnType\n  commentId: P:System.Dynamic.DynamicMetaObjectBinder.ReturnType\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  fullName: System.Type\n  nameWithType: Type\n  commentId: T:System.Type\n- uid: System.Dynamic.DynamicMetaObjectBinder.Bind(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])\n  parent: System.Dynamic.DynamicMetaObjectBinder\n  isExternal: false\n  name: Bind(DynamicMetaObject, DynamicMetaObject[])\n  fullName: System.Dynamic.DynamicMetaObjectBinder.Bind(System.Dynamic.DynamicMetaObject, System.Dynamic.DynamicMetaObject[])\n  fullname.vb: System.Dynamic.DynamicMetaObjectBinder.Bind(System.Dynamic.DynamicMetaObject, System.Dynamic.DynamicMetaObject())\n  name.vb: Bind(DynamicMetaObject, DynamicMetaObject())\n  spec.csharp:\n  - uid: System.Dynamic.DynamicMetaObjectBinder.Bind(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])\n    name: Bind\n    fullName: System.Dynamic.DynamicMetaObjectBinder.Bind\n  - name: (\n    fullName: (\n  - uid: System.Dynamic.DynamicMetaObject\n    name: DynamicMetaObject\n    fullName: System.Dynamic.DynamicMetaObject\n  - name: ', '\n    fullName: ', '\n  - uid: System.Dynamic.DynamicMetaObject\n    name: DynamicMetaObject\n    fullName: System.Dynamic.DynamicMetaObject\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Dynamic.DynamicMetaObjectBinder.Bind(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])\n    name: Bind\n    fullName: System.Dynamic.DynamicMetaObjectBinder.Bind\n  - name: (\n    fullName: (\n  - uid: System.Dynamic.DynamicMetaObject\n    name: DynamicMetaObject\n    fullName: System.Dynamic.DynamicMetaObject\n  - name: ', '\n    fullName: ', '\n  - uid: System.Dynamic.DynamicMetaObject\n    name: DynamicMetaObject\n    fullName: System.Dynamic.DynamicMetaObject\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: DynamicMetaObjectBinder.Bind(DynamicMetaObject, DynamicMetaObject[])\n  nameWithType.vb: DynamicMetaObjectBinder.Bind(DynamicMetaObject, DynamicMetaObject())\n  commentId: M:System.Dynamic.DynamicMetaObjectBinder.Bind(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])\n- uid: System.Dynamic.DynamicMetaObject\n  parent: System.Dynamic\n  isExternal: false\n  name: DynamicMetaObject\n  fullName: System.Dynamic.DynamicMetaObject\n  nameWithType: DynamicMetaObject\n  commentId: T:System.Dynamic.DynamicMetaObject\n- uid: System.Dynamic.DynamicMetaObject[]\n  name: DynamicMetaObject[]\n  fullName: System.Dynamic.DynamicMetaObject[]\n  fullname.vb: System.Dynamic.DynamicMetaObject()\n  name.vb: DynamicMetaObject()\n  spec.csharp:\n  - uid: System.Dynamic.DynamicMetaObject\n    name: DynamicMetaObject\n    fullName: System.Dynamic.DynamicMetaObject\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Dynamic.DynamicMetaObject\n    name: DynamicMetaObject\n    fullName: System.Dynamic.DynamicMetaObject\n  - name: ()\n    fullName: ()\n  nameWithType: DynamicMetaObject[]\n  nameWithType.vb: DynamicMetaObject()\n"}