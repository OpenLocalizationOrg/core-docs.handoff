{"nodes":[{"pos":[932,942],"content":"UriBuilder","needQuote":true,"nodes":[{"content":"UriBuilder","pos":[0,10]}]},{"pos":[2156,2168],"content":"UriBuilder()","needQuote":true,"nodes":[{"content":"UriBuilder()","pos":[0,12]}]},{"pos":[3076,3094],"content":"UriBuilder(String)","needQuote":true,"nodes":[{"content":"UriBuilder(String)","pos":[0,18]}]},{"content":"\\n&lt;p&gt;A URI string.","pos":[3849,3867],"source":"\\n<p>A URI string."},{"content":"&lt;/p&gt;\\n","pos":[3868,3874],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;uri&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[3993,4038],"source":"\\n<p>\\n<em>uri</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[4039,4045],"source":" </p>\\n"},{"pos":[5085,5111],"content":"UriBuilder(String, String)","needQuote":true,"nodes":[{"content":"UriBuilder(String, String)","pos":[0,26]}]},{"content":"\\n&lt;p&gt;An Internet access protocol.","pos":[5951,5984],"source":"\\n<p>An Internet access protocol."},{"content":"&lt;/p&gt;\\n","pos":[5985,5991],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A DNS-style domain name or IP address.","pos":[6058,6101],"source":"\\n<p>A DNS-style domain name or IP address."},{"content":"&lt;/p&gt;\\n","pos":[6102,6108],"source":" </p>\\n"},{"pos":[6495,6528],"content":"UriBuilder(String, String, Int32)","needQuote":true,"nodes":[{"content":"UriBuilder(String, String, Int32)","pos":[0,33]}]},{"content":"\\n&lt;p&gt;An Internet access protocol.","pos":[7408,7441],"source":"\\n<p>An Internet access protocol."},{"content":"&lt;/p&gt;\\n","pos":[7442,7448],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A DNS-style domain name or IP address.","pos":[7511,7554],"source":"\\n<p>A DNS-style domain name or IP address."},{"content":"&lt;/p&gt;\\n","pos":[7555,7561],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An IP port number for the service.","pos":[7629,7668],"source":"\\n<p>An IP port number for the service."},{"content":"&lt;/p&gt;\\n","pos":[7669,7675],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;portNumber&lt;/em&gt; is less than -1 or greater than 65,535.","pos":[7806,7872],"source":"\\n<p>\\n<em>portNumber</em> is less than -1 or greater than 65,535."},{"content":"&lt;/p&gt;\\n","pos":[7873,7879],"source":" </p>\\n"},{"pos":[8315,8356],"content":"UriBuilder(String, String, Int32, String)","needQuote":true,"nodes":[{"content":"UriBuilder(String, String, Int32, String)","pos":[0,41]}]},{"content":"\\n&lt;p&gt;An Internet access protocol.","pos":[9291,9324],"source":"\\n<p>An Internet access protocol."},{"content":"&lt;/p&gt;\\n","pos":[9325,9331],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A DNS-style domain name or IP address.","pos":[9394,9437],"source":"\\n<p>A DNS-style domain name or IP address."},{"content":"&lt;/p&gt;\\n","pos":[9438,9444],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An IP port number for the service.","pos":[9506,9545],"source":"\\n<p>An IP port number for the service."},{"content":"&lt;/p&gt;\\n","pos":[9546,9552],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The path to the Internet resource.","pos":[9620,9659],"source":"\\n<p>The path to the Internet resource."},{"content":"&lt;/p&gt;\\n","pos":[9660,9666],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;port&lt;/em&gt; is less than -1 or greater than 65,535.","pos":[9797,9857],"source":"\\n<p>\\n<em>port</em> is less than -1 or greater than 65,535."},{"content":"&lt;/p&gt;\\n","pos":[9858,9864],"source":" </p>\\n"},{"pos":[10350,10399],"content":"UriBuilder(String, String, Int32, String, String)","needQuote":true,"nodes":[{"content":"UriBuilder(String, String, Int32, String, String)","pos":[0,49]}]},{"content":"\\n&lt;p&gt;An Internet access protocol.","pos":[11416,11449],"source":"\\n<p>An Internet access protocol."},{"content":"&lt;/p&gt;\\n","pos":[11450,11456],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A DNS-style domain name or IP address.","pos":[11519,11562],"source":"\\n<p>A DNS-style domain name or IP address."},{"content":"&lt;/p&gt;\\n","pos":[11563,11569],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An IP port number for the service.","pos":[11631,11670],"source":"\\n<p>An IP port number for the service."},{"content":"&lt;/p&gt;\\n","pos":[11671,11677],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The path to the Internet resource.","pos":[11740,11779],"source":"\\n<p>The path to the Internet resource."},{"content":"&lt;/p&gt;\\n","pos":[11780,11786],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A query string or fragment identifier.","pos":[11855,11898],"source":"\\n<p>A query string or fragment identifier."},{"content":"&lt;/p&gt;\\n","pos":[11899,11905],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;port&lt;/em&gt; is less than -1 or greater than 65,535.","pos":[12408,12468],"source":"\\n<p>\\n<em>port</em> is less than -1 or greater than 65,535."},{"content":"&lt;/p&gt;\\n","pos":[12469,12475],"source":" </p>\\n"},{"pos":[12795,12810],"content":"UriBuilder(Uri)","needQuote":true,"nodes":[{"content":"UriBuilder(Uri)","pos":[0,15]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;uri&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[13856,13901],"source":"\\n<p>\\n<em>uri</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[13902,13908],"source":" </p>\\n"},{"pos":[14165,14173],"content":"Fragment","needQuote":true,"nodes":[{"content":"Fragment","pos":[0,8]}]},{"pos":[15200,15204],"content":"Host","needQuote":true,"nodes":[{"content":"Host","pos":[0,4]}]},{"content":"\\n&lt;p&gt;The DNS host name or IP address of the server.&lt;/p&gt;\\n","pos":[15876,15933],"source":"\\n<p>The DNS host name or IP address of the server.</p>\\n"},{"pos":[16195,16203],"content":"Password","needQuote":true,"nodes":[{"content":"Password","pos":[0,8]}]},{"content":"\\n&lt;p&gt;The password of the user that accesses the URI.&lt;/p&gt;\\n","pos":[16886,16944],"source":"\\n<p>The password of the user that accesses the URI.</p>\\n"},{"pos":[17198,17202],"content":"Path","needQuote":true,"nodes":[{"content":"Path","pos":[0,4]}]},{"content":"\\n&lt;p&gt;The path to the resource referenced by the URI.&lt;/p&gt;\\n","pos":[17856,17914],"source":"\\n<p>The path to the resource referenced by the URI.</p>\\n"},{"pos":[18164,18168],"content":"Port","needQuote":true,"nodes":[{"content":"Port","pos":[0,4]}]},{"content":"\\n&lt;p&gt;The port number of the URI.&lt;/p&gt;\\n","pos":[18799,18837],"source":"\\n<p>The port number of the URI.</p>\\n"},{"content":"\\n&lt;p&gt;The port cannot be set to a value less than -1 or greater than 65,535.","pos":[18968,19043],"source":"\\n<p>The port cannot be set to a value less than -1 or greater than 65,535."},{"content":"&lt;/p&gt;\\n","pos":[19044,19050],"source":" </p>\\n"},{"pos":[19440,19445],"content":"Query","needQuote":true,"nodes":[{"content":"Query","pos":[0,5]}]},{"content":"\\n&lt;p&gt;The query information included in the URI.&lt;/p&gt;\\n","pos":[20098,20151],"source":"\\n<p>The query information included in the URI.</p>\\n"},{"pos":[20529,20535],"content":"Scheme","needQuote":true,"nodes":[{"content":"Scheme","pos":[0,6]}]},{"content":"\\n&lt;p&gt;The scheme of the URI.&lt;/p&gt;\\n","pos":[21177,21210],"source":"\\n<p>The scheme of the URI.</p>\\n"},{"content":"\\n&lt;p&gt;The scheme cannot be set to an invalid scheme name.","pos":[21321,21377],"source":"\\n<p>The scheme cannot be set to an invalid scheme name."},{"content":"&lt;/p&gt;\\n","pos":[21378,21384],"source":" </p>\\n"},{"pos":[21756,21759],"content":"Uri","needQuote":true,"nodes":[{"content":"Uri","pos":[0,3]}]},{"pos":[23595,23603],"content":"UserName","needQuote":true,"nodes":[{"content":"UserName","pos":[0,8]}]},{"content":"\\n&lt;p&gt;The user name of the user that accesses the URI.&lt;/p&gt;\\n","pos":[24274,24333],"source":"\\n<p>The user name of the user that accesses the URI.</p>\\n"},{"pos":[24638,24652],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"content":"\\n&lt;p&gt;The object to compare with the current instance.","pos":[25523,25576],"source":"\\n<p>The object to compare with the current instance."},{"content":"&lt;/p&gt;\\n","pos":[25577,25583],"source":" </p>\\n"},{"pos":[26351,26364],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"content":"\\n&lt;p&gt;The hash code generated for the URI.&lt;/p&gt;\\n","pos":[27005,27052],"source":"\\n<p>The hash code generated for the URI.</p>\\n"},{"pos":[27374,27384],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[28989,28995],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[29126,29132],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[29319,29341],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[29489,29495],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[29562,29563],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29613,29619],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[29680,29681]},{"pos":[29736,29742],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[29802,29803],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29900,29906],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[29973,29974],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30024,30030],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[30091,30092]},{"pos":[30147,30153],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[30213,30214],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30459,30490],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[30656,30671],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[30747,30748],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30798,30804],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[30865,30866]},{"pos":[30921,30927],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[30987,30988],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31094,31109],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[31185,31186],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31236,31242],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[31303,31304]},{"pos":[31359,31365],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[31425,31426],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31652,31661],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[31754,31761],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[31829,31830],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31857,31858],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31927,31934],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[32002,32003],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[32030,32031],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[32206,32223],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[32332,32347],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[32423,32424],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[32451,32452],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[32529,32544],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[32620,32621],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[32648,32649],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[32818,32824],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[32968,32973],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[33112,33115],"content":"Uri","needQuote":true,"nodes":[{"content":"Uri","pos":[0,3]}]},{"pos":[33279,33293],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[33412,33418],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[33485,33486],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[33536,33542],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[33602,33603],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[33686,33692],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[33759,33760],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[33810,33816],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[33876,33877],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34050,34057],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[34223,34236],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[34337,34348],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[34420,34421],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[34448,34449],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34522,34533],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[34605,34606],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[34633,34634],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34810,34820],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[34915,34923],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[34992,34993],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[35020,35021],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[35091,35099],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[35168,35169],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[35196,35197],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[35350,35371],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[35556,35574],"content":"UriFormatException","needQuote":true,"nodes":[{"content":"UriFormatException","pos":[0,18]}]},{"pos":[35759,35786],"content":"ArgumentOutOfRangeException","needQuote":true,"nodes":[{"content":"ArgumentOutOfRangeException","pos":[0,27]}]},{"pos":[36005,36022],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]}],"content":"items:\n- uid: System.UriBuilder\n  commentId: T:System.UriBuilder\n  id: UriBuilder\n  parent: System\n  children:\n  - System.UriBuilder.#ctor\n  - System.UriBuilder.#ctor(System.String)\n  - System.UriBuilder.#ctor(System.String,System.String)\n  - System.UriBuilder.#ctor(System.String,System.String,System.Int32)\n  - System.UriBuilder.#ctor(System.String,System.String,System.Int32,System.String)\n  - System.UriBuilder.#ctor(System.String,System.String,System.Int32,System.String,System.String)\n  - System.UriBuilder.#ctor(System.Uri)\n  - System.UriBuilder.Equals(System.Object)\n  - System.UriBuilder.Fragment\n  - System.UriBuilder.GetHashCode\n  - System.UriBuilder.Host\n  - System.UriBuilder.Password\n  - System.UriBuilder.Path\n  - System.UriBuilder.Port\n  - System.UriBuilder.Query\n  - System.UriBuilder.Scheme\n  - System.UriBuilder.ToString\n  - System.UriBuilder.Uri\n  - System.UriBuilder.UserName\n  langs:\n  - csharp\n  - vb\n  name: UriBuilder\n  fullName: System.UriBuilder\n  type: Class\n  source:\n    remote:\n      path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: UriBuilder\n    path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs\n    startLine: 569\n  assemblies:\n  - System.Runtime.Extensions\n  namespace: System\n  summary: \"\\n<p>Provides a custom constructor for uniform resource identifiers (URIs) and modifies URIs for the <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public class UriBuilder\n    content.vb: Public Class UriBuilder\n  seealso:\n  - type: System.Uri\n    commentId: T:System.Uri\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: UriBuilder\n- uid: System.UriBuilder.#ctor\n  commentId: M:System.UriBuilder.#ctor\n  id: '#ctor'\n  parent: System.UriBuilder\n  langs:\n  - csharp\n  - vb\n  name: UriBuilder()\n  fullName: System.UriBuilder.UriBuilder()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs\n    startLine: 571\n  assemblies:\n  - System.Runtime.Extensions\n  namespace: System\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.UriBuilder\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public UriBuilder()\n    content.vb: Public Sub New\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: UriBuilder.UriBuilder()\n- uid: System.UriBuilder.#ctor(System.String)\n  commentId: M:System.UriBuilder.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.UriBuilder\n  langs:\n  - csharp\n  - vb\n  name: UriBuilder(String)\n  fullName: System.UriBuilder.UriBuilder(System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs\n    startLine: 572\n  assemblies:\n  - System.Runtime.Extensions\n  namespace: System\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.UriBuilder\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified URI.</p>\\n\"\n  syntax:\n    content: public UriBuilder(string uri)\n    content.vb: Public Sub New(uri As String)\n    parameters:\n    - id: uri\n      type: System.String\n      description: \"\\n<p>A URI string. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>uri</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.UriFormatException\n    commentId: T:System.UriFormatException\n    description: \"\\n<p>In the <see href=\\\"http://go.microsoft.com/fwlink/?LinkID=247912\\\">.NET for Windows Store apps</see> or the Portable Class Library, catch the base class exception, <xref href=\\\"System.FormatException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, instead.</p>\\n<p>\\n<em>uri</em> is a zero length string or contains only spaces.</p>\\n<p>-or- </p>\\n<p>The parsing routine detected a scheme in an invalid form.</p>\\n<p>-or- </p>\\n<p>The parser detected more than two consecutive slashes in a URI that does not use the \\\"file\\\" scheme.</p>\\n<p>-or- </p>\\n<p>\\n<em>uri</em> is not a valid URI. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: UriBuilder.UriBuilder(String)\n- uid: System.UriBuilder.#ctor(System.String,System.String)\n  commentId: M:System.UriBuilder.#ctor(System.String,System.String)\n  id: '#ctor(System.String,System.String)'\n  parent: System.UriBuilder\n  langs:\n  - csharp\n  - vb\n  name: UriBuilder(String, String)\n  fullName: System.UriBuilder.UriBuilder(System.String, System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs\n    startLine: 573\n  assemblies:\n  - System.Runtime.Extensions\n  namespace: System\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.UriBuilder\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified scheme and host.</p>\\n\"\n  syntax:\n    content: public UriBuilder(string schemeName, string hostName)\n    content.vb: Public Sub New(schemeName As String, hostName As String)\n    parameters:\n    - id: schemeName\n      type: System.String\n      description: \"\\n<p>An Internet access protocol. </p>\\n\"\n    - id: hostName\n      type: System.String\n      description: \"\\n<p>A DNS-style domain name or IP address. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: UriBuilder.UriBuilder(String, String)\n- uid: System.UriBuilder.#ctor(System.String,System.String,System.Int32)\n  commentId: M:System.UriBuilder.#ctor(System.String,System.String,System.Int32)\n  id: '#ctor(System.String,System.String,System.Int32)'\n  parent: System.UriBuilder\n  langs:\n  - csharp\n  - vb\n  name: UriBuilder(String, String, Int32)\n  fullName: System.UriBuilder.UriBuilder(System.String, System.String, System.Int32)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs\n    startLine: 574\n  assemblies:\n  - System.Runtime.Extensions\n  namespace: System\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.UriBuilder\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified scheme, host, and port.</p>\\n\"\n  syntax:\n    content: public UriBuilder(string scheme, string host, int portNumber)\n    content.vb: Public Sub New(scheme As String, host As String, portNumber As Integer)\n    parameters:\n    - id: scheme\n      type: System.String\n      description: \"\\n<p>An Internet access protocol. </p>\\n\"\n    - id: host\n      type: System.String\n      description: \"\\n<p>A DNS-style domain name or IP address. </p>\\n\"\n    - id: portNumber\n      type: System.Int32\n      description: \"\\n<p>An IP port number for the service. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>portNumber</em> is less than -1 or greater than 65,535. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: UriBuilder.UriBuilder(String, String, Int32)\n- uid: System.UriBuilder.#ctor(System.String,System.String,System.Int32,System.String)\n  commentId: M:System.UriBuilder.#ctor(System.String,System.String,System.Int32,System.String)\n  id: '#ctor(System.String,System.String,System.Int32,System.String)'\n  parent: System.UriBuilder\n  langs:\n  - csharp\n  - vb\n  name: UriBuilder(String, String, Int32, String)\n  fullName: System.UriBuilder.UriBuilder(System.String, System.String, System.Int32, System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs\n    startLine: 575\n  assemblies:\n  - System.Runtime.Extensions\n  namespace: System\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.UriBuilder\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified scheme, host, port number, and path.</p>\\n\"\n  syntax:\n    content: public UriBuilder(string scheme, string host, int port, string pathValue)\n    content.vb: Public Sub New(scheme As String, host As String, port As Integer, pathValue As String)\n    parameters:\n    - id: scheme\n      type: System.String\n      description: \"\\n<p>An Internet access protocol. </p>\\n\"\n    - id: host\n      type: System.String\n      description: \"\\n<p>A DNS-style domain name or IP address. </p>\\n\"\n    - id: port\n      type: System.Int32\n      description: \"\\n<p>An IP port number for the service. </p>\\n\"\n    - id: pathValue\n      type: System.String\n      description: \"\\n<p>The path to the Internet resource. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>port</em> is less than -1 or greater than 65,535. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: UriBuilder.UriBuilder(String, String, Int32, String)\n- uid: System.UriBuilder.#ctor(System.String,System.String,System.Int32,System.String,System.String)\n  commentId: M:System.UriBuilder.#ctor(System.String,System.String,System.Int32,System.String,System.String)\n  id: '#ctor(System.String,System.String,System.Int32,System.String,System.String)'\n  parent: System.UriBuilder\n  langs:\n  - csharp\n  - vb\n  name: UriBuilder(String, String, Int32, String, String)\n  fullName: System.UriBuilder.UriBuilder(System.String, System.String, System.Int32, System.String, System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs\n    startLine: 576\n  assemblies:\n  - System.Runtime.Extensions\n  namespace: System\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.UriBuilder\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified scheme, host, port number, path and query string or fragment identifier.</p>\\n\"\n  syntax:\n    content: public UriBuilder(string scheme, string host, int port, string path, string extraValue)\n    content.vb: Public Sub New(scheme As String, host As String, port As Integer, path As String, extraValue As String)\n    parameters:\n    - id: scheme\n      type: System.String\n      description: \"\\n<p>An Internet access protocol. </p>\\n\"\n    - id: host\n      type: System.String\n      description: \"\\n<p>A DNS-style domain name or IP address. </p>\\n\"\n    - id: port\n      type: System.Int32\n      description: \"\\n<p>An IP port number for the service. </p>\\n\"\n    - id: path\n      type: System.String\n      description: \"\\n<p>The path to the Internet resource. </p>\\n\"\n    - id: extraValue\n      type: System.String\n      description: \"\\n<p>A query string or fragment identifier. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>extraValue</em> is neither <strong>null</strong> nor <xref href=\\\"System.String.Empty\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, nor does a valid fragment identifier begin with a number sign (#), nor a valid query string begin with a question mark (?). </p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>port</em> is less than -1 or greater than 65,535. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: UriBuilder.UriBuilder(String, String, Int32, String, String)\n- uid: System.UriBuilder.#ctor(System.Uri)\n  commentId: M:System.UriBuilder.#ctor(System.Uri)\n  id: '#ctor(System.Uri)'\n  parent: System.UriBuilder\n  langs:\n  - csharp\n  - vb\n  name: UriBuilder(Uri)\n  fullName: System.UriBuilder.UriBuilder(System.Uri)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs\n    startLine: 577\n  assemblies:\n  - System.Runtime.Extensions\n  namespace: System\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.UriBuilder\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n  syntax:\n    content: public UriBuilder(Uri uri)\n    content.vb: Public Sub New(uri As Uri)\n    parameters:\n    - id: uri\n      type: System.Uri\n      description: \"\\n<p>An instance of the <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>uri</em> is <strong>null</strong>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: UriBuilder.UriBuilder(Uri)\n- uid: System.UriBuilder.Fragment\n  commentId: P:System.UriBuilder.Fragment\n  id: Fragment\n  parent: System.UriBuilder\n  langs:\n  - csharp\n  - vb\n  name: Fragment\n  fullName: System.UriBuilder.Fragment\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Fragment\n    path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs\n    startLine: 578\n  assemblies:\n  - System.Runtime.Extensions\n  namespace: System\n  summary: \"\\n<p>Gets or sets the fragment portion of the URI.</p>\\n\"\n  syntax:\n    content: public string Fragment { get; set; }\n    content.vb: Public Property Fragment As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The fragment portion of the URI. The fragment identifier (\\\"#\\\") is added to the beginning of the fragment.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: UriBuilder.Fragment\n- uid: System.UriBuilder.Host\n  commentId: P:System.UriBuilder.Host\n  id: Host\n  parent: System.UriBuilder\n  langs:\n  - csharp\n  - vb\n  name: Host\n  fullName: System.UriBuilder.Host\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Host\n    path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs\n    startLine: 579\n  assemblies:\n  - System.Runtime.Extensions\n  namespace: System\n  summary: \"\\n<p>Gets or sets the Domain Name System (DNS) host name or IP address of a server.</p>\\n\"\n  syntax:\n    content: public string Host { get; set; }\n    content.vb: Public Property Host As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The DNS host name or IP address of the server.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: UriBuilder.Host\n- uid: System.UriBuilder.Password\n  commentId: P:System.UriBuilder.Password\n  id: Password\n  parent: System.UriBuilder\n  langs:\n  - csharp\n  - vb\n  name: Password\n  fullName: System.UriBuilder.Password\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Password\n    path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs\n    startLine: 580\n  assemblies:\n  - System.Runtime.Extensions\n  namespace: System\n  summary: \"\\n<p>Gets or sets the password associated with the user that accesses the URI.</p>\\n\"\n  syntax:\n    content: public string Password { get; set; }\n    content.vb: Public Property Password As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The password of the user that accesses the URI.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: UriBuilder.Password\n- uid: System.UriBuilder.Path\n  commentId: P:System.UriBuilder.Path\n  id: Path\n  parent: System.UriBuilder\n  langs:\n  - csharp\n  - vb\n  name: Path\n  fullName: System.UriBuilder.Path\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Path\n    path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs\n    startLine: 581\n  assemblies:\n  - System.Runtime.Extensions\n  namespace: System\n  summary: \"\\n<p>Gets or sets the path to the resource referenced by the URI.</p>\\n\"\n  syntax:\n    content: public string Path { get; set; }\n    content.vb: Public Property Path As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The path to the resource referenced by the URI.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: UriBuilder.Path\n- uid: System.UriBuilder.Port\n  commentId: P:System.UriBuilder.Port\n  id: Port\n  parent: System.UriBuilder\n  langs:\n  - csharp\n  - vb\n  name: Port\n  fullName: System.UriBuilder.Port\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Port\n    path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs\n    startLine: 582\n  assemblies:\n  - System.Runtime.Extensions\n  namespace: System\n  summary: \"\\n<p>Gets or sets the port number of the URI.</p>\\n\"\n  syntax:\n    content: public int Port { get; set; }\n    content.vb: Public Property Port As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The port number of the URI.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The port cannot be set to a value less than -1 or greater than 65,535. </p>\\n\"\n  seealso:\n  - type: System.Uri\n    commentId: T:System.Uri\n  - type: System.UriBuilder.Scheme\n    commentId: P:System.UriBuilder.Scheme\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: UriBuilder.Port\n- uid: System.UriBuilder.Query\n  commentId: P:System.UriBuilder.Query\n  id: Query\n  parent: System.UriBuilder\n  langs:\n  - csharp\n  - vb\n  name: Query\n  fullName: System.UriBuilder.Query\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Query\n    path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs\n    startLine: 583\n  assemblies:\n  - System.Runtime.Extensions\n  namespace: System\n  summary: \"\\n<p>Gets or sets any query information included in the URI.</p>\\n\"\n  syntax:\n    content: public string Query { get; set; }\n    content.vb: Public Property Query As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The query information included in the URI.</p>\\n\"\n  seealso:\n  - type: System.Uri\n    commentId: T:System.Uri\n  - type: System.Uri.Query\n    commentId: P:System.Uri.Query\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: UriBuilder.Query\n- uid: System.UriBuilder.Scheme\n  commentId: P:System.UriBuilder.Scheme\n  id: Scheme\n  parent: System.UriBuilder\n  langs:\n  - csharp\n  - vb\n  name: Scheme\n  fullName: System.UriBuilder.Scheme\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Scheme\n    path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs\n    startLine: 584\n  assemblies:\n  - System.Runtime.Extensions\n  namespace: System\n  summary: \"\\n<p>Gets or sets the scheme name of the URI.</p>\\n\"\n  syntax:\n    content: public string Scheme { get; set; }\n    content.vb: Public Property Scheme As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The scheme of the URI.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The scheme cannot be set to an invalid scheme name. </p>\\n\"\n  seealso:\n  - type: System.Uri\n    commentId: T:System.Uri\n  - type: System.Uri.Scheme\n    commentId: P:System.Uri.Scheme\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: UriBuilder.Scheme\n- uid: System.UriBuilder.Uri\n  commentId: P:System.UriBuilder.Uri\n  id: Uri\n  parent: System.UriBuilder\n  langs:\n  - csharp\n  - vb\n  name: Uri\n  fullName: System.UriBuilder.Uri\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Uri\n    path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs\n    startLine: 585\n  assemblies:\n  - System.Runtime.Extensions\n  namespace: System\n  summary: \"\\n<p>Gets the <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance constructed by the specified <xref href=\\\"System.UriBuilder\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n  syntax:\n    content: public Uri Uri { get; }\n    content.vb: Public ReadOnly Property Uri As Uri\n    parameters: []\n    return:\n      type: System.Uri\n      description: \"\\n<p>A <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the URI constructed by the <xref href=\\\"System.UriBuilder\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.UriFormatException\n    commentId: T:System.UriFormatException\n    description: \"\\n<p>In the <see href=\\\"http://go.microsoft.com/fwlink/?LinkID=247912\\\">.NET for Windows Store apps</see> or the Portable Class Library, catch the base class exception, <xref href=\\\"System.FormatException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, instead.</p>\\n<p>The URI constructed by the <xref href=\\\"System.UriBuilder\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> properties is invalid. </p>\\n\"\n  seealso:\n  - type: System.Uri\n    commentId: T:System.Uri\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: UriBuilder.Uri\n- uid: System.UriBuilder.UserName\n  commentId: P:System.UriBuilder.UserName\n  id: UserName\n  parent: System.UriBuilder\n  langs:\n  - csharp\n  - vb\n  name: UserName\n  fullName: System.UriBuilder.UserName\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: UserName\n    path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs\n    startLine: 586\n  assemblies:\n  - System.Runtime.Extensions\n  namespace: System\n  summary: \"\\n<p>The user name associated with the user that accesses the URI.</p>\\n\"\n  syntax:\n    content: public string UserName { get; set; }\n    content.vb: Public Property UserName As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The user name of the user that accesses the URI.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: UriBuilder.UserName\n- uid: System.UriBuilder.Equals(System.Object)\n  commentId: M:System.UriBuilder.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.UriBuilder\n  langs:\n  - csharp\n  - vb\n  name: Equals(Object)\n  fullName: System.UriBuilder.Equals(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Equals\n    path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs\n    startLine: 587\n  assemblies:\n  - System.Runtime.Extensions\n  namespace: System\n  summary: \"\\n<p>Compares an existing <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance with the contents of the <xref href=\\\"System.UriBuilder\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for equality.</p>\\n\"\n  syntax:\n    content: public override bool Equals(object rparam)\n    content.vb: Public Overrides Function Equals(rparam As Object) As Boolean\n    parameters:\n    - id: rparam\n      type: System.Object\n      description: \"\\n<p>The object to compare with the current instance. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if <em>rparam</em> represents the same <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> as the <xref href=\\\"System.Uri\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> constructed by this <xref href=\\\"System.UriBuilder\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance; otherwise, <strong>false</strong>.</p>\\n\"\n  overridden: System.Object.Equals(System.Object)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: UriBuilder.Equals(Object)\n- uid: System.UriBuilder.GetHashCode\n  commentId: M:System.UriBuilder.GetHashCode\n  id: GetHashCode\n  parent: System.UriBuilder\n  langs:\n  - csharp\n  - vb\n  name: GetHashCode()\n  fullName: System.UriBuilder.GetHashCode()\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetHashCode\n    path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs\n    startLine: 588\n  assemblies:\n  - System.Runtime.Extensions\n  namespace: System\n  summary: \"\\n<p>Returns the hash code for the URI.</p>\\n\"\n  syntax:\n    content: public override int GetHashCode()\n    content.vb: Public Overrides Function GetHashCode As Integer\n    return:\n      type: System.Int32\n      description: \"\\n<p>The hash code generated for the URI.</p>\\n\"\n  overridden: System.Object.GetHashCode\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: UriBuilder.GetHashCode()\n- uid: System.UriBuilder.ToString\n  commentId: M:System.UriBuilder.ToString\n  id: ToString\n  parent: System.UriBuilder\n  langs:\n  - csharp\n  - vb\n  name: ToString()\n  fullName: System.UriBuilder.ToString()\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ToString\n    path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs\n    startLine: 589\n  assemblies:\n  - System.Runtime.Extensions\n  namespace: System\n  summary: \"\\n<p>Returns the display string for the specified <xref href=\\\"System.UriBuilder\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n  syntax:\n    content: public override string ToString()\n    content.vb: Public Overrides Function ToString As String\n    return:\n      type: System.String\n      description: \"\\n<p>The string that contains the unescaped display string of the <xref href=\\\"System.UriBuilder\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p></p>\\n\"\n  overridden: System.Object.ToString\n  exceptions:\n  - type: System.UriFormatException\n    commentId: T:System.UriFormatException\n    description: \"\\n<p>In the <see href=\\\"http://go.microsoft.com/fwlink/?LinkID=247912\\\">.NET for Windows Store apps</see> or the Portable Class Library, catch the base class exception, <xref href=\\\"System.FormatException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, instead.</p>\\n<p>The <xref href=\\\"System.UriBuilder\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance has a bad password. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: UriBuilder.ToString()\nreferences:\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  commentId: T:System.Int32\n  nameWithType: Int32\n- uid: System.Uri\n  parent: System\n  isExternal: false\n  name: Uri\n  fullName: System.Uri\n  commentId: T:System.Uri\n  nameWithType: Uri\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.UriFormatException\n  isExternal: false\n  name: UriFormatException\n  fullName: System.UriFormatException\n  nameWithType: UriFormatException\n  commentId: T:System.UriFormatException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  commentId: T:System.ArgumentOutOfRangeException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n"}